[
    {
        "question_id": 2,
        "db_id": "movie_platform",
        "question": "State the most popular movie? When was it released and who is the director for the movie?",
        "evidence": "most popular movie refers to MAX(movie_popularity); when it was released refers to movie_release_year; director for the movie refers to director_name;",
        "question_th": "ระบุภาพยนตร์ยอดนิยมที่สุด? ออกฉายเมื่อไหร่ และใครเป็นผู้กำกับภาพยนตร์เรื่องนี้?",
        "evidence_th": "ภาพยนตร์ยอดนิยมหมายถึง MAX(movie_popularity); เมื่อเปิดตัวหมายถึง movie_release_year; ผู้กำกับภาพยนตร์หมายถึง Director_name;",
        "SQL": "SELECT movie_title, movie_release_year, director_name FROM movies ORDER BY movie_popularity DESC LIMIT 1 ",
        "table": "['movies']"
    },
    {
        "question_id": 13,
        "db_id": "movie_platform",
        "question": "For all movies where users left a critic, find the movie name, user, rating and critics comments from the user.",
        "evidence": "movies where users left a critic refers to critic IS NOT NULL; critic comments refers to critic;",
        "question_th": "สำหรับภาพยนตร์ทั้งหมดที่ผู้ใช้วิจารณ์ ให้ค้นหาชื่อภาพยนตร์ ผู้ใช้ การให้คะแนน และความคิดเห็นวิจารณ์จากผู้ใช้",
        "evidence_th": "ภาพยนตร์ที่ผู้ใช้ปล่อยให้นักวิจารณ์หมายถึงนักวิจารณ์นั้นไม่เป็นโมฆะ; ความคิดเห็นของนักวิจารณ์หมายถึงนักวิจารณ์",
        "SQL": "SELECT T2.movie_title, T1.user_id, T1.rating_score, T1.critic FROM ratings AS T1 INNER JOIN movies AS T2 ON T1.movie_id = T2.movie_id WHERE T1.critic IS NOT NULL",
        "table": "['movies', 'ratings']"
    },
    {
        "question_id": 22,
        "db_id": "movie_platform",
        "question": "When was the first movie released and who directed it?",
        "evidence": "first movie refers to oldest movie_release_year;",
        "question_th": "ภาพยนตร์เรื่องแรกออกฉายเมื่อใดและใครกำกับ?",
        "evidence_th": "ภาพยนตร์เรื่องแรกหมายถึง movie_release_year ที่เก่าแก่ที่สุด",
        "SQL": "SELECT movie_release_year, director_name FROM movies WHERE movie_release_year IS NOT NULL ORDER BY movie_release_year ASC LIMIT 1",
        "table": "['movies']"
    },
    {
        "question_id": 27,
        "db_id": "movie_platform",
        "question": "What is the URL to the movie director page on Mubi of the director whose movie was critic by user 2452551 and was given 39 likes?",
        "evidence": "URL to the movie director page on Mubi refers to director_url; likes refers to critic_likes; critic_likes = 39;",
        "question_th": "URL ไปยังหน้าผู้กำกับภาพยนตร์บน Mubi ของผู้กำกับที่ภาพยนตร์ถูกวิจารณ์โดยผู้ใช้ 2452551 และได้รับการกดไลค์ 39 ครั้งคืออะไร",
        "evidence_th": "URL ไปยังหน้าผู้กำกับภาพยนตร์บน Mubi หมายถึง Director_url ไลค์หมายถึง critic_likes; นักวิจารณ์ = 39;",
        "SQL": "SELECT T2.director_url FROM ratings AS T1 INNER JOIN movies AS T2 ON T1.movie_id = T2.movie_id WHERE T1.user_id = 2452551 AND T1.critic_likes = 39",
        "table": "['movies', 'ratings']"
    },
    {
        "question_id": 43,
        "db_id": "movie_platform",
        "question": "How many likes did the critic of the movie \"Apocalypse Now\" received after giving the movie a rating score of 5?",
        "evidence": "Apocalypse Now refer to movie_title; rating score refer to rating_score = '5';likes received refers to critic_likes\n",
        "question_th": "นักวิจารณ์หนัง Apocalypse Now ได้รับไลค์กี่ไลค์ หลังให้คะแนนหนัง 5 คะแนน?",
        "evidence_th": "Apocalypse Now อ้างถึง movie_title; คะแนนการให้คะแนนอ้างอิงถึง rating_score = '5';จำนวนไลค์ที่ได้รับหมายถึง critic_likes\n",
        "SQL": "SELECT T2.critic_likes FROM movies AS T1 INNER JOIN ratings AS T2 ON T1.movie_id = T2.movie_id WHERE T2.user_trialist = 0 AND T2.rating_score = 5 AND T1.movie_title = 'Apocalypse Now'",
        "table": "['movies', 'ratings']"
    },
    {
        "question_id": 64,
        "db_id": "movie_platform",
        "question": "When did the creator of the list \"250 Favourite Films\" last updated a movie list?",
        "evidence": "250 Favourite Films refers to list_title; last update refers to list_update_date_utc;",
        "question_th": "ผู้สร้างรายการ \"250 ภาพยนตร์โปรด\" อัพเดตรายการภาพยนตร์ครั้งล่าสุดเมื่อใด",
        "evidence_th": "250 ภาพยนตร์โปรดหมายถึง list_title; การอัปเดตครั้งล่าสุดอ้างถึง list_update_date_utc;",
        "SQL": "SELECT T2.list_update_date_utc FROM lists AS T1 INNER JOIN lists_users AS T2 ON T1.list_id = T2.list_id AND T1.user_id = T2.user_id WHERE T1.list_title = '250 Favourite Films' ORDER BY T2.list_update_date_utc DESC LIMIT 1",
        "table": "['lists', 'lists_users']"
    },
    {
        "question_id": 80,
        "db_id": "movie_platform",
        "question": "What's of rating on the movie \"Innocence Unprotected\" by the user who created the movie list \"250 Favourite Films\"?",
        "evidence": "Innocence Unprotected' is movie_title; '250 Favourite Films' is list_title; rating refers to rating_score;",
        "question_th": "ผู้ใช้ที่สร้างรายชื่อภาพยนตร์ \"250 เรื่องโปรด\" ให้คะแนนภาพยนตร์เรื่อง \"Innocence Unprotected\" เท่าไร?",
        "evidence_th": "Innocence Unprotected' คือ movie_title; '250 ภาพยนตร์โปรด' คือ list_title; การให้คะแนนหมายถึง rating_score;",
        "SQL": "SELECT T1.rating_score FROM ratings AS T1 INNER JOIN movies AS T2 ON T1.movie_id = T2.movie_id INNER JOIN lists AS T3 ON T3.user_id = T1.user_id WHERE T2.movie_title = 'Innocence Unprotected' AND T3.list_title = '250 Favourite Films'",
        "table": "['lists', 'movies', 'ratings']"
    },
    {
        "question_id": 83,
        "db_id": "movie_platform",
        "question": "What's the percentage of the users who have rated \"1\" on the movie \"When Will I Be Loved\"?",
        "evidence": "When Will I Be Loved' is movie_title; rated 1 refers to rating_score = 1; percentage = Divide(Count(rating_id where rating_score = 1),Count(rating_id)) *100;",
        "question_th": "เปอร์เซ็นต์ของผู้ใช้ที่ให้คะแนน \"1\" ในภาพยนตร์เรื่อง \"When Will I Be Loved\" คือเท่าใด",
        "evidence_th": "When Will I Be Loved' คือ movie_title; จัดอันดับ 1 หมายถึง rating_score = 1; เปอร์เซ็นต์ = หาร(นับ(rating_id โดยที่ rating_score = 1),นับ(rating_id)) *100;",
        "SQL": "SELECT CAST(SUM(CASE WHEN T1.rating_score = 1 THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(*) FROM ratings AS T1 INNER JOIN movies AS T2 ON T1.movie_id = T2.movie_id WHERE T2.movie_title = 'When Will I Be Loved'",
        "table": "['movies', 'ratings']"
    },
    {
        "question_id": 89,
        "db_id": "movie_platform",
        "question": "Which of the films directed by Álex de la Iclesia is the most popular among Mubi users?",
        "evidence": "Alex de la Iclesia is the director name; the most popular refers to Max(movie_popularity); films refers to movies;",
        "question_th": "ภาพยนตร์เรื่องใดที่กำกับโดย Álex de la Iclesia ที่ได้รับความนิยมมากที่สุดในหมู่ผู้ใช้ Mubi",
        "evidence_th": "Alex de la Iclesia เป็นชื่อผู้กำกับ ความนิยมสูงสุดหมายถึง Max(movie_popularity); ภาพยนตร์หมายถึงภาพยนตร์",
        "SQL": "SELECT movie_title FROM movies WHERE director_name = 'Åke Sandgren' ORDER BY movie_popularity DESC LIMIT 1",
        "table": "['movies']"
    },
    {
        "question_id": 95,
        "db_id": "movie_platform",
        "question": "Please list the names of the top three movies in the number of likes related to the critic made by the user rating the movie.",
        "evidence": "likes related to the critic made by the user rating the movie refers to critic_likes; top refers to Max(critic_likes);",
        "question_th": "โปรดระบุชื่อภาพยนตร์สามอันดับแรกตามจำนวนการถูกใจที่เกี่ยวข้องกับการวิจารณ์โดยผู้ใช้ให้คะแนนภาพยนตร์",
        "evidence_th": "ชอบที่เกี่ยวข้องกับนักวิจารณ์ที่ทำโดยการให้คะแนนของผู้ใช้ภาพยนตร์หมายถึง critic_likes; ด้านบนหมายถึงแม็กซ์ (critic_likes);",
        "SQL": "SELECT T2.movie_title FROM ratings AS T1 INNER JOIN movies AS T2 ON T1.movie_id = T2.movie_id ORDER BY T1.critic_likes DESC LIMIT 3",
        "table": "['movies', 'ratings']"
    },
    {
        "question_id": 120,
        "db_id": "movie_platform",
        "question": "What's the number of users gave the movie \"Downfall\" a rating of \"4\"?",
        "evidence": "movie \"Downfall\" refers to movie_title = 'Downfall'; rating of \"4\" refers to rating_score = 4",
        "question_th": "ผู้ใช้ให้คะแนนภาพยนตร์เรื่อง \"Downfall\" ที่ \"4\" จำนวนเท่าใด",
        "evidence_th": "ภาพยนตร์เรื่อง \"Downfall\" หมายถึง movie_title = 'Downfall'; การให้คะแนน \"4\" หมายถึง rating_score = 4",
        "SQL": "SELECT COUNT(T1.user_id) FROM ratings AS T1 INNER JOIN movies AS T2 ON T1.movie_id = T2.movie_id WHERE T2.movie_title = 'Downfall' AND T1.rating_score = 4",
        "table": "['movies', 'ratings']"
    },
    {
        "question_id": 123,
        "db_id": "movie_platform",
        "question": "Show the avatar of the user who gave the rating at 2019/10/17 1:36:36.",
        "evidence": "at 2019/10/17 1:36:36 refers to rating_timestamp_utc = '2019/10/17 1:36:36'; avatar of the user refers to user_avatar_image_url\n\n",
        "question_th": "แสดงอวตารของผู้ใช้ที่ให้คะแนนเมื่อ 2019/10/17 1:36:36",
        "evidence_th": "ที่ 10/2019/17 1:36:36 อ้างถึง rating_timestamp_utc = '2019/10/17 1:36:36'; อวตารของผู้ใช้อ้างอิงถึง user_avatar_image_url\n\n",
        "SQL": "SELECT T2.user_avatar_image_url FROM ratings AS T1 INNER JOIN lists_users AS T2 ON T1.user_id = T2.user_id WHERE T1.rating_timestamp_utc LIKE '2019-10-17 01:36:36'",
        "table": "['lists_users', 'ratings']"
    },
    {
        "question_id": 134,
        "db_id": "movie_platform",
        "question": "Which 1988 movie got the most ratings?",
        "evidence": "1988 movie refers to movie_release_year = '1998'; most ratings refers to MAX(rating_score)",
        "question_th": "ภาพยนตร์ปี 1988 เรื่องใดได้รับเรตติ้งมากที่สุด?",
        "evidence_th": "ภาพยนตร์ปี 1988 อ้างถึง movie_release_year = '1998'; การให้คะแนนส่วนใหญ่หมายถึง MAX(rating_score)",
        "SQL": "SELECT T2.movie_title FROM ratings AS T1 INNER JOIN movies AS T2 ON T1.movie_id = T2.movie_id WHERE T2.movie_release_year = 1988 ORDER BY T1.rating_score DESC LIMIT 1",
        "table": "['movies', 'ratings']"
    },
    {
        "question_id": 147,
        "db_id": "movie_platform",
        "question": "Which title list has not been updated for the longest period of time? State how long it has not been updated?",
        "evidence": "not been updated for the longest period of time refers to MIN(list_update_timestamp_utc); how long it has not been updated refers to SUBTRACT(CURRENT_TIMESTAMP, list_update_timestamp_utc)",
        "question_th": "รายการชื่อเรื่องใดที่ไม่ได้รับการอัปเดตเป็นระยะเวลานานที่สุด? ระบุว่าไม่ได้อัพเดตมานานเท่าไรแล้ว?",
        "evidence_th": "ไม่ได้รับการอัปเดตเป็นระยะเวลานานที่สุด หมายถึง MIN(list_update_timestamp_utc); นานแค่ไหนที่ไม่ได้รับการอัปเดตหมายถึง SUBTRACT (CURRENT_TIMESTAMP, list_update_timestamp_utc)",
        "SQL": "SELECT list_title , datetime(CURRENT_TIMESTAMP, 'localtime') - datetime(list_update_timestamp_utc) FROM lists ORDER BY list_update_timestamp_utc LIMIT 1",
        "table": "['lists']"
    },
    {
        "question_id": 148,
        "db_id": "movie_platform",
        "question": "Who is the user who created the list titled 'Sound and Vision'? Was he a subcriber when he created the list?",
        "evidence": "list titled 'Sound and Vision' refers to list_title = 'Sound and Vision'; user_subscriber = 1 means the user was a subscriber when he rated the movie; user_subscriber = 0 means the user was not a subscriber when he rated the movie\n\n\n\n",
        "question_th": "ผู้ใช้ที่สร้างรายการชื่อ 'Sound and Vision' คือใคร? เขาเป็นสมาชิกเมื่อเขาสร้างรายการหรือไม่?",
        "evidence_th": "รายการชื่อ 'เสียงและการมองเห็น' หมายถึง list_title = 'เสียงและการมองเห็น'; user_subscriber = 1 หมายถึงผู้ใช้เป็นสมาชิกเมื่อเขาให้คะแนนภาพยนตร์ user_subscriber = 0 หมายความว่าผู้ใช้ไม่ใช่สมาชิกเมื่อเขาให้คะแนนภาพยนตร์\n\n\n\n",
        "SQL": "SELECT T1.user_id, T1.user_subscriber FROM lists_users AS T1 INNER JOIN lists AS T2 ON T1.list_id = T2.list_id WHERE T2.list_title LIKE 'Sound and Vision'",
        "table": "['lists', 'lists_users']"
    },
    {
        "question_id": 151,
        "db_id": "movie_platform",
        "question": "List all movies rated by user 39115684. State the title, rating date and rating score.",
        "evidence": "user 39115684 refers to user_id = 39115684; title refers to movie_title; rating date refers to rating_timestamp_utc\n",
        "question_th": "รายชื่อภาพยนตร์ทั้งหมดที่ได้รับการจัดอันดับโดยผู้ใช้ 39115684 ระบุชื่อเรื่อง วันที่จัดเรต และคะแนนเรตติ้ง",
        "evidence_th": "ผู้ใช้ 39115684 อ้างถึง user_id = 39115684; ชื่อหมายถึง movie_title; วันที่ให้คะแนนอ้างอิงถึง rating_timestamp_utc\n",
        "SQL": "SELECT T2.movie_title, T1.rating_timestamp_utc, T1.rating_score FROM ratings AS T1 INNER JOIN movies AS T2 ON T1.movie_id = T2.movie_id WHERE T1.user_id = 39115684",
        "table": "['movies', 'ratings']"
    },
    {
        "question_id": 165,
        "db_id": "movie_platform",
        "question": "Who is the director of the most popular movie of all time and when was it released? Indicate the average rating score of the users who were on a trialist when they rated the movie.",
        "evidence": "most popular movie of all time refers to MAX(movie_popularity); a trialist refers to user_trialist = 1; average rating score = AVG(rating_score)",
        "question_th": "ใครคือผู้กำกับภาพยนตร์ที่ได้รับความนิยมสูงสุดตลอดกาลและออกฉายเมื่อใด? ระบุคะแนนเฉลี่ยของผู้ใช้ที่อยู่ในการพิจารณาคดีเมื่อพวกเขาให้คะแนนภาพยนตร์",
        "evidence_th": "ภาพยนตร์ยอดนิยมตลอดกาลหมายถึง MAX(movie_popularity); ผู้ทดลองใช้หมายถึง user_trialist = 1; คะแนนเรตติ้งเฉลี่ย = AVG(rating_score)",
        "SQL": "SELECT T1.director_name, T1.movie_release_year , SUM(T2.rating_score) / COUNT(T2.user_id) FROM movies AS T1 INNER JOIN ratings AS T2 ON T1.movie_id = T2.movie_id WHERE T2.user_trialist = 1 ORDER BY T1.movie_popularity DESC LIMIT 1",
        "table": "['movies', 'ratings']"
    },
    {
        "question_id": 172,
        "db_id": "book_publishing_company",
        "question": "State the title and royalty percentage for title ID BU2075 between 10000 to 50000 range.",
        "evidence": "lorange mean low range; hirange mean high range; range refers to between the low and high range; lorange>10000; hirange<12000",
        "question_th": "ระบุเปอร์เซ็นต์ชื่อและค่าลิขสิทธิ์สำหรับ ID ชื่อ BU2075 ระหว่างช่วง 10,000 ถึง 50,000",
        "evidence_th": "lorange หมายถึง ช่วงต่ำ; hirange หมายถึง ช่วงสูง; พิสัยหมายถึงระหว่างพิสัยต่ำและสูง ส้ม>10,000; จ้าง<12000",
        "SQL": "SELECT T1.title, T2.royalty FROM titles AS T1 INNER JOIN roysched AS T2 ON T1.title_id = T2.title_id WHERE T2.lorange > 10000 AND T2.hirange < 50000 AND T1.title_ID = 'BU2075'",
        "table": "['roysched', 'titles']"
    },
    {
        "question_id": 178,
        "db_id": "book_publishing_company",
        "question": "Name the store with the highest quantity in sales? What is the least quantity title from the store's sale?",
        "evidence": "qty is abbreviation for quantity; highest quantity refers to MAX(qty); least quantity refers to MIN(qty)",
        "question_th": "ตั้งชื่อร้านที่มียอดขายสูงสุด? ชื่อที่มีปริมาณน้อยที่สุดจากการขายของร้านค้าคืออะไร?",
        "evidence_th": "จำนวนเป็นตัวย่อสำหรับปริมาณ ปริมาณสูงสุดหมายถึง MAX(qty); ปริมาณน้อยที่สุดหมายถึง MIN(qty)",
        "SQL": "SELECT T3.stor_id, T2.title FROM sales AS T1 INNER JOIN titles AS T2 ON T1.title_id = T2.title_id INNER JOIN stores AS T3 ON T3.stor_id = T1.stor_id WHERE T3.stor_id = ( SELECT stor_id FROM sales GROUP BY stor_id ORDER BY SUM(qty) DESC LIMIT 1 ) GROUP BY T3.stor_id, T2.title ORDER BY SUM(T1.qty) ASC LIMIT 1",
        "table": "['sales', 'stores', 'titles']"
    },
    {
        "question_id": 185,
        "db_id": "book_publishing_company",
        "question": "List all employees who are at the maximum level in their job designation.",
        "evidence": "maximum level in their job designation refers to job_lvl = MAX(max_lvl)",
        "question_th": "รายชื่อพนักงานทั้งหมดที่อยู่ในระดับสูงสุดในการแต่งตั้งงาน",
        "evidence_th": "ระดับสูงสุดในการระบุตำแหน่งงานหมายถึง job_lvl = MAX(max_lvl)",
        "SQL": "SELECT T1.fname, T1.lname FROM employee AS T1 INNER JOIN jobs AS T2 ON T1.job_id = T2.job_id WHERE T1.job_lvl = T2.max_lvl",
        "table": "['employee', 'jobs']"
    },
    {
        "question_id": 193,
        "db_id": "book_publishing_company",
        "question": "Name all the authors for all business titles.",
        "evidence": "business title refers to title under business where type = 'business'",
        "question_th": "ตั้งชื่อผู้แต่งทั้งหมดสำหรับชื่อธุรกิจทั้งหมด",
        "evidence_th": "ชื่อธุรกิจ หมายถึง ชื่อภายใต้ธุรกิจ โดยที่ type = 'ธุรกิจ'",
        "SQL": "SELECT T3.au_fname, T3.au_lname FROM titles AS T1 INNER JOIN titleauthor AS T2 ON T1.title_id = T2.title_id INNER JOIN authors AS T3 ON T2.au_id = T3.au_id WHERE T1.type = 'business'",
        "table": "['authors', 'titleauthor', 'titles']"
    },
    {
        "question_id": 200,
        "db_id": "book_publishing_company",
        "question": "What is the publisher's information of New Moon Books?",
        "evidence": "publisher name refers to pub_name; New Moon Books is a publisher name",
        "question_th": "ข้อมูลของผู้จัดพิมพ์ New Moon Books คืออะไร?",
        "evidence_th": "ชื่อผู้จัดพิมพ์หมายถึง pub_name; New Moon Books เป็นชื่อผู้จัดพิมพ์",
        "SQL": "SELECT T1.pr_info FROM pub_info AS T1 INNER JOIN publishers AS T2 ON T1.pub_id = T2.pub_id WHERE T2.pub_name = 'New Moon Books'",
        "table": "['pub_info', 'publishers']"
    },
    {
        "question_id": 216,
        "db_id": "book_publishing_company",
        "question": "What's the royalty for the bestseller book?",
        "evidence": "qty is abbreviation for quantity; bestseller means with the most sales quantity; MAX(qty)",
        "question_th": "ค่าภาคหลวงสำหรับหนังสือขายดีคืออะไร?",
        "evidence_th": "จำนวนเป็นตัวย่อสำหรับปริมาณ สินค้าขายดี หมายถึง มีปริมาณการขายมากที่สุด สูงสุด(จำนวน)",
        "SQL": "SELECT royalty FROM titles ORDER BY ytd_sales DESC LIMIT 1",
        "table": "['titles']"
    },
    {
        "question_id": 232,
        "db_id": "book_publishing_company",
        "question": "Which titles has above average royalty rate? Give those title's name, type and price?",
        "evidence": "average royalty rate = DIVIDE(SUM(royalty), COUNT(title_id))",
        "question_th": "ชื่อเรื่องใดบ้างที่มีอัตราค่าลิขสิทธิ์สูงกว่าค่าเฉลี่ย? ระบุชื่อ ประเภท และราคา?",
        "evidence_th": "อัตราค่าลิขสิทธิ์เฉลี่ย = DIVIDE(SUM(royalty), COUNT(title_id))",
        "SQL": "SELECT DISTINCT T1.title, T1.type, T1.price FROM titles AS T1 INNER JOIN roysched AS T2 ON T1.title_id = T2.title_id WHERE T2.royalty > ( SELECT CAST(SUM(royalty) AS REAL) / COUNT(title_id) FROM roysched )",
        "table": "['roysched', 'titles']"
    },
    {
        "question_id": 250,
        "db_id": "retail_complains",
        "question": "For how long did the complaint filed on 2017/3/27 by Rachel Hicks last?",
        "evidence": "how long did the complaint filed last refers to ser_time; on 2017/3/27 refers to \"Date received\" = '2017-03-27';",
        "question_th": "คำร้องเรียนที่ Rachel Hicks ยื่นเรื่องร้องเรียนเมื่อวันที่ 3/27/2017 ใช้เวลานานเท่าใด",
        "evidence_th": "การร้องเรียนที่ยื่นครั้งล่าสุดอ้างถึง ser_time นานแค่ไหน ในวันที่ 27/03/2017 หมายถึง \"วันที่ได้รับ\" = '2017-03-27';",
        "SQL": "SELECT T2.ser_time FROM client AS T1 INNER JOIN callcenterlogs AS T2 ON T1.client_id = T2.`rand client` WHERE T1.first = 'Rachel' AND T1.last = 'Hicks' AND T2.`Date received` = '2017-03-27'",
        "table": "['callcenterlogs', 'client']"
    },
    {
        "question_id": 252,
        "db_id": "retail_complains",
        "question": "Please list the full names of all the clients whose complaints are still in progress.",
        "evidence": "full name = first, middle, last; complaints are still in progress refers to \"Company response to consumer\" = 'In progress';",
        "question_th": "โปรดระบุชื่อเต็มของลูกค้าทั้งหมดที่ยังมีข้อร้องเรียนอยู่",
        "evidence_th": "ชื่อเต็ม = ตัวแรก, กลาง, ท้าย; การร้องเรียนยังอยู่ในระหว่างดำเนินการ หมายถึง \"การตอบสนองของบริษัทต่อผู้บริโภค\" = 'อยู่ระหว่างดำเนินการ';",
        "SQL": "SELECT T1.first, T1.middle, T1.last FROM client AS T1 INNER JOIN events AS T2 ON T1.client_id = T2.Client_ID WHERE T2.`Company response to consumer` = 'In progress'",
        "table": "['client', 'events']"
    },
    {
        "question_id": 260,
        "db_id": "retail_complains",
        "question": "Which state does the owner of \"wyatt.collins@gmail.com\" live in? Give the full name of the state.",
        "evidence": "full name of the state refers to state_name;",
        "question_th": "เจ้าของ \"wyatt.collins@gmail.com\" อาศัยอยู่ในรัฐใด ให้ชื่อเต็มของรัฐ",
        "evidence_th": "ชื่อเต็มของรัฐหมายถึง state_name;",
        "SQL": "SELECT T1.state FROM client AS T1 INNER JOIN district AS T2 ON T1.district_id = T2.district_id WHERE T1.email = 'wyatt.collins@gmail.com'",
        "table": "['client', 'district']"
    },
    {
        "question_id": 262,
        "db_id": "retail_complains",
        "question": "What was the detailed issue did Mr Gunner Omer Fuller complain about?",
        "evidence": "detailed issue refers to Sub-issue; Mr refers to sex = 'Male';",
        "question_th": "คุณกันเนอร์ โอเมอร์ ฟุลเลอร์ บ่นเกี่ยวกับปัญหาโดยละเอียดอย่างไร",
        "evidence_th": "ปัญหาโดยละเอียดหมายถึงปัญหาย่อย นายหมายถึงเพศ = 'ชาย';",
        "SQL": "SELECT T2.`Sub-issue` FROM client AS T1 INNER JOIN events AS T2 ON T1.client_id = T2.Client_ID WHERE T1.first = 'Gunner' AND T1.middle = 'Omer' AND T1.last = 'Fuller' AND T1.sex = 'Male'",
        "table": "['client', 'events']"
    },
    {
        "question_id": 267,
        "db_id": "retail_complains",
        "question": "Which product received a review from Indianapolis on 2016/10/7?",
        "evidence": "Indianapolis refers to state = 'Indianapolis'; on 2016/10/7 refers to Date = '2013-04-04';",
        "question_th": "ผลิตภัณฑ์ใดที่ได้รับรีวิวจาก Indianapolis เมื่อวันที่ 7/10/2559?",
        "evidence_th": "อินเดียแนโพลิสหมายถึงรัฐ = 'อินเดียแนโพลิส'; ในวันที่ 7/10/2559 หมายถึง Date = '2013-04-04';",
        "SQL": "SELECT T1.Product FROM reviews AS T1 INNER JOIN district AS T2 ON T1.district_id = T2.district_id WHERE T2.city = 'Indianapolis' AND T1.Date = '2016-10-07'",
        "table": "['district', 'reviews']"
    },
    {
        "question_id": 279,
        "db_id": "retail_complains",
        "question": "List the full name and phone number of clients who submitted the complaint via fax.",
        "evidence": "full name = first, middle, last; submitted the complaint via fax refers to \"Submitted via\" = 'fax';",
        "question_th": "ระบุชื่อนามสกุลและหมายเลขโทรศัพท์ของลูกค้าที่ยื่นเรื่องร้องเรียนทางแฟกซ์",
        "evidence_th": "ชื่อเต็ม = ตัวแรก, กลาง, ท้าย; ส่งเรื่องร้องเรียนทางแฟกซ์ หมายถึง \"ส่งผ่าน\" = 'แฟกซ์';",
        "SQL": "SELECT T1.first, T1.middle, T1.last, T1.phone FROM client AS T1 INNER JOIN events AS T2 ON T1.client_id = T2.Client_ID WHERE T2.`Submitted via` = 'Fax'",
        "table": "['client', 'events']"
    },
    {
        "question_id": 281,
        "db_id": "retail_complains",
        "question": "In the calls from the mountain division, how many are from teenage clients?",
        "evidence": "teenage refers to age BETWEEN 12 AND 20;",
        "question_th": "ในการโทรจากกองภูเขา มาจากลูกค้าวัยรุ่นกี่คน?",
        "evidence_th": "วัยรุ่น หมายถึง อายุระหว่าง 12 ถึง 20 ปี",
        "SQL": "SELECT COUNT(T1.age) FROM client AS T1 INNER JOIN district AS T2 ON T1.district_id = T2.district_id WHERE T1.age BETWEEN 12 AND 20 AND T2.division = 'Mountain'",
        "table": "['client', 'district']"
    },
    {
        "question_id": 306,
        "db_id": "retail_complains",
        "question": "How many complaints made by women and served after 3 pm received a timely response from the company?",
        "evidence": "women refers to sex = 'Female'; served after 3 pm refers to ser_time BETWEEN '15:00:01' AND '23:59:59'; received a timely response refers to \"Timely response?\" = 'Yes';",
        "question_th": "ผู้หญิงร้องเรียนและรับบริการหลัง 15.00 น. ได้รับการตอบกลับทันท่วงทีจากบริษัทกี่ราย?",
        "evidence_th": "ผู้หญิงหมายถึงเพศ = 'หญิง'; เสิร์ฟหลัง 15.00 น. หมายถึง ser_time BETWEEN '15:00:01' AND '23:59:59'; ได้รับการตอบกลับทันเวลา หมายถึง \"ตอบกลับทันเวลา?\" = 'ใช่';",
        "SQL": "SELECT COUNT(T1.`Complaint ID`) FROM callcenterlogs AS T1 INNER JOIN client AS T2 ON T1.`rand client` = T2.client_id INNER JOIN events AS T3 ON T1.`Complaint ID` = T3.`Complaint ID` WHERE T2.sex = 'Female' AND T1.ser_start BETWEEN '15:00:01' AND '23:59:59' AND T3.`Timely response?` = 'Yes'",
        "table": "[]"
    },
    {
        "question_id": 313,
        "db_id": "retail_complains",
        "question": "How many complaints from customers with a gmail.com email were received by the company in February 2017?",
        "evidence": "gmail.com email refers to email like '%gmail.com'; in February 2017 refers to \"Date received\" BETWEEN '2017-01-02' AND '2017-02-28';",
        "question_th": "บริษัท ได้รับการร้องเรียนจากลูกค้าเกี่ยวกับอีเมล gmail.com กี่ครั้งในเดือนกุมภาพันธ์ 2017",
        "evidence_th": "อีเมล gmail.com หมายถึงอีเมลเช่น '%gmail.com'; ในเดือนกุมภาพันธ์ 2017 หมายถึง \"วันที่ได้รับ\" ระหว่าง '2017-01-02' และ '2017-02-28';",
        "SQL": "SELECT COUNT(T1.email) FROM client AS T1 INNER JOIN callcenterlogs AS T2 ON T1.client_id = T2.`rand client` WHERE (T2.`Date received` LIKE '2017-02%' OR T2.`Date received` LIKE '2017-01%') AND T1.email LIKE '%@gmail.com'",
        "table": "['callcenterlogs', 'client']"
    },
    {
        "question_id": 316,
        "db_id": "retail_complains",
        "question": "What is the average age of Norwalk clients?",
        "evidence": "average age = AVG(age); Norwalk refers to city = 'Norwalk';",
        "question_th": "ลูกค้า Norwalk อายุเฉลี่ยคือเท่าใด",
        "evidence_th": "อายุเฉลี่ย = AVG(อายุ); Norwalk หมายถึงเมือง = 'Norwalk';",
        "SQL": "SELECT CAST(SUM(T1.age) AS REAL) / COUNT(T1.age) AS average FROM client AS T1 INNER JOIN district AS T2 ON T1.district_id = T2.district_id WHERE T2.city = 'Norwalk'",
        "table": "['client', 'district']"
    },
    {
        "question_id": 320,
        "db_id": "retail_complains",
        "question": "How did Kyran Muller submit his complaint?",
        "evidence": "how it was submitted refers to \"Submitted via\";",
        "question_th": "Kyran Muller ยื่นเรื่องร้องเรียนของเขาอย่างไร",
        "evidence_th": "วิธีการส่งหมายถึง \"ส่งผ่าน\";",
        "SQL": "SELECT DISTINCT T2.`Submitted via` FROM client AS T1 INNER JOIN events AS T2 ON T1.client_id = T2.Client_ID WHERE T1.first = 'Kyran' AND T1.last = 'Muller'",
        "table": "['client', 'events']"
    },
    {
        "question_id": 329,
        "db_id": "retail_complains",
        "question": "How many of the complaints are longer than 15 minutes?",
        "evidence": "longer than 15 minutes refers to ser_time > '00:15:00'",
        "question_th": "เกิน 15 นาที มีเรื่องร้องเรียนกี่เรื่อง?",
        "evidence_th": "นานกว่า 15 นาที หมายถึง ser_time > '00:15:00'",
        "SQL": "SELECT COUNT(ser_time) FROM callcenterlogs WHERE strftime('%M', ser_time) > '15'",
        "table": "['callcenterlogs']"
    },
    {
        "question_id": 330,
        "db_id": "retail_complains",
        "question": "What is the most common issue for the highest priority complaints?",
        "evidence": "most common refers to max(count(issue)); highest priority refers to priority = 2",
        "question_th": "ปัญหาที่พบบ่อยที่สุดสำหรับการร้องเรียนที่มีลำดับความสำคัญสูงสุดคืออะไร?",
        "evidence_th": "โดยทั่วไปหมายถึง max(count(issue)); ลำดับความสำคัญสูงสุดหมายถึงลำดับความสำคัญ = 2",
        "SQL": "SELECT T1.Issue FROM events AS T1 INNER JOIN callcenterlogs AS T2 ON T1.`Complaint ID` = T2.`Complaint ID` WHERE T2.priority = 2 GROUP BY T1.Issue ORDER BY COUNT(T1.Issue) DESC LIMIT 1",
        "table": "['callcenterlogs', 'events']"
    },
    {
        "question_id": 336,
        "db_id": "retail_complains",
        "question": "List all the server of the phone complaints with a late response from the company.",
        "evidence": "phone complaint refers to Submitted via = 'Phone'; late response refers to Timely response? = 'No'",
        "question_th": "รายชื่อเซิร์ฟเวอร์ข้อร้องเรียนทางโทรศัพท์ทั้งหมดพร้อมการตอบกลับล่าช้าจากบริษัท",
        "evidence_th": "การร้องเรียนทางโทรศัพท์หมายถึงส่งผ่าน = 'โทรศัพท์'; การตอบกลับล่าช้าหมายถึงการตอบกลับทันเวลา? = 'ไม่'",
        "SQL": "SELECT DISTINCT T2.server FROM events AS T1 INNER JOIN callcenterlogs AS T2 ON T1.`Complaint ID` = T2.`Complaint ID` WHERE T1.`Submitted via` = 'Phone' AND T1.`Timely response?` = 'No'",
        "table": "['callcenterlogs', 'events']"
    },
    {
        "question_id": 347,
        "db_id": "retail_complains",
        "question": "List down the email of client whose complaint is type \"PS\".",
        "evidence": "",
        "question_th": "กรอกรายชื่ออีเมลของลูกค้าที่มีการร้องเรียนประเภท \"PS\"",
        "evidence_th": "",
        "SQL": "SELECT T1.email FROM client AS T1 INNER JOIN callcenterlogs AS T2 ON T1.client_id = T2.`rand client` WHERE T2.type = 'PS'",
        "table": "['callcenterlogs', 'client']"
    },
    {
        "question_id": 400,
        "db_id": "retail_complains",
        "question": "In reviews for the Eagle National Bank product, how many of the 5 star reviews where from Nashville, Tennessee?",
        "evidence": "5 star refers to Stars = 5; Nashville refers to city = 'Nashville'; Tennessee refers to state_abbrev = 'TN'",
        "question_th": "ในบทวิจารณ์เกี่ยวกับผลิตภัณฑ์ Eagle National Bank มีบทวิจารณ์ระดับ 5 ดาวจากแนชวิลล์ รัฐเทนเนสซีกี่รายการ",
        "evidence_th": "5 ดาวหมายถึงดาว = 5; แนชวิลล์หมายถึงเมือง = 'แนชวิลล์'; รัฐเทนเนสซีหมายถึง state_abbrev = 'TN'",
        "SQL": "SELECT COUNT(T2.Stars) FROM district AS T1 INNER JOIN reviews AS T2 ON T1.district_id = T2.district_id WHERE T1.city = 'Nashville' AND T1.state_abbrev = 'TN' AND T2.Product = 'Eagle National Mortgage' AND T2.Stars = 5",
        "table": "['district', 'reviews']"
    },
    {
        "question_id": 402,
        "db_id": "retail_complains",
        "question": "Among the reviews from midwest region, what are the products that received 1 star?",
        "evidence": "1 star refers to Stars = 1",
        "question_th": "ในบรรดารีวิวจากภาคมิดเวสต์ สินค้าที่ได้ 1 ดาวมีอะไรบ้าง?",
        "evidence_th": "1 ดาว หมายถึง ดาว = 1",
        "SQL": "SELECT DISTINCT T3.Product FROM state AS T1 INNER JOIN district AS T2 ON T1.StateCode = T2.state_abbrev INNER JOIN reviews AS T3 ON T2.district_id = T3.district_id WHERE T1.Region = 'Midwest' AND T3.Stars = 1",
        "table": "['district', 'reviews', 'state']"
    },
    {
        "question_id": 429,
        "db_id": "movies_4",
        "question": "How many female characters are there in the movie \"Spider-Man 3\"?",
        "evidence": "female characters refer to gender = 'Female'; \"Spider-Man 3\" refers to title = 'Spider-Man 3'",
        "question_th": "มีตัวละครหญิงกี่คนในภาพยนตร์เรื่อง \"Spider-Man 3\"?",
        "evidence_th": "ตัวละครหญิงหมายถึงเพศ = 'หญิง'; \"Spider-Man 3\" หมายถึงชื่อ = 'Spider-Man 3'",
        "SQL": "SELECT COUNT(*) FROM movie AS T1 INNER JOIN movie_cast AS T2 ON T1.movie_id = T2.movie_id INNER JOIN gender AS T3 ON T2.gender_id = T3.gender_id WHERE T1.title = 'Spider-Man 3' AND T3.gender = 'Female'",
        "table": "['gender', 'movie', 'movie_cast']"
    },
    {
        "question_id": 443,
        "db_id": "movies_4",
        "question": "Who is the person associated with the crew id 1325273?",
        "evidence": "Who is the person refers to person_name; crew id 1325273 refers to person_id = 1325273",
        "question_th": "ใครคือบุคคลที่เกี่ยวข้องกับลูกเรือ ID 1325273?",
        "evidence_th": "ใครคือบุคคลนั้นอ้างถึง person_name; รหัสลูกเรือ 1325273 หมายถึง person_id = 1325273",
        "SQL": "SELECT person_name FROM person WHERE person_id = 1325273",
        "table": "['person']"
    },
    {
        "question_id": 446,
        "db_id": "movies_4",
        "question": "What is Walt Disney Pictures' most popular movie?",
        "evidence": "Walt Disney Pictures refers to company_name = 'Walt Disney Pictures'; most popular movie refers to max(popularity)",
        "question_th": "ภาพยนตร์ยอดนิยมของ Walt Disney Pictures คืออะไร",
        "evidence_th": "Walt Disney Pictures อ้างอิงถึง company_name = 'Walt Disney Pictures'; ภาพยนตร์ยอดนิยมหมายถึงสูงสุด (ความนิยม)",
        "SQL": "SELECT T3.title FROM production_company AS T1 INNER JOIN movie_company AS T2 ON T1.company_id = T2.company_id INNER JOIN movie AS T3 ON T2.movie_id = T3.movie_id WHERE T1.company_name = 'Walt Disney Pictures' ORDER BY T3.popularity DESC LIMIT 1",
        "table": "['movie', 'movie_company', 'production_company']"
    },
    {
        "question_id": 455,
        "db_id": "movies_4",
        "question": "How many horror movies are there?",
        "evidence": "horror movies refers to genre_name = 'Horror'",
        "question_th": "มีหนังสยองขวัญกี่เรื่อง?",
        "evidence_th": "ภาพยนตร์สยองขวัญหมายถึง category_name = 'Horror'",
        "SQL": "SELECT COUNT(T1.movie_id) FROM movie_genres AS T1 INNER JOIN genre AS T2 ON T1.genre_id = T2.genre_id WHERE T2.genre_name = 'Horror'",
        "table": "['genre', 'movie_genres']"
    },
    {
        "question_id": 477,
        "db_id": "movies_4",
        "question": "Which movie did the company 'Radiant Film GmbH' work on?",
        "evidence": "Which movie refers to title; company 'Radiant Film GmbH' refers to company_name = 'Radiant Film GmbH'",
        "question_th": "บริษัท 'Radiant Film GmbH' ทำภาพยนตร์เรื่องใด",
        "evidence_th": "ภาพยนตร์เรื่องใดที่อ้างถึงชื่อเรื่อง บริษัท 'Radiant Film GmbH' หมายถึง company_name = 'Radiant Film GmbH'",
        "SQL": "SELECT T3.title FROM production_company AS T1 INNER JOIN movie_company AS T2 ON T1.company_id = T2.company_id INNER JOIN movie AS T3 ON T2.movie_id = T3.movie_id WHERE T1.company_name = 'Radiant Film GmbH'",
        "table": "['movie', 'movie_company', 'production_company']"
    },
    {
        "question_id": 491,
        "db_id": "movies_4",
        "question": "Provide the genre ID of the movie with the title of \"The Dark Knight\".",
        "evidence": "movie with the title of \"The Dark Knight\" refers to title = 'The Dark Knight'",
        "question_th": "ระบุรหัสประเภทของภาพยนตร์ที่มีชื่อว่า \"The Dark Knight\"",
        "evidence_th": "ภาพยนตร์ที่มีชื่อเรื่องว่า \"The Dark Knight\" หมายถึงชื่อเรื่อง = 'The Dark Knight'",
        "SQL": "SELECT T2.genre_id FROM movie AS T1 INNER JOIN movie_genres AS T2 ON T1.movie_id = T2.movie_id WHERE T1.title = 'The Dark Knight'",
        "table": "['movie', 'movie_genres']"
    },
    {
        "question_id": 492,
        "db_id": "movies_4",
        "question": "List down the movie titles within the genre of thriller.",
        "evidence": "genre of thriller refers to genre_name = 'Thriller'",
        "question_th": "รายชื่อภาพยนตร์ประเภทระทึกขวัญ",
        "evidence_th": "ประเภทระทึกขวัญ หมายถึง ประเภท_ชื่อ = 'ระทึกขวัญ'",
        "SQL": "SELECT T1.title FROM movie AS T1 INNER JOIN movie_genres AS T2 ON T1.movie_id = T2.movie_id INNER JOIN genre AS T3 ON T2.genre_id = T3.genre_id WHERE T3.genre_name = 'Thriller'",
        "table": "['genre', 'movie', 'movie_genres']"
    },
    {
        "question_id": 493,
        "db_id": "movies_4",
        "question": "Write down five rumoured movie titles within the genre of Drama.",
        "evidence": "rumoured movie refers to movie_status = 'rumoured'; genre of Drama refers to genre_name = 'Drama'",
        "question_th": "เขียนชื่อภาพยนตร์ที่เป็นข่าวลือ 5 เรื่องในประเภทดราม่า",
        "evidence_th": "ภาพยนตร์ลือหมายถึง movie_status = 'ข่าวลือ'; ประเภทของละคร หมายถึง ประเภท_ชื่อ = 'ละคร'",
        "SQL": "SELECT T1.title FROM movie AS T1 INNER JOIN movie_genres AS T2 ON T1.movie_id = T2.movie_id INNER JOIN genre AS T3 ON T2.genre_id = T3.genre_id WHERE T1.movie_status = 'Rumored' AND T3.genre_name = 'Drama' LIMIT 5",
        "table": "['genre', 'movie', 'movie_genres']"
    },
    {
        "question_id": 500,
        "db_id": "movies_4",
        "question": "Accumulate the budget of the movie titles with the keyword of \"video game\".",
        "evidence": "keyword of \"video game\" refers to keyword_name = 'video game'",
        "question_th": "สะสมงบประมาณชื่อหนังด้วยคีย์เวิร์ด \"วิดีโอเกม\"",
        "evidence_th": "คำหลักของ \"วิดีโอเกม\" หมายถึง keyword_name = 'วิดีโอเกม'",
        "SQL": "SELECT SUM(T1.budget) FROM movie AS T1 INNER JOIN movie_keywords AS T2 ON T1.movie_id = T2.movie_id INNER JOIN keyword AS T3 ON T2.keyword_id = T3.keyword_id WHERE T3.keyword_name = 'video game'",
        "table": "['keyword', 'movie', 'movie_keywords']"
    },
    {
        "question_id": 510,
        "db_id": "movies_4",
        "question": "Find out the language ID of the movie with the highest popularity.",
        "evidence": "highest popularity refers to max(popularity)",
        "question_th": "ค้นหารหัสภาษาของภาพยนตร์ที่ได้รับความนิยมสูงสุด",
        "evidence_th": "ความนิยมสูงสุดหมายถึงสูงสุด (ความนิยม)",
        "SQL": "SELECT T2.language_id FROM movie AS T1 INNER JOIN movie_languages AS T2 ON T1.movie_id = T2.movie_id ORDER BY T1.popularity DESC LIMIT 1",
        "table": "['movie', 'movie_languages']"
    },
    {
        "question_id": 517,
        "db_id": "movies_4",
        "question": "What is the average revenue made by Latin movies?",
        "evidence": "Latin movies refers to language_name = 'Latin'; average revenue = AVG(revenue)",
        "question_th": "รายได้เฉลี่ยของภาพยนตร์ละตินคือเท่าไร?",
        "evidence_th": "ภาพยนตร์ละตินอ้างอิงถึง language_name = 'Latin'; รายได้เฉลี่ย = AVG (รายได้)",
        "SQL": "SELECT AVG(T1.revenue) FROM movie AS T1 INNER JOIN movie_languages AS T2 ON T1.movie_id = T2.movie_id INNER JOIN language AS T3 ON T2.language_id = T3.language_id WHERE T3.language_name = 'Latin'",
        "table": "['language', 'movie', 'movie_languages']"
    },
    {
        "question_id": 529,
        "db_id": "movies_4",
        "question": "What is the original language of the movie with the tagline \"An offer you can't refuse.\"?",
        "evidence": "language refers to language_name; original language refers to language_role = 'Original'",
        "question_th": "ภาษาต้นฉบับของภาพยนตร์ที่มีสโลแกนว่า \"An offer you can'tปฏิเสธ\" คืออะไร?",
        "evidence_th": "ภาษาหมายถึง language_name; ภาษาต้นฉบับหมายถึง language_role = 'ต้นฉบับ'",
        "SQL": "SELECT T3.language_name FROM movie AS T1 INNER JOIN movie_languages AS T2 ON T1.movie_id = T2.movie_id INNER JOIN language AS T3 ON T2.language_id = T3.language_id INNER JOIN language_role AS T4 ON T2.language_role_id = T4.role_id WHERE T4.language_role = 'Original' AND T1.tagline LIKE 'An offer you can%t refuse.'",
        "table": "['language', 'language_role', 'movie', 'movie_languages']"
    },
    {
        "question_id": 537,
        "db_id": "movies_4",
        "question": "What is the average ratio between female and male actors in a movie?",
        "evidence": "female refers to gender = 'Female'；male refers to gender = 'Male'; average ratio = divide(divide(sum(gender_id) when gender = 'Female', sum(gender_id) when gender = 'Male'), count(movie_id)) as percentage",
        "question_th": "อัตราส่วนเฉลี่ยระหว่างนักแสดงหญิงและชายในภาพยนตร์คือเท่าไร?",
        "evidence_th": "หญิงหมายถึงเพศ = 'หญิง'; ชายหมายถึงเพศ = 'ชาย'; อัตราส่วนเฉลี่ย = หาร (หาร (ผลรวม (gender_id) เมื่อเพศ = 'หญิง', ผลรวม (gender_id) เมื่อเพศ = 'ชาย'), นับ (movie_id)) เป็นเปอร์เซ็นต์",
        "SQL": "SELECT CAST(COUNT(CASE WHEN T2.gender = 'Female' THEN T1.person_id ELSE NULL END) AS REAL) / COUNT(CASE WHEN T2.gender = 'Male' THEN T1.person_id ELSE NULL END) FROM movie_cast AS T1 INNER JOIN gender AS T2 ON T1.gender_id = T2.gender_id",
        "table": "['gender', 'movie_cast']"
    },
    {
        "question_id": 541,
        "db_id": "movies_4",
        "question": "List the movies in the Somali language.",
        "evidence": "List the movies refers to title; Somali language refers to language_name = 'Somali'",
        "question_th": "รายชื่อภาพยนตร์ในภาษาโซมาเลีย",
        "evidence_th": "รายการภาพยนตร์อ้างอิงถึงชื่อเรื่อง; ภาษาโซมาลีหมายถึง language_name = 'โซมาลี'",
        "SQL": "SELECT T1.title FROM movie AS T1 INNER JOIN movie_languages AS T2 ON T1.movie_id = T2.movie_id INNER JOIN language AS T3 ON T2.language_id = T3.language_id WHERE T3.language_name = 'Somali'",
        "table": "['language', 'movie', 'movie_languages']"
    },
    {
        "question_id": 548,
        "db_id": "movies_4",
        "question": "Provide the names and departments of the person who worked as a music editor in the \"Pirates of the Caribbean: At World's End\" movie.",
        "evidence": "names refers to person_name; departments refers to department_name; worked as a music editor refers to job = 'Music Editor'; \"Pirates of the Caribbean: At World's End\" refers to title = 'Pirates of the Caribbean: At World''s End'",
        "question_th": "ระบุชื่อและแผนกของบุคคลที่ทำงานเป็นบรรณาธิการเพลงในภาพยนตร์ \"Pirates of the Caribbean: At World's End\"",
        "evidence_th": "ชื่อหมายถึง person_name; แผนกหมายถึง department_name; ทำงานเป็นบรรณาธิการเพลงหมายถึงงาน = 'Music Editor'; \"Pirates of the Caribbean: At World's End\" หมายถึงชื่อ = 'Pirates of the Caribbean: At World''s End'",
        "SQL": "SELECT T3.person_name, T4.department_name FROM movie AS T1 INNER JOIN movie_crew AS T2 ON T1.movie_id = T2.movie_id INNER JOIN person AS T3 ON T2.person_id = T3.person_id INNER JOIN department AS T4 ON T2.department_id = T4.department_id WHERE T1.title LIKE 'Pirates of the Caribbean: At World%s End' AND T2.job = 'Music Editor'",
        "table": "['department', 'movie', 'movie_crew', 'person']"
    },
    {
        "question_id": 565,
        "db_id": "movies_4",
        "question": "List the names of all the producers in the movie \"Pirates of the Caribbean: At World's End\".",
        "evidence": "List the names refers to person_name; producers refers to job = 'Producer'; \"Pirates of the Caribbean: At World's End\" refers to title = 'Pirates of the Caribbean: The Curse of the Black Pearl'",
        "question_th": "รายชื่อผู้อำนวยการสร้างทั้งหมดในภาพยนตร์เรื่อง \"Pirates of the Caribbean: At World's End\"",
        "evidence_th": "รายชื่อชื่อที่อ้างถึง person_name; ผู้ผลิตหมายถึงงาน = 'ผู้ผลิต'; \"Pirates of the Caribbean: At World's End\" หมายถึงชื่อ = 'Pirates of the Caribbean: The Curse of the Black Pearl'",
        "SQL": "SELECT T3.person_name FROM movie AS T1 INNER JOIN movie_crew AS T2 ON T1.movie_id = T2.movie_id INNER JOIN person AS T3 ON T2.person_id = T3.person_id WHERE T1.title = 'Pirates of the Caribbean: The Curse of the Black Pearl' AND T2.job = 'Producer'",
        "table": "['movie', 'movie_crew', 'person']"
    },
    {
        "question_id": 587,
        "db_id": "codebase_comments",
        "question": "What is the language of the method used in the solution path \"opendns_diagnosticapp\\windows\\OpenDnsDiagnostic.sln\"?",
        "evidence": "language refers to Lang;",
        "question_th": "ภาษาของวิธีการที่ใช้ในเส้นทางการแก้ปัญหา \"opendns_diagnosticapp\\windows\\OpenDnsDiagnostic.sln\" คืออะไร",
        "evidence_th": "ภาษาหมายถึงหลาง;",
        "SQL": "SELECT T2.Lang FROM Solution AS T1 INNER JOIN Method AS T2 ON T1.Id = T2.SolutionId WHERE T1.Path = 'opendns_diagnosticappwindowsOpenDnsDiagnostic.sln'",
        "table": "['Method', 'Solution']"
    },
    {
        "question_id": 591,
        "db_id": "codebase_comments",
        "question": "How many solutions contain files found within the repository most people like?",
        "evidence": "more stars mean more people like this repository; most people like refers to max(Stars);",
        "question_th": "มีโซลูชันจำนวนเท่าใดที่มีไฟล์ที่พบในพื้นที่เก็บข้อมูลที่คนส่วนใหญ่ชอบ",
        "evidence_th": "ดาวที่มากขึ้นหมายถึงมีคนชอบพื้นที่เก็บข้อมูลนี้มากขึ้น คนส่วนใหญ่ชอบอ้างถึงสูงสุด (ดาว);",
        "SQL": "SELECT COUNT(T2.RepoId) FROM Repo AS T1 INNER JOIN Solution AS T2 ON T1.Id = T2.RepoId WHERE T1.Stars = ( SELECT MAX(Stars) FROM Repo )",
        "table": "['Repo', 'Solution']"
    },
    {
        "question_id": 636,
        "db_id": "codebase_comments",
        "question": "List all the ids of repositories for solutions with \"ro\" methods.",
        "evidence": "ids of repositories refers to RepoId; ro refers to lang = 'ro';",
        "question_th": "แสดงรายการรหัสทั้งหมดของที่เก็บสำหรับโซลูชันด้วยวิธี \"ro\"",
        "evidence_th": "รหัสของที่เก็บหมายถึง RepoId; ro หมายถึง lang = 'ro';",
        "SQL": "SELECT DISTINCT T1.RepoId FROM Solution AS T1 INNER JOIN Method AS T2 ON T1.Id = T2.SolutionId WHERE T2.Lang = 'ro'",
        "table": "['Method', 'Solution']"
    },
    {
        "question_id": 638,
        "db_id": "codebase_comments",
        "question": "How many methods with solutions with path 'maravillas_linq-to-delicious\\tasty.sln'?",
        "evidence": "solution refers to SolutionId;",
        "question_th": "มีกี่วิธีพร้อมวิธีแก้ปัญหาด้วยเส้นทาง 'maravillas_linq-to-delicious\\tasty.sln'",
        "evidence_th": "โซลูชันหมายถึง SolutionId;",
        "SQL": "SELECT COUNT(T2.SolutionId) FROM Solution AS T1 INNER JOIN Method AS T2 ON T1.Id = T2.SolutionId WHERE T1.Path = 'maravillas_linq-to-delicious\\tasty.sln'",
        "table": "['Method', 'Solution']"
    },
    {
        "question_id": 646,
        "db_id": "codebase_comments",
        "question": "Please provide the id of the solution whose repository has the most watchers.",
        "evidence": "id of the solution refers to Solution.Id; repository has the most watchers refers to MAX(Watchers);",
        "question_th": "โปรดระบุรหัสของโซลูชันที่มีพื้นที่เก็บข้อมูลที่มีผู้เฝ้าดูมากที่สุด",
        "evidence_th": "id ของโซลูชันอ้างถึง Solution.Id; พื้นที่เก็บข้อมูลมีผู้เฝ้าดูมากที่สุดหมายถึง MAX (Watchers);",
        "SQL": "SELECT T2.Id FROM Repo AS T1 INNER JOIN Solution AS T2 ON T1.Id = T2.RepoId WHERE T1.Watchers = ( SELECT MAX(Watchers) FROM Repo )",
        "table": "['Repo', 'Solution']"
    },
    {
        "question_id": 647,
        "db_id": "codebase_comments",
        "question": "Please provide the number of stars that the repository of the solution 20 have.",
        "evidence": "solution refers to Solution.ID; Solution.Id = 20;",
        "question_th": "โปรดระบุจำนวนดาวที่พื้นที่เก็บข้อมูลของโซลูชัน 20 มี",
        "evidence_th": "โซลูชันหมายถึง Solution.ID; Solution.Id = 20;",
        "SQL": "SELECT T1.Stars FROM Repo AS T1 INNER JOIN Solution AS T2 ON T1.Id = T2.RepoId WHERE T2.Id = 20",
        "table": "['Repo', 'Solution']"
    },
    {
        "question_id": 648,
        "db_id": "codebase_comments",
        "question": "How many methods does solution 1 have? And please tell me if solution 1 needs to be compiled.",
        "evidence": "method refers to Name; solution refers to Solution.Id; Solution.Id = 1; solution needs to be compiled refers to WasCompiled = 0;",
        "question_th": "โซลูชันที่ 1 มีกี่วิธี? และโปรดบอกฉันว่าจำเป็นต้องรวบรวมโซลูชันที่ 1 หรือไม่",
        "evidence_th": "วิธีการหมายถึงชื่อ; โซลูชันหมายถึง Solution.Id; วิธีแก้ปัญหา ID = 1; จำเป็นต้องรวบรวมวิธีแก้ปัญหาหมายถึง WasCompiled = 0;",
        "SQL": "SELECT COUNT(T2.SolutionId) , CASE WHEN T1.WasCompiled = 0 THEN 'Needs' ELSE 'NoNeeds' END needToCompile FROM Solution AS T1 INNER JOIN Method AS T2 ON T1.Id = T2.SolutionId WHERE T2.SolutionId = 1",
        "table": "['Method', 'Solution']"
    },
    {
        "question_id": 653,
        "db_id": "codebase_comments",
        "question": "Please provide the id of the respository that received the most forks among the respositories that receive 21 stars.",
        "evidence": "repository that received the most forks refers to MAX(Forks);",
        "question_th": "โปรดระบุรหัสของพื้นที่เก็บข้อมูลที่ได้รับส้อมมากที่สุดในบรรดาพื้นที่เก็บข้อมูลที่ได้รับ 21 ดาว",
        "evidence_th": "พื้นที่เก็บข้อมูลที่ได้รับส้อมมากที่สุดหมายถึง MAX (Forks);",
        "SQL": "SELECT Id FROM Repo WHERE Stars = 21 AND Forks = ( SELECT MAX(Forks) FROM Repo WHERE Stars = 21 )",
        "table": "['Repo']"
    },
    {
        "question_id": 655,
        "db_id": "codebase_comments",
        "question": "Please provide the path of solution of method whose tokenized name is html parser feed.",
        "evidence": "path of solution refers to Path; method refers to Name; tokenized name refers to NameTokenized; Name = ''html parser feed';",
        "question_th": "โปรดระบุเส้นทางการแก้ปัญหาของวิธีการที่มีชื่อโทเค็นเป็น html parser feed",
        "evidence_th": "เส้นทางการแก้ปัญหาหมายถึงเส้นทาง วิธีการหมายถึงชื่อ; ชื่อโทเค็นหมายถึง NameTokenized; Name = ''html ตัวแยกวิเคราะห์ฟีด';",
        "SQL": "SELECT T1.Path FROM Solution AS T1 INNER JOIN Method AS T2 ON T1.Id = T2.SolutionId WHERE T2.NameTokenized = 'html parser feed'",
        "table": "['Method', 'Solution']"
    },
    {
        "question_id": 661,
        "db_id": "codebase_comments",
        "question": "What is the percentage of solutions for the method that needs to be compiled in the English methods?",
        "evidence": "method that needs to be compiled refers to WasCompiled = 0; English method refers to Lang = 'en'; percentage of solutions = MULTIPLY(DIVIDE(SUM(WasCompiled = 0), COUNT(Solution.Id)), 100);",
        "question_th": "เปอร์เซ็นต์ของคำตอบสำหรับวิธีการที่จำเป็นต้องรวบรวมในวิธีการภาษาอังกฤษคือเท่าใด",
        "evidence_th": "วิธีการที่ต้องคอมไพล์หมายถึง WasCompiled = 0; วิธีภาษาอังกฤษหมายถึง Lang = 'en'; เปอร์เซ็นต์ของการแก้ปัญหา = MULTIPLY(DIVIDE(SUM(WasCompiled = 0), COUNT(Solution.Id)), 100);",
        "SQL": "SELECT CAST(SUM(CASE WHEN T1.WasCompiled = 0 THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(Lang) FROM Solution AS T1 INNER JOIN Method AS T2 ON T1.Id = T2.SolutionId WHERE T2.Lang = 'en'",
        "table": "['Method', 'Solution']"
    },
    {
        "question_id": 667,
        "db_id": "codebase_comments",
        "question": "What is the task of the method that is in the Czech language?",
        "evidence": "method refers to Name; task of the method refers to the second part of the Name after the \".\"; Czech language refers to Lang = 'cs'",
        "question_th": "หน้าที่ของวิธีการที่อยู่ในภาษาเช็กคืออะไร?",
        "evidence_th": "วิธีการหมายถึงชื่อ; งานของวิธีการหมายถึงส่วนที่สองของชื่อหลังจาก \".\"; ภาษาเช็กหมายถึง Lang = 'cs'",
        "SQL": "SELECT DISTINCT SUBSTR(SUBSTR(Name, INSTR(Name, '.') + 1), 1, INSTR(SUBSTR(Name, INSTR(Name, '.') + 1), '.') - 1) task FROM Method WHERE Lang = 'cs'",
        "table": "['Method']"
    },
    {
        "question_id": 684,
        "db_id": "codebase_comments",
        "question": "List all the method name of the solution path \"graffen_NLog.Targets.Syslog\\src\\NLog.Targets.Syslog.sln\n\".",
        "evidence": "method name refers to Name; solution path refers to Path; Path = 'graffen_NLog.Targets.Syslog\\src\\NLog.Targets.Syslog.sln';",
        "question_th": "แสดงรายการชื่อวิธีการทั้งหมดของเส้นทางโซลูชัน \"graffen_NLog.Targets.Syslog\\src\\NLog.Targets.Syslog.sln\n-",
        "evidence_th": "ชื่อวิธีการหมายถึงชื่อ; เส้นทางการแก้ปัญหาหมายถึงเส้นทาง เส้นทาง = 'graffen_NLog.Targets.Syslog\\src\\NLog.Targets.Syslog.sln';",
        "SQL": "SELECT DISTINCT T2.Name FROM Solution AS T1 INNER JOIN Method AS T2 ON T1.Id = T2.SolutionId WHERE T1.Path = 'graffen_NLog.Targets.SyslogsrcNLog.Targets.Syslog.sln'",
        "table": "['Method', 'Solution']"
    },
    {
        "question_id": 713,
        "db_id": "trains",
        "question": "What are the load shapes of all the short ellipse cars?",
        "evidence": "short refers to len = 'short'; ellipse cars refers to shape = 'ellipse'",
        "question_th": "รถทรงวงรีสั้นทุกคันมีรูปร่างรับน้ำหนักเท่าใด",
        "evidence_th": "สั้นหมายถึง len = 'สั้น'; รถวงรีหมายถึงรูปร่าง = 'วงรี'",
        "SQL": "SELECT load_shape FROM cars WHERE shape = 'ellipse' AND len = 'short'",
        "table": "['cars']"
    },
    {
        "question_id": 718,
        "db_id": "trains",
        "question": "Which direction do most of the trains with rectangle-shaped second cars run?",
        "evidence": "most of the trains refers to MAX(count(id)); second cars refers to position = 2",
        "question_th": "รถไฟส่วนใหญ่ที่มีตู้โดยสารรูปสี่เหลี่ยมผืนผ้าวิ่งไปในทิศทางใด",
        "evidence_th": "รถไฟส่วนใหญ่อ้างอิงถึง MAX(count(id)); คันที่สองหมายถึงตำแหน่ง = 2",
        "SQL": "SELECT T2.direction FROM cars AS T1 INNER JOIN trains AS T2 ON T1.train_id = T2.id WHERE T1.position = 2 AND T1.shape = 'rectangle' GROUP BY T2.direction ORDER BY COUNT(T2.id) DESC LIMIT 1",
        "table": "['cars', 'trains']"
    },
    {
        "question_id": 723,
        "db_id": "trains",
        "question": "How many trains with fully loaded head cars are running east?",
        "evidence": "fully loaded refers to load_num = 3; head cars refers to position = 1",
        "question_th": "มีรถไฟที่บรรทุกสัมภาระเต็มขบวนวิ่งไปทางตะวันออกกี่ขบวน?",
        "evidence_th": "โหลดเต็มหมายถึง load_num = 3; รถหัวหมายถึงตำแหน่ง = 1",
        "SQL": "SELECT COUNT(DISTINCT T1.train_id) FROM cars AS T1 INNER JOIN trains AS T2 ON T1.train_id = T2.id WHERE T1.position = 1 AND T1.load_num = 3",
        "table": "['cars', 'trains']"
    },
    {
        "question_id": 729,
        "db_id": "trains",
        "question": "What is the percentage of all the trains with at least 4 cars? List the directions of the said trains.",
        "evidence": "at least 4 cars refers to trailPosi > = 4; calculation = MULTIPLY(DIVIDE(count(trailPosi > = 4 then id), count(id)), 100)",
        "question_th": "รถไฟทั้งหมดที่มีรถอย่างน้อย 4 คันมีกี่เปอร์เซ็นต์? ระบุเส้นทางของรถไฟดังกล่าว",
        "evidence_th": "รถอย่างน้อย 4 คันหมายถึง TrailPosi > = 4; การคำนวณ = MULTIPLY(หาร(นับ(trailPosi > = 4 จากนั้น id), นับ(id)), 100)",
        "SQL": "SELECT CAST(COUNT(CASE WHEN T2.trailPosi >= 4 THEN T1.id ELSE NULL END) AS REAL) * 100 / COUNT(T1.id) FROM trains AS T1 INNER JOIN ( SELECT train_id, MAX(position) AS trailPosi FROM cars GROUP BY train_id ) AS T2 ON T1.id = T2.train_id UNION ALL SELECT T1.direction FROM trains AS T1 INNER JOIN ( SELECT train_id, MAX(position) AS trailPosi FROM cars t GROUP BY train_id ) AS T2 ON T1.id = T2.train_id AND T2.trailPosi >= 4",
        "table": "['cars', 'trains']"
    },
    {
        "question_id": 758,
        "db_id": "movie",
        "question": "What is the percentage of the USA actors that showed up in the credit list of movie \"Mrs. Doubtfire\"?",
        "evidence": "USA actors refers to Birth Country = 'USA'; movie \"Mrs. Doubtfire\" refers to Title = 'Mrs. Doubtfire'; percentage = divide(count(ActorID where Birth Country = 'USA'), count(ActorID)) * 100%",
        "question_th": "นักแสดงชาวสหรัฐอเมริกาที่เข้าฉายในรายชื่อเครดิตของภาพยนตร์เรื่อง \"Mrs. Doubtfire\" มีกี่เปอร์เซ็นต์?",
        "evidence_th": "นักแสดงชาวสหรัฐอเมริกาหมายถึงประเทศเกิด = 'สหรัฐอเมริกา'; ภาพยนตร์เรื่อง \"Mrs. Doubtfire\" อ้างอิงถึง Title = 'Mrs. สงสัย'; เปอร์เซ็นต์ = หาร (นับ (ActorID โดยที่ประเทศเกิด = 'USA'), นับ (ActorID)) * 100%",
        "SQL": "SELECT CAST(SUM(CASE WHEN T3.`Birth Country` = 'USA' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(T3.`Birth Country`) FROM movie AS T1 INNER JOIN characters AS T2 ON T1.MovieID = T2.MovieID INNER JOIN actor AS T3 ON T3.ActorID = T2.ActorID WHERE T1.Title = 'Mrs. Doubtfire'",
        "table": "[]"
    },
    {
        "question_id": 759,
        "db_id": "movie",
        "question": "What is the percentage of the actors that showed up in the credit list of movie \"Dawn of the Planet of the Apes\" that were born after \"1970/1/1\"?",
        "evidence": "movie \"Dawn of the Planet of the Apes\" refers to Title = 'Dawn of the Planet of the Apes'; born after \"1970/1/1\" refers to Date of Birth > '1970/1/1'; percentage = divide(count(ActorID where Date of Birth > '1970/1/1'), count(ActorID))*100%",
        "question_th": "เปอร์เซ็นต์ของนักแสดงที่ปรากฏในรายชื่อเครดิตของภาพยนตร์เรื่อง \"Dawn of the Planet of the Apes\" ที่เกิดหลัง \"1970/1/1\" เป็นเท่าใด",
        "evidence_th": "ภาพยนตร์เรื่อง \"Dawn of the Planet of the Apes\" หมายถึง Title = 'Dawn of the Planet of the Apes'; เกิดหลัง \"1/1/70\" หมายถึง วันเดือนปีเกิด > '1/1/1970'; เปอร์เซ็นต์ = หาร(นับ(ActorID โดยที่วันเกิด > '1970/1/1'), นับ(ActorID))*100%",
        "SQL": "SELECT CAST(SUM(CASE WHEN T3.`Date of Birth` > '1970-01-01' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(T3.`Date of Birth`) FROM movie AS T1 INNER JOIN characters AS T2 ON T1.MovieID = T2.MovieID INNER JOIN actor AS T3 ON T3.ActorID = T2.ActorID WHERE T1.Title = 'Dawn of the Planet of the Apes'",
        "table": "[]"
    },
    {
        "question_id": 764,
        "db_id": "movie",
        "question": "In romantic movies, how many of them starred by John Travolta?",
        "evidence": "romantic movies refers to Genre = 'Romance'; starred by John Travolta refers to Name = 'John Travolta'",
        "question_th": "ในภาพยนตร์โรแมนติก มีกี่เรื่องที่ John Travolta นำแสดง?",
        "evidence_th": "ภาพยนตร์โรแมนติก หมายถึง Genre = 'Romance'; นำแสดงโดย John Travolta หมายถึง ชื่อ = 'John Travolta'",
        "SQL": "SELECT COUNT(*) FROM movie AS T1 INNER JOIN characters AS T2 ON T1.MovieID = T2.MovieID INNER JOIN actor AS T3 ON T3.ActorID = T2.ActorID WHERE T1.Genre = 'Romance' AND T3.Name = 'John Travolta'",
        "table": "['actor', 'characters', 'movie']"
    },
    {
        "question_id": 771,
        "db_id": "movie",
        "question": "List the runtime of movies starred by an African-American actor born on December 28, 1954.",
        "evidence": "African-American refers to Ethnicity = 'African American'; born on December 28 1954 refers to Date of Birth = '1954-12-28'",
        "question_th": "รายชื่อรันไทม์ของภาพยนตร์ที่นำแสดงโดยนักแสดงชาวแอฟริกันอเมริกันที่เกิดเมื่อวันที่ 28 ธันวาคม พ.ศ. 2497",
        "evidence_th": "แอฟริกันอเมริกัน หมายถึง เชื้อชาติ = 'แอฟริกันอเมริกัน'; เกิดวันที่ 28 ธันวาคม 2497 หมายถึง วันเดือนปีเกิด = '1954-12-28'",
        "SQL": "SELECT T1.Runtime FROM movie AS T1 INNER JOIN characters AS T2 ON T1.MovieID = T2.MovieID INNER JOIN actor AS T3 ON T3.ActorID = T2.ActorID WHERE T3.Ethnicity = 'African American' AND T3.`Date of Birth` = '1954-12-28'",
        "table": "['actor', 'characters', 'movie']"
    },
    {
        "question_id": 774,
        "db_id": "movie",
        "question": "What is the runtime of the movie starred by Jackie Chan with a rating greater than 7?",
        "evidence": "starred by Jackie Chan refers to Name = 'Jackie Chan'; rating greater than 7 refers to Rating > 7",
        "question_th": "รันไทม์ของภาพยนตร์ที่เฉินหลงนำแสดงด้วยเรตติ้งมากกว่า 7 คือเท่าใด",
        "evidence_th": "นำแสดงโดย เฉินหลง หมายถึง Name = 'เฉินหลง'; คะแนนที่มากกว่า 7 หมายถึง คะแนน > 7",
        "SQL": "SELECT T1.Runtime FROM movie AS T1 INNER JOIN characters AS T2 ON T1.MovieID = T2.MovieID INNER JOIN actor AS T3 ON T3.ActorID = T2.ActorID WHERE T3.Name = 'Jackie Chan' AND T1.Rating > 7",
        "table": "['actor', 'characters', 'movie']"
    },
    {
        "question_id": 786,
        "db_id": "social_media",
        "question": "Please list the texts of all the tweets posted from Buenos Aires with a positive sentiment.",
        "evidence": "\"Buenos Aires\" is the City; positive sentiment refers to Sentiment > 0",
        "question_th": "โปรดระบุข้อความทวีตทั้งหมดที่โพสต์จากบัวโนสไอเรสด้วยความรู้สึกเชิงบวก",
        "evidence_th": "\"บัวโนสไอเรส\" คือเมือง; ความเชื่อมั่นเชิงบวก หมายถึง ความเชื่อมั่น > 0",
        "SQL": "SELECT T1.text FROM twitter AS T1 INNER JOIN location AS T2 ON T2.LocationID = T1.LocationID WHERE T1.Sentiment > 0 AND T2.City = 'Buenos Aires'",
        "table": "['location', 'twitter']"
    },
    {
        "question_id": 810,
        "db_id": "social_media",
        "question": "For the tweet which got the most likes, state the gender of the user who tweeted it.",
        "evidence": "most likes refers to Max(Likes)",
        "question_th": "สำหรับทวีตที่มีการกดไลค์มากที่สุด ให้ระบุเพศของผู้ใช้ที่ทวีต",
        "evidence_th": "ยอดไลค์สูงสุดหมายถึงแม็กซ์(ไลค์)",
        "SQL": "SELECT T2.Gender FROM twitter AS T1 INNER JOIN user AS T2 ON T1.UserID = T2.UserID ORDER BY T1.Likes DESC LIMIT 1",
        "table": "['twitter', 'user']"
    },
    {
        "question_id": 818,
        "db_id": "social_media",
        "question": "Is 3751 the location ID for tweet with ID tw-682714048199311366?",
        "evidence": "\"tw-682714048199311366\" is the TweetID",
        "question_th": "3751 เป็นรหัสตำแหน่งสำหรับทวีตที่มี ID tw-682714048199311366 หรือไม่",
        "evidence_th": "\"tw-682714048199311366\" คือ TweetID",
        "SQL": "SELECT LocationID FROM twitter WHERE TweetID = 'tw-682714048199311366'",
        "table": "['twitter']"
    },
    {
        "question_id": 820,
        "db_id": "social_media",
        "question": "List down all of the texts posted on Twitter on Thursday.",
        "evidence": "\"Thursday\" is the Weekday",
        "question_th": "แสดงรายการข้อความทั้งหมดที่โพสต์บน Twitter ในวันพฤหัสบดี",
        "evidence_th": "\"วันพฤหัสบดี\" คือวันธรรมดา",
        "SQL": "SELECT text FROM twitter WHERE Weekday = 'Thursday'",
        "table": "['twitter']"
    },
    {
        "question_id": 831,
        "db_id": "social_media",
        "question": "Tweets that were posted from Brazil are in what languague?",
        "evidence": "\"Brazil\" is the Country; language refers to Lang",
        "question_th": "ทวีตที่โพสต์จากบราซิลเป็นภาษาอะไร?",
        "evidence_th": "\"บราซิล\" คือประเทศ ภาษาหมายถึงหลาง",
        "SQL": "SELECT DISTINCT T1.Lang FROM twitter AS T1 INNER JOIN location AS T2 ON T1.LocationID = T2.LocationID WHERE T2.Country = 'Brazil'",
        "table": "['location', 'twitter']"
    },
    {
        "question_id": 842,
        "db_id": "social_media",
        "question": "What is the gender of the user who has posted the tweet that got the most likes?",
        "evidence": "tweet got the most likes refers to Max(Likes)",
        "question_th": "ผู้ใช้ที่โพสต์ทวีตที่มียอดไลค์มากที่สุดคือเพศใด?",
        "evidence_th": "ทวีตที่มียอดไลค์สูงสุด หมายถึง แม็กซ์(ไลค์)",
        "SQL": "SELECT T2.Gender FROM twitter AS T1 INNER JOIN user AS T2 ON T1.UserID = T2.UserID ORDER BY T1.Likes DESC LIMIT 1",
        "table": "['twitter', 'user']"
    },
    {
        "question_id": 844,
        "db_id": "social_media",
        "question": "How many tweets in French were posted from Australia?",
        "evidence": "\"French\" is the language and refers to Lang = 'fr'; 'Australia' is the Country",
        "question_th": "มีการโพสต์ทวีตภาษาฝรั่งเศสจำนวนเท่าใดจากออสเตรเลีย",
        "evidence_th": "\"ภาษาฝรั่งเศส\" เป็นภาษาและหมายถึง Lang = 'fr'; 'ออสเตรเลีย' คือประเทศ",
        "SQL": "SELECT COUNT(DISTINCT T1.TweetID) FROM twitter AS T1 INNER JOIN location AS T2 ON T1.LocationID = T2.LocationID WHERE T1.Lang = 'fr' AND T2.Country = 'Australia'",
        "table": "['location', 'twitter']"
    },
    {
        "question_id": 845,
        "db_id": "social_media",
        "question": "Among all the tweets with a positive sentiment, how many of them were posted by male users in Australia?",
        "evidence": "tweet with positive sentiment refers to Sentiment > 0; male user refers to Gender = 'Male'; 'Australia' is the Country",
        "question_th": "ในบรรดาทวีตที่มีทัศนคติเชิงบวก มีกี่ทวีตที่โพสต์โดยผู้ใช้ผู้ชายในออสเตรเลีย",
        "evidence_th": "ทวีตที่มีความรู้สึกเชิงบวกหมายถึงความรู้สึก > 0; ผู้ใช้ชายหมายถึงเพศ = 'ชาย'; 'ออสเตรเลีย' คือประเทศ",
        "SQL": "SELECT COUNT(T1.TweetID) FROM twitter AS T1 INNER JOIN location AS T2 ON T2.LocationID = T1.LocationID INNER JOIN user AS T3 ON T3.UserID = T1.UserID WHERE T2.Country = 'Australia' AND T3.Gender = 'Male' AND T1.Sentiment > 0",
        "table": "['location', 'twitter', 'user']"
    },
    {
        "question_id": 856,
        "db_id": "cs_semester",
        "question": "Please list the names of the courses that are less important than Machine Learning Theory.",
        "evidence": "lower credit means less important;",
        "question_th": "โปรดระบุชื่อหลักสูตรที่มีความสำคัญน้อยกว่าทฤษฎีการเรียนรู้ของเครื่อง",
        "evidence_th": "เครดิตที่ต่ำกว่าหมายถึงความสำคัญน้อยลง",
        "SQL": "SELECT name FROM course WHERE credit < ( SELECT credit FROM course WHERE name = 'Machine Learning Theory' )",
        "table": "['course']"
    },
    {
        "question_id": 874,
        "db_id": "cs_semester",
        "question": "Which student has the highest gpa? Give the full name.",
        "evidence": "GPA is an abbreviated name of Grade Point Average where highest GPA = MAX(gpa); full name refers to f_name and l_name;",
        "question_th": "นักเรียนคนไหนมีเกรดเฉลี่ยสูงสุด? แจ้งชื่อเต็มครับ.",
        "evidence_th": "GPA เป็นชื่อย่อของ Grade Point Average โดยที่ GPA สูงสุด = MAX(gpa); ชื่อเต็มหมายถึง f_name และ l_name;",
        "SQL": "SELECT f_name, l_name FROM student WHERE gpa = ( SELECT MAX(gpa) FROM student )",
        "table": "['student']"
    },
    {
        "question_id": 886,
        "db_id": "cs_semester",
        "question": "Give the phone number of the only student who obtained \"A\" in the course \"Intro to BlockChain\".",
        "evidence": "A refers to an excellent grade in which grade = 'A' for the course;",
        "question_th": "ให้หมายเลขโทรศัพท์ของนักเรียนคนเดียวที่ได้รับ \"A\" ในหลักสูตร \"Intro to BlockChain\"",
        "evidence_th": "A หมายถึงเกรดที่ดีเยี่ยมซึ่งเกรด = 'A' สำหรับหลักสูตร",
        "SQL": "SELECT T1.phone_number FROM student AS T1 INNER JOIN registration AS T2 ON T1.student_id = T2.student_id INNER JOIN course AS T3 ON T2.course_id = T3.course_id WHERE T3.name = 'Intro to BlockChain' AND T2.grade = 'A'",
        "table": "['course', 'registration', 'student']"
    },
    {
        "question_id": 887,
        "db_id": "cs_semester",
        "question": "What is the percentage of Professor Ogdon Zywicki's research assistants are taught postgraduate students?",
        "evidence": "research assistant refers to the student who serves for research where the abbreviation is RA; taught postgraduate student refers to type = 'TPG'; DIVIDE(COUNT(student_id where type = 'TPG' and first_name = 'Ogdon', last_name = 'Zywicki'), COUNT(first_name = 'Ogdon', last_name = 'Zywicki')) as percentage;",
        "question_th": "ผู้ช่วยวิจัยของศาสตราจารย์ Ogdon Zywicki ได้รับการสอนนักศึกษาระดับสูงกว่าปริญญาตรีกี่เปอร์เซ็นต์?",
        "evidence_th": "ผู้ช่วยวิจัย หมายถึง นักศึกษาที่ทำวิจัยโดยใช้ตัวย่อ RA นักศึกษาระดับบัณฑิตศึกษาที่สอนหมายถึง type = 'TPG'; DIVIDE(COUNT(student_id โดยที่ type = 'TPG' และ first_name = 'Ogdon', Last_name = 'Zywicki'), COUNT(first_name = 'Ogdon', Last_name = 'Zywicki')) เป็นเปอร์เซ็นต์;",
        "SQL": "SELECT CAST(SUM(CASE WHEN T3.type = 'TPG' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(T1.student_id) FROM RA AS T1 INNER JOIN prof AS T2 ON T1.prof_id = T2.prof_id INNER JOIN student AS T3 ON T1.student_id = T3.student_id WHERE T2.first_name = 'Ogdon' AND T2.last_name = 'Zywicki'",
        "table": "['RA', 'prof', 'student']"
    },
    {
        "question_id": 894,
        "db_id": "cs_semester",
        "question": "How many research postgraduate students are there?",
        "evidence": "research postgraduate student refers to type = 'RPG';",
        "question_th": "มีนักศึกษาระดับบัณฑิตศึกษาด้านการวิจัยกี่คน?",
        "evidence_th": "นักศึกษาวิจัยระดับบัณฑิตศึกษาหมายถึงประเภท = 'RPG';",
        "SQL": "SELECT COUNT(student_id) FROM student WHERE type = 'RPG'",
        "table": "['student']"
    },
    {
        "question_id": 908,
        "db_id": "cs_semester",
        "question": "List the professors' IDs and students' IDs with the lowest research ability.",
        "evidence": "the lowest research ability refers to MIN(capability); professor’s ID refers to prof_id;",
        "question_th": "ระบุรหัสอาจารย์และรหัสนักศึกษาที่มีความสามารถวิจัยต่ำที่สุด",
        "evidence_th": "ความสามารถในการวิจัยต่ำสุดหมายถึง MIN (ความสามารถ); ID ของศาสตราจารย์หมายถึง prof_id;",
        "SQL": "SELECT prof_id, student_id FROM RA WHERE capability = ( SELECT MIN(capability) FROM RA )",
        "table": "['RA']"
    },
    {
        "question_id": 928,
        "db_id": "cs_semester",
        "question": "What is the credit of the course named \"Computer Vision\"?",
        "evidence": "",
        "question_th": "หลักสูตรชื่อ \"คอมพิวเตอร์วิทัศน์\" ให้เครดิตอะไร",
        "evidence_th": "",
        "SQL": "SELECT credit FROM course WHERE name = 'Computer Vision'",
        "table": "['course']"
    },
    {
        "question_id": 940,
        "db_id": "cs_semester",
        "question": "Among students with low salary, how many of them have a gpa of 3.5?",
        "evidence": "low salary refers to salary = 'low';",
        "question_th": "ในบรรดานักเรียนเงินเดือนต่ำ มีกี่คนที่มีเกรดเฉลี่ย 3.5?",
        "evidence_th": "เงินเดือนต่ำหมายถึงเงินเดือน = 'ต่ำ';",
        "SQL": "SELECT COUNT(T1.student_id) FROM RA AS T1 INNER JOIN student AS T2 ON T1.student_id = T2.student_id WHERE T2.gpa = 3.5 AND T1.salary = 'low'",
        "table": "['RA', 'student']"
    },
    {
        "question_id": 946,
        "db_id": "cs_semester",
        "question": "Among the students with less than four intelligence, list the full name and phone number of students with a greater than 3 GPA.",
        "evidence": "intelligence < 4; full name = f_name, l_name; gpa > 3;",
        "question_th": "ในบรรดานักเรียนที่มีความฉลาดน้อยกว่าสี่ ให้ระบุชื่อเต็มและหมายเลขโทรศัพท์ของนักเรียนที่มีเกรดเฉลี่ยมากกว่า 3",
        "evidence_th": "สติปัญญา <4; ชื่อเต็ม = f_name, l_name; เกรดเฉลี่ย > 3;",
        "SQL": "SELECT f_name, l_name, phone_number FROM student WHERE gpa > 3 AND intelligence < 4",
        "table": "['student']"
    },
    {
        "question_id": 951,
        "db_id": "cs_semester",
        "question": "What is the difference in the average GPA of students who took the hardest and easiest courses?",
        "evidence": "difference in the average gpa = SUBTRACT(AVG(gpa WHERE MAX(diff)), AVG(gpa where min(diff))); difficulty of the course refers to diff; hardest course refers to MAX(diff); easiest course refers to MIN(diff);",
        "question_th": "เกรดเฉลี่ยเฉลี่ยของนักเรียนที่เรียนหลักสูตรที่ยากที่สุดและง่ายที่สุดแตกต่างกันอย่างไร?",
        "evidence_th": "ความแตกต่างในค่าเฉลี่ย gpa = SUBTRACT(AVG(gpa WHERE MAX(diff)), AVG(gpa โดยที่ min(diff))); ความยากของหลักสูตรหมายถึงความแตกต่าง หลักสูตรที่ยากที่สุดหมายถึง MAX(diff); หลักสูตรที่ง่ายที่สุดหมายถึง MIN(diff);",
        "SQL": "SELECT AVG(T1.gpa) FROM student AS T1 INNER JOIN registration AS T2 ON T1.student_id = T2.student_id INNER JOIN course AS T3 ON T2.course_id = T3.course_id WHERE T3.diff IN (2, 1) GROUP BY T3.diff",
        "table": "['course', 'registration', 'student']"
    },
    {
        "question_id": 959,
        "db_id": "cs_semester",
        "question": "What percentage of students are highly satisfied with the Intro to Database 2 course?",
        "evidence": "percentage = MULTIPLY(DIVIDE(COUNT(MAX(sat)), (COUNT(student_id))), 1.0); highly satisfied refers to MAX(sat);",
        "question_th": "นักเรียนกี่เปอร์เซ็นต์ที่พึงพอใจอย่างมากกับหลักสูตร Intro to Database 2",
        "evidence_th": "เปอร์เซ็นต์ = MULTIPLY(DIVIDE(COUNT(MAX(sat)), (COUNT(student_id))), 1.0); พอใจมาก หมายถึง MAX(sat);",
        "SQL": "SELECT CAST(( SELECT COUNT(*) FROM course WHERE name = 'Intro to Database 2' AND course_id IN ( SELECT course_id FROM registration WHERE sat = ( SELECT MAX(sat) FROM registration ) ) ) AS REAL) * 100  / COUNT(T1.student_id) FROM registration AS T1 INNER JOIN course AS T2 ON T1.course_id = T2.course_id WHERE T2.name = 'Intro to Database 2'",
        "table": "['course', 'registration']"
    },
    {
        "question_id": 987,
        "db_id": "computer_student",
        "question": "How many teachers are faculty employees?",
        "evidence": "teachers refers to professor = 1; faculty employees refers to hasPosition = 'Faculty_eme'",
        "question_th": "อาจารย์เป็นอาจารย์กี่คน?",
        "evidence_th": "ครูหมายถึงศาสตราจารย์ = 1; พนักงานคณาจารย์อ้างถึง hasPosition = 'Faculty_eme'",
        "SQL": "SELECT COUNT(*) FROM person WHERE hasPosition = 'Faculty_eme'",
        "table": "['person']"
    },
    {
        "question_id": 989,
        "db_id": "computer_student",
        "question": "How many basic or medium undergraduate courses are taught by a professor?",
        "evidence": "basic or medium undergraduate courses refers to courseLevel = 'Level_300'; professor refers to professor = 1",
        "question_th": "อาจารย์สอนหลักสูตรระดับปริญญาตรีขั้นพื้นฐานหรือกลางกี่หลักสูตร?",
        "evidence_th": "หลักสูตรระดับปริญญาตรีขั้นพื้นฐานหรือกลางหมายถึง courseLevel = 'Level_300'; ศาสตราจารย์ หมายถึง ศาสตราจารย์ = 1",
        "SQL": "SELECT COUNT(*) FROM course AS T1 INNER JOIN taughtBy AS T2 ON T1.course_id = T2.course_id INNER JOIN person AS T3 ON T3.p_id = T2.p_id WHERE T1.courseLevel = 'Level_300' AND T3.professor = 1",
        "table": "['course', 'person', 'taughtBy']"
    },
    {
        "question_id": 995,
        "db_id": "computer_student",
        "question": "Among the courses that are basic or medium undergraduate courses, how many of them are taught by a faculty member?",
        "evidence": "courses that are basic or medium undergraduate courses refers to courseLevel = 'Level_300'; faculty member refers to hasPosition ! = 0",
        "question_th": "ในบรรดารายวิชาที่เป็นรายวิชาระดับปริญญาตรีขั้นพื้นฐานหรือกลาง มีคณาจารย์ที่สอนกี่รายวิชา?",
        "evidence_th": "หลักสูตรที่เป็นหลักสูตรระดับปริญญาตรีขั้นพื้นฐานหรือปานกลาง หมายถึง courseLevel = 'Level_300'; อาจารย์อ้างถึง hasPosition ! = 0",
        "SQL": "SELECT COUNT(*) FROM course AS T1 INNER JOIN taughtBy AS T2 ON T1.course_id = T2.course_id INNER JOIN person AS T3 ON T2.p_id = T3.p_id WHERE T3.professor = 1 AND T1.courseLevel = 'Level_300'",
        "table": "['course', 'person', 'taughtBy']"
    },
    {
        "question_id": 1004,
        "db_id": "computer_student",
        "question": "List down all the person IDs who taught course ID of 18.",
        "evidence": "person IDs refers to taughtBy.p_id; course ID of 18  refers to taughtBy.course_id = 18",
        "question_th": "ระบุรหัสบุคคลทั้งหมดที่สอนรหัสหลักสูตร 18",
        "evidence_th": "ID บุคคลหมายถึง TeachingBy.p_id; รหัสหลักสูตร 18  หมายถึง TeachingBy.course_id = 18",
        "SQL": "SELECT p_id FROM taughtBy WHERE course_id = 18",
        "table": "['taughtBy']"
    },
    {
        "question_id": 1027,
        "db_id": "computer_student",
        "question": "What is the position in the faculty of the professor who teaches the highest number of courses?",
        "evidence": "position in the faculty refers to hasPosition; professor refers to professor = 1; teaches the highest number of courses refers to max(count(taughtBy.course_id))",
        "question_th": "ตำแหน่งในคณะของอาจารย์ที่สอนวิชาจำนวนมากที่สุดคือตำแหน่งอะไร?",
        "evidence_th": "ตำแหน่งในคณะ หมายถึง มีตำแหน่ง ศาสตราจารย์ หมายถึง ศาสตราจารย์ = 1; จำนวนรายวิชาที่สอนสูงสุด หมายถึง max(count(taughtBy.course_id))",
        "SQL": "SELECT T1.hasPosition FROM person AS T1 INNER JOIN taughtBy AS T2 ON T1.p_id = T2.p_id WHERE T1.professor = 1 GROUP BY T1.p_id ORDER BY COUNT(T2.course_id) DESC LIMIT 1",
        "table": "['person', 'taughtBy']"
    },
    {
        "question_id": 1031,
        "db_id": "computer_student",
        "question": "How many students that are undergoing the pre-phase of qualification have advisors?",
        "evidence": "students refers to student = 1 and ; undergoing the phase of pre-qualification refers to inPhase = 'Pre-Quals'; have advisors refers to advisedBy.p_id",
        "question_th": "มีนักเรียนกี่คนที่อยู่ในช่วงเตรียมวุฒิการศึกษาและมีที่ปรึกษา?",
        "evidence_th": "นักเรียน หมายถึง นักเรียน = 1 และ ; อยู่ระหว่างขั้นตอนการคัดเลือกเบื้องต้น หมายถึง ระยะ = 'การคัดเลือกเบื้องต้น'; มีที่ปรึกษาอ้างอิงถึง allowancedBy.p_id",
        "SQL": "SELECT COUNT(T1.p_id_dummy) FROM advisedBy AS T1 INNER JOIN person AS T2 ON T1.p_id = T2.p_id WHERE T2.inPhase = 'Pre_Quals' AND T2.student = 1",
        "table": "['advisedBy', 'person']"
    },
    {
        "question_id": 1035,
        "db_id": "computer_student",
        "question": "What is the sum of year 1 and year 2 students?",
        "evidence": "year 1 and year 2 students refers to yearsInProgram = 'Year_1' and yearsInProgram = 'Year_2' and student = 1",
        "question_th": "นักเรียนปี 1 และปี 2 มีจำนวนเท่าไร?",
        "evidence_th": "นักเรียนปี 1 และปี 2 หมายถึง yearsInProgram = 'Year_1' และ yearsInProgram = 'Year_2' และนักเรียน = 1",
        "SQL": "SELECT COUNT(*) FROM person WHERE yearsInProgram = 'Year_1' OR yearsInProgram = 'Year_2'",
        "table": "['person']"
    },
    {
        "question_id": 1041,
        "db_id": "talkingdata",
        "question": "How many events were held at coordinate 97,40?",
        "evidence": "coordinate 97,40 refers to longitude = 97 AND latitude = 40;",
        "question_th": "จัดขึ้นที่พิกัด 97,40 กี่ครั้ง?",
        "evidence_th": "พิกัด 97,40 หมายถึงลองจิจูด = 97 และละติจูด = 40;",
        "SQL": "SELECT COUNT(event_id) FROM `events` WHERE latitude = 40 AND longitude = 97",
        "table": "['events']"
    },
    {
        "question_id": 1056,
        "db_id": "talkingdata",
        "question": "How many users belong to the MOBA category?",
        "evidence": "",
        "question_th": "มีผู้ใช้กี่คนที่อยู่ในหมวดหมู่ MOBA?",
        "evidence_th": "",
        "SQL": "SELECT COUNT(T2.app_id) FROM label_categories AS T1 INNER JOIN app_labels AS T2 ON T2.label_id = T1.label_id WHERE T1.category = 'MOBA'",
        "table": "['app_labels', 'label_categories']"
    },
    {
        "question_id": 1080,
        "db_id": "talkingdata",
        "question": "What is the age of the oldest device user?",
        "evidence": "oldest device user refers to MAX(age);",
        "question_th": "ผู้ใช้อุปกรณ์ที่มีอายุมากที่สุดคือเท่าไร?",
        "evidence_th": "ผู้ใช้อุปกรณ์ที่อายุมากที่สุดหมายถึง MAX (อายุ);",
        "SQL": "SELECT MAX(age) FROM gender_age",
        "table": "['gender_age']"
    },
    {
        "question_id": 1088,
        "db_id": "talkingdata",
        "question": "Please list the categories of the app users who are not active when event no.2 happened.",
        "evidence": "not active refers to is_active = 0; event no. refers to event_id; event_id = 2;",
        "question_th": "โปรดระบุหมวดหมู่ของผู้ใช้แอปที่ไม่ได้ใช้งานเมื่อมีเหตุการณ์ที่ 2 เกิดขึ้น",
        "evidence_th": "ไม่ใช้งานหมายถึง is_active = 0; หมายเลขเหตุการณ์ อ้างถึง event_id; event_id = 2;",
        "SQL": "SELECT DISTINCT T1.category FROM label_categories AS T1 INNER JOIN app_labels AS T2 ON T1.label_id = T2.label_id INNER JOIN app_events AS T3 ON T2.app_id = T3.app_id WHERE T3.event_id = 2 AND T3.is_active = 0",
        "table": "['app_events', 'app_labels', 'label_categories']"
    },
    {
        "question_id": 1098,
        "db_id": "talkingdata",
        "question": "How many users in user group M23-26 use a vivo device?",
        "evidence": "user group M23-26 refers to group = 'M23-26'; vivo device refers to phone_brand = 'vivo';",
        "question_th": "มีผู้ใช้ในกลุ่มผู้ใช้ M23-26 จำนวนกี่คนที่ใช้อุปกรณ์ vivo",
        "evidence_th": "กลุ่มผู้ใช้ M23-26 หมายถึงกลุ่ม = 'M23-26'; อุปกรณ์ vivo อ้างถึง phone_brand = 'vivo';",
        "SQL": "SELECT COUNT(T2.device_id) FROM gender_age AS T1 INNER JOIN phone_brand_device_model2 AS T2 ON T1.device_id = T2.device_id WHERE T1.`group` = 'M23-26' AND T2.phone_brand = 'vivo'",
        "table": "['gender_age', 'phone_brand_device_model2']"
    },
    {
        "question_id": 1112,
        "db_id": "talkingdata",
        "question": "Provide the total number of the male users that use OPPO as their phone brand.",
        "evidence": "male refers to gender = 'Male';",
        "question_th": "ระบุจำนวนผู้ใช้ชายทั้งหมดที่ใช้ OPPO เป็นแบรนด์โทรศัพท์ของตน",
        "evidence_th": "ชายหมายถึงเพศ = 'ชาย';",
        "SQL": "SELECT COUNT(T1.device_id) FROM gender_age AS T1 INNER JOIN phone_brand_device_model2 AS T2 ON T1.device_id = T2.device_id WHERE T2.phone_brand = 'OPPO' AND T1.gender = 'M'",
        "table": "['gender_age', 'phone_brand_device_model2']"
    },
    {
        "question_id": 1119,
        "db_id": "talkingdata",
        "question": "Among the female users that uses OPPO as their phone brand, what is the percentage of them of the user that uses R815T model to install the app?",
        "evidence": "female refers to gender = 'F'; percentage = DIVIDE(SUM(IF(phone_brand = 'OPPO',1,0)), SUM(IF(device_id = 'R815T',1,0))); R815T refers to device_id = 'R815T';",
        "question_th": "ในบรรดาผู้ใช้ผู้หญิงที่ใช้ OPPO เป็นแบรนด์โทรศัพท์ มีกี่เปอร์เซ็นต์ของผู้ใช้ที่ใช้รุ่น R815T ในการติดตั้งแอป",
        "evidence_th": "หญิงหมายถึงเพศ = 'F'; เปอร์เซ็นต์ = DIVIDE(SUM(IF(phone_brand = 'OPPO',1,0)), SUM(IF(device_id = 'R815T',1,0))); R815T อ้างอิงถึง device_id = 'R815T';",
        "SQL": "SELECT SUM(IIF(T1.phone_brand = 'OPPO', 1, 0)) / SUM(IIF(T1.device_id = 'R815T', 1, 0)) AS num FROM phone_brand_device_model2 AS T1 INNER JOIN gender_age AS T2 ON T1.device_id = T2.device_id WHERE T2.gender = 'F'",
        "table": "['gender_age', 'phone_brand_device_model2']"
    },
    {
        "question_id": 1121,
        "db_id": "talkingdata",
        "question": "Give the number of device models for \"中兴\" phone brand.",
        "evidence": "",
        "question_th": "ระบุจำนวนรุ่นอุปกรณ์สำหรับยี่ห้อโทรศัพท์ \"中兴\"",
        "evidence_th": "",
        "SQL": "SELECT COUNT(device_id) FROM phone_brand_device_model2 WHERE device_model = '中兴'",
        "table": "['phone_brand_device_model2']"
    },
    {
        "question_id": 1136,
        "db_id": "talkingdata",
        "question": "How many devices are of the brand vivo?",
        "evidence": "brand vivo refers to phone_brand = 'vivo';",
        "question_th": "ยี่ห้อ vivo มีกี่เครื่องครับ?",
        "evidence_th": "แบรนด์ vivo หมายถึง phone_brand = 'vivo';",
        "SQL": "SELECT COUNT(device_id) FROM phone_brand_device_model2 WHERE phone_brand = 'vivo'",
        "table": "['phone_brand_device_model2']"
    },
    {
        "question_id": 1138,
        "db_id": "talkingdata",
        "question": "What is the ID of the device used by the youngest user?",
        "evidence": "ID of the device refers to device_id; youngest user refers to MIN(age);",
        "question_th": "ID ของอุปกรณ์ที่ผู้ใช้อายุน้อยที่สุดใช้คืออะไร?",
        "evidence_th": "ID ของอุปกรณ์อ้างอิงถึง device_id; ผู้ใช้ที่อายุน้อยที่สุดหมายถึง MIN(อายุ);",
        "SQL": "SELECT device_id FROM gender_age WHERE age = ( SELECT MIN(age) FROM gender_age )",
        "table": "['gender_age']"
    },
    {
        "question_id": 1140,
        "db_id": "talkingdata",
        "question": "Is the oldest device user male or female?",
        "evidence": "MAX(Age) AND gender = 'M' means that the oldest device user is male; MAX(Age) AND gender = 'F' means that the oldest device user is female;",
        "question_th": "ผู้ใช้อุปกรณ์ที่อายุมากที่สุดเป็นชายหรือหญิง?",
        "evidence_th": "MAX (อายุ) AND เพศ = 'M' หมายความว่าผู้ใช้อุปกรณ์ที่อายุมากที่สุดคือผู้ชาย MAX (อายุ) AND เพศ = 'F' หมายความว่าผู้ใช้อุปกรณ์ที่อายุมากที่สุดคือเพศหญิง",
        "SQL": "SELECT gender FROM gender_age WHERE age = ( SELECT MAX(age) FROM gender_age )",
        "table": "['gender_age']"
    },
    {
        "question_id": 1142,
        "db_id": "talkingdata",
        "question": "Among all the users who use a vivo device, what is the age of the youngest user?",
        "evidence": "vivo device refers to phone_brand = 'vivo'; youngest refers to MIN(age);",
        "question_th": "ในบรรดาผู้ใช้เครื่อง vivo ทั้งหมด ผู้ใช้อายุน้อยที่สุดคือเท่าไร?",
        "evidence_th": "อุปกรณ์ vivo อ้างถึง phone_brand = 'vivo'; อายุน้อยที่สุดหมายถึง MIN(อายุ);",
        "SQL": "SELECT T1.age FROM gender_age AS T1 INNER JOIN phone_brand_device_model2 AS T2 ON T1.device_id = T2.device_id WHERE T2.phone_brand = 'vivo' ORDER BY T1.age LIMIT 1",
        "table": "['gender_age', 'phone_brand_device_model2']"
    },
    {
        "question_id": 1162,
        "db_id": "talkingdata",
        "question": "What is the ratio of the number of app users that belong to the Securities category to the number of app users that belong to the Finance category?",
        "evidence": "ratio = DIVIDE(SUM(category = 'Securities'), SUM(category = 'Finance'));",
        "question_th": "อัตราส่วนระหว่างจำนวนผู้ใช้แอปที่อยู่ในหมวดหลักทรัพย์ต่อจำนวนผู้ใช้แอปที่อยู่ในหมวดการเงินคือเท่าใด",
        "evidence_th": "อัตราส่วน = หาร(SUM(หมวดหมู่ = 'หลักทรัพย์'), SUM(หมวดหมู่ = 'การเงิน'));",
        "SQL": "SELECT SUM(IIF(T2.category = 'Securities', 1, 0)) / SUM(IIF(T2.category = 'Finance', 1, 0)) AS per FROM app_labels AS T1 INNER JOIN label_categories AS T2 ON T1.label_id = T2.label_id",
        "table": "['app_labels', 'label_categories']"
    },
    {
        "question_id": 1181,
        "db_id": "talkingdata",
        "question": "Which phone brand and model was used for event ID \"6701\"?",
        "evidence": "model refers to device_model;",
        "question_th": "โทรศัพท์ยี่ห้อและรุ่นใดที่ใช้สำหรับรหัสเหตุการณ์ \"6701\"",
        "evidence_th": "รุ่นหมายถึงdevice_model;",
        "SQL": "SELECT T2.phone_brand, T2.device_model FROM events AS T1 INNER JOIN phone_brand_device_model2 AS T2 ON T1.device_id = T2.device_id WHERE T1.event_id = 6701",
        "table": "['events', 'phone_brand_device_model2']"
    },
    {
        "question_id": 1198,
        "db_id": "talkingdata",
        "question": "State the number of users who are under 50 and above 20 use device model of Galaxy Premier.",
        "evidence": "under 50 and above 20 refers to age BTWEEEN 20 AND 50;",
        "question_th": "ระบุจำนวนผู้ใช้ที่มีอายุต่ำกว่า 50 ปี และมากกว่า 20 ปี ที่ใช้งานอุปกรณ์รุ่น Galaxy Premier",
        "evidence_th": "อายุต่ำกว่า 50 ปีและมากกว่า 20 ปีหมายถึงอายุ BTWEEEN 20 และ 50;",
        "SQL": "SELECT COUNT(T1.device_id) FROM gender_age AS T1 INNER JOIN phone_brand_device_model2 AS T2 ON T1.device_id = T2.device_id WHERE T1.age BETWEEN 20 AND 50 AND T2.device_model = 'Galaxy Premier'",
        "table": "['gender_age', 'phone_brand_device_model2']"
    },
    {
        "question_id": 1215,
        "db_id": "talkingdata",
        "question": "Locate all events on devices of women under 30 years old.",
        "evidence": "locate = longitude, latitude; women refers to gender = 'F'; under 30 years old refers to age < 30;",
        "question_th": "ค้นหากิจกรรมทั้งหมดบนอุปกรณ์ของผู้หญิงอายุต่ำกว่า 30 ปี",
        "evidence_th": "ค้นหา = ลองจิจูด, ละติจูด; ผู้หญิงหมายถึงเพศ = 'F'; อายุต่ำกว่า 30 ปี หมายถึง อายุ < 30;",
        "SQL": "SELECT T1.device_id FROM gender_age AS T1 INNER JOIN events_relevant AS T2 ON T1.device_id = T2.device_id WHERE T1.gender = 'F' AND T1.age < 30",
        "table": "['events_relevant', 'gender_age']"
    },
    {
        "question_id": 1218,
        "db_id": "talkingdata",
        "question": "Please list any three events that happened on the 1st of May 2016 that have the same latitude of 31.",
        "evidence": "on the 1st of May 2016 refers to timestamp like '2016-05-01%';",
        "question_th": "โปรดระบุเหตุการณ์สามเหตุการณ์ที่เกิดขึ้นในวันที่ 1 พฤษภาคม 2016 ซึ่งมีละติจูด 31 เท่ากัน",
        "evidence_th": "ในวันที่ 1 พฤษภาคม 2559 อ้างอิงถึงการประทับเวลาเช่น '2016-05-01%';",
        "SQL": "SELECT event_id FROM events WHERE timestamp LIKE '2016-05-01%' AND latitude = 31 LIMIT 3",
        "table": "['events']"
    },
    {
        "question_id": 1225,
        "db_id": "talkingdata",
        "question": "Which gender owned more of the Galaxy Note 2 device model?",
        "evidence": "gender that owned more = SUBTRACT(IF(SUM(gender = 'M'), SUM(gender = 'F'),'M','F'));",
        "question_th": "เพศใดที่เป็นเจ้าของอุปกรณ์ Galaxy Note 2 รุ่นมากกว่า",
        "evidence_th": "เพศที่เป็นเจ้าของมากกว่า = SUBTRACT(IF(SUM(gender = 'M'), SUM(gender = 'F'),'M','F'));",
        "SQL": "SELECT IIF(SUM(IIF(T1.gender = 'M', 1, 0)) - SUM(IIF(T1.gender = 'F', 1, 0)) > 0, 'M', 'F') AS gender FROM gender_age AS T1 INNER JOIN phone_brand_device_model2 AS T2 ON T1.device_id = T2.device_id WHERE T2.device_model = 'Galaxy Note 2'",
        "table": "['gender_age', 'phone_brand_device_model2']"
    },
    {
        "question_id": 1227,
        "db_id": "talkingdata",
        "question": "Which behavior category does user number 5902120154267990000 belong to?",
        "evidence": "behavior category refers to category; number refers to app_id; app_id = 5902120154267990000;",
        "question_th": "ผู้ใช้หมายเลข 5902120154267990000 อยู่ในกลุ่มพฤติกรรมใด",
        "evidence_th": "หมวดหมู่พฤติกรรมหมายถึงหมวดหมู่; หมายเลขหมายถึง app_id; app_id = 5902120154267990000;",
        "SQL": "SELECT T1.category FROM label_categories AS T1 INNER JOIN app_labels AS T2 ON T1.label_id = T2.label_id WHERE T2.app_id = 5902120154267990000",
        "table": "['app_labels', 'label_categories']"
    },
    {
        "question_id": 1232,
        "db_id": "talkingdata",
        "question": "What are the behavior categories that user number -9222198347540750000 belongs to?",
        "evidence": "behavior categories refers to category; user number refers to app_id; app_id = -9222198347540750000;",
        "question_th": "หมวดหมู่พฤติกรรมที่ผู้ใช้หมายเลข -9222198347540750000 อยู่มีอะไรบ้าง",
        "evidence_th": "หมวดหมู่พฤติกรรมหมายถึงหมวดหมู่ หมายเลขผู้ใช้หมายถึง app_id; app_id = -9222198347540750000;",
        "SQL": "SELECT T3.category FROM app_all AS T1 INNER JOIN app_labels AS T2 ON T1.app_id = T2.app_id INNER JOIN label_categories AS T3 ON T2.label_id = T3.label_id WHERE T1.app_id = -9222198347540750000",
        "table": "['app_all', 'app_labels', 'label_categories']"
    },
    {
        "question_id": 1238,
        "db_id": "talkingdata",
        "question": "What is the most common age group among all device users?",
        "evidence": "most common age group refers to MAX(COUNT(`group`));",
        "question_th": "กลุ่มอายุที่พบบ่อยที่สุดในหมู่ผู้ใช้อุปกรณ์ทั้งหมดคือกลุ่มใด",
        "evidence_th": "กลุ่มอายุที่พบบ่อยที่สุดหมายถึง MAX(COUNT(`group`));",
        "SQL": "SELECT T.num FROM ( SELECT `group`, COUNT(`group`) AS num FROM gender_age GROUP BY `group` ) T",
        "table": "['gender_age']"
    },
    {
        "question_id": 1264,
        "db_id": "law_episode",
        "question": "Which role did Joseph Blair play in the show?",
        "evidence": "",
        "question_th": "โจเซฟ แบลร์เล่นบทบาทใดในการแสดง?",
        "evidence_th": "",
        "SQL": "SELECT T1.role FROM Credit AS T1 INNER JOIN Person AS T2 ON T2.person_id = T1.person_id WHERE T2.name = 'Joseph Blair'",
        "table": "['Credit', 'Person']"
    },
    {
        "question_id": 1273,
        "db_id": "law_episode",
        "question": "How many people have won at least 3 awards?",
        "evidence": "won refers to result = 'Winner'; at least 3 awards refers to count(result) > 3",
        "question_th": "มีกี่คนที่ได้รับรางวัลอย่างน้อย 3 รางวัล?",
        "evidence_th": "ชนะหมายถึงผลลัพธ์ = 'ผู้ชนะ'; อย่างน้อย 3 รางวัล หมายถึง การนับ(ผล) > 3",
        "SQL": "SELECT COUNT(T1.person_id) FROM Person AS T1 INNER JOIN Award AS T2 ON T1.person_id = T2.person_id WHERE T2.result = 'Winner' GROUP BY T1.person_id HAVING COUNT(T2.award_id) >= 3",
        "table": "['Award', 'Person']"
    },
    {
        "question_id": 1287,
        "db_id": "law_episode",
        "question": "Who is the narrator of the \"Flight\" episode?",
        "evidence": "who refers to name; narrator refers to role = 'Narrator'; the \"Flight\" episode refers to title = 'Flight'",
        "question_th": "ใครเป็นผู้บรรยายตอน \"Flight\"?",
        "evidence_th": "ผู้ซึ่งอ้างถึงชื่อ; ผู้บรรยายหมายถึงบทบาท = 'ผู้บรรยาย'; ตอน \"เที่ยวบิน\" อ้างถึงชื่อ = 'เที่ยวบิน'",
        "SQL": "SELECT T3.name FROM Episode AS T1 INNER JOIN Credit AS T2 ON T1.episode_id = T2.episode_id INNER JOIN Person AS T3 ON T3.person_id = T2.person_id WHERE T1.title = 'Flight' AND T2.role = 'Narrator'",
        "table": "['Credit', 'Episode', 'Person']"
    },
    {
        "question_id": 1290,
        "db_id": "law_episode",
        "question": "How many people were not credited at the end of the \"Admissions\" episode?",
        "evidence": "not credited refers to credited = ''; the \"Admissions\" episode refers to title = 'Admissions'",
        "question_th": "มีกี่คนที่ไม่ได้รับเครดิตในตอนท้ายของตอน \"รับสมัคร\"?",
        "evidence_th": "ไม่ได้รับเครดิต หมายถึง ได้รับเครดิต = ''; ตอน \"การรับสมัคร\" อ้างถึงชื่อ = 'การรับสมัคร'",
        "SQL": "SELECT COUNT(T2.person_id) FROM Episode AS T1 INNER JOIN Credit AS T2 ON T1.episode_id = T2.episode_id WHERE T1.title = 'Admissions' AND T2.credited = 'false'",
        "table": "['Credit', 'Episode']"
    },
    {
        "question_id": 1308,
        "db_id": "law_episode",
        "question": "In what year did the episodes titled DWB get an award?",
        "evidence": "titled DWB refers to title = 'DWB'; get an award refers to result = 'Winner'",
        "question_th": "ตอนที่ชื่อ DWB ได้รับรางวัลในปีใด",
        "evidence_th": "ชื่อ DWB หมายถึง title = 'DWB'; รับรางวัลหมายถึงผลลัพธ์ = 'ผู้ชนะ'",
        "SQL": "SELECT DISTINCT T1.year FROM Award AS T1 INNER JOIN Episode AS T2 ON T1.episode_id = T2.episode_id WHERE T2.title = 'DWB' AND T1.result = 'Winner'",
        "table": "['Award', 'Episode']"
    },
    {
        "question_id": 1316,
        "db_id": "law_episode",
        "question": "What is the average star rating of the episodes Jim Bracchitta has worked on?",
        "evidence": "average star rating = divide(sum(stars), count(episode_id)) where name = 'Jim Bracchitta'",
        "question_th": "จิม แบรคคิตต้าเคยทำงานด้วยคะแนนเฉลี่ยดาวเท่าไร",
        "evidence_th": "ระดับดาวเฉลี่ย = หาร (ผลรวม (ดาว), จำนวน (ตอน_id)) โดยที่ ชื่อ = 'Jim Bracchitta'",
        "SQL": "SELECT CAST(SUM(T3.stars) AS REAL) / COUNT(T2.episode_id) FROM Person AS T1 INNER JOIN Credit AS T2 ON T1.person_id = T2.person_id INNER JOIN Vote AS T3 ON T2.episode_id = T3.episode_id WHERE T3.stars = 1 AND T1.name = 'Jim Bracchitta'",
        "table": "['Credit', 'Person', 'Vote']"
    },
    {
        "question_id": 1318,
        "db_id": "law_episode",
        "question": "Write down the title, summary, and air date of the episode that garnered 72 10-star votes.",
        "evidence": "72 10-star votes refers to stars = 10 and votes = 72",
        "question_th": "เขียนชื่อเรื่อง สรุป และวันที่ออกอากาศของตอนที่ได้รับคะแนนโหวต 10 ดาว 72 ครั้ง",
        "evidence_th": "72 คะแนนโหวต 10 ดาว หมายถึง ดาว = 10 และคะแนนโหวต = 72",
        "SQL": "SELECT T2.title, T2.summary, T2.air_date FROM Vote AS T1 INNER JOIN Episode AS T2 ON T2.episode_id = T1.episode_id WHERE T1.stars = 10 AND T1.votes = 72",
        "table": "['Episode', 'Vote']"
    },
    {
        "question_id": 1323,
        "db_id": "law_episode",
        "question": "Who was the Law and Order series writer who also won the Television Silver Gavel Award at the American Bar Association Silver Gavel Awards for Media and the Arts for two consecutive years?",
        "evidence": "who refers to name; writer refers to role = 'writer'; won refers to result = 'Winner'; the Television refers to award = 'Television'; Silver Gavel Award refers to award_category = 'Silver Gavel Award'; the American Bar Association Silver Gavel Awards for Media and the Arts refers to organization = 'American Bar Association Silver Gavel Awards for Media and the Arts'",
        "question_th": "ใครคือนักเขียนซีรีส์ Law and Order ที่ได้รับรางวัล Television Silver Gavel Award จาก American Bar Association Silver Gavel Awards สาขาสื่อและศิลปะเป็นเวลาสองปีติดต่อกัน",
        "evidence_th": "ผู้ซึ่งอ้างถึงชื่อ; นักเขียนหมายถึงบทบาท = 'นักเขียน'; ชนะหมายถึงผลลัพธ์ = 'ผู้ชนะ'; โทรทัศน์หมายถึงรางวัล = 'โทรทัศน์'; รางวัล Silver Gavel หมายถึง รางวัลประเภท = 'รางวัล Silver Gavel'; รางวัล American Bar Association Silver Gavel สำหรับสื่อและศิลปะ หมายถึงองค์กร = 'American Bar Association Silver Gavel Awards สำหรับสื่อและศิลปะ'",
        "SQL": "SELECT t3.name FROM ( SELECT DISTINCT T2.year AS years, T1.name, row_number() OVER (PARTITION BY T1.name ORDER BY T2.year) AS rm FROM Person AS T1 INNER JOIN Award AS T2 ON T1.person_id = T2.person_id WHERE T2.award = 'Television' AND T2.award_category = 'Silver Gavel Award' AND T2.series = 'Law and Order' AND T2.result = 'Winner' AND T2.organization = 'American Bar Association Silver Gavel Awards for Media and the Arts' ) AS T3 GROUP BY t3.name HAVING COUNT(t3.years - t3.rm) >= 2",
        "table": "['Award', 'Person']"
    },
    {
        "question_id": 1329,
        "db_id": "law_episode",
        "question": "Who played the role of the \"president of NBC West Coast\" in the first episode?",
        "evidence": "who refers to name; the role of the \"president of NBC West Coast\" refers to role = 'president of NBC West Coast'; the first episode refers to episode = 1",
        "question_th": "ใครรับบทเป็น “ประธาน NBC West Coast” ในตอนแรก?",
        "evidence_th": "ผู้ซึ่งอ้างถึงชื่อ; บทบาทของ \"ประธาน NBC West Coast\" หมายถึงบทบาท = 'ประธาน NBC West Coast'; ตอนแรกหมายถึงตอนที่ = 1",
        "SQL": "SELECT T2.name FROM Credit AS T1 INNER JOIN Person AS T2 ON T2.person_id = T1.person_id INNER JOIN Episode AS T3 ON T1.episode_id = T3.episode_id WHERE T3.episode = 1 AND T1.role = 'president of NBC West Coast'",
        "table": "['Credit', 'Episode', 'Person']"
    },
    {
        "question_id": 1357,
        "db_id": "law_episode",
        "question": "Which episode has the two keywords \"nun\" and \"priest\"?",
        "evidence": "episode refers to title; the two keywords \"nun\" and \"priest\" refers to keyword = 'nun' or keyword = 'priest';",
        "question_th": "ตอนใดมีคำสำคัญสองคำว่า \"แม่ชี\" และ \"พระ\"",
        "evidence_th": "ตอนหมายถึงชื่อเรื่อง; คำหลักทั้งสองคำว่า \"แม่ชี\" และ \"พระ\" หมายถึงคำหลัก = 'แม่ชี' หรือคำหลัก = 'พระ';",
        "SQL": "SELECT T1.title FROM Episode AS T1 INNER JOIN Keyword AS T2 ON T1.episode_id = T2.episode_id WHERE T2.keyword IN ('nun', 'priest')",
        "table": "['Episode', 'Keyword']"
    },
    {
        "question_id": 1358,
        "db_id": "law_episode",
        "question": "Which episode number has the second highest positive viewer comments and has been awarded \"Best Television Episode\"?",
        "evidence": "episode number refers to episode_id; awarded \"Best Television Episode\" refers to award = 'Best Television Episode' and result = 'Winner'; the second highest positive viewer comments refers to rating = 8.5",
        "question_th": "หมายเลขตอนใดที่มีความคิดเห็นของผู้ชมเชิงบวกสูงสุดเป็นอันดับสองและได้รับรางวัล \"ตอนทางโทรทัศน์ที่ดีที่สุด\"",
        "evidence_th": "หมายเลขตอนหมายถึง Episode_id; ได้รับรางวัล \"ตอนโทรทัศน์ที่ดีที่สุด\" หมายถึงรางวัล = 'ตอนโทรทัศน์ที่ดีที่สุด' และผลลัพธ์ = 'ผู้ชนะ'; ความคิดเห็นของผู้ดูเชิงบวกสูงสุดเป็นอันดับสองหมายถึงการให้คะแนน = 8.5",
        "SQL": "SELECT T2.episode_id FROM Award AS T1 INNER JOIN Episode AS T2 ON T1.episode_id = T2.episode_id WHERE T1.award = 'Best Television Episode' AND T1.result = 'Winner' ORDER BY T2.rating DESC LIMIT 2",
        "table": "['Award', 'Episode']"
    },
    {
        "question_id": 1360,
        "db_id": "synthea",
        "question": "According to the observation on 2008/3/11, what was the height of Elly Koss?",
        "evidence": "2008/3/11 refers to date = '2008-03-11'; height refers to DESCRIPTION = 'Body Height' from observations;",
        "question_th": "จากการสังเกตเมื่อวันที่ 3/2551 Elly Koss สูงเท่าไร?",
        "evidence_th": "3/2551 หมายถึงวันที่ = '2008-03-11'; ความสูงหมายถึง DESCRIPTION = 'ความสูงของร่างกาย' จากการสังเกต",
        "SQL": "SELECT T2.value, T2.units FROM patients AS T1 INNER JOIN observations AS T2 ON T1.patient = T2.PATIENT WHERE T1.first = 'Elly' AND T1.last = 'Koss' AND T2.date = '2008-03-11' AND T2.description = 'Body Height'",
        "table": "['observations', 'patients']"
    },
    {
        "question_id": 1362,
        "db_id": "synthea",
        "question": "During all the observations of Elly Koss, what was the highest Systolic Blood Pressure observed?",
        "evidence": "the highest Systolic Blood Pressure refers to MAX(DESCRIPTION = 'Systolic Blood Pressure') from observations;",
        "question_th": "จากการสังเกตทั้งหมดของ Elly Koss ความดันโลหิตซิสโตลิกสูงสุดที่สังเกตได้คือเท่าใด",
        "evidence_th": "ความดันโลหิตซิสโตลิกสูงสุดหมายถึง MAX(DESCRIPTION = 'ความดันโลหิตซิสโตลิก') จากการสังเกต",
        "SQL": "SELECT T2.value, T2.units FROM patients AS T1 INNER JOIN observations AS T2 ON T1.patient = T2.PATIENT WHERE T1.first = 'Elly' AND T1.last = 'Koss' AND T2.description = 'Systolic Blood Pressure' ORDER BY T2.VALUE DESC LIMIT 1",
        "table": "['observations', 'patients']"
    },
    {
        "question_id": 1372,
        "db_id": "synthea",
        "question": "According to all the observations of Elly Koss, what was her average weight?",
        "evidence": "DIVIDE(SUM(VALUE), COUNT(VALUE)) WHERE DESCRIPTION = 'Body Weight';",
        "question_th": "จากการสังเกตทั้งหมดของ Elly Koss น้ำหนักเฉลี่ยของเธอคือเท่าไร?",
        "evidence_th": "หาร(SUM(VALUE), COUNT(VALUE)) โดยที่คำอธิบาย = 'น้ำหนักตัว';",
        "SQL": "SELECT AVG(T2.VALUE), T2.units FROM patients AS T1 INNER JOIN observations AS T2 ON T1.patient = T2.PATIENT WHERE T1.first = 'Elly' AND T1.last = 'Koss' AND T2.description = 'Body Weight'",
        "table": "['observations', 'patients']"
    },
    {
        "question_id": 1406,
        "db_id": "synthea",
        "question": "Indicate the patient's full name with the lowest body mass index in kg/m2.",
        "evidence": "full name refers to first, last; the lowest body mass index in kg/m2 refers to DESCRIPTION = Body Mass Index from observations where MIN(VALUE) and UNITS = 'kg/m2';",
        "question_th": "ระบุชื่อเต็มของผู้ป่วยด้วยค่าดัชนีมวลกายต่ำสุด หน่วยเป็น กก./ตร.ม.",
        "evidence_th": "ชื่อเต็ม หมายถึง ลำดับแรก, ลำดับสุดท้าย; ดัชนีมวลกายต่ำสุดในหน่วย กิโลกรัม/ตารางเมตร อ้างอิงถึง DESCRIPTION = ดัชนีมวลกาย จากการสังเกต โดยที่ MIN(VALUE) และ UNITS = 'kg/m2';",
        "SQL": "SELECT T1.first, T1.last FROM patients AS T1 INNER JOIN observations AS T2 ON T1.patient = T2.PATIENT WHERE T2.DESCRIPTION = 'Body Mass Index' AND T2.UNITS = 'kg/m2' ORDER BY T2.VALUE LIMIT 1",
        "table": "['observations', 'patients']"
    },
    {
        "question_id": 1414,
        "db_id": "synthea",
        "question": "Who is the patient involved in the care plan with code 311791003?",
        "evidence": "",
        "question_th": "ผู้ป่วยมีส่วนร่วมในแผนการดูแลรหัส 311791003 ใครบ้าง?",
        "evidence_th": "",
        "SQL": "SELECT T2.first, T2.last FROM careplans AS T1 INNER JOIN patients AS T2 ON T1.PATIENT = T2.patient WHERE T1.CODE = 315043002",
        "table": "['careplans', 'patients']"
    },
    {
        "question_id": 1421,
        "db_id": "synthea",
        "question": "List the procedures received by Emmy Waelchi.",
        "evidence": "procedures refer to DESCRIPTION from procedures;",
        "question_th": "ระบุขั้นตอนที่ Emmy Waelchi ได้รับ",
        "evidence_th": "ขั้นตอนอ้างถึงคำอธิบายจากขั้นตอน;",
        "SQL": "SELECT T2.DESCRIPTION FROM patients AS T1 INNER JOIN procedures AS T2 ON T1.patient = T2.PATIENT WHERE T1.first = 'Emmy' AND T1.last = 'Waelchi'",
        "table": "['patients', 'procedures']"
    },
    {
        "question_id": 1425,
        "db_id": "synthea",
        "question": "How many times did Keven Kuhn receive DTaP immunization?",
        "evidence": "DTaP immunization refers to immunizations where DESCRIPTION = 'DTaP';",
        "question_th": "Keven Kuhn ได้รับการฉีดวัคซีน DTaP กี่ครั้ง?",
        "evidence_th": "การสร้างภูมิคุ้มกัน DTaP หมายถึง การสร้างภูมิคุ้มกัน โดยที่ DESCRIPTION = 'DTaP';",
        "SQL": "SELECT COUNT(T2.CODE) FROM patients AS T1 INNER JOIN immunizations AS T2 ON T1.patient = T2.PATIENT WHERE T1.first = 'Keven' AND T1.last = 'Kuhn' AND T2.DESCRIPTION = 'DTaP'",
        "table": "['immunizations', 'patients']"
    },
    {
        "question_id": 1449,
        "db_id": "synthea",
        "question": "Indicate the full name of the patients who have 3 different allergies.",
        "evidence": "full name refers to first, last; have 3 different allergies refer to allergies where COUNT(DESCRIPTION) > 3;",
        "question_th": "ระบุชื่อเต็มของผู้ป่วยที่เป็นโรคภูมิแพ้ 3 แบบ",
        "evidence_th": "ชื่อเต็ม หมายถึง ลำดับแรก, ลำดับสุดท้าย; มีอาการแพ้ 3 แบบที่แตกต่างกัน หมายถึง อาการแพ้ โดยที่ COUNT(DESCRIPTION) > 3;",
        "SQL": "SELECT T1.first, T1.last FROM patients AS T1 INNER JOIN allergies AS T2 ON T1.patient = T2.PATIENT GROUP BY T1.patient ORDER BY COUNT(DISTINCT T2.DESCRIPTION) > 3",
        "table": "['allergies', 'patients']"
    },
    {
        "question_id": 1454,
        "db_id": "synthea",
        "question": "List the full name of all patients with 'otitis media'.",
        "evidence": "full name = first, last; otitis media refers to conditions.DESCRIPTION = 'Otitis media';",
        "question_th": "ระบุชื่อเต็มของผู้ป่วยทั้งหมดที่มี 'หูชั้นกลางอักเสบ'",
        "evidence_th": "ชื่อเต็ม = ตัวแรก, ท้าย; หูชั้นกลางอักเสบหมายถึงสภาวะต่างๆ DESCRIPTION = 'หูชั้นกลางอักเสบ';",
        "SQL": "SELECT DISTINCT T1.first, T1.last FROM patients AS T1 INNER JOIN conditions AS T2 ON T1.patient = T2.PATIENT WHERE T2.DESCRIPTION = 'Otitis media'",
        "table": "['conditions', 'patients']"
    },
    {
        "question_id": 1461,
        "db_id": "synthea",
        "question": "Write down the Social Security numbers of patients who have latex allergies.",
        "evidence": "Social Security numbers refers to ssn; latex allergies refers to allergies.DESCRIPTION = 'Latex allergy';",
        "question_th": "เขียนหมายเลขประกันสังคมของผู้ป่วยที่แพ้ยางธรรมชาติ",
        "evidence_th": "หมายเลขประกันสังคมหมายถึง ssn; การแพ้ยางธรรมชาติหมายถึงการแพ้ DESCRIPTION = 'การแพ้ยางธรรมชาติ';",
        "SQL": "SELECT T1.ssn FROM patients AS T1 INNER JOIN allergies AS T2 ON T1.patient = T2.PATIENT WHERE T2.DESCRIPTION = 'Latex allergy'",
        "table": "['allergies', 'patients']"
    },
    {
        "question_id": 1479,
        "db_id": "synthea",
        "question": "List out 5 most common conditions for underweight patient.",
        "evidence": "most common condition refers to MAX(COUNT(conditions.DESCRIPTION)); underweight patient refers to MIN(observations.VALUE WHERE observations.DESCRIPTION = 'Body Mass Index');",
        "question_th": "ระบุ 5 ภาวะที่พบบ่อยที่สุดสำหรับผู้ป่วยที่มีน้ำหนักต่ำกว่าเกณฑ์",
        "evidence_th": "เงื่อนไขที่พบบ่อยที่สุดหมายถึง MAX(COUNT(conditions.DESCRIPTION)); ผู้ป่วยที่มีน้ำหนักต่ำกว่าเกณฑ์หมายถึง MIN(การสังเกต ค่า WHERE การสังเกต รายละเอียด = 'ดัชนีมวลกาย');",
        "SQL": "SELECT DISTINCT T2.DESCRIPTION, T2.VALUE, T2.UNITS FROM patients AS T1 INNER JOIN observations AS T2 ON T1.patient = T2.PATIENT WHERE T2.DESCRIPTION = 'Body Mass Index' GROUP BY T2.VALUE ORDER BY COUNT(T2.VALUE) LIMIT 5",
        "table": "['observations', 'patients']"
    },
    {
        "question_id": 1503,
        "db_id": "synthea",
        "question": "State description of medication taken by Joe Homenick.",
        "evidence": "description of medication refers to medications.DESCRIPTION;",
        "question_th": "ระบุคำอธิบายยาที่ Joe Homenick รับประทาน",
        "evidence_th": "คำอธิบายของยาหมายถึงยาคำอธิบาย;",
        "SQL": "SELECT T1.DESCRIPTION FROM medications AS T1 INNER JOIN patients AS T2 ON T1.PATIENT = T2.patient WHERE T2.first = 'Joye' AND T2.last = 'Homenick'",
        "table": "['medications', 'patients']"
    },
    {
        "question_id": 1508,
        "db_id": "synthea",
        "question": "Mention the description of the care plan of American patients.",
        "evidence": "American refers to ethnicity = 'american';",
        "question_th": "กล่าวถึงคำอธิบายแผนการดูแลผู้ป่วยชาวอเมริกัน",
        "evidence_th": "อเมริกันหมายถึงเชื้อชาติ = 'อเมริกัน';",
        "SQL": "SELECT DISTINCT T1.DESCRIPTION FROM careplans AS T1 INNER JOIN patients AS T2 ON T1.PATIENT = T2.patient WHERE T2.ethnicity = 'american'",
        "table": "['careplans', 'patients']"
    },
    {
        "question_id": 1514,
        "db_id": "synthea",
        "question": "How many Italian patients have the care plan code of 304510005?",
        "evidence": "Italian patients refers to ethnicity = 'italian';",
        "question_th": "คนไข้ชาวอิตาลีมีรหัสแผนการดูแล 304510005 จำนวนกี่คน?",
        "evidence_th": "ผู้ป่วยชาวอิตาลีหมายถึงเชื้อชาติ = 'อิตาลี';",
        "SQL": "SELECT COUNT(DISTINCT T2.patient) FROM careplans AS T1 INNER JOIN patients AS T2 ON T1.PATIENT = T2.patient WHERE T2.ethnicity = 'italian' AND T1.CODE = '304510005'",
        "table": "['careplans', 'patients']"
    },
    {
        "question_id": 1524,
        "db_id": "synthea",
        "question": "List the patient ids whose disease has the most occurrences.",
        "evidence": "patient ids refers to patients.patient; disease with the most occurrence refers to MAX(all_prevalences.OCCURENCES);",
        "question_th": "ระบุรหัสผู้ป่วยที่มีโรคเกิดขึ้นมากที่สุด",
        "evidence_th": "รหัสผู้ป่วยหมายถึง Patients.Patient; โรคที่เกิดขึ้นมากที่สุดหมายถึง MAX(all_prevalences.OCCURENCES);",
        "SQL": "SELECT T1.patient FROM patients AS T1 INNER JOIN conditions AS T2 ON T1.patient = T2.PATIENT INNER JOIN all_prevalences AS T3 ON T3.ITEM = T2.DESCRIPTION ORDER BY T3.OCCURRENCES DESC LIMIT 1",
        "table": "['all_prevalences', 'conditions', 'patients']"
    },
    {
        "question_id": 1525,
        "db_id": "synthea",
        "question": "List all the full names of patients with a condition described as cystitis.",
        "evidence": "full names = first, last; condition described as cystitis refers to conditions.DESCRIPTION = ''Cystitis';",
        "question_th": "รายชื่อผู้ป่วยที่เป็นโรคกระเพาะปัสสาวะอักเสบทั้งหมด",
        "evidence_th": "ชื่อเต็ม = ตัวแรก, ท้าย; สภาพที่อธิบายว่าเป็นโรคกระเพาะปัสสาวะอักเสบหมายถึงเงื่อนไข DESCRIPTION = ''โรคกระเพาะปัสสาวะอักเสบ';",
        "SQL": "SELECT DISTINCT T1.first, T1.last FROM patients AS T1 INNER JOIN conditions AS T2 ON T1.patient = T2.patient WHERE T2.DESCRIPTION = 'Cystitis'",
        "table": "['conditions', 'patients']"
    },
    {
        "question_id": 1539,
        "db_id": "synthea",
        "question": "Calculate the average age of the male patients that have hypertension.",
        "evidence": "average age = AVG(DIVIDE(SUBTRACT(deathdate is null WHERE (julianday(substr(datetime('now'), 1, 10)))), julianday(patients.birthdate)), 365); male refers to gender = 'M'; hypertension refers to conditions.DESCRIPTION = 'Hypertension'",
        "question_th": "คำนวณอายุเฉลี่ยของผู้ป่วยชายที่เป็นโรคความดันโลหิตสูง",
        "evidence_th": "อายุเฉลี่ย = AVG(DIVIDE(SUBTRACT(deathdate is null WHERE) (julianday(substr(datetime('now'), 1, 10)))), julianday( Patients.birthdate)), 365); ชายหมายถึงเพศ = 'M'; ความดันโลหิตสูงหมายถึงภาวะต่างๆ DESCRIPTION = 'Hypertension'",
        "SQL": "SELECT SUM(CASE WHEN T2.deathdate IS NULL THEN ROUND((strftime('%J', date('now')) - strftime('%J', T2.birthdate)) / 365) ELSE ROUND((strftime('%J', T2.deathdate) - strftime('%J', T2.birthdate)) / 365) END) / COUNT(T2.patient) FROM conditions AS T1 INNER JOIN patients AS T2 ON T1.PATIENT = T2.patient WHERE T1.DESCRIPTION = 'Hypertension' AND T2.gender = 'M'",
        "table": "['conditions', 'patients']"
    },
    {
        "question_id": 1544,
        "db_id": "synthea",
        "question": "What is the difference between the number of married patients and the number of single patients with diabetes?",
        "evidence": "difference = SUBTRACT(patients.patient WHERE marital = 'M'), COUNT(patients.patient WHERE marital = 'S') WHERE conditions.DESCRIPTION = 'Diabetes'); married patients refers to marital = 'M'; single patients refers to marital = 'S'; diabetes refers to conditions.DESCRIPTION = 'Diabetes';",
        "question_th": "อะไรคือความแตกต่างระหว่างจำนวนผู้ป่วยที่แต่งงานแล้วและจำนวนผู้ป่วยโรคเบาหวานรายเดียว?",
        "evidence_th": "ความแตกต่าง = SUBTRACT( Patients. Patient WHERE marital = 'M'), COUNT ( Patients. Patient WHERE marital = 'S') WHERE Conditions.DESCRIPTION = 'Diabetes'); ผู้ป่วยที่แต่งงานแล้วหมายถึงการสมรส = 'M'; ผู้ป่วยเดี่ยวหมายถึงการสมรส = 'S'; โรคเบาหวานหมายถึงอาการต่างๆ DESCRIPTION = 'Diabetes';",
        "SQL": "SELECT SUM(CASE WHEN T2.marital = 'M' THEN 1 ELSE 0 END) - SUM(CASE WHEN T2.marital = 'S' THEN 1 ELSE 0 END) FROM conditions AS T1 INNER JOIN patients AS T2 ON T1.PATIENT = T2.patient WHERE T1.DESCRIPTION = 'Diabetes'",
        "table": "['conditions', 'patients']"
    },
    {
        "question_id": 1546,
        "db_id": "car_retails",
        "question": "Which different vendor has the most amount of orders? Calculate the total estimated earnings.",
        "evidence": "amount of order refers to quantityOrdered; most amount of orders refers to SUM(QuantityOrdered); estimated earnings refers to expected profits; expected profits = SUBTRACT(msrp, buyPrice);",
        "question_th": "ผู้จำหน่ายรายใดที่มีจำนวนคำสั่งซื้อมากที่สุด? คำนวณรายได้โดยประมาณทั้งหมด",
        "evidence_th": "จำนวนคำสั่งซื้อหมายถึงปริมาณที่สั่งซื้อ จำนวนคำสั่งซื้อส่วนใหญ่อ้างอิงถึง SUM(QuantityOrdered); รายได้โดยประมาณหมายถึงผลกำไรที่คาดหวัง กำไรที่คาดหวัง = SUBTRACT(msrp, buyPrice);",
        "SQL": "SELECT DISTINCT T1.productVendor, T1.MSRP - T1.buyPrice FROM products AS T1 INNER JOIN orderdetails AS T2 ON T1.productCode = T2.productCode GROUP BY T1.productVendor, T1.MSRP, T1.buyPrice ORDER BY COUNT(T2.quantityOrdered) DESC LIMIT 1",
        "table": "['orderdetails', 'products']"
    },
    {
        "question_id": 1553,
        "db_id": "car_retails",
        "question": "How many checks were issued by Euro+ Shopping Channel in the year 2004?",
        "evidence": "Euro+ Shopping Channel is a customer name; year(paymentDate) = '2004';",
        "question_th": "ในปี 2547 Euro+ Shopping Channel ออกเช็คจำนวนเท่าใด",
        "evidence_th": "Euro+ Shopping Channel เป็นชื่อลูกค้า ปี(วันที่ชำระเงิน) = '2004';",
        "SQL": "SELECT COUNT(T1.checkNumber) FROM payments AS T1 INNER JOIN customers AS T2 ON T1.customerNumber = T2.customerNumber WHERE customerName = 'Euro+ Shopping Channel' AND STRFTIME('%Y', T1.paymentDate) = '2004'",
        "table": "['customers', 'payments']"
    },
    {
        "question_id": 1557,
        "db_id": "car_retails",
        "question": "Which two products has the highest and lowest expected profits? Determine the total price for each product in terms of the largest quantity that was ordered.",
        "evidence": "expected profits = SUBTRACT(msrp, buyPrice); total price = MULTIPLY(quantityOrdered, priceEach)",
        "question_th": "ผลิตภัณฑ์สองรายการใดมีผลกำไรที่คาดหวังสูงสุดและต่ำสุด กำหนดราคารวมของผลิตภัณฑ์แต่ละรายการในแง่ของปริมาณสูงสุดที่สั่งซื้อ",
        "evidence_th": "กำไรที่คาดหวัง = SUBTRACT(msrp, buyPrice); ราคารวม = MULTIPLY (ปริมาณการสั่งซื้อ ราคาแต่ละรายการ)",
        "SQL": "SELECT T2.productName, SUM(T1.quantityOrdered * T1.priceEach) FROM orderdetails AS T1 INNER JOIN ( SELECT productCode, productName FROM products ORDER BY MSRP - buyPrice DESC LIMIT 1 ) AS T2 ON T1.productCode = T2.productCode UNION SELECT T2.productName, SUM(quantityOrdered * priceEach) FROM orderdetails AS T1 INNER JOIN ( SELECT productCode, productName FROM products ORDER BY MSRP - buyPrice ASC LIMIT 1 ) AS T2 ON T1.productCode = T2.productCode",
        "table": "['orderdetails', 'products']"
    },
    {
        "question_id": 1561,
        "db_id": "car_retails",
        "question": "Please calculate the total value of Motorcycles orders.",
        "evidence": "Motorcycle is a product line; total value = SUM(MULTIPLY(quantityOrdered, priceEach));",
        "question_th": "โปรดคำนวณมูลค่ารวมของคำสั่งซื้อรถจักรยานยนต์",
        "evidence_th": "รถจักรยานยนต์ถือเป็นกลุ่มผลิตภัณฑ์ มูลค่ารวม = SUM(MULTIPLY(ปริมาณการสั่งซื้อ, ราคาแต่ละรายการ));",
        "SQL": "SELECT SUM(T1.quantityOrdered * T1.priceEach) FROM orderdetails AS T1 INNER JOIN products AS T2 ON T1.productCode = T2.productCode WHERE T2.productLine = 'Motorcycles'",
        "table": "['orderdetails', 'products']"
    },
    {
        "question_id": 1584,
        "db_id": "car_retails",
        "question": "How many customers who are in Norway and have credit line under 220000?",
        "evidence": "Norway is a country; credit line refers to creditLimit; creditLimit<220000;",
        "question_th": "ลูกค้าที่อยู่ในนอร์เวย์และมีวงเงินสินเชื่อต่ำกว่า 220000 มีกี่ราย",
        "evidence_th": "นอร์เวย์เป็นประเทศ วงเงินเครดิตหมายถึง creditLimit; เครดิตจำกัด<220000;",
        "SQL": "SELECT COUNT(creditLimit) FROM customers WHERE creditLimit < 220000 AND country = 'Norway'",
        "table": "['customers']"
    },
    {
        "question_id": 1588,
        "db_id": "car_retails",
        "question": "From 2003 to 2004, how many customers have paid more than three times?",
        "evidence": "paymentdate BETWEEN '2003-01-01' AND '2004-12-31'; customers who have paid more than three times refers to (COUNT(customernumber)>3);",
        "question_th": "ตั้งแต่ปี 2546 ถึง 2547 มีลูกค้าจำนวนเท่าใดที่ชำระเงินมากกว่าสามครั้ง",
        "evidence_th": "วันที่ชำระเงินระหว่าง '2003-01-01' และ '31-12-2004'; ลูกค้าที่ชำระเงินมากกว่าสามครั้งหมายถึง (COUNT(หมายเลขลูกค้า)>3);",
        "SQL": "SELECT COUNT(customernumber) FROM ( SELECT customernumber FROM payments WHERE STRFTIME('%Y', paymentDate) >= '2003' AND STRFTIME('%Y', paymentDate) <= '2004' GROUP BY customernumber HAVING COUNT(customernumber) > 3 ) T",
        "table": "['payments']"
    },
    {
        "question_id": 1607,
        "db_id": "car_retails",
        "question": "What profit can the seller Carousel DieCast Legends make from the sale of the product described as \"The perfect holiday or anniversary gift for executives\"?",
        "evidence": "seller and product vendor are synonyms; Carousel DieCast Legends is a product vendor; profit = SUM(SUBTRACT(msrp, buyPrice));",
        "question_th": "ผู้ขาย Carousel DieCast Legends สามารถทำกำไรอะไรได้บ้างจากการขายผลิตภัณฑ์ที่อธิบายว่าเป็น \"ของขวัญวันหยุดหรือวันครบรอบที่สมบูรณ์แบบสำหรับผู้บริหาร\"",
        "evidence_th": "ผู้ขายและผู้จำหน่ายผลิตภัณฑ์เป็นคำพ้องความหมาย Carousel DieCast Legends เป็นผู้จำหน่ายผลิตภัณฑ์ กำไร = SUM(ลบ(msrp, buyPrice));",
        "SQL": "SELECT SUM(T2.MSRP - T2.buyPrice) FROM productlines AS T1 INNER JOIN products AS T2 ON T1.productLine = T2.productLine WHERE T2.productVendor = 'Carousel DieCast Legends' AND T1.textDescription LIKE '%perfect holiday or anniversary gift for executives%'",
        "table": "['productlines', 'products']"
    },
    {
        "question_id": 1609,
        "db_id": "car_retails",
        "question": "Calculate the total quantity ordered for 18th Century Vintage Horse Carriage and the average price.",
        "evidence": "18th Century Vintage Horse Carriage is a product name; average price = AVG(priceEach);",
        "question_th": "คำนวณปริมาณการสั่งซื้อรถม้าโบราณสมัยศตวรรษที่ 18 และราคาเฉลี่ย",
        "evidence_th": "รถม้าโบราณสมัยศตวรรษที่ 18 เป็นชื่อผลิตภัณฑ์ ราคาเฉลี่ย = AVG(ราคาแต่ละรายการ);",
        "SQL": "SELECT SUM(T2.quantityOrdered) , SUM(T2.quantityOrdered * T2.priceEach) / SUM(T2.quantityOrdered) FROM products AS T1 INNER JOIN orderdetails AS T2 ON T1.productCode = T2.productCode WHERE T1.productName = '18th Century Vintage Horse Carriage'",
        "table": "['orderdetails', 'products']"
    },
    {
        "question_id": 1617,
        "db_id": "car_retails",
        "question": "Which customer made the order No. 10160? Give the contact name.",
        "evidence": "",
        "question_th": "ลูกค้าคนไหนสั่งหมายเลข 10160? แจ้งชื่อผู้ติดต่อ.",
        "evidence_th": "",
        "SQL": "SELECT t2.contactFirstName, t2.contactLastName FROM orders AS t1 INNER JOIN customers AS t2 ON t1.customerNumber = t2.customerNumber WHERE t1.orderNumber = '10160'",
        "table": "['customers', 'orders']"
    },
    {
        "question_id": 1619,
        "db_id": "car_retails",
        "question": "For the productline where the product No.S18_2949 was produced, what's the text description for that product line?",
        "evidence": "",
        "question_th": "สำหรับกลุ่มผลิตภัณฑ์ที่ผลิตหมายเลขผลิตภัณฑ์ S18_2949 ข้อความคำอธิบายสำหรับกลุ่มผลิตภัณฑ์นั้นคืออะไร",
        "evidence_th": "",
        "SQL": "SELECT t1.textDescription FROM productlines AS t1 INNER JOIN products AS t2 ON t1.productLine = t2.productLine WHERE t2.productCode = 'S18_2949'",
        "table": "['productlines', 'products']"
    },
    {
        "question_id": 1628,
        "db_id": "car_retails",
        "question": "Please list all the customers that have Steve Patterson as their sales representitive.",
        "evidence": "Steve Patterson is an employee;",
        "question_th": "โปรดระบุลูกค้าทั้งหมดที่มี Steve Patterson เป็นตัวแทนขาย",
        "evidence_th": "Steve Patterson เป็นพนักงาน",
        "SQL": "SELECT t1.customerName FROM customers AS t1 INNER JOIN employees AS t2 ON t1.salesRepEmployeeNumber = t2.employeeNumber WHERE t2.firstName = 'Steve' AND t2.lastName = 'Patterson'",
        "table": "['customers', 'employees']"
    },
    {
        "question_id": 1645,
        "db_id": "car_retails",
        "question": "List all customer names with orders that are disputed.",
        "evidence": "Orders that are disputed refer to status = 'Disputed'; the sales representative means employees; names refers to firstName, lastName.",
        "question_th": "ระบุชื่อลูกค้าทั้งหมดพร้อมคำสั่งซื้อที่มีการโต้แย้ง",
        "evidence_th": "คำสั่งซื้อที่ถูกโต้แย้งอ้างถึงสถานะ = 'โต้แย้ง'; ตัวแทนขาย หมายถึง พนักงาน ชื่อหมายถึงชื่อ, นามสกุล",
        "SQL": "SELECT t3.firstName, t3.lastName FROM orders AS t1 INNER JOIN customers AS t2 ON t1.customerNumber = t2.customerNumber INNER JOIN employees AS t3 ON t2.salesRepEmployeeNumber = t3.employeeNumber WHERE t1.status = 'Disputed'",
        "table": "['customers', 'employees', 'orders']"
    },
    {
        "question_id": 1669,
        "db_id": "car_retails",
        "question": "How many countries from the USA have an In Process order status?",
        "evidence": "country = 'USA'",
        "question_th": "มีกี่ประเทศจากสหรัฐอเมริกาที่มีสถานะคำสั่งซื้ออยู่ระหว่างดำเนินการ",
        "evidence_th": "ประเทศ = 'สหรัฐอเมริกา'",
        "SQL": "SELECT COUNT(t2.orderNumber) FROM customers AS t1 INNER JOIN orders AS t2 ON t1.customerNumber = t2.customerNumber WHERE t2.status = 'On Hold' AND t1.country = 'USA'",
        "table": "['customers', 'orders']"
    },
    {
        "question_id": 1683,
        "db_id": "restaurant",
        "question": "Indicate street and number of the Adelitas Taqueria Restaurants.",
        "evidence": "street refers to street_name; number refers to street_num; Adelitas Taqueria Restaurant refers to label = 'adelitas taqueria'",
        "question_th": "ระบุถนนและหมายเลขของร้านอาหาร Adelitas Taqueria",
        "evidence_th": "ถนนหมายถึง street_name; หมายเลขหมายถึง street_num; ร้านอาหาร Adelitas Taqueria หมายถึงฉลาก = 'adelitas taqueria'",
        "SQL": "SELECT T1.street_name, T1.street_num FROM location AS T1 INNER JOIN generalinfo AS T2 ON T1.id_restaurant = T2.id_restaurant WHERE T2.label = 'adelitas taqueria'",
        "table": "['generalinfo', 'location']"
    },
    {
        "question_id": 1689,
        "db_id": "restaurant",
        "question": "Identify all restaurants in Contra Costa County by id.",
        "evidence": "",
        "question_th": "ระบุร้านอาหารทั้งหมดใน Contra Costa County ด้วยรหัส",
        "evidence_th": "",
        "SQL": "SELECT T1.id_restaurant FROM location AS T1 INNER JOIN geographic AS T2 ON T1.city = T2.city WHERE T2.county = 'contra costa county'",
        "table": "['geographic', 'location']"
    },
    {
        "question_id": 1692,
        "db_id": "restaurant",
        "question": "On which streets in the city of San Francisco are there restaurants with a review of 1.7?",
        "evidence": "street refers to street_name; review of 1.7 refers to review = 1.7",
        "question_th": "บนถนนสายใดบ้างในเมืองซานฟรานซิสโกที่มีร้านอาหารรีวิว 1.7",
        "evidence_th": "ถนนหมายถึง street_name; รีวิว 1.7 หมายถึง รีวิว = 1.7",
        "SQL": "SELECT T2.street_name FROM generalinfo AS T1 INNER JOIN location AS T2 ON T1.id_restaurant = T2.id_restaurant WHERE T1.city = 'san francisco' AND T1.review = 1.7",
        "table": "['generalinfo', 'location']"
    },
    {
        "question_id": 1704,
        "db_id": "restaurant",
        "question": "Please list any five cities that have an unidentified county and region.",
        "evidence": "unidentified county and region refers to county = 'unknown' AND region = 'unknown'",
        "question_th": "โปรดระบุห้าเมืองที่มีเขตและภูมิภาคที่ไม่ระบุชื่อ",
        "evidence_th": "เขตและภูมิภาคที่ไม่ปรากฏชื่อ หมายถึง เคาน์ตี = 'ไม่ทราบ' และ ภูมิภาค = 'ไม่ทราบ'",
        "SQL": "SELECT city FROM geographic WHERE county = 'unknown' AND region = 'unknown' LIMIT 5",
        "table": "['geographic']"
    },
    {
        "question_id": 1706,
        "db_id": "restaurant",
        "question": "Please list all of the street names in Clayton City.",
        "evidence": "",
        "question_th": "โปรดระบุชื่อถนนทั้งหมดใน Clayton City",
        "evidence_th": "",
        "SQL": "SELECT street_name FROM location WHERE city = 'Clayton'",
        "table": "['location']"
    },
    {
        "question_id": 1713,
        "db_id": "restaurant",
        "question": "Please name any three restaurants that have an unidentified region.",
        "evidence": "restaurant name refers to label; unidentified region refers to region = 'unknown'",
        "question_th": "โปรดตั้งชื่อร้านอาหารสามแห่งที่ไม่ระบุภูมิภาค",
        "evidence_th": "ชื่อร้านอาหารหมายถึงฉลาก ภูมิภาคที่ไม่ปรากฏชื่อหมายถึงภูมิภาค = 'ไม่ทราบ'",
        "SQL": "SELECT T2.label FROM location AS T1 INNER JOIN generalinfo AS T2 ON T1.id_restaurant = T2.id_restaurant INNER JOIN geographic AS T3 ON T2.city = T3.city WHERE T3.region = 'unknown' LIMIT 3",
        "table": "['generalinfo', 'geographic', 'location']"
    },
    {
        "question_id": 1722,
        "db_id": "restaurant",
        "question": "How many restaurants have more than 4 star reviews?",
        "evidence": "more than 4 star review refers to review > 4",
        "question_th": "มีร้านอาหารกี่แห่งที่ได้รับรีวิวมากกว่า 4 ดาว?",
        "evidence_th": "รีวิวมากกว่า 4 ดาวหมายถึงรีวิว > 4",
        "SQL": "SELECT COUNT(id_restaurant) AS cnt FROM generalinfo WHERE review > 4",
        "table": "['generalinfo']"
    },
    {
        "question_id": 1732,
        "db_id": "restaurant",
        "question": "What is the review of the restaurant at 8440 Murray Ave?",
        "evidence": "8440 Murray Ave refers to street_num = 8440 and street_name = 'murray ave'",
        "question_th": "รีวิวของร้านอาหารที่ 8440 Murray Ave คืออะไร",
        "evidence_th": "8440 Murray Ave หมายถึง street_num = 8440 และ street_name = 'murray ave'",
        "SQL": "SELECT T2.review FROM location AS T1 INNER JOIN generalinfo AS T2 ON T1.id_restaurant = T2.id_restaurant WHERE T1.street_name = 'murray ave' AND T1.street_num = 8440",
        "table": "['generalinfo', 'location']"
    },
    {
        "question_id": 1757,
        "db_id": "restaurant",
        "question": "Give the review of the restaurant located in Ocean St., Santa Cruz.",
        "evidence": "Ocean St. refers to street_name = 'ocean st'; Santa Cruz refers to city = 'santa cruz'",
        "question_th": "รีวิวร้านอาหารที่ตั้งอยู่ใน Ocean St., Santa Cruz",
        "evidence_th": "Ocean St. หมายถึง street_name = 'ocean st'; ซานตาครูซหมายถึงเมือง = 'ซานตาครูซ'",
        "SQL": "SELECT T2.review FROM location AS T1 INNER JOIN generalinfo AS T2 ON T1.id_restaurant = T2.id_restaurant WHERE T2.city = 'santa cruz' AND T1.street_name = 'ocean st'",
        "table": "['generalinfo', 'location']"
    },
    {
        "question_id": 1763,
        "db_id": "restaurant",
        "question": "In restaurants with a review of 2, how many restaurants have a street number below 500?",
        "evidence": "review of 2 refers to review = 2; street number below 500 refers to street_num < 500",
        "question_th": "ในร้านอาหารที่มีรีวิว 2 ร้าน มีร้านอาหารกี่ร้านที่มีหมายเลขถนนต่ำกว่า 500",
        "evidence_th": "รีวิว 2 หมายถึงรีวิว = 2; หมายเลขถนนที่ต่ำกว่า 500 หมายถึง street_num < 500",
        "SQL": "SELECT COUNT(T1.id_restaurant) FROM location AS T1 INNER JOIN generalinfo AS T2 ON T1.id_restaurant = T2.id_restaurant WHERE T2.review = 2 AND T1.street_num < 500",
        "table": "['generalinfo', 'location']"
    },
    {
        "question_id": 1770,
        "db_id": "restaurant",
        "question": "Among the restaurants located on the street number ranges from 1000 to 2000, what is the percentage of Afghani restaurants are there?",
        "evidence": "street number ranges from 1000 to 2000 refers to 1000 < = street_num < = 2000; Afghani restaurant refers to food_type = 'afghani'; percentage = divide(count(id_restaurant where food_type = 'afghani'), count(id_restaurant)) * 100%",
        "question_th": "ในบรรดาร้านอาหารที่ตั้งอยู่บนหมายเลขถนนมีตั้งแต่ 1,000 ถึง 2,000 มีร้านอาหารอัฟกานีกี่เปอร์เซ็นต์",
        "evidence_th": "หมายเลขถนนมีตั้งแต่ 1,000 ถึง 2,000 หมายถึง 1,000 < = street_num < = 2000; ร้านอาหารอัฟกานิสถานหมายถึง food_type = 'afghani'; เปอร์เซ็นต์ = หาร (นับ (id_restaurant โดยที่ food_type = 'afghani'), นับ (id_restaurant)) * 100%",
        "SQL": "SELECT CAST(SUM(IIF(T2.food_type = 'afghani', 1, 0)) AS REAL) * 100 / COUNT(T1.id_restaurant) FROM location AS T1 INNER JOIN generalinfo AS T2 ON T1.id_restaurant = T2.id_restaurant WHERE 1000 <= T1.street_num <= 2000",
        "table": "['generalinfo', 'location']"
    },
    {
        "question_id": 1778,
        "db_id": "restaurant",
        "question": "How many Indian restaurants are there in the Los Angeles area?",
        "evidence": "Indian restaurant refers to food_type = 'indian'; the Los Angeles area refers to region = 'los angeles area'",
        "question_th": "มีร้านอาหารอินเดียกี่ร้านในพื้นที่ลอสแอนเจลิส",
        "evidence_th": "ร้านอาหารอินเดียหมายถึง food_type = 'อินเดียน'; พื้นที่ลอสแองเจลิสหมายถึงภูมิภาค = 'พื้นที่ลอสแองเจลิส'",
        "SQL": "SELECT COUNT(T1.city) FROM geographic AS T1 INNER JOIN generalinfo AS T2 ON T1.city = T2.city WHERE T2.food_type = 'indian' AND T1.region = 'los angeles area'",
        "table": "['generalinfo', 'geographic']"
    },
    {
        "question_id": 1817,
        "db_id": "soccer_2016",
        "question": "State the name of the city with the most venues.",
        "evidence": "name of the city refers to City_Name; the most venues refers to max(count(Venue_Id))",
        "question_th": "ระบุชื่อเมืองที่มีสถานที่จัดงานมากที่สุด",
        "evidence_th": "ชื่อเมืองหมายถึง City_Name; สถานที่ส่วนใหญ่หมายถึงสูงสุด (จำนวน (Venue_Id))",
        "SQL": "SELECT T1.City_Name FROM City AS T1 INNER JOIN Venue AS T2 ON T1.City_Id = T2.City_Id GROUP BY T1.City_Id ORDER BY COUNT(T2.Venue_Id) DESC LIMIT 1",
        "table": "['City', 'Venue']"
    },
    {
        "question_id": 1822,
        "db_id": "soccer_2016",
        "question": "How many matches were played on May 2008?",
        "evidence": "in May 2008 refers to SUBSTR(Match_Date, 1, 4) = '2008' AND SUBSTR(Match_Date, 7, 1) = '5'",
        "question_th": "มีการแข่งขันกี่นัดในเดือนพฤษภาคม พ.ศ. 2551?",
        "evidence_th": "ในเดือนพฤษภาคม 2551 หมายถึง SUBSTR(Match_Date, 1, 4) = '2008' และ SUBSTR(Match_Date, 7, 1) = '5'",
        "SQL": "SELECT SUM(CASE WHEN SUBSTR(Match_Date, 7, 1) = '5' THEN 1 ELSE 0 END) FROM `Match` WHERE SUBSTR(Match_Date, 1, 4) = '2008'",
        "table": "['Match']"
    },
    {
        "question_id": 1840,
        "db_id": "soccer_2016",
        "question": "Name the player who is born on July 7, 1981.",
        "evidence": "name of the player refers to Player_Name; born on July 7 1981 refers to DOB = '1981-07-07'",
        "question_th": "ตั้งชื่อนักเตะที่เกิดวันที่ 7 กรกฎาคม พ.ศ.2524",
        "evidence_th": "ชื่อของผู้เล่นหมายถึง Player_Name; เกิดวันที่ 7 กรกฎาคม 1981 วันเกิด = '1981-07-07'",
        "SQL": "SELECT Player_name FROM Player WHERE DOB = '1981-07-07'",
        "table": "['Player']"
    },
    {
        "question_id": 1859,
        "db_id": "soccer_2016",
        "question": "How many players got out in the first inning of match ID \"548335\"?",
        "evidence": "got out refers to Player_Out; the first inning refers to Innings_No = 1; match ID \"548335\" refers to Match_Id = 548335",
        "question_th": "มีผู้เล่นกี่คนที่ออกจากเกมในโอกาสแรกของแมตช์ ID \"548335\"?",
        "evidence_th": "ออกไปหมายถึง Player_Out; อินนิ่งแรกหมายถึง Innings_No = 1; รหัสการจับคู่ \"548335\" หมายถึง Match_Id = 548335",
        "SQL": "SELECT SUM(CASE WHEN Match_Id = 548335 THEN 1 ELSE 0 END) FROM Wicket_Taken WHERE Innings_No = 1",
        "table": "['Wicket_Taken']"
    },
    {
        "question_id": 1871,
        "db_id": "soccer_2016",
        "question": "Who was the captain of the winning team in the match held on 1st June 2008?",
        "evidence": "player's name refers to Player_Name; captain refers to Role_Desc = 'Captain'; the winning team refers to Match_Winner = Team_Id; on 1st June 2008 refers to Match_Date = '2008-06-01'",
        "question_th": "ใครคือกัปตันทีมผู้ชนะในการแข่งขันที่จัดขึ้นเมื่อวันที่ 1 มิถุนายน พ.ศ. 2551?",
        "evidence_th": "ชื่อผู้เล่นหมายถึง Player_Name; กัปตันอ้างถึง Role_Desc = 'กัปตัน'; ทีมที่ชนะหมายถึง Match_Winner = Team_Id; วันที่ 1 มิถุนายน 2551 อ้างอิง Match_Date = '2008-06-01'",
        "SQL": "SELECT T3.Player_Name FROM Player_Match AS T1 INNER JOIN Match AS T2 ON T2.Match_Id = T1.Match_Id INNER JOIN Player AS T3 ON T3.Player_Id = T1.Player_Id INNER JOIN Rolee AS T4 ON T4.Role_Id = T1.Role_Id WHERE T2.Match_Date = '2008-06-01' AND T4.Role_Desc = 'Captain' AND T2.Match_Winner = T1.Team_Id",
        "table": "['Match', 'Player', 'Player_Match', 'Rolee']"
    },
    {
        "question_id": 1874,
        "db_id": "soccer_2016",
        "question": "Among the players out in match ID 392187, calculate the percentage of players out by bowl.",
        "evidence": "out by bowl refers to Out_Name = 'bowled'; percentage = divide(count(Player_Out where Out_Name = 'bowled'), count(Player_Out)) * 100% where Match_Id = 392187",
        "question_th": "ในบรรดาผู้เล่นที่ออกในแมตช์ ID 392187 ให้คำนวณเปอร์เซ็นต์ของผู้เล่นออกตามชาม",
        "evidence_th": "out by bowl หมายถึง Out_Name = 'bowled'; เปอร์เซ็นต์ = หาร (นับ (Player_Out โดยที่ Out_Name = 'โบว์ลิ่ง'), นับ (Player_Out)) * 100% โดยที่ Match_Id = 392187",
        "SQL": "SELECT CAST(SUM(CASE WHEN T2.Out_Name = 'bowled' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(T1.Player_Out) FROM Wicket_Taken AS T1 INNER JOIN Out_Type AS T2 ON T2.Out_Id = T1.Kind_Out WHERE T1.Match_Id = 392187",
        "table": "['Out_Type', 'Wicket_Taken']"
    },
    {
        "question_id": 1875,
        "db_id": "soccer_2016",
        "question": "How many percent of the toss-winners decided to bowl first on the pitch from 2010 to 2016?",
        "evidence": "decide to bowl first refers to Toss_Name = 'field'; from 2010 to 2016 refers to Match_Date BETWEEN '2010-01-01' AND '2016-12-31'; percent = divide(count(Toss_Id where Toss_Name = 'field'), count(Toss_Id)) * 100% where Match_Date BETWEEN '2010-01-01' AND '2016-12-31'",
        "question_th": "มีกี่เปอร์เซ็นต์ของผู้ชนะการเสี่ยงโชคที่ตัดสินใจลงเล่นเป็นคนแรกในสนามระหว่างปี 2010 ถึง 2016",
        "evidence_th": "ตัดสินใจที่จะชามก่อนหมายถึง Toss_Name = 'field'; ตั้งแต่ปี 2010 ถึง 2016 หมายถึง Match_Date BETWEEN '2010-01-01' และ '2016-12-31'; เปอร์เซ็นต์ = หาร (นับ (Toss_Id โดยที่ Toss_Name = 'ฟิลด์'), นับ (Toss_Id)) * 100% โดยที่ Match_Date BETWEEN '2010-01-01' และ '2016-12-31'",
        "SQL": "SELECT CAST(SUM(CASE WHEN T2.Toss_Name = 'field' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(T2.Toss_Id) FROM Match AS T1 INNER JOIN Toss_Decision AS T2 ON T2.Toss_Id = T1.Toss_Decide WHERE T1.Match_Date BETWEEN '2010-01-01' AND '2016-12-31'",
        "table": "['Match', 'Toss_Decision']"
    },
    {
        "question_id": 1897,
        "db_id": "soccer_2016",
        "question": "From which country does the most umpires are from? How many of them are from the mentioned country?\n",
        "evidence": "which country refers to Country_Id; most umpires refers to max(count(Umpire_Id))",
        "question_th": "ผู้ตัดสินมาจากประเทศใดมากที่สุด? มีกี่คนที่มาจากประเทศดังกล่าว?\n",
        "evidence_th": "ประเทศใดอ้างถึง Country_Id; ผู้ตัดสินส่วนใหญ่อ้างถึงสูงสุด (จำนวน (Umpire_Id))",
        "SQL": "SELECT T2.Country_Id, COUNT(T1.Umpire_Id) FROM Umpire AS T1 INNER JOIN Country AS T2 ON T2.Country_Id = T1.Umpire_Country GROUP BY T2.Country_Id ORDER BY COUNT(T1.Umpire_Id) DESC LIMIT 1",
        "table": "['Country', 'Umpire']"
    },
    {
        "question_id": 1901,
        "db_id": "soccer_2016",
        "question": "What percentage of players have Legbreak skill?",
        "evidence": "Legbreak skill refers to Bowling_skill = 'Legbreak' ; percentage = divide(sum(Player_Id) when Bowling_skill = 'Legbreak', count(Player_Id)) as percentage",
        "question_th": "ผู้เล่นมีทักษะ Legbreak กี่เปอร์เซ็นต์?",
        "evidence_th": "ทักษะการหักขาหมายถึง Bowling_skill = 'การหักขา' ; เปอร์เซ็นต์ = หาร (ผลรวม (Player_Id) เมื่อ Bowling_skill = 'Legbreak' นับ (Player_Id)) เป็นเปอร์เซ็นต์",
        "SQL": "SELECT CAST(SUM(CASE WHEN T2.Bowling_skill = ' Legbreak' THEN 1 ELSE 0 END) AS REAL) * 100 / TOTAL(T1.Player_Id) FROM Player AS T1 INNER JOIN Bowling_Style AS T2 ON T1.Bowling_skill = T2.Bowling_Id",
        "table": "['Bowling_Style', 'Player']"
    },
    {
        "question_id": 1912,
        "db_id": "soccer_2016",
        "question": "How many first teams chose to bat after winning the toss?",
        "evidence": "first teams refers to Team_1; chose to bat after winning the toss refers to Toss_Winner and Toss_Decide = 2",
        "question_th": "มีกี่ทีมแรกที่เลือกที่จะตีหลังจากชนะการเสี่ยงโชค?",
        "evidence_th": "ทีมแรกหมายถึง Team_1; เลือกตีหลังจากชนะการทอย หมายถึง Toss_Winner และ Toss_Decide = 2",
        "SQL": "SELECT COUNT(Team_1) FROM `Match` WHERE Team_1 = Toss_Winner AND Toss_Decide = 2",
        "table": "['Match']"
    },
    {
        "question_id": 1925,
        "db_id": "soccer_2016",
        "question": "In which venue did Kochi Tuskers Kerala play most of their matches?",
        "evidence": "Kochi Tuskers Kerala refers to Team_Name = 'Kochi Tuskers Kerala'; most of their matches refers to max(Venue_Id)",
        "question_th": "Kochi Tuskers Kerala เล่นแมตช์ส่วนใหญ่ในสถานที่ใด?",
        "evidence_th": "Kochi Tuskers Kerala หมายถึง Team_Name = 'Kochi Tuskers Kerala'; การแข่งขันส่วนใหญ่อ้างถึงสูงสุด (Venue_Id)",
        "SQL": "SELECT T1.Venue_Name FROM Venue AS T1 INNER JOIN Match AS T2 ON T1.Venue_Id = T2.Venue_Id INNER JOIN Team AS T3 ON T2.Team_1 = T3.Team_Id WHERE T3.Team_Name = 'Kochi Tuskers Kerala' GROUP BY T1.Venue_Name",
        "table": "['Match', 'Team', 'Venue']"
    },
    {
        "question_id": 1926,
        "db_id": "soccer_2016",
        "question": "In how many games in which the batting team was the Delhi Daredevils were no runs scored?",
        "evidence": "batting team was the Delhi Daredevils refers to Team_Name = 'Delhi Daredevils' and Team_1 = Team_Id where Team_Batting = 1 or Team_2 = Team_Id where Team_Batting = 2; no runs scored refers to Runs_Scored = 0",
        "question_th": "ในเกมกี่เกมที่ทีมตีบอลคือ Delhi Daredevils ไม่มีการวิ่งทำประตู?",
        "evidence_th": "ทีมตีลูกคือ Delhi Daredevils หมายถึง Team_Name = 'Delhi Daredevils' และ Team_1 = Team_Id โดยที่ Team_Batting = 1 หรือ Team_2 = Team_Id โดยที่ Team_Batting = 2; ไม่มีการรันคะแนน หมายถึง Runs_Scored = 0",
        "SQL": "SELECT COUNT(T1.Runs_Scored) FROM Batsman_Scored AS T1 INNER JOIN Ball_by_Ball AS T2 ON T1.Match_Id = T2.Match_Id INNER JOIN Match AS T3 ON T2.Match_Id = T3.Match_Id INNER JOIN Team AS T4 ON T3.Team_1 = T4.Team_Id WHERE T2.Team_Batting = 1 OR T2.Team_Batting = 2 AND T4.Team_Name = 'Delhi Daredevils'",
        "table": "['Ball_by_Ball', 'Batsman_Scored', 'Match', 'Team']"
    },
    {
        "question_id": 1933,
        "db_id": "soccer_2016",
        "question": "What is the total number of runs scored by the batsmen during the 2nd inning of the match ID 335988?",
        "evidence": "number of runs refers to Runs_Scored; 2nd inning refers to Innings_No = 2",
        "question_th": "จำนวนรันทั้งหมดที่ผู้ตีทำได้ในอินนิงที่ 2 ของแมตช์ ID 335988 คือเท่าไร?",
        "evidence_th": "จำนวนการวิ่งหมายถึง Runs_Scored; อินนิ่งที่ 2 หมายถึง อินนิ่ง_ไม่ใช่ = 2",
        "SQL": "SELECT SUM(Runs_Scored) FROM Batsman_Scored WHERE Match_Id = 335988 AND Innings_No = 2",
        "table": "['Batsman_Scored']"
    },
    {
        "question_id": 1948,
        "db_id": "soccer_2016",
        "question": "Compute the run rate at the end of 16 overs of the match ID 335999. Please include the name of the \"Man of_the Match\".",
        "evidence": "end of 16 overs refers to count(Toss_Name = 'field' ) = 16; run rate = divide(count(Runs_Scored) when Toss_Name = 'bat', sum(Over_Id)when Toss_Name = 'field'); name refers to Player_Name",
        "question_th": "คำนวณอัตราการวิ่งเมื่อสิ้นสุด 16 โอเวอร์ของการแข่งขัน ID 335999 โปรดระบุชื่อของ \"Man of_the Match\"",
        "evidence_th": "จบ 16 โอเวอร์หมายถึงการนับ (Toss_Name = 'field' ) = 16; อัตราการวิ่ง = หาร (นับ (Runs_Scored) เมื่อ Toss_Name = 'bat', ผลรวม (Over_Id) เมื่อ Toss_Name = 'field'); ชื่อหมายถึง Player_Name",
        "SQL": "SELECT CAST(COUNT(CASE WHEN T1.Toss_Name = 'bat' THEN T3.Runs_Scored ELSE NULL END) AS REAL) / SUM(CASE WHEN T1.Toss_Name = 'field' THEN 1 ELSE 0 END) FROM Toss_Decision AS T1 INNER JOIN Match AS T2 ON T1.Toss_Id = T2.Toss_Decide INNER JOIN Batsman_Scored AS T3 ON T2.Match_Id = T3.Match_Id WHERE T2.Match_Id = 335987 AND T2.Match_Date = '2008-04-18' GROUP BY T3.Over_Id HAVING COUNT(T1.Toss_Name = 'field') = 16",
        "table": "['Batsman_Scored', 'Match', 'Toss_Decision']"
    },
    {
        "question_id": 1951,
        "db_id": "soccer_2016",
        "question": "What is the date of the match that has the highest wager on the final result of a game?",
        "evidence": "date of the match refers to Match_Date; highest wager refers to max(Win_Margin)",
        "question_th": "วันที่ของการแข่งขันที่มีเดิมพันสูงสุดกับผลการแข่งขันนัดสุดท้ายของเกมคือวันที่เท่าไร?",
        "evidence_th": "วันที่แข่งขันหมายถึง Match_Date; เดิมพันสูงสุดหมายถึงสูงสุด (Win_Margin)",
        "SQL": "SELECT Match_Date FROM `Match` ORDER BY Win_Margin DESC LIMIT 1",
        "table": "['Match']"
    },
    {
        "question_id": 1959,
        "db_id": "soccer_2016",
        "question": "How many matches did Rajasthan Royals play in Season 8?",
        "evidence": "Season 8 refers to Season_Id = 8",
        "question_th": "Rajasthan Royals เล่นกี่นัดในซีซั่น 8",
        "evidence_th": "ซีซัน 8 หมายถึง Season_Id = 8",
        "SQL": "SELECT SUM(CASE WHEN T1.Season_Id = 8 THEN 1 ELSE 0 END) FROM `Match` AS T1 INNER JOIN Team AS T2 ON T1.Team_1 = T2.Team_Id OR T1.Team_2 = T2.Team_Id WHERE T2.Team_Name = 'Rajasthan Royals'",
        "table": "['Match', 'Team']"
    },
    {
        "question_id": 1962,
        "db_id": "soccer_2016",
        "question": "Which country is the youngest player from?",
        "evidence": "country refers to Country_Name; youngest player refers to max(DOB)",
        "question_th": "นักเตะอายุน้อยที่สุดจากประเทศใด?",
        "evidence_th": "ประเทศ หมายถึง Country_Name; ผู้เล่นที่อายุน้อยที่สุดหมายถึงสูงสุด (DOB)",
        "SQL": "SELECT T1.Country_Name FROM Country AS T1 INNER JOIN Player AS T2 ON T1.Country_Id = T2.Country_Name ORDER BY T2.DOB DESC LIMIT 1",
        "table": "['Country', 'Player']"
    },
    {
        "question_id": 1964,
        "db_id": "soccer_2016",
        "question": "Who is the youngest player to have won the Purple Cap?",
        "evidence": "Who refers to Player_Name; youngest player to have won the Purple Cap refers to min(subtract(Season_Year, DOB))",
        "question_th": "ใครคือผู้เล่นอายุน้อยที่สุดที่ได้แชมป์ Purple Cap?",
        "evidence_th": "ใครหมายถึง Player_Name; ผู้เล่นที่อายุน้อยที่สุดที่ได้รับรางวัลหมวกม่วงหมายถึงขั้นต่ำ(ลบ(Season_Year, DOB))",
        "SQL": "SELECT T1.Player_Name FROM Player AS T1 INNER JOIN Season AS T2 ON T1.Player_Id = T2.Purple_Cap ORDER BY T2.Season_Year - SUBSTR(T1.DOB, 1, 4) LIMIT 1",
        "table": "['Player', 'Season']"
    },
    {
        "question_id": 1966,
        "db_id": "soccer_2016",
        "question": "How many overs were there in each innings of match ID \"336011\"?",
        "evidence": "",
        "question_th": "แต่ละอินนิงของแมตช์ ID \"336011\" มีโอเวอร์กี่โอเวอร์?",
        "evidence_th": "",
        "SQL": "SELECT SUM(CASE WHEN Innings_No = 1 THEN 1 ELSE 0 END) AS IN1 , SUM(CASE WHEN Innings_No = 2 THEN 1 ELSE 0 END) AS IN2 FROM Ball_by_Ball WHERE Match_Id = 336011",
        "table": "['Ball_by_Ball']"
    },
    {
        "question_id": 1967,
        "db_id": "soccer_2016",
        "question": "List the ball IDs, scores, and innings numbers in the over ID 20 of match ID \"335988\".",
        "evidence": "innings numbers refers to Innings_No",
        "question_th": "ระบุรหัสลูกบอล คะแนน และหมายเลขอินนิ่งในรหัสมากกว่า 20 ของรหัสการแข่งขัน \"335988\"",
        "evidence_th": "หมายเลขอินนิ่งหมายถึง Innings_No",
        "SQL": "SELECT Ball_Id, Runs_Scored, Innings_No FROM Batsman_Scored WHERE Match_Id = 335988 AND Over_Id = 20",
        "table": "['Batsman_Scored']"
    },
    {
        "question_id": 1973,
        "db_id": "soccer_2016",
        "question": "How many matches did Mohammad Hafeez play?",
        "evidence": "Mohammad Hafeez refers to Player_Name = 'Mohammad Hafeez';",
        "question_th": "โมฮัมหมัด ฮาฟีซลงเล่นกี่นัด?",
        "evidence_th": "โมฮัมหมัด ฮาฟีซ หมายถึง Player_Name = 'โมฮัมหมัด ฮาฟีซ';",
        "SQL": "SELECT SUM(CASE WHEN T2.Player_Name = 'Mohammad Hafeez' THEN 1 ELSE 0 END) FROM Player_Match AS T1 INNER JOIN Player AS T2 ON T1.Player_Id = T2.Player_Id",
        "table": "['Player', 'Player_Match']"
    },
    {
        "question_id": 1981,
        "db_id": "soccer_2016",
        "question": "How many matches did the Sunrisers Hyderabad team win in 2013?",
        "evidence": "Sunrisers Hyderabad team refers to Team_Name = 'Sunrisers Hyderabad'; in 2013 refers to Match_Date like '2013%';",
        "question_th": "ทีม Sunrisers Hyderabad ชนะกี่นัดในปี 2013",
        "evidence_th": "ทีม Sunrisers Hyderabad หมายถึง Team_Name = 'Sunrisers Hyderabad'; ในปี 2013 อ้างถึง Match_Date เช่น '2013%';",
        "SQL": "SELECT SUM(CASE WHEN Match_Date LIKE '2013%' THEN 1 ELSE 0 END) FROM `Match` AS T1 INNER JOIN Team AS T2 ON T1.Match_Winner = T2.Team_Id WHERE T2.Team_Name = 'Sunrisers Hyderabad'",
        "table": "['Match', 'Team']"
    },
    {
        "question_id": 2005,
        "db_id": "soccer_2016",
        "question": "What is the city name of country ID 3?",
        "evidence": "",
        "question_th": "ชื่อเมืองของประเทศ ID 3 คืออะไร?",
        "evidence_th": "",
        "SQL": "SELECT City_Name FROM City WHERE Country_ID = 3",
        "table": "['City']"
    },
    {
        "question_id": 2013,
        "db_id": "soccer_2016",
        "question": "What are the names of players who participated in season year 2008?",
        "evidence": "season year 2008 refers to Season_Year = 2008",
        "question_th": "ผู้เล่นที่เข้าร่วมฤดูกาล 2551 มีชื่ออะไรบ้าง?",
        "evidence_th": "ฤดูกาลปี 2551 หมายถึง Season_Year = 2551",
        "SQL": "SELECT T1.Player_Name FROM Player AS T1 INNER JOIN Match AS T2 ON T1.Player_Id = T2.Man_of_the_Match INNER JOIN Player_Match AS T3 ON T3.Player_Id = T1.Player_Id INNER JOIN Season AS T4 ON T2.Season_Id = T4.Season_Id WHERE T4.Season_Year = 2008 GROUP BY T1.Player_Name",
        "table": "['Match', 'Player', 'Player_Match', 'Season']"
    },
    {
        "question_id": 2016,
        "db_id": "soccer_2016",
        "question": "List the names of players who played as a keeper.",
        "evidence": "played as a keeper refers to Role_Desc = 'Keeper'; name of player refers to Player_Name;",
        "question_th": "รายชื่อผู้เล่นที่เล่นเป็นผู้รักษาประตู",
        "evidence_th": "เล่นเป็นผู้รักษาประตูหมายถึง Role_Desc = 'Keeper'; ชื่อของผู้เล่นหมายถึง Player_Name;",
        "SQL": "SELECT T1.Player_Name FROM Player AS T1 INNER JOIN Player_Match AS T2 ON T1.Player_Id = T2.Player_Id INNER JOIN Rolee AS T3 ON T2.Role_Id = T3.Role_Id WHERE T3.Role_Desc = 'Keeper' GROUP BY T1.Player_Name",
        "table": "['Player', 'Player_Match', 'Rolee']"
    },
    {
        "question_id": 2033,
        "db_id": "soccer_2016",
        "question": "What are the names of players who had been man of the match more than 5 times in season year 2008?",
        "evidence": "man of the match more than 5 times refers to COUNT(Man_of_the_Match) > 5; in season year 2008 refers to Season_Year = 2008; name of player refers to Player_Name;",
        "question_th": "นักเตะที่ได้แมนออฟเดอะแมตช์มากกว่า 5 ครั้งในฤดูกาลปี 2551 มีชื่ออะไรบ้าง?",
        "evidence_th": "man of the match มากกว่า 5 ครั้ง หมายถึง COUNT(Man_of_the_Match) > 5; ในฤดูกาลปี 2551 หมายถึง Season_Year = 2551; ชื่อของผู้เล่นหมายถึง Player_Name;",
        "SQL": "SELECT CASE WHEN COUNT(T2.Man_of_the_Match) > 5 THEN T1.Player_Name ELSE 0 END FROM Player AS T1 INNER JOIN Match AS T2 ON T1.Player_Id = T2.Man_of_the_Match INNER JOIN Player_Match AS T3 ON T3.Player_Id = T1.Player_Id INNER JOIN Season AS T4 ON T2.Season_Id = T4.Season_Id WHERE T4.Season_Year = 2008",
        "table": "['Match', 'Player', 'Player_Match', 'Season']"
    },
    {
        "question_id": 2067,
        "db_id": "music_tracker",
        "question": "An American rapper '2Pac' released his first solo album in 1991, how many years have passed until his next album was released?",
        "evidence": "2Pac is an artist; album refers to releaseType; groupYear = 1991; SUBTRACT(groupYear = 1991, groupYear where releaseType = 'album' LIMIT 1 OFFSET 1);",
        "question_th": "แร็ปเปอร์ชาวอเมริกัน '2Pac' ออกอัลบั้มเดี่ยวชุดแรกในปี 1991 ผ่านไปกี่ปีกว่าอัลบั้มถัดไปของเขาจะออก?",
        "evidence_th": "2Pac เป็นศิลปิน อัลบั้มหมายถึง releaseType; กลุ่มปี = 1991; SUBTRACT(groupYear = 1991, groupYear โดยที่ releaseType = 'album' LIMIT 1 OFFSET 1);",
        "SQL": "SELECT ( SELECT groupYear FROM torrents WHERE artist LIKE '2Pac' AND releaseType LIKE 'album' ORDER BY groupYear LIMIT 1, 1 ) - groupYear FROM torrents WHERE artist LIKE '2Pac' AND releaseType LIKE 'album' AND groupYear = 1991",
        "table": "['torrents']"
    },
    {
        "question_id": 2082,
        "db_id": "music_tracker",
        "question": "How many singles were released in 1979?",
        "evidence": "releaseType = 'single'; groupYear = 1979;",
        "question_th": "ในปี พ.ศ. 2522 มีซิงเกิลกี่เพลงที่ออก?",
        "evidence_th": "releaseType = 'เดี่ยว'; กลุ่มปี = 1979;",
        "SQL": "SELECT COUNT(releaseType) FROM torrents WHERE releaseType LIKE 'single' AND groupYear = 1979",
        "table": "['torrents']"
    },
    {
        "question_id": 2087,
        "db_id": "music_tracker",
        "question": "Please list all release titles whose tag is jazz in 2005.",
        "evidence": "release titles refer to groupName; groupYear = 2005;",
        "question_th": "โปรดระบุชื่อผลงานทั้งหมดที่มีแท็กเป็น jazz ในปี 2005",
        "evidence_th": "ชื่อที่เผยแพร่อ้างถึง groupName; กลุ่มปี = 2548;",
        "SQL": "SELECT T1.groupName FROM torrents AS T1 INNER JOIN tags AS T2 ON T1.id = T2.id WHERE T1.groupYear = 2005 AND T2.tag LIKE 'jazz'",
        "table": "['tags', 'torrents']"
    },
    {
        "question_id": 2090,
        "db_id": "music_tracker",
        "question": "From 1979 to 1982, what was the percentage of united.states albums out of total albums were released?",
        "evidence": "From 1979 to 1982 refers to groupYear between 1979 and 1982; United States refer to tag; albums refer to releaseType; DIVIDE(COUNT(releaseType = 'album' where tag = 'united.states' and groupYear between 1979 and 1982), COUNT(releaseType = 'album' where groupYear between 1979 and 1982)) as percentage;",
        "question_th": "ตั้งแต่ปี 1979 ถึง 1982 เปอร์เซ็นต์ของอัลบั้มของ united.states จากอัลบั้มทั้งหมดที่ออกคือเท่าใด",
        "evidence_th": "ตั้งแต่ปี 1979 ถึง 1982 หมายถึงกลุ่มปีระหว่างปี 1979 ถึง 1982 สหรัฐอเมริกาอ้างถึงแท็ก; อัลบั้มอ้างถึง releaseType; DIVIDE(COUNT(releaseType = 'album' โดยที่ tag = 'united.states' และ groupYear ระหว่างปี 1979 ถึง 1982), COUNT(releaseType = 'album' โดยที่ groupYear ระหว่าง 1979 ถึง 1982)) เป็นเปอร์เซ็นต์;",
        "SQL": "SELECT CAST(SUM(CASE WHEN T2.tag LIKE 'united.states' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(T1.releaseType) FROM torrents AS T1 INNER JOIN tags AS T2 ON T1.id = T2.id WHERE T1.groupYear BETWEEN 1979 AND 1982 AND T1.releaseType LIKE 'album'",
        "table": "['tags', 'torrents']"
    },
    {
        "question_id": 2094,
        "db_id": "world_development_indicators",
        "question": "Please list the countries in Latin America & Caribbean with a note on the series code SM.POP.TOTL.",
        "evidence": "Countries refer to the ShortName; Latin America & Caribbean is the name of the region",
        "question_th": "โปรดระบุประเทศในละตินอเมริกาและแคริบเบียนพร้อมหมายเหตุในรหัสซีรีส์ SM.POP.TOTL",
        "evidence_th": "ประเทศต่างๆ อ้างถึงชื่อย่อ ละตินอเมริกาและแคริบเบียนเป็นชื่อของภูมิภาค",
        "SQL": "SELECT T1.SHORTNAME, T2.Description FROM Country AS T1 INNER JOIN CountryNotes AS T2 ON T1.CountryCode = T2.Countrycode WHERE T1.Region = 'Latin America & Caribbean' AND T2.Seriescode = 'SM.POP.TOTL'",
        "table": "['Country', 'CountryNotes']"
    },
    {
        "question_id": 2096,
        "db_id": "world_development_indicators",
        "question": "Please list the descriptions of the series code SM.POP.TOTL for all the countries that are under the lending category of the International Development Associations.",
        "evidence": "Countries are the Countrycode; International Development Associations refers to lendingcategory = 'IDA'",
        "question_th": "โปรดระบุคำอธิบายของรหัสซีรี่ส์ SM.POP.TOTL สำหรับทุกประเทศที่อยู่ในหมวดหมู่การให้กู้ยืมของ International Development Associations",
        "evidence_th": "ประเทศเป็นรหัสประเทศ สมาคมพัฒนาระหว่างประเทศ อ้างถึง Lendingcategory = 'IDA'",
        "SQL": "SELECT T2.Description FROM Country AS T1 INNER JOIN CountryNotes AS T2 ON T1.CountryCode = T2.Countrycode WHERE T1.LendingCategory = 'IDA' AND T2.Seriescode = 'SM.POP.TOTL'",
        "table": "['Country', 'CountryNotes']"
    },
    {
        "question_id": 2098,
        "db_id": "world_development_indicators",
        "question": "Among the countries in the High income: OECD group whose currency unit is Euro, how many of them have a note on the series code SP.DYN.AMRT.FE?",
        "evidence": "countries refer to Countrycode; in the high income refers to incomegroup = 'High'; with notes refers to description IS NOT NULL; series code SP.DYN.AMRT.FE refers to Seriescode = 'SP.DYN.AMRT.FE'",
        "question_th": "ในบรรดาประเทศในกลุ่มรายได้สูง: กลุ่ม OECD ซึ่งมีหน่วยสกุลเงินเป็นยูโร มีกี่ประเทศที่มีหมายเหตุในรหัสชุด SP.DYN.AMRT.FE",
        "evidence_th": "ประเทศต่างๆ อ้างอิงถึงรหัสประเทศ ในรายได้สูงหมายถึงกลุ่มรายได้ = 'สูง'; มีหมายเหตุหมายถึงคำอธิบายไม่เป็นโมฆะ; รหัสชุด SP.DYN.AMRT.FE หมายถึง Seriescode = 'SP.DYN.AMRT.FE'",
        "SQL": "SELECT COUNT(T1.Countrycode) FROM Country AS T1 INNER JOIN CountryNotes AS T2 ON T1.CountryCode = T2.Countrycode WHERE T1.IncomeGroup = 'High income: OECD' AND T1.CurrencyUnit = 'Euro' AND T2.Seriescode = 'SP.DYN.AMRT.FE'",
        "table": "['Country', 'CountryNotes']"
    },
    {
        "question_id": 2104,
        "db_id": "world_development_indicators",
        "question": "For how many consecutive years did Aruba get a footnote on the series code BX.KLT.DINV.CD.WD?",
        "evidence": "Aruba is the name of country where ShortName = 'Aruba'",
        "question_th": "Aruba ได้รับเชิงอรรถในรหัสซีรีส์ BX.KLT.DINV.CD.WD ติดต่อกันกี่ปี?",
        "evidence_th": "Aruba เป็นชื่อประเทศที่ ShortName = 'Aruba'",
        "SQL": "SELECT COUNT(T2.Year) FROM Country AS T1 INNER JOIN FootNotes AS T2 ON T1.CountryCode = T2.Countrycode WHERE T1.ShortName = 'Aruba' AND T2.Seriescode = 'BX.KLT.DINV.CD.WD'",
        "table": "['Country', 'FootNotes']"
    },
    {
        "question_id": 2106,
        "db_id": "world_development_indicators",
        "question": "What are the special notes for the country whose average adolescent fertility rate is the highest?",
        "evidence": "the average adolescent fertility rate is DIVIDE(SUM(value), SUM(IndicatorName like 'adolescent fertility rate%')); MAX(average adolescent fertility rate)",
        "question_th": "ข้อควรทราบพิเศษสำหรับประเทศที่มีอัตราการเจริญพันธุ์ของวัยรุ่นโดยเฉลี่ยสูงที่สุดมีอะไรบ้าง",
        "evidence_th": "อัตราการเจริญพันธุ์โดยเฉลี่ยของวัยรุ่นคือ DIVIDE(SUM(value), SUM(ชื่อตัวบ่งชี้ เช่น 'อัตราการเจริญพันธุ์ของวัยรุ่น%')); MAX(อัตราการเจริญพันธุ์ของวัยรุ่นโดยเฉลี่ย)",
        "SQL": "SELECT DISTINCT T1.SpecialNotes FROM Country AS T1 INNER JOIN Indicators AS T2 ON T1.CountryCode = T2.CountryCode WHERE T2.Value = ( SELECT Value FROM Indicators WHERE IndicatorName LIKE 'Adolescent fertility rate%' ORDER BY Value DESC LIMIT 1 )",
        "table": "['Country', 'Indicators']"
    },
    {
        "question_id": 2136,
        "db_id": "world_development_indicators",
        "question": "In 2005, which series codes use the International Monetary Fund, Balance of Payments Statistics Yearbook and data files source?",
        "evidence": "Year contains '2005'; series codes contain 'International Monetary Fund'",
        "question_th": "ในปี 2005 รหัสชุดใดใช้ International Monetary Fund, Balance of Payments Statistics Yearbook และแหล่งข้อมูลไฟล์ข้อมูล",
        "evidence_th": "ปีประกอบด้วย '2005'; รหัสชุดประกอบด้วย 'กองทุนการเงินระหว่างประเทศ'",
        "SQL": "SELECT T1.Seriescode, T2.Source FROM Footnotes AS T1 INNER JOIN Series AS T2 ON T1.Seriescode = T2.SeriesCode WHERE T1.Year LIKE '%2005%' AND T2.Source LIKE 'International Monetary Fund%'",
        "table": "['Footnotes', 'Series']"
    },
    {
        "question_id": 2146,
        "db_id": "world_development_indicators",
        "question": "From 1960 to 1965, which country has the lowest value of indicator belongs to Health: Population: Structure?",
        "evidence": "From 1960 to 1965 refers to Year between '1960' and '1965'; the lowest value implies MIN(Value); country refers to CountryName;",
        "question_th": "ตั้งแต่ปี 1960 ถึง 1965 ประเทศใดที่มีค่าตัวบ่งชี้ต่ำที่สุดจัดอยู่ในกลุ่ม Health: Population: Structure?",
        "evidence_th": "ตั้งแต่ปี 1960 ถึง 1965 หมายถึงปีระหว่าง '1960' ถึง '1965'; ค่าต่ำสุดหมายถึง MIN(Value); ประเทศ หมายถึง CountryName;",
        "SQL": "SELECT CountryName FROM Indicators WHERE Value = ( SELECT MIN(T1.Value) FROM Indicators AS T1 INNER JOIN Series AS T2 ON T1.IndicatorName = T2.IndicatorName WHERE T1.Year >= 1960 AND T1.Year < 1966 AND T2.Topic = 'Health: Population: Structure' )",
        "table": "['Indicators', 'Series']"
    },
    {
        "question_id": 2171,
        "db_id": "world_development_indicators",
        "question": "What are the footnote description of Finland in year 2000?",
        "evidence": "Finland is the short name of the country; year 2000 refers to Year = 'YR2000';",
        "question_th": "คำอธิบายเชิงอรรถของประเทศฟินแลนด์ในปี พ.ศ. 2543 คืออะไร",
        "evidence_th": "ฟินแลนด์เป็นชื่อย่อของประเทศ ปี 2000 หมายถึง ปี = 'YR2000';",
        "SQL": "SELECT DISTINCT T2.Description FROM Country AS T1 INNER JOIN FootNotes AS T2 ON T1.CountryCode = T2.Countrycode WHERE T1.TableName = 'Finland' AND T2.Year = 'YR2000'",
        "table": "['Country', 'FootNotes']"
    },
    {
        "question_id": 2174,
        "db_id": "world_development_indicators",
        "question": "State the currency of Malaysia and what are the indicator code used by this country in 1970?",
        "evidence": "Malaysia is the name of the country; currency refers to CurrencyUnit; Year = '1970';",
        "question_th": "ระบุสกุลเงินของมาเลเซีย และรหัสบ่งชี้ที่ใช้โดยประเทศนี้ในปี 1970 คืออะไร",
        "evidence_th": "มาเลเซียเป็นชื่อของประเทศ สกุลเงินหมายถึงหน่วยสกุลเงิน ปี = '1970';",
        "SQL": "SELECT T1.currencyunit, T2.IndicatorCode FROM Country AS T1 INNER JOIN Indicators AS T2 ON T1.CountryCode = T2.CountryCode WHERE T1.TableName = 'Malaysia' AND T2.Year = 1970",
        "table": "['Country', 'Indicators']"
    },
    {
        "question_id": 2178,
        "db_id": "world_development_indicators",
        "question": "List the series code of country with country notes description as \"Data sources : Eurostat\" and state the Wb2Code of these countries.",
        "evidence": "",
        "question_th": "แสดงรายการรหัสชุดของประเทศพร้อมคำอธิบายบันทึกประเทศเป็น \"แหล่งข้อมูล: Eurostat\" และระบุ Wb2Code ของประเทศเหล่านี้",
        "evidence_th": "",
        "SQL": "SELECT T2.seriescode, T1.Wb2Code FROM Country AS T1 INNER JOIN CountryNotes AS T2 ON T1.CountryCode = T2.Countrycode WHERE T2.Description = 'Data sources : Eurostat'",
        "table": "['Country', 'CountryNotes']"
    },
    {
        "question_id": 2179,
        "db_id": "world_development_indicators",
        "question": "Among the low income countries, which country has the lowest fertility rate?",
        "evidence": "fertility rate refers to IndicatorName = 'Adolescent fertility rate (births per 1,000 women ages 15-19)'; lowest refers to MIN(Value); IncomeGroup = 'Low income';",
        "question_th": "ในบรรดาประเทศที่มีรายได้ต่ำ ประเทศใดมีอัตราการเจริญพันธุ์ต่ำที่สุด?",
        "evidence_th": "อัตราการเจริญพันธุ์อ้างอิงถึง IndicatorName = 'อัตราการเจริญพันธุ์ของวัยรุ่น (การเกิดต่อผู้หญิง 1,000 คน อายุ 15-19 ปี)'; ต่ำสุดหมายถึง MIN(ค่า); IncomeGroup = 'รายได้ต่ำ';",
        "SQL": "SELECT T2.CountryName FROM Country AS T1 INNER JOIN Indicators AS T2 ON T1.CountryCode = T2.CountryCode WHERE T1.IncomeGroup = 'Low income' AND T2.IndicatorName = 'Adolescent fertility rate (births per 1,000 women ages 15-19)' ORDER BY T2.Value LIMIT 1",
        "table": "['Country', 'Indicators']"
    },
    {
        "question_id": 2208,
        "db_id": "world_development_indicators",
        "question": "From 1961 to 1980, what was the highest percentage of land used for agriculture in the Republic of Benin?",
        "evidence": "from 1961 to 1980 refers to year between '1961' and '1980'; the highest percentage of land used for agriculture refers to max(value where IndicatorName = 'Agricultural land (% of land area)'); in the Republic of Benin refers to longname = 'Republic of Benin'",
        "question_th": "จากปี 1961 ถึง 1980 เปอร์เซ็นต์ที่ดินที่ใช้เพื่อการเกษตรในสาธารณรัฐเบนินสูงที่สุดคือเท่าใด",
        "evidence_th": "ตั้งแต่ปี 1961 ถึง 1980 หมายถึงปีระหว่าง '1961' ถึง '1980'; เปอร์เซ็นต์สูงสุดของที่ดินที่ใช้เพื่อการเกษตรหมายถึงสูงสุด (ค่าโดยที่ IndicatorName = 'ที่ดินเพื่อเกษตรกรรม (% ของพื้นที่)'); ในสาธารณรัฐเบนิน เรียกชื่อยาว = 'สาธารณรัฐเบนิน'",
        "SQL": "SELECT MAX(T1.Value) FROM Indicators AS T1 INNER JOIN Country AS T2 ON T1.CountryCode = T2.CountryCode WHERE T1.Year >= 1961 AND T1.Year < 1981 AND T1.IndicatorName LIKE 'Agricultural land (% of land area)' AND T2.LongName = 'Republic of Benin'",
        "table": "['Country', 'Indicators']"
    },
    {
        "question_id": 2210,
        "db_id": "world_development_indicators",
        "question": "What was the deposit interest rate in the Commonwealth of Australia in 1979 in percentage?",
        "evidence": "deposit interest rate refers to value where IndicatorName = 'Deposit interest rate (%)'; in the Commonwealth of Australia refers to  LongName = 'Commonwealth of Australia'; in 1979 refers to Year = '1979'",
        "question_th": "อัตราดอกเบี้ยเงินฝากในเครือจักรภพออสเตรเลียในปี 1979 เป็นเปอร์เซ็นต์เท่าใด",
        "evidence_th": "อัตราดอกเบี้ยเงินฝากหมายถึงมูลค่า โดยที่ IndicatorName = 'อัตราดอกเบี้ยเงินฝาก (%)'; ในเครือจักรภพแห่งออสเตรเลียหมายถึง  LongName = 'เครือจักรภพแห่งออสเตรเลีย'; ในปี 1979 หมายถึง ปี = '1979'",
        "SQL": "SELECT T1.Value FROM Indicators AS T1 INNER JOIN Country AS T2 ON T1.CountryCode = T2.CountryCode WHERE T2.LongName = 'Commonwealth of Australia' AND T1.IndicatorName = 'Deposit interest rate (%)' AND T1.Year = 1979",
        "table": "['Country', 'Indicators']"
    },
    {
        "question_id": 2223,
        "db_id": "world_development_indicators",
        "question": "In Sub-Saharan Africa, how many female out-of-school children of primary school age are there in the country with the higest number of female out-of-school children of primary school age? Indicate the year of when it was recorded.",
        "evidence": "in Sub-Saharan Africa refers to Region = 'Sub-Saharan Africa'; the higest number of female out-of-school children of primary school age refers to max(value where IndicatorName = 'Out-of-school children of primary school age, female (number)')",
        "question_th": "ในแอฟริกาตอนใต้ทะเลทรายซาฮารา มีเด็กผู้หญิงนอกวัยเรียนระดับประถมศึกษาจำนวนกี่คนในประเทศนี้ โดยมีจำนวนเด็กผู้หญิงนอกวัยเรียนชั้นประถมศึกษามากที่สุด ระบุปีที่บันทึก",
        "evidence_th": "ใน Sub-Saharan Africa หมายถึงภูมิภาค = 'Sub-Saharan Africa'; จำนวนสูงสุดของเด็กผู้หญิงนอกโรงเรียนในวัยประถม หมายถึงค่าสูงสุด (ค่าโดยที่ IndicatorName = 'เด็กนอกโรงเรียนในวัยประถม เพศหญิง (จำนวน)')",
        "SQL": "SELECT MAX(T1.value), T1.year FROM indicators AS T1 INNER JOIN country AS T2 ON T1.CountryCode = T2.CountryCode WHERE T2.Region = 'Sub-Saharan Africa' AND T1.IndicatorName = 'Out-of-school children of primary school age, female (number)'",
        "table": "['country', 'indicators']"
    },
    {
        "question_id": 2234,
        "db_id": "world_development_indicators",
        "question": "In which years does the country whose Alpha2Code is 1A have a result of the indicator Adolescent fertility rate?",
        "evidence": "indicator Adolescent fertility rate refers to IndicatorName = 'Adolescent fertility rate (births per 1,000 women ages 15-19)'\n\n",
        "question_th": "ประเทศที่ Alpha2Code เป็น 1A มีผลตัวชี้วัดอัตราการเจริญพันธุ์ของวัยรุ่นในปีใดบ้าง",
        "evidence_th": "ตัวบ่งชี้อัตราการเจริญพันธุ์ของวัยรุ่น หมายถึง IndicatorName = 'อัตราการเจริญพันธุ์ของวัยรุ่น (การเกิดต่อผู้หญิง 1,000 คน อายุ 15-19 ปี)'\n\n",
        "SQL": "SELECT T2.Year FROM Country AS T1 INNER JOIN Indicators AS T2 ON T1.CountryCode = T2.CountryCode WHERE T1.Alpha2Code = '1A' AND T2.IndicatorName = 'Adolescent fertility rate (births per 1,000 women ages 15-19)'",
        "table": "['Country', 'Indicators']"
    },
    {
        "question_id": 2239,
        "db_id": "world_development_indicators",
        "question": "What is the note for Australia on the indicator SP.ADO.TFRT?",
        "evidence": "note refers to Description; for Australia refers to ShortName = 'Australia'; indicator SP.ADO.TFRT refers to Seriescode = 'SP.ADO.TFRT'",
        "question_th": "หมายเหตุสำหรับออสเตรเลียบนตัวบ่งชี้ SP.ADO.TFRT คืออะไร?",
        "evidence_th": "หมายเหตุหมายถึงคำอธิบาย; สำหรับออสเตรเลีย หมายถึง ShortName = 'Australia'; ตัวบ่งชี้ SP.ADO.TFRT หมายถึง Seriescode = 'SP.ADO.TFRT'",
        "SQL": "SELECT T2.Description FROM Country AS T1 INNER JOIN CountryNotes AS T2 ON T1.CountryCode = T2.Countrycode WHERE T2.Seriescode = 'SP.ADO.TFRT' AND T1.ShortName = 'Australia'",
        "table": "['Country', 'CountryNotes']"
    },
    {
        "question_id": 2253,
        "db_id": "movielens",
        "question": "What is the average occupation of users whose ratings are not more than 2 ?",
        "evidence": "",
        "question_th": "อาชีพเฉลี่ยของผู้ใช้ที่มีคะแนนไม่เกิน 2 คือเท่าใด",
        "evidence_th": "",
        "SQL": "SELECT AVG(T2.occupation) FROM u2base AS T1 INNER JOIN users AS T2 ON T1.userid = T2.userid WHERE T1.rating < 2",
        "table": "['u2base', 'users']"
    },
    {
        "question_id": 2264,
        "db_id": "movielens",
        "question": "Please list down the ID of actors and directors in action movies.",
        "evidence": "",
        "question_th": "โปรดระบุรหัสของนักแสดงและผู้กำกับในภาพยนตร์แอคชั่น",
        "evidence_th": "",
        "SQL": "SELECT T2.actorid, T1.directorid FROM movies2directors AS T1 INNER JOIN movies2actors AS T2 ON T1.movieid = T2.movieid WHERE T1.genre = 'Action'",
        "table": "['movies2actors', 'movies2directors']"
    },
    {
        "question_id": 2274,
        "db_id": "movielens",
        "question": "List down 5 non English adventure movies from UK?",
        "evidence": "not English refers to isEnglish = 'F'; UK is a country",
        "question_th": "รายชื่อภาพยนตร์ผจญภัยที่ไม่ใช่ภาษาอังกฤษ 5 เรื่องจากสหราชอาณาจักร?",
        "evidence_th": "ไม่ใช่ภาษาอังกฤษหมายถึง isEnglish = 'F'; สหราชอาณาจักรเป็นประเทศ",
        "SQL": "SELECT T1.movieid FROM movies2directors AS T1 INNER JOIN movies AS T2 ON T1.movieid = T2.movieid WHERE T2.country = 'UK' AND T1.genre = 'Adventure' AND T2.isEnglish = 'F' LIMIT 5",
        "table": "['movies', 'movies2directors']"
    },
    {
        "question_id": 2279,
        "db_id": "movielens",
        "question": "For the male users no older than 18, how many times have they given the highest rating?",
        "evidence": "Male users refers to u_gender = 'M'",
        "question_th": "สำหรับผู้ใช้เพศชายอายุไม่เกิน 18 ปี ให้คะแนนสูงสุดกี่ครั้ง?",
        "evidence_th": "ผู้ใช้เพศชายหมายถึง u_gender = 'M'",
        "SQL": "SELECT COUNT(T1.movieid) FROM u2base AS T1 INNER JOIN users AS T2 ON T1.userid = T2.userid WHERE T1.rating = 5 AND T2.age < 18 AND T2.u_gender = 'M'",
        "table": "['u2base', 'users']"
    },
    {
        "question_id": 2282,
        "db_id": "movielens",
        "question": "Please list different IDs of movies that are the newest and have gotten the lowest rating.",
        "evidence": "Year contains relative value, higer year value refers to newer date; Year = 4 refers to newest date, Year = 1 refer to oldest date; Lowest rating = 1",
        "question_th": "โปรดระบุ ID ต่างๆ ของภาพยนตร์ที่ใหม่ล่าสุดและได้รับเรตติ้งต่ำที่สุด",
        "evidence_th": "ปีมีค่าสัมพัทธ์ ค่าปีที่สูงกว่าหมายถึงวันที่ใหม่กว่า ปี = 4 หมายถึงวันที่ใหม่ล่าสุด ปี = 1 หมายถึงวันที่เก่าที่สุด คะแนนต่ำสุด = 1",
        "SQL": "SELECT DISTINCT T1.movieid FROM u2base AS T1 INNER JOIN movies AS T2 ON T1.movieid = T2.movieid WHERE T2.year = 4 AND T1.rating = 1",
        "table": "['movies', 'u2base']"
    },
    {
        "question_id": 2285,
        "db_id": "movielens",
        "question": "For different directors who direct well, how many of them have directed an action film?",
        "evidence": "direct well means the quality of directing is good, which means d_quality = 4.",
        "question_th": "สำหรับผู้กำกับคนละคนกันที่กำกับได้ดี มีกี่คนที่กำกับหนังแอคชั่นเรื่องหนึ่ง?",
        "evidence_th": "Direct well หมายถึง คุณภาพการกำกับดี ซึ่งหมายถึง d_quality = 4",
        "SQL": "SELECT COUNT(DISTINCT T2.directorid) FROM movies2directors AS T2 INNER JOIN directors AS T3 ON T2.directorid = T3.directorid WHERE T2.genre = 'Action' AND T3.d_quality = 4",
        "table": "['directors', 'movies2directors']"
    },
    {
        "question_id": 2295,
        "db_id": "movielens",
        "question": "Which directors with the best quality directed the most films?",
        "evidence": "d_quality = 5 refers to direct the best",
        "question_th": "ผู้กำกับคนไหนที่มีคุณภาพดีที่สุดกำกับภาพยนตร์มากที่สุด?",
        "evidence_th": "d_quality = 5 หมายถึง ตรงที่สุด",
        "SQL": "SELECT T1.directorid FROM directors AS T1 INNER JOIN movies2directors AS T2 ON T1.directorid = T2.directorid WHERE T1.d_quality = 5 GROUP BY T1.directorid ORDER BY COUNT(T2.movieid) DESC LIMIT 1",
        "table": "['directors', 'movies2directors']"
    },
    {
        "question_id": 2297,
        "db_id": "movielens",
        "question": "How many of the movies rated 5 are rated by a user between the ages of 25 and 35?",
        "evidence": "",
        "question_th": "มีภาพยนตร์กี่เรื่องที่ได้รับการจัดอันดับ 5 ที่ได้รับการจัดอันดับโดยผู้ใช้ที่มีอายุระหว่าง 25 ถึง 35 ปี",
        "evidence_th": "",
        "SQL": "SELECT COUNT(T1.movieid) FROM u2base AS T1 INNER JOIN users AS T2 ON T1.userid = T2.userid WHERE T1.rating = 5 AND T2.age BETWEEN 25 AND 35",
        "table": "['u2base', 'users']"
    },
    {
        "question_id": 2301,
        "db_id": "movielens",
        "question": "Which genre contains the greatest number of non-English films?",
        "evidence": "isEnglish = 'F' means non-English",
        "question_th": "ประเภทใดที่มีภาพยนตร์ที่ไม่ใช่ภาษาอังกฤษมากที่สุด",
        "evidence_th": "isEnglish = 'F' หมายถึง ไม่ใช่ภาษาอังกฤษ",
        "SQL": "SELECT T2.genre FROM movies AS T1 INNER JOIN movies2directors AS T2 ON T1.movieid = T2.movieid WHERE T1.isEnglish = 'F' GROUP BY T2.genre ORDER BY COUNT(T1.movieid) DESC LIMIT 1",
        "table": "['movies', 'movies2directors']"
    },
    {
        "question_id": 2321,
        "db_id": "movielens",
        "question": "How many separate 35 year-old uesers have rated the movie from UK?",
        "evidence": "UK is a country",
        "question_th": "มีผู้ใช้อายุ 35 ปีกี่คนที่ให้คะแนนภาพยนตร์จากสหราชอาณาจักร",
        "evidence_th": "สหราชอาณาจักรเป็นประเทศ",
        "SQL": "SELECT COUNT(DISTINCT T2.userid) FROM movies AS T1 INNER JOIN u2base AS T2 ON T1.movieid = T2.movieid INNER JOIN users AS T3 ON T2.userid = T3.userid WHERE T1.country = 'UK' AND T3.age = 35",
        "table": "['movies', 'u2base', 'users']"
    },
    {
        "question_id": 2355,
        "db_id": "superstore",
        "question": "Among the customers who have ordered the product \"Telescoping Adjustable Floor Lamp\", how many of them are consumers?",
        "evidence": "\"Telescoping Adjustable Floor Lamp\" is a \"Product Name\"; consumers refers to Segment = 'Consumer';",
        "question_th": "ในบรรดาลูกค้าที่สั่งจองสินค้า “โคมไฟตั้งพื้นแบบปรับได้เหลื่อม” มีลูกค้าจำนวนกี่ราย?",
        "evidence_th": "\"โคมไฟตั้งพื้นแบบปรับได้แบบเหลื่อม\" คือ \"ชื่อผลิตภัณฑ์\"; ผู้บริโภคหมายถึงกลุ่ม = 'ผู้บริโภค';",
        "SQL": "SELECT COUNT(DISTINCT T1.`Customer Name`) FROM people AS T1 INNER JOIN central_superstore AS T2 ON T1.`Customer ID` = T2.`Customer ID` INNER JOIN product AS T3 ON T3.`Product ID` = T2.`Product ID` WHERE T3.`Product Name` = 'Telescoping Adjustable Floor Lamp' AND T1.Segment = 'Consumer'",
        "table": "[]"
    },
    {
        "question_id": 2361,
        "db_id": "superstore",
        "question": "Who is the customer who purchased the largest total cost of products in a single order?",
        "evidence": "largest total cost refers to MAX(SUTRACT(MULTIPLY(DIVIDE(Sales, SUTRACT(1, discount)), Quantity), Profit))",
        "question_th": "ลูกค้าที่ซื้อต้นทุนรวมของผลิตภัณฑ์ที่ใหญ่ที่สุดในคำสั่งซื้อเดียวคือใคร",
        "evidence_th": "ต้นทุนรวมที่ใหญ่ที่สุดหมายถึง MAX(SUTRACT(MULTIPLY(DIVIDE(ยอดขาย, SUTRACT(1, ส่วนลด)), ปริมาณ), กำไร))",
        "SQL": "SELECT T2.`Customer Name` FROM east_superstore AS T1 INNER JOIN people AS T2 ON T1.`Customer ID` = T2.`Customer ID` GROUP BY T1.`Order ID`, T2.`Customer Name` ORDER BY SUM((T1.Sales / (1 - T1.Discount)) * T1.Quantity - T1.Profit) DESC LIMIT 1",
        "table": "['east_superstore', 'people']"
    },
    {
        "question_id": 2387,
        "db_id": "superstore",
        "question": "Among the customers from Chicago, Illinois, what is the highest quantity of products bought in a single order?",
        "evidence": "from Chicago refers to City = 'Chicago'; Illinois refers to State = 'Illinois'; highest quantity refers to max(Quantity)",
        "question_th": "ในบรรดาลูกค้าจากชิคาโก รัฐอิลลินอยส์ สินค้าที่ซื้อในคำสั่งซื้อเดียวมีปริมาณมากที่สุดคือเท่าใด",
        "evidence_th": "จากชิคาโกหมายถึงเมือง = 'ชิคาโก'; อิลลินอยส์หมายถึงรัฐ = 'อิลลินอยส์'; ปริมาณสูงสุดหมายถึงสูงสุด (ปริมาณ)",
        "SQL": "SELECT T1.Quantity FROM west_superstore AS T1 INNER JOIN east_superstore AS T2 ON T1.`Customer ID` = T2.`Customer ID` INNER JOIN central_superstore AS T3 ON T3.`Customer ID` = T2.`Customer ID` INNER JOIN south_superstore AS T4 ON T4.`Customer ID` = T3.`Customer ID` INNER JOIN people AS T5 ON T5.`Customer ID` = T4.`Customer ID` WHERE T5.City = 'Chicago' AND T5.State = 'Illinois' ORDER BY T1.Quantity DESC LIMIT 1",
        "table": "['east_superstore', 'west_superstore']"
    },
    {
        "question_id": 2389,
        "db_id": "superstore",
        "question": "List down the customers that purchased the product named Xerox 23 in the South region.",
        "evidence": "product named Xerox 23 refers to \"Product Name\" = 'Xerox 23'; customers refers to \"Customer Name\"",
        "question_th": "ลงรายชื่อลูกค้าที่ซื้อผลิตภัณฑ์ชื่อ Xerox 23 ในภาคใต้",
        "evidence_th": "ผลิตภัณฑ์ชื่อ Xerox 23 หมายถึง \"ชื่อผลิตภัณฑ์\" = 'Xerox 23'; ลูกค้า หมายถึง \"ชื่อลูกค้า\"",
        "SQL": "SELECT DISTINCT T2.`Customer Name` FROM south_superstore AS T1 INNER JOIN people AS T2 ON T1.`Customer ID` = T2.`Customer ID` INNER JOIN product AS T3 ON T3.`Product ID` = T1.`Product ID` WHERE T1.Region = 'South' AND T3.`Product Name` = 'Xerox 23'",
        "table": "['people', 'south_superstore']"
    },
    {
        "question_id": 2393,
        "db_id": "superstore",
        "question": "Name the customers from the Eastern region whose orders cost above 80000.",
        "evidence": "cost above 80000 refers to SUTRACT(MULTIPLY(DIVIDE(Sales, SUTRACT(1, discount)), Quantity), Profit) > 80000",
        "question_th": "ตั้งชื่อลูกค้าจากภาคตะวันออกที่มียอดสั่งซื้อมากกว่า 80000",
        "evidence_th": "ต้นทุนที่สูงกว่า 80,000 หมายถึง SUTRACT(คูณ(หาร(ยอดขาย, SUTRACT(1, ส่วนลด)), ปริมาณ), กำไร) > 80000",
        "SQL": "SELECT DISTINCT T2.`Customer Name` FROM east_superstore AS T1 INNER JOIN people AS T2 ON T1.`Customer ID` = T2.`Customer ID` WHERE T1.Region = 'East' AND T1.Sales / (1 - T1.Discount) * T1.Quantity - T1.Profit > 80000",
        "table": "['east_superstore', 'people']"
    },
    {
        "question_id": 2399,
        "db_id": "superstore",
        "question": "Compare the numbers of orders between the Eastern and Western stores in 2015.",
        "evidence": "in 2015 refers to strftime('%Y', \"Order Date\") = '2015'; Eastern store refers to east_superstore; Western store refers west_superstore;",
        "question_th": "เปรียบเทียบจำนวนคำสั่งซื้อระหว่างร้านค้าตะวันออกและตะวันตกในปี 2558",
        "evidence_th": "ในปี 2558 อ้างถึง strftime('%Y', \"วันที่สั่งซื้อ\") = '2015'; ร้านค้าตะวันออกหมายถึง east_superstore; ร้านค้าตะวันตกหมายถึง west_superstore;",
        "SQL": "SELECT east, west FROM ( SELECT COUNT(`Order ID`) AS east , ( SELECT COUNT(`Order ID`) FROM west_superstore WHERE `Order Date` LIKE '2015%' ) AS west FROM east_superstore WHERE `Order Date` LIKE '2015%' )",
        "table": "[]"
    },
    {
        "question_id": 2409,
        "db_id": "superstore",
        "question": "What product category that Sam Craven ordered from the central and east superstore?",
        "evidence": "",
        "question_th": "สินค้าหมวดไหนที่ Sam Craven สั่งซื้อจากซุปเปอร์สโตร์ภาคกลางและตะวันออก?",
        "evidence_th": "",
        "SQL": "SELECT DISTINCT T3.Category FROM east_superstore AS T1 INNER JOIN people AS T2 ON T1.`Customer ID` = T2.`Customer ID` INNER JOIN product AS T3 ON T3.`Product ID` = T1.`Product ID` LEFT JOIN central_superstore AS T4 ON T3.`Product ID` = T4.`Product ID` WHERE T2.`Customer Name` = 'Sam Craven'",
        "table": "['east_superstore', 'people']"
    },
    {
        "question_id": 2424,
        "db_id": "superstore",
        "question": "In west superstore, what is the name and the shipping mode of the product that was ordered with the shortest shipment time?",
        "evidence": "name refers to \"Product Name\"; shipping mode refers to Ship Mode; shortest shipment time refers to min(subtract(Ship Date, Order Date))",
        "question_th": "ในเวสต์ซูเปอร์สโตร์ สินค้าที่สั่งโดยใช้เวลาจัดส่งสั้นที่สุดชื่ออะไรและรูปแบบการจัดส่งคืออะไร?",
        "evidence_th": "ชื่อหมายถึง \"ชื่อผลิตภัณฑ์\"; โหมดการจัดส่งหมายถึงโหมดการจัดส่ง เวลาจัดส่งที่สั้นที่สุดหมายถึงขั้นต่ำ (ลบ (วันที่จัดส่ง, วันที่สั่งซื้อ))",
        "SQL": "SELECT DISTINCT T2.`Product Name`, T1.`Ship Mode` FROM west_superstore AS T1 INNER JOIN product AS T2 ON T1.`Product ID` = T2.`Product ID` WHERE T2.Region = 'West' ORDER BY T1.`Ship Date` - T1.`Order Date` LIMIT 1",
        "table": "['product', 'west_superstore']"
    },
    {
        "question_id": 2427,
        "db_id": "superstore",
        "question": "Among the orders with sales value of no less than 5,000 in west superstore, how many were bought by the customers in California?",
        "evidence": "customers in California refers to State = 'California'; orders with sales value of no less than 5,000 refers to Sales > = 5,000",
        "question_th": "ในบรรดาคำสั่งซื้อที่มีมูลค่าการขายไม่ต่ำกว่า 5,000 ชิ้นในเวสต์ซูเปอร์สโตร์ ลูกค้าในแคลิฟอร์เนียซื้อจำนวนเท่าใด",
        "evidence_th": "ลูกค้าในแคลิฟอร์เนียหมายถึงรัฐ = 'แคลิฟอร์เนีย'; คำสั่งซื้อที่มีมูลค่าการขายไม่ต่ำกว่า 5,000 หมายถึง ยอดขาย > = 5,000",
        "SQL": "SELECT COUNT(DISTINCT T1.`Order ID`) FROM west_superstore AS T1 INNER JOIN product AS T2 ON T1.`Product ID` = T2.`Product ID` INNER JOIN people AS T3 ON T3.`Customer ID` = T1.`Customer ID` WHERE T1.Sales > 5000 AND T3.State = 'California' AND T2.Region = 'West'",
        "table": "[]"
    },
    {
        "question_id": 2432,
        "db_id": "superstore",
        "question": "Which product did Phillina Ober buy?",
        "evidence": "product refers to \"Product Name\"",
        "question_th": "Phillina Ober ซื้อผลิตภัณฑ์ใด",
        "evidence_th": "สินค้าหมายถึง \"ชื่อผลิตภัณฑ์\"",
        "SQL": "SELECT DISTINCT T3.`Product Name` FROM people AS T1 INNER JOIN central_superstore AS T2 ON T1.`Customer ID` = T2.`Customer ID` INNER JOIN product AS T3 ON T3.`Product ID` = T2.`Product ID` WHERE T1.`Customer Name` = 'Phillina Ober'",
        "table": "['central_superstore', 'people']"
    },
    {
        "question_id": 2440,
        "db_id": "superstore",
        "question": "How many furniture products had been shipped by standard class in the East superstore?",
        "evidence": "furniture products refers to Category = 'Furniture'; shipped by standard class refers to \"Ship Mode\" = 'Standard Class'",
        "question_th": "มีผลิตภัณฑ์เฟอร์นิเจอร์จำนวนเท่าใดที่จัดส่งตามระดับมาตรฐานในซูเปอร์สโตร์ตะวันออก?",
        "evidence_th": "ผลิตภัณฑ์เฟอร์นิเจอร์หมายถึงหมวดหมู่ = 'เฟอร์นิเจอร์'; จัดส่งโดยชั้นมาตรฐานหมายถึง \"โหมดการจัดส่ง\" = 'ชั้นมาตรฐาน'",
        "SQL": "SELECT COUNT(T2.Category) FROM east_superstore AS T1 INNER JOIN product AS T2 ON T1.`Product ID` = T2.`Product ID` WHERE T1.`Ship Mode` = 'Standard Class'",
        "table": "['east_superstore', 'product']"
    },
    {
        "question_id": 2442,
        "db_id": "superstore",
        "question": "How many furniture products were ordered at central superstore?",
        "evidence": "furniture products refers to Category = 'Furniture'",
        "question_th": "มีการสั่งซื้อสินค้าเฟอร์นิเจอร์ที่เซ็นทรัลซูเปอร์สโตร์กี่รายการ?",
        "evidence_th": "ผลิตภัณฑ์เฟอร์นิเจอร์ หมายถึง Category = 'เฟอร์นิเจอร์'",
        "SQL": "SELECT COUNT(*) FROM central_superstore AS T1 INNER JOIN product AS T2 ON T1.`Product ID` = T2.`Product ID` WHERE T2.Category = 'Furniture'",
        "table": "['central_superstore', 'product']"
    },
    {
        "question_id": 2463,
        "db_id": "shooting",
        "question": "What is the percentage of the cases involved more than 3 officers from year 2010 to 2015?",
        "evidence": "more than 3 officers refers to officer_count > 3; from year 2010 to 2015 refers to date between '2010-01-01' and '2015-12-31'; percentage = divide(count(case_number where officer_count > 3), count(case_number)) where date between '2010-01-01' and '2015-12-31' * 100%",
        "question_th": "คดีที่เกี่ยวข้องกับเจ้าหน้าที่มากกว่า 3 คน ตั้งแต่ปี 2553 ถึง 2558 คิดเป็นร้อยละเท่าใด",
        "evidence_th": "เจ้าหน้าที่มากกว่า 3 คนหมายถึงเจ้าหน้าที่_นับ > 3; ตั้งแต่ปี 2010 ถึง 2015 หมายถึงวันที่ระหว่าง '2010-01-01' และ '2015-12-31'; เปอร์เซ็นต์ = หาร(count(case_number โดยที่ Officer_count > 3), count(case_number)) โดยที่วันที่ระหว่าง '2010-01-01' ถึง '2015-12-31' * 100%",
        "SQL": "SELECT CAST(SUM(IIF(officer_count > 3, 1, 0)) AS REAL) * 100 / COUNT(case_number) FROM incidents WHERE STRFTIME('%Y', date) BETWEEN '2010' AND '2015'",
        "table": "['incidents']"
    },
    {
        "question_id": 2464,
        "db_id": "shooting",
        "question": "In which year has the greatest number of cases where Handgun was used as weapon?",
        "evidence": "year refers to year(date); the greatest number of cases refers to max(count(case_number)); OS Spray was used as weapon refers to subject_weapon = 'OS Spray'",
        "question_th": "ปีใดที่มีคดีใช้ปืนพกเป็นอาวุธมากที่สุด?",
        "evidence_th": "ปี หมายถึง ปี(วันที่); จำนวนเคสที่มากที่สุดหมายถึง max(count(case_number)); OS Spray ถูกใช้เป็นอาวุธอ้างถึง subject_weapon = 'OS Spray'",
        "SQL": "SELECT STRFTIME('%Y', date) FROM incidents WHERE subject_weapon = 'Handgun' GROUP BY STRFTIME('%Y', date) ORDER BY COUNT(case_number) DESC LIMIT 1",
        "table": "['incidents']"
    },
    {
        "question_id": 2482,
        "db_id": "shooting",
        "question": "How many people were injured between 2006 and 2014 as a result of a handgun?",
        "evidence": "injured refers to subject_statuses = 'injured'; between 2006 and 2014 refers to date between '2006-01-01' and '2013-12-31'; handgun refers to subject_weapon = 'handgun'; where the incidents took place refers to location",
        "question_th": "มีผู้ได้รับบาดเจ็บจำนวนเท่าใดระหว่างปี 2549 ถึง 2557 จากปืนพก",
        "evidence_th": "ได้รับบาดเจ็บหมายถึง subject_statuses = 'ได้รับบาดเจ็บ'; ระหว่างปี 2549 ถึง 2557 หมายถึงวันที่ระหว่าง '2006-01-01' และ '31-12-2013' ปืนพกหมายถึง subject_weapon = 'ปืนพก'; ที่เกิดเหตุหมายถึงสถานที่",
        "SQL": "SELECT COUNT(location) FROM incidents WHERE subject_weapon = 'Handgun' AND subject_statuses = 'Injured' AND date BETWEEN '2006-01-01' AND '2013-12-31'",
        "table": "['incidents']"
    },
    {
        "question_id": 2510,
        "db_id": "genes",
        "question": "Of all the nonessential genes that are not of the motorprotein class and whose phenotype is cell cycle defects, how many do not have a physical type of interaction?",
        "evidence": "",
        "question_th": "ในบรรดายีนที่ไม่จำเป็นทั้งหมดซึ่งไม่อยู่ในประเภทมอเตอร์โปรตีนและมีฟีโนไทป์เป็นข้อบกพร่องของวัฏจักรของเซลล์ มีกี่ยีนที่ไม่มีปฏิสัมพันธ์ทางกายภาพ?",
        "evidence_th": "",
        "SQL": "SELECT COUNT(T1.GeneID) FROM Genes AS T1 INNER JOIN Interactions AS T2 ON T1.GeneID = T2.GeneID1 WHERE T2.Type != 'Physical' AND T1.Phenotype = 'Cell cycle defects' AND T1.Class != 'Motorproteins' AND T1.Essential = 'Non-Essential'",
        "table": "['Genes', 'Interactions']"
    },
    {
        "question_id": 2511,
        "db_id": "genes",
        "question": "Of the genes whose phenotype and motif are nucleic acid metabolism defects, PS00107, what percentage perform positive interaction with another gene?",
        "evidence": "Percentage of no interaction = [count(nucleic acid metabolism, PS00107, no interaction) / count(nucleic acid metabolism, PS00107) * 100%",
        "question_th": "ในบรรดายีนที่มีฟีโนไทป์และมาตรฐานเป็นข้อบกพร่องของการเผาผลาญกรดนิวคลีอิก PS00107 มีปฏิกิริยาเชิงบวกกับยีนอื่นกี่เปอร์เซ็นต์",
        "evidence_th": "เปอร์เซ็นต์ของการไม่มีอันตรกิริยา = [จำนวน(เมแทบอลิซึมของกรดนิวคลีอิก, PS00107, ไม่มีอันตรกิริยา) / จำนวนนับ(เมแทบอลิซึมของกรดนิวคลีอิก, PS00107) * 100%",
        "SQL": "SELECT CAST(SUM(IIF(T2.Expression_Corr > 0, 1, 0)) AS REAL) * 100 / COUNT(T2.GeneID1) FROM Genes AS T1 INNER JOIN Interactions AS T2 ON T1.GeneID = T2.GeneID1 WHERE T1.Phenotype = 'Nucleic acid metabolism defects' AND T1.Motif = 'PS00107'",
        "table": "['Genes', 'Interactions']"
    },
    {
        "question_id": 2530,
        "db_id": "app_store",
        "question": "Which of the app is the best selling app and what is the sentiments polarity of it?",
        "evidence": "best selling app = MAX(MULTIPLY(Price, Installs));",
        "question_th": "แอปใดเป็นแอปที่ขายดีที่สุดและมีขั้วความรู้สึกอย่างไร",
        "evidence_th": "แอปที่ขายดีที่สุด = MAX(MULTIPLY(ราคา, การติดตั้ง));",
        "SQL": "SELECT T1.App, T2.Sentiment_Polarity FROM playstore AS T1 INNER JOIN user_reviews AS T2 ON T1.App = T2.App ORDER BY T1.Price * CAST(REPLACE(REPLACE(Installs, ',', ''), '+', '') AS INTEGER) DESC LIMIT 1",
        "table": "['playstore', 'user_reviews']"
    },
    {
        "question_id": 2545,
        "db_id": "app_store",
        "question": "What is the number of installments of the app with the highest total Sentiment polarity score?",
        "evidence": "installments refers to Installs; highest total sentiment polarity score = MAX(SUM(Sentiment_Polarity));",
        "question_th": "จำนวนงวดของแอปที่มีคะแนน Sentiment Polarity รวมสูงสุดคือเท่าใด",
        "evidence_th": "การผ่อนชำระหมายถึงการติดตั้ง คะแนนขั้วความคิดเห็นรวมสูงสุด = MAX(SUM(Sentiment_Polarity));",
        "SQL": "SELECT T1.Installs FROM playstore AS T1 INNER JOIN user_reviews AS T2 ON T1.App = T2.App GROUP BY T1.App ORDER BY SUM(T2.Sentiment_Polarity) DESC LIMIT 1",
        "table": "['playstore', 'user_reviews']"
    },
    {
        "question_id": 2551,
        "db_id": "app_store",
        "question": "Which apps have been reviewed more than 75 000 000 times and the content is suitable for teenagers?",
        "evidence": "Reviews>75000000; suitable for teenagers refers to Content Rating = 'Teen';",
        "question_th": "มีแอปใดบ้างที่ได้รับการตรวจสอบมากกว่า 75,000,000 ครั้ง และเนื้อหาเหมาะสำหรับวัยรุ่น?",
        "evidence_th": "รีวิว>75000000; เหมาะสำหรับวัยรุ่น หมายถึง Content Rating = 'Teen';",
        "SQL": "SELECT DISTINCT App FROM playstore WHERE Reviews > 75000000 AND `Content Rating` = 'Teen'",
        "table": "['playstore']"
    },
    {
        "question_id": 2552,
        "db_id": "app_store",
        "question": "List out genre that have downloads more than 1000000000.",
        "evidence": "downloads and installs are synonyms; Installs = '1,000,000,000+';",
        "question_th": "แสดงรายการประเภทที่มีการดาวน์โหลดมากกว่า 1000000000",
        "evidence_th": "การดาวน์โหลดและการติดตั้งเป็นคำพ้องความหมาย การติดตั้ง = '1,000,000,000+';",
        "SQL": "SELECT Genres FROM playstore WHERE Installs = '1,000,000,000+' GROUP BY Genres",
        "table": "['playstore']"
    },
    {
        "question_id": 2553,
        "db_id": "app_store",
        "question": "What is the average price for a dating application?",
        "evidence": "average price = AVG(Price where Genre = 'Dating'); dating application refers to Genre = 'Dating';",
        "question_th": "ราคาเฉลี่ยในการสมัครหาคู่คือเท่าไหร่?",
        "evidence_th": "ราคาเฉลี่ย = AVG(ราคาโดยที่ประเภท = 'การออกเดท'); แอปพลิเคชั่นหาคู่หมายถึงประเภท = 'การออกเดท';",
        "SQL": "SELECT AVG(Price) FROM playstore WHERE Genres = 'Dating'",
        "table": "['playstore']"
    },
    {
        "question_id": 2573,
        "db_id": "app_store",
        "question": "List all free sports Apps and their translated review.",
        "evidence": "paid sports Apps refers to type = 'Paid' and Category = 'SPORTS';",
        "question_th": "แสดงรายการแอปกีฬาฟรีทั้งหมดและบทวิจารณ์ที่แปลแล้ว",
        "evidence_th": "แอปกีฬาแบบชำระเงินหมายถึงประเภท = 'ชำระเงิน' และหมวดหมู่ = 'กีฬา';",
        "SQL": "SELECT T1.App, T2.Translated_Review FROM playstore AS T1 INNER JOIN user_reviews AS T2 ON T1.App = T2.App WHERE T1.Type = 'Free' AND T1.Category = 'SPORTS'",
        "table": "['playstore', 'user_reviews']"
    },
    {
        "question_id": 2605,
        "db_id": "regional_sales",
        "question": "Among the sales team in South region, write down the numbers of orders made by the sales team ID of one digit.",
        "evidence": "sales team ID of one digit refers to _SalesTeamID BETWEEN 1 AND 9; numbers of orders refer to COUNT(OrderNumber);",
        "question_th": "ในบรรดาทีมขายในภาคใต้ ให้จดจำนวนคำสั่งซื้อที่ทำโดยรหัสทีมขายหนึ่งหลัก",
        "evidence_th": "รหัสทีมขายหนึ่งหลักหมายถึง _SalesTeamID ระหว่าง 1 และ 9 จำนวนคำสั่งซื้ออ้างอิงถึง COUNT (OrderNumber);",
        "SQL": "SELECT COUNT(T1.OrderNumber) FROM `Sales Orders` AS T1 INNER JOIN `Sales Team` AS T2 ON T2.SalesTeamID = T1._SalesTeamID WHERE T2.Region = 'South' AND T2.SalesTeamID BETWEEN 1 AND 9 GROUP BY T2.SalesTeamID HAVING COUNT(T1.OrderNumber)",
        "table": "['Sales']"
    },
    {
        "question_id": 2632,
        "db_id": "regional_sales",
        "question": "Which sales team name has the least orders in 2019?",
        "evidence": "sale team names refer to Sales Team; the least orders in 2019 refer to MIN(COUNT(OrderNumber where SUBSTR(OrderDate, -2) = '19'));",
        "question_th": "ชื่อทีมขายใดที่มีคำสั่งซื้อน้อยที่สุดในปี 2562",
        "evidence_th": "ชื่อทีมขายหมายถึงทีมขาย คำสั่งซื้อที่น้อยที่สุดในปี 2019 หมายถึง MIN(COUNT(OrderNumber โดยที่ SUBSTR(OrderDate, -2) = '19'));",
        "SQL": "SELECT T2.`Sales Team` FROM `Sales Orders` AS T1 INNER JOIN `Sales Team` AS T2 ON T2.SalesTeamID = T1._SalesTeamID WHERE T1.OrderDate LIKE '%/%/19' GROUP BY T2.`Sales Team` ORDER BY COUNT(T1.OrderNumber) ASC LIMIT 1",
        "table": "['Sales']"
    },
    {
        "question_id": 2635,
        "db_id": "regional_sales",
        "question": "Which order number has the highest unit price?",
        "evidence": "the highest unit price refers to MAX(Unit Price);",
        "question_th": "หมายเลขคำสั่งซื้อใดมีราคาต่อหน่วยสูงสุด",
        "evidence_th": "ราคาต่อหน่วยสูงสุดหมายถึง MAX (ราคาต่อหน่วย);",
        "SQL": "SELECT OrderNumber FROM `Sales Orders` WHERE REPLACE(`Unit Price`, ',', '') = ( SELECT REPLACE(`Unit Price`, ',', '') FROM `Sales Orders` ORDER BY REPLACE(`Unit Price`, ',', '') DESC LIMIT 1 )",
        "table": "['Sales']"
    },
    {
        "question_id": 2669,
        "db_id": "regional_sales",
        "question": "Find the net profit of the floral products which were delivered in 2021.",
        "evidence": "floral product refers to Product Name = 'Floral'; total net profit = SUM(Subtract(Unit Price, Unit Cost)); delivered in 2021 refers to DeliveryDate LIKE '%/21'",
        "question_th": "ค้นหากำไรสุทธิของผลิตภัณฑ์ดอกไม้ที่จัดส่งในปี 2564",
        "evidence_th": "ผลิตภัณฑ์ดอกไม้ หมายถึง ชื่อผลิตภัณฑ์ = 'ดอกไม้'; กำไรสุทธิทั้งหมด = SUM (ลบ (ราคาต่อหน่วย, ต้นทุนต่อหน่วย)); จัดส่งในปี 2021 อ้างอิงวันที่จัดส่ง LIKE '%/21'",
        "SQL": "SELECT SUM(REPLACE(T1.`Unit Price`, ',', '') - REPLACE(T1.`Unit Cost`, ',', '')) FROM `Sales Orders` AS T1 INNER JOIN Products AS T2 ON T2.ProductID = T1._ProductID WHERE T1.DeliveryDate LIKE '%/%/21' AND T2.`Product Name` = 'Floral'",
        "table": "[]"
    },
    {
        "question_id": 2673,
        "db_id": "regional_sales",
        "question": "Find the average yearly order by customer Weimei Corp for 2018, 2019 and 2020.",
        "evidence": "\"Weimei Corp\" is the Customer Names; in 2018, 2019 and 2020 refers to SUBSTR (OrderDate, -2) IN ('18', '19', '20') : Average order = Divide (Count (OrderNumber), 3)",
        "question_th": "ค้นหาคำสั่งซื้อเฉลี่ยต่อปีโดยลูกค้า Weimei Corp สำหรับปี 2018, 2019 และ 2020",
        "evidence_th": "\"Weimei Corp\" คือชื่อลูกค้า ในปี 2018, 2019 และ 2020 หมายถึง SUBSTR (OrderDate, -2) IN ('18', '19', '20') : ลำดับเฉลี่ย = หาร (นับ (OrderNumber), 3)",
        "SQL": "SELECT COUNT(T1.OrderNumber) / 3 FROM `Sales Orders` AS T1 INNER JOIN Customers AS T2 ON T2.CustomerID = T1._CustomerID WHERE (T1.OrderDate LIKE '%/%/18' AND T2.`Customer Names` = 'Weimei Corp') OR (T1.OrderDate LIKE '%/%/19' AND T2.`Customer Names` = 'Weimei Corp') OR (T1.OrderDate LIKE '%/%/20' AND T2.`Customer Names` = 'Weimei Corp')",
        "table": "['Sales']"
    },
    {
        "question_id": 2678,
        "db_id": "regional_sales",
        "question": "How many Borough-type stores located in the city of Brooklyn have a population of less than 3 million?",
        "evidence": "\"Brooklyn\" is the CityName; population of less than 3 million refers to Population < 3000000",
        "question_th": "มีร้านค้าประเภท Borough ที่ตั้งอยู่ในเมืองบรูคลินกี่แห่งที่มีประชากรน้อยกว่า 3 ล้านคน",
        "evidence_th": "\"บรูคลิน\" คือชื่อเมือง ประชากรน้อยกว่า 3 ล้านคนหมายถึงประชากร < 3000000",
        "SQL": "SELECT SUM(CASE WHEN Population < 3000000 AND Type = 'Borough' AND `City Name` = 'Brooklyn' THEN 1 ELSE 0 END) FROM `Store Locations`",
        "table": "[]"
    },
    {
        "question_id": 2683,
        "db_id": "regional_sales",
        "question": "In which regions are the stores that have shipped products through the WARE-UHY1004 warehouse?",
        "evidence": "\"WARE-UHY1004\" is the WarehouseCode",
        "question_th": "ร้านค้าที่ส่งสินค้าผ่านคลังสินค้า WARE-UHY1004 อยู่ภูมิภาคใดบ้าง?",
        "evidence_th": "\"WARE-UHY1004\" คือรหัสคลังสินค้า",
        "SQL": "SELECT T FROM ( SELECT DISTINCT CASE  WHEN T3.WarehouseCode = 'WARE-UHY1004' THEN T1.Region END AS T FROM Regions T1 INNER JOIN `Store Locations` T2 ON T2.StateCode = T1.StateCode INNER JOIN `Sales Orders` T3 ON T3._StoreID = T2.StoreID ) WHERE T IS NOT NULL",
        "table": "['Regions', 'Store']"
    },
    {
        "question_id": 2689,
        "db_id": "regional_sales",
        "question": "What is the highest discount applied by the store located in a city of the state of Colorado whose land area is 111039036.",
        "evidence": "highest discount applied refers to Max(Discount Applied)",
        "question_th": "ส่วนลดสูงสุดที่ใช้โดยร้านค้าที่ตั้งอยู่ในเมืองรัฐโคโลราโด ซึ่งมีพื้นที่ 111039036",
        "evidence_th": "ส่วนลดสูงสุดที่ใช้ หมายถึง สูงสุด(ใช้ส่วนลด)",
        "SQL": "SELECT MAX(T1.`Discount Applied`) FROM `Sales Orders` AS T1 INNER JOIN `Store Locations` AS T2 ON T2.StoreID = T1._StoreID WHERE T2.State = 'Colorado' AND T2.`Land Area` = 111039036",
        "table": "[]"
    },
    {
        "question_id": 2690,
        "db_id": "regional_sales",
        "question": "How many different time zones are there in the Northeast region?",
        "evidence": "",
        "question_th": "ภาคตะวันออกเฉียงเหนือมีเขตเวลาที่แตกต่างกันกี่เขต",
        "evidence_th": "",
        "SQL": "SELECT COUNT(DISTINCT T2.`Time Zone`) FROM Regions AS T1 INNER JOIN `Store Locations` AS T2 ON T2.StateCode = T1.StateCode WHERE T1.Region = 'Northeast'",
        "table": "[]"
    },
    {
        "question_id": 2692,
        "db_id": "regional_sales",
        "question": "To which region does the sales team that has used the WARE-MKL1006 warehouse the most times for its shipments belong?",
        "evidence": "\"WARE-MKL1006\" is the WarehouseCode; most shipment to region refers to Max(Count(Region))",
        "question_th": "ทีมขายที่ใช้คลังสินค้า WARE-MKL1006 จัดส่งไปยังภูมิภาคใดบ่อยที่สุด?",
        "evidence_th": "\"WARE-MKL1006\" คือ WarehouseCode; การจัดส่งไปยังภูมิภาคส่วนใหญ่หมายถึง Max(Count(Region))",
        "SQL": "SELECT T2.Region FROM `Sales Orders` AS T1 INNER JOIN `Sales Team` AS T2 ON T2.SalesTeamID = T1._SalesTeamID WHERE T1.WarehouseCode = 'WARE-MKL1006' GROUP BY T2.Region ORDER BY COUNT(T1.OrderNumber) DESC LIMIT 1",
        "table": "['Sales']"
    },
    {
        "question_id": 2697,
        "db_id": "regional_sales",
        "question": "At what Latitude and Longitude is the store that has used the WARE-PUJ1005 warehouse the fewest times?",
        "evidence": "WARE-PUJ1005 is the WarehouseCode; fewest times refers to Min (Count(WarehouseCode))",
        "question_th": "ร้านไหนใช้คลังสินค้า WARE-PUJ1005 น้อยที่สุดที่ละติจูดและลองจิจูด?",
        "evidence_th": "WARE-PUJ1005 คือ WarehouseCode; ครั้งที่น้อยที่สุดหมายถึง Min (นับ (WarehouseCode))",
        "SQL": "SELECT T2.Latitude, T2.Longitude FROM `Sales Orders` AS T1 INNER JOIN `Store Locations` AS T2 ON T2.StoreID = T1._StoreID WHERE T1.WarehouseCode = 'WARE-PUJ1005' GROUP BY T2.StoreID ORDER BY COUNT(T1.WarehouseCode) ASC LIMIT 1",
        "table": "['Sales']"
    },
    {
        "question_id": 2700,
        "db_id": "regional_sales",
        "question": "What is the average household income in cities in the state of New Hampshire where there are stores of the type city?",
        "evidence": "\"New Hampshire\" is the State; average household income = AVG(Household Income)",
        "question_th": "รายได้ครัวเรือนเฉลี่ยในเมืองต่างๆ ในรัฐนิวแฮมป์เชียร์ซึ่งมีร้านค้าประเภทเมืองเป็นเท่าใด",
        "evidence_th": "\"นิวแฮมป์เชียร์\" คือรัฐ รายได้ครัวเรือนเฉลี่ย = AVG (รายได้ครัวเรือน)",
        "SQL": "SELECT AVG(T2.`Household Income`) FROM Regions AS T1 INNER JOIN `Store Locations` AS T2 ON T2.StateCode = T1.StateCode WHERE T2.State = 'New Hampshire' AND T2.Type = 'City'",
        "table": "[]"
    },
    {
        "question_id": 2701,
        "db_id": "regional_sales",
        "question": "How many sales teams are there in the Midwest?",
        "evidence": "\"Midwest\" is the Region",
        "question_th": "มีทีมขายกี่ทีมในมิดเวสต์?",
        "evidence_th": "“มิดเวสต์” คือภาค",
        "SQL": "SELECT SUM(CASE WHEN Region = 'Midwest' THEN 1 ELSE 0 END) FROM `Sales Team`",
        "table": "['Sales']"
    },
    {
        "question_id": 2709,
        "db_id": "regional_sales",
        "question": "Which store in Arizona has the most net profit?",
        "evidence": "\"Arizona\" is the name of State; most net profit = Max(Subtract( Unit Price, Unit Cost))",
        "question_th": "ร้านใดในแอริโซนามีกำไรสุทธิมากที่สุด?",
        "evidence_th": "\"แอริโซนา\" เป็นชื่อของรัฐ กำไรสุทธิสูงสุด = สูงสุด (ลบ (ราคาต่อหน่วย, ต้นทุนต่อหน่วย))",
        "SQL": "SELECT T2.StoreID FROM `Sales Orders` AS T1 INNER JOIN `Store Locations` AS T2 ON T2.StoreID = T1._StoreID WHERE T2.State = 'Arizona' ORDER BY T1.`Unit Price` - T1.`Unit Cost` DESC LIMIT 1",
        "table": "['Sales']"
    },
    {
        "question_id": 2721,
        "db_id": "regional_sales",
        "question": "What is the name of the product with the highest net profit?",
        "evidence": "highest net profit = Max(Subtract (Unit Price, Unit Cost)); name of product refers to Product Name",
        "question_th": "ชื่อผลิตภัณฑ์ที่มีกำไรสุทธิสูงสุดคืออะไร?",
        "evidence_th": "กำไรสุทธิสูงสุด = สูงสุด (ลบ (ราคาต่อหน่วย, ต้นทุนต่อหน่วย)); ชื่อผลิตภัณฑ์ หมายถึง ชื่อผลิตภัณฑ์",
        "SQL": "SELECT T2.`Product Name` FROM `Sales Orders` AS T1 INNER JOIN Products AS T2 ON T2.ProductID = T1._ProductID ORDER BY REPLACE(T1.`Unit Price`, ',', '') - REPLACE(T1.`Unit Cost`, ',', '') DESC LIMIT 1",
        "table": "['Sales']"
    },
    {
        "question_id": 2726,
        "db_id": "regional_sales",
        "question": "In 2019, how many orders were shipped by the sales team with the highest number of orders in the said year? Provide the name of the sales team.",
        "evidence": "shipped refers to ShipDate; in 2019 refers to shipped in 2019 refers to SUBSTR(ShipDate, -2) = '19'; order in the said year refers to SUBSTR(OrderDate, -2) = '19'; highest number of order refers to Max(Count(OrderNumber))",
        "question_th": "ในปี 2562 มีทีมขายจัดส่งคำสั่งซื้อจำนวนเท่าใดและมียอดสั่งซื้อสูงสุดในปีดังกล่าว ระบุชื่อทีมขาย",
        "evidence_th": "จัดส่งหมายถึง ShipDate; ในปี 2562 หมายถึง จัดส่งในปี 2562 หมายถึง SUBSTR(ShipDate, -2) = '19'; ลำดับในปีดังกล่าวหมายถึง SUBSTR(OrderDate, -2) = '19'; จำนวนคำสั่งซื้อสูงสุดหมายถึง Max(Count(OrderNumber))",
        "SQL": "SELECT COUNT(T1.OrderNumber), T2.`Sales Team` FROM `Sales Orders` AS T1 INNER JOIN `Sales Team` AS T2 ON T2.SalesTeamID = T1._SalesTeamID WHERE T1.OrderDate LIKE '%/%/19' AND T1.ShipDate LIKE '%/%/19' GROUP BY T2.`Sales Team` ORDER BY COUNT(T1.OrderNumber) DESC LIMIT 1",
        "table": "['Sales']"
    },
    {
        "question_id": 2747,
        "db_id": "european_football_1",
        "question": "What is the name of all the teams that played in the EFL League One division?",
        "evidence": "all the teams include both HomeTeam and AwayTeam; name = 'EFL League One'; DIV = 'E2';",
        "question_th": "ทีมทั้งหมดที่เล่นในอีเอฟแอลลีกวันชื่อทีมอะไร?",
        "evidence_th": "ทุกทีมมีทั้ง HomeTeam และ AwayTeam; ชื่อ = 'อีเอฟแอลลีกวัน'; DIV = 'E2';",
        "SQL": "SELECT T1.HomeTeam,T1.AwayTeam FROM matchs AS T1 INNER JOIN divisions AS T2 ON T1.Div=T2.division WHERE T2.name = 'EFL League One' and T1.Div = 'E2' ",
        "table": "['divisions', 'matchs']"
    },
    {
        "question_id": 2749,
        "db_id": "european_football_1",
        "question": "How many matches played in the 2019 season of Scottish Championship league were ended with an equal result of 2-2?",
        "evidence": "matches refer to Div; Scottish Championship is a name of the league; equal result of 2-2 refers to FTAG = 2 AND FTHG = 2;",
        "question_th": "มีกี่แมตช์ที่เล่นในฤดูกาล 2019 ของลีกสกอตแลนด์แชมเปี้ยนชิพที่จบลงด้วยผลเสมอกัน 2-2?",
        "evidence_th": "การแข่งขันหมายถึง Div; Scottish Championship เป็นชื่อของลีก ผลลัพธ์ที่เท่ากันของ 2-2 หมายถึง FTAG = 2 และ FTHG = 2;",
        "SQL": "SELECT COUNT(T1.Div) FROM matchs AS T1 INNER JOIN divisions AS T2 ON T1.Div = T2.division WHERE T1.season = 2019 AND T2.name = 'Scottish Championship' AND T1.FTAG = 2 AND T1.FTHG = 2",
        "table": "['divisions', 'matchs']"
    },
    {
        "question_id": 2755,
        "db_id": "european_football_1",
        "question": "What was the difference in home team and away team win percentages across all divisions in 2010?",
        "evidence": "2010 refers to season = 2010; SUBTRACT(DIVIDE(COUNT(Div where FTR = 'H', season = 2010), COUNT(Div where season = 2010)), COUNT(Div where FTR = 'A', season = 2010), COUNT(Div where season = 2010)) as percentage;",
        "question_th": "อะไรคือความแตกต่างระหว่างทีมเหย้าและทีมเยือนที่ชนะในทุกดิวิชั่นในปี 2010?",
        "evidence_th": "2010 หมายถึง ฤดูกาล = 2010; SUBTRACT(DIVIDE(COUNT(Div โดยที่ FTR = 'H', season = 2010), COUNT(Div โดยที่ season = 2010)), COUNT(Div โดยที่ FTR = 'A', season = 2010), COUNT(Div โดยที่ season = 2010)) เป็นเปอร์เซ็นต์;",
        "SQL": "SELECT CAST(COUNT(CASE WHEN FTR = 'H' THEN 1 ELSE NULL END) AS REAL) * 100 / COUNT(FTR) - CAST(COUNT(CASE WHEN FTR = 'A' THEN 1 ELSE NULL END) AS REAL) * 100 / COUNT(FTR) DIFFERENCE FROM matchs WHERE season = 2010",
        "table": "['matchs']"
    },
    {
        "question_id": 2763,
        "db_id": "european_football_1",
        "question": "What is the name of the division that has had the lowest number of draft matches in the 2019 season?",
        "evidence": "the lowest number of draft matches refers to MIN(COUNT(FTR = 'D'));",
        "question_th": "ดิวิชั่นที่มีจำนวนนัดดราฟต์น้อยที่สุดในฤดูกาล 2019 ชื่ออะไร?",
        "evidence_th": "จำนวนการแข่งขันแบบร่างต่ำสุดหมายถึง MIN(COUNT(FTR = 'D'));",
        "SQL": "SELECT T2.name FROM matchs AS T1 INNER JOIN divisions AS T2 ON T1.Div = T2.division WHERE T1.season = 2019 AND T1.FTR = 'D' GROUP BY T2.division ORDER BY COUNT(FTR) LIMIT 1",
        "table": "['divisions', 'matchs']"
    },
    {
        "question_id": 2781,
        "db_id": "european_football_1",
        "question": "How many Eredivisie teams have played in 2008?",
        "evidence": "Eredivisie is the name of division; 2008 refers to season; teams refer to HomeTeam;",
        "question_th": "มีทีมในเอเรดิวิซี่กี่ทีมที่เล่นในปี 2008?",
        "evidence_th": "Eredivisie เป็นชื่อของแผนก 2551 หมายถึงฤดูกาล; ทีมหมายถึง HomeTeam;",
        "SQL": "SELECT COUNT(DISTINCT T1.HomeTeam) FROM matchs AS T1 INNER JOIN divisions AS T2 ON T1.Div = T2.division WHERE T2.name = 'Eredivisie' AND T1.season = 2008",
        "table": "['divisions', 'matchs']"
    },
    {
        "question_id": 2795,
        "db_id": "european_football_1",
        "question": "How many final-time home-team goals were there in total in all the matches of the Bundesliga division in the 2021 season?",
        "evidence": "Bundesliga is the name of division; final-time home-team goals refers to FTHG;",
        "question_th": "มีผลรวมประตูในบ้านในบ้านนัดสุดท้ายทั้งหมดกี่ประตูในทุกนัดของดิวิชั่นบุนเดสลีกาในฤดูกาล 2021?",
        "evidence_th": "บุนเดสลีกาเป็นชื่อของดิวิชั่น ประตูทีมเหย้าครั้งสุดท้ายหมายถึง FTHG;",
        "SQL": "SELECT SUM(T1.FTHG) FROM matchs AS T1 INNER JOIN divisions AS T2 ON T1.Div = T2.division WHERE T2.name = 'Bundesliga' AND T1.season = 2021",
        "table": "['divisions', 'matchs']"
    },
    {
        "question_id": 2803,
        "db_id": "professional_basketball",
        "question": "Who is the longest serving coach from year 1970 to 1980. List the coach ID and the team(s) he served.",
        "evidence": "1970 to 1980 refers to year between 1970 and 1980; longest serving coach Max(Count(coachID)); team(s) he served refers to tmID",
        "question_th": "ใครคือโค้ชที่ให้บริการยาวนานที่สุดตั้งแต่ปี 1970 ถึง 1980 ระบุรหัสโค้ชและทีมที่เขารับใช้",
        "evidence_th": "1970 ถึง 1980 หมายถึงปีระหว่างปี 1970 ถึง 1980 โค้ชที่ให้บริการยาวนานที่สุด Max(Count(coachID)); ทีมที่เขาให้บริการหมายถึง tmID",
        "SQL": "SELECT coachID, tmID FROM coaches WHERE year BETWEEN 1970 AND 1980 ORDER BY stint DESC LIMIT 1",
        "table": "['coaches']"
    },
    {
        "question_id": 2804,
        "db_id": "professional_basketball",
        "question": "In year 2000, who are the coaches with more than 50 games won. List the coachID, team name and number of game won at home game.",
        "evidence": "more than 50 games won refers to won > 50",
        "question_th": "ในปี พ.ศ. 2543 ผู้เป็นโค้ชที่มีผลงานมากกว่า 50 เกมชนะ ระบุรหัสโค้ช ชื่อทีม และหมายเลขเกมที่ชนะในบ้าน",
        "evidence_th": "ชนะมากกว่า 50 เกม หมายถึง ชนะ > 50 เกม",
        "SQL": "SELECT T1.coachID, T2.name, T2.won FROM coaches AS T1 INNER JOIN teams AS T2 ON T1.tmID = T2.tmID AND T1.year = T2.year WHERE T1.year = 2000 AND T2.won > 50",
        "table": "['coaches', 'teams']"
    },
    {
        "question_id": 2833,
        "db_id": "professional_basketball",
        "question": "What is the average weight of the players who have won the award of Rookie of the year?",
        "evidence": "\"Rookie of the Year\" is the award; average weight = Divide (Sum(weight), Count(playerID))",
        "question_th": "น้ำหนักเฉลี่ยของผู้เล่นที่ได้รับรางวัล Rookie of the year คือเท่าไร?",
        "evidence_th": "\"Rookie of the Year\" คือรางวัล; น้ำหนักเฉลี่ย = หาร (ผลรวม(น้ำหนัก), จำนวน(รหัสผู้เล่น))",
        "SQL": "SELECT AVG(T1.weight) FROM players AS T1 INNER JOIN awards_players AS T2 ON T1.playerID = T2.playerID WHERE T2.award = 'Rookie of the Year'",
        "table": "['awards_players', 'players']"
    },
    {
        "question_id": 2841,
        "db_id": "professional_basketball",
        "question": "Please list down the last name of players from \"BLB\" team.",
        "evidence": "\"BLB\" is the tmID",
        "question_th": "กรุณาระบุนามสกุลผู้เล่นจากทีม \"BLB\"",
        "evidence_th": "\"BLB\" คือ tmID",
        "SQL": "SELECT T1.lastName FROM players AS T1 INNER JOIN players_teams AS T2 ON T1.playerID = T2.playerID WHERE T2.tmID = 'BLB'",
        "table": "['players', 'players_teams']"
    },
    {
        "question_id": 2853,
        "db_id": "professional_basketball",
        "question": "From 1950 to 1970, what is the maximum point of players whose teams were ranked 1?",
        "evidence": "from 1950 to 1970 refers to year between 1950 and 1970; team with rank 1 refers to rank = 1; maximum point refers to Max(points)",
        "question_th": "ตั้งแต่ปี 1950 ถึง 1970 แต้มสูงสุดของผู้เล่นที่มีทีมอยู่ในอันดับที่ 1 คือเท่าใด",
        "evidence_th": "ตั้งแต่ปี 1950 ถึง 1970 หมายถึง ปีระหว่างปี 1950 ถึง 1970 ทีมที่มีอันดับ 1 หมายถึง อันดับ = 1; จุดสูงสุดหมายถึงสูงสุด(คะแนน)",
        "SQL": "SELECT MAX(T2.points) FROM teams AS T1 INNER JOIN players_teams AS T2 ON T1.tmID = T2.tmID AND T1.year = T2.year WHERE T1.year BETWEEN 1950 AND 1970 AND T1.rank = 1",
        "table": "['players_teams', 'teams']"
    },
    {
        "question_id": 2858,
        "db_id": "professional_basketball",
        "question": "Please list the top three shortest black players.",
        "evidence": "shortest player refers to Min(height); black players refers to race = 'B'",
        "question_th": "โปรดระบุผู้เล่นผิวดำที่สั้นที่สุดสามอันดับแรก",
        "evidence_th": "ผู้เล่นที่สั้นที่สุดหมายถึง Min(height); ผู้เล่นผิวดำ หมายถึง เชื้อชาติ = 'B'",
        "SQL": "SELECT firstName, lastName FROM players WHERE race = 'B' AND height > 0 ORDER BY height ASC LIMIT 3",
        "table": "['players']"
    },
    {
        "question_id": 2869,
        "db_id": "professional_basketball",
        "question": "Please list the first names of the players with the most personal fouls in the 'NBL' league.",
        "evidence": "\"NBL\" is the lgID; most  personal foul refers to Max(Count(PF))",
        "question_th": "โปรดระบุชื่อผู้เล่นที่มีการฟาวล์ส่วนตัวมากที่สุดในลีก 'NBL'",
        "evidence_th": "\"NBL\" คือ lgID; ฟาวล์ส่วนตัวส่วนใหญ่หมายถึง Max(Count(PF))",
        "SQL": "SELECT T1.firstName FROM players AS T1 INNER JOIN players_teams AS T2 ON T1.playerID = T2.playerID WHERE T2.lgID = 'NBL' GROUP BY T1.playerID, T1.firstName ORDER BY COUNT(PF) DESC LIMIT 1",
        "table": "['players', 'players_teams']"
    },
    {
        "question_id": 2880,
        "db_id": "professional_basketball",
        "question": "How many teams in the NBA which has at least 3 all-star players?",
        "evidence": "NBA refers to lgID = 'NBA'; have at least 3 all-star players refers to count(player_allstar.playerID) > 3",
        "question_th": "มีกี่ทีมใน NBA ที่มีผู้เล่นออลสตาร์อย่างน้อย 3 คน?",
        "evidence_th": "เอ็นบีเอ หมายถึง lgID = 'เอ็นบีเอ'; มีผู้เล่นออลสตาร์อย่างน้อย 3 คนอ้างอิงถึงจำนวน (player_allstar.playerID) > 3",
        "SQL": "SELECT COUNT(*) FROM ( SELECT tmID FROM players_teams AS T1 INNER JOIN player_allstar AS T2 ON T1.playerID = T2.playerID WHERE T1.lgID = 'NBA' GROUP BY T1.tmID HAVING COUNT(DISTINCT T1.playerID) > 3 ) AS T3",
        "table": "['player_allstar', 'players_teams']"
    },
    {
        "question_id": 2884,
        "db_id": "professional_basketball",
        "question": "List the full name of players who are born outside USA.",
        "evidence": "full name refers to firstName, middleName, lastName; born outside USA refers to birthCountry ! = 'USA'",
        "question_th": "ระบุชื่อเต็มของผู้เล่นที่เกิดนอกสหรัฐอเมริกา",
        "evidence_th": "ชื่อเต็มหมายถึงชื่อ, ชื่อกลาง, นามสกุล; เกิดนอกสหรัฐอเมริกา หมายถึง ประเทศเกิด ! = 'สหรัฐอเมริกา'",
        "SQL": "SELECT firstName, middleName, lastName FROM players WHERE birthCountry != 'USA'",
        "table": "['players']"
    },
    {
        "question_id": 2891,
        "db_id": "professional_basketball",
        "question": "List the champion (team name) and year from year 1950 to 1960.",
        "evidence": "champion refers to round = 'F'; team name refers to teams.name; from year 1950 to 1960 refers to year between 1950 and 1960",
        "question_th": "รายชื่อแชมป์ (ชื่อทีม) และปีตั้งแต่ปี 1950 ถึง 1960",
        "evidence_th": "แชมป์หมายถึงรอบ = 'F'; ชื่อทีมหมายถึง team.name; ตั้งแต่ปี 1950 ถึง 1960 หมายถึง ปีระหว่างปี 1950 ถึง 1960",
        "SQL": "SELECT DISTINCT T1.name, T2.year FROM teams AS T1 JOIN series_post AS T2 ON T1.tmID = T2.tmIDWinner WHERE T2.round = 'F' AND T2.year BETWEEN 1950 AND 1960",
        "table": "['series_post', 'teams']"
    },
    {
        "question_id": 2906,
        "db_id": "professional_basketball",
        "question": "Please list the players who received the \"Most Valuable Player\" award in the NBA league after the year of 1990, along with their IDs.",
        "evidence": "player refers to playerID; \"Most Valuable Player\" award refers to award = 'Most Valuable Player'; after the year of 1990 refers to year > 1990; ID refers to playerID",
        "question_th": "โปรดระบุรายชื่อผู้เล่นที่ได้รับรางวัล \"ผู้เล่นทรงคุณค่าสูงสุด\" ในลีก NBA หลังปี 1990 พร้อมด้วยรหัสประจำตัวของพวกเขา",
        "evidence_th": "ผู้เล่นหมายถึงผู้เล่น ID; รางวัล \"ผู้เล่นทรงคุณค่า\" หมายถึงรางวัล = \"ผู้เล่นทรงคุณค่าสูงสุด\"; หลังจากปี 1990 หมายถึงปี > 1990; ID หมายถึง ID ผู้เล่น",
        "SQL": "SELECT playerID FROM awards_players WHERE year > 1990 AND award = 'Most Valuable Player' AND lgID = 'NBA'",
        "table": "['awards_players']"
    },
    {
        "question_id": 2912,
        "db_id": "professional_basketball",
        "question": "Please list the top five players with the most steals in the year 1997. Please give their full name.",
        "evidence": "full name refers to firstName, middleName, lastName; in the year 1997 refers to year = 1997; the most steals refers to max(steals)",
        "question_th": "กรุณาระบุรายชื่อผู้เล่นห้าอันดับแรกที่มีการขโมยมากที่สุดในปี 1997 กรุณาระบุชื่อเต็มของพวกเขา",
        "evidence_th": "ชื่อเต็มหมายถึงชื่อ, ชื่อกลาง, นามสกุล; ในปี 2540 หมายถึง ปี = 2540; การขโมยมากที่สุดหมายถึงสูงสุด (การขโมย)",
        "SQL": "SELECT DISTINCT T1.firstName, T1.middleName, T1.lastName FROM players AS T1 INNER JOIN player_allstar AS T2 ON T1.playerID = T2.playerID WHERE T2.season_id = 1997 ORDER BY T2.steals DESC LIMIT 5",
        "table": "['player_allstar', 'players']"
    },
    {
        "question_id": 2913,
        "db_id": "professional_basketball",
        "question": "What is the name of the university that was drafted from the player who won the NBA Finals MVP in 1990?",
        "evidence": "name of the university refers to highSchool; NBA refers to lgID = 'NBA'; Finals MVP refers to award = 'Finals MVP'; in 1990 refers to year = 1990",
        "question_th": "มหาวิทยาลัยที่ถูกร่างมาจากผู้เล่นที่ได้รับรางวัล NBA Finals MVP ในปี 1990 ชื่ออะไร",
        "evidence_th": "ชื่อของมหาวิทยาลัยหมายถึงโรงเรียนมัธยมปลาย เอ็นบีเอ หมายถึง lgID = 'เอ็นบีเอ'; Finals MVP หมายถึงรางวัล = 'Finals MVP'; ในปี 1990 หมายถึง ปี = 1990",
        "SQL": "SELECT T1.college FROM players AS T1 INNER JOIN awards_players AS T2 ON T1.playerID = T2.playerID WHERE T2.year = 1990 AND T2.award = 'Finals MVP'",
        "table": "['awards_players', 'players']"
    },
    {
        "question_id": 2915,
        "db_id": "professional_basketball",
        "question": "From 1980 to 1983, how many of the NBA All-Star players have more than 60% three point rate?",
        "evidence": "from 1980 to 1983 refers to year BETWEEN 1980 and 1983; NBA refers to lgID = 'NBA'; more than 60% three point rate refers to divide(threeMade, threeAttempted) > 0.6",
        "question_th": "ตั้งแต่ปี 1980 ถึง 1983 ผู้เล่น NBA All-Star ที่มีคะแนนสามแต้มมากกว่า 60% มีกี่คน",
        "evidence_th": "ตั้งแต่ปี 1980 ถึง 1983 หมายถึง ปีระหว่างปี 1980 ถึง 1983 เอ็นบีเอ หมายถึง lgID = 'เอ็นบีเอ'; อัตราสามแต้มมากกว่า 60% หมายถึงหาร (threeMade, threeAttempted) > 0.6",
        "SQL": "SELECT DISTINCT T2.playerID FROM player_allstar AS T1 INNER JOIN players_teams AS T2 ON T1.playerID = T2.playerID WHERE T2.year BETWEEN 1980 AND 1983 AND T1.three_made / T1.three_attempted > 0.6",
        "table": "['player_allstar', 'players_teams']"
    },
    {
        "question_id": 2924,
        "db_id": "professional_basketball",
        "question": "Which player had the most game presentatons in 2011 NBA season.",
        "evidence": "player refers to playerID; the most game presentations refers to max(GP); in 2020 refers to year = 2020; NBA season refers to lgID = 'NBA'",
        "question_th": "ผู้เล่นคนใดมีผู้นำเสนอเกมมากที่สุดใน NBA ฤดูกาล 2011",
        "evidence_th": "ผู้เล่นหมายถึงผู้เล่น ID; การนำเสนอเกมส่วนใหญ่หมายถึง max(GP); ในปี 2563 หมายถึง ปี = 2563; ฤดูกาล NBA หมายถึง lgID = 'NBA'",
        "SQL": "SELECT playerID FROM players_teams WHERE year = 2011 ORDER BY GP DESC LIMIT 1",
        "table": "['players_teams']"
    },
    {
        "question_id": 2940,
        "db_id": "professional_basketball",
        "question": "In the year 1998, how many home wins did the team which had the 1st round, 12th pick have that year?",
        "evidence": "in 1998 refers to year = 1998; 1st round refers to draftRound = 1; 12th pick refers to draftSelection = 12; home win refers to homeWon",
        "question_th": "ในปี 1998 ทีมที่เข้ารอบ 1 นัดที่ 12 ในบ้านชนะได้กี่ทีมในปีนั้น?",
        "evidence_th": "ในปี 1998 หมายถึง ปี = 1998; รอบที่ 1 หมายถึง ร่าง Round = 1; การเลือกครั้งที่ 12 หมายถึง การเลือกแบบร่าง = 12; โฮมชนะ หมายถึง โฮมวอน",
        "SQL": "SELECT T2.homeWon FROM draft AS T1 INNER JOIN teams AS T2 ON T1.tmID = T2.tmID AND T1.draftYear = T2.year WHERE T1.draftRound = 1 AND T1.draftSelection = 12 AND T1.draftYear = 1998",
        "table": "['draft', 'teams']"
    },
    {
        "question_id": 2967,
        "db_id": "shakespeare",
        "question": "What is the average number of characters in all the works of Shakespeare?",
        "evidence": "average number = divide(sum(character_id), count(work_id))",
        "question_th": "จำนวนตัวละครโดยเฉลี่ยในผลงานทั้งหมดของเช็คสเปียร์คือเท่าไร?",
        "evidence_th": "จำนวนเฉลี่ย = หาร (ผลรวม (ตัวละคร _id), จำนวน (work_id))",
        "SQL": "SELECT SUM(DISTINCT T4.id) / COUNT(T1.id) FROM works AS T1 INNER JOIN chapters AS T2 ON T1.id = T2.work_id INNER JOIN paragraphs AS T3 ON T2.id = T3.chapter_id INNER JOIN characters AS T4 ON T3.character_id = T4.id",
        "table": "['chapters', 'characters', 'paragraphs', 'works']"
    },
    {
        "question_id": 2970,
        "db_id": "shakespeare",
        "question": "When did Shakespeare write the first poem?",
        "evidence": "first poem refers to GenreType = 'Poem' and Date = 'min'",
        "question_th": "เช็คสเปียร์เขียนบทกวีบทแรกเมื่อใด",
        "evidence_th": "บทกวีแรกหมายถึง GenreType = 'Poem' และ Date = 'min'",
        "SQL": "SELECT MIN(Date) FROM works WHERE GenreType = 'Poem'",
        "table": "['works']"
    },
    {
        "question_id": 2971,
        "db_id": "shakespeare",
        "question": "Give the abbreviation name for the character \"Earl of Westmoreland\".",
        "evidence": "abbreviation name refers to Abbrev; character \"Earl of Westmoreland\" refers to CharName = 'Earl of Westmoreland'",
        "question_th": "ตั้งชื่ออักษรย่อให้กับตัวละคร \"เอิร์ลแห่งเวสต์มอร์แลนด์\"",
        "evidence_th": "ชื่อย่อหมายถึงคำย่อ; อักขระ \"เอิร์ลแห่งเวสต์มอร์แลนด์\" หมายถึง CharName = 'เอิร์ลแห่งเวสต์มอร์แลนด์'",
        "SQL": "SELECT DISTINCT Abbrev FROM characters WHERE CharName = 'Earl of Westmoreland'",
        "table": "['characters']"
    },
    {
        "question_id": 2983,
        "db_id": "shakespeare",
        "question": "How many paragraphs are there in the scene whose description is \"A Sea-port in Cyprus. An open place near the quay.\"?",
        "evidence": "",
        "question_th": "มีกี่ย่อหน้าในฉากที่บรรยายว่า \"ท่าเรือน้ำในไซปรัส สถานที่โล่งใกล้ท่าเรือ\"?",
        "evidence_th": "",
        "SQL": "SELECT SUM(T2.ParagraphNum) FROM chapters AS T1 INNER JOIN paragraphs AS T2 ON T1.id = T2.chapter_id WHERE T1.Description = 'A Sea-port in Cyprus. An open place near the quay.'",
        "table": "['chapters', 'paragraphs']"
    },
    {
        "question_id": 2984,
        "db_id": "shakespeare",
        "question": "What percentage of all scenes are tragic scenes in Shakespeare's work in 1594?",
        "evidence": "tragic scenes refers to GenreType = 'Tragedy'; work in 1594 refers to Date = '1594'; percentage = divide((sum(Scene) when GenreType = 'Tragedy'), count(Scene))as percentage",
        "question_th": "ฉากโศกนาฏกรรมในงานของเช็คสเปียร์ในปี 1594 มีกี่เปอร์เซ็นต์จากทั้งหมด",
        "evidence_th": "ฉากโศกนาฏกรรมหมายถึง GenreType = 'โศกนาฏกรรม'; งานในปี 1594 หมายถึง Date = '1594'; เปอร์เซ็นต์ = หาร ((ผลรวม (ฉาก) เมื่อ GenreType = 'โศกนาฏกรรม'), นับ (ฉาก)) เป็นเปอร์เซ็นต์",
        "SQL": "SELECT CAST(SUM(IIF(T2.GenreType = 'Tragedy', 1, 0)) AS REAL) * 100 / COUNT(T1.Scene) FROM chapters AS T1 INNER JOIN works AS T2 ON T1.work_id = T2.id WHERE T2.Date = '1594'",
        "table": "['chapters', 'works']"
    },
    {
        "question_id": 2991,
        "db_id": "shakespeare",
        "question": "Who is the daughter of Capulet?",
        "evidence": "daughter of Capulet refers to characters.Description = 'Daughter to Capulet'",
        "question_th": "ลูกสาวของคาปุเล็ตคือใคร?",
        "evidence_th": "ลูกสาวของ Capulet หมายถึงตัวละครคำอธิบาย = 'ลูกสาวของ Capulet'",
        "SQL": "SELECT CharName FROM characters WHERE Description = 'Daughter to Capulet'",
        "table": "['characters']"
    },
    {
        "question_id": 2994,
        "db_id": "shakespeare",
        "question": "What is the description of the chapter with the longest number of paragraphs?",
        "evidence": "chapter with the longest number of paragraphs refers to max(ParagraphNum)",
        "question_th": "ข้อใดคือคำอธิบายของบทที่มีจำนวนย่อหน้ายาวที่สุด",
        "evidence_th": "บทที่มีจำนวนย่อหน้ายาวที่สุดหมายถึงสูงสุด (ParagraphNum)",
        "SQL": "SELECT T2.Description FROM paragraphs AS T1 INNER JOIN chapters AS T2 ON T1.chapter_id = T2.id ORDER BY T1.ParagraphNum DESC LIMIT 1",
        "table": "['chapters', 'paragraphs']"
    },
    {
        "question_id": 2995,
        "db_id": "shakespeare",
        "question": "In \"Twelfth Night, Or What You Will\", what is the description of the chapter in 2nd scene, Act 2?",
        "evidence": "\"Twelfth Night, Or What You Will\"  refers to LongTitle = 'Twelfth Night, Or What You Will'; 2nd scene refers to Scene = 2",
        "question_th": "ใน \"Twelfth Night, Or What You Will\" คำอธิบายบทในฉากที่ 2 องก์ที่ 2 คืออะไร?",
        "evidence_th": "\"คืนที่สิบสองหรือสิ่งที่คุณจะ\" หมายถึง LongTitle = 'คืนที่สิบสองหรือสิ่งที่คุณจะ'; ฉากที่ 2 หมายถึง ฉาก = 2",
        "SQL": "SELECT T2.Description FROM works AS T1 INNER JOIN chapters AS T2 ON T1.id = T2.work_id WHERE T1.LongTitle = 'Twelfth Night, Or What You Will' AND T2.Scene = 2 AND T2.Act = 2",
        "table": "['chapters', 'works']"
    },
    {
        "question_id": 3018,
        "db_id": "shakespeare",
        "question": "How many chapters are there in \"Midsummer Night's Dream\"?",
        "evidence": "in \"Midsummer Night's Dream\" refers to Title = 'Midsummer Night's Dream'",
        "question_th": "ใน \"Midsummer Night's Dream\" มีทั้งหมดกี่บท?",
        "evidence_th": "ใน \"Midsummer Night's Dream\" หมายถึง ชื่อ = 'Midsummer Night's Dream'",
        "SQL": "SELECT COUNT(T2.id) FROM works AS T1 INNER JOIN chapters AS T2 ON T1.id = T2.work_id WHERE T1.Title = 'Midsummer Night''s Dream'",
        "table": "['chapters', 'works']"
    },
    {
        "question_id": 3040,
        "db_id": "shakespeare",
        "question": "What is the description of chapter 18706 in \"All's Well That Ends Well\"?",
        "evidence": "chapter 18706 refers to chapters.id; \"All's Well That Ends Well\" refers to Title = 'All's Well That Ends Well'",
        "question_th": "คำอธิบายของบทที่ 18706 ใน \"ทุกอย่างจบลงด้วยดี\" คืออะไร?",
        "evidence_th": "บทที่ 18706 อ้างถึง chapters.id; \"All's Well That Ends Well\" หมายถึงหัวข้อ = 'All's Well That Ends Well'",
        "SQL": "SELECT T2.Description FROM works AS T1 INNER JOIN chapters AS T2 ON T1.id = T2.work_id WHERE T2.id = 18706 AND T1.Title = 'All''s Well That Ends Well'",
        "table": "['chapters', 'works']"
    },
    {
        "question_id": 3051,
        "db_id": "shakespeare",
        "question": "Give the title and the characters name of the most recent work of Shakespeare.",
        "evidence": "characters name refers to CharName; most recent work refers to max(Date)",
        "question_th": "ระบุชื่อเรื่องและชื่อตัวละครของผลงานล่าสุดของเช็คสเปียร์",
        "evidence_th": "ชื่อตัวละครหมายถึง CharName; งานล่าสุดอ้างถึงสูงสุด (วันที่)",
        "SQL": "SELECT T1.Title, T4.CharName FROM works AS T1 INNER JOIN chapters AS T2 ON T1.id = T2.work_id INNER JOIN paragraphs AS T3 ON T2.id = T3.chapter_id INNER JOIN characters AS T4 ON T3.character_id = T4.id ORDER BY T1.Date DESC LIMIT 1",
        "table": "['chapters', 'characters', 'paragraphs', 'works']"
    },
    {
        "question_id": 3069,
        "db_id": "cars",
        "question": "Among the car models introduced in the market in 1970, how many of them have the USA as their origin country?",
        "evidence": "introduced in the market in 1970 refers to model_year = 1970; have the USA as origin country refers to country = 'USA'",
        "question_th": "ในบรรดารถยนต์รุ่นที่เปิดตัวสู่ตลาดในปี 1970 มีรถยนต์กี่คันที่มีประเทศสหรัฐอเมริกาเป็นประเทศต้นทาง",
        "evidence_th": "เปิดตัวในตลาดในปี 1970 หมายถึง model_year = 1970; ให้สหรัฐอเมริกาเป็นประเทศต้นทางหมายถึงประเทศ = 'สหรัฐอเมริกา'",
        "SQL": "SELECT COUNT(*) FROM production AS T1 INNER JOIN country AS T2 ON T1.country = T2.origin WHERE T1.model_year = 1970 AND T2.country = 'USA'",
        "table": "['country', 'production']"
    },
    {
        "question_id": 3074,
        "db_id": "cars",
        "question": "Please list the weights of all the cars with the price over $40000.",
        "evidence": "price over $40000 refers to price > 40000",
        "question_th": "โปรดระบุน้ำหนักของรถยนต์ทุกคันที่มีราคามากกว่า 40,000 ดอลลาร์",
        "evidence_th": "ราคาที่มากกว่า 40,000 ดอลลาร์ หมายถึง ราคาที่ > 40,000",
        "SQL": "SELECT T1.weight FROM data AS T1 INNER JOIN price AS T2 ON T1.ID = T2.ID WHERE T2.price > 40000",
        "table": "['data', 'price']"
    },
    {
        "question_id": 3086,
        "db_id": "cars",
        "question": "Provide the price of the only Toyota Corona hardtop in the database.",
        "evidence": "Toyota Corona hardtop refers to car_name = 'toyota corona hardtop'",
        "question_th": "ระบุราคาหลังคาฮาร์ดท็อป Toyota Corona เพียงรุ่นเดียวในฐานข้อมูล",
        "evidence_th": "โตโยต้า โคโรนา ฮาร์ดท็อป หมายถึง car_name = 'โตโยต้า โคโรนา ฮาร์ดท็อป'",
        "SQL": "SELECT T2.price FROM data AS T1 INNER JOIN price AS T2 ON T1.ID = T2.ID WHERE T1.car_name = 'toyota corona hardtop'",
        "table": "['data', 'price']"
    },
    {
        "question_id": 3101,
        "db_id": "cars",
        "question": "Which year did Europe produce the most cars?",
        "evidence": "year refers to model_year; Europe refers to country = 'Europe'; the most cars refers to max(model_year)",
        "question_th": "ยุโรปผลิตรถยนต์มากที่สุดในปีใด",
        "evidence_th": "ปี หมายถึง model_year; ยุโรปหมายถึงประเทศ = 'ยุโรป'; รถยนต์ส่วนใหญ่หมายถึงสูงสุด (model_year)",
        "SQL": "SELECT T1.model_year FROM production AS T1 INNER JOIN country AS T2 ON T1.country = T2.origin WHERE T2.country = 'Europe' GROUP BY T1.model_year ORDER BY COUNT(T1.model_year) DESC LIMIT 1",
        "table": "['country', 'production']"
    },
    {
        "question_id": 3109,
        "db_id": "cars",
        "question": "How many of the cars from Japan weighed less than 3000?",
        "evidence": "from Japan refers to country = 'Japan'; weighed less than 3000 refers to weight < 3000",
        "question_th": "มีรถยนต์กี่คันจากญี่ปุ่นที่มีน้ำหนักน้อยกว่า 3,000 คัน?",
        "evidence_th": "จากประเทศญี่ปุ่นหมายถึงประเทศ = 'ญี่ปุ่น'; มีน้ำหนักน้อยกว่า 3,000 หมายถึง น้ำหนัก < 3,000",
        "SQL": "SELECT COUNT(*) FROM price AS T1 INNER JOIN production AS T2 ON T1.ID = T2.ID INNER JOIN country AS T3 ON T3.origin = T2.country INNER JOIN data AS T4 ON T4.ID = T1.ID WHERE T3.country = 'Japan' AND T4.weight < 3000",
        "table": "['country', 'data', 'price', 'production']"
    },
    {
        "question_id": 3110,
        "db_id": "cars",
        "question": "Among the cars produced in year 1973, how many of the cars have horsepower less than 100?",
        "evidence": "produced in year 1973 refers to model_year = 1973; have horsepower less than 100 refers to horsepower < 100",
        "question_th": "ในบรรดารถยนต์ที่ผลิตในปี พ.ศ. 2516 มีรถยนต์กี่คันที่มีแรงม้าน้อยกว่า 100 คัน?",
        "evidence_th": "ผลิตในปี 1973 หมายถึง model_year = 1973; มีแรงม้าน้อยกว่า 100 หมายถึง แรงม้า < 100",
        "SQL": "SELECT COUNT(*) FROM data AS T1 INNER JOIN production AS T2 ON T1.ID = T2.ID WHERE T2.model_year = 1973 AND T1.horsepower < 100",
        "table": "['data', 'production']"
    },
    {
        "question_id": 3135,
        "db_id": "cars",
        "question": "What is the price of Chevrolet Vega 2300?",
        "evidence": "Chevrolet Vega 2300 refers to car_name = 'chevrolet vega 2300'",
        "question_th": "เชฟโรเลต เวก้า 2300 ราคาเท่าไหร่?",
        "evidence_th": "Chevrolet Vega 2300 หมายถึง car_name = 'chevrolet vega 2300'",
        "SQL": "SELECT T2.price FROM data AS T1 INNER JOIN price AS T2 ON T1.ID = T2.ID WHERE T1.car_name = 'chevrolet vega 2300'",
        "table": "['data', 'price']"
    },
    {
        "question_id": 3137,
        "db_id": "cars",
        "question": "List the price of Ford cars from model 1970 to 1980.",
        "evidence": "Ford cars refers to car_name LIKE 'ford%'; from model 1970 to 1980 refers to model_year BETWEEN 1970 AND 1980",
        "question_th": "รายการราคารถยนต์ฟอร์ดตั้งแต่รุ่นปี 1970 ถึง 1980",
        "evidence_th": "รถยนต์ฟอร์ดหมายถึง car_name LIKE 'ford%'; จากรุ่นปี 1970 ถึง 1980 หมายถึงรุ่น_ปีระหว่างปี 1970 และ 1980",
        "SQL": "SELECT DISTINCT T3.price FROM data AS T1 INNER JOIN production AS T2 ON T1.ID = T2.ID INNER JOIN price AS T3 ON T3.ID = T2.ID WHERE T1.car_name LIKE 'ford%' AND T2.model_year BETWEEN 1970 AND 1980",
        "table": "['data', 'price', 'production']"
    },
    {
        "question_id": 3152,
        "db_id": "donor",
        "question": "Name all the project titles whereby project materials are intended mainly for literary.",
        "evidence": "intended mainly for literary refers to primary_focus_subject = 'Literacy'",
        "question_th": "ตั้งชื่อชื่อโครงการทั้งหมดโดยที่สื่อต่างๆ ของโครงการมีจุดประสงค์เพื่อวรรณกรรมเป็นหลัก",
        "evidence_th": "มีไว้สำหรับวรรณกรรมเป็นหลัก หมายถึง primary_focus_subject = 'การรู้หนังสือ'",
        "SQL": "SELECT T1.title FROM essays AS T1 INNER JOIN projects AS T2 ON T1.projectid = T2.projectid WHERE T2.primary_focus_subject = 'Literacy'",
        "table": "['essays', 'projects']"
    },
    {
        "question_id": 3173,
        "db_id": "donor",
        "question": "What is the total amount of all the donations made by the donor who made the highest donation in a single amount? Indicate the essay title to where he/she made his/her biggest donation.",
        "evidence": "total amount of all the donations refers to sum(donation_total); highest donation refers to max(donation_total)",
        "question_th": "จำนวนเงินบริจาคทั้งหมดของผู้บริจาคที่บริจาคสูงสุดในจำนวนเดียวคือเท่าไร? ระบุชื่อเรียงความว่าเขา/เธอบริจาคเงินครั้งใหญ่ที่สุดไปที่ใด",
        "evidence_th": "ยอดรวมของการบริจาคทั้งหมดหมายถึงผลรวม (donation_total); การบริจาคสูงสุดหมายถึงสูงสุด (donation_total)",
        "SQL": "SELECT T2.donation_total, T1.title FROM essays AS T1 INNER JOIN donations AS T2 ON T1.projectid = T2.projectid WHERE T2.donation_total = ( SELECT MAX(donation_total) FROM donations )",
        "table": "['donations', 'essays']"
    },
    {
        "question_id": 3181,
        "db_id": "donor",
        "question": "Which project in Brooklyn that have the highest request of resources? State the the project ID including all of the name of item requested.",
        "evidence": "in Brooklyn refers to school_city = 'Brooklyn'; highest request of resources refers to max(count(T1.item_name))",
        "question_th": "โครงการใดในบรูคลินที่มีการร้องขอทรัพยากรสูงสุด? ระบุรหัสโครงการรวมทั้งชื่อของรายการที่ร้องขอทั้งหมด",
        "evidence_th": "ในบรูคลินหมายถึงschool_city = 'บรูคลิน'; คำขอทรัพยากรสูงสุดหมายถึงสูงสุด (จำนวน (T1.item_name))",
        "SQL": "SELECT T1.projectid, T1.item_name FROM resources AS T1 INNER JOIN projects AS T2 ON T1.projectid = T2.projectid WHERE T2.school_city LIKE 'Brooklyn' GROUP BY T1.item_name ORDER BY COUNT(T1.item_name) DESC LIMIT 1",
        "table": "['projects', 'resources']"
    },
    {
        "question_id": 3193,
        "db_id": "donor",
        "question": "What is the donation message for donation ID a84dace1ff716f6f0c7af8ef9090a5d5?",
        "evidence": "",
        "question_th": "ข้อความบริจาคสำหรับการบริจาค ID a84dace1ff716f6f0c7af8ef9090a5d5 คืออะไร?",
        "evidence_th": "",
        "SQL": "SELECT donation_message FROM donations WHERE donationid = 'a84dace1ff716f6f0c7af8ef9090a5d5'",
        "table": "['donations']"
    },
    {
        "question_id": 3194,
        "db_id": "donor",
        "question": "Please list the types of resources that the vendor Lakeshore Learning Materials has provided for the projects.",
        "evidence": "Lakeshore Learning Materials is vendor_name; type of resources refers to project_resource_type;",
        "question_th": "โปรดระบุประเภทของทรัพยากรที่ผู้ขาย Lakeshore Learning Materials ได้จัดเตรียมไว้สำหรับโครงการ",
        "evidence_th": "วัสดุการเรียนรู้ Lakeshore คือ vendor_name; ประเภทของทรัพยากรอ้างอิงถึง project_resource_type;",
        "SQL": "SELECT DISTINCT project_resource_type FROM resources WHERE vendor_name = 'Lakeshore Learning Materials'",
        "table": "['resources']"
    },
    {
        "question_id": 3202,
        "db_id": "donor",
        "question": "Please list the donation messages of the donations for the projects created by a teacher working in a public magnet school in Brooklyn.",
        "evidence": "school in Brooklyn refers to school_city = 'Brooklyn'; public magnet refers to school_magnet = 't';",
        "question_th": "โปรดระบุข้อความการบริจาคของการบริจาคสำหรับโครงการที่สร้างขึ้นโดยครูที่ทำงานในโรงเรียนแม่เหล็กสาธารณะในบรูคลิน",
        "evidence_th": "โรงเรียนในบรูคลินหมายถึง school_city = 'บรูคลิน'; แม่เหล็กสาธารณะหมายถึง school_magnet = 't';",
        "SQL": "SELECT T2.donation_message FROM projects AS T1 INNER JOIN donations AS T2 ON T1.projectid = T2.projectid WHERE T1.school_city = 'Brooklyn' AND T1.school_magnet = 't'",
        "table": "['donations', 'projects']"
    },
    {
        "question_id": 3219,
        "db_id": "donor",
        "question": "Among the schools donated by donor \"000eebf28658900e63b538cf8a73afbd\",how many schools whose poverty level are highest?",
        "evidence": "donor \"000eebf28658900e63b538cf8a73afbd\" refers to donor_acctid = '000eebf28658900e63b538cf8a73afbd'; highest poverty level refers to poverty_level = 'highest poverty';",
        "question_th": "ในบรรดาโรงเรียนที่ได้รับบริจาคจากผู้บริจาค \"000eebf28658900e63b538cf8a73afbd\" มีโรงเรียนกี่แห่งที่มีระดับความยากจนสูงสุด?",
        "evidence_th": "ผู้บริจาค \"000eebf28658900e63b538cf8a73afbd\" หมายถึง donor_acctid = '000eebf28658900e63b538cf8a73afbd'; ระดับความยากจนสูงสุดหมายถึงความยากจน_ระดับ = 'ความยากจนสูงสุด';",
        "SQL": "SELECT COUNT(T1.schoolid) FROM projects AS T1 INNER JOIN donations AS T2 ON T1.projectid = T2.projectid WHERE T1.poverty_level = 'highest poverty' AND T2.donor_acctid = '000eebf28658900e63b538cf8a73afbd'",
        "table": "['donations', 'projects']"
    },
    {
        "question_id": 3223,
        "db_id": "donor",
        "question": "How much did the project that teacher \"822b7b8768c17456fdce78b65abcc18e\" created donate?",
        "evidence": "teacher \"822b7b8768c17456fdce78b65abcc18e\" refers to teacher_acctid = '822b7b8768c17456fdce78b65abcc18e'; donated refers to donation_total;",
        "question_th": "โครงการที่ครู \"822b7b8768c17456fdce78b65abcc18e\" สร้างบริจาคได้เท่าไหร่?",
        "evidence_th": "ครู \"822b7b8768c17456fdce78b65abcc18e\" หมายถึง teacher_acctid = '822b7b8768c17456fdce78b65abcc18e'; บริจาคหมายถึงการบริจาค_รวม;",
        "SQL": "SELECT T2.donation_total FROM projects AS T1 INNER JOIN donations AS T2 ON T1.projectid = T2.projectid WHERE T1.teacher_acctid = '822b7b8768c17456fdce78b65abcc18e'",
        "table": "['donations', 'projects']"
    },
    {
        "question_id": 3233,
        "db_id": "donor",
        "question": "For the teacher who wrote the project 'ABC Read', which city was he/she in?",
        "evidence": "ABC Read' is the title; city refers to school_city",
        "question_th": "สำหรับครูผู้เขียนโครงการ 'ABC Read' เขา/เธออยู่เมืองไหน?",
        "evidence_th": "ชื่อ ABC Read'; เมือง หมายถึง school_city",
        "SQL": "SELECT T2.school_city FROM essays AS T1 INNER JOIN projects AS T2 ON T1.projectid = T2.projectid WHERE T1.title = 'ABC Read'",
        "table": "['essays', 'projects']"
    },
    {
        "question_id": 3236,
        "db_id": "donor",
        "question": "What is the title for the project that got the donation message as \"Donation on behalf of Matt Carpenter because I'm a strong believer in education\".",
        "evidence": "",
        "question_th": "ชื่อโครงการที่ได้รับข้อความบริจาคว่า \"บริจาคในนามของ Matt Carpenter เพราะฉันเชื่อมั่นในด้านการศึกษา\"",
        "evidence_th": "",
        "SQL": "SELECT T1.title FROM essays AS T1 INNER JOIN donations AS T2 ON T1.projectid = T2.projectid WHERE T2.donation_message LIKE 'Donation on behalf of Matt Carpenter because I''m a strong believer in education.'",
        "table": "['donations', 'essays']"
    },
    {
        "question_id": 3249,
        "db_id": "donor",
        "question": "How many suburban metros are there in Livingston Parish School District?",
        "evidence": "suburban metros refer to metro = 'suburban'; Livingston Parish School District refer to school_district",
        "question_th": "Livingston Parish School District มีรถไฟใต้ดินชานเมืองกี่แห่ง",
        "evidence_th": "เมืองใหญ่ชานเมือง หมายถึง รถไฟใต้ดิน = 'ชานเมือง'; เขตการศึกษาลิฟวิงสตันแพริช อ้างถึง school_district",
        "SQL": "SELECT COUNT(projectid) FROM projects WHERE school_district = 'Livingston Parish School Dist' AND school_metro = 'suburban'",
        "table": "['projects']"
    },
    {
        "question_id": 3260,
        "db_id": "donor",
        "question": "Write the messages of those who donated to the Newark School District in the coordinates of 40.735332, -74.196014.",
        "evidence": "message refer to donation_message; Newark School District refer to school_district; 40.735332, -74.196014 refer to (school latitude, school_longitude)",
        "question_th": "เขียนข้อความของผู้บริจาคให้กับเขตการศึกษานวร์กในพิกัด 40.735332, -74.196014",
        "evidence_th": "ข้อความอ้างอิงถึงการบริจาค_ข้อความ; เขตการศึกษานวร์ก หมายถึง school_district; 40.735332, -74.196014 อ้างถึง (ละติจูดของโรงเรียน, school_longitude)",
        "SQL": "SELECT T1.donation_message FROM donations AS T1 INNER JOIN projects AS T2 ON T1.projectid = T2.projectid WHERE T2.school_latitude = 40.735332 AND T2.school_longitude = -74.196014 AND T2.school_district = 'Newark School District'",
        "table": "['donations', 'projects']"
    },
    {
        "question_id": 3261,
        "db_id": "donor",
        "question": "What date did the project with he 'Lets Share Ideas essay' went live?",
        "evidence": "date refer to date_posted; Lets Share Ideas refer to title",
        "question_th": "โปรเจ็กต์ 'เรียงความ Lets Share Ideas' ของเขาเริ่มฉายจริงเมื่อใด",
        "evidence_th": "วันที่อ้างถึง date_posted; ให้แบ่งปันความคิดอ้างถึงชื่อเรื่อง",
        "SQL": "SELECT T1.date_posted FROM projects AS T1 INNER JOIN essays AS T2 ON T1.projectid = T2.projectid WHERE T2.title LIKE 'Lets Share Ideas'",
        "table": "['essays', 'projects']"
    },
    {
        "question_id": 3266,
        "db_id": "donor",
        "question": "Calculate the sum of all the total amount donated to the essay project titled 'Lets Share Ideas' which were paid through paypal and indicate the city and poverty level.",
        "evidence": "paypal refer to payment method; Lets Share Ideas refer to title; city refer to school_city; total amount donated refer to SUM(donation_total of paypal where payment_method = ’paypal’)",
        "question_th": "คำนวณผลรวมของจำนวนเงินทั้งหมดที่บริจาคให้กับโครงการเรียงความชื่อ 'Lets Share Ideas' ซึ่งจ่ายผ่าน Paypal และระบุระดับเมืองและความยากจน",
        "evidence_th": "Paypal หมายถึงวิธีการชำระเงิน มาแบ่งปันไอเดียกันตามหัวข้อ; เมือง หมายถึง school_city; จำนวนเงินทั้งหมดที่บริจาคอ้างอิงถึง SUM (donation_total ของ paypal โดยที่ Payment_method = 'paypal')",
        "SQL": "SELECT SUM(T3.donation_total), school_city, poverty_level FROM essays AS T1 INNER JOIN projects AS T2 ON T1.projectid = T2.projectid INNER JOIN donations AS T3 ON T2.projectid = T3.projectid WHERE T1.title = 'Lets Share Ideas' AND T3.payment_method = 'paypal'",
        "table": "['donations', 'essays', 'projects']"
    },
    {
        "question_id": 3283,
        "db_id": "donor",
        "question": "What is the project title of the school located at latitude 42003718 and longitude -87668289?",
        "evidence": "latitude 42003718 refers to school_latitude = 42003718; longitude -87668289 refers to school_longitude = -87668289",
        "question_th": "ชื่อโครงการของโรงเรียนตั้งอยู่ที่ละติจูด 42003718 และลองจิจูด -87668289 คืออะไร",
        "evidence_th": "ละติจูด 42003718 หมายถึง school_latitude = 42003718; ลองจิจูด -87668289 หมายถึง school_longitude = -87668289",
        "SQL": "SELECT T1.title FROM essays AS T1 INNER JOIN projects AS T2 ON T1.projectid = T2.projectid WHERE T2.school_latitude = 42003718 AND T2.school_longitude = -87668289",
        "table": "['essays', 'projects']"
    },
    {
        "question_id": 3292,
        "db_id": "donor",
        "question": "In what percentage of counties has the ABC Read project been launched?",
        "evidence": "ABC Read project been launched refers to title = 'ABC Read'; percentage refers to DIVIDE(count(case when title = 'ABC Read' then school_county else null end),count(school_county))*100",
        "question_th": "โครงการ ABC Read เปิดตัวแล้วกี่เปอร์เซ็นต์?",
        "evidence_th": "โครงการ ABC Read เปิดตัวอ้างอิงถึงชื่อ = 'ABC Read'; เปอร์เซ็นต์หมายถึง DIVIDE (จำนวน (กรณีที่ชื่อ = 'ABC Read' จากนั้น school_county มิฉะนั้นจะเป็นโมฆะ), count (school_county)) * 100",
        "SQL": "SELECT CAST(SUM(CASE WHEN T2.title LIKE 'ABC Read' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(T1.school_county) FROM projects AS T1 INNER JOIN essays AS T2 ON T1.projectid = T2.projectid",
        "table": "['essays', 'projects']"
    },
    {
        "question_id": 3323,
        "db_id": "video_games",
        "question": "How many games were sold on the DS platform on average in the 4 different regions?",
        "evidence": "on the DS platform refers to platform_name = 'DS'; number of games sold on average = divide(sum(multiply(num_sales, 100000)), 4) where platform_name = 'DS'",
        "question_th": "มีเกมกี่เกมที่ขายได้โดยเฉลี่ยบนแพลตฟอร์ม DS ใน 4 ภูมิภาคที่แตกต่างกัน",
        "evidence_th": "บนแพลตฟอร์ม DS หมายถึง platform_name = 'DS'; จำนวนเกมที่ขายโดยเฉลี่ย = หาร (ผลรวม (คูณ (num_sales, 100,000)), 4) โดยที่ platform_name = 'DS'",
        "SQL": "SELECT SUM(T1.num_sales) * 100000 / 4 FROM region_sales AS T1 INNER JOIN game_platform AS T2 ON T1.game_platform_id = T2.id INNER JOIN platform AS T3 ON T2.platform_id = T3.id WHERE T3.platform_name = 'DS'",
        "table": "['game_platform', 'platform', 'region_sales']"
    },
    {
        "question_id": 3329,
        "db_id": "video_games",
        "question": "What is the id of the game \"Resident Evil Archives: Resident Evil\"?",
        "evidence": "id of game refers to game.id; \"Resident Evil Archives: Resident Evil\" refers to game_name = 'Resident Evil Archives: Resident Evil'",
        "question_th": "รหัสของเกม \"Resident Evil Archives: Resident Evil\" คืออะไร?",
        "evidence_th": "id ของเกมหมายถึง game.id; \"คลังเก็บ Resident Evil: Resident Evil\" หมายถึง game_name = 'คลังเก็บ Resident Evil: Resident Evil'",
        "SQL": "SELECT T.genre_id FROM game AS T WHERE T.game_name = 'Resident Evil Archives: Resident Evil'",
        "table": "['game']"
    },
    {
        "question_id": 3346,
        "db_id": "video_games",
        "question": "How many role-playing games did Microsoft Game Studios publish?",
        "evidence": "role-playing game refers to genre_name = 'Role-Playing'; Microsoft Game Studios refers to publisher_name = 'Microsoft Game Studios'",
        "question_th": "Microsoft Game Studios เผยแพร่เกมสวมบทบาทกี่เกม",
        "evidence_th": "เกมเล่นตามบทบาทหมายถึง category_name = 'เล่นตามบทบาท'; Microsoft Game Studios อ้างอิงถึง vendor_name = 'Microsoft Game Studios'",
        "SQL": "SELECT COUNT(T3.id) FROM publisher AS T1 INNER JOIN game_publisher AS T2 ON T1.id = T2.publisher_id INNER JOIN game AS T3 ON T2.game_id = T3.id INNER JOIN genre AS T4 ON T3.genre_id = T4.id WHERE T4.genre_name = 'Role-Playing' AND T1.publisher_name = 'Microsoft Game Studios'",
        "table": "['game', 'game_publisher', 'genre', 'publisher']"
    },
    {
        "question_id": 3360,
        "db_id": "video_games",
        "question": "List down the record ID of records released between 2000 to 2003.",
        "evidence": "record ID refers to game.id; released between 2000 to 2003 refers to release_year BETWEEN 2000 AND 2003",
        "question_th": "ลงรายการ ID บันทึกของบันทึกที่เผยแพร่ระหว่างปี 2000 ถึง 2003",
        "evidence_th": "ID บันทึกหมายถึง game.id; เปิดตัวระหว่างปี 2543 ถึง 2546 หมายถึง release_year ระหว่างปี 2543 ถึง 2546",
        "SQL": "SELECT T.id FROM game_platform AS T WHERE T.release_year BETWEEN 2000 AND 2003",
        "table": "['game_platform']"
    },
    {
        "question_id": 3376,
        "db_id": "video_games",
        "question": "How many games were released in 1981?",
        "evidence": "released in 1981 refers to release_year = 1981",
        "question_th": "ในปี 1981 มีเกมกี่เกมที่ออก?",
        "evidence_th": "เปิดตัวในปี 1981 หมายถึง release_year = 1981",
        "SQL": "SELECT COUNT(T.id) FROM game_platform AS T WHERE T.release_year = 1981",
        "table": "['game_platform']"
    },
    {
        "question_id": 3383,
        "db_id": "video_games",
        "question": "How many games are puzzle genre?",
        "evidence": "puzzle genre refers to genre_name = 'Puzzle'",
        "question_th": "แนวปริศนามีกี่เกม?",
        "evidence_th": "ประเภทปริศนาหมายถึง category_name = 'Puzzle'",
        "SQL": "SELECT COUNT(T1.id) FROM game AS T1 INNER JOIN genre AS T2 ON T1.genre_id = T2.id WHERE T2.genre_name = 'Puzzle'",
        "table": "['game', 'genre']"
    },
    {
        "question_id": 3396,
        "db_id": "video_games",
        "question": "How many games were released in 2001?",
        "evidence": "released in 2001 refers to release_year = 2001",
        "question_th": "ในปี 2544 มีเกมกี่เกมที่ออก?",
        "evidence_th": "เปิดตัวในปี 2544 หมายถึง release_year = 2001",
        "SQL": "SELECT COUNT(T.id) FROM game_platform AS T WHERE T.release_year = 2001",
        "table": "['game_platform']"
    },
    {
        "question_id": 3410,
        "db_id": "video_games",
        "question": "List the games from the publisher \"Activision\".",
        "evidence": "games refers to game_name; \"Activision\" refers to publisher_name = 'Activision';",
        "question_th": "รายชื่อเกมจากผู้จัดพิมพ์ \"Activision\"",
        "evidence_th": "เกมหมายถึง game_name; \"Activision\" หมายถึงผู้เผยแพร่_ชื่อ = 'Activision';",
        "SQL": "SELECT T3.game_name FROM publisher AS T1 INNER JOIN game_publisher AS T2 ON T1.id = T2.publisher_id INNER JOIN game AS T3 ON T2.game_id = T3.id WHERE T1.publisher_name = 'Activision'",
        "table": "['game', 'game_publisher', 'publisher']"
    },
    {
        "question_id": 3411,
        "db_id": "video_games",
        "question": "How many different publishers have published a game that starts with \"Marvel\"?",
        "evidence": "game that starts with \"Marvel\" refers to game_name LIKE 'Marvel%';",
        "question_th": "มีผู้จัดพิมพ์กี่รายที่เผยแพร่เกมที่ขึ้นต้นด้วย \"Marvel\"",
        "evidence_th": "เกมที่ขึ้นต้นด้วย \"Marvel\" หมายถึง game_name LIKE 'Marvel%';",
        "SQL": "SELECT COUNT(DISTINCT T1.publisher_id) FROM game_publisher AS T1 INNER JOIN game AS T2 ON T1.game_id = T2.id WHERE T2.game_name LIKE 'Marvel%'",
        "table": "['game', 'game_publisher']"
    },
    {
        "question_id": 3416,
        "db_id": "video_games",
        "question": "What are the top 2 platforms with the most sales in North America?",
        "evidence": "platforms refers to platform_name; most sales refers to MAX(num_sales); North America refers to region_name = 'North America';",
        "question_th": "แพลตฟอร์ม 2 อันดับแรกที่มียอดขายมากที่สุดในอเมริกาเหนือคืออะไร?",
        "evidence_th": "แพลตฟอร์มหมายถึง platform_name; ยอดขายส่วนใหญ่หมายถึง MAX(num_sales); อเมริกาเหนือหมายถึงregion_name = 'อเมริกาเหนือ';",
        "SQL": "SELECT T4.platform_name FROM region AS T1 INNER JOIN region_sales AS T2 ON T1.id = T2.region_id INNER JOIN game_platform AS T3 ON T2.game_platform_id = T3.id INNER JOIN platform AS T4 ON T3.platform_id = T4.id WHERE T1.region_name = 'North America' ORDER BY T2.num_sales DESC LIMIT 2",
        "table": "['game_platform', 'platform', 'region', 'region_sales']"
    },
    {
        "question_id": 3423,
        "db_id": "video_games",
        "question": "How many times did other regions make positive sales in DS platform?",
        "evidence": "other regions refers to region_name = 'Other'; positive sales refers to num_sales > 0; DS platform refers to platform_name = 'DS';",
        "question_th": "ภูมิภาคอื่นมียอดขายเป็นบวกในแพลตฟอร์ม DS กี่ครั้งแล้ว?",
        "evidence_th": "ภูมิภาคอื่นๆ อ้างถึง Region_name = 'อื่นๆ'; ยอดขายที่เป็นบวกหมายถึง num_sales > 0; แพลตฟอร์ม DS หมายถึง platform_name = 'DS';",
        "SQL": "SELECT COUNT(DISTINCT T2.id) FROM platform AS T1 INNER JOIN game_platform AS T2 ON T1.id = T2.platform_id INNER JOIN region_sales AS T3 ON T1.id = T3.game_platform_id INNER JOIN region AS T4 ON T3.region_id = T4.id WHERE T1.platform_name = 'DS' AND T4.region_name = 'Other' AND T3.num_sales > 0",
        "table": "['game_platform', 'platform', 'region', 'region_sales']"
    },
    {
        "question_id": 3431,
        "db_id": "video_games",
        "question": "What are the three largest numbers of games sold?",
        "evidence": "3 largest numbers of games sold refers to game_name where MAX(num_sales) LIMIT 3;",
        "question_th": "เกมที่ขายได้มากที่สุดสามเกมคืออะไร?",
        "evidence_th": "3 เกมที่ขายได้มากที่สุดหมายถึง game_name โดยที่ MAX(num_sales) LIMIT 3;",
        "SQL": "SELECT T.game_platform_id, SUM(T.num_sales) * 100000 FROM region_sales AS T GROUP BY game_platform_id ORDER BY SUM(T.num_sales) * 100000 DESC LIMIT 3",
        "table": "['region_sales']"
    },
    {
        "question_id": 3438,
        "db_id": "video_games",
        "question": "What genres are the games published by 'Agatsuma Entertainment'?",
        "evidence": "genres refers to genre_name; 'Agatsuma Entertainment' refers to publisher_name = 'Agatsuma Entertainment';",
        "question_th": "เกมประเภทใดบ้างที่เผยแพร่โดย 'Agatsuma Entertainment'?",
        "evidence_th": "ประเภทหมายถึงประเภท_ชื่อ; 'Agatsuma Entertainment' หมายถึงผู้เผยแพร่_ชื่อ = 'Agatsuma Entertainment';",
        "SQL": "SELECT T4.genre_name FROM publisher AS T1 INNER JOIN game_publisher AS T2 ON T1.id = T2.publisher_id INNER JOIN game AS T3 ON T2.game_id = T3.id INNER JOIN genre AS T4 ON T3.genre_id = T4.id WHERE T1.publisher_name = 'Agatsuma Entertainment'",
        "table": "['game', 'game_publisher', 'genre', 'publisher']"
    },
    {
        "question_id": 3466,
        "db_id": "video_games",
        "question": "List down the platform IDs of the games released in 2007.",
        "evidence": "released in 2007 refers to release_year = 2007;",
        "question_th": "ระบุรหัสแพลตฟอร์มของเกมที่เปิดตัวในปี 2550",
        "evidence_th": "เปิดตัวในปี 2550 หมายถึง release_year = 2550;",
        "SQL": "SELECT DISTINCT T.platform_id FROM game_platform AS T WHERE T.release_year = 2007",
        "table": "['game_platform']"
    },
    {
        "question_id": 3468,
        "db_id": "video_games",
        "question": "Calculate the number of game publisher IDs for games released in 1984.",
        "evidence": "released in 1984 refers to release_year = 1984;",
        "question_th": "คำนวณจำนวนรหัสผู้เผยแพร่เกมสำหรับเกมที่ออกในปี 1984",
        "evidence_th": "เปิดตัวในปี 1984 หมายถึง release_year = 1984;",
        "SQL": "SELECT COUNT(T.game_publisher_id) FROM game_platform AS T WHERE T.release_year = 1984",
        "table": "['game_platform']"
    },
    {
        "question_id": 3481,
        "db_id": "video_games",
        "question": "Calculate the total sales made by the games released in 2000.",
        "evidence": "total sales = SUM(num_sales); released in 2000 refers to release_year = 2000;",
        "question_th": "คำนวณยอดขายรวมของเกมที่ออกในปี 2000",
        "evidence_th": "ยอดขายรวม = SUM(num_sales); เปิดตัวในปี 2000 หมายถึง release_year = 2000;",
        "SQL": "SELECT SUM(T1.num_sales) FROM region_sales AS T1 INNER JOIN game_platform AS T2 ON T1.game_platform_id = T2.id WHERE T2.release_year = 2000",
        "table": "['game_platform', 'region_sales']"
    },
    {
        "question_id": 3482,
        "db_id": "video_games",
        "question": "Calculate the difference in sales between the games released in 1990 and 2000.",
        "evidence": "difference = SUBTRACT(SUM(num_sales WHERE release_year = 2000), SUM(num_sales WHERE release_year = 1990));",
        "question_th": "คำนวณความแตกต่างของยอดขายระหว่างเกมที่ออกในปี 1990 และ 2000",
        "evidence_th": "ความแตกต่าง = SUBTRACT(SUM(num_sales WHERE release_year = 2000), SUM(num_sales WHERE release_year = 1990));",
        "SQL": "SELECT SUM(CASE WHEN T2.release_year = 2000 THEN T1.num_sales ELSE 0 END) - SUM(CASE WHEN T2.release_year = 1990 THEN T1.num_sales ELSE 0 END) FROM region_sales AS T1 INNER JOIN game_platform AS T2 ON T1.game_platform_id = T2.id",
        "table": "['game_platform', 'region_sales']"
    },
    {
        "question_id": 3485,
        "db_id": "video_games",
        "question": "In which year did the record ID 19 with game publisher ID 6657 released?",
        "evidence": "which year refers to release_year; record ID 19 refers to game platform.id; id = 19",
        "question_th": "บันทึก ID 19 พร้อม ID ผู้เผยแพร่เกม 6657 เปิดตัวในปีใด",
        "evidence_th": "ปีใดหมายถึง release_year; บันทึก ID 19 หมายถึงเกม platform.id; ไอดี = 19",
        "SQL": "SELECT T.release_year FROM game_platform AS T WHERE T.game_publisher_id = 6657 AND T.id = 19",
        "table": "['game_platform']"
    },
    {
        "question_id": 3489,
        "db_id": "video_games",
        "question": "Provide the name of games released in 2015.",
        "evidence": "names of games refers to game_name; released in 2015 refers to release_year = 2015;",
        "question_th": "ระบุชื่อเกมที่ออกในปี 2558",
        "evidence_th": "ชื่อเกมหมายถึง game_name; เปิดตัวในปี 2558 หมายถึง release_year = 2015;",
        "SQL": "SELECT T3.game_name FROM game_platform AS T1 INNER JOIN game_publisher AS T2 ON T1.game_publisher_id = T2.id INNER JOIN game AS T3 ON T2.game_id = T3.id WHERE T1.release_year = 2015",
        "table": "['game', 'game_platform', 'game_publisher']"
    },
    {
        "question_id": 3492,
        "db_id": "video_games",
        "question": "List down the game platform ID and region name where the games achieved 20000 sales and below.",
        "evidence": "20000 sales and below refers to num_sales < 0.2;",
        "question_th": "ระบุรหัสแพลตฟอร์มเกมและชื่อภูมิภาคที่เกมมียอดขาย 20,000 และต่ำกว่า",
        "evidence_th": "ยอดขาย 20,000 และต่ำกว่าหมายถึง num_sales < 0.2;",
        "SQL": "SELECT T2.game_platform_id, T1.region_name FROM region AS T1 INNER JOIN region_sales AS T2 ON T1.id = T2.region_id WHERE T2.num_sales * 100000 <= 20000",
        "table": "['region', 'region_sales']"
    },
    {
        "question_id": 3516,
        "db_id": "authors",
        "question": "How many authors does the paper \"Equation Solving in Geometrical Theories\" have?",
        "evidence": "\"Equation Solving in Geometrical Theories\" is the title of paper",
        "question_th": "บทความเรื่อง \"การแก้สมการในทฤษฎีเรขาคณิต\" มีผู้เขียนกี่คน",
        "evidence_th": "บทความเรื่อง \"การแก้สมการในทฤษฎีเรขาคณิต\"",
        "SQL": "SELECT COUNT(T1.AuthorId) FROM PaperAuthor AS T1 INNER JOIN Paper AS T2 ON T1.PaperId = T2.Id WHERE T2.Title = 'Equation Solving in Geometrical Theories'",
        "table": "['Paper', 'PaperAuthor']"
    },
    {
        "question_id": 3530,
        "db_id": "authors",
        "question": "What is the title and journal homepage of the latest published paper?",
        "evidence": "latest published paper refers to Max(Year)",
        "question_th": "ชื่อเรื่องและหน้าแรกของวารสารของบทความที่ตีพิมพ์ล่าสุดคืออะไร?",
        "evidence_th": "บทความที่ตีพิมพ์ล่าสุดหมายถึง Max (ปี)",
        "SQL": "SELECT T1.Title, T2.HomePage FROM Paper AS T1 INNER JOIN Journal AS T2 ON T1.JournalId = T2.Id ORDER BY T1.Year DESC LIMIT 1",
        "table": "['Journal', 'Paper']"
    },
    {
        "question_id": 3535,
        "db_id": "authors",
        "question": "Among the papers with conference ID of 0, list down the authors of papers with a journal ID less than 100.",
        "evidence": "Conference ID of 0 refers to ConferenceId = 0; journal ID of less than 100 refers to JournalId < 100",
        "question_th": "ในบรรดาบทความที่มี ID การประชุมเป็น 0 ให้ระบุรายชื่อผู้เขียนบทความที่มี ID วารสารน้อยกว่า 100",
        "evidence_th": "Conference ID ของ 0 หมายถึง ConferenceId = 0; ID วารสารน้อยกว่า 100 หมายถึง JournalId < 100",
        "SQL": "SELECT DISTINCT T2.Name FROM Paper AS T1 INNER JOIN PaperAuthor AS T2 ON T1.Id = T2.PaperId WHERE T1.ConferenceId = 0 AND T1.JournalId < 100",
        "table": "['Paper', 'PaperAuthor']"
    },
    {
        "question_id": 3541,
        "db_id": "authors",
        "question": "Within the year of 2001 to 2010, find the paper published rate of 2001.",
        "evidence": "year of 2001 to 2010 refers to Year BETWEEN 2001 AND 2010; Percentage = Divide(Count (PaperId(Year = 2001)), Count (PaperID(Year BETWEEN 2001 AND 2010))) * 100",
        "question_th": "ภายในปี 2544 ถึง 2553 ค้นหาอัตราการตีพิมพ์บทความปี 2544",
        "evidence_th": "ปี 2544 ถึง 2553 หมายถึง ปีระหว่างปี 2544 ถึง 2553 เปอร์เซ็นต์ = หาร(นับ (PaperId(ปี = 2001)), นับ (PaperID(Year BETWEEN 2001 AND 2010))) * 100",
        "SQL": "SELECT CAST(SUM(CASE WHEN Year = 2001 THEN 1 ELSE 0 END) AS REAL) / COUNT(Id) FROM Paper WHERE Year >= 2001 AND Year < 2011",
        "table": "['Paper']"
    },
    {
        "question_id": 3546,
        "db_id": "authors",
        "question": "Write down the title and affiliation of the preprinted paper written by \"Roger J.Marshal\".",
        "evidence": "\"Roger J. Marshall\" is the name of author; preprinted paper refers to ConferenceId = 0 AND JournalId = 0",
        "question_th": "จดชื่อและสังกัดของกระดาษสำเร็จรูปที่เขียนโดย \"Roger J.Marshal\"",
        "evidence_th": "\"โรเจอร์ เจ. มาร์แชล\" เป็นชื่อผู้แต่ง กระดาษแบบฟอร์มจะอ้างอิงถึง ConferenceId = 0 และ JournalId = 0",
        "SQL": "SELECT T1.Title, T2.Affiliation FROM Paper AS T1 INNER JOIN PaperAuthor AS T2 ON T1.Id = T2.PaperId WHERE T2.Name = 'Roger J. Marshall' AND T1.ConferenceID = 0 AND T1.JournalID = 0",
        "table": "['Paper', 'PaperAuthor']"
    },
    {
        "question_id": 3559,
        "db_id": "authors",
        "question": "What is the homepage address for paper \"Energy-efficiency bounds for noise-tolerant dynamic circuits\"?",
        "evidence": "\"Energy-efficiency bounds for noise-tolerant dynamic circuits\" is the Title of paper",
        "question_th": "ที่อยู่หน้าแรกของเอกสาร \"ขอบเขตการประหยัดพลังงานสำหรับวงจรไดนามิกที่ทนต่อเสียงรบกวน\" คืออะไร",
        "evidence_th": "\"ขอบเขตประสิทธิภาพการใช้พลังงานสำหรับวงจรไดนามิกที่ทนต่อเสียงรบกวน\" เป็นหัวข้อกระดาษ",
        "SQL": "SELECT T2.HomePage FROM Paper AS T1 INNER JOIN Conference AS T2 ON T1.ConferenceId = T2.Id WHERE T1.Title = 'Energy-efficiency bounds for noise-tolerant dynamic circuits'",
        "table": "['Conference', 'Paper']"
    },
    {
        "question_id": 3617,
        "db_id": "authors",
        "question": "What is the conference homepage URL of the paper titled \"Quality evaluation of long duration audiovisual content\"?",
        "evidence": "homepage URL refers to HomePage; 'Quality evaluation of long duration audiovisual content' is the Title",
        "question_th": "URL หน้าแรกของการประชุมของรายงานเรื่อง \"การประเมินคุณภาพของเนื้อหาภาพและเสียงที่มีระยะเวลายาวนาน\" คืออะไร",
        "evidence_th": "URL หน้าแรกหมายถึงหน้าแรก หัวข้อ 'การประเมินคุณภาพเนื้อหาภาพและเสียงที่มีระยะเวลายาวนาน'",
        "SQL": "SELECT T2.HomePage FROM Paper AS T1 INNER JOIN Conference AS T2 ON T1.ConferenceId = T2.Id WHERE T1.Title = 'Quality evaluation of long duration audiovisual content'",
        "table": "['Conference', 'Paper']"
    },
    {
        "question_id": 3623,
        "db_id": "authors",
        "question": "What is the short name for \"Software - Concepts and Tools / Structured Programming\"?",
        "evidence": "Software - Concepts and Tools / Structured Programming' is the FullName;",
        "question_th": "ชื่อย่อของ \"ซอฟต์แวร์ - แนวคิดและเครื่องมือ / การเขียนโปรแกรมแบบมีโครงสร้าง\" คืออะไร",
        "evidence_th": "ซอฟต์แวร์ - แนวคิดและเครื่องมือ / การเขียนโปรแกรมแบบมีโครงสร้าง' คือชื่อเต็ม;",
        "SQL": "SELECT ShortName FROM Journal WHERE FullName = 'Software - Concepts and Tools / Structured Programming'",
        "table": "['Journal']"
    },
    {
        "question_id": 3627,
        "db_id": "authors",
        "question": "What are the keywords for the paper which was published on \"Modeling Identification and Control\" in 1994?",
        "evidence": "Modeling Identification and Control' is the FullName of the journal; 1994 refers to Year = '1994'; if the year is \"0\", it means this paper is preprint, or not published",
        "question_th": "คำหลักสำหรับบทความที่ตีพิมพ์ในหัวข้อ \"การระบุและการควบคุมแบบจำลอง\" ในปี 1994 คืออะไร",
        "evidence_th": "Modeling Identification and Control' คือชื่อเต็มของวารสาร 1994 หมายถึง ปี = '1994'; หากปีเป็น \"0\" แสดงว่าบทความนี้มีการพิมพ์ล่วงหน้าหรือยังไม่ได้ตีพิมพ์",
        "SQL": "SELECT T2.Keyword FROM Journal AS T1 INNER JOIN Paper AS T2 ON T1.Id = T2.JournalId WHERE T1.FullName = 'Modeling Identification and Control' AND T2.Year = 1994",
        "table": "['Journal', 'Paper']"
    },
    {
        "question_id": 3636,
        "db_id": "authors",
        "question": "How many times more for the papers that were presented at the \"International Conference on Thermoelectrics\" conference than \"International Conference on Wireless Networks, Communications and Mobile Computing“ conference?",
        "evidence": "International Conference on Thermoelectrics' AND 'International Conference on Wireless Networks, Communications and Mobile Computing' are the FullName of the conference; Papers refers to Paper.Id; Calculation = SUBTRACT(SUM(Paper.Id where FullName = 'International Conference on Thermoelectrics'), SUM(Paper.Id where FullName = 'International Conference on Wireless Networks, Communications and Mobile Computing'))",
        "question_th": "บทความที่นำเสนอในการประชุม \"การประชุมนานาชาติเรื่องเทอร์โมอิเล็กทริกส์\" มีมากกว่าการประชุม \"การประชุมนานาชาติเรื่องเครือข่ายไร้สาย การสื่อสาร และคอมพิวเตอร์เคลื่อนที่\" กี่ครั้ง",
        "evidence_th": "การประชุมนานาชาติเรื่องเทอร์โมอิเล็กทริกส์ และ 'การประชุมนานาชาติเรื่องเครือข่ายไร้สาย การสื่อสาร และคอมพิวเตอร์เคลื่อนที่' เป็นชื่อเต็มของการประชุม Papers หมายถึง Paper.Id; การคำนวณ = SUBTRACT(SUM(Paper.Id โดยที่ FullName = 'International Conference on Thermoelectrics'), SUM(Paper.Id โดยที่ FullName = 'International Conference on Wireless Networks, Communications and Mobile Computing'))",
        "SQL": "SELECT CAST(SUM(CASE WHEN T2.FullName = 'International Conference on Thermoelectrics' THEN 1 ELSE 0 END) AS REAL) / SUM(CASE WHEN T2.FullName = 'International Conference on Wireless Networks, Communications and Mobile Computing' THEN 1 ELSE 0 END) FROM Paper AS T1 INNER JOIN Conference AS T2 ON T1.ConferenceId = T2.Id",
        "table": "['Conference', 'Paper']"
    },
    {
        "question_id": 3643,
        "db_id": "authors",
        "question": "What is the title of the paper with the most authors?",
        "evidence": "paper refers to paper.Id; paper with the most authors refers to MAX(PaperAuthor.PaperId)",
        "question_th": "บทความที่มีผู้แต่งมากที่สุดชื่ออะไร?",
        "evidence_th": "กระดาษหมายถึงกระดาษรหัส; บทความที่มีผู้เขียนมากที่สุดหมายถึง MAX(PaperAuthor.PaperId)",
        "SQL": "SELECT T2.Title FROM PaperAuthor AS T1 INNER JOIN Paper AS T2 ON T1.PaperId = T2.Id GROUP BY T1.PaperId ORDER BY COUNT(T1.PaperId) DESC LIMIT 1",
        "table": "['Paper', 'PaperAuthor']"
    },
    {
        "question_id": 3644,
        "db_id": "authors",
        "question": "Which paper published by the \"TUBERCLE LUNG DIS\" journal is the oldest?",
        "evidence": "paper refers to Title; TUBERCLE LUNG DIS is the ShortName of journal; the oldest refers to MIN(Year)",
        "question_th": "บทความใดที่ตีพิมพ์โดยวารสาร \"TUBERCLE LUNG DIS\" ที่เก่าแก่ที่สุด",
        "evidence_th": "กระดาษหมายถึงชื่อเรื่อง; TUBERCLE LUNG DIS เป็นชื่อย่อของวารสาร ที่เก่าแก่ที่สุดหมายถึง MIN(ปี)",
        "SQL": "SELECT T2.Title FROM Journal AS T1 INNER JOIN Paper AS T2 ON T1.Id = T2.JournalId WHERE T1.ShortName = 'TUBERCLE LUNG DIS' ORDER BY T2.Year ASC LIMIT 1",
        "table": "['Journal', 'Paper']"
    },
    {
        "question_id": 3653,
        "db_id": "authors",
        "question": "List all of the conferences where a paper was published in 2008.",
        "evidence": "Published in 2008 refer to Year = 2008\n\n",
        "question_th": "รายชื่อการประชุมทั้งหมดที่มีการตีพิมพ์บทความในปี 2551",
        "evidence_th": "เผยแพร่ในปี 2551 อ้างอิงถึงปี = 2551\n\n",
        "SQL": "SELECT DISTINCT T2.FullName FROM Paper AS T1 INNER JOIN Conference AS T2 ON T1.ConferenceId = T2.Id WHERE T1.Year = 2008",
        "table": "['Conference', 'Paper']"
    },
    {
        "question_id": 3656,
        "db_id": "authors",
        "question": "What is the name of author with the ID of 1722?",
        "evidence": "",
        "question_th": "ชื่อผู้เขียน ID 1722 คืออะไร?",
        "evidence_th": "",
        "SQL": "SELECT Name FROM Author WHERE Id = 1722",
        "table": "['Author']"
    },
    {
        "question_id": 3666,
        "db_id": "authors",
        "question": "Indicate the year and a full name of the journal in which the publication named 'Area Effects in Cepaea' was published.",
        "evidence": "Area Effects in Cepaea' is the title of paper",
        "question_th": "ระบุปีและชื่อเต็มของวารสารที่มีการตีพิมพ์ชื่อ 'Area Effects in Cepaea'",
        "evidence_th": "Area Effects in Cepaea' เป็นชื่อบทความ",
        "SQL": "SELECT T1.Year, T2.FullName FROM Paper AS T1 INNER JOIN Journal AS T2 ON T1.JournalId = T2.Id WHERE T1.Title = 'Area Effects in Cepaea'",
        "table": "['Journal', 'Paper']"
    },
    {
        "question_id": 3667,
        "db_id": "authors",
        "question": "Who is the author of the publication named 'Real-Time Automata'?",
        "evidence": "Real-Time Automata' is the title of paper; publication refers to title;",
        "question_th": "ใครเป็นผู้เขียนสิ่งพิมพ์ชื่อ 'Real-Time Automata'?",
        "evidence_th": "Real-Time Automata' เป็นชื่อบทความ สิ่งพิมพ์หมายถึงชื่อเรื่อง;",
        "SQL": "SELECT T2.Name FROM Paper AS T1 INNER JOIN PaperAuthor AS T2 ON T1.Id = T2.PaperId WHERE T1.Title = 'Real-Time Automata'",
        "table": "['Paper', 'PaperAuthor']"
    },
    {
        "question_id": 3681,
        "db_id": "authors",
        "question": "Mention the name of author for paper id 5 and state the keyword of this page.",
        "evidence": "",
        "question_th": "ระบุชื่อผู้แต่งสำหรับกระดาษ id 5 และระบุคำสำคัญของหน้านี้",
        "evidence_th": "",
        "SQL": "SELECT T1.Name, T3.Keyword FROM Author AS T1 INNER JOIN PaperAuthor AS T2 ON T1.Id = T2.AuthorId INNER JOIN Paper AS T3 ON T2.PaperId = T3.Id WHERE T2.PaperId = 5",
        "table": "['Author', 'Paper', 'PaperAuthor']"
    },
    {
        "question_id": 3687,
        "db_id": "college_completion",
        "question": "State the average median SAT value for institutes in the state with the most male graduate cohort in 2013.",
        "evidence": "median SAT value refers to med_sat_value; average = AVG(med_sat_value); male refers to gender = 'M'; graduate cohort refers to grad_cohort; most male graduate cohort refers to MAX(COUNT(grad_cohort WHERE gender = 'M')); in 2013 refers to year = 2013;",
        "question_th": "ระบุค่ามัธยฐาน SAT เฉลี่ยสำหรับสถาบันในรัฐที่มีกลุ่มบัณฑิตที่เป็นชายมากที่สุดในปี 2013",
        "evidence_th": "ค่ามัธยฐาน SAT หมายถึง med_sat_value; ค่าเฉลี่ย = AVG(med_sat_value); ชายหมายถึงเพศ = 'M'; กลุ่มบัณฑิตศึกษาหมายถึง grad_cohort; กลุ่มบัณฑิตศึกษาชายส่วนใหญ่อ้างอิงถึง MAX(COUNT(grad_cohort WHERE sex = 'M')); ในปี 2556 หมายถึง ปี = 2556;",
        "SQL": "SELECT AVG(T1.med_sat_value) FROM institution_details AS T1 INNER JOIN state_sector_grads AS T2 ON T1.state = T2.state WHERE T2.year = 2013 AND T2.gender = 'M' GROUP BY T2.grad_cohort ORDER BY COUNT(T2.grad_cohort) DESC LIMIT 1",
        "table": "['institution_details', 'state_sector_grads']"
    },
    {
        "question_id": 3700,
        "db_id": "college_completion",
        "question": "How many students that graduated from Lincoln College in 2011 belong to the cohort type of Bachelor's/equivalent seeking cohort at 4-year institutions?",
        "evidence": "Lincoln College refers to chronname = 'Lincoln College'; in 2011 refers to year = 2011; Bachelor's/equivalent seeking cohort at 4-year institutions refers to cohort = '4y bach';",
        "question_th": "มีนักเรียนกี่คนที่สำเร็จการศึกษาจากวิทยาลัยลินคอล์นในปี 2011 อยู่ในประเภทการศึกษาระดับปริญญาตรี/เทียบเท่าในสถาบันการศึกษา 4 ปี",
        "evidence_th": "Lincoln College หมายถึง chronname = 'Lincoln College'; ในปี 2554 หมายถึง ปี = 2554; กลุ่มนักศึกษาระดับปริญญาตรี/เทียบเท่าในสถาบัน 4 ปี หมายถึงกลุ่ม = '4y bach';",
        "SQL": "SELECT COUNT(T1.unitid) FROM institution_details AS T1 INNER JOIN institution_grads AS T2 ON T1.unitid = T2.unitid WHERE T1.chronname = 'Lincoln College' AND T2.year = 2011 AND T2.cohort = '4y bach'",
        "table": "['institution_details', 'institution_grads']"
    },
    {
        "question_id": 3719,
        "db_id": "college_completion",
        "question": "Tell the name of school in \"NJ\" that could get the bachelor's degree with highest students number.",
        "evidence": "name of school refers to chronname; NJ refers to state_abbr = 'NJ'; bachelor's degree refers to level = '4-year'; highest students number refers to MAX(student_count);",
        "question_th": "แจ้งชื่อโรงเรียนใน \"NJ\" ที่จะเข้าศึกษาระดับปริญญาตรีที่มีจำนวนนักเรียนสูงสุด",
        "evidence_th": "ชื่อโรงเรียนหมายถึงชื่อสกุล นิวเจอร์ซีย์หมายถึง state_abbr = 'นิวเจอร์ซีย์'; ปริญญาตรี หมายถึง ระดับ = '4 ปี'; จำนวนนักเรียนสูงสุดหมายถึง MAX(student_count);",
        "SQL": "SELECT DISTINCT T1.chronname FROM institution_details AS T1 INNER JOIN state_sector_grads AS T2 ON T2.state = T1.state WHERE T2.state_abbr = 'NJ' AND T1.level = '4-year' AND T1.student_count = ( SELECT MAX(T1.student_count) FROM institution_details AS T1 INNER JOIN state_sector_grads AS T2 ON T2.state = T1.state WHERE T2.state_abbr = 'NJ' AND T1.level = '4-year' )",
        "table": "['institution_details', 'state_sector_grads']"
    },
    {
        "question_id": 3720,
        "db_id": "college_completion",
        "question": "Give the web site address for the school in \"PA\" state with the highest latitude.",
        "evidence": "web site address refers to site; PA refers to state_abbr = 'PA'; highest latitude refers to MAX(lat_y);",
        "question_th": "ระบุที่อยู่เว็บไซต์ของโรงเรียนในรัฐ \"PA\" ที่มีละติจูดสูงสุด",
        "evidence_th": "ที่อยู่เว็บไซต์หมายถึงเว็บไซต์ PA อ้างถึง state_abbr = 'PA'; ละติจูดสูงสุดหมายถึง MAX(lat_y);",
        "SQL": "SELECT DISTINCT T1.site FROM institution_details AS T1 INNER JOIN state_sector_grads AS T2 ON T2.state = T1.state WHERE T2.state_abbr = 'PA' AND T1.lat_y = ( SELECT MAX(T1.lat_y) FROM institution_details AS T1 INNER JOIN state_sector_grads AS T2 ON T2.state = T1.state WHERE T2.state_abbr = 'PA' )",
        "table": "['institution_details', 'state_sector_grads']"
    },
    {
        "question_id": 3730,
        "db_id": "college_completion",
        "question": "What is the percentage of the number of 4-year public schools from Madison Area Technical College's home state in the Alabama?",
        "evidence": "percentage = MULTIPLY(DIVIDE(SUM(chronname = 'Madison Area Technical College'), SUM(state = 'Alabama')), 100); 4-year refers to level = '4-year'; public refers to control = 'Public'; Madison Area Technical College refers to chronname = 'Madison Area Technical College'; home state in the United States refers to state;",
        "question_th": "เปอร์เซ็นต์ของจำนวนโรงเรียนรัฐบาล 4 ปีจากรัฐบ้านเกิดของ Madison Area Technical College ใน Alabama คือเท่าใด",
        "evidence_th": "เปอร์เซ็นต์ = MULTIPLY(DIVIDE(SUM(chronname = 'Madison Area Technical College'), SUM(state = 'Alabama')), 100); 4 ปี หมายถึง ระดับ = '4 ปี'; สาธารณะหมายถึงการควบคุม = 'สาธารณะ'; วิทยาลัยเทคนิคเขตเมดิสัน อ้างอิงถึง chronname = 'วิทยาลัยเทคนิคเขตเมดิสัน'; รัฐบ้านเกิดในสหรัฐอเมริกาหมายถึงรัฐ",
        "SQL": "SELECT CAST(COUNT(DISTINCT CASE WHEN T1.state = ( SELECT T1.state FROM institution_details AS T1 INNER JOIN state_sector_details AS T2 ON T2.state = T1.state WHERE T1.chronname = 'Madison Area Technical College' ) AND T1.level = '4-year' AND T1.control = 'Public' THEN T1.chronname ELSE NULL END) AS REAL) * 100 / COUNT(DISTINCT CASE WHEN T2.state = 'Alabama' THEN T1.chronname ELSE NULL END) FROM institution_details AS T1 INNER JOIN state_sector_details AS T2 ON T2.state = T1.state",
        "table": "['institution_details', 'state_sector_details']"
    },
    {
        "question_id": 3742,
        "db_id": "college_completion",
        "question": "In female students in year 2012, how many of them from a state with number of schools ranges from 10 to 20?",
        "evidence": "female refers to gender = 'F'; number of schools refers to schools_count; schools_count BETWEEN 10 AND 20;",
        "question_th": "ในนักเรียนหญิงในปี 2555 มีกี่คนจากรัฐที่มีจำนวนโรงเรียนตั้งแต่ 10 ถึง 20 แห่ง",
        "evidence_th": "หญิงหมายถึงเพศ = 'F'; จำนวนโรงเรียนหมายถึงโรงเรียน_จำนวน; โรงเรียน_จำนวนระหว่าง 10 ถึง 20;",
        "SQL": "SELECT COUNT(T2.race) FROM state_sector_details AS T1 INNER JOIN state_sector_grads AS T2 ON T2.stateid = T1.stateid WHERE T2.gender = 'F' AND schools_count BETWEEN 10 AND 20 AND T2.year = 2012",
        "table": "['state_sector_details', 'state_sector_grads']"
    },
    {
        "question_id": 3752,
        "db_id": "college_completion",
        "question": "Between the Ivy League Schools, which school's state have the lowest sate appropriations to higher education in fiscal year 2011 per resident?",
        "evidence": "Ivy League Schools refers to chronname = 'Brown University' or chronname = 'Columbia University' or chronname = 'Cornell University' or chronname = 'Dartmouth College' or chronname = 'Harvard University' or chronname = 'Princeton University' or chronname = 'University of Pennsylvania' or chronname = 'Yale University'; lowest state appropriations to higher education in fiscal year 2011 per resident refers to MIN(state_appr_value);",
        "question_th": "ระหว่าง Ivy League Schools รัฐของโรงเรียนใดมีการจัดสรรเงินเพื่อการศึกษาระดับอุดมศึกษาต่ำที่สุดในปีงบประมาณ 2011 ต่อผู้อยู่อาศัยหนึ่งคน",
        "evidence_th": "Ivy League Schools หมายถึง chronname = 'Brown University' หรือ chronname = 'Columbia University' หรือ chronname = 'Cornell University' หรือ chronname = 'Dartmouth College' หรือ chronname = 'Harvard University' หรือ chronname = 'Princeton University' หรือ chronname = 'University of Pennsylvania' หรือ chronname = 'Yale University'; การจัดสรรของรัฐขั้นต่ำเพื่อการศึกษาระดับอุดมศึกษาในปีงบประมาณ 2011 ต่อผู้อยู่อาศัยหนึ่งคน อ้างอิงถึง MIN(state_appr_value)",
        "SQL": "SELECT T1.state FROM institution_details AS T1 INNER JOIN state_sector_details AS T2 ON T2.state = T1.state WHERE T1.chronname IN ( 'Brown University', 'Columbia University', 'Cornell University', 'Dartmouth College', 'Harvard University', 'Princeton University', 'University of Pennsylvania', 'Yale University' ) GROUP BY T1.state ORDER BY SUM(T2.state_appr_value) ASC LIMIT 1",
        "table": "['institution_details', 'state_sector_details']"
    },
    {
        "question_id": 3754,
        "db_id": "college_completion",
        "question": "What is the average SAT value for incoming students in all of the schools located in the state with the lowest state appropriations to higher education in fiscal year 2011 per resident?",
        "evidence": "average = DIVIDE(SUM(med_sat_value), SUM(chronname)); SAT value for incoming students refers to med_sat_value; lowest state appropriations to higher education in fiscal year 2011 per resident refers to MIN(state_appr_value);",
        "question_th": "ค่า SAT โดยเฉลี่ยสำหรับนักเรียนที่เข้ามาในทุกโรงเรียนที่ตั้งอยู่ในรัฐที่มีการจัดสรรให้รัฐเพื่อการศึกษาระดับอุดมศึกษาต่ำที่สุดในปีงบประมาณ 2011 ต่อผู้อยู่อาศัยหนึ่งคนคือเท่าใด",
        "evidence_th": "ค่าเฉลี่ย = DIVIDE(SUM(med_sat_value), SUM(ชื่อโครไนซ์)); ค่า SAT สำหรับนักเรียนที่เข้ามาหมายถึง med_sat_value; การจัดสรรของรัฐขั้นต่ำเพื่อการศึกษาระดับอุดมศึกษาในปีงบประมาณ 2011 ต่อผู้อยู่อาศัยหนึ่งคน อ้างอิงถึง MIN(state_appr_value)",
        "SQL": "SELECT AVG(t1.med_sat_value) FROM institution_details AS T1 INNER JOIN state_sector_details AS T2 ON t1.state = t2.state ORDER BY t2.state_appr_value LIMIT 1",
        "table": "['institution_details', 'state_sector_details']"
    },
    {
        "question_id": 3764,
        "db_id": "public_review_platform",
        "question": "What kind of \"wi-fi\" does Yelp business No.\"10172\" have?",
        "evidence": "kind of wi-fi refers to attribute_value where attribute_name = 'Wi-Fi'; business No. refers to business_id;",
        "question_th": "ธุรกิจ Yelp หมายเลข 10172 มี \"Wi-Fi\" ประเภทใด",
        "evidence_th": "ประเภทของ Wi-Fi หมายถึงattribute_value โดยที่attribute_name = 'Wi-Fi'; หมายเลขธุรกิจ หมายถึง business_id;",
        "SQL": "SELECT T2.attribute_value FROM Attributes AS T1 INNER JOIN Business_Attributes AS T2 ON T1.attribute_id = T2.attribute_id WHERE T2.business_id = 10172 AND T1.attribute_name LIKE 'wi-fi'",
        "table": "['Attributes', 'Business_Attributes']"
    },
    {
        "question_id": 3771,
        "db_id": "public_review_platform",
        "question": "For the Yelp business which had the most number of \"short\" tips, which category does it belong to?",
        "evidence": "short tips refers to tip_length = 'short'; most number of short tips refers to MAX(COUNT(tip_length = 'short')); category refers to category_name;",
        "question_th": "สำหรับธุรกิจ Yelp ที่มีทิป \"สั้นๆ\" มากที่สุด จัดอยู่ในหมวดหมู่ใด",
        "evidence_th": "เคล็ดลับสั้น ๆ หมายถึง tip_length = 'สั้น'; เคล็ดลับสั้น ๆ ส่วนใหญ่อ้างอิงถึง MAX(COUNT(tip_length = 'short')); หมวดหมู่หมายถึง category_name;",
        "SQL": "SELECT DISTINCT T1.category_name FROM Categories AS T1 INNER JOIN Business_Categories AS T2 ON T1.category_id = T2.category_id INNER JOIN Business AS T3 ON T2.business_id = T3.business_id INNER JOIN Tips AS T4 ON T3.business_id = T4.business_id WHERE T4.tip_length LIKE 'short'",
        "table": "['Business', 'Business_Categories', 'Categories', 'Tips']"
    },
    {
        "question_id": 3790,
        "db_id": "public_review_platform",
        "question": "How many types of music does Yelp business No.\"1141\" have?",
        "evidence": "types of music refers to attribute_name LIKE '%music%' WHERE attribute_value = 'true'; business No. refers to business_id;\n",
        "question_th": "ธุรกิจ Yelp หมายเลข 1141 มีเพลงกี่ประเภท?",
        "evidence_th": "ประเภทของเพลงอ้างถึงattribute_name LIKE '%music%' โดยที่attribute_value = 'true'; หมายเลขธุรกิจ หมายถึง business_id;\n",
        "SQL": "SELECT COUNT(T1.attribute_name) FROM Attributes AS T1 INNER JOIN Business_Attributes AS T2 ON T1.attribute_id = T2.attribute_id WHERE T2.attribute_value LIKE 'TRUE' AND T2.business_id = 1141",
        "table": "['Attributes', 'Business_Attributes']"
    },
    {
        "question_id": 3803,
        "db_id": "public_review_platform",
        "question": "Please indicate the review count of the \"active life\" businesses in Phoenix.",
        "evidence": "active life refers to category_name = 'Active Life'; Phoenix refers to city = 'Phoenix';",
        "question_th": "โปรดระบุจำนวนรีวิวของธุรกิจ \"ชีวิตที่กระตือรือร้น\" ในฟีนิกซ์",
        "evidence_th": "ชีวิตที่กระตือรือร้นหมายถึง category_name = 'ชีวิตที่กระตือรือร้น'; ฟีนิกซ์หมายถึงเมือง = 'ฟีนิกซ์';",
        "SQL": "SELECT COUNT(*) FROM Categories AS T1 INNER JOIN Business_Categories AS T2 ON T1.category_id = T2.category_id INNER JOIN Business AS T3 ON T2.business_id = T3.business_id WHERE T1.category_name = 'Active Life' AND T3.city = 'Phoenix'",
        "table": "['Business', 'Business_Categories', 'Categories']"
    },
    {
        "question_id": 3830,
        "db_id": "public_review_platform",
        "question": "Please name one attribute that business number 2 does not have.",
        "evidence": "business number refers to business_id; business_id = 2; does not have refers to attribute_value = 'none';",
        "question_th": "โปรดตั้งชื่อแอตทริบิวต์หนึ่งรายการที่ธุรกิจหมายเลข 2 ไม่มี",
        "evidence_th": "หมายเลขธุรกิจหมายถึง business_id; business_id = 2; ไม่มีการอ้างอิงถึงattribute_value = 'none';",
        "SQL": "SELECT T1.attribute_name FROM Attributes AS T1 INNER JOIN Business_Attributes AS T2 ON T1.attribute_id = T2.attribute_id WHERE T2.attribute_value LIKE 'none' LIMIT 1",
        "table": "['Attributes', 'Business_Attributes']"
    },
    {
        "question_id": 3834,
        "db_id": "public_review_platform",
        "question": "What are the categories that business number 15 belongs to?",
        "evidence": "business number refers to business_id;",
        "question_th": "ธุรกิจหมายเลข 15 จัดอยู่ในประเภทใดบ้าง?",
        "evidence_th": "หมายเลขธุรกิจหมายถึง business_id;",
        "SQL": "SELECT T2.category_name FROM Business_Categories AS T1 INNER JOIN Categories AS T2 ON T1.category_id = T2.category_id WHERE T1.business_id = 15",
        "table": "['Business_Categories', 'Categories']"
    },
    {
        "question_id": 3842,
        "db_id": "public_review_platform",
        "question": "How many Yelp_Businesses in Scottsdale have received positive comments in the Elitestar rating?",
        "evidence": "Scottsdale refers to city = 'Scottsdale'; positive comments refers to stars > 3; Elitestar rating refers to stars;",
        "question_th": "มี Yelp_Businesses จำนวนเท่าใดในสก็อตส์เดลที่ได้รับความคิดเห็นเชิงบวกในระดับ Elitestar",
        "evidence_th": "Scottsdale หมายถึงเมือง = 'Scottsdale'; ความคิดเห็นเชิงบวกหมายถึงดาว > 3; การจัดอันดับของ Elitestar หมายถึงดวงดาว",
        "SQL": "SELECT COUNT(business_id) FROM Business WHERE city LIKE 'Scottsdale' AND stars > 3",
        "table": "['Business']"
    },
    {
        "question_id": 3854,
        "db_id": "public_review_platform",
        "question": "Please list the business IDs of all the Yelp_Businesses that are good for kids.",
        "evidence": "good for kids refers to attribute_name = 'Good for Kids' and attribute_value = 'true'\n",
        "question_th": "โปรดระบุรหัสธุรกิจของ Yelp_Businesses ทั้งหมดที่เหมาะสำหรับเด็ก",
        "evidence_th": "เหมาะสำหรับเด็ก หมายถึง คุณลักษณะ_ชื่อ = 'ดีสำหรับเด็ก' และ คุณลักษณะ_ค่า = 'จริง'\n",
        "SQL": "SELECT T2.business_id FROM Attributes AS T1 INNER JOIN Business_Attributes AS T2 ON T1.attribute_id = T2.attribute_id WHERE T1.attribute_name LIKE 'Good for Kids' AND T2.attribute_value LIKE 'TRUE'",
        "table": "['Attributes', 'Business_Attributes']"
    },
    {
        "question_id": 3857,
        "db_id": "public_review_platform",
        "question": "Among the Yelp_Businesses which are still running, how many of them fall under the category of \"Food\"?",
        "evidence": "are still running refers to active = 'true'; the category of \"Food\" refers to category_name = 'Food'",
        "question_th": "ในบรรดา Yelp_Businesses ที่ยังคงดำเนินอยู่ มีกี่แห่งที่อยู่ในหมวดหมู่ \"อาหาร\"?",
        "evidence_th": "ยังคงทำงานอยู่หมายถึง active = 'true'; หมวด \"อาหาร\" หมายถึง category_name = 'อาหาร'",
        "SQL": "SELECT COUNT(T3.business_id) FROM Categories AS T1 INNER JOIN Business_Categories AS T2 ON T1.category_id = T2.category_id INNER JOIN Business AS T3 ON T2.business_id = T3.business_id INNER JOIN Tips AS T4 ON T3.business_id = T4.business_id WHERE T1.category_name LIKE 'Food' AND T3.active LIKE 'TRUE'",
        "table": "['Business', 'Business_Categories', 'Categories', 'Tips']"
    },
    {
        "question_id": 3872,
        "db_id": "public_review_platform",
        "question": "Please list the business IDs of the Yelp_Business that have a business time of longer than 12 hours on Sundays.",
        "evidence": "business time of longer than 12 hours refers to subtract(closing_time, opening_time) > 12; on Sundays refers to day_of_week = 'Sunday'",
        "question_th": "โปรดระบุรหัสธุรกิจของ Yelp_Business ที่มีเวลาธุรกิจนานกว่า 12 ชั่วโมงในวันอาทิตย์",
        "evidence_th": "เวลาทำการที่นานกว่า 12 ชั่วโมงหมายถึงการลบ (เวลาปิด, เวลาเปิดทำการ) > 12; ในวันอาทิตย์หมายถึง day_of_week = 'วันอาทิตย์'",
        "SQL": "SELECT T1.business_id FROM Business_Hours AS T1 INNER JOIN Days AS T2 ON T1.day_id = T2.day_id INNER JOIN Business AS T3 ON T1.business_id = T3.business_id WHERE T1.closing_time + 12 - T1.opening_time > 12 AND T2.day_of_week LIKE 'Sunday' GROUP BY T1.business_id",
        "table": "['Business', 'Business_Hours', 'Days']"
    },
    {
        "question_id": 3885,
        "db_id": "public_review_platform",
        "question": "Among the businesses in Chandler, list the attribute of the business with a low review count.",
        "evidence": "in Chandler refers to city = 'Chandler'; attribute refers to attribute_name",
        "question_th": "ในบรรดาธุรกิจต่างๆ ในแชนด์เลอร์ ให้ระบุคุณลักษณะของธุรกิจที่มีการวิจารณ์น้อย",
        "evidence_th": "ในแชนด์เลอร์หมายถึงเมือง = 'แชนด์เลอร์'; คุณลักษณะอ้างถึงattribute_name",
        "SQL": "SELECT DISTINCT T3.attribute_id, T3.attribute_name FROM Business AS T1 INNER JOIN Business_Attributes AS T2 ON T1.business_id = T2.attribute_id INNER JOIN Attributes AS T3 ON T2.attribute_id = T3.attribute_id WHERE T1.review_count = 'Low' AND T1.city = 'Chandler'",
        "table": "['Attributes', 'Business', 'Business_Attributes']"
    },
    {
        "question_id": 3935,
        "db_id": "public_review_platform",
        "question": "List the closing time and day of week of active businesses in Scottsdale with stars greater than the 60% of average age of star rating.",
        "evidence": "active business refers to active = 'true';  'Scottsdale' is the name of city; stars greater than the 60% of average age of star rating refers to stars  > avg(stars) * 60%",
        "question_th": "ระบุเวลาปิดและวันในสัปดาห์ของธุรกิจที่ใช้งานอยู่ในสก็อตส์เดลซึ่งมีดาวมากกว่า 60% ของอายุเฉลี่ยของการจัดอันดับดาว",
        "evidence_th": "ธุรกิจที่ใช้งานหมายถึงการใช้งาน = 'จริง';  'Scottsdale' เป็นชื่อเมือง ดาวที่มากกว่า 60% ของอายุเฉลี่ยของการจัดอันดับดาวหมายถึงดาว  > เฉลี่ย(ดาว) * 60%",
        "SQL": "SELECT T2.closing_time, T3.day_of_week FROM Business AS T1 INNER JOIN Business_Hours AS T2 ON T1.business_id = T2.business_id INNER JOIN Days AS T3 ON T2.day_id = T3.day_id WHERE T1.city LIKE 'Scottsdale' AND T1.active LIKE 'TRUE' AND T1.stars > 0.6 * ( SELECT AVG(T1.stars) FROM Business AS T1 INNER JOIN Business_Hours AS T2 ON T1.business_id = T2.business_id INNER JOIN Days AS T3 ON T2.day_id = T3.day_id WHERE T1.city LIKE 'Scottsdale' AND T1.active LIKE 'TRUE' )",
        "table": "['Business', 'Business_Hours', 'Days']"
    },
    {
        "question_id": 3943,
        "db_id": "public_review_platform",
        "question": "List the categories of all active businesses that were not in Arizona.",
        "evidence": "active business refers to active = 'true'; not in Arizona refers to state ! = 'AZ'; category refers to category_name",
        "question_th": "ระบุหมวดหมู่ของธุรกิจที่ทำงานอยู่ทั้งหมดซึ่งไม่ได้อยู่ในแอริโซนา",
        "evidence_th": "ธุรกิจที่ใช้งานหมายถึงการใช้งาน = 'จริง'; ไม่ได้อยู่ในแอริโซนาหมายถึงรัฐ ! = 'อาซ'; หมวดหมู่หมายถึง category_name",
        "SQL": "SELECT T3.category_name FROM Business AS T1 INNER JOIN Business_Categories ON T1.business_id = Business_Categories.business_id INNER JOIN Categories AS T3 ON Business_Categories.category_id = T3.category_id WHERE T1.active LIKE 'TRUE' AND T1.state NOT LIKE 'AZ'",
        "table": "['Business', 'Business_Categories', 'Categories']"
    },
    {
        "question_id": 3945,
        "db_id": "public_review_platform",
        "question": "How many businesses have a romantic ambiance?",
        "evidence": "romantic ambiance refers to attribute_name = 'ambience_romantic' AND attribute_value = 'true'",
        "question_th": "มีธุรกิจกี่แห่งที่มีบรรยากาศโรแมนติก?",
        "evidence_th": "บรรยากาศโรแมนติก หมายถึง คุณลักษณะ_ชื่อ = 'บรรยากาศโรแมนติก' และ คุณลักษณะ_ค่า = 'จริง'",
        "SQL": "SELECT COUNT(T2.business_id) FROM Attributes AS T1 INNER JOIN Business_Attributes AS T2 ON T1.attribute_id = T2.attribute_id WHERE T2.attribute_value = 'true' AND T1.attribute_name = 'ambience_romantic'",
        "table": "['Attributes', 'Business_Attributes']"
    },
    {
        "question_id": 3948,
        "db_id": "public_review_platform",
        "question": "What city does the business came from where they received a high volume of check-ins from 12 am to 1 am on Saturday.",
        "evidence": "12 am refers to opening_time = '12AM'; 1 am refers to closing_time = '1AM'; on Saturday refers to day_of_week = 'Saturday'",
        "question_th": "ธุรกิจมาจากเมืองใดซึ่งมีการเช็คอินจำนวนมากตั้งแต่ 00.00 น. ถึง 01.00 น. ในวันเสาร์",
        "evidence_th": "00.00 น. หมายถึง opening_time = '00.00 น.'; 01.00 น. หมายถึง Closing_time = '01.00'; ในวันเสาร์ หมายถึง day_of_week = 'วันเสาร์'",
        "SQL": "SELECT T1.city FROM Business AS T1 INNER JOIN Business_Hours AS T2 ON T1.business_id = T2.business_id INNER JOIN Days AS T3 ON T2.day_id = T3.day_id WHERE T2.closing_time = '1AM' AND T2.opening_time = '12AM' AND T3.day_of_week = 'Saturday'",
        "table": "['Business', 'Business_Hours', 'Days']"
    },
    {
        "question_id": 3958,
        "db_id": "public_review_platform",
        "question": "For the Yelp business in \"Tempe\" city which got \"3.5\" stars and review count as \"Uber\", how many \"long\" reviews did it get?",
        "evidence": "\"Tempe\" is the name of city; long review refers to review_length = 'Long'",
        "question_th": "สำหรับธุรกิจ Yelp ในเมือง \"เทมพี\" ที่ได้ \"3.5\" ดาว และรีวิวนับเป็น \"อูเบอร์\" ได้รีวิว \"ยาว\" กี่ครั้ง?",
        "evidence_th": "\"เทมพี\" เป็นชื่อเมือง; รีวิวยาวหมายถึง review_length = 'ยาว'",
        "SQL": "SELECT COUNT(T2.review_length) FROM Business AS T1 INNER JOIN Reviews AS T2 ON T1.business_id = T2.business_id WHERE T1.city = 'Tempe' AND T1.stars = '3.5' AND T1.review_count = 'Uber' AND T2.review_length = 'Long'",
        "table": "['Business', 'Reviews']"
    },
    {
        "question_id": 3963,
        "db_id": "public_review_platform",
        "question": "Which city is the business that got a \"medium\" length tip with \"3\" likes located in?",
        "evidence": "medium length tip refers to tip_length = 'Medium';",
        "question_th": "ธุรกิจที่ได้รับยอดไลค์ \"ปานกลาง\" และยอดไลค์ \"3\" อยู่ที่เมืองใด?",
        "evidence_th": "ปลายความยาวปานกลางหมายถึง tip_length = 'ปานกลาง';",
        "SQL": "SELECT T1.city FROM Business AS T1 INNER JOIN Tips AS T2 ON T1.business_id = T2.business_id WHERE T2.tip_length = 'Medium' AND T2.likes = 3",
        "table": "['Business', 'Tips']"
    },
    {
        "question_id": 3964,
        "db_id": "public_review_platform",
        "question": "For the user who joined Yelp in \"2010\", with an average of \"4.5\" stars review and has got uber number of fans, how many \"funny\" compliments has he/she received from other users?",
        "evidence": "in \"2010\" refers to user_yelping_since_year = '2010'; average of \"4.5\" stars review refers to user_average_stars = '4.5'; uber number of fans refers to user_average_stars = '4.5'; \"funny\" compliments refers to compliment_type = 'funny'",
        "question_th": "สำหรับผู้ใช้ที่เข้าร่วม Yelp ในปี 2010 โดยมีคะแนนรีวิวเฉลี่ย 4.5 ดาวและมีแฟนๆ จำนวนมาก เขา/เธอได้รับคำชมที่ \"ตลก\" จากผู้ใช้รายอื่นมากเพียงใด",
        "evidence_th": "ใน \"2010\" หมายถึง user_yelping_since_year = '2010'; ค่าเฉลี่ยของการรีวิวดาว \"4.5\" หมายถึง user_average_stars = '4.5'; จำนวนแฟน ๆ อ้างอิงถึง user_average_stars = '4.5'; คำชมเชย \"ตลก\" หมายถึง compliment_type = 'ตลก'",
        "SQL": "SELECT COUNT(T2.user_id) FROM Users AS T1 INNER JOIN Users_Compliments AS T2 ON T1.user_id = T2.user_id INNER JOIN Compliments AS T3 ON T2.compliment_id = T3.compliment_id WHERE T1.user_yelping_since_year = 2010 AND T1.user_average_stars = 4.5 AND T1.user_fans = 'Uber' AND T3.compliment_type = 'funny'",
        "table": "['Compliments', 'Users', 'Users_Compliments']"
    },
    {
        "question_id": 3966,
        "db_id": "public_review_platform",
        "question": "Does Yelp business No.\"11825\" have a \"parking lot\"?",
        "evidence": "business No.\"11825\" refers to business_id = '12476'; have a \"parking lot\" refers to attribute_value = 'parking_lot'",
        "question_th": "Yelp ธุรกิจหมายเลข 11825 มี \"ที่จอดรถ\" หรือไม่?",
        "evidence_th": "ธุรกิจหมายเลข \"11825\" หมายถึง business_id = '12476'; มี \"ลานจอดรถ\" หมายถึงattribute_value = 'parking_lot'",
        "SQL": "SELECT T1.attribute_value FROM Business_Attributes AS T1 INNER JOIN Attributes AS T2 ON T1.attribute_id = T2.attribute_id WHERE T1.business_id = 11825 AND T2.attribute_name = 'parking_lot'",
        "table": "['Attributes', 'Business_Attributes']"
    },
    {
        "question_id": 3971,
        "db_id": "public_review_platform",
        "question": "Calculate the percentage of running business among all business.",
        "evidence": "running business refers to active = 'true'; percentage refers to DIVIDE(COUNT(active = 'true'), COUNT(business_id)) * 100%",
        "question_th": "คำนวณเปอร์เซ็นต์การดำเนินธุรกิจในทุกธุรกิจ",
        "evidence_th": "การดำเนินธุรกิจหมายถึงการใช้งาน = 'จริง'; เปอร์เซ็นต์หมายถึง DIVIDE(COUNT(active = 'true'), COUNT(business_id)) * 100%",
        "SQL": "SELECT CAST(SUM(CASE WHEN active = 'true' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(business_id) FROM Business",
        "table": "['Business']"
    },
    {
        "question_id": 3984,
        "db_id": "public_review_platform",
        "question": "For the business with great experience existed in Sun Lakes city, provide the user ID who gave review on it and user followers.",
        "evidence": "with great experience refers to stars = 5",
        "question_th": "สำหรับธุรกิจที่มีประสบการณ์ที่ยอดเยี่ยมในเมือง Sun Lakes ให้ระบุ ID ผู้ใช้ที่ให้คำวิจารณ์และผู้ติดตามผู้ใช้",
        "evidence_th": "มีประสบการณ์มากหมายถึงดาว = 5",
        "SQL": "SELECT T3.user_id, T3.user_fans FROM Business AS T1 INNER JOIN Reviews AS T2 ON T1.business_id = T2.business_id INNER JOIN Users AS T3 ON T2.user_id = T3.user_id WHERE T1.city = 'Sun Lakes' AND T1.stars = 5",
        "table": "['Business', 'Reviews', 'Users']"
    },
    {
        "question_id": 4004,
        "db_id": "public_review_platform",
        "question": "How many businesses are registered in the database under 'Banks & Credit Unions' category?",
        "evidence": "category refers to category_name",
        "question_th": "มีธุรกิจกี่รายที่จดทะเบียนในฐานข้อมูลหมวด 'ธนาคารและสหพันธ์เครดิตยูเนี่ยน'",
        "evidence_th": "หมวดหมู่หมายถึง category_name",
        "SQL": "SELECT COUNT(T2.business_id) FROM Categories AS T1 INNER JOIN Business_Categories AS T2 ON T1.category_id = T2.category_id WHERE T1.category_name = 'Banks & Credit Unions'",
        "table": "['Business_Categories', 'Categories']"
    },
    {
        "question_id": 4005,
        "db_id": "public_review_platform",
        "question": "How many active businesses from Casa Grande are registered in the database?",
        "evidence": "active business refers to active = 'true'; Casa Grande refers to city = 'Casa Grande'",
        "question_th": "มีธุรกิจที่ใช้งานอยู่จาก Casa Grande จำนวนเท่าใดที่ลงทะเบียนในฐานข้อมูล",
        "evidence_th": "ธุรกิจที่ใช้งานหมายถึงการใช้งาน = 'จริง'; Casa Grande หมายถึงเมือง = 'Casa Grande'",
        "SQL": "SELECT COUNT(business_id) FROM Business WHERE active = 'true' AND city = 'Casa Grande'",
        "table": "['Business']"
    },
    {
        "question_id": 4008,
        "db_id": "public_review_platform",
        "question": "Identify the most popular and appealing active business in Gilbert based on users' reviews.",
        "evidence": "most popular and appealing refers to review_count = 'High' and max(stars); active business refers to active = 'true'; in Gilbert refers to city = 'Gilbert'",
        "question_th": "ระบุธุรกิจที่ได้รับความนิยมและน่าดึงดูดที่สุดใน Gilbert ตามบทวิจารณ์ของผู้ใช้",
        "evidence_th": "ได้รับความนิยมและน่าดึงดูดที่สุด หมายถึง review_count = 'สูง' และสูงสุด (ดาว); ธุรกิจที่ใช้งานหมายถึงการใช้งาน = 'จริง'; ในกิลเบิร์ตหมายถึงเมือง = 'กิลเบิร์ต'",
        "SQL": "SELECT business_id FROM Business WHERE city = 'Gilbert' AND active = 'true' AND review_count = 'High' ORDER BY stars DESC LIMIT 1",
        "table": "['Business']"
    },
    {
        "question_id": 4012,
        "db_id": "public_review_platform",
        "question": "Identify the percent of long reviews among all 5-star reviews given to businesses by the Yelp users.",
        "evidence": "percentage = divide(count(business_id where review_length = 'Long' and review_stars = 5), count(business_id)) * 100%; long reviews refers to review_length = 'Long'; 5-star review refers to review_stars = 5",
        "question_th": "ระบุเปอร์เซ็นต์ของบทวิจารณ์แบบยาวจากบทวิจารณ์ระดับ 5 ดาวทั้งหมดที่ผู้ใช้ Yelp มอบให้กับธุรกิจ",
        "evidence_th": "เปอร์เซ็นต์ = หาร (จำนวน (business_id โดยที่ review_length = 'Long' และ review_stars = 5), จำนวน (business_id)) * 100%; บทวิจารณ์แบบยาวหมายถึง review_length = 'Long'; บทวิจารณ์ระดับ 5 ดาวหมายถึง review_stars = 5",
        "SQL": "SELECT CAST(SUM(CASE WHEN review_length = 'Long' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(review_length) FROM Reviews WHERE review_stars = 5",
        "table": "['Reviews']"
    },
    {
        "question_id": 4013,
        "db_id": "public_review_platform",
        "question": "Among all the users with the average ratings of at least 4 and above of all reviews, calculate the percent that have no fans or followers.",
        "evidence": "average ratings of at least 4 refers to user_average_stars > = 4; no fans or followers refers to user_fans = 'None'; percentage = divide(count(user_id where user_average_stars > = 4 and user_fans = 'None'), sum(user_id where user_average_stars > = 4))*100%",
        "question_th": "ในบรรดาผู้ใช้ทั้งหมดที่มีคะแนนเฉลี่ยอย่างน้อย 4 และสูงกว่าบทวิจารณ์ทั้งหมด ให้คำนวณเปอร์เซ็นต์ที่ไม่มีแฟนๆ หรือผู้ติดตาม",
        "evidence_th": "การให้คะแนนเฉลี่ยอย่างน้อย 4 หมายถึง user_average_stars > = 4; ไม่มีแฟนหรือผู้ติดตามอ้างถึง user_fans = 'ไม่มี'; เปอร์เซ็นต์ = หาร (นับ (user_id โดยที่ user_average_stars > = 4 และ user_fans = 'ไม่มี'), ผลรวม (user_id โดยที่ user_average_stars > = 4))*100%",
        "SQL": "SELECT CAST(SUM(CASE WHEN user_fans = 'None' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(user_id) FROM Users WHERE user_average_stars >= 4",
        "table": "['Users']"
    },
    {
        "question_id": 4014,
        "db_id": "public_review_platform",
        "question": "How many short tips were left for the business with ID no.2?",
        "evidence": "short tip refers to tip_length = 'Short'; business category refers to category_name",
        "question_th": "มีเคล็ดลับสั้น ๆ เหลืออยู่กี่ข้อสำหรับธุรกิจที่มีรหัสหมายเลข 2",
        "evidence_th": "เคล็ดลับสั้นหมายถึง tip_length = 'สั้น'; หมวดหมู่ธุรกิจหมายถึง category_name",
        "SQL": "SELECT COUNT(business_id) FROM Tips WHERE business_id = 2 AND tip_length = 'Short'",
        "table": "['Tips']"
    },
    {
        "question_id": 4034,
        "db_id": "public_review_platform",
        "question": "Among the users who received high compliments from other users, which users joined Yelp earliest?",
        "evidence": "high compliments refers to number_of_compliments = ' High'; joined Yelp earliest refers to min(user_yelping_since_year)",
        "question_th": "ในบรรดาผู้ใช้ที่ได้รับคำชมอย่างสูงจากผู้ใช้รายอื่น ผู้ใช้คนใดเข้าร่วม Yelp เร็วที่สุด",
        "evidence_th": "คำชมเชยสูงหมายถึง number_of_compliments = 'สูง'; เข้าร่วม Yelp เร็วที่สุดหมายถึง min(user_yelping_since_year)",
        "SQL": "SELECT T2.user_id FROM Users AS T1 INNER JOIN Users_Compliments AS T2 ON T1.user_id = T2.user_id WHERE T2.number_of_compliments = 'High' AND T1.user_yelping_since_year = ( SELECT MIN(user_yelping_since_year) FROM Users )",
        "table": "['Users', 'Users_Compliments']"
    },
    {
        "question_id": 4045,
        "db_id": "public_review_platform",
        "question": "How many businesses in Arizona having an average review less than 3 stars?",
        "evidence": "businesses in Arizona refer to business_id where state = 'Arizona'; average review less than 3 stars refers to AVG(review_stars) < 3.0;",
        "question_th": "มีธุรกิจกี่แห่งในรัฐแอริโซนาที่ได้รับรีวิวโดยเฉลี่ยน้อยกว่า 3 ดาว",
        "evidence_th": "ธุรกิจในรัฐแอริโซนาอ้างถึง business_id โดยที่ state = 'Arizona'; บทวิจารณ์โดยเฉลี่ยน้อยกว่า 3 ดาวหมายถึง AVG (review_stars) < 3.0;",
        "SQL": "SELECT COUNT(business_id) FROM Business WHERE business_id IN ( SELECT DISTINCT T1.business_id FROM Business AS T1 INNER JOIN Reviews AS T2 ON T1.business_id = T2.business_id WHERE T1.state = 'AZ' GROUP BY T1.business_id HAVING SUM(T2.review_stars) / COUNT(T2.user_id) < 3 )",
        "table": "['Business', 'Reviews']"
    },
    {
        "question_id": 4066,
        "db_id": "public_review_platform",
        "question": "How many category id have low review count and rating more than 2?",
        "evidence": "rating more than 2 refers to stars > 2;",
        "question_th": "มีรหัสหมวดหมู่กี่รายการที่มีการนับรีวิวและการให้คะแนนต่ำมากกว่า 2",
        "evidence_th": "คะแนนมากกว่า 2 หมายถึงดาว > 2;",
        "SQL": "SELECT COUNT(DISTINCT T1.category_id) FROM Categories AS T1 INNER JOIN Business_Categories AS T2 ON T1.category_id = T2.category_id INNER JOIN Business AS T3 ON T2.business_id = T3.business_id WHERE T3.review_count = 'Low' AND T3.stars > 2",
        "table": "['Business', 'Business_Categories', 'Categories']"
    },
    {
        "question_id": 4073,
        "db_id": "public_review_platform",
        "question": "Calculate the yearly average user who started using Yelp from the year of 2005 to 2014.",
        "evidence": "avg(user_id) where user_yelping_since_year BETWEEN '2005' AND '2014';",
        "question_th": "คำนวณผู้ใช้เฉลี่ยรายปีที่เริ่มใช้ Yelp ตั้งแต่ปี 2548 ถึง 2557",
        "evidence_th": "เฉลี่ย (user_id) โดยที่ user_yelping_since_year ระหว่าง '2005' และ '2014';",
        "SQL": "SELECT AVG(user_id) FROM Users WHERE user_yelping_since_year >= 2005 AND user_yelping_since_year <= 2015",
        "table": "['Users']"
    },
    {
        "question_id": 4076,
        "db_id": "public_review_platform",
        "question": "Write down the any five of ID and name of category that starts with alphabet \"P\".",
        "evidence": "category that starts with alphabet \"P\" refers to category_name like 'P%';",
        "question_th": "จดรหัสห้ารายการและชื่อหมวดหมู่ที่ขึ้นต้นด้วยตัวอักษร \"P\"",
        "evidence_th": "หมวดหมู่ที่ขึ้นต้นด้วยตัวอักษร \"P\" หมายถึง category_name เช่น 'P%';",
        "SQL": "SELECT category_id, category_name FROM Categories WHERE category_name LIKE 'P%' LIMIT 5",
        "table": "['Categories']"
    },
    {
        "question_id": 4083,
        "db_id": "public_review_platform",
        "question": "Among the elite users of 10 consecutive year from 2005 to 2014, list down the user ID and their number of compliment on photos.",
        "evidence": "from 2005 to 2014 refers to year_id BETWEEN 2005 AND 2014; compliment_type = 'photos';",
        "question_th": "ในบรรดาผู้ใช้ชั้นยอดเป็นเวลา 10 ปีติดต่อกันตั้งแต่ปี 2548 ถึง 2557 ให้ระบุ ID ผู้ใช้และจำนวนคำชมเชยในภาพถ่าย",
        "evidence_th": "ตั้งแต่ปี 2548 ถึง 2557 หมายถึง year_id ระหว่างปี 2548 ถึง 2557 คำชมเชย_type = 'ภาพถ่าย';",
        "SQL": "SELECT T2.user_id, T2.number_of_compliments FROM Compliments AS T1 INNER JOIN Users_Compliments AS T2 ON T1.compliment_id = T2.compliment_id INNER JOIN Elite AS T3 ON T2.user_id = T3.user_id WHERE T3.year_id BETWEEN 2005 AND 2014 AND T1.compliment_type = 'photos'",
        "table": "['Compliments', 'Elite', 'Users_Compliments']"
    },
    {
        "question_id": 4095,
        "db_id": "public_review_platform",
        "question": "List down the category of businesses whose stars ratings are 5.",
        "evidence": "category of businesses refers to category_name; stars ratings are 5 refers to stars = 5",
        "question_th": "ลงรายการหมวดหมู่ธุรกิจที่มีการให้คะแนนดาวอยู่ที่ 5",
        "evidence_th": "หมวดหมู่ของธุรกิจหมายถึง category_name; การให้คะแนนดาวคือ 5 หมายถึงดาว = 5",
        "SQL": "SELECT DISTINCT T3.category_name FROM Business AS T1 INNER JOIN Business_Categories AS T2 ON T1.business_id = T2.business_id INNER JOIN Categories AS T3 ON T2.category_id = T3.category_id WHERE T1.stars = 5",
        "table": "['Business', 'Business_Categories', 'Categories']"
    },
    {
        "question_id": 4103,
        "db_id": "public_review_platform",
        "question": "List by ID the businesses with the reviews with the lowest veracity of Paradise Valley.",
        "evidence": "ID of businesses refers to business_id; reviews with the lowest veracity refers to review_count = 'Low' AND stars > 3; Paradise Valley is a city",
        "question_th": "รายชื่อตาม ID ธุรกิจที่มีบทวิจารณ์ซึ่งมีความจริงน้อยที่สุดของ Paradise Valley",
        "evidence_th": "ID ของธุรกิจหมายถึง business_id; บทวิจารณ์ที่มีความจริงน้อยที่สุดหมายถึง review_count = 'ต่ำ' และดาว > 3; พาราไดซ์วัลเลย์เป็นเมือง",
        "SQL": "SELECT business_id FROM Business WHERE stars > 3 AND city = 'Paradise Valley' AND review_count = 'Low'",
        "table": "['Business']"
    },
    {
        "question_id": 4107,
        "db_id": "public_review_platform",
        "question": "How many of the users who use a high number of compliments do not have any fans?",
        "evidence": "do not have fans refers to user_fans = 'None'; high number of compliment refers to number_of_compliments = 'High'",
        "question_th": "ผู้ใช้ที่ใช้คำชมจำนวนมากไม่มีแฟนเลยสักกี่คน?",
        "evidence_th": "ไม่มีแฟนหมายถึง user_fans = 'ไม่มี'; จำนวนคำชมที่สูงหมายถึง number_of_compliments = 'สูง'",
        "SQL": "SELECT COUNT(T2.user_id) FROM Users_Compliments AS T1 INNER JOIN Users AS T2 ON T1.user_id = T2.user_id WHERE T1.number_of_compliments = 'High' AND T2.user_fans = 'None'",
        "table": "['Users', 'Users_Compliments']"
    },
    {
        "question_id": 4114,
        "db_id": "public_review_platform",
        "question": "How many users who have received a low cool vote have also received at least 1 low cool vote for some of their reviews?",
        "evidence": "low cool vote for user refers to user_votes_cool = 'Low';  low cool vote for review refers to review_votes_cool = 'Low'",
        "question_th": "มีผู้ใช้จำนวนเท่าใดที่ได้รับการโหวตเด็ดต่ำและได้รับคะแนนเด็ดต่ำอย่างน้อย 1 คะแนนสำหรับบทวิจารณ์บางส่วนของพวกเขา",
        "evidence_th": "คะแนนโหวตต่ำสำหรับผู้ใช้หมายถึง user_votes_cool = 'ต่ำ';  คะแนนโหวตต่ำสำหรับการรีวิวหมายถึง review_votes_cool = 'ต่ำ'",
        "SQL": "SELECT COUNT(DISTINCT T1.user_id) FROM Users AS T1 INNER JOIN Reviews AS T2 ON T1.user_id = T2.user_id WHERE T1.user_votes_cool = 'Low' AND T2.review_votes_cool = 'Low'",
        "table": "['Reviews', 'Users']"
    },
    {
        "question_id": 4121,
        "db_id": "public_review_platform",
        "question": "List down the business ID with a high review count in Tempe.",
        "evidence": "Tempe is a city; high review count refers to review_count = 'High'",
        "question_th": "ลงรายการรหัสธุรกิจที่มีจำนวนบทวิจารณ์สูงใน Tempe",
        "evidence_th": "เทมพีเป็นเมือง จำนวนบทวิจารณ์ที่สูงหมายถึง review_count = 'สูง'",
        "SQL": "SELECT business_id FROM Business WHERE review_count = 'High' AND city = 'Tempe'",
        "table": "['Business']"
    },
    {
        "question_id": 4145,
        "db_id": "citeseer",
        "question": "Calculate the percentage of words used in Agents class label.",
        "evidence": "percentage = (divide(count(word_cited_id where class_label = 'Agents')), (count(word_cited_id)))*100;",
        "question_th": "คำนวณเปอร์เซ็นต์ของคำที่ใช้ในป้ายกำกับคลาสตัวแทน",
        "evidence_th": "เปอร์เซ็นต์ = (หาร (นับ (word_cited_id โดยที่ class_label = 'ตัวแทน')), (นับ (word_cited_id))) * 100;",
        "SQL": "SELECT CAST(COUNT(DISTINCT CASE WHEN T1.class_label = 'Agents' THEN T2.word_cited_id ELSE NULL END) AS REAL) * 100 / COUNT(DISTINCT T2.word_cited_id) FROM paper AS T1 INNER JOIN content AS T2 ON T1.paper_id = T2.paper_id",
        "table": "['content', 'paper']"
    },
    {
        "question_id": 4151,
        "db_id": "citeseer",
        "question": "List the words that are cited in both AI and IR class label.",
        "evidence": "",
        "question_th": "ระบุคำที่อ้างถึงในป้ายกำกับคลาส AI และ IR",
        "evidence_th": "",
        "SQL": "SELECT DISTINCT T2.word_cited_id FROM paper AS T1 INNER JOIN content AS T2 ON T1.paper_id = T2.paper_id WHERE T1.class_label = 'AI' OR T1.class_label = 'IR'",
        "table": "['content', 'paper']"
    },
    {
        "question_id": 4168,
        "db_id": "simpson_episodes",
        "question": "What's the rating of the episode in which Dan Castellaneta won the Outstanding Voice-Over Performance award in 2009?",
        "evidence": "\"Dan Castellaneta\" is the person;  2009 is year;  won refers result = 'Winner'",
        "question_th": "เรตติ้งของตอนที่ Dan Castellaneta ได้รับรางวัลการแสดงเสียงพากย์ดีเด่นในปี 2009 คือเท่าใด",
        "evidence_th": "\"แดน กัสเตลลาเนตา\" คือบุคคลนั้น  2552 เป็นปี;  ชนะหมายถึงผลลัพธ์ = 'ผู้ชนะ'",
        "SQL": "SELECT T2.rating FROM Award AS T1 INNER JOIN Episode AS T2 ON T1.episode_id = T2.episode_id WHERE T1.award = 'Outstanding Voice-Over Performance' AND SUBSTR(T1.year, 1, 4) = '2009' AND T1.person = 'Dan Castellaneta';",
        "table": "['Award', 'Episode']"
    },
    {
        "question_id": 4183,
        "db_id": "simpson_episodes",
        "question": "How many episodes have more than 1000 votes?",
        "evidence": "more than 1000 votes refers to votes > 1000",
        "question_th": "มีกี่ตอนที่มียอดโหวตเกิน 1,000 โหวต?",
        "evidence_th": "มากกว่า 1,000 โหวต หมายถึง โหวต > 1,000",
        "SQL": "SELECT COUNT(episode_id) FROM Episode WHERE votes > 1000;",
        "table": "['Episode']"
    },
    {
        "question_id": 4201,
        "db_id": "simpson_episodes",
        "question": "How many times was Ian Maxtone-Graham nominated for an award in Writers Guild of America, USA?",
        "evidence": "\"Ian Maxtone-Graham\" is the person; nominated refers to result = 'Nominee'; 'Writers Guild of America, USA' is the organization",
        "question_th": "Ian Maxtone-Graham ได้รับการเสนอชื่อเข้าชิงรางวัลใน Writers Guild of America, USA กี่ครั้ง",
        "evidence_th": "\"เอียน แม็กซ์โทน-เกรแฮม\" คือบุคคลนั้น ได้รับการเสนอชื่อหมายถึงผลลัพธ์ = 'ผู้ได้รับการเสนอชื่อ'; 'สมาคมนักเขียนแห่งอเมริกา สหรัฐอเมริกา' เป็นองค์กร",
        "SQL": "SELECT COUNT(award_id) FROM Award WHERE person = 'Ian Maxtone-Graham' AND organization = 'Writers Guild of America, USA' AND result = 'Nominee';",
        "table": "['Award']"
    },
    {
        "question_id": 4207,
        "db_id": "simpson_episodes",
        "question": "What character did Dan Castellaneta play that won him an award for Outstanding Voice-Over Performance in 2009 in the Primetime Emmy Awards?",
        "evidence": "\"Dan Castellaneta\" is the person; won refers to result = 'Winner'; 'Outstanding Voice-Over Performance' is the award; 'Primetime Emmy Awards' is the organization; in 2009 refers to year = 2009",
        "question_th": "Dan Castellaneta เล่นเป็นตัวละครตัวใดที่ทำให้เขาได้รับรางวัลสาขาการพากย์เสียงดีเด่นในปี 2009 จาก Primetime Emmy Awards",
        "evidence_th": "\"แดน กัสเตลลาเนตา\" คือบุคคลนั้น ชนะหมายถึงผลลัพธ์ = 'ผู้ชนะ'; 'ผลงานการพากย์เสียงดีเด่น' คือรางวัล; 'Primetime Emmy Awards' เป็นองค์กร; ในปี 2552 หมายถึง ปี = 2552",
        "SQL": "SELECT DISTINCT T2.character FROM Award AS T1 INNER JOIN Character_Award AS T2 ON T1.award_id = T2.award_id WHERE T1.person = 'Dan Castellaneta' AND T1.award = 'Outstanding Voice-Over Performance' AND T1.organization = 'Primetime Emmy Awards' AND T1.year = 2009;",
        "table": "['Award', 'Character_Award']"
    },
    {
        "question_id": 4220,
        "db_id": "simpson_episodes",
        "question": "List down the award name, result, credit category and credited status of the \"Billy Kimball\".",
        "evidence": "\"Billy Kimball\" is the person; award name refers to award; credited category refers to category; credited status refers to credited; credited = 'true' means the person is included in the credit list and vice versa",
        "question_th": "ระบุชื่อรางวัล ผลการแข่งขัน ประเภทเครดิต และสถานะเครดิตของ \"บิลลี่ คิมบอลล์\"",
        "evidence_th": "“บิลลี่ คิมบอลล์” คือบุคคลนั้น ชื่อรางวัลหมายถึงรางวัล หมวดหมู่เครดิตหมายถึงหมวดหมู่; สถานะเครดิตหมายถึงเครดิต; credited = 'true' หมายความว่าบุคคลนั้นถูกรวมอยู่ในรายการเครดิตและในทางกลับกัน",
        "SQL": "SELECT DISTINCT T1.award, T1.result, T2.category, T2.credited FROM Award AS T1 INNER JOIN Credit AS T2 ON T2.episode_id = T1.episode_id WHERE T2.person = 'Billy Kimball';",
        "table": "['Award', 'Credit']"
    },
    {
        "question_id": 4229,
        "db_id": "simpson_episodes",
        "question": "Describe name, birth country, role in episode and age in 2022 of the oldest crew member..",
        "evidence": "age in 2022 refers to SUBTRACT(2022, substr(birthdate, 0, 5)); oldest refers to MIN(birthdate)",
        "question_th": "อธิบายชื่อ ประเทศเกิด บทบาทในตอน และอายุ ปี 2022 ของลูกเรือที่อายุมากที่สุด..",
        "evidence_th": "อายุในปี 2565 หมายถึง SUBTRACT(2022, substr(birthdate, 0, 5)); เก่าที่สุดหมายถึง MIN (วันเกิด)",
        "SQL": "SELECT T1.name, T1.birth_place, T2.role, 2022 - CAST(SUBSTR(T1.birthdate, 1, 4) AS int) AS age FROM Person AS T1 INNER JOIN Credit AS T2 ON T1.name = T2.person WHERE T1.birthdate IS NOT NULL ORDER BY T1.birthdate LIMIT 1;",
        "table": "['Credit', 'Person']"
    },
    {
        "question_id": 4236,
        "db_id": "simpson_episodes",
        "question": "Name the performer who won Emmy Award for Outstanding Voice-Over Performance by playing Homer simpson 20.",
        "evidence": "Outstanding Voice-Over Performance refers to award = 'Outstanding Voice-Over Performance'; who won refers to result = 'Winner'; Emmy refers to organization = 'Primetime Emmy Awards'; playing Homer simpson 20 refers to character = 'Homer simpson 20'",
        "question_th": "ตั้งชื่อนักแสดงที่ได้รับรางวัลเอ็มมี สาขาการแสดงพากย์เสียงดีเด่น โดยรับบทเป็น Homer simpson 20",
        "evidence_th": "ประสิทธิภาพการพากย์เสียงดีเด่น หมายถึงรางวัล = 'ประสิทธิภาพการพากย์เสียงดีเด่น'; ผู้ชนะหมายถึงผลลัพธ์ = 'ผู้ชนะ'; Emmy หมายถึงองค์กร = 'Primetime Emmy Awards'; การเล่น Homer simpson 20 หมายถึงตัวละคร = 'Homer simpson 20'",
        "SQL": "SELECT T1.person FROM Award AS T1 INNER JOIN Character_Award AS T2 ON T1.award_id = T2.award_id WHERE T2.character = 'Homer simpson 20' AND T1.organization = 'Primetime Emmy Awards' AND T1.award = 'Outstanding Voice-Over Performance' AND T1.result = 'Winner';",
        "table": "['Award', 'Character_Award']"
    },
    {
        "question_id": 4238,
        "db_id": "simpson_episodes",
        "question": "How many nominations have Billy Kimball received in 2010 for The simpson 20s: Season 20?",
        "evidence": "in 2010 refers to year = 2010; nominations refers to result = 'Nominee'",
        "question_th": "Billy Kimball ได้รับการเสนอชื่อเข้าชิงกี่ครั้งในปี 2010 สำหรับ The simpson 20s: Season 20",
        "evidence_th": "ในปี 2553 หมายถึง ปี = 2553; การเสนอชื่อหมายถึงผลลัพธ์ = 'ผู้ได้รับการเสนอชื่อ'",
        "SQL": "SELECT COUNT(award_id) FROM Award WHERE person = 'Billy Kimball' AND SUBSTR(year, 1, 4) = '2010' AND result = 'Nominee';",
        "table": "['Award']"
    },
    {
        "question_id": 4248,
        "db_id": "simpson_episodes",
        "question": "Which episode of The simpson 20s: Season 20 has received the most nominations? Indicate the title.",
        "evidence": "received the most nomination refers to MAX(COUNT(episode_id))",
        "question_th": "The simpson 20s: Season 20 ตอนไหนได้รับการเสนอชื่อเข้าชิงมากที่สุด? ระบุชื่อเรื่อง",
        "evidence_th": "ได้รับการเสนอชื่อมากที่สุดถึง MAX(COUNT(episode_id))",
        "SQL": "SELECT T2.title FROM Award AS T1 INNER JOIN Episode AS T2 ON T1.episode_id = T2.episode_id GROUP BY T1.episode_id ORDER BY COUNT(*) DESC LIMIT 1;",
        "table": "['Award', 'Episode']"
    },
    {
        "question_id": 4250,
        "db_id": "simpson_episodes",
        "question": "How many crews were born in the USA?",
        "evidence": "born in the USA refers to birth_country = 'USA'",
        "question_th": "มีลูกเรือกี่คนที่เกิดในสหรัฐอเมริกา?",
        "evidence_th": "เกิดในสหรัฐอเมริกาหมายถึงbirth_country = 'USA'",
        "SQL": "SELECT COUNT(name) FROM Person WHERE birth_country = 'USA';",
        "table": "['Person']"
    },
    {
        "question_id": 4276,
        "db_id": "simpson_episodes",
        "question": "What was the character that Dan Castellaneta did the voice over for and was awarded?",
        "evidence": "voice over for and was awarded refers to award like '%Voice-Over%';",
        "question_th": "ตัวละครใดที่ Dan Castellaneta พากย์เสียงและได้รับรางวัล?",
        "evidence_th": "พากย์เสียงและได้รับรางวัลหมายถึงรางวัลเช่น '%Voice-Over%';",
        "SQL": "SELECT DISTINCT T2.character FROM Award AS T1 INNER JOIN Character_Award AS T2 ON T1.award_id = T2.award_id WHERE T1.award LIKE '%Voice-Over%' AND T1.person = 'Dan Castellaneta';",
        "table": "['Award', 'Character_Award']"
    },
    {
        "question_id": 4287,
        "db_id": "simpson_episodes",
        "question": "Who is the oldest among all the casts and crews?",
        "evidence": "oldest refers to MIN(birthdate)",
        "question_th": "ใครอายุมากที่สุดในบรรดานักแสดงและทีมงานทั้งหมด?",
        "evidence_th": "เก่าที่สุดหมายถึง MIN (วันเกิด)",
        "SQL": "SELECT name FROM Person ORDER BY birthdate ASC LIMIT 1;",
        "table": "['Person']"
    },
    {
        "question_id": 4292,
        "db_id": "simpson_episodes",
        "question": "What is the summary of the episode in which Emily Blunt is featured in?",
        "evidence": "",
        "question_th": "บทสรุปของตอนที่ Emily Blunt นำเสนอคืออะไร?",
        "evidence_th": "",
        "SQL": "SELECT T1.summary FROM Episode AS T1 INNER JOIN Credit AS T2 ON T1.episode_id = T2.episode_id WHERE T2.person = 'Emily Blunt';",
        "table": "['Credit', 'Episode']"
    },
    {
        "question_id": 4302,
        "db_id": "simpson_episodes",
        "question": "What percentage of votes are from the nominated episodes?",
        "evidence": "nominated episodes refers to result = 'Nominee'; percentage of votes = DIVIDE(SUM(result = 'Nominee), SUM(Votes)) as percentage",
        "question_th": "กี่เปอร์เซ็นต์ของคะแนนเสียงจากตอนที่เสนอชื่อเข้าชิง?",
        "evidence_th": "ตอนที่ได้รับการเสนอชื่อหมายถึงผลลัพธ์ = 'ผู้ได้รับการเสนอชื่อ'; เปอร์เซ็นต์ของการโหวต = DIVIDE(SUM(result = 'Nominee), SUM(Votes)) เป็นเปอร์เซ็นต์",
        "SQL": "SELECT CAST(SUM(CASE WHEN T1.result = 'Nominee' THEN T2.votes ELSE 0 END) AS REAL) * 100 / SUM(T2.votes) FROM Award AS T1 INNER JOIN Episode AS T2 ON T1.episode_id = T2.episode_id;",
        "table": "['Award', 'Episode']"
    },
    {
        "question_id": 4306,
        "db_id": "simpson_episodes",
        "question": "Calculate the percentage of people who were born after 1970 and from California.",
        "evidence": "born after 1970 refers to birthdate > 1970; from California refers to birth_region = 'California'; percentage = divide(count(birthdate > 1970 and birth_region = 'California'), total(birthdate)) * 100%",
        "question_th": "คำนวณเปอร์เซ็นต์ของผู้ที่เกิดหลังปี 1970 และจากแคลิฟอร์เนีย",
        "evidence_th": "เกิดหลังปี 1970 หมายถึง วันเกิด > 1970; จากแคลิฟอร์เนียหมายถึงbirth_region = 'แคลิฟอร์เนีย'; เปอร์เซ็นต์ = หาร(นับ(วันเกิด > 1970 และbirth_region = 'แคลิฟอร์เนีย'), รวม(วันเกิด)) * 100%",
        "SQL": "SELECT CAST(SUM(CASE WHEN birth_region = 'California' AND SUBSTR(birthdate, 1, 4) > '1970' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(birthdate) FROM Person;",
        "table": "['Person']"
    },
    {
        "question_id": 4312,
        "db_id": "simpson_episodes",
        "question": "How many additional timers were born in USA?",
        "evidence": "additional timers refers to role = 'additional timer'; born in USA refers to birth_country = 'USA'",
        "question_th": "มีตัวจับเวลาเพิ่มเติมอีกกี่ตัวที่เกิดในสหรัฐอเมริกา",
        "evidence_th": "ตัวจับเวลาเพิ่มเติมหมายถึงบทบาท = 'ตัวจับเวลาเพิ่มเติม'; เกิดในสหรัฐอเมริกาหมายถึงbirth_country = 'USA'",
        "SQL": "SELECT COUNT(*) FROM Person AS T1 INNER JOIN Credit AS T2 ON T1.name = T2.person WHERE T2.role = 'additional timer' AND T1.birth_country = 'USA';",
        "table": "['Credit', 'Person']"
    },
    {
        "question_id": 4315,
        "db_id": "simpson_episodes",
        "question": "List down the rating of episodes that were produced by Jason Bikowski.",
        "evidence": "produced by Jason Bikowski refers to person = 'Jason Bikowski'",
        "question_th": "แสดงรายการเรตติ้งของตอนที่ผลิตโดย Jason Bikowski",
        "evidence_th": "ผลิตโดย Jason Bikowski หมายถึงบุคคล = 'Jason Bikowski'",
        "SQL": "SELECT T1.rating FROM Episode AS T1 INNER JOIN Credit AS T2 ON T1.episode_id = T2.episode_id WHERE T2.person = 'Jason Bikowski';",
        "table": "['Credit', 'Episode']"
    },
    {
        "question_id": 4344,
        "db_id": "simpson_episodes",
        "question": "What is the awarded category that the awarded character Lenny won?",
        "evidence": "\n\nawarded category refers to award_category",
        "question_th": "หมวดหมู่รางวัลที่ตัวละครที่ได้รับรางวัล Lenny ได้รับรางวัลคืออะไร?",
        "evidence_th": "\n\nหมวดหมู่ที่ได้รับรางวัลหมายถึงรางวัล_หมวดหมู่",
        "SQL": "SELECT DISTINCT T1.award_category FROM Award AS T1 INNER JOIN Character_Award AS T2 ON T1.award_id = T2.award_id WHERE T2.character = 'Lenny';",
        "table": "['Award', 'Character_Award']"
    },
    {
        "question_id": 4352,
        "db_id": "simpson_episodes",
        "question": "List down the names of person born in California, USA.",
        "evidence": "California refers to birth_region = 'California'; USA refers to birth_country = 'USA'",
        "question_th": "รายชื่อบุคคลที่เกิดในแคลิฟอร์เนีย สหรัฐอเมริกา",
        "evidence_th": "แคลิฟอร์เนียหมายถึงbirth_region = 'แคลิฟอร์เนีย'; สหรัฐอเมริกาหมายถึงเมืองเกิด = 'สหรัฐอเมริกา'",
        "SQL": "SELECT name FROM Person WHERE birth_region = 'California' AND birth_country = 'USA';",
        "table": "['Person']"
    },
    {
        "question_id": 4358,
        "db_id": "simpson_episodes",
        "question": "Among the episodes aired in 2008 with votes ranges from 920 to 950, list their percent.",
        "evidence": "aired in 2008 refers to air_date LIKE '2008%'; votes ranges from 920 to 950 refers to votes BETWEEN 920 AND 950",
        "question_th": "ในบรรดาตอนที่ออกอากาศในปี 2551 โดยมีคะแนนโหวตตั้งแต่ 920 ถึง 950 รายการ โดยระบุเปอร์เซ็นต์",
        "evidence_th": "ออกอากาศในปี 2551 หมายถึง air_date LIKE '2008%'; คะแนนโหวตตั้งแต่ 920 ถึง 950 หมายถึง คะแนนโหวตระหว่าง 920 ถึง 950",
        "SQL": "SELECT T2.percent FROM Episode AS T1 INNER JOIN Vote AS T2 ON T2.episode_id = T1.episode_id WHERE SUBSTR(T1.air_date, 1, 4) = '2008' AND T1.votes BETWEEN 950 AND 960;",
        "table": "['Episode', 'Vote']"
    },
    {
        "question_id": 4362,
        "db_id": "simpson_episodes",
        "question": "Among the people in Animation Department, who are credited for additional time in the episode titled by \"How the Test Was Won\"?",
        "evidence": "Animation Department refers to category = 'Animation Department'; credited refers to credited = 'true'; for additional timer refers to role = 'additional timer'",
        "question_th": "ในบรรดาคนในภาควิชาแอนิเมชัน ที่ได้รับเครดิตเพิ่มเวลาในตอนที่ชื่อ \"How the Test Was Won\"?",
        "evidence_th": "แผนกแอนิเมชัน หมายถึง หมวดหมู่ = 'แผนกแอนิเมชัน'; เครดิตหมายถึงเครดิต = 'จริง'; สำหรับตัวจับเวลาเพิ่มเติมหมายถึงบทบาท = 'ตัวจับเวลาเพิ่มเติม'",
        "SQL": "SELECT T2.person FROM Episode AS T1 INNER JOIN Credit AS T2 ON T1.episode_id = T2.episode_id WHERE T1.title = 'How the Test Was Won' AND T2.role = 'additional timer' AND T2.credited = 'true' AND T2.category = 'Animation Department';",
        "table": "['Credit', 'Episode']"
    },
    {
        "question_id": 4386,
        "db_id": "student_loan",
        "question": "Name all students enlisted in the foreign legion.",
        "evidence": "in the foreign legion organ = 'foreign_legion';",
        "question_th": "ระบุชื่อนักเรียนทุกคนที่สมัครเป็นทหารในกองทหารต่างประเทศ",
        "evidence_th": "ในอวัยวะกองทหารต่างประเทศ = 'foreign_legion';",
        "SQL": "SELECT name FROM enlist WHERE organ = 'foreign_legion'",
        "table": "['enlist']"
    },
    {
        "question_id": 4395,
        "db_id": "student_loan",
        "question": "Name 5 students with due payments that are enlisted alongside which organization they were enlisted.",
        "evidence": "with due payments refers to bool = 'pos'; organization refers to organ",
        "question_th": "ตั้งชื่อนักเรียน 5 คนที่ชำระเงินครบกำหนดซึ่งถูกเกณฑ์พร้อมกับองค์กรที่พวกเขาเกณฑ์",
        "evidence_th": "โดยที่การชำระเงินถึงกำหนดหมายถึง bool = 'pos'; องค์กรหมายถึงอวัยวะ",
        "SQL": "SELECT T2.organ, T1.name FROM no_payment_due AS T1 INNER JOIN enlist AS T2 ON T1.`name` = T2.`name` WHERE T1.bool = 'pos' LIMIT 5",
        "table": "['enlist', 'no_payment_due']"
    },
    {
        "question_id": 4422,
        "db_id": "student_loan",
        "question": "What is the average absence period of a disabled student?",
        "evidence": "average refers to DIVIDE(SUM(month), COUNT(name))",
        "question_th": "นักเรียนพิการมีช่วงขาดเรียนโดยเฉลี่ยเท่าไร?",
        "evidence_th": "ค่าเฉลี่ยหมายถึง DIVIDE(SUM(เดือน), COUNT(ชื่อ))",
        "SQL": "SELECT AVG(T1.month) FROM longest_absense_from_school AS T1 INNER JOIN disabled AS T2 ON T1.name = T2.name",
        "table": "['disabled', 'longest_absense_from_school']"
    },
    {
        "question_id": 4439,
        "db_id": "student_loan",
        "question": "Mention the name of unemployed students who have never been absent from school.",
        "evidence": "have never been absent from school refers to month = 0",
        "question_th": "กล่าวถึงชื่อนักเรียนว่างงานที่ไม่เคยขาดเรียน",
        "evidence_th": "ไม่เคยขาดเรียน หมายถึง เดือน = 0",
        "SQL": "SELECT T1.name FROM longest_absense_from_school AS T1 INNER JOIN unemployed AS T2 ON T1.name = T2.name WHERE T1.month = 0",
        "table": "['longest_absense_from_school', 'unemployed']"
    },
    {
        "question_id": 4440,
        "db_id": "student_loan",
        "question": "How many disabled students have been absent for 3 months from school?",
        "evidence": "have been absent for 3 months from school refers to month = 3",
        "question_th": "มีนักเรียนพิการกี่คนที่ขาดเรียนเป็นเวลา 3 เดือน?",
        "evidence_th": "ขาดเรียนเป็นเวลา 3 เดือน หมายถึง เดือน = 3",
        "SQL": "SELECT COUNT(T1.name) FROM longest_absense_from_school AS T1 INNER JOIN disabled AS T2 ON T1.name = T2.name WHERE T1.month = 3",
        "table": "['disabled', 'longest_absense_from_school']"
    },
    {
        "question_id": 4450,
        "db_id": "student_loan",
        "question": "Among the students enlisted in marines, how many of them are disabled?",
        "evidence": "enlisted in marines refers to organ = 'marines';",
        "question_th": "ในบรรดานักเรียนที่สมัครเป็นทหารนาวิกโยธิน มีกี่คนที่พิการ?",
        "evidence_th": "เกณฑ์ในนาวิกโยธินหมายถึงอวัยวะ = 'นาวิกโยธิน';",
        "SQL": "SELECT COUNT(T1.name) FROM enlist AS T1 INNER JOIN disabled AS T2 ON T1.name = T2.name WHERE T1.organ = 'marines'",
        "table": "['disabled', 'enlist']"
    },
    {
        "question_id": 4454,
        "db_id": "student_loan",
        "question": "List all the organisations of students who filed for bankcrupcy.",
        "evidence": "organization refers to organ; students who filed for bankrupcy refers to file_for_bankrupcy.name",
        "question_th": "รายชื่อองค์กรนักศึกษาที่ถูกฟ้องล้มละลายทั้งหมด",
        "evidence_th": "องค์กรหมายถึงอวัยวะ นักเรียนที่ยื่นขอล้มละลายหมายถึง file_for_bankrupcy.name",
        "SQL": "SELECT T2.organ FROM filed_for_bankrupcy AS T1 INNER JOIN enlist AS T2 ON T1.name = T2.name",
        "table": "['enlist', 'filed_for_bankrupcy']"
    },
    {
        "question_id": 4464,
        "db_id": "student_loan",
        "question": "List at least 5 students who has the longest absense from schoool?",
        "evidence": "longest absense refers to MAX(month)",
        "question_th": "รายชื่อนักเรียนอย่างน้อย 5 คนที่ขาดเรียนนานที่สุด?",
        "evidence_th": "ขาดงานนานที่สุดหมายถึง MAX (เดือน)",
        "SQL": "SELECT name FROM longest_absense_from_school ORDER BY month DESC LIMIT 5",
        "table": "['longest_absense_from_school']"
    },
    {
        "question_id": 4471,
        "db_id": "student_loan",
        "question": "How many unemployed students have never been absent?",
        "evidence": "never been absent refers to month = 0;",
        "question_th": "มีนักศึกษาว่างงานกี่คนที่ไม่เคยขาดงาน?",
        "evidence_th": "ไม่เคยขาด หมายถึง เดือน = 0;",
        "SQL": "SELECT COUNT(T2.name) FROM longest_absense_from_school AS T1 INNER JOIN unemployed AS T2 ON T2.name = T1.name WHERE T1.month = 0",
        "table": "['longest_absense_from_school', 'unemployed']"
    },
    {
        "question_id": 4480,
        "db_id": "student_loan",
        "question": "Calculate the ratio in percentage between the average number of female and male students who joined Fire Department organization.",
        "evidence": "ratio = CONCAT(MULTIPLY(DIVIDE(COUNT(enlist.name WHERE organ = 'fire_department' which is NOT in male.name), COUNT(enlist.name WHERE organ = 'fire_department),'%'))) AS FEMALE; ratio = CONCAT(MULTIPLY(DIVIDE(COUNT(enlist.name WHERE organ = 'fire_department' which is IN male.name), COUNT(enlist.name WHERE organ = 'fire_department), 100))) AS MALE; female students refers to enlist.name who are NOT in male.name; male students refers to enlist.name who are IN male.name; organization refers to organ; organ = 'fire_department';",
        "question_th": "คำนวณอัตราส่วนเป็นร้อยละระหว่างจำนวนนักเรียนหญิงและชายโดยเฉลี่ยที่เข้าร่วมองค์กรดับเพลิง",
        "evidence_th": "ratio = CONCAT(MULTIPLY(DIVIDE(COUNT(enlist.name WHERE Organ = 'fire_department' which is NOT in male.name), COUNT(enlist.name WHERE Organ = 'fire_department),'%'))) AS เพศหญิง; ratio = CONCAT(MULTIPLY(DIVIDE(COUNT(enlist.name WHERE Organ = 'fire_department' ซึ่งอยู่ใน male.name), COUNT(enlist.name WHERE Organ = 'fire_department), 100))) AS MALE; นักเรียนหญิงหมายถึง enlist.name ซึ่งไม่ได้อยู่ใน male.name; นักเรียนชายหมายถึง enlist.name ที่อยู่ใน male.name; องค์กรหมายถึงอวัยวะ อวัยวะ = 'แผนกดับเพลิง';",
        "SQL": "SELECT CAST(SUM(IIF(T2.name IS NULL, 1, 0)) AS REAL) * 100 / COUNT(T1.name), CAST(SUM(IIF(T2.name IS NOT NULL, 1, 0)) AS REAL) * 100 / COUNT(T1.name) FROM enlist AS T1 LEFT JOIN male AS T2 ON T2.name = T1.name WHERE T1.organ = 'fire_department'",
        "table": "['enlist', 'male']"
    },
    {
        "question_id": 4492,
        "db_id": "student_loan",
        "question": "Define the gender of \"student995\" and his/her enrolled schools.",
        "evidence": "male.name = 'student995' means student995's gender is male; if 'student995' can not be found in 'male.name', it means student995 is female;",
        "question_th": "กำหนดเพศของ \"student995\" และโรงเรียนที่ลงทะเบียนเรียน",
        "evidence_th": "male.name = 'student995' หมายถึงเพศของ Student995 เป็นชาย; หากไม่พบ 'student995' ใน 'male.name' แสดงว่า Student995 เป็นเพศหญิง",
        "SQL": "SELECT IIF(T2.name IS NULL, 'female', 'male') AS gen , T1.school FROM enrolled AS T1 LEFT JOIN male AS T2 ON T2.name = T1.name WHERE T1.name = 'student995'",
        "table": "['enrolled', 'male']"
    },
    {
        "question_id": 4514,
        "db_id": "student_loan",
        "question": "What is the school and organization enrolled by student211?",
        "evidence": "organization refers to organ; student211 is a name of student;",
        "question_th": "โรงเรียนและองค์กรใดที่นักเรียน 211 ลงทะเบียน?",
        "evidence_th": "องค์กรหมายถึงอวัยวะ Student211 เป็นชื่อของนักเรียน",
        "SQL": "SELECT T2.school, T1.organ FROM enlist AS T1 INNER JOIN enrolled AS T2 ON T2.name = T1.name WHERE T1.name = 'student211'",
        "table": "['enlist', 'enrolled']"
    },
    {
        "question_id": 4528,
        "db_id": "student_loan",
        "question": "List out the number of students who filed for bankruptcy and enlisted in navy.",
        "evidence": "navy refers to organ = 'navy';",
        "question_th": "รายชื่อนักเรียนที่ถูกฟ้องล้มละลายและสมัครเป็นทหารเรือ",
        "evidence_th": "กองทัพเรือหมายถึงอวัยวะ = 'กองทัพเรือ';",
        "SQL": "SELECT COUNT(T1.name) FROM enlist AS T1 INNER JOIN filed_for_bankrupcy AS T2 ON T1.name = T2.name WHERE T1.organ = 'navy'",
        "table": "['enlist', 'filed_for_bankrupcy']"
    },
    {
        "question_id": 4530,
        "db_id": "student_loan",
        "question": "Calculate the ratio of disabled students who have never been absent from school.",
        "evidence": "ratio = MULTIPLY(DIVIDE(SUM(month = 0), COUNT(disabled.name)), 100); never been absent from school refers to month = 0;",
        "question_th": "คำนวณอัตราส่วนนักเรียนพิการที่ไม่เคยขาดเรียน",
        "evidence_th": "อัตราส่วน = คูณ(หาร(SUM(เดือน = 0), นับ(disabled.name)), 100); ไม่เคยขาดเรียน หมายถึง เดือน = 0;",
        "SQL": "SELECT 100 * SUM(IIF(T2.month = 0, 1, 0)) AS num FROM disabled AS T1 INNER JOIN longest_absense_from_school AS T2 ON T1.name = T2.name",
        "table": "['disabled', 'longest_absense_from_school']"
    },
    {
        "question_id": 4532,
        "db_id": "student_loan",
        "question": "How many students have been absent less than 4 months?",
        "evidence": "absent less than 4 months refers to month < 4;",
        "question_th": "มีนักเรียนกี่คนที่ขาดเรียนน้อยกว่า 4 เดือน?",
        "evidence_th": "ขาดน้อยกว่า 4 เดือน หมายถึง เดือน < 4;",
        "SQL": "SELECT COUNT(name) FROM longest_absense_from_school WHERE month < 4",
        "table": "['longest_absense_from_school']"
    },
    {
        "question_id": 4535,
        "db_id": "student_loan",
        "question": "State name of female students who filed for bankruptcy.",
        "evidence": "female students refers to filed_for_bankrupcy.name who are NOT in male.name;",
        "question_th": "ระบุชื่อนักศึกษาหญิงที่ถูกฟ้องล้มละลาย",
        "evidence_th": "นักเรียนหญิงหมายถึง filed_for_bankrupcy.name ที่ไม่ได้อยู่ใน male.name;",
        "SQL": "SELECT T1.name FROM person AS T1 INNER JOIN filed_for_bankrupcy AS T2 ON T1.name = T2.name LEFT JOIN male AS T3 ON T1.name = T3.name WHERE T3.name IS NULL",
        "table": "['filed_for_bankrupcy', 'male', 'person']"
    },
    {
        "question_id": 4540,
        "db_id": "student_loan",
        "question": "How many disabled students have payment due?",
        "evidence": "payment due refers to bool = 'pos';",
        "question_th": "มีนักเรียนพิการกี่คนที่ต้องชำระเงิน?",
        "evidence_th": "กำหนดชำระหมายถึง bool = 'pos';",
        "SQL": "SELECT COUNT(T1.name) FROM no_payment_due AS T1 INNER JOIN disabled AS T2 ON T1.name = T2.name WHERE T1.bool = 'pos'",
        "table": "['disabled', 'no_payment_due']"
    },
    {
        "question_id": 4542,
        "db_id": "student_loan",
        "question": "How many disabled students are male?",
        "evidence": "male students are mentioned in male.name;",
        "question_th": "นักเรียนพิการเป็นชายกี่คน?",
        "evidence_th": "นักเรียนชายถูกกล่าวถึงใน male.name;",
        "SQL": "SELECT COUNT(T1.name) FROM male AS T1 INNER JOIN disabled AS T2 ON T1.name = T2.name",
        "table": "['disabled', 'male']"
    },
    {
        "question_id": 4545,
        "db_id": "student_loan",
        "question": "What is the employment and payment status of student110?",
        "evidence": "employment status is mentioned in unemployment; unemployed.name = 'student110' means the student is unemployed; if 'student110' can not be found in unemployed.name, it means the student is employed; payment status is mentioned in no_payment_due; bool = 'pos' means the student has payment due; bool = 'neg' means the student has no payment due; student110 is a name of student;",
        "question_th": "สถานะการจ้างงานและการจ่ายเงินของนักเรียน 110 คืออะไร?",
        "evidence_th": "สถานะการจ้างงานมีการกล่าวถึงในการว่างงาน unการจ้างงาน.name = 'student110' หมายถึง นักเรียนว่างงาน; หากไม่พบ 'student110' ใน unการจ้างงาน.ชื่อ หมายความว่านักเรียนมีงานทำ สถานะการชำระเงินระบุไว้ใน no_pay_due; bool = 'pos' หมายถึง นักเรียนมีกำหนดชำระ; bool = 'neg' หมายความว่า นักเรียนไม่มีกำหนดชำระเงิน Student110 เป็นชื่อของนักเรียน",
        "SQL": "SELECT T1.bool FROM no_payment_due AS T1 INNER JOIN unemployed AS T2 ON T1.name = T2.name WHERE T1.name = 'student110'",
        "table": "['no_payment_due', 'unemployed']"
    },
    {
        "question_id": 4558,
        "db_id": "student_loan",
        "question": "What is the name of the organization which most of the students are enlisted in?",
        "evidence": "name of the organization refers to organ; organization which most of the students are enlisted in refers to MAX(COUNT(organ));",
        "question_th": "ชื่อขององค์กรที่นักเรียนส่วนใหญ่สมัครเข้าเป็นทหารคืออะไร?",
        "evidence_th": "ชื่อองค์กรหมายถึงอวัยวะ องค์กรที่นักศึกษาส่วนใหญ่เข้าเกณฑ์หมายถึง MAX(COUNT(organ));",
        "SQL": "SELECT organ FROM ( SELECT organ, COUNT(organ) AS num FROM enlist GROUP BY organ ) T ORDER BY T.num DESC LIMIT 1",
        "table": "['enlist']"
    },
    {
        "question_id": 4574,
        "db_id": "mental_health_survey",
        "question": "How many users, between the age 27 to 35, were surveyed in 2018?",
        "evidence": "Age 27 to 35 refer to AnswerText 27 BETWEEN 35 where questionid = 1; 2018 refer to SurveyID\n\n",
        "question_th": "มีการสำรวจผู้ใช้จำนวนกี่คนที่มีอายุระหว่าง 27 ถึง 35 ปีในปี 2561",
        "evidence_th": "อายุ 27 ถึง 35 ปี หมายถึง AnswerText 27 BETWEEN 35 โดยที่ questionid = 1; 2018 อ้างถึง SurveyID\n\n",
        "SQL": "SELECT T1.UserID FROM Answer AS T1 INNER JOIN Question AS T2 ON T1.QuestionID = T2.questionid WHERE T1.SurveyID = 2018 AND T2.questionid = 1 AND T1.AnswerText BETWEEN '27' AND '35'",
        "table": "['Answer', 'Question']"
    },
    {
        "question_id": 4576,
        "db_id": "mental_health_survey",
        "question": "Betweeen 2016 to 2019, which year recorded the highest number of people with mental illness?",
        "evidence": "Between 2016 to 2019 refer to SurveyID 2016 BETWEEN 2019; People with mental illness refers to AnswerText = 'Yes' where questionid = 34",
        "question_th": "ระหว่างปี 2559 ถึง 2562 จำนวนผู้ป่วยทางจิตมีจำนวนมากที่สุดในปีใด",
        "evidence_th": "ระหว่างปี 2559 ถึง 2562 อ้างถึง SurveyID 2016 ระหว่างปี 2019 ผู้ที่มีอาการป่วยทางจิตหมายถึง AnswerText = 'ใช่' โดยที่ questionid = 34",
        "SQL": "SELECT T1.SurveyID FROM Answer AS T1 INNER JOIN Question AS T2 ON T1.QuestionID = T2.questionid WHERE T1.SurveyID BETWEEN 2016 AND 2019 AND T2.questionid = 34 AND T1.AnswerText LIKE 'Yes' GROUP BY T1.SurveyID ORDER BY COUNT(T1.UserID) DESC LIMIT 1",
        "table": "['Answer', 'Question']"
    },
    {
        "question_id": 4582,
        "db_id": "mental_health_survey",
        "question": "What is the percentage of the the users who would bring up a mental health issue with a potential employer in an interview?",
        "evidence": "Percentage = DIVIDE(SUM(AnswerText = 'Yes' Or AnswerText = 'Maybe'), COUNT(QuestionID = 12))* 100",
        "question_th": "เปอร์เซ็นต์ของผู้ใช้ที่จะหยิบยกปัญหาสุขภาพจิตกับนายจ้างที่มีศักยภาพในการสัมภาษณ์คือเท่าใด",
        "evidence_th": "เปอร์เซ็นต์ = DIVIDE(SUM(AnswerText = 'ใช่' หรือ AnswerText = 'อาจจะ'), COUNT(QuestionID = 12))* 100",
        "SQL": "SELECT CAST(SUM(CASE  WHEN T1.AnswerText LIKE 'Yes' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(T1.UserID) FROM Answer AS T1 INNER JOIN Question AS T2 ON T1.QuestionID = T2.questionid WHERE T2.questionid = 12",
        "table": "['Answer', 'Question']"
    },
    {
        "question_id": 4595,
        "db_id": "mental_health_survey",
        "question": "What is the rate of increase of users with a current mental disorder from 2019's survey to 2016's survey?",
        "evidence": "rate of increase = subtract(divide(count(SurveyID = 2019& QuestionID = 33& AnswerText = 'Yes'), count(SurveyID = 2019& QuestionID = 33)), divide(count(SurveyID = 2016& QuestionID = 33& AnswerText = 'Yes'), count(SurveyID = 2016& QuestionID = 33)))",
        "question_th": "อัตราการเพิ่มขึ้นของผู้ใช้ที่มีความผิดปกติทางจิตในปัจจุบันจากการสำรวจในปี 2019 ถึงการสำรวจในปี 2016 เป็นเท่าใด",
        "evidence_th": "อัตราการเพิ่มขึ้น = ลบ(หาร(นับ(SurveyID = 2019& QuestionID = 33& AnswerText = 'ใช่'), นับ(SurveyID = 2019& QuestionID = 33)), หาร(นับ(SurveyID = 2016& QuestionID = 33& AnswerText = 'ใช่'), นับ(SurveyID = 2016& QuestionID = 33)))",
        "SQL": "SELECT CAST(( SELECT COUNT(T2.UserID) FROM Question AS T1 INNER JOIN Answer AS T2 ON T1.questionid = T2.QuestionID WHERE T2.SurveyID = 2019 AND T1.questiontext LIKE 'Do you currently have a mental health disorder?' AND T2.AnswerText = 'Yes' ) - ( SELECT COUNT(T2.UserID) FROM Question AS T1 INNER JOIN Answer AS T2 ON T1.questionid = T2.QuestionID WHERE T2.SurveyID = 2016 AND T1.questiontext LIKE 'Do you currently have a mental health disorder?' AND T2.AnswerText = 'Yes' ) AS REAL) * 100 / ( SELECT COUNT(T2.UserID) FROM Question AS T1 INNER JOIN Answer AS T2 ON T1.questionid = T2.QuestionID WHERE T2.SurveyID = 2016 AND T1.questiontext LIKE 'Do you currently have a mental health disorder?' AND T2.AnswerText = 'Yes' )",
        "table": "['Answer', 'Question']"
    },
    {
        "question_id": 4601,
        "db_id": "mental_health_survey",
        "question": "Tell the number of surveys that contained the question “What country do you work in?”.",
        "evidence": "question refers to questiontext",
        "question_th": "บอกจำนวนแบบสำรวจที่มีคำถามว่า \"คุณทำงานในประเทศใด\"",
        "evidence_th": "คำถามหมายถึงข้อความคำถาม",
        "SQL": "SELECT COUNT(DISTINCT T1.QuestionID) FROM Answer AS T1 INNER JOIN Question AS T2 ON T1.QuestionID = T2.questionid INNER JOIN Survey AS T3 ON T1.SurveyID = T3.SurveyID WHERE T2.questiontext = 'What country do you work in?'",
        "table": "['Answer', 'Question', 'Survey']"
    },
    {
        "question_id": 4624,
        "db_id": "disney",
        "question": "Who is the director of the movie Pinocchio?",
        "evidence": "Pinocchio is the name of the movie;",
        "question_th": "ใครเป็นผู้กำกับภาพยนตร์เรื่อง Pinocchio?",
        "evidence_th": "Pinocchio เป็นชื่อของภาพยนตร์",
        "SQL": "SELECT director FROM director WHERE name = 'Pinocchio'",
        "table": "['director']"
    },
    {
        "question_id": 4629,
        "db_id": "disney",
        "question": "Please list the release dates of all the movies in which Alan Tudyk is a voice actor.",
        "evidence": "FALSE;",
        "question_th": "โปรดระบุวันที่เข้าฉายของภาพยนตร์ทั้งหมดที่ Alan Tudyk เป็นนักพากย์",
        "evidence_th": "เท็จ;",
        "SQL": "SELECT T2.release_date FROM `voice-actors` AS T1 INNER JOIN characters AS T2 ON T1.movie = T2.movie_title WHERE T1.`voice-actor` = 'Alan Tudyk'",
        "table": "['voice']"
    },
    {
        "question_id": 4633,
        "db_id": "disney",
        "question": "Please list the movies directed by Wolfgang Reitherman that can be watched by the general audience.",
        "evidence": "directed by Wolfgang Reitherman refers to director = 'Wolfgang Reitherman'; movies refer to movie_title; general audience refers to MPAA_rating = 'G';",
        "question_th": "โปรดระบุรายชื่อภาพยนตร์ที่กำกับโดย Wolfgang Reitherman ที่ผู้ชมทั่วไปสามารถรับชมได้",
        "evidence_th": "กำกับโดย Wolfgang Reitherman หมายถึงผู้กำกับ = 'Wolfgang Reitherman'; ภาพยนตร์อ้างถึง movie_title; ผู้ชมทั่วไปหมายถึง MPAA_rating = 'G';",
        "SQL": "SELECT T1.movie_title FROM `movies_total_gross` AS T1 INNER JOIN director AS T2 ON T1.movie_title = T2.name WHERE T1.MPAA_rating = 'G' AND T2.director = 'Wolfgang Reitherman'",
        "table": "['director', 'movies_total_gross']"
    },
    {
        "question_id": 4636,
        "db_id": "disney",
        "question": "Who is the villain of the movie \"Beauty and the Beast\"?",
        "evidence": "Beauty and the Beast refers to movie_title = 'Beauty and the Beast';",
        "question_th": "ใครคือตัวร้ายในภาพยนตร์เรื่อง \"Beauty and the Beast\"?",
        "evidence_th": "Beauty and the Beast หมายถึง movie_title = 'Beauty and the Beast';",
        "SQL": "SELECT villian FROM characters WHERE movie_title = 'Beauty and the Beast'",
        "table": "['characters']"
    },
    {
        "question_id": 4639,
        "db_id": "disney",
        "question": "Who is the voice actor of the character \"Binkie Muddlefoot\"?",
        "evidence": "FALSE;",
        "question_th": "ใครคือผู้ให้เสียงตัวละคร \"บินกี้ มัดเดิลฟุต\"?",
        "evidence_th": "เท็จ;",
        "SQL": "SELECT `voice-actor` FROM `voice-actors` WHERE character = 'Binkie Muddlefoot'",
        "table": "['voice']"
    },
    {
        "question_id": 4642,
        "db_id": "disney",
        "question": "Who is the hero character of the Disney movie directed by Will Finn?",
        "evidence": "Will Finn refers to director = 'Will Finn';",
        "question_th": "ตัวละครฮีโร่ของภาพยนตร์ดิสนีย์ที่กำกับโดยวิล ฟินน์คือใคร",
        "evidence_th": "Will Finn หมายถึงผู้กำกับ = 'Will Finn';",
        "SQL": "SELECT T1.hero FROM characters AS T1 INNER JOIN director AS T2 ON T2.name = T1.movie_title WHERE T2.director = 'Will Finn'",
        "table": "['characters', 'director']"
    },
    {
        "question_id": 4647,
        "db_id": "disney",
        "question": "Wolfgang Reitherman has directed several Disney movies, which one has the highest grossing after accounting for inflation?",
        "evidence": "Wolfgang Reitherman refers to director = 'Wolfgang Reitherman'; the highest grossing after accounting for inflation refers to MAX(inflation_adjusted_gross);",
        "question_th": "Wolfgang Reitherman กำกับภาพยนตร์ดิสนีย์หลายเรื่อง เรื่องไหนทำรายได้สูงสุดหลังจากคำนึงถึงภาวะเงินเฟ้อแล้ว",
        "evidence_th": "Wolfgang Reitherman หมายถึงผู้กำกับ = 'Wolfgang Reitherman'; รายได้สูงสุดหลังการบัญชีสำหรับอัตราเงินเฟ้อหมายถึง MAX(inflation_adjusted_gross)",
        "SQL": "SELECT T1.movie_title FROM movies_total_gross AS T1 INNER JOIN director AS T2 ON T1.movie_title = T2.name WHERE T2.director = 'Wolfgang Reitherman' ORDER BY CAST(REPLACE(SUBSTR(inflation_adjusted_gross, 2), ',', '') AS REAL) DESC LIMIT 1",
        "table": "['director', 'movies_total_gross']"
    },
    {
        "question_id": 4661,
        "db_id": "disney",
        "question": "How many PG adventure movies did Ron Clements direct?",
        "evidence": "Ron Clements refers to director = 'Ron Clements'; PG is an abbreviation for parental guidance and refers to MPAA_rating = 'PG'; adventure movie refers to genre = 'Adventure';",
        "question_th": "Ron Clements กำกับภาพยนตร์แนวผจญภัย PG จำนวนกี่เรื่อง?",
        "evidence_th": "Ron Clements หมายถึงผู้กำกับ = 'Ron Clements'; PG เป็นตัวย่อสำหรับคำแนะนำของผู้ปกครอง และหมายถึง MPAA_rating = 'PG'; ภาพยนตร์ผจญภัยหมายถึงประเภท = 'การผจญภัย';",
        "SQL": "SELECT COUNT(*) FROM director AS T1 INNER JOIN movies_total_gross AS T2 ON T1.name = T2.movie_title WHERE T1.director = 'Ron Clements' AND T2.MPAA_rating = 'PG' AND T2.genre = 'Adventure'",
        "table": "['director', 'movies_total_gross']"
    },
    {
        "question_id": 4718,
        "db_id": "disney",
        "question": "Calculate the percentage of directors whose films grossed over $100 million.",
        "evidence": "DIVIDE(COUNT(director where total_gross > 100000000), COUNT(director)) as percentage;",
        "question_th": "คำนวณเปอร์เซ็นต์ของผู้กำกับที่มีภาพยนตร์ทำรายได้มากกว่า 100 ล้านเหรียญ",
        "evidence_th": "DIVIDE(COUNT(ผู้กำกับ โดยที่ Total_gross > 100000000), COUNT(ผู้กำกับ)) เป็นเปอร์เซ็นต์;",
        "SQL": "SELECT CAST(COUNT(DISTINCT CASE WHEN CAST(REPLACE(trim(T1.total_gross, '$'), ',', '') AS REAL) > 100000000 THEN T3.director ELSE NULL END) AS REAL) * 100 / COUNT(DISTINCT T3.director) FROM movies_total_gross AS T1 INNER JOIN characters AS T2 ON T1.movie_title = T2.movie_title INNER JOIN director AS T3 ON T1.movie_title = T3.name",
        "table": "['characters', 'director', 'movies_total_gross']"
    },
    {
        "question_id": 4720,
        "db_id": "disney",
        "question": "Name the first movie released by Disney.",
        "evidence": "The first movie released refers to movie_title where substr(release_date, length(release_date) - 1, length(release_date)) asc limit 1;",
        "question_th": "ตั้งชื่อภาพยนตร์เรื่องแรกที่ออกโดยดิสนีย์",
        "evidence_th": "ภาพยนตร์เรื่องแรกที่ออกฉายหมายถึง movie_title โดยที่ substr(release_date, length(release_date) - 1, length(release_date)) asc Limit 1;",
        "SQL": "SELECT movie_title FROM characters ORDER BY SUBSTR(release_date, LENGTH(release_date) - 1, LENGTH(release_date)) ASC LIMIT 1",
        "table": "['characters']"
    },
    {
        "question_id": 4730,
        "db_id": "disney",
        "question": "How many voice-actors were involved in the Bambi movie?",
        "evidence": "Bambi is the name of the movie which refers to movie = 'Bambi';",
        "question_th": "มีนักพากย์กี่คนที่เกี่ยวข้องกับภาพยนตร์แบมบี้?",
        "evidence_th": "แบมบี้เป็นชื่อของภาพยนตร์ที่หมายถึงภาพยนตร์ = 'แบมบี้';",
        "SQL": "SELECT COUNT(DISTINCT 'voice-actor') FROM `voice-actors` WHERE movie = 'Bambi'",
        "table": "['voice']"
    },
    {
        "question_id": 4775,
        "db_id": "legislator",
        "question": "Calculate the percentage of the total number of current female legislators and past female legislators. State which one has the highest value.",
        "evidence": "female refers to gender_bio = 'F'; calculation = MULTIPLY(DIVIDE(COUNT(current.gender_bio = 'F' THEN current.bioguide_id)), (COUNT(historical.gender_bio = 'F' then historical.bioguide_id)), 1.0); the highest value refers to MAX(calculation)",
        "question_th": "คำนวณเปอร์เซ็นต์ของจำนวนสมาชิกสภานิติบัญญัติหญิงในปัจจุบันและผู้เป็นสมาชิกสภานิติบัญญัติหญิงในอดีตทั้งหมด ระบุว่าอันไหนมีค่าสูงสุด",
        "evidence_th": "หญิงหมายถึงgender_bio = 'F'; การคำนวณ = MULTIPLY(DIVIDE(COUNT(current.gender_bio = 'F' จากนั้น current.bioguide_id)), (COUNT(historical.gender_bio = 'F' จากนั้นเป็น Historical.bioguide_id)), 1.0); ค่าสูงสุดหมายถึง MAX (การคำนวณ)",
        "SQL": "SELECT CAST(COUNT(CASE WHEN current.gender_bio = 'F' THEN current.bioguide_id ELSE NULL END) AS REAL) * 100 / ( SELECT COUNT(CASE WHEN historical.gender_bio = 'F' THEN historical.bioguide_id ELSE NULL END) FROM historical ) FROM current",
        "table": "['current', 'historical']"
    },
    {
        "question_id": 4779,
        "db_id": "legislator",
        "question": "List the official full names of 10 legislators who have a YouTube account but no Instagram account.",
        "evidence": "have a YouTube account but no Instagram account refers to facebook is not null and (instagram is null or instagram = '')",
        "question_th": "ระบุชื่อเต็มอย่างเป็นทางการของสมาชิกสภานิติบัญญัติ 10 คนที่มีบัญชี YouTube แต่ไม่มีบัญชี Instagram",
        "evidence_th": "มีบัญชี YouTube แต่ไม่มีบัญชี Instagram ที่อ้างถึง Facebook ไม่เป็นโมฆะและ (instagram เป็นโมฆะหรือ instagram = '')",
        "SQL": "SELECT T2.official_full_name FROM `social-media` AS T1 INNER JOIN current AS T2 ON T1.bioguide = T2.bioguide_id WHERE T1.facebook IS NOT NULL AND (T1.instagram IS NULL OR T1.instagram = '') LIMIT 10",
        "table": "['social']"
    },
    {
        "question_id": 4782,
        "db_id": "legislator",
        "question": "Which legislator has the YouTube channel 'RoskamIL06?' Write the official full name.",
        "evidence": "YouTube channel 'RoskamIL06' refers to youtube = 'RoskamIL06';",
        "question_th": "สมาชิกสภานิติบัญญัติคนใดมีช่อง YouTube 'RoskamIL06' เขียนชื่อเต็มอย่างเป็นทางการ",
        "evidence_th": "ช่อง YouTube 'RoskamIL06' หมายถึง youtube = 'RoskamIL06';",
        "SQL": "SELECT T1.official_full_name FROM current AS T1 INNER JOIN `social-media` AS T2 ON T2.bioguide = T1.bioguide_id WHERE T2.youtube = 'RoskamIL06'",
        "table": "['current', 'social']"
    },
    {
        "question_id": 4785,
        "db_id": "legislator",
        "question": "What is the contact URL of Claire McCaskill?",
        "evidence": "contact URL refers to contact_form; Claire McCaskill is an official_full_name",
        "question_th": "URL ติดต่อของ Claire McCaskill คืออะไร",
        "evidence_th": "URL ติดต่อหมายถึง contact_form; แคลร์ แมคคาสกิลเป็นชื่อเต็มอย่างเป็นทางการ",
        "SQL": "SELECT T2.contact_form FROM current AS T1 INNER JOIN `current-terms` AS T2 ON T1.bioguide_id = T2.bioguide WHERE T1.official_full_name = 'Claire McCaskill' GROUP BY T2.contact_form",
        "table": "['current']"
    },
    {
        "question_id": 4792,
        "db_id": "legislator",
        "question": "List the official full names and genders of legislators who have Collins as their last name.",
        "evidence": "genders refers to gender_bio; Collins is a last_name",
        "question_th": "ระบุชื่อเต็มอย่างเป็นทางการและเพศของผู้บัญญัติกฎหมายที่มีคอลลินส์เป็นนามสกุล",
        "evidence_th": "เพศหมายถึงgender_bio; Collins เป็นนามสกุล",
        "SQL": "SELECT official_full_name, gender_bio FROM current WHERE last_name = 'Collins'",
        "table": "['current']"
    },
    {
        "question_id": 4798,
        "db_id": "legislator",
        "question": "Among legislators who have an Instagram account, list down their full names and nicknames who have a Thomas ID of less than 1000.",
        "evidence": "have an Instagram account refers to instagram is not null; full names refers to official_full_name; nicknames refers to nickname_name; Thomas ID of less than 1000 refers to thomas_id < 1000;",
        "question_th": "ในบรรดาสมาชิกสภานิติบัญญัติที่มีบัญชี Instagram ให้ระบุชื่อเต็มและชื่อเล่นที่มี Thomas ID น้อยกว่า 1,000 คน",
        "evidence_th": "มีบัญชี Instagram หมายถึง Instagram ไม่เป็นโมฆะ ชื่อเต็มหมายถึงofficial_full_name; ชื่อเล่นหมายถึงชื่อเล่น; Thomas ID น้อยกว่า 1,000 หมายถึง thomas_id < 1,000;",
        "SQL": "SELECT T1.official_full_name, T1.nickname_name FROM current AS T1 INNER JOIN `social-media` AS T2 ON T2.bioguide = T1.bioguide_id WHERE T2.instagram IS NOT NULL AND T1.thomas_id < 1000",
        "table": "['current', 'social']"
    },
    {
        "question_id": 4820,
        "db_id": "legislator",
        "question": "Mention the username of Facebook of Ralph Abraham.",
        "evidence": "username of Facebook refers to facebook; Ralph Abraham is an official_full_name; official_full_name refers to first_name, last_name",
        "question_th": "กล่าวถึงชื่อผู้ใช้ Facebook ของ Ralph Abraham",
        "evidence_th": "ชื่อผู้ใช้ของ Facebook หมายถึง facebook; ราล์ฟ อับราฮัม เป็นชื่อทางการ; Official_full_name หมายถึง first_name, Last_name",
        "SQL": "SELECT T2.facebook FROM current AS T1 INNER JOIN `social-media` AS T2 ON T2.bioguide = T1.bioguide_id WHERE T1.first_name = 'Ralph' AND T1.last_name = 'Abraham'",
        "table": "['current', 'social']"
    },
    {
        "question_id": 4821,
        "db_id": "legislator",
        "question": "What is the first name of the legislator whose address at 1005 Longworth HOB; Washington DC 20515-1408?",
        "evidence": "",
        "question_th": "ชื่อแรกของสมาชิกสภานิติบัญญัติซึ่งอยู่ที่ 1005 Longworth HOB คืออะไร วอชิงตัน ดี.ซี. 20515-1408?",
        "evidence_th": "",
        "SQL": "SELECT T1.first_name FROM current AS T1 INNER JOIN `current-terms` AS T2 ON T1.bioguide_id = T2.bioguide WHERE T2.address = '1005 Longworth HOB Washington DC 20515-1408' GROUP BY T1.first_name",
        "table": "['current']"
    },
    {
        "question_id": 4826,
        "db_id": "legislator",
        "question": "How many of the legislators are male?",
        "evidence": "male refers to gender_bio = 'M';",
        "question_th": "สมาชิกสภานิติบัญญัติเป็นชายกี่คน?",
        "evidence_th": "ชายหมายถึงgender_bio = 'M';",
        "SQL": "SELECT COUNT(*) FROM current WHERE gender_bio = 'M'",
        "table": "['current']"
    },
    {
        "question_id": 4833,
        "db_id": "legislator",
        "question": "What are the first and last name of the representatives of the house in district 9?",
        "evidence": "representatives refers to type = 'rep';",
        "question_th": "ตัวแทนบ้านในเขต 9 ชื่อและนามสกุลว่าอะไร?",
        "evidence_th": "ตัวแทนหมายถึง type = 'ตัวแทน';",
        "SQL": "SELECT T2.first_name, T2.last_name FROM `historical-terms` AS T1 INNER JOIN historical AS T2 ON T2.bioguide_id = T1.bioguide WHERE T1.district = 9",
        "table": "['historical']"
    },
    {
        "question_id": 4842,
        "db_id": "legislator",
        "question": "Give the state and type of term of the legislator with the google entity ID of kg:/m/02pyzk.",
        "evidence": "type of term refers to type; google entity ID refers to google_entity_id_id; google_entity_id_id = 'kg:/m/02pyzk';",
        "question_th": "ระบุสถานะและประเภทของวาระการดำรงตำแหน่งของผู้บัญญัติกฎหมายด้วยรหัสเอนทิตีของ Google เป็น kg:/m/02pyzk",
        "evidence_th": "ประเภทของคำหมายถึงประเภท รหัสเอนทิตีของ Google อ้างถึง google_entity_id_id; google_entity_id_id = 'กก.:/m/02pyzk';",
        "SQL": "SELECT T2.state, T2.type FROM historical AS T1 INNER JOIN `historical-terms` AS T2 ON T1.bioguide_id = T2.bioguide WHERE T1.google_entity_id_id = 'kg:/m/02pyzk'",
        "table": "['historical']"
    },
    {
        "question_id": 4843,
        "db_id": "legislator",
        "question": "Provide the type and end date of the term of the legislator named John Vining.",
        "evidence": "end date of the term refers to end;",
        "question_th": "ระบุประเภทและวันที่สิ้นสุดวาระของสมาชิกสภานิติบัญญัติชื่อ John Vining",
        "evidence_th": "วันที่สิ้นสุดของคำหมายถึงการสิ้นสุด;",
        "SQL": "SELECT T2.type, T2.end FROM historical AS T1 INNER JOIN `historical-terms` AS T2 ON T1.bioguide_id = T2.bioguide WHERE T1.first_name = 'John' AND T1.last_name = 'Vining'",
        "table": "['historical']"
    },
    {
        "question_id": 4849,
        "db_id": "legislator",
        "question": "Which legislators are woman?",
        "evidence": "woman refers to gender_bio = 'F';",
        "question_th": "สมาชิกสภานิติบัญญัติคนไหนที่เป็นผู้หญิง?",
        "evidence_th": "ผู้หญิงหมายถึงgender_bio = 'F';",
        "SQL": "SELECT first_name, last_name FROM historical WHERE gender_bio = 'F'",
        "table": "['historical']"
    },
    {
        "question_id": 4860,
        "db_id": "legislator",
        "question": "What is the Twitter ID of Emanuel Cleaver?",
        "evidence": "",
        "question_th": "Twitter ID ของ Emanuel Cleaver คืออะไร?",
        "evidence_th": "",
        "SQL": "SELECT T1.twitter_id FROM `social-media` AS T1 INNER JOIN current AS T2 ON T2.bioguide_id = T1.bioguide WHERE T2.first_name = 'Emanuel' AND T2.last_name = 'Cleaver'",
        "table": "['social']"
    },
    {
        "question_id": 4872,
        "db_id": "legislator",
        "question": "What is the official Twitter handle of Jason Lewis?",
        "evidence": "official Twitter handle refers to twitter;",
        "question_th": "Twitter อย่างเป็นทางการของ Jason Lewis คืออะไร?",
        "evidence_th": "ที่จับ Twitter อย่างเป็นทางการหมายถึง Twitter;",
        "SQL": "SELECT T2.twitter FROM current AS T1 INNER JOIN `social-media` AS T2 ON T1.bioguide_id = T2.bioguide WHERE T1.official_full_name = 'Jason Lewis'",
        "table": "['current', 'social']"
    },
    {
        "question_id": 4877,
        "db_id": "legislator",
        "question": "How many districts did John Conyers, Jr. serve in total?",
        "evidence": "",
        "question_th": "John Conyers Jr. ให้บริการทั้งหมดกี่เขต?",
        "evidence_th": "",
        "SQL": "SELECT COUNT(T3.district) FROM ( SELECT T2.district FROM current AS T1 INNER JOIN `current-terms` AS T2 ON T1.bioguide_id = T2.bioguide WHERE T1.official_full_name = 'John Conyers, Jr.' GROUP BY T2.district ) T3",
        "table": "['current']"
    },
    {
        "question_id": 4884,
        "db_id": "legislator",
        "question": "Among all the current legislators born after the year 1960, how many of them are not google entities?",
        "evidence": "born after the year 1960 refers to strftime('%Y', birthday_bio) > '1960'; not google entities refers to google_entity_id_id is null;",
        "question_th": "ในบรรดาสมาชิกสภานิติบัญญัติชุดปัจจุบันทั้งหมดที่เกิดหลังปี 1960 มีกี่คนที่ไม่ใช่หน่วยงานของ Google",
        "evidence_th": "เกิดหลังปี 1960 หมายถึง strftime('%Y', birthday_bio) > '1960'; ไม่ใช่เอนทิตีของ Google อ้างถึง google_entity_id_id เป็นโมฆะ",
        "SQL": "SELECT COUNT(*) FROM current WHERE strftime('%Y', birthday_bio) > '1960' AND google_entity_id_id IS NULL",
        "table": "['current']"
    },
    {
        "question_id": 4912,
        "db_id": "legislator",
        "question": "How many female representatives are there in Michigan?",
        "evidence": "female refers to gender_bio = 'F'; representatives refers to type = 'rep'; Michigan refers to state = 'MI';",
        "question_th": "มีตัวแทนหญิงกี่คนในรัฐมิชิแกน?",
        "evidence_th": "หญิงหมายถึงgender_bio = 'F'; ตัวแทนหมายถึง type = 'ตัวแทน'; มิชิแกนหมายถึงรัฐ = 'MI';",
        "SQL": "SELECT COUNT(T.bioguide_id) FROM ( SELECT T1.bioguide_id FROM current AS T1 INNER JOIN `current-terms` AS T2 ON T1.bioguide_id = T2.bioguide WHERE T2.type = 'rep' AND T2.state = 'MI' AND T1.gender_bio = 'F' GROUP BY T1.bioguide_id ) T",
        "table": "['current']"
    },
    {
        "question_id": 4914,
        "db_id": "olympics",
        "question": "Please list the names of all the Olympic games that John Aalberg has taken part in.",
        "evidence": "name of the Olympic games refers to games_name;",
        "question_th": "โปรดระบุชื่อการแข่งขันกีฬาโอลิมปิกทั้งหมดที่ John Aalberg เข้าร่วม",
        "evidence_th": "ชื่อของการแข่งขันกีฬาโอลิมปิกหมายถึง games_name;",
        "SQL": "SELECT T1.games_name FROM games AS T1 INNER JOIN games_competitor AS T2 ON T1.id = T2.games_id INNER JOIN person AS T3 ON T2.person_id = T3.id WHERE T3.full_name = 'John Aalberg'",
        "table": "['games', 'games_competitor', 'person']"
    },
    {
        "question_id": 4935,
        "db_id": "olympics",
        "question": "Give the name of the tallest athlete from Sweden.",
        "evidence": "the tallest athlete refers to id where MAX(height); from Sweden refers to region_name = 'Sweden'; name refers to full_name;",
        "question_th": "ตั้งชื่อนักกีฬาที่สูงที่สุดจากสวีเดน",
        "evidence_th": "นักกีฬาที่สูงที่สุดหมายถึง id โดยที่ MAX (ส่วนสูง); จากสวีเดนหมายถึงregion_name = 'สวีเดน'; ชื่อหมายถึงชื่อเต็ม;",
        "SQL": "SELECT T3.full_name FROM noc_region AS T1 INNER JOIN person_region AS T2 ON T1.id = T2.region_id INNER JOIN person AS T3 ON T2.person_id = T3.id WHERE T1.region_name = 'Sweden' ORDER BY T3.height DESC LIMIT 1",
        "table": "['noc_region', 'person', 'person_region']"
    },
    {
        "question_id": 4936,
        "db_id": "olympics",
        "question": "How many athletes in the database are from Guatemala?",
        "evidence": "from Guatemala refers to region_name = 'Guatemala';",
        "question_th": "ในฐานข้อมูลมีนักกีฬาจากประเทศกัวเตมาลากี่คน?",
        "evidence_th": "จากกัวเตมาลาหมายถึงregion_name = 'กัวเตมาลา';",
        "SQL": "SELECT COUNT(T1.person_id) FROM person_region AS T1 INNER JOIN noc_region AS T2 ON T1.region_id = T2.id WHERE T2.region_name = 'Guatemala'",
        "table": "['noc_region', 'person_region']"
    },
    {
        "question_id": 4941,
        "db_id": "olympics",
        "question": "What is the percentage of male athletes from Estonia?",
        "evidence": "DIVIDE(COUNT(id where gender = 'M'), COUNT(id)) as percentage where region_name = 'Estonia';",
        "question_th": "นักกีฬาชายจากเอสโตเนียมีกี่เปอร์เซ็นต์?",
        "evidence_th": "DIVIDE(COUNT(id โดยที่ sex = 'M'), COUNT(id)) เป็นเปอร์เซ็นต์ โดยที่ Region_name = 'Estonia';",
        "SQL": "SELECT CAST(COUNT(CASE WHEN T3.gender = 'M' THEN 1 ELSE NULL END) AS REAL) * 100 / COUNT(T2.person_id) FROM noc_region AS T1 INNER JOIN person_region AS T2 ON T1.id = T2.region_id INNER JOIN person AS T3 ON T2.person_id = T3.id WHERE T1.region_name = 'Estonia'",
        "table": "['noc_region', 'person', 'person_region']"
    },
    {
        "question_id": 4976,
        "db_id": "olympics",
        "question": "How many athlete from China participate in the 2016 Summer Olympics?",
        "evidence": "athletes from China refer to person_id where region_name = 'China'; the 2016 Summer Olympics refer to games_name = '2016 Summer';",
        "question_th": "มีนักกีฬาจากประเทศจีนกี่คนที่เข้าร่วมในโอลิมปิกฤดูร้อน 2016",
        "evidence_th": "นักกีฬาจากประเทศจีนอ้างถึง person_id โดยที่ Region_name = 'China'; โอลิมปิกฤดูร้อน 2016 อ้างอิงถึง games_name = 'ฤดูร้อนปี 2016';",
        "SQL": "SELECT COUNT(T3.id) FROM games AS T1 INNER JOIN games_competitor AS T2 ON T1.id = T2.games_id INNER JOIN person AS T3 ON T2.person_id = T3.id INNER JOIN person_region AS T4 ON T3.id = T4.person_id INNER JOIN noc_region AS T5 ON T4.region_id = T5.id WHERE T1.games_name = '2016 Summer' AND T5.region_name = 'China'",
        "table": "['games', 'games_competitor', 'noc_region', 'person', 'person_region']"
    },
    {
        "question_id": 4983,
        "db_id": "olympics",
        "question": "Which summer Olympic have the highest and lowest number of participants?",
        "evidence": "the highest number of participants refers to MAX(COUNT(person_id)); the lowest number of participants refers to MIN(COUNT(person_id)); Which summer Olympic refers to games_name where season = 'Summer';",
        "question_th": "โอลิมปิกฤดูร้อนใดที่มีผู้เข้าร่วมสูงสุดและต่ำสุด",
        "evidence_th": "จำนวนผู้เข้าร่วมสูงสุดหมายถึง MAX(COUNT(person_id)); จำนวนผู้เข้าร่วมต่ำสุดหมายถึง MIN(COUNT(person_id)); ซึ่งโอลิมปิกฤดูร้อนหมายถึง games_name โดยที่ season = 'Summer';",
        "SQL": "SELECT ( SELECT T1.games_name FROM games AS T1 INNER JOIN games_competitor AS T2 ON T1.id = T2.games_id WHERE T1.season = 'Summer' GROUP BY T1.games_year ORDER BY COUNT(T2.person_id) DESC LIMIT 1 ) AS HIGHEST , ( SELECT T1.games_name FROM games AS T1 INNER JOIN games_competitor AS T2 ON T1.id = T2.games_id WHERE T1.season = 'Summer' GROUP BY T1.games_year ORDER BY COUNT(T2.person_id) LIMIT 1 ) AS LOWEST",
        "table": "['games', 'games_competitor']"
    },
    {
        "question_id": 4992,
        "db_id": "olympics",
        "question": "How many times was Larysa Semenivna Latynina (Diriy-) declared as champion in Gymnastics Women's Individual All-Around?",
        "evidence": "Gymnastics Women's Individual All-Around refers to event_name = 'Gymnastics Women''s Individual All-Around'; declared as champion refers to medal_name = 'Gold' or medal_id = 1;",
        "question_th": "Larysa Semenivna Latynina (Diriy-) ได้รับการประกาศให้เป็นแชมป์ยิมนาสติกประเภทบุคคลรวมรอบกี่ครั้ง",
        "evidence_th": "ยิมนาสติกหญิงรอบด้าน หมายถึง event_name = 'ยิมนาสติกหญิงรอบด้าน'; ประกาศเป็นแชมป์หมายถึง Medal_name = 'Gold' หรือ Medal_id = 1;",
        "SQL": "SELECT COUNT(T1.id) FROM event AS T1 INNER JOIN competitor_event AS T2 ON T1.id = T2.event_id INNER JOIN games_competitor AS T3 ON T2.competitor_id = T3.id INNER JOIN person AS T4 ON T3.person_id = T4.id WHERE T4.full_name = 'Larysa Semenivna Latynina (Diriy-)' AND T1.event_name LIKE 'Gymnastics Women%s Individual All-Around' AND T2.medal_id = 1",
        "table": "['competitor_event', 'event', 'games_competitor', 'person']"
    },
    {
        "question_id": 4997,
        "db_id": "olympics",
        "question": "Among the Olympic games held in Los Angeles, what is the name of the Olympic game that has the most number of competitors?",
        "evidence": "Los Angeles refers to city_name = 'Lost Angeles'; the Olympic game refers to games_name; the most number of competitors refers to MAX(COUNT(games_name));",
        "question_th": "ในบรรดาโอลิมปิกเกมส์ที่จัดขึ้นที่ลอสแอนเจลิส โอลิมปิกเกมส์ที่มีผู้เข้าแข่งขันมากที่สุดชื่ออะไร?",
        "evidence_th": "ลอสแองเจลิสหมายถึง city_name = 'ลอสแองเจลีส'; เกมโอลิมปิกหมายถึง games_name; ผู้แข่งขันจำนวนมากที่สุดหมายถึง MAX(COUNT(games_name));",
        "SQL": "SELECT T1.games_name FROM games AS T1 INNER JOIN games_competitor AS T2 ON T1.id = T2.games_id INNER JOIN games_city AS T3 ON T2.games_id = T3.games_id INNER JOIN city AS T4 ON T3.city_id = T4.id WHERE T4.city_name = 'Los Angeles' GROUP BY T1.id ORDER BY COUNT(T2.person_id) DESC LIMIT 1",
        "table": "['city', 'games', 'games_city', 'games_competitor']"
    },
    {
        "question_id": 5009,
        "db_id": "olympics",
        "question": "When did Roma host the Olympic Games?",
        "evidence": "Roma refers to city_name = 'Roma'; When host refers to games_year;",
        "question_th": "โรม่าเป็นเจ้าภาพจัดการแข่งขันกีฬาโอลิมปิกเมื่อใด",
        "evidence_th": "Roma หมายถึง city_name = 'Roma'; เมื่อโฮสต์อ้างถึง games_year;",
        "SQL": "SELECT T3.games_year FROM games_city AS T1 INNER JOIN city AS T2 ON T1.city_id = T2.id INNER JOIN games AS T3 ON T1.games_id = T3.id WHERE T2.city_name = 'Roma'",
        "table": "['city', 'games', 'games_city']"
    },
    {
        "question_id": 5014,
        "db_id": "olympics",
        "question": "Who is the heaviest athlete from Russia?",
        "evidence": "the heaviest athlete refers to full_name where MAX(weight); from Russia refers to region_name = 'Russia';",
        "question_th": "ใครคือนักกีฬาที่หนักที่สุดจากรัสเซีย?",
        "evidence_th": "นักกีฬาที่หนักที่สุดหมายถึง full_name โดยที่ MAX (น้ำหนัก); จากรัสเซียหมายถึงregion_name = 'รัสเซีย';",
        "SQL": "SELECT T3.full_name FROM noc_region AS T1 INNER JOIN person_region AS T2 ON T1.id = T2.region_id INNER JOIN person AS T3 ON T2.person_id = T3.id WHERE T1.region_name = 'Russia' ORDER BY T3.weight DESC LIMIT 1",
        "table": "['noc_region', 'person', 'person_region']"
    },
    {
        "question_id": 5032,
        "db_id": "olympics",
        "question": "What is the average age of competitors who participated in 1988 Winter?",
        "evidence": "AVG(age) where games_name = '1988 Winter';",
        "question_th": "อายุเฉลี่ยของผู้เข้าแข่งขันที่เข้าร่วมในฤดูหนาวปี 1988 คือเท่าใด",
        "evidence_th": "AVG(อายุ) โดยที่ games_name = 'ฤดูหนาวปี 1988';",
        "SQL": "SELECT AVG(T2.age) FROM games AS T1 INNER JOIN games_competitor AS T2 ON T1.id = T2.games_id INNER JOIN person AS T3 ON T2.person_id = T3.id WHERE T1.games_name = '1988 Winter'",
        "table": "['games', 'games_competitor', 'person']"
    },
    {
        "question_id": 5038,
        "db_id": "olympics",
        "question": "State the name of the city that held game id 3.",
        "evidence": "name of city refers to city_name",
        "question_th": "ระบุชื่อเมืองที่จัดเกม ID 3",
        "evidence_th": "ชื่อเมืองหมายถึง city_name",
        "SQL": "SELECT T2.city_name FROM games_city AS T1 INNER JOIN city AS T2 ON T1.city_id = T2.id WHERE T1.games_id = 3",
        "table": "['city', 'games_city']"
    },
    {
        "question_id": 5049,
        "db_id": "olympics",
        "question": "Which region is the majority of the athletes from?",
        "evidence": "region refers to region_name; the majority of the athletes from refer to MAX(COUNT(region_name));",
        "question_th": "นักกีฬาส่วนใหญ่มาจากภูมิภาคใด?",
        "evidence_th": "ภูมิภาคหมายถึงregion_name; นักกีฬาส่วนใหญ่มาจากการอ้างอิงถึง MAX(COUNT(region_name));",
        "SQL": "SELECT T2.region_name FROM person_region AS T1 INNER JOIN noc_region AS T2 ON T1.region_id = T2.id GROUP BY T2.region_name ORDER BY COUNT(T1.person_id) DESC LIMIT 1",
        "table": "['noc_region', 'person_region']"
    },
    {
        "question_id": 5062,
        "db_id": "olympics",
        "question": "List the name of the games that Georgios Abaris participated.",
        "evidence": "name of games refers to games_name;",
        "question_th": "รายชื่อเกมที่ Georgios Abaris เข้าร่วม",
        "evidence_th": "ชื่อเกมหมายถึง games_name;",
        "SQL": "SELECT T1.games_name FROM games AS T1 INNER JOIN games_competitor AS T2 ON T1.id = T2.games_id INNER JOIN person AS T3 ON T2.person_id = T3.id WHERE T3.full_name = 'Georgios Abaris'",
        "table": "['games', 'games_competitor', 'person']"
    },
    {
        "question_id": 5074,
        "db_id": "olympics",
        "question": "In which city the 2004 Summer was held?",
        "evidence": "in which city refers to city_name; the 2004 Summer refers to games_name = '2004 Summer';",
        "question_th": "ฤดูร้อนปี 2547 จัดขึ้นที่เมืองใด",
        "evidence_th": "เมืองใดหมายถึง city_name; ฤดูร้อนปี 2547 หมายถึง games_name = 'ฤดูร้อนปี 2547';",
        "SQL": "SELECT T2.city_name FROM games_city AS T1 INNER JOIN city AS T2 ON T1.city_id = T2.id INNER JOIN games AS T3 ON T1.games_id = T3.id WHERE T3.games_name = '2004 Summer'",
        "table": "['city', 'games', 'games_city']"
    },
    {
        "question_id": 5079,
        "db_id": "olympics",
        "question": "Provide the age of the tallest competitor.",
        "evidence": "the tallest refers to MAX(height);",
        "question_th": "ระบุอายุของคู่แข่งที่สูงที่สุด",
        "evidence_th": "สูงที่สุดหมายถึง MAX(ความสูง);",
        "SQL": "SELECT T2.age FROM person AS T1 INNER JOIN games_competitor AS T2 ON T1.id = T2.person_id ORDER BY T1.height DESC LIMIT 1",
        "table": "['games_competitor', 'person']"
    },
    {
        "question_id": 5080,
        "db_id": "olympics",
        "question": "Among the competitors with age ranges 24 and below, calculate the difference between the number of competitors who weighed greater than 70 kg and competitors who weighted less than 70 kg.",
        "evidence": "SUBTRACT(COUNT(weight > 70), COUNT(weight < 70)) where age < 24;",
        "question_th": "ในบรรดาผู้เข้าแข่งขันที่มีอายุ 24 ปีและต่ำกว่า ให้คำนวณความแตกต่างระหว่างจำนวนผู้เข้าแข่งขันที่มีน้ำหนักมากกว่า 70 กก. และผู้เข้าแข่งขันที่มีน้ำหนักน้อยกว่า 70 กก.",
        "evidence_th": "SUBTRACT(COUNT(น้ำหนัก > 70), COUNT(น้ำหนัก < 70)) โดยที่อายุ < 24;",
        "SQL": "SELECT COUNT(CASE WHEN T1.weight > 70 THEN 1 ELSE NULL END) - COUNT(CASE WHEN T1.weight < 70 THEN 1 ELSE NULL END) FROM person AS T1 INNER JOIN games_competitor AS T2 ON T1.id = T2.person_id WHERE T2.age < 24",
        "table": "['games_competitor', 'person']"
    },
    {
        "question_id": 5084,
        "db_id": "address",
        "question": "Which residential area in Arecibo county has the highest average house value? Please give its zip_code.",
        "evidence": "\"ARECIBO\" is the county; highest average house value refers to Max(avg_house_value)",
        "question_th": "ย่านที่อยู่อาศัยใดในเขต Arecibo ที่มีมูลค่าบ้านเฉลี่ยสูงสุด? กรุณาระบุ zip_code ของมัน",
        "evidence_th": "\"ARECIBO\" คือเขต; มูลค่าบ้านเฉลี่ยสูงสุดหมายถึง Max(avg_house_value)",
        "SQL": "SELECT T1.zip_code FROM zip_data AS T1 INNER JOIN country AS T2 ON T1.zip_code = T2.zip_code WHERE T2.county = 'ARECIBO' ORDER BY T1.avg_house_value DESC LIMIT 1",
        "table": "['country', 'zip_data']"
    },
    {
        "question_id": 5103,
        "db_id": "address",
        "question": "In which county can you find the city with the highest number of females?",
        "evidence": "highest number of females refers to Max(female_population)",
        "question_th": "จังหวัดใดที่คุณพบเมืองที่มีจำนวนผู้หญิงมากที่สุด?",
        "evidence_th": "จำนวนผู้หญิงสูงสุดหมายถึงสูงสุด (Female_population)",
        "SQL": "SELECT T4.county FROM zip_data AS T3 INNER JOIN country AS T4 ON T3.zip_code = T4.zip_code GROUP BY T4.county ORDER BY T3.female_population DESC LIMIT 1",
        "table": "['country', 'zip_data']"
    },
    {
        "question_id": 5120,
        "db_id": "address",
        "question": "Give the name and the position of the cbsa officer from the area with the zip code 45503.",
        "evidence": "position refers to latitude, longitude",
        "question_th": "แจ้งชื่อและตำแหน่งเจ้าหน้าที่ อบต. จากพื้นที่ รหัสไปรษณีย์ 45503",
        "evidence_th": "ตำแหน่ง หมายถึง ละติจูด ลองจิจูด",
        "SQL": "SELECT T1.CBSA_name, T2.latitude, T2.longitude FROM CBSA AS T1 INNER JOIN zip_data AS T2 ON T1.CBSA = T2.CBSA WHERE T2.zip_code = 45503 GROUP BY T1.CBSA_name, T2.latitude, T2.longitude",
        "table": "['CBSA', 'zip_data']"
    },
    {
        "question_id": 5135,
        "db_id": "address",
        "question": "Name 10 cities with their states that are under the Lexington-Fayette, KY office of the Canada Border Services Agency.",
        "evidence": "\"Lexington-Fayette, KY\" is the CBSA_name",
        "question_th": "ตั้งชื่อเมือง 10 เมืองที่มีรัฐอยู่ภายใต้สำนักงาน Lexington-Fayette, KY ของ Canada Border Services Agency",
        "evidence_th": "\"เล็กซิงตัน-ฟาเยตต์ รัฐเคนทักกี\" คือ CBSA_name",
        "SQL": "SELECT DISTINCT T2.city, T2.state FROM CBSA AS T1 INNER JOIN zip_data AS T2 ON T1.CBSA = T2.CBSA WHERE T1.CBSA_name = 'Lexington-Fayette, KY' LIMIT 10",
        "table": "['CBSA', 'zip_data']"
    },
    {
        "question_id": 5154,
        "db_id": "address",
        "question": "What is the area code of the city with the largest land area?",
        "evidence": "largest land area refers to Max(land_area)",
        "question_th": "รหัสเมืองที่มีพื้นที่มากที่สุดคือข้อใด",
        "evidence_th": "พื้นที่ที่ใหญ่ที่สุดหมายถึง Max (land_area)",
        "SQL": "SELECT T1.area_code FROM area_code AS T1 INNER JOIN zip_data AS T2 ON T1.zip_code = T2.zip_code WHERE T2.land_area = ( SELECT MAX(land_area) FROM zip_data )",
        "table": "['area_code', 'zip_data']"
    },
    {
        "question_id": 5157,
        "db_id": "address",
        "question": "List down the area code and country of the city named Savoy.",
        "evidence": "Savoy is the city;",
        "question_th": "ระบุรหัสพื้นที่และประเทศของเมืองที่ชื่อซาวอย",
        "evidence_th": "ซาวอยคือเมือง",
        "SQL": "SELECT T1.area_code, T2.county FROM area_code AS T1 INNER JOIN country AS T2 ON T1.zip_code = T2.zip_code INNER JOIN zip_data AS T3 ON T1.zip_code = T3.zip_code WHERE T3.city = 'Savoy'",
        "table": "['area_code', 'country', 'zip_data']"
    },
    {
        "question_id": 5170,
        "db_id": "address",
        "question": "Among the daylight savings areas in the Midwest region, how many postal points are there in Illinois?",
        "evidence": "postal points refer to zip_code; the daylight savings areas refer to daylight_savings = 'Yes'; Illinois is the name of the state, in which name = 'Illinois';",
        "question_th": "ในบรรดาพื้นที่ออมแสงในภูมิภาคมิดเวสต์ มีจุดไปรษณีย์ในรัฐอิลลินอยส์กี่จุด",
        "evidence_th": "จุดส่งไปรษณีย์อ้างอิงถึง zip_code; พื้นที่ออมแสงหมายถึง daylight_savings = 'ใช่'; อิลลินอยส์เป็นชื่อของรัฐ ซึ่งชื่อ = 'อิลลินอยส์';",
        "SQL": "SELECT COUNT(T2.zip_code) FROM state AS T1 INNER JOIN zip_data AS T2 ON T1.abbreviation = T2.state WHERE T1.name = 'Illinois' AND T2.daylight_savings = 'Yes' AND T2.region = 'Midwest'",
        "table": "['state', 'zip_data']"
    },
    {
        "question_id": 5182,
        "db_id": "address",
        "question": "What is the name of the CBSA of the city with the highest average house value?",
        "evidence": "the highest average house value refers to avg_house_value;",
        "question_th": "CBSA ของเมืองที่มีมูลค่าบ้านเฉลี่ยสูงสุดชื่ออะไร?",
        "evidence_th": "มูลค่าบ้านเฉลี่ยสูงสุดหมายถึง avg_house_value;",
        "SQL": "SELECT DISTINCT T1.CBSA_name FROM CBSA AS T1 INNER JOIN zip_data AS T2 ON T1.CBSA = T2.CBSA WHERE T2.avg_house_value = ( SELECT MAX(avg_house_value) FROM zip_data ) LIMIT 1",
        "table": "['CBSA', 'zip_data']"
    },
    {
        "question_id": 5185,
        "db_id": "address",
        "question": "What is the code of the area with the largest Asian population?",
        "evidence": "the code of the area refers to area_code; area with the largest Asian population refers to MAX(asian_population);",
        "question_th": "รหัสพื้นที่ที่มีประชากรเอเชียมากที่สุดคือข้อใด",
        "evidence_th": "รหัสของพื้นที่หมายถึง area_code; พื้นที่ที่มีประชากรเอเชียมากที่สุดหมายถึง MAX (asian_population);",
        "SQL": "SELECT T1.zip_code FROM area_code AS T1 INNER JOIN zip_data AS T2 ON T1.zip_code = T2.zip_code GROUP BY T2.asian_population ORDER BY T2.asian_population DESC LIMIT 1",
        "table": "['area_code', 'zip_data']"
    },
    {
        "question_id": 5186,
        "db_id": "address",
        "question": "List all the cities with micro CBSA.",
        "evidence": "micro CBSA refers to CBSA_type = 'Micro';",
        "question_th": "รายชื่อเมืองทั้งหมดด้วย micro CBSA",
        "evidence_th": "ไมโคร CBSA หมายถึง CBSA_type = 'ไมโคร';",
        "SQL": "SELECT T2.city FROM CBSA AS T1 INNER JOIN zip_data AS T2 ON T1.CBSA = T2.CBSA WHERE T1.CBSA_type = 'Micro'",
        "table": "['CBSA', 'zip_data']"
    },
    {
        "question_id": 5189,
        "db_id": "address",
        "question": "What is the average household income in the city known as \"Danzig\"?",
        "evidence": "average household income refers to avg_income_per_household; city known as \"Danzig\" refers to bad_alias = 'Danzig';",
        "question_th": "รายได้ครัวเรือนโดยเฉลี่ยในเมืองที่เรียกว่า \"ดันซิก\" เป็นเท่าใด",
        "evidence_th": "รายได้เฉลี่ยของครัวเรือนหมายถึง avg_income_per_household; เมืองที่รู้จักกันในชื่อ \"Danzig\" หมายถึง bad_alias = 'Danzig';",
        "SQL": "SELECT T2.avg_income_per_household FROM avoid AS T1 INNER JOIN zip_data AS T2 ON T1.zip_code = T2.zip_code WHERE T1.bad_alias = 'Danzig'",
        "table": "['avoid', 'zip_data']"
    },
    {
        "question_id": 5199,
        "db_id": "address",
        "question": "Which state has greater than 50 CBSA officers of metro type?",
        "evidence": "greater than 50 CBSA officers of metro type refers to COUNT(CBSA_type = 'Metro') > 50;",
        "question_th": "รัฐใดมีเจ้าหน้าที่ประเภทรถไฟใต้ดิน CBSA มากกว่า 50 คน",
        "evidence_th": "เจ้าหน้าที่ CBSA ประเภทรถไฟใต้ดินมากกว่า 50 คนอ้างอิงถึง COUNT(CBSA_type = 'Metro') > 50;",
        "SQL": "SELECT T2.state FROM CBSA AS T1 INNER JOIN zip_data AS T2 ON T1.CBSA = T2.CBSA WHERE T1.CBSA_type = 'Metro' GROUP BY T2.state HAVING COUNT(T1.CBSA_type) > 50",
        "table": "['CBSA', 'zip_data']"
    },
    {
        "question_id": 5204,
        "db_id": "address",
        "question": "Among the types of postal points in Saint Croix, what percentage of postal points is the post office?",
        "evidence": "DIVIDE(COUNT(type = 'Post Office' ), COUNT(type)) as percentage where county = 'SAINT CROIX';",
        "question_th": "ในบรรดาจุดไปรษณีย์ประเภทต่างๆ ใน ​​Saint Croix ที่ทำการไปรษณีย์มีจุดไปรษณีย์กี่เปอร์เซ็นต์",
        "evidence_th": "DIVIDE(COUNT(type = 'Post Office' ), COUNT(type)) เป็นเปอร์เซ็นต์โดยที่ county = 'SAINT CROIX';",
        "SQL": "SELECT CAST(COUNT(CASE WHEN T2.type = 'Post Office' THEN T1.zip_code ELSE NULL END) AS REAL) * 100 / COUNT(T1.zip_code) FROM country AS T1 INNER JOIN zip_data AS T2 ON T1.zip_code = T2.zip_code WHERE T1.county = 'SAINT CROIX'",
        "table": "['country', 'zip_data']"
    },
    {
        "question_id": 5213,
        "db_id": "address",
        "question": "What is the elevation of the city belonging to Hampden, Massachusetts?",
        "evidence": "the county of Hampden is located in the state of Massachusetts.",
        "question_th": "เมืองที่เป็นของแฮมป์เดน รัฐแมสซาชูเซตส์ อยู่ในระดับความสูงเท่าใด",
        "evidence_th": "เทศมณฑลแฮมป์เดนตั้งอยู่ในรัฐแมสซาชูเซตส์",
        "SQL": "SELECT T3.elevation FROM state AS T1 INNER JOIN country AS T2 ON T1.abbreviation = T2.state INNER JOIN zip_data AS T3 ON T2.zip_code = T3.zip_code WHERE T1.name = 'Massachusetts' AND T2.county = 'HAMPDEN' GROUP BY T3.elevation",
        "table": "['country', 'state', 'zip_data']"
    },
    {
        "question_id": 5226,
        "db_id": "address",
        "question": "Provide the zip codes and area codes of the postal points with the community post office type at the elevation above 6000.",
        "evidence": "community post office type refers to type = 'Community Post Office'; elevation above 6000 refers to elevation > 6000;",
        "question_th": "ระบุรหัสไปรษณีย์และรหัสพื้นที่ของจุดไปรษณีย์โดยเป็นประเภทที่ทำการไปรษณีย์ชุมชนที่ระดับความสูงเกิน 6000",
        "evidence_th": "ประเภทที่ทำการไปรษณีย์ชุมชนหมายถึงประเภท = 'ที่ทำการไปรษณีย์ชุมชน'; ระดับความสูงที่สูงกว่า 6,000 หมายถึงระดับความสูง > 6,000;",
        "SQL": "SELECT T1.zip_code, T1.area_code FROM area_code AS T1 INNER JOIN zip_data AS T2 ON T1.zip_code = T2.zip_code WHERE T2.type = 'Community Post Office ' AND T2.elevation > 6000",
        "table": "['area_code', 'zip_data']"
    },
    {
        "question_id": 5233,
        "db_id": "beer_factory",
        "question": "What is the name of the root beer brand that has the longest history?",
        "evidence": "name of the root beer brand refers to BrandName; longest history refers to MIN(FirstBrewedYear);",
        "question_th": "รูทเบียร์ยี่ห้อที่มีประวัติยาวนานที่สุดชื่อว่าอะไร?",
        "evidence_th": "ชื่อของแบรนด์รูทเบียร์หมายถึง BrandName; ประวัติที่ยาวนานที่สุดหมายถึง MIN (FirstBrewedYear);",
        "SQL": "SELECT BrandName FROM rootbeerbrand WHERE FirstBrewedYear = ( SELECT MIN(FirstBrewedYear) FROM rootbeerbrand )",
        "table": "['rootbeerbrand']"
    },
    {
        "question_id": 5242,
        "db_id": "beer_factory",
        "question": "What is the full name of the customer that had made the most transactions in August, 2014?",
        "evidence": "full name = First, Last; made the most transactions refers to MAX(COUNT(TransactionID)); in August, 2014 refers to SUBSTR(TransactionDate, 1, 4) = '2014' AND SUBSTR(TransactionDate, 6, 2) = '08';",
        "question_th": "ชื่อเต็มของลูกค้าที่ทำธุรกรรมมากที่สุดในเดือนสิงหาคม 2014 คืออะไร",
        "evidence_th": "ชื่อเต็ม = ตัวแรก, ท้าย; ทำธุรกรรมมากที่สุดหมายถึง MAX(COUNT(TransactionID)); ในเดือนสิงหาคม 2014 หมายถึง SUBSTR(TransactionDate, 1, 4) = '2014' และ SUBSTR(TransactionDate, 6, 2) = '08';",
        "SQL": "SELECT T1.First, T1.Last FROM customers AS T1 INNER JOIN `transaction` AS T2 ON T1.CustomerID = T2.CustomerID WHERE STRFTIME('%Y-%m', T2.TransactionDate) = '2014-08' GROUP BY T1.CustomerID ORDER BY COUNT(T2.CustomerID) DESC LIMIT 1",
        "table": "['customers', 'transaction']"
    },
    {
        "question_id": 5251,
        "db_id": "beer_factory",
        "question": "What is the average number of root beers of the brand A&W sold in a day in August, 2014?",
        "evidence": "average = DIVIDE(SUM(COUNT(RootBeerID WHERE BrandName = 'A&W' AND SUBSTR(TransactionDate, 1, 4) = '2014' AND SUBSTR(TransactionDate, 6, 2) = '08')), 31); A&W refers to BrandName = 'A&W'; in August, 2014 refers to SUBSTR(TransactionDate, 1, 4) = '2014' AND SUBSTR(TransactionDate, 6, 2) = '08';",
        "question_th": "จำนวนรูทเบียร์เฉลี่ยของแบรนด์ A&W ที่ขายได้ในหนึ่งวันในเดือนสิงหาคม 2014 เป็นเท่าใด",
        "evidence_th": "ค่าเฉลี่ย = DIVIDE(SUM(COUNT(RootBeerID WHERE BrandName = 'A&W' AND SUBSTR(TransactionDate, 1, 4) = '2014' AND SUBSTR(TransactionDate, 6, 2) = '08')), 31); A&W หมายถึง BrandName = 'A&W'; ในเดือนสิงหาคม 2014 หมายถึง SUBSTR(TransactionDate, 1, 4) = '2014' และ SUBSTR(TransactionDate, 6, 2) = '08';",
        "SQL": "SELECT CAST(COUNT(T1.BrandID) AS REAL) / 31 FROM rootbeer AS T1 INNER JOIN `transaction` AS T2 ON T1.RootBeerID = T2.RootBeerID INNER JOIN rootbeerbrand AS T3 ON T1.BrandID = T3.BrandID WHERE T2.TransactionDate LIKE '2014-08%' AND T3.BrandName = 'A&W'",
        "table": "['rootbeer', 'rootbeerbrand', 'transaction']"
    },
    {
        "question_id": 5266,
        "db_id": "beer_factory",
        "question": "What is the average number of reviews of all the root beer brands from \"CA\" State?",
        "evidence": "average = DIVIDE(COUNT(CustomerID), COUNT(BrandID) WHERE state = CA); \n",
        "question_th": "จำนวนบทวิจารณ์โดยเฉลี่ยของรูทเบียร์ทุกยี่ห้อจากรัฐ \"CA\" คือเท่าใด",
        "evidence_th": "ค่าเฉลี่ย = DIVIDE (COUNT (รหัสลูกค้า), COUNT (BrandID) โดยที่ state = CA); \n",
        "SQL": "SELECT CAST(COUNT(*) AS REAL) / COUNT(DISTINCT T1.BrandID) AS avgreview FROM rootbeerbrand AS T1 INNER JOIN rootbeerreview AS T2 ON T1.BrandID = T2.BrandID WHERE T1.State = 'CA'",
        "table": "['rootbeerbrand', 'rootbeerreview']"
    },
    {
        "question_id": 5284,
        "db_id": "beer_factory",
        "question": "What are the brands of the root beers that received 5-star ratings from no less than 5 customers?",
        "evidence": "brand of the root beer refers to BrandName; 5-star ratings refers to StarRating = 5; no less than 5 customers refers to COUNT(CustomerID) > = 5;",
        "question_th": "รูทเบียร์ยี่ห้อใดบ้างที่ได้รับคะแนน 5 ดาวจากลูกค้าไม่ต่ำกว่า 5 ราย?",
        "evidence_th": "แบรนด์ของรูทเบียร์หมายถึง BrandName; การให้คะแนน 5 ดาวหมายถึง StarRating = 5; ลูกค้าไม่น้อยกว่า 5 รายอ้างอิงถึง COUNT(รหัสลูกค้า) > = 5;",
        "SQL": "SELECT T1.BrandName FROM rootbeerbrand AS T1 INNER JOIN rootbeerreview AS T2 ON T1.BrandID = T2.BrandID WHERE T2.StarRating = 5 GROUP BY T2.BrandID HAVING COUNT(T2.StarRating) >= 5",
        "table": "['rootbeerbrand', 'rootbeerreview']"
    },
    {
        "question_id": 5290,
        "db_id": "beer_factory",
        "question": "Find the brand Id of the root beer which has the most number of customers who gave 1-star ratings.",
        "evidence": "most number of customers who gave 1-star ratings refers to MAX(COUNT(StarRating = 1)); 1-star ratings refers to StarRating = 1;",
        "question_th": "ค้นหารหัสแบรนด์ของรูทเบียร์ที่มีจำนวนลูกค้ามากที่สุดที่ให้คะแนน 1 ดาว",
        "evidence_th": "จำนวนลูกค้าส่วนใหญ่ที่ให้คะแนน 1 ดาวหมายถึง MAX(COUNT(StarRating = 1)); การให้คะแนน 1 ดาวหมายถึง StarRating = 1;",
        "SQL": "SELECT BrandID FROM rootbeerreview WHERE StarRating = 1 GROUP BY BrandID ORDER BY COUNT(BrandID) DESC LIMIT 1",
        "table": "['rootbeerreview']"
    },
    {
        "question_id": 5301,
        "db_id": "beer_factory",
        "question": "Calculate the difference between the number of root beers sold that use cane sugar and corn syrup.",
        "evidence": "difference = SUBTRACT(SUM(CaneSugar = 'TRUE'), SUM(CornSyrup = 'TRUE')); use cane sugar refers to CaneSugar = 'TRUE'; corn syrup refers to CornSyrup = 'TRUE';",
        "question_th": "คำนวณความแตกต่างระหว่างจำนวนรูทเบียร์ที่ขายซึ่งใช้น้ำตาลอ้อยและน้ำเชื่อมข้าวโพด",
        "evidence_th": "ความแตกต่าง = SUBTRACT(SUM(น้ำตาลอ้อย = 'TRUE'), SUM(CornSyrup = 'TRUE')); ใช้น้ำตาลอ้อยหมายถึง CaneSugar = 'TRUE'; น้ำเชื่อมข้าวโพดหมายถึง CornSyrup = 'TRUE';",
        "SQL": "SELECT COUNT(CASE WHEN T3.CaneSugar = 'TRUE' THEN T1.BrandID ELSE NULL END) - COUNT(CASE WHEN T3.CornSyrup = 'TRUE' THEN T1.BrandID ELSE NULL END) AS DIFFERENCE FROM rootbeer AS T1 INNER JOIN `transaction` AS T2 ON T1.RootBeerID = T2.RootBeerID INNER JOIN rootbeerbrand AS T3 ON T1.BrandID = T3.BrandID",
        "table": "['rootbeer', 'rootbeerbrand', 'transaction']"
    },
    {
        "question_id": 5327,
        "db_id": "beer_factory",
        "question": "How many times did Anna Himes use her Mastercard when paying between 12/25/2014 and 5/20/2016 ?",
        "evidence": "Mastercard refers to CreditCardType = 'MasterCard'; between 12/25/2014 and 5/20/2016 refers to TransactionDate BETWEEN '2014-12-25' AND '2016-05-20';",
        "question_th": "Anna Himes ใช้บัตร Mastercard ของเธอกี่ครั้งในการชำระเงินระหว่าง 12/25/2014 ถึง 5/20/2016",
        "evidence_th": "Mastercard หมายถึง CreditCardType = 'MasterCard'; ระหว่างวันที่ 25/12/2557 ถึง 20/05/2559 หมายถึงวันที่ทำธุรกรรมระหว่าง '25-12-2557' และ '2016-05-20';",
        "SQL": "SELECT COUNT(T2.CustomerID) FROM customers AS T1 INNER JOIN `transaction` AS T2 ON T1.CustomerID = T2.CustomerID WHERE T1.First = 'Anna' AND T1.Last = 'Himes' AND T2.CreditCardType = 'MasterCard' AND T2.TransactionDate BETWEEN '2014-12-25' AND '2016-05-20'",
        "table": "['customers', 'transaction']"
    },
    {
        "question_id": 5328,
        "db_id": "beer_factory",
        "question": "What is the average star rating given by female customers to brand ID 10018 from 1/25/2015 to 3/10/2015?",
        "evidence": "average star rating = AVG(StarRating); female customers refers to Gender = 'F; from 1/25/2015 to 3/10/2015 refers to ReviewDate BETWEEN '2015-01-25' AND '2015-03-10';",
        "question_th": "ระดับดาวเฉลี่ยที่ลูกค้าผู้หญิงมอบให้กับแบรนด์ ID 10018 ตั้งแต่วันที่ 25/1/2558 ถึง 10/3/2558 คือเท่าใด",
        "evidence_th": "ระดับดาวเฉลี่ย = AVG (StarRating); ลูกค้าผู้หญิงหมายถึงเพศ = 'F; จาก 25/1/2558 ถึง 3/10/2558 หมายถึง วันที่ทบทวนระหว่าง '25-01-2558' และ '2015-03-10';",
        "SQL": "SELECT AVG(T2.StarRating) FROM customers AS T1 INNER JOIN rootbeerreview AS T2 ON T1.CustomerID = T2.CustomerID WHERE T2.BrandID = 10018 AND T1.Gender = 'F' AND T2.ReviewDate BETWEEN '2013-01-25' AND '2015-03-10'",
        "table": "['customers', 'rootbeerreview']"
    },
    {
        "question_id": 5332,
        "db_id": "beer_factory",
        "question": "What is the precise coordinate of Sac State Union?",
        "evidence": "precise coordinate = Latitude, Longitude; Sac State Union refers to LocationName = 'Sac State Union';",
        "question_th": "พิกัดที่ชัดเจนของ Sac State Union คืออะไร?",
        "evidence_th": "พิกัดที่แม่นยำ = ละติจูด, ลองจิจูด; Sac State Union หมายถึง LocationName = 'Sac State Union';",
        "SQL": "SELECT T2.Latitude, T2.Longitude FROM location AS T1 INNER JOIN geolocation AS T2 ON T1.LocationID = T2.LocationID WHERE T1.LocationName = 'Sac State Union'",
        "table": "['geolocation', 'location']"
    },
    {
        "question_id": 5352,
        "db_id": "beer_factory",
        "question": "Which type of card did Dick Ruthven use to pay for all of his transactions?",
        "evidence": "type of card refers to CreditCardType;",
        "question_th": "Dick Ruthven ใช้บัตรประเภทใดในการชำระค่าธุรกรรมทั้งหมดของเขา",
        "evidence_th": "ประเภทของบัตรหมายถึง CreditCardType;",
        "SQL": "SELECT DISTINCT T2.CreditCardType FROM customers AS T1 INNER JOIN `transaction` AS T2 ON T1.CustomerID = T2.CustomerID WHERE T1.First = 'Dick' AND T1.Last = 'Ruthven'",
        "table": "['customers', 'transaction']"
    },
    {
        "question_id": 5354,
        "db_id": "beer_factory",
        "question": "How many stars did Urijah Faber rate for Frostie?",
        "evidence": "stars refers to StarRating; Frostie refers to BrandName = 'Frostie';",
        "question_th": "Urijah Faber ให้คะแนน Frostie กี่ดาว",
        "evidence_th": "stars หมายถึง StarRating; Frostie หมายถึง BrandName = 'Frostie';",
        "SQL": "SELECT T2.StarRating FROM customers AS T1 INNER JOIN rootbeerreview AS T2 ON T1.CustomerID = T2.CustomerID INNER JOIN rootbeerbrand AS T3 ON T2.BrandID = T3.BrandID WHERE T1.First = 'Urijah' AND T1.Last = 'Faber' AND T3.BrandName = 'Frostie'",
        "table": "['customers', 'rootbeerbrand', 'rootbeerreview']"
    },
    {
        "question_id": 5363,
        "db_id": "beer_factory",
        "question": "What is the precise location of the Sac State American River Courtyard?",
        "evidence": "precise location = Latitude, Longitude; Sac State American River Courtyard refers to LocationName = 'Sac State American River Courtyard';",
        "question_th": "ตำแหน่งที่แน่นอนของ Sac State American River Courtyard คืออะไร?",
        "evidence_th": "ตำแหน่งที่แน่นอน = ละติจูด, ลองจิจูด; Sac State American River Courtyard หมายถึง LocationName = 'Sac State American River Courtyard';",
        "SQL": "SELECT T2.Latitude, T2.Longitude FROM location AS T1 INNER JOIN geolocation AS T2 ON T1.LocationID = T2.LocationID WHERE T1.LocationName = 'Sac State American River Courtyard'",
        "table": "['geolocation', 'location']"
    },
    {
        "question_id": 5364,
        "db_id": "sales",
        "question": "How many sales ids are there for customer id 80?",
        "evidence": "",
        "question_th": "รหัสการขายสำหรับลูกค้า id 80 มีกี่รหัส",
        "evidence_th": "",
        "SQL": "SELECT COUNT(SalesID) FROM Sales WHERE CustomerID = 80",
        "table": "['Sales']"
    },
    {
        "question_id": 5396,
        "db_id": "sales",
        "question": "Tally the product name and quantity of the first ten sales.",
        "evidence": "first ten sales refers to SalesID BETWEEN 1 AND 10;",
        "question_th": "นับชื่อผลิตภัณฑ์และปริมาณของยอดขายสิบรายการแรก",
        "evidence_th": "ยอดขายสิบรายการแรกหมายถึง SalesID ระหว่าง 1 และ 10",
        "SQL": "SELECT T3.Name, T2.Quantity FROM Customers AS T1 INNER JOIN Sales AS T2 ON T1.CustomerID = T2.CustomerID INNER JOIN Products AS T3 ON T2.ProductID = T3.ProductID WHERE T2.SalesID BETWEEN 1 AND 10",
        "table": "['Customers', 'Products', 'Sales']"
    },
    {
        "question_id": 5404,
        "db_id": "sales",
        "question": "How many sales people managed to sell Headlights - Weatherproof?",
        "evidence": "Headlights - Weatherproof' is name of product",
        "question_th": "มีพนักงานขายกี่คนที่ขายไฟหน้า - ทนฝนและแดดได้?",
        "evidence_th": "ไฟหน้า - Weatherproof' เป็นชื่อสินค้า",
        "SQL": "SELECT COUNT(T2.SalesPersonID) FROM Products AS T1 INNER JOIN Sales AS T2 ON T1.ProductID = T2.ProductID WHERE T1.Name = 'Headlights - Weatherproof'",
        "table": "['Products', 'Sales']"
    },
    {
        "question_id": 5405,
        "db_id": "sales",
        "question": "Calculate the revenue produced through sales of HL Road Frame - Red, 56.",
        "evidence": "revenue = MULTIPLY(SUM(Quantity, Price)); 'HL Road Frame - Red, 56' is name of product;",
        "question_th": "คำนวณรายได้ที่เกิดจากการขาย HL Road Frame - Red, 56",
        "evidence_th": "รายได้ = คูณ(SUM (ปริมาณ, ราคา)); 'HL Road Frame - Red, 56' เป็นชื่อสินค้า;",
        "SQL": "SELECT SUM(T2.Quantity * T1.Price) FROM Products AS T1 INNER JOIN Sales AS T2 ON T1.ProductID = T2.ProductID WHERE T1.Name = 'HL Road Frame - Red, 56'",
        "table": "['Products', 'Sales']"
    },
    {
        "question_id": 5407,
        "db_id": "sales",
        "question": "Name the customers who received 'Touring Rim' as a free gift.",
        "evidence": "name of the customer = FirstName, MiddleInitial, LastName; 'Touring Rim' is name of product;",
        "question_th": "แจ้งชื่อลูกค้าที่ได้รับ 'Touring Rim' เป็นของขวัญฟรี",
        "evidence_th": "ชื่อของลูกค้า = FirstName, MiddleInitial, LastName; 'Touring Rim' คือชื่อผลิตภัณฑ์;",
        "SQL": "SELECT DISTINCT T1.FirstName, T1.MiddleInitial, T1.LastName FROM Customers AS T1 INNER JOIN Sales AS T2 ON T1.CustomerID = T2.CustomerID INNER JOIN Products AS T3 ON T2.ProductID = T3.ProductID WHERE T3.Name = 'Touring Rim' AND T3.Price = 0",
        "table": "['Customers', 'Products', 'Sales']"
    },
    {
        "question_id": 5434,
        "db_id": "sales",
        "question": "List the quantity and price of the product bought by Abigail Henderson.",
        "evidence": "",
        "question_th": "ระบุปริมาณและราคาของผลิตภัณฑ์ที่ Abigail Henderson ซื้อ",
        "evidence_th": "",
        "SQL": "SELECT T2.Quantity, T1.Price FROM Products AS T1 INNER JOIN Sales AS T2 ON T1.ProductID = T2.ProductID INNER JOIN Customers AS T3 ON T2.CustomerID = T3.CustomerID WHERE T3.FirstName = 'Abigail' AND T3.LastName = 'Henderson'",
        "table": "['Customers', 'Products', 'Sales']"
    },
    {
        "question_id": 5438,
        "db_id": "sales",
        "question": "What is the price and quantity of the product named Seat Tube?",
        "evidence": "",
        "question_th": "สินค้าชื่อ Seat Tube ราคาและปริมาณเท่าไร?",
        "evidence_th": "",
        "SQL": "SELECT DISTINCT T2.Price, T1.Quantity FROM Sales AS T1 INNER JOIN Products AS T2 ON T1.ProductID = T2.ProductID WHERE T2.Name = 'Seat Tube'",
        "table": "['Products', 'Sales']"
    },
    {
        "question_id": 5443,
        "db_id": "sales",
        "question": "Among the sales ID ranges from 1 to 200, what is the percentage of the products with a price ranging from 200 to 300?",
        "evidence": "sales ID ranges from 1 to 200 refers to SalesID between 1 and 200; percentage = MULTIPLY(DIVIDE(SUM(Price between 200 and 300), COUNT(Price)), 1.0);",
        "question_th": "ในบรรดารหัสการขายมีตั้งแต่ 1 ถึง 200 เปอร์เซ็นต์ของผลิตภัณฑ์ที่มีราคาตั้งแต่ 200 ถึง 300 คือเท่าใด",
        "evidence_th": "รหัสการขายมีตั้งแต่ 1 ถึง 200 หมายถึงรหัสการขายระหว่าง 1 ถึง 200 เปอร์เซ็นต์ = MULTIPLY(หาร(SUM(ราคาระหว่าง 200 ถึง 300), COUNT(ราคา)), 1.0);",
        "SQL": "SELECT CAST(SUM(IIF(T2.Price BETWEEN 200 AND 300, 1, 0)) AS REAL) * 100 / COUNT(T2.Price) FROM Sales AS T1 INNER JOIN Products AS T2 ON T1.ProductID = T2.ProductID WHERE T1.SalesID BETWEEN 1 AND 200",
        "table": "['Products', 'Sales']"
    },
    {
        "question_id": 5450,
        "db_id": "sales",
        "question": "What is the full name of the customer who purchased the highest amount of total price in a single purchase?",
        "evidence": "full name of the customer = FirstName, MiddleInitial, LastName; highest amount of total price refers to MAX(MULTIPLY(Quantity, Price));",
        "question_th": "ชื่อเต็มของลูกค้าที่ซื้อราคารวมสูงสุดในการซื้อครั้งเดียวคืออะไร",
        "evidence_th": "ชื่อเต็มของลูกค้า = FirstName, MiddleInitial, LastName; จำนวนสูงสุดของราคารวมหมายถึง MAX(MULTIPLY(ปริมาณ, ราคา));",
        "SQL": "SELECT T2.FirstName, T2.MiddleInitial, T2.LastName FROM Sales AS T1 INNER JOIN Customers AS T2 ON T1.CustomerID = T2.CustomerID INNER JOIN Products AS T3 ON T1.ProductID = T3.ProductID GROUP BY T1.SalesID, T1.Quantity, T3.Price, FirstName, MiddleInitial, LastName ORDER BY T1.Quantity * T3.Price DESC LIMIT 1",
        "table": "['Customers', 'Products', 'Sales']"
    },
    {
        "question_id": 5454,
        "db_id": "sales",
        "question": "How many type of products did Dalton M. Coleman purchase?",
        "evidence": "",
        "question_th": "Dalton M. Coleman ซื้อผลิตภัณฑ์กี่ประเภท",
        "evidence_th": "",
        "SQL": "SELECT COUNT(T2.ProductID) FROM Customers AS T1 INNER JOIN Sales AS T2 ON T1.CustomerID = T2.CustomerID WHERE T1.FirstName = 'Dalton' AND T1.MiddleInitial = 'M' AND T1.LastName = 'Coleman'",
        "table": "['Customers', 'Sales']"
    },
    {
        "question_id": 5465,
        "db_id": "sales",
        "question": "Find and list the full name of customers who bought products above-average quantity.",
        "evidence": "full name of the customer = FirstName, MiddleInitial, LastName; above-average quantity = Quantity > AVG(Quantity);",
        "question_th": "ค้นหาและระบุชื่อเต็มของลูกค้าที่ซื้อผลิตภัณฑ์ที่มีปริมาณสูงกว่าค่าเฉลี่ย",
        "evidence_th": "ชื่อเต็มของลูกค้า = FirstName, MiddleInitial, LastName; ปริมาณที่สูงกว่าค่าเฉลี่ย = ปริมาณ > AVG(ปริมาณ);",
        "SQL": "SELECT T2.FirstName, T2.MiddleInitial, T2.LastName FROM Sales AS T1 INNER JOIN Customers AS T2 ON T1.CustomerID = T2.CustomerID GROUP BY T1.Quantity HAVING T1.Quantity > ( SELECT AVG(Quantity) FROM Sales )",
        "table": "['Customers', 'Sales']"
    },
    {
        "question_id": 5471,
        "db_id": "menu",
        "question": "How many dishes do not have correct data for the year in which it appeared first?",
        "evidence": "do not have correct data refers to first_appeared < 1851 or first_appeared > 2012;",
        "question_th": "มีกี่จานที่ไม่มีข้อมูลที่ถูกต้องสำหรับปีที่ปรากฏครั้งแรก?",
        "evidence_th": "ไม่มีข้อมูลที่ถูกต้องอ้างถึง first_appeared < 1851 หรือ first_appeared > 2012;",
        "SQL": "SELECT COUNT(*) FROM Dish WHERE first_appeared < 1851 OR first_appeared > 2012",
        "table": "['Dish']"
    },
    {
        "question_id": 5481,
        "db_id": "menu",
        "question": "Among the menus in which the dish \"Clear green turtle\" had appeared, how many of them did not support taking out or booking in advance?",
        "evidence": "Clear green turtle is a name of dish; not support taking out or booking in advance refers to call_number is null;",
        "question_th": "ในบรรดาเมนูที่เมนู \"เต่าเขียวใส\" ปรากฏ มีกี่เมนูที่ไม่รองรับการเอาออกหรือจองล่วงหน้า?",
        "evidence_th": "เต่าเขียวใสเป็นชื่อของอาหาร ไม่รองรับการออกหรือจองล่วงหน้า หมายถึง call_number เป็นโมฆะ;",
        "SQL": "SELECT SUM(CASE WHEN T4.name = 'Clear green turtle' THEN 1 ELSE 0 END) FROM MenuItem AS T1 INNER JOIN MenuPage AS T2 ON T1.menu_page_id = T2.id INNER JOIN Menu AS T3 ON T2.menu_id = T3.id INNER JOIN Dish AS T4 ON T1.dish_id = T4.id WHERE T3.call_number IS NULL",
        "table": "['Dish', 'Menu', 'MenuItem', 'MenuPage']"
    },
    {
        "question_id": 5491,
        "db_id": "menu",
        "question": "How many menus were used in Dutcher House?",
        "evidence": "Dutcher House refers to location = 'Dutcher House';",
        "question_th": "Dutcher House ใช้ไปกี่เมนู?",
        "evidence_th": "Dutcher House หมายถึง ที่ตั้ง = 'Dutcher House';",
        "SQL": "SELECT COUNT(*) FROM Menu WHERE location = 'Dutcher House'",
        "table": "['Menu']"
    },
    {
        "question_id": 5494,
        "db_id": "menu",
        "question": "How many pages were there on the menu created on 17th November 1898?",
        "evidence": "created on 17th November 1898 refers to date = '1898-11-17';",
        "question_th": "มีกี่หน้าในเมนูที่สร้างขึ้นเมื่อวันที่ 17 พฤศจิกายน พ.ศ. 2441",
        "evidence_th": "สร้างขึ้นเมื่อวันที่ 17 พฤศจิกายน พ.ศ. 2441 หมายถึง date = '1898-11-17';",
        "SQL": "SELECT SUM(CASE WHEN T1.date = '1898-11-17' THEN 1 ELSE 0 END) FROM Menu AS T1 INNER JOIN MenuPage AS T2 ON T1.id = T2.menu_id",
        "table": "['Menu', 'MenuPage']"
    },
    {
        "question_id": 5514,
        "db_id": "menu",
        "question": "Is \"c02c9a3b-6881-7080-e040-e00a180631aa\" the uuid for menu called \"The Biltmore\"?",
        "evidence": "if 'c02c9a3b-6881-7080-e040-e00a180631aa' can be found in uuid, it means the 'c02c9a3b-6881-7080-e040-e00a180631aa' is the uuid for the menu called The Biltmore; if 'c02c9a3b-6881-7080-e040-e00a180631aa' can not be found in uuid, it means the 'c02c9a3b-6881-7080-e040-e00a180631aa' is not the uuid for the menu called The Biltmore; The Biltmore is a name of menu;",
        "question_th": "\"c02c9a3b-6881-7080-e040-e00a180631aa\" เป็น uuid สำหรับเมนูชื่อ \"The Biltmore\" หรือไม่",
        "evidence_th": "หาก 'c02c9a3b-6881-7080-e040-e00a180631aa' สามารถพบได้ใน uuid นั่นหมายความว่า 'c02c9a3b-6881-7080-e040-e00a180631aa' เป็น uuid สำหรับเมนูที่เรียกว่า The Biltmore หากไม่พบ 'c02c9a3b-6881-7080-e040-e00a180631aa' ใน uuid นั่นหมายความว่า 'c02c9a3b-6881-7080-e040-e00a180631aa' ไม่ใช่ uuid สำหรับเมนูที่เรียกว่า The Biltmore Biltmore เป็นชื่อของเมนู",
        "SQL": "SELECT CASE WHEN T2.uuid = 'c02c9a3b-6881-7080-e040-e00a180631aa' THEN 'yes' ELSE 'no' END AS yn FROM Menu AS T1 INNER JOIN MenuPage AS T2 ON T1.id = T2.menu_id WHERE T1.name = 'The Biltmore' AND T2.uuid = 'c02c9a3b-6881-7080-e040-e00a180631aa'",
        "table": "['Menu', 'MenuPage']"
    },
    {
        "question_id": 5516,
        "db_id": "menu",
        "question": "What is the page count for menu with page ID of 130?",
        "evidence": "page ID of 130 refers MenuPage.id = 130;",
        "question_th": "จำนวนหน้าสำหรับเมนูที่มี ID หน้า 130 คืออะไร?",
        "evidence_th": "รหัสหน้า 130 หมายถึง MenuPage.id = 130;",
        "SQL": "SELECT T1.page_count FROM Menu AS T1 INNER JOIN MenuPage AS T2 ON T1.id = T2.menu_id WHERE T2.id = 130",
        "table": "['Menu', 'MenuPage']"
    },
    {
        "question_id": 5533,
        "db_id": "menu",
        "question": "Give me the name and menu price of dishes that were free.",
        "evidence": "dishes that were free refers to lowest_price = 0;",
        "question_th": "ขอชื่อและราคาเมนูอาหารที่แจกฟรีครับ",
        "evidence_th": "อาหารฟรีหมายถึง low_price = 0;",
        "SQL": "SELECT T2.name, T1.price FROM MenuItem AS T1 INNER JOIN Dish AS T2 ON T2.id = T1.dish_id WHERE T2.lowest_price = 0",
        "table": "['Dish', 'MenuItem']"
    },
    {
        "question_id": 5538,
        "db_id": "menu",
        "question": "Under what events was the menu page's full width less than 2000 mm?",
        "evidence": "full width less than 2000 mm refers to full_width < 2000;",
        "question_th": "ภายใต้เหตุการณ์ใดที่ความกว้างเต็มหน้าเมนูน้อยกว่า 2,000 มม.",
        "evidence_th": "ความกว้างเต็มน้อยกว่า 2,000 มม. หมายถึง full_width < 2000;",
        "SQL": "SELECT T1.event FROM Menu AS T1 INNER JOIN MenuPage AS T2 ON T1.id = T2.menu_id WHERE T2.full_width = 2000",
        "table": "['Menu', 'MenuPage']"
    },
    {
        "question_id": 5555,
        "db_id": "menu",
        "question": "What are the names of the dishes shown in the lower right corner of menu page 48706?",
        "evidence": "shown in the lower right corner refers to xpos > 0.75 AND ypos > 0.75;",
        "question_th": "เมนูที่แสดงมุมขวาล่างของหน้าเมนู 48706 ชื่ออะไร?",
        "evidence_th": "ที่แสดงในมุมขวาล่างหมายถึง xpos > 0.75 และ ypos > 0.75;",
        "SQL": "SELECT T2.name FROM MenuItem AS T1 INNER JOIN Dish AS T2 ON T2.id = T1.dish_id WHERE T1.xpos > 0.75 AND T1.ypos > 0.75 AND T1.menu_page_id = 48706",
        "table": "['Dish', 'MenuItem']"
    },
    {
        "question_id": 5562,
        "db_id": "menu",
        "question": "What is the ID of the menu with the most number of dishes?",
        "evidence": "most number of dishes refers to MAX(COUNT(dish_count));",
        "question_th": "ID ของเมนูที่มีจำนวนอาหารมากที่สุดคืออะไร?",
        "evidence_th": "จำนวนอาหารส่วนใหญ่หมายถึง MAX(COUNT(dish_count));",
        "SQL": "SELECT id FROM Menu ORDER BY dish_count DESC LIMIT 1",
        "table": "['Menu']"
    },
    {
        "question_id": 5573,
        "db_id": "menu",
        "question": "Among the menu pages on which the dish \"Chicken gumbo\" had appeared, what is the menu ID of the one with the biggest width?",
        "evidence": "Chicken gumbo is a name of dish; biggest width refers to MAX(full_width);",
        "question_th": "ในหน้าเมนูที่มีเมนู \"กระเจี๊ยบไก่\" ปรากฏขึ้น รหัสเมนูของเมนูที่มีความกว้างมากที่สุดคืออะไร",
        "evidence_th": "กระเจี๊ยบไก่เป็นชื่อของอาหาร ความกว้างที่ใหญ่ที่สุดหมายถึง MAX(full_width);",
        "SQL": "SELECT T1.id FROM MenuPage AS T1 INNER JOIN MenuItem AS T2 ON T1.id = T2.menu_page_id INNER JOIN Dish AS T3 ON T2.dish_id = T3.id WHERE T3.name = 'Chicken gumbo' ORDER BY T1.full_width DESC LIMIT 1",
        "table": "['Dish', 'MenuItem', 'MenuPage']"
    },
    {
        "question_id": 5579,
        "db_id": "shipping",
        "question": "How many shipments were ordered by S K L Enterprises Inc in 2017?",
        "evidence": "\"S K L Enterprises Inc\" is the cust_name; in 2017 refers to Cast(ship_date AS DATE) = 2017",
        "question_th": "S K L Enterprises Inc สั่งซื้อการจัดส่งกี่ครั้งในปี 2017",
        "evidence_th": "\"S K L Enterprises Inc\" คือ cust_name; ในปี 2560 หมายถึง Cast(ship_date AS DATE) = 2017",
        "SQL": "SELECT COUNT(T2.ship_id) FROM customer AS T1 INNER JOIN shipment AS T2 ON T1.cust_id = T2.cust_id WHERE T1.cust_name = 'S K L Enterprises Inc' AND STRFTIME('%Y', T2.ship_date) = '2017'",
        "table": "['customer', 'shipment']"
    },
    {
        "question_id": 5584,
        "db_id": "shipping",
        "question": "Among the customers having at least one shipment in 2017, how many of them have an annual revenue of over 30000000?",
        "evidence": "shipment in 2017 refers to Cast(ship_date AS DATE) = 2017; annual revenue of over 30000000 refers to annual_revenue > 30000000",
        "question_th": "ในบรรดาลูกค้าที่มีการจัดส่งอย่างน้อยหนึ่งครั้งในปี 2560 มีกี่รายที่มีรายได้ต่อปีมากกว่า 30000000",
        "evidence_th": "การจัดส่งในปี 2560 หมายถึง Cast(ship_date AS DATE) = 2017; รายได้ต่อปีมากกว่า 30000000 หมายถึง รายได้ต่อปี > 30000000",
        "SQL": "SELECT COUNT(COUNTCUSID) FROM ( SELECT COUNT(T1.cust_id) AS COUNTCUSID FROM customer AS T1 INNER JOIN shipment AS T2 ON T1.cust_id = T2.cust_id WHERE STRFTIME('%Y', T2.ship_date) = '2017' AND T1.annual_revenue > 30000000 GROUP BY T1.cust_id HAVING COUNT(T2.ship_id) >= 1 ) T3",
        "table": "['customer', 'shipment']"
    },
    {
        "question_id": 5585,
        "db_id": "shipping",
        "question": "How many shipments in 2017 were done by Sue Newell?",
        "evidence": "in 2017 refers to Cast(ship_date AS DATE) = 2017",
        "question_th": "Sue Newell มีการจัดส่งกี่ครั้งในปี 2560",
        "evidence_th": "ในปี 2560 หมายถึง Cast(ship_date AS DATE) = 2017",
        "SQL": "SELECT COUNT(*) FROM shipment AS T1 INNER JOIN driver AS T2 ON T1.driver_id = T2.driver_id WHERE STRFTIME('%Y', T1.ship_date) = '2017' AND T2.first_name = 'Sue' AND T2.last_name = 'Newell'",
        "table": "['driver', 'shipment']"
    },
    {
        "question_id": 5588,
        "db_id": "shipping",
        "question": "What is the maximum weight being transported to New York during a single shipment?",
        "evidence": "\"New York\" is the city_name; maximum weight refers to Max(weight)",
        "question_th": "น้ำหนักสูงสุดที่ขนส่งไปนิวยอร์กระหว่างการขนส่งครั้งเดียวคือเท่าใด",
        "evidence_th": "\"นิวยอร์ก\" คือชื่อเมือง; น้ำหนักสูงสุดหมายถึงสูงสุด (น้ำหนัก)",
        "SQL": "SELECT MAX(T1.weight) FROM shipment AS T1 INNER JOIN city AS T2 ON T1.city_id = T2.city_id WHERE T2.city_name = 'New York'",
        "table": "['city', 'shipment']"
    },
    {
        "question_id": 5592,
        "db_id": "shipping",
        "question": "Among all the shipments to Florida, what is the percentage of the shipment to Jacksonville?",
        "evidence": "\"Florida\" is the state; \"Jacksonville\" is city_name;",
        "question_th": "ในบรรดาการจัดส่งทั้งหมดไปยังฟลอริดา เปอร์เซ็นต์ของการจัดส่งไปยังแจ็กสันวิลล์คือเท่าใด",
        "evidence_th": "\"ฟลอริดา\" คือรัฐ \"แจ็กสันวิลล์\" คือชื่อเมือง;",
        "SQL": "SELECT CAST(SUM(CASE WHEN T2.city_name = 'Jacksonville' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(*) FROM shipment AS T1 INNER JOIN city AS T2 ON T1.city_id = T2.city_id WHERE T2.state = 'Florida'",
        "table": "['city', 'shipment']"
    },
    {
        "question_id": 5621,
        "db_id": "shipping",
        "question": "Identify the total weight of shipments transported in 2016 by the newest Peterbilt.",
        "evidence": "transported in 2016 refers to CAST(ship_date as DATE) = 2016; 'Peterbilt' is the make; newest refers to Max(model_year)",
        "question_th": "ระบุน้ำหนักรวมของการขนส่งที่ขนส่งในปี 2559 โดย Peterbilt ใหม่ล่าสุด",
        "evidence_th": "ขนส่งในปี 2559 หมายถึง CAST (ship_date as DATE) = 2016; 'Peterbilt' คือผู้สร้าง; ใหม่ล่าสุดหมายถึงแม็กซ์(model_year)",
        "SQL": "SELECT SUM(T2.weight) FROM truck AS T1 INNER JOIN shipment AS T2 ON T1.truck_id = T2.truck_id WHERE T1.make = 'Peterbilt' AND STRFTIME('%Y', T2.ship_date) = '2016' ORDER BY T1.model_year DESC LIMIT 1",
        "table": "['shipment', 'truck']"
    },
    {
        "question_id": 5630,
        "db_id": "shipping",
        "question": "Among all shipments delivered by Sue Newel, identify the percentage of shipments that were placed by Autoware Inc.",
        "evidence": "\"Autoware Inc\" is the cust_name; percentage = Divide (Count(ship_id where cust_name = 'Autoware Inc'), Count(ship_id)) * 100",
        "question_th": "ในบรรดาการจัดส่งทั้งหมดที่จัดส่งโดย Sue Newel ให้ระบุเปอร์เซ็นต์ของการจัดส่งที่ Autoware Inc. วางไว้",
        "evidence_th": "\"Autoware Inc\" คือ cust_name; เปอร์เซ็นต์ = หาร (นับ (ship_id โดยที่ cust_name = 'Autoware Inc'), จำนวน (ship_id)) * 100",
        "SQL": "SELECT CAST(SUM(CASE WHEN T3.cust_name = 'Autoware Inc' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(*) AS per FROM shipment AS T1 INNER JOIN driver AS T2 ON T1.driver_id = T2.driver_id INNER JOIN customer AS T3 ON T3.cust_id = T1.cust_id WHERE T2.first_name = 'Sue' AND T2.last_name = 'Newell'",
        "table": "['customer', 'driver', 'shipment']"
    },
    {
        "question_id": 5639,
        "db_id": "shipping",
        "question": "Give the full name of driver who transported the items on 3/2/2016.",
        "evidence": "on 3/2/2016 refers to ship_date = '2016-02-03'; full name refers to first_name, last_name",
        "question_th": "แจ้งชื่อเต็มของผู้ขับขี่ที่ขนส่งสิ่งของในวันที่ 3/2/2559",
        "evidence_th": "เมื่อวันที่ 2/3/2559 อ้างถึง ship_date = '2016-02-03'; ชื่อเต็มหมายถึง first_name, Last_name",
        "SQL": "SELECT T2.first_name, T2.last_name FROM shipment AS T1 INNER JOIN driver AS T2 ON T1.driver_id = T2.driver_id WHERE T1.ship_date = '2016-03-02'",
        "table": "['driver', 'shipment']"
    },
    {
        "question_id": 5649,
        "db_id": "shipping",
        "question": "What is the most populated city in California?",
        "evidence": "in California refers to state = 'CA'; most populated city refers to Max(population)",
        "question_th": "เมืองใดมีประชากรมากที่สุดในแคลิฟอร์เนีย?",
        "evidence_th": "ในแคลิฟอร์เนียหมายถึงรัฐ = 'CA'; เมืองที่มีประชากรมากที่สุดหมายถึงแม็กซ์ (ประชากร)",
        "SQL": "SELECT city_name FROM city WHERE state = 'California' AND population = ( SELECT MAX(population) FROM city WHERE state = 'California' )",
        "table": "['city']"
    },
    {
        "question_id": 5668,
        "db_id": "shipping",
        "question": "What model year of truck delivered the ship ID 1233?",
        "evidence": "",
        "question_th": "รถบรรทุกรุ่นใดที่ส่งมอบเรือ ID 1233?",
        "evidence_th": "",
        "SQL": "SELECT T1.model_year FROM truck AS T1 INNER JOIN shipment AS T2 ON T1.truck_id = T2.truck_id WHERE T2.ship_id = '1233'",
        "table": "['shipment', 'truck']"
    },
    {
        "question_id": 5674,
        "db_id": "shipping",
        "question": "What is the weight of the shipment delivered by Andrea Simons on March 7, 2016?",
        "evidence": "on March 7, 2016 refers to ship_date = '2016-03-07'",
        "question_th": "น้ำหนักของพัสดุที่ Andrea Simons จัดส่งเมื่อวันที่ 7 มีนาคม 2016 เป็นเท่าใด",
        "evidence_th": "วันที่ 7 มีนาคม 2559 อ้างอิงถึง ship_date = '2016-03-07'",
        "SQL": "SELECT T1.weight FROM shipment AS T1 INNER JOIN driver AS T2 ON T1.driver_id = T2.driver_id WHERE T2.first_name = 'Andrea' AND T2.last_name = 'Simons' AND T1.ship_date = '2016-03-07'",
        "table": "['driver', 'shipment']"
    },
    {
        "question_id": 5696,
        "db_id": "language_corpus",
        "question": "What is the total pages of Wikipedia in Catalan language?",
        "evidence": "total pages refers to sum(pages); Catalan language refers to lang = 'ca'",
        "question_th": "จำนวนหน้าทั้งหมดของ Wikipedia ในภาษาคาตาลันคือเท่าใด",
        "evidence_th": "หน้าทั้งหมดหมายถึงผลรวม (หน้า); ภาษาคาตาลันหมายถึง lang = 'ca'",
        "SQL": "SELECT pages FROM langs WHERE lang = 'ca'",
        "table": "['langs']"
    },
    {
        "question_id": 5700,
        "db_id": "language_corpus",
        "question": "What is the wikipedia page id of Arqueozoologia?",
        "evidence": "page id refers to pid; Arqueozoologia refers to title = 'Arqueozoologia'",
        "question_th": "รหัสหน้าวิกิพีเดียของ Arqueozoologia คืออะไร",
        "evidence_th": "รหัสหน้าหมายถึง pid; Arqueozoologia อ้างถึงชื่อ = 'Arqueozoologia'",
        "SQL": "SELECT page FROM pages WHERE title = 'Arqueozoologia'",
        "table": "['pages']"
    },
    {
        "question_id": 5703,
        "db_id": "language_corpus",
        "question": "How many times did the word pair \"i\" and \"a\" appeared in the Cataln language/page?",
        "evidence": "times appeared refers to occurrences; word pair \"i\" and \"a\" refers to w1st.word = 'i' w2st.word = 'a'",
        "question_th": "คำว่าคู่ \"i\" และ \"a\" ปรากฏในภาษา/หน้า Cataln กี่ครั้งแล้ว?",
        "evidence_th": "เวลาที่ปรากฎหมายถึงเหตุการณ์ที่เกิดขึ้น คู่คำ \"i\" และ \"a\" หมายถึง w1st.word = 'i' w2st.word = 'a'",
        "SQL": "SELECT SUM(occurrences) FROM biwords WHERE w1st = 86 AND w2nd = 109",
        "table": "['biwords']"
    },
    {
        "question_id": 5705,
        "db_id": "language_corpus",
        "question": "What is the word pair that occured the highest amount of times in Addicio? Indicate how many times such word pair occured.",
        "evidence": "word pair refers to w1st.word w2nd.word; occurred the highest amount of times refers to max(occurrences); Addicio refers to title = 'Addicio'; times occurred refer to occurrences",
        "question_th": "คู่คำที่เกิดขึ้นบ่อยที่สุดใน Addicio คืออะไร? ระบุว่าคู่คำดังกล่าวเกิดขึ้นกี่ครั้ง",
        "evidence_th": "คู่คำหมายถึง w1st.word w2nd.word; เกิดขึ้นจำนวนครั้งสูงสุดหมายถึงสูงสุด (เกิดขึ้น); Addicio อ้างถึงชื่อ = 'Addicio'; ครั้งที่เกิดขึ้นหมายถึงเหตุการณ์ที่เกิดขึ้น",
        "SQL": "SELECT T3.w1st, T3.w2nd, T3.occurrences FROM pages AS T1 INNER JOIN pages_words AS T2 ON T1.pid = T2.pid INNER JOIN biwords AS T3 ON T2.wid = T3.w1st OR T2.wid = T3.w2nd WHERE T1.title = 'Addicio' ORDER BY T3.occurrences DESC LIMIT 1",
        "table": "['biwords', 'pages', 'pages_words']"
    },
    {
        "question_id": 5714,
        "db_id": "language_corpus",
        "question": "Is word id \"88\" the word id for title \"Animals\"?",
        "evidence": "word id \"88\" refers to wid = 88",
        "question_th": "รหัสคำ \"88\" เป็นคำรหัสสำหรับชื่อ \"สัตว์\" หรือไม่",
        "evidence_th": "รหัสคำ \"88\" หมายถึง wid = 88",
        "SQL": "SELECT CASE WHEN COUNT(T1.pid) > 0 THEN 'YES' ELSE 'NO' END AS YORN FROM pages AS T1 INNER JOIN pages_words AS T2 ON T1.pid = T2.pid WHERE T2.wid = 88 AND T1.title = 'Animals'",
        "table": "['pages', 'pages_words']"
    },
    {
        "question_id": 5716,
        "db_id": "language_corpus",
        "question": "State one biword pair with occurence of 4.",
        "evidence": "biword pair refers to w1st.word w2nd.word; occurrence of 4 refers to occurrences = 4",
        "question_th": "ระบุคู่คำสองคำที่มีการเกิดขึ้นเป็น 4",
        "evidence_th": "คู่คำหมายถึง w1st.word w2nd.word; การเกิดขึ้นของ 4 หมายถึงการเกิดขึ้น = 4",
        "SQL": "SELECT T1.word, T3.word FROM words AS T1 INNER JOIN biwords AS T2 ON T1.wid = T2.w1st INNER JOIN words AS T3 ON T3.wid = T2.w2nd WHERE T2.occurrences = 4 LIMIT 1",
        "table": "['biwords', 'words']"
    },
    {
        "question_id": 5730,
        "db_id": "language_corpus",
        "question": "Calculate the percentage of times that the same word appears in a pair.",
        "evidence": "Pair is a relationship of two words: w1st and w2nd, where w1st is word id of the first word and w2nd is a word id of the second word; the same word appears in a pair refers to w1st = w2nd; times refers to occurrences; DIVIDE(COUNT(occurrences where w1st = w2nd), COUNT(occurrences)) as percentage;",
        "question_th": "คำนวณเปอร์เซ็นต์ของจำนวนครั้งที่คำเดียวกันปรากฏเป็นคู่",
        "evidence_th": "คู่คือความสัมพันธ์ของสองคำ: w1st และ w2nd โดยที่ w1st คือรหัสคำของคำแรก และ w2nd คือรหัสคำของคำที่สอง คำเดียวกันที่ปรากฏเป็นคู่หมายถึง w1st = w2nd; ครั้งหมายถึงเหตุการณ์ที่เกิดขึ้น DIVIDE(COUNT(รายการโดยที่ w1st = w2nd), COUNT(รายการ)) เป็นเปอร์เซ็นต์;",
        "SQL": "SELECT CAST(COUNT(CASE WHEN w1st = w2nd THEN 1 ELSE NULL END) AS REAL) * 100 / COUNT(w1st) FROM biwords",
        "table": "['biwords']"
    },
    {
        "question_id": 5747,
        "db_id": "language_corpus",
        "question": "What is the language of the pair of words numbered 1 and 616?",
        "evidence": "Pair is a relationship of two words: w1st and w2nd, where w1st is word id of the first word and w2nd is a word id of the second word; w1st = 1; w2nd = 616;",
        "question_th": "คู่คำหมายเลข 1 และ 616 ใช้ภาษาอะไร",
        "evidence_th": "คู่คือความสัมพันธ์ของสองคำ: w1st และ w2nd โดยที่ w1st คือรหัสคำของคำแรก และ w2nd คือรหัสคำของคำที่สอง ส1 = 1; ส2 = 616;",
        "SQL": "SELECT T2.lang FROM biwords AS T1 INNER JOIN langs AS T2 ON T1.lid = T2.lid WHERE T1.w1st = 1 AND T1.w2nd = 616",
        "table": "['biwords', 'langs']"
    },
    {
        "question_id": 5793,
        "db_id": "language_corpus",
        "question": "How many occurrences does the word \"panajot\" have?",
        "evidence": "panajot refers to word = 'panajot'",
        "question_th": "คำว่า “ปนาโชติ” มีกี่ครั้ง?",
        "evidence_th": "panajot หมายถึงคำ = 'panajot'",
        "SQL": "SELECT occurrences FROM words WHERE word = 'panajot'",
        "table": "['words']"
    },
    {
        "question_id": 5794,
        "db_id": "language_corpus",
        "question": "Which word has the time of occurrences as 340691?",
        "evidence": "occurrences of 340691 refers to occurrences = 340691",
        "question_th": "คำใดมีเวลาเกิดเป็น 340691",
        "evidence_th": "การเกิดขึ้นของ 340691 หมายถึงการเกิดขึ้น = 340691",
        "SQL": "SELECT word FROM words WHERE occurrences = 340691",
        "table": "['words']"
    },
    {
        "question_id": 5801,
        "db_id": "language_corpus",
        "question": "How many times does the word \"heròdot\" appear in the Wikipedia page?",
        "evidence": "heròdot refers to word = 'heròdot'; times appear refers to SUM(pid)",
        "question_th": "คำว่า \"heròdot\" ปรากฏในหน้า Wikipedia กี่ครั้ง?",
        "evidence_th": "heròdot หมายถึงคำ = 'heròdot'; ครั้งที่ปรากฏหมายถึง SUM (pid)",
        "SQL": "SELECT COUNT(T2.occurrences) FROM words AS T1 INNER JOIN pages_words AS T2 ON T1.wid = T2.wid WHERE T1.word = 'heròdot'",
        "table": "['pages_words', 'words']"
    },
    {
        "question_id": 5803,
        "db_id": "language_corpus",
        "question": "How many times does the biwords \"que gregorio\" appear in the language?",
        "evidence": "que gregorio refers to w1st = wid where word = 'que' AND w2nd = wid where word = 'gregorio'; appear refers to biwords.occurrences",
        "question_th": "biwords \"que gregorio\" ปรากฏในภาษากี่ครั้ง?",
        "evidence_th": "que gregorio หมายถึง w1st = wid โดยที่ word = 'que' และ w2nd = wid โดยที่ word = 'gregorio'; ปรากฏ หมายถึง biwords.occurrences",
        "SQL": "SELECT occurrences FROM biwords WHERE w1st = ( SELECT wid FROM words WHERE word = 'que' ) AND w2nd = ( SELECT wid FROM words WHERE word = 'gregorio' )",
        "table": "['biwords', 'words']"
    },
    {
        "question_id": 5813,
        "db_id": "language_corpus",
        "question": "What is the revision ID for the page on Catalan titled \"Arqueologia\"?",
        "evidence": "lid = 1 means it's Catalan language; Arqueologia refers to title = 'Arqueologia'; revision ID refers to revision",
        "question_th": "รหัสการแก้ไขสำหรับหน้าภาษาคาตาลันชื่อ \"Arqueologia\" คืออะไร",
        "evidence_th": "lid = 1 หมายถึงเป็นภาษาคาตาลัน Arqueologia หมายถึงชื่อ = 'Arqueologia'; รหัสการแก้ไขหมายถึงการแก้ไข",
        "SQL": "SELECT revision FROM pages WHERE lid = 1 AND title = 'Arqueologia'",
        "table": "['pages']"
    },
    {
        "question_id": 5815,
        "db_id": "language_corpus",
        "question": "Please list the page IDs of all the Wikipedia pages that have the word \"nombre\" appeared on it.",
        "evidence": "nombre refers to word = 'nombre'; page IDs refers to pid",
        "question_th": "โปรดระบุรหัสหน้าของหน้า Wikipedia ทั้งหมดที่มีคำว่า \"nombre\" ปรากฏอยู่",
        "evidence_th": "nombre หมายถึงคำ = 'nombre'; รหัสหน้าหมายถึง pid",
        "SQL": "SELECT T2.pid FROM words AS T1 INNER JOIN pages_words AS T2 ON T1.wid = T2.wid WHERE T1.word = 'nombre'",
        "table": "['pages_words', 'words']"
    },
    {
        "question_id": 5833,
        "db_id": "airline",
        "question": "What is the flight number of the flight operated by American Airlines Inc. that had the longest delay in departure?",
        "evidence": "flight numbers refers to OP_CARRIER_FL_NUM; American Airlines Inc. refers to Description = 'American Airlines Inc.: AA'; longest delay in departure refers to MAX(DEP_DELAY);",
        "question_th": "หมายเลขเที่ยวบินของเที่ยวบินที่ให้บริการโดย American Airlines Inc. ที่มีความล่าช้าในการออกเดินทางนานที่สุดคือเท่าใด",
        "evidence_th": "หมายเลขเที่ยวบินอ้างอิงถึง OP_CARRIER_FL_NUM; American Airlines Inc. อ้างถึงคำอธิบาย = 'American Airlines Inc.: AA'; ความล่าช้าในการออกเดินทางที่ยาวที่สุดหมายถึง MAX(DEP_DELAY);",
        "SQL": "SELECT T1.OP_CARRIER_FL_NUM FROM Airlines AS T1 INNER JOIN Airports AS T2 ON T2.Code = T1.ORIGIN INNER JOIN `Air Carriers` AS T3 ON T1.OP_CARRIER_AIRLINE_ID = T3.Code WHERE T3.Description = 'American Airlines Inc.: AA' ORDER BY T1.DEP_TIME DESC LIMIT 1",
        "table": "['Air', 'Airlines', 'Airports']"
    },
    {
        "question_id": 5835,
        "db_id": "airline",
        "question": "Among the flights operated by American Airlines Inc. on 2018/8/1, how many of them were cancelled?",
        "evidence": "American Airlines Inc. refers to Description = 'American Airlines Inc.: AA'; on 2018/8/1 refers to FL_DATE = '2018/8/1'; cancelled refers to CANCELLED = 1;",
        "question_th": "ในบรรดาเที่ยวบินที่ดำเนินการโดย American Airlines Inc. เมื่อวันที่ 1/8/2018 มีกี่เที่ยวบินที่ถูกยกเลิก",
        "evidence_th": "American Airlines Inc. อ้างถึงคำอธิบาย = 'American Airlines Inc.: AA'; ในวันที่ 1/8/2018 หมายถึง FL_DATE = '2018/8/1'; ยกเลิกหมายถึงยกเลิก = 1;",
        "SQL": "SELECT SUM(CASE WHEN T2.CANCELLED = 1 THEN 1 ELSE 0 END) AS count FROM Airports AS T1 INNER JOIN Airlines AS T2 ON T1.Code = T2.ORIGIN INNER JOIN `Air Carriers` AS T3 ON T2.OP_CARRIER_AIRLINE_ID = T3.Code WHERE T2.FL_DATE = '2018/8/1' AND T3.Description = 'American Airlines Inc.: AA'",
        "table": "['Air', 'Airlines', 'Airports']"
    },
    {
        "question_id": 5848,
        "db_id": "airline",
        "question": "Provide the name of the airport which landed the most number of flights on 2018/8/15.",
        "evidence": "name of the airport refers to Description; airport that landed the most number of flights refers to MAX(COUNT(DEST)); on 2018/8/15 refers to FL_DATE = '2018/8/15';",
        "question_th": "ระบุชื่อสนามบินที่มีเที่ยวบินลงจอดมากที่สุดในวันที่ 8/8/58 ประจำปี 2561",
        "evidence_th": "ชื่อสนามบินหมายถึงคำอธิบาย; สนามบินที่มีเที่ยวบินลงจอดมากที่สุดหมายถึง MAX(COUNT(DEST)) ในวันที่ 8/8/2561 อ้างอิงถึง FL_DATE = '2018/8/58';",
        "SQL": "SELECT T1.Description FROM Airports AS T1 INNER JOIN Airlines AS T2 ON T1.Code = T2.DEST WHERE T2.FL_DATE = '2018/8/15' ORDER BY T2.DEST DESC LIMIT 1",
        "table": "['Airlines', 'Airports']"
    },
    {
        "question_id": 5849,
        "db_id": "airline",
        "question": "For the flight from ATL to PHL on 2018/8/1 that scheduled local departure time as \"2040\", which air carrier does this flight belong to?",
        "evidence": "flight from ATL refers to ORIGIN = 'ATL'; flight to PHL refers to DEST = 'PHL'; on 2018/8/1 refers to FL_DATE = '2018/8/1'; local departure time refers to CRS_DEP_TIME; CRS_DEP_TIME = '2040';",
        "question_th": "สำหรับเที่ยวบินจาก ATL ไป PHL วันที่ 1/8/2561 ที่กำหนดเวลาออกเดินทางท้องถิ่นเป็น \"2040\" เที่ยวบินนี้เป็นของสายการบินใด",
        "evidence_th": "เที่ยวบินจาก ATL หมายถึง ORIGIN = 'ATL'; เที่ยวบินไปยัง PHL หมายถึง DEST = 'PHL'; ในวันที่ 1/8/2018 หมายถึง FL_DATE = '2018/8/1'; เวลาออกเดินทางในท้องถิ่นอ้างอิงถึง CRS_DEP_TIME; CRS_DEP_TIME = '2040';",
        "SQL": "SELECT T2.Description FROM Airlines AS T1 INNER JOIN `Air Carriers` AS T2 ON T1.OP_CARRIER_AIRLINE_ID = T2.Code WHERE T1.FL_DATE = '2018/8/1' AND T1.ORIGIN = 'ATL' AND T1.DEST = 'PHL' AND T1.CRS_DEP_TIME = '2040' GROUP BY T2.Description",
        "table": "['Air', 'Airlines']"
    },
    {
        "question_id": 5852,
        "db_id": "airline",
        "question": "What is the percentage of flights from Los Angeles International airport that were cancelled due to a type C cancellation code?",
        "evidence": "percentage = MULTIPLY(DIVIDE(SUM(CANCELLATION_CODE = 'C'), COUNT(Code)), 100); flights from refers to ORIGIN; Los Angeles International airport refers to Description = 'Los Angeles, CA: Los Angeles International'; cancelled refers to Cancelled = 1; cancelled due to a type C cancellation code refers to CANCELLATION_CODE = 'C';",
        "question_th": "เปอร์เซ็นต์ของเที่ยวบินจากสนามบินนานาชาติลอสแอนเจลีสที่ถูกยกเลิกเนื่องจากรหัสการยกเลิกประเภท C คือเท่าใด",
        "evidence_th": "เปอร์เซ็นต์ = คูณ (หาร (SUM (CANCELLATION_CODE = 'C'), COUNT (รหัส)), 100); เที่ยวบินจากอ้างอิงถึง ORIGIN; ท่าอากาศยานนานาชาติลอสแอนเจลีส อ้างอิงถึงคำอธิบาย = 'ลอสแองเจลิส แคลิฟอร์เนีย: สนามบินนานาชาติลอสแอนเจลิส'; ยกเลิกหมายถึงยกเลิก = 1; ยกเลิกเนื่องจากรหัสการยกเลิกประเภท C หมายถึง CANCELLATION_CODE = 'C';",
        "SQL": "SELECT CAST(SUM(CASE WHEN T2.CANCELLATION_CODE = 'C' THEN 1.0 ELSE 0 END) AS REAL) * 100 / COUNT(*) FROM Airports AS T1 INNER JOIN Airlines AS T2 ON T1.Code = T2.ORIGIN WHERE T2.FL_DATE = '2018/8/15' AND T2.CANCELLATION_CODE IS NOT NULL AND T1.Description = 'Los Angeles, CA: Los Angeles International'",
        "table": "['Airlines', 'Airports']"
    },
    {
        "question_id": 5856,
        "db_id": "airline",
        "question": "What are the codes of the airport found in Ankara, Turkey?",
        "evidence": "airport found in Ankara, Turkey refers to Description like '%Ankara, Turkey%';",
        "question_th": "รหัสสนามบินที่พบในอังการา ประเทศตุรกี คืออะไร",
        "evidence_th": "สนามบินที่พบในอังการา ประเทศตุรกี อ้างอิงถึงคำอธิบาย เช่น '%อังการา ตุรกี%';",
        "SQL": "SELECT Code FROM Airports WHERE Description LIKE '%Ankara, Turkey%'",
        "table": "['Airports']"
    },
    {
        "question_id": 5863,
        "db_id": "airline",
        "question": "List the tail numbers of all the aircraft that arrived on time at Meadows Field airport in August of 2018?",
        "evidence": "tail number refers to TAIL_NUM; arrived on time refers to ARR_DELAY < = 0; Meadows Field airport refers to Description = 'Bakersfield, CA: Meadows Field'; in August of 2018 refers to FL_DATE like '2018/8%';",
        "question_th": "แสดงรายการหมายเลขท้ายของเครื่องบินทั้งหมดที่มาถึงตรงเวลาที่สนามบิน Meadows Field ในเดือนสิงหาคม 2561?",
        "evidence_th": "หมายเลขหางหมายถึง TAIL_NUM; มาถึงตรงเวลาหมายถึง ARR_DELAY < = 0; สนามบินมีโดวส์ฟิลด์ อ้างถึงคำอธิบาย = 'เบเกอร์สฟิลด์ แคลิฟอร์เนีย: มีโดวส์ฟิลด์'; ในเดือนสิงหาคมปี 2018 อ้างอิงถึง FL_DATE เช่น '2018/8%';",
        "SQL": "SELECT T2.TAIL_NUM FROM Airports AS T1 INNER JOIN Airlines AS T2 ON T1.Code = T2.DEST WHERE T2.FL_DATE LIKE '2018/8%' AND T1.Description = 'Bakersfield, CA: Meadows Field' AND T2.DEST = 'BFL' AND T2.ARR_DELAY <= 0 GROUP BY T2.TAIL_NUM",
        "table": "['Airlines', 'Airports']"
    },
    {
        "question_id": 5879,
        "db_id": "airline",
        "question": "How many flights from Charlotte Douglas International Airport to Austin - Bergstrom International Airport experienced serious reasons that cause flight cancellation?",
        "evidence": "from refers to ORIGIN; Charlotte Douglas International Airport refers to Description = 'Charlotte, NC: Charlotte Douglas International'; to refers to DEST; Austin - Bergstrom International Airport refers to Description = 'Austin, TX: Austin - Bergstrom International'; serious reasons refers to CANCELLATION_CODE = 'A';",
        "question_th": "เที่ยวบินจากสนามบินนานาชาติชาร์ลอตต์ ดักลาส ไปยัง สนามบินนานาชาติออสติน - เบิร์กสตรอม ประสบปัญหาร้ายแรงจำนวนกี่เที่ยวบินที่ทำให้เกิดการยกเลิกเที่ยวบิน",
        "evidence_th": "จากอ้างถึง ORIGIN; ท่าอากาศยานนานาชาติชาร์ลอตต์ ดักลาส อ้างอิงถึงคำอธิบาย = 'ชาร์ลอตต์ รัฐนอร์ทแคโรไลนา: สนามบินนานาชาติชาร์ล็อตต์ ดักลาส'; หมายถึง DEST; สนามบินนานาชาติออสติน - เบิร์กสตรอม อ้างถึงคำอธิบาย = 'ออสติน เท็กซัส: ออสติน - สนามบินนานาชาติเบิร์กสตรอม'; เหตุผลที่ร้ายแรงหมายถึง CANCELLATION_CODE = 'A';",
        "SQL": "SELECT COUNT(*) FROM Airlines AS T1 INNER JOIN Airports AS T2 ON T1.ORIGIN = T2.Code WHERE T1.ORIGIN = 'CLT' AND T1.DEST = 'AUS' AND T2.Description = 'Charlotte, NC: Charlotte Douglas International' AND T1.CANCELLATION_CODE = 'A'",
        "table": "['Airlines', 'Airports']"
    },
    {
        "question_id": 5891,
        "db_id": "airline",
        "question": "Provide the origin of the flight that has the shortest actual elapsed time.",
        "evidence": "shortest actual elapsed time refers to MIN(ACTUAL_ELAPSED_TIME);",
        "question_th": "ระบุต้นทางของเที่ยวบินที่มีเวลาที่ผ่านไปจริงสั้นที่สุด",
        "evidence_th": "เวลาที่ผ่านไปจริงที่สั้นที่สุดหมายถึง MIN(ACTUAL_ELAPSED_TIME);",
        "SQL": "SELECT ORIGIN FROM Airlines ORDER BY ACTUAL_ELAPSED_TIME ASC LIMIT 1",
        "table": "['Airlines']"
    },
    {
        "question_id": 5941,
        "db_id": "books",
        "question": "Which country does Žirovnica city belong to?",
        "evidence": "\"Žirovnica\" is the city; country refers to country_name",
        "question_th": "เมือง Žirovnica อยู่ในประเทศใด?",
        "evidence_th": "\"Žirovnica\" คือเมือง; ประเทศ หมายถึง Country_name",
        "SQL": "SELECT T1.country_name FROM country AS T1 INNER JOIN address AS T2 ON T1.country_id = T2.country_id WHERE T2.city = 'Žirovnica'",
        "table": "['address', 'country']"
    },
    {
        "question_id": 5942,
        "db_id": "books",
        "question": "Calculate the percentage of the International shipping orders on 2022/11/10.",
        "evidence": "International shipping order refers to method_name = 'International'; orders on 2022/11/10 refers to order_date LIKE '2022-11-10%'; percentage = Divide (Sum(order_id  where method_name = 'International'), Count(order_id)) * 100",
        "question_th": "คำนวณเปอร์เซ็นต์ของคำสั่งซื้อจัดส่งระหว่างประเทศในวันที่ 2022/11/10",
        "evidence_th": "ใบสั่งจัดส่งระหว่างประเทศอ้างอิงถึง method_name = 'International'; คำสั่งซื้อในวันที่ 2022/11/10 อ้างอิงถึง order_date LIKE '2022-11-10%'; เปอร์เซ็นต์ = หาร (Sum(order_id  โดยที่ method_name = 'International'), Count(order_id)) * 100",
        "SQL": "SELECT CAST(SUM(CASE WHEN T1.method_name = 'International' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(*) FROM shipping_method AS T1 INNER JOIN cust_order AS T2 ON T1.method_id = T2.shipping_method_id WHERE T2.order_date LIKE '2022-11-10%'",
        "table": "['cust_order', 'shipping_method']"
    },
    {
        "question_id": 5950,
        "db_id": "books",
        "question": "How many orders did Antonia Poltun return?",
        "evidence": "order returned refers to status_value = 'Returned'",
        "question_th": "Antonia Poltun ส่งคืนคำสั่งซื้อกี่รายการ",
        "evidence_th": "คำสั่งซื้อที่ส่งคืนหมายถึง status_value = 'ส่งคืนแล้ว'",
        "SQL": "SELECT COUNT(*) FROM order_status AS T1 INNER JOIN order_history AS T2 ON T1.status_id = T2.status_id INNER JOIN cust_order AS T3 ON T3.order_id = T2.order_id INNER JOIN customer AS T4 ON T4.customer_id = T3.customer_id WHERE T1.status_value = 'Returned' AND T4.first_name = 'Antonia' AND T4.last_name = 'Poltun'",
        "table": "['cust_order', 'customer', 'order_history', 'order_status']"
    },
    {
        "question_id": 5962,
        "db_id": "books",
        "question": "List the author's and publisher's name of the book published on July 10, 1997.",
        "evidence": "author's name refers to author_name; publisher's name refers to publisher_name; book published on July 10, 1997 refers to publication_date LIKE '1997-07-10'",
        "question_th": "ระบุชื่อผู้แต่งและผู้จัดพิมพ์หนังสือที่จัดพิมพ์เมื่อวันที่ 10 กรกฎาคม พ.ศ. 2540",
        "evidence_th": "ชื่อผู้แต่งหมายถึง author_name; ชื่อผู้จัดพิมพ์หมายถึงสำนักพิมพ์_ชื่อ; หนังสือที่ตีพิมพ์เมื่อวันที่ 10 กรกฎาคม 1997 อ้างอิงถึงpublication_date LIKE '1997-07-10'",
        "SQL": "SELECT T3.author_name, T4.publisher_name FROM book AS T1 INNER JOIN book_author AS T2 ON T1.book_id = T2.book_id INNER JOIN author AS T3 ON T3.author_id = T2.author_id INNER JOIN publisher AS T4 ON T4.publisher_id = T1.publisher_id WHERE T1.publication_date = '1997-07-10'",
        "table": "['author', 'book', 'book_author', 'publisher']"
    },
    {
        "question_id": 5963,
        "db_id": "books",
        "question": "What is the language of the book with ISBN 23755004321?",
        "evidence": "\"23755004321\" is the isbn13; language refers to language_name",
        "question_th": "หนังสือที่มี ISBN 23755004321 เป็นภาษาอะไร",
        "evidence_th": "\"23755004321\" คือ isbn13; ภาษาหมายถึง language_name",
        "SQL": "SELECT T2.language_name FROM book AS T1 INNER JOIN book_language AS T2 ON T1.language_id = T2.language_id WHERE T1.isbn13 = 23755004321",
        "table": "['book', 'book_language']"
    },
    {
        "question_id": 5964,
        "db_id": "books",
        "question": "What is the title of the most expensive book?",
        "evidence": "most expensive book refers to Max(price)",
        "question_th": "หนังสือที่แพงที่สุดชื่ออะไร?",
        "evidence_th": "หนังสือที่แพงที่สุดหมายถึงแม็กซ์(ราคา)",
        "SQL": "SELECT T1.title FROM book AS T1 INNER JOIN order_line AS T2 ON T1.book_id = T2.book_id ORDER BY T2.price DESC LIMIT 1",
        "table": "['book', 'order_line']"
    },
    {
        "question_id": 5991,
        "db_id": "books",
        "question": "Which year has the most customer orders?",
        "evidence": "year with the most customer orders refers to Max(count(order_id))",
        "question_th": "ปีไหนมีออเดอร์ลูกค้ามากที่สุด?",
        "evidence_th": "ปีที่มีคำสั่งซื้อของลูกค้ามากที่สุดหมายถึง Max(count(order_id))",
        "SQL": "SELECT strftime('%Y', order_date) FROM cust_order GROUP BY strftime('%Y', order_date) ORDER BY COUNT(strftime('%Y', order_date)) DESC LIMIT 1",
        "table": "['cust_order']"
    },
    {
        "question_id": 5993,
        "db_id": "books",
        "question": "List all of the books that were published in 1995.",
        "evidence": "published in 1995 refers to publication_date LIKE '1995%'; ; list of book refers to title",
        "question_th": "รายชื่อหนังสือทั้งหมดที่จัดพิมพ์ในปี 1995",
        "evidence_th": "เผยแพร่ในปี 1995 อ้างถึงสิ่งพิมพ์_วันที่ LIKE '1995%'; - รายชื่อหนังสืออ้างอิงถึงชื่อเรื่อง",
        "SQL": "SELECT title FROM book WHERE STRFTIME('%Y', publication_date) = '1995'",
        "table": "['book']"
    },
    {
        "question_id": 5994,
        "db_id": "books",
        "question": "What is the most common domain for the email address among all the customers?",
        "evidence": "most common domain for the email refers to Max(Count(SUBSTR(email, CHARINDEX('@', email) + 1, length(email) - charindex('@', email))))",
        "question_th": "โดเมนที่ใช้บ่อยที่สุดสำหรับที่อยู่อีเมลของลูกค้าทั้งหมดคืออะไร?",
        "evidence_th": "โดเมนที่พบบ่อยที่สุดสำหรับอีเมลหมายถึง Max(Count(SUBSTR(email, CHARINDEX('@', email) + 1, length(email) - charindex('@', email))))",
        "SQL": "SELECT SUBSTR(email, INSTR(email, '@') + 1, LENGTH(email) - INSTR(email, '@')) AS ym FROM customer GROUP BY SUBSTR(email, INSTR(email, '@') + 1, LENGTH(email) - INSTR(email, '@')) ORDER BY COUNT(*) DESC LIMIT 1",
        "table": "['customer']"
    },
    {
        "question_id": 6003,
        "db_id": "books",
        "question": "How many of the customer addresses are inactive?",
        "evidence": "addresses are inactive refers to address_status = 'Inactive'",
        "question_th": "ที่อยู่ของลูกค้าจำนวนเท่าใดที่ไม่ได้ใช้งาน?",
        "evidence_th": "ที่อยู่ไม่ได้ใช้งานหมายถึง address_status = 'ไม่ใช้งาน'",
        "SQL": "SELECT COUNT(*) FROM customer_address AS T1 INNER JOIN address_status AS T2 ON T1.status_id = T2.status_id WHERE T2.address_status = 'Inactive'",
        "table": "['address_status', 'customer_address']"
    },
    {
        "question_id": 6010,
        "db_id": "books",
        "question": "Other than zero, what is the lowest price paid by a customer for an order?",
        "evidence": "other than 0 refers to price ! = 0; lowest price paid refers to Min(price)",
        "question_th": "นอกเหนือจากศูนย์แล้ว ราคาต่ำสุดที่ลูกค้าจ่ายสำหรับคำสั่งซื้อคือเท่าใด",
        "evidence_th": "นอกเหนือจาก 0 หมายถึงราคา ! = 0; ราคาต่ำสุดที่จ่ายหมายถึงขั้นต่ำ (ราคา)",
        "SQL": "SELECT MIN(price) FROM order_line WHERE price <> 0",
        "table": "['order_line']"
    },
    {
        "question_id": 6018,
        "db_id": "books",
        "question": "What is the most expensive price paid by a customer for the book \"Bite Me If You Can (Argeneau #6)\"?",
        "evidence": "\"Bite Me If You Can (Argeneau #6)\" is the title of the book; most expensive price refers to Max(price)",
        "question_th": "ราคาที่แพงที่สุดที่ลูกค้าจ่ายสำหรับหนังสือ \"Bite Me If You Can (Argeneau #6)\" คืออะไร?",
        "evidence_th": "ชื่อหนังสือ \"Bite Me If You Can (Argeneau #6)\" ราคาที่แพงที่สุดหมายถึงแม็กซ์ (ราคา)",
        "SQL": "SELECT MAX(T2.price) FROM book AS T1 INNER JOIN order_line AS T2 ON T1.book_id = T2.book_id WHERE T1.title = 'Bite Me If You Can (Argeneau #6)'",
        "table": "['book', 'order_line']"
    },
    {
        "question_id": 6044,
        "db_id": "books",
        "question": "What is the average number of pages in the books written by Jennifer Crusie?",
        "evidence": "\"Jennifer Crusie\" is the author_name; average number of pages refers to AVG(num_pages)",
        "question_th": "จำนวนหน้าเฉลี่ยในหนังสือที่เขียนโดย Jennifer Crusie คือเท่าไร?",
        "evidence_th": "\"เจนนิเฟอร์ ครูซี่\" เป็นผู้เขียนชื่อ; จำนวนหน้าเฉลี่ยหมายถึง AVG(num_pages)",
        "SQL": "SELECT AVG(T1.num_pages) FROM book AS T1 INNER JOIN book_author AS T2 ON T1.book_id = T2.book_id INNER JOIN author AS T3 ON T3.author_id = T2.author_id WHERE T3.author_name = 'Jennifer Crusie'",
        "table": "['author', 'book', 'book_author']"
    },
    {
        "question_id": 6045,
        "db_id": "books",
        "question": "What percentage of the orders placed by Kaleena were shipped by the international method?",
        "evidence": "shipped by international method refers to method_name = 'International'; percentage = Divide (Sum(method_name = 'International'), Count(method_name)) * 100",
        "question_th": "คำสั่งซื้อของ Kaleena จัดส่งด้วยวิธีต่างประเทศกี่เปอร์เซ็นต์?",
        "evidence_th": "จัดส่งโดยวิธีระหว่างประเทศหมายถึง method_name = 'International'; เปอร์เซ็นต์ = หาร (ผลรวม (method_name = 'International'), จำนวน (method_name)) * 100",
        "SQL": "SELECT CAST(SUM(CASE WHEN T3.method_name = 'International' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(*) FROM customer AS T1 INNER JOIN cust_order AS T2 ON T1.customer_id = T2.customer_id INNER JOIN shipping_method AS T3 ON T3.method_id = T2.shipping_method_id WHERE T1.first_name = 'Kaleena'",
        "table": "['cust_order', 'customer', 'shipping_method']"
    },
    {
        "question_id": 6050,
        "db_id": "books",
        "question": "Provide the full address of Ursola Purdy.",
        "evidence": "full address refers to street_number, street_name, city, country_name",
        "question_th": "ระบุที่อยู่แบบเต็มของ Ursola Purdy",
        "evidence_th": "ที่อยู่แบบเต็มหมายถึง street_number, street_name, เมือง, Country_name",
        "SQL": "SELECT T3.street_number, T3.street_name, T3.city FROM customer AS T1 INNER JOIN customer_address AS T2 ON T1.customer_id = T2.customer_id INNER JOIN address AS T3 ON T3.address_id = T2.address_id INNER JOIN country AS T4 ON T4.country_id = T3.country_id WHERE T1.first_name = 'Ursola' AND T1.last_name = 'Purdy'",
        "table": "['address', 'country', 'customer', 'customer_address']"
    },
    {
        "question_id": 6057,
        "db_id": "books",
        "question": "How many books were published in 2017?",
        "evidence": "published in 2017 refers to Substr(publication_date,1, 4) = '2017'",
        "question_th": "ในปี 2560 มีหนังสือกี่เล่มที่ตีพิมพ์?",
        "evidence_th": "เผยแพร่ในปี 2560 หมายถึง Substr(publication_date,1, 4) = '2017'",
        "SQL": "SELECT COUNT(*) FROM book WHERE STRFTIME('%Y', publication_date) = '2017'",
        "table": "['book']"
    },
    {
        "question_id": 6078,
        "db_id": "books",
        "question": "Name the title of books written by author A.J.Ayer.",
        "evidence": "\"A.J. Ayer\" is the author_name;",
        "question_th": "ตั้งชื่อชื่อหนังสือที่เขียนโดยผู้แต่ง A.J.Ayer",
        "evidence_th": "\"อ.เจ. เอเยอร์\" คือชื่อผู้แต่ง;",
        "SQL": "SELECT T3.title FROM book_author AS T1 INNER JOIN author AS T2 ON T1.author_id = T2.author_id INNER JOIN book AS T3 ON T3.book_id = T1.book_id WHERE T2.author_name = 'A.J. Ayer'",
        "table": "['author', 'book', 'book_author']"
    },
    {
        "question_id": 6091,
        "db_id": "books",
        "question": "Who ordered the book with the cheapest price?",
        "evidence": "book with cheapest price refers to Min(price); who order means name of customer which refers to first_name, last_name",
        "question_th": "ใครสั่งหนังสือราคาถูกที่สุด?",
        "evidence_th": "หนังสือที่มีราคาถูกที่สุดหมายถึงขั้นต่ำ (ราคา); ผู้ที่สั่งซื้อ หมายถึง ชื่อลูกค้าที่อ้างอิงถึง first_name, Last_name",
        "SQL": "SELECT T3.first_name, T3.last_name FROM order_line AS T1 INNER JOIN cust_order AS T2 ON T2.order_id = T1.order_id INNER JOIN customer AS T3 ON T3.customer_id = T2.customer_id ORDER BY T1.price ASC LIMIT 1",
        "table": "['cust_order', 'customer', 'order_line']"
    },
    {
        "question_id": 6105,
        "db_id": "books",
        "question": "Give the publisher's name of the books authored by Alan Lee.",
        "evidence": "\"Alan Lee\" is the author_name; publisher's name refers to publisher_name",
        "question_th": "แจ้งชื่อผู้จัดพิมพ์หนังสือที่แต่งโดยอลัน ลี",
        "evidence_th": "\"อลัน ลี\" เป็นผู้เขียน_ชื่อ; ชื่อผู้จัดพิมพ์หมายถึงสำนักพิมพ์_ชื่อ",
        "SQL": "SELECT T4.publisher_name FROM book AS T1 INNER JOIN book_author AS T2 ON T1.book_id = T2.book_id INNER JOIN author AS T3 ON T3.author_id = T2.author_id INNER JOIN publisher AS T4 ON T4.publisher_id = T1.publisher_id WHERE T3.author_name = 'Alan Lee' GROUP BY T4.publisher_name",
        "table": "['author', 'book', 'book_author', 'publisher']"
    },
    {
        "question_id": 6106,
        "db_id": "books",
        "question": "What is the sum of the number of pages of the books ordered by Mick Sever?",
        "evidence": "sum of the number of pages refers to Sum(num_pages)",
        "question_th": "หนังสือที่ Mick Sever เรียงลำดับมีจำนวนหน้ารวมเป็นเท่าใด",
        "evidence_th": "ผลรวมของจำนวนหน้าหมายถึงผลรวม (num_pages)",
        "SQL": "SELECT SUM(T1.num_pages) FROM book AS T1 INNER JOIN order_line AS T2 ON T1.book_id = T2.book_id INNER JOIN cust_order AS T3 ON T3.order_id = T2.order_id INNER JOIN customer AS T4 ON T4.customer_id = T3.customer_id WHERE T4.first_name = 'Mick' AND T4.last_name = 'Sever'",
        "table": "['book', 'cust_order', 'customer', 'order_line']"
    },
    {
        "question_id": 6112,
        "db_id": "food_inspection_2",
        "question": "Please list the full names of the sanitarians who did at least one inspection in May, 2010.",
        "evidence": "full name refers to first_name, last_name; in May 2010 refers to inspection_date like '2010-05%'; sanitarian refers to title = 'Sanitarian'",
        "question_th": "โปรดระบุชื่อเต็มของนักสุขาภิบาลที่ทำการตรวจสอบอย่างน้อยหนึ่งครั้งในเดือนพฤษภาคม พ.ศ. 2553",
        "evidence_th": "ชื่อเต็มหมายถึง first_name, Last_name; ในเดือนพฤษภาคม 2010 อ้างอิงถึง inspection_date เช่น '2010-05%'; sanitarian หมายถึง title = 'สุขาภิบาล'",
        "SQL": "SELECT DISTINCT T1.first_name, T1.last_name FROM employee AS T1 INNER JOIN inspection AS T2 ON T1.employee_id = T2.employee_id WHERE strftime('%Y-%m', T2.inspection_date) = '2010-05' AND T1.title = 'Sanitarian'",
        "table": "['employee', 'inspection']"
    },
    {
        "question_id": 6116,
        "db_id": "food_inspection_2",
        "question": "Please list the location coordinates of all the facilities that had an inspection on 2010/5/11.",
        "evidence": "location coordinates refers to latitude, longitude; on 2010/5/11 refers to inspection_date = '2010-05-11'",
        "question_th": "กรุณาระบุพิกัดที่ตั้งของสิ่งอำนวยความสะดวกทั้งหมดที่มีการตรวจสอบเมื่อวันที่ 5/5/54",
        "evidence_th": "พิกัดตำแหน่งหมายถึงละติจูดลองจิจูด ในวันที่ 5/05/54 อ้างถึง inspection_date = '2010-05-11'",
        "SQL": "SELECT DISTINCT T2.latitude, T2.longitude FROM inspection AS T1 INNER JOIN establishment AS T2 ON T1.license_no = T2.license_no WHERE T1.inspection_date = '2010-05-11'",
        "table": "['establishment', 'inspection']"
    },
    {
        "question_id": 6146,
        "db_id": "food_inspection_2",
        "question": "When did Renaldi's Pizza had its first inspection?",
        "evidence": "Renaldi's Pizza refers to dba_name = 'RENALDI''S PIZZA'; first inspection refers to min(inspection_date)",
        "question_th": "Renaldi's Pizza มีการตรวจสอบครั้งแรกเมื่อใด",
        "evidence_th": "Renaldi's Pizza หมายถึง dba_name = 'RENALDI''S PIZZA'; การตรวจสอบครั้งแรกหมายถึงขั้นต่ำ (inspection_date)",
        "SQL": "SELECT MIN(T2.inspection_date) FROM establishment AS T1 INNER JOIN inspection AS T2 ON T1.license_no = T2.license_no WHERE T1.dba_name = 'RENALDI''S PIZZA'",
        "table": "['establishment', 'inspection']"
    },
    {
        "question_id": 6165,
        "db_id": "food_inspection_2",
        "question": "How many restaurants with the highest risk level still passed the inspection?",
        "evidence": "restaurant refers to facility_type = 'Restaurant'; the highest risk level refers to max(risk_level); pass the inspection refers to results = 'Pass'",
        "question_th": "มีร้านอาหารที่มีความเสี่ยงสูงสุดกี่ร้านที่ยังผ่านการตรวจสอบ?",
        "evidence_th": "ร้านอาหาร หมายถึง Facility_type = 'ร้านอาหาร'; ระดับความเสี่ยงสูงสุดหมายถึง max(risk_level); ผ่านการตรวจสอบหมายถึงผลลัพธ์ = 'ผ่าน'",
        "SQL": "SELECT COUNT(DISTINCT T1.license_no) FROM establishment AS T1 INNER JOIN inspection AS T2 ON T1.license_no = T2.license_no WHERE T1.risk_level = 3 AND T2.results = 'Pass' AND T1.facility_type = 'Restaurant'",
        "table": "['establishment', 'inspection']"
    },
    {
        "question_id": 6170,
        "db_id": "food_inspection_2",
        "question": "What is the inspection ID of the inspection with critical point level, $500 fine, and inspector comment \"CDI ON 5-17-10\"?",
        "evidence": "critical point level refers to point_level = 'Critical'; $500 fine refers to fine = 500; inspector comment \"CDI ON 5-17-10\" refers to inspector_comment = 'CDI ON 5-17-10'",
        "question_th": "รหัสการตรวจสอบของการตรวจสอบที่มีระดับจุดวิกฤติคืออะไร ปรับ 500 ดอลลาร์ และความคิดเห็นของผู้ตรวจสอบ \"CDI ON 5-17-10\"",
        "evidence_th": "ระดับจุดวิกฤตหมายถึง point_level = 'วิกฤติ'; ค่าปรับ 500 ดอลลาร์ หมายถึง ค่าปรับ = 500; ความคิดเห็นของผู้ตรวจสอบ \"CDI ON 5-17-10\" หมายถึง inspector_comment = 'CDI ON 5-17-10'",
        "SQL": "SELECT T2.inspection_id FROM inspection_point AS T1 INNER JOIN violation AS T2 ON T1.point_id = T2.point_id WHERE T2.fine = 500 AND T1.point_level = 'Critical' AND T2.inspector_comment = 'CDI ON 5-17-10'",
        "table": "['inspection_point', 'violation']"
    },
    {
        "question_id": 6176,
        "db_id": "food_inspection_2",
        "question": "How many inspections failed in 2014?",
        "evidence": "failed refers to results = 'Fail'; in 2014 refers to inspection_date like '2014%'",
        "question_th": "มีการตรวจสอบล้มเหลวกี่ครั้งในปี 2014?",
        "evidence_th": "ล้มเหลวหมายถึงผลลัพธ์ = 'ล้มเหลว'; ในปี 2014 อ้างถึง inspection_date เช่น '2014%'",
        "SQL": "SELECT COUNT(inspection_id) FROM inspection WHERE strftime('%Y', inspection_date) = '2014' AND results = 'Fail'",
        "table": "['inspection']"
    },
    {
        "question_id": 6177,
        "db_id": "food_inspection_2",
        "question": "Calculate the percentage of inspections with the fine for a minor food safety problem.",
        "evidence": "fine for a minor food safety problem refers to fine = 100; percentage = divide(count(inspection_id where fine = 100), sum(inspection_id)) * 100%",
        "question_th": "คำนวณเปอร์เซ็นต์ของการตรวจสอบพร้อมค่าปรับสำหรับปัญหาด้านความปลอดภัยของอาหารเล็กน้อย",
        "evidence_th": "ค่าปรับสำหรับปัญหาด้านความปลอดภัยของอาหารเล็กน้อย หมายถึง ค่าปรับ = 100; เปอร์เซ็นต์ = หาร (จำนวน (inspection_id โดยที่ค่าปรับ = 100), ผลรวม (inspection_id)) * 100%",
        "SQL": "SELECT CAST(COUNT(CASE WHEN fine = 100 THEN inspection_id END) AS REAL) * 100 / COUNT(inspection_id) FROM violation",
        "table": "['violation']"
    },
    {
        "question_id": 6185,
        "db_id": "food_inspection_2",
        "question": "List the types and results of the inspections done on Riverwalk café.",
        "evidence": "type refers to inspection_type; Riverwalk café refers to facility_type = 'RIVERWALK CAFE'",
        "question_th": "ระบุประเภทและผลการตรวจสอบที่ดำเนินการในร้านกาแฟ Riverwalk",
        "evidence_th": "ประเภทหมายถึง inspection_type; ริเวอร์วอล์ค คาเฟ่ หมายถึง Facility_type = 'RIVERWALK CAFE'",
        "SQL": "SELECT T2.inspection_type, T2.results FROM establishment AS T1 INNER JOIN inspection AS T2 ON T1.license_no = T2.license_no WHERE T1.facility_type = 'RIVERWALK CAFE'",
        "table": "['establishment', 'inspection']"
    },
    {
        "question_id": 6195,
        "db_id": "food_inspection_2",
        "question": "What is the inspection result for inspection done by Thomas Langley?",
        "evidence": "inspection result refers to results",
        "question_th": "ผลการตรวจสอบของ Thomas Langley เป็นอย่างไร",
        "evidence_th": "ผลการตรวจสอบหมายถึงผลลัพธ์",
        "SQL": "SELECT DISTINCT T2.results FROM employee AS T1 INNER JOIN inspection AS T2 ON T1.employee_id = T2.employee_id WHERE T1.first_name = 'Thomas' AND T1.last_name = 'Langley'",
        "table": "['employee', 'inspection']"
    },
    {
        "question_id": 6196,
        "db_id": "food_inspection_2",
        "question": "List down the address of employees who did inspection dated 11/5/2010.",
        "evidence": "dated 11/5/2010 refers to inspection_date = '2010-11-05'",
        "question_th": "ลงรายชื่อที่อยู่ของพนักงานที่เข้าตรวจสอบ ลงวันที่ 5/11/2553",
        "evidence_th": "ลงวันที่ 5/11/2553 อ้างอิงถึง inspection_date = '2010-11-05'",
        "SQL": "SELECT DISTINCT T1.address FROM employee AS T1 INNER JOIN inspection AS T2 ON T1.employee_id = T2.employee_id WHERE T2.inspection_date = '2010-11-05'",
        "table": "['employee', 'inspection']"
    },
    {
        "question_id": 6211,
        "db_id": "food_inspection_2",
        "question": "Name the food businesses that passed the inspection in 2010.",
        "evidence": "business name refers to dba_name; food business refers to restaurant; pass the inspection refers to results = 'Pass'; in 2010 refers to inspection_date like '2010%'",
        "question_th": "รายชื่อธุรกิจอาหารที่ผ่านการตรวจสอบในปี 2553",
        "evidence_th": "ชื่อธุรกิจอ้างถึง dba_name; ธุรกิจอาหารหมายถึงร้านอาหาร ผ่านการตรวจสอบหมายถึงผลลัพธ์ = 'ผ่าน'; ในปี 2010 อ้างถึง inspection_date เช่น '2010%'",
        "SQL": "SELECT DISTINCT T1.dba_name FROM establishment AS T1 INNER JOIN inspection AS T2 ON T1.license_no = T2.license_no WHERE strftime('%Y', T2.inspection_date) = '2010' AND T2.results = 'Pass' AND T1.facility_type = 'Liquor'",
        "table": "['establishment', 'inspection']"
    },
    {
        "question_id": 6215,
        "db_id": "food_inspection_2",
        "question": "Which establishments did Bob Benson inspect in 2010 and what was the results?",
        "evidence": "establishment name refers to dba_name; in 2010 refers to inspection_date like '2010%'",
        "question_th": "Bob Benson ตรวจสอบสถานประกอบการใดบ้างในปี 2010 และผลลัพธ์เป็นอย่างไร",
        "evidence_th": "ชื่อสถานประกอบการอ้างถึง dba_name; ในปี 2010 อ้างถึง inspection_date เช่น '2010%'",
        "SQL": "SELECT DISTINCT T3.dba_name, T2.results FROM employee AS T1 INNER JOIN inspection AS T2 ON T1.employee_id = T2.employee_id INNER JOIN establishment AS T3 ON T2.license_no = T3.license_no WHERE T1.first_name = 'Bob' AND T1.last_name = 'Benson' AND strftime('%Y', T2.inspection_date) = '2010'",
        "table": "['employee', 'establishment', 'inspection']"
    },
    {
        "question_id": 6224,
        "db_id": "food_inspection_2",
        "question": "Among the list of employees, what is the total number of supervisors?",
        "evidence": "supervisor refers to title = 'Supervisor'",
        "question_th": "ในรายชื่อพนักงาน มีหัวหน้างานทั้งหมดกี่คน?",
        "evidence_th": "ผู้บังคับบัญชาหมายถึงชื่อ = 'หัวหน้างาน'",
        "SQL": "SELECT COUNT(employee_id) FROM employee WHERE title = 'Supervisor'",
        "table": "['employee']"
    },
    {
        "question_id": 6226,
        "db_id": "food_inspection_2",
        "question": "How many employees are living in Hoffman Estates, IL?",
        "evidence": "in Hoffman Estates refers to city = 'Hoffman Estates'; IL refers to state = 'IL'",
        "question_th": "มีพนักงานกี่คนที่อาศัยอยู่ใน Hoffman Estates, IL",
        "evidence_th": "ใน Hoffman Estates หมายถึงเมือง = 'Hoffman Estates'; IL หมายถึงสถานะ = 'IL'",
        "SQL": "SELECT COUNT(employee_id) FROM employee WHERE state = 'IL' AND city = 'Hoffman Estates'",
        "table": "['employee']"
    },
    {
        "question_id": 6253,
        "db_id": "coinmarketcap",
        "question": "For all transactions for WRAP in August 2016, list the time to achieve highest price and the time to achieve the lowest price.",
        "evidence": "in May 2013 refers to month(date) = 5 AND year(date) = 2013; time to achieve the highest price refers to time_high; time to achieve the lowest price refers to time_low; WRAP refers to name = 'WARP'",
        "question_th": "สำหรับธุรกรรมทั้งหมดสำหรับ WRAP ในเดือนสิงหาคม 2559 ให้ระบุเวลาที่จะได้ราคาสูงสุดและเวลาที่จะได้ราคาต่ำสุด",
        "evidence_th": "ในเดือนพฤษภาคม 2556 หมายถึง เดือน (วันที่) = 5 และ ปี (วันที่) = 2556; เวลาในการบรรลุราคาสูงสุดหมายถึง time_high; เวลาที่บรรลุราคาต่ำสุดหมายถึง time_low; WRAP หมายถึงชื่อ = 'WARP'",
        "SQL": "SELECT T2.time_high, T2.time_low, T2.date FROM coins AS T1 INNER JOIN historical AS T2 ON T1.id = T2.coin_id WHERE T1.name = 'WARP' AND STRFTIME('%Y-%m', T2.date) = '2016-08'",
        "table": "['coins', 'historical']"
    },
    {
        "question_id": 6257,
        "db_id": "coinmarketcap",
        "question": "List all the inactive coins and state the last date of its transaction?",
        "evidence": "the last date refers to max(date); inactive coins refers to status = 'inactive'",
        "question_th": "แสดงรายการเหรียญที่ไม่ได้ใช้งานทั้งหมดและระบุวันสุดท้ายของการทำธุรกรรมหรือไม่",
        "evidence_th": "วันสุดท้ายหมายถึงสูงสุด (วันที่); เหรียญที่ไม่ได้ใช้งานหมายถึงสถานะ = 'ไม่ได้ใช้งาน'",
        "SQL": "SELECT T1.NAME, MAX(T2.DATE) FROM coins AS T1 INNER JOIN historical AS T2 ON T1.ID = T2.coin_id WHERE T1.status = 'inactive' ORDER BY T2.DATE DESC LIMIT 1",
        "table": "['coins', 'historical']"
    },
    {
        "question_id": 6259,
        "db_id": "coinmarketcap",
        "question": "State the transaction date and the price when Bitcoin was bottomed?",
        "evidence": "was bottomed refers to min(price)",
        "question_th": "ระบุวันที่ทำธุรกรรมและราคาเมื่อ Bitcoin ถึงจุดต่ำสุด?",
        "evidence_th": "จุดต่ำสุดหมายถึงขั้นต่ำ (ราคา)",
        "SQL": "SELECT T2.date, T2.price FROM coins AS T1 INNER JOIN historical AS T2 ON T1.id = T2.coin_id WHERE T1.name = 'Bitcoin' ORDER BY T2.price LIMIT 1",
        "table": "['coins', 'historical']"
    },
    {
        "question_id": 6269,
        "db_id": "coinmarketcap",
        "question": "What was the max profit a user can make on Bitcoin on 2013/4/28?",
        "evidence": "the max profit = subtract(high, low); on 2013/4/28 refers to date = '2013-04-28'",
        "question_th": "กำไรสูงสุดที่ผู้ใช้สามารถสร้างรายได้จาก Bitcoin ในวันที่ 28/4/2556 คือเท่าใด?",
        "evidence_th": "กำไรสูงสุด = ลบ (สูง, ต่ำ); วันที่ 28/4/2556 หมายถึง วันที่ = '28-04-2556'",
        "SQL": "SELECT T2.high - T2.low FROM coins AS T1 INNER JOIN historical AS T2 ON T1.id = T2.coin_id WHERE T2.date = '2013-04-28' AND T1.name = 'Bitcoin'",
        "table": "['coins', 'historical']"
    },
    {
        "question_id": 6278,
        "db_id": "coinmarketcap",
        "question": "Please list the names of coins that has been disappeared.",
        "evidence": "has disappeared refers to status = 'extinct'",
        "question_th": "กรุณาระบุชื่อเหรียญที่หายไป",
        "evidence_th": "ได้หายไปหมายถึงสถานะ = 'สูญพันธุ์'",
        "SQL": "SELECT name FROM coins WHERE status = 'extinct'",
        "table": "['coins']"
    },
    {
        "question_id": 6308,
        "db_id": "retail_world",
        "question": "The sales of how many territories in total do the employees in London take charge of?",
        "evidence": "London refers to city = 'London';",
        "question_th": "พนักงานในลอนดอนรับผิดชอบการขายทั้งหมดกี่เขต",
        "evidence_th": "ลอนดอนหมายถึงเมือง = 'ลอนดอน';",
        "SQL": "SELECT COUNT(T2.TerritoryID) FROM Employees AS T1 INNER JOIN EmployeeTerritories AS T2 ON T1.EmployeeID = T2.EmployeeID WHERE T1.City = 'London'",
        "table": "['EmployeeTerritories', 'Employees']"
    },
    {
        "question_id": 6336,
        "db_id": "retail_world",
        "question": "Give the name of the territory where Mr. Robert King works.",
        "evidence": "name of territory refers to TerritoryDescription; Mr. refers to TitleOfCourtesy = 'Mr';",
        "question_th": "ระบุชื่อเขตแดนที่คุณโรเบิร์ต คิงทำงาน",
        "evidence_th": "ชื่อของอาณาเขตหมายถึง TerritoryDescription; นาย อ้างถึง TitleOfCourtesy = 'นาย';",
        "SQL": "SELECT T3.TerritoryDescription FROM Employees AS T1 INNER JOIN EmployeeTerritories AS T2 ON T1.EmployeeID = T2.EmployeeID INNER JOIN Territories AS T3 ON T2.TerritoryID = T3.TerritoryID WHERE T1.TitleOfCourtesy = 'Mr.' AND T1.FirstName = 'Robert' AND T1.LastName = 'King'",
        "table": "['EmployeeTerritories', 'Employees', 'Territories']"
    },
    {
        "question_id": 6339,
        "db_id": "retail_world",
        "question": "Give the home phone number of the employee who is in charge of \"Savannah\" territory.",
        "evidence": "home phone number refers to HomePhone; Savannah refers to TerritoryDescription = 'Savannah';",
        "question_th": "แจ้งหมายเลขโทรศัพท์บ้านของพนักงานที่รับผิดชอบเขต \"สะวันนา\"",
        "evidence_th": "หมายเลขโทรศัพท์บ้านหมายถึงโทรศัพท์บ้าน สะวันนา หมายถึง TerritoryDescription = 'สะวันนา';",
        "SQL": "SELECT T1.HomePhone FROM Employees AS T1 INNER JOIN EmployeeTerritories AS T2 ON T1.EmployeeID = T2.EmployeeID INNER JOIN Territories AS T3 ON T2.TerritoryID = T3.TerritoryID WHERE T3.TerritoryDescription = 'Savannah'",
        "table": "['EmployeeTerritories', 'Employees', 'Territories']"
    },
    {
        "question_id": 6343,
        "db_id": "retail_world",
        "question": "Give the number of orders that were shipped by \"Federal Shipping\".",
        "evidence": "Federal Shipping refers to CompanyName = 'Federal Shipping';",
        "question_th": "ระบุจำนวนคำสั่งซื้อที่จัดส่งโดย \"Federal Shipping\"",
        "evidence_th": "Federal Shipping หมายถึง CompanyName = 'Federal Shipping';",
        "SQL": "SELECT COUNT(T1.OrderID) FROM Orders AS T1 INNER JOIN Shippers AS T2 ON T1.ShipVia = T2.ShipperID WHERE T2.CompanyName = 'Federal Shipping'",
        "table": "['Orders', 'Shippers']"
    },
    {
        "question_id": 6348,
        "db_id": "retail_world",
        "question": "How many kinds of products are supplied by \"Karkki Oy\" company?",
        "evidence": "supplied by refers to CompanyName",
        "question_th": "บริษัท \"Karkki Oy\" เป็นผู้จัดหาผลิตภัณฑ์กี่ประเภท?",
        "evidence_th": "จัดทำโดยอ้างถึงชื่อบริษัท",
        "SQL": "SELECT COUNT(T1.ProductID) FROM Products AS T1 INNER JOIN Suppliers AS T2 ON T1.SupplierID = T2.SupplierID WHERE T2.CompanyName = 'Karkki Oy'",
        "table": "['Products', 'Suppliers']"
    },
    {
        "question_id": 6349,
        "db_id": "retail_world",
        "question": "Give the contact name of the supplier for the product \"Gudbrandsdalsost\".",
        "evidence": "product refers to ProductName",
        "question_th": "ระบุชื่อผู้ติดต่อของซัพพลายเออร์สำหรับผลิตภัณฑ์ \"Gudbrandsdalsost\"",
        "evidence_th": "สินค้าหมายถึงชื่อผลิตภัณฑ์",
        "SQL": "SELECT T2.ContactName FROM Products AS T1 INNER JOIN Suppliers AS T2 ON T1.SupplierID = T2.SupplierID WHERE T1.ProductName = 'Gudbrandsdalsost'",
        "table": "['Products', 'Suppliers']"
    },
    {
        "question_id": 6351,
        "db_id": "retail_world",
        "question": "Give the number of territories in the \"Northern\" region.",
        "evidence": "\"Northern\" region refers to RegionDescription = 'Northern'",
        "question_th": "ระบุจำนวนดินแดนในภูมิภาค \"ภาคเหนือ\"",
        "evidence_th": "ภูมิภาค \"ภาคเหนือ\" หมายถึง RegionDescription = 'ภาคเหนือ'",
        "SQL": "SELECT COUNT(T1.TerritoryID) FROM Territories AS T1 INNER JOIN Region AS T2 ON T1.RegionID = T2.RegionID WHERE T2.RegionDescription = 'Northern'",
        "table": "['Region', 'Territories']"
    },
    {
        "question_id": 6362,
        "db_id": "retail_world",
        "question": "What is the full name of the employee with the highest salary?",
        "evidence": "full name refers to FirstName LastName; highest salary refers to max(Salary)",
        "question_th": "ชื่อเต็มของพนักงานที่ได้รับเงินเดือนสูงสุดคืออะไร?",
        "evidence_th": "ชื่อเต็มหมายถึงชื่อ นามสกุล; เงินเดือนสูงสุดหมายถึงสูงสุด (เงินเดือน)",
        "SQL": "SELECT FirstName, LastName FROM Employees WHERE Salary = ( SELECT MAX(Salary) FROM Employees )",
        "table": "['Employees']"
    },
    {
        "question_id": 6385,
        "db_id": "retail_world",
        "question": "List the company names of customers from the city with the most customers.",
        "evidence": "most customers refers to max(count(Relationship))",
        "question_th": "รายชื่อบริษัทลูกค้าจากเมืองที่มีลูกค้ามากที่สุด",
        "evidence_th": "ลูกค้าส่วนใหญ่อ้างถึงสูงสุด (จำนวน (ความสัมพันธ์))",
        "SQL": "SELECT CompanyName FROM `Customer and Suppliers by City` WHERE CITY = ( SELECT City FROM `Customer and Suppliers by City` GROUP BY City ORDER BY COUNT(Relationship) DESC LIMIT 1 )",
        "table": "['Customer']"
    },
    {
        "question_id": 6386,
        "db_id": "retail_world",
        "question": "Find and list the company name, company contact name, and contact title of customers from Madrid.",
        "evidence": "from Madrid refers to City = 'Madrid'",
        "question_th": "ค้นหาและแสดงรายการชื่อบริษัท ชื่อผู้ติดต่อของบริษัท และตำแหน่งผู้ติดต่อของลูกค้าจากมาดริด",
        "evidence_th": "จากมาดริดหมายถึงเมือง = 'มาดริด'",
        "SQL": "SELECT CompanyName, ContactName, ContactTitle FROM Customers WHERE City = 'Madrid'",
        "table": "['Customers']"
    },
    {
        "question_id": 6395,
        "db_id": "retail_world",
        "question": "Of the customers who are from Canada, how many used Federal Shipping?",
        "evidence": "from Canada refers to Country = 'Canada'; Federal Shipping refers to ShipName = 'Federal Shipping'",
        "question_th": "ของลูกค้าที่มาจากแคนาดา มีกี่คนที่ใช้บริการ Federal Shipping?",
        "evidence_th": "จากแคนาดาหมายถึงประเทศ = 'แคนาดา'; Federal Shipping หมายถึง ShipName = 'Federal Shipping'",
        "SQL": "SELECT COUNT(T3.CustomerID) FROM Shippers AS T1 INNER JOIN Orders AS T2 ON T1.ShipperID = T2.ShipVia INNER JOIN Customers AS T3 ON T2.CustomerID = T3.CustomerID WHERE T2.ShipName = 'Federal Shipping'",
        "table": "['Customers', 'Orders', 'Shippers']"
    },
    {
        "question_id": 6413,
        "db_id": "retail_world",
        "question": "Indicate the name of the products that have been shipped to the city of Paris.",
        "evidence": "shipped to the city of Paris refers to ShipCity = 'Paris';",
        "question_th": "ระบุชื่อผลิตภัณฑ์ที่จัดส่งไปยังเมืองปารีส",
        "evidence_th": "ส่งไปยังเมืองปารีสหมายถึง ShipCity = 'Paris';",
        "SQL": "SELECT T3.ProductName FROM Orders AS T1 INNER JOIN `Order Details` AS T2 ON T1.OrderID = T2.OrderID INNER JOIN Products AS T3 ON T2.ProductID = T3.ProductID WHERE T1.ShipCity = 'Paris'",
        "table": "['Order', 'Orders']"
    },
    {
        "question_id": 6414,
        "db_id": "retail_world",
        "question": "What product is the least shipped to the postal code 28023?",
        "evidence": "the least shipped product refers ProductName where MIN(Quantity);",
        "question_th": "สินค้าใดจัดส่งน้อยที่สุดไปยังรหัสไปรษณีย์ 28023",
        "evidence_th": "สินค้าที่จัดส่งน้อยที่สุดหมายถึง ProductName โดยที่ MIN(Quantity);",
        "SQL": "SELECT T4.ProductName FROM Customers AS T1 INNER JOIN Orders AS T2 ON T1.CustomerID = T2.CustomerID INNER JOIN `Order Details` AS T3 ON T2.OrderID = T3.OrderID INNER JOIN Products AS T4 ON T3.ProductID = T4.ProductID WHERE T1.PostalCode = 28023 ORDER BY T3.Quantity LIMIT 1",
        "table": "['Customers', 'Order', 'Orders']"
    },
    {
        "question_id": 6415,
        "db_id": "retail_world",
        "question": "What is the full name of the employee in charge of the Southern region who is to report to Andrew Fuller?",
        "evidence": "full names = FirstName, LastName; report to represents a hierarchical relationship where the person being reported to is usually the direct supervisor of the reporter; Andrew Fuller refers to Employees WHERE FirstName = 'Andrew' AND LastName = 'Fuller'; Southern region refers to RegionDescription = 'Southern';",
        "question_th": "ชื่อเต็มของพนักงานที่รับผิดชอบภาคใต้ที่จะรายงานต่อแอนดรูว์ฟูลเลอร์คืออะไร?",
        "evidence_th": "ชื่อเต็ม = ชื่อ, นามสกุล; รายงานที่แสดงถึงความสัมพันธ์แบบลำดับชั้นโดยที่บุคคลที่ถูกรายงานมักจะเป็นผู้บังคับบัญชาโดยตรงของผู้รายงาน Andrew Fuller หมายถึง พนักงาน โดยที่ FirstName = 'Andrew' และ LastName = 'Fuller'; ภาคใต้ หมายถึง RegionDescription = 'ภาคใต้';",
        "SQL": "SELECT DISTINCT T1.FirstName, T1.LastName FROM Employees AS T1 INNER JOIN EmployeeTerritories AS T2 ON T1.EmployeeID = T2.EmployeeID INNER JOIN Territories AS T3 ON T2.TerritoryID = T3.TerritoryID INNER JOIN Region AS T4 ON T3.RegionID = T4.RegionID WHERE T4.RegionDescription = 'Southern' AND T1.ReportsTo = ( SELECT EmployeeID FROM Employees WHERE FirstName = 'Andrew' AND LastName = 'Fuller' )",
        "table": "['EmployeeTerritories', 'Employees', 'Region', 'Territories']"
    },
    {
        "question_id": 6437,
        "db_id": "retail_world",
        "question": "Please name any two products that have the highest satisfaction levels among users of Heli Swaren GmbH & Co. KG.",
        "evidence": "High reorder level generally means high user satisfaction; the highest satisfaction levels refer to MAX(ReorderLevel); two products refer to ProductName LIMIT 2; CompanyName = 'Heli Swaren GmbH & Co. KG';",
        "question_th": "โปรดระบุชื่อผลิตภัณฑ์สองรายการที่มีระดับความพึงพอใจสูงสุดในหมู่ผู้ใช้ Heli Swaren GmbH & Co. KG",
        "evidence_th": "โดยทั่วไปแล้ว ระดับการสั่งซื้อใหม่ที่สูงหมายถึงความพึงพอใจของผู้ใช้ที่สูง ระดับความพึงพอใจสูงสุดหมายถึง MAX(ReorderLevel); ผลิตภัณฑ์สองรายการอ้างถึง ProductName LIMIT 2; ชื่อบริษัท = 'Heli Swaren GmbH & Co. KG';",
        "SQL": "SELECT T1.ProductName FROM Products AS T1 INNER JOIN Suppliers AS T2 ON T1.SupplierID = T2.SupplierID WHERE T2.CompanyName = 'Heli Swaren GmbH & Co. KG' ORDER BY T1.ReorderLevel DESC LIMIT 2",
        "table": "['Products', 'Suppliers']"
    },
    {
        "question_id": 6451,
        "db_id": "retail_world",
        "question": "How many orders did \"Laughing Bacchus Wine Cellars\" make?",
        "evidence": "\"Laughing Bacchus Wine Cellars\" is the name of the company; orders refer to OrderID;",
        "question_th": "\"ห้องเก็บไวน์ Laughing Bacchus\" สั่งทำได้กี่ออเดอร์",
        "evidence_th": "ชื่อบริษัทคือ \"Laughing Bacchus Wine Cellars\" คำสั่งซื้ออ้างถึง OrderID;",
        "SQL": "SELECT COUNT(T2.OrderID) FROM Customers AS T1 INNER JOIN Orders AS T2 ON T1.CustomerID = T2.CustomerID WHERE T1.CompanyName = 'Laughing Bacchus Wine Cellars'",
        "table": "['Customers', 'Orders']"
    },
    {
        "question_id": 6504,
        "db_id": "retail_world",
        "question": "Please list the full names and titles of all employees.",
        "evidence": "full name refers to LastName, FirstName",
        "question_th": "กรุณาระบุชื่อเต็มและตำแหน่งของพนักงานทุกคน",
        "evidence_th": "ชื่อเต็มหมายถึงนามสกุล, ชื่อ",
        "SQL": "SELECT FirstName, LastName, Title FROM Employees",
        "table": "['Employees']"
    },
    {
        "question_id": 6505,
        "db_id": "retail_world",
        "question": "Who has the highest salary? Please give their first name.",
        "evidence": "highest salary refers to Max(Salary)",
        "question_th": "ใครมีเงินเดือนสูงสุด? โปรดระบุชื่อของพวกเขา",
        "evidence_th": "เงินเดือนสูงสุดหมายถึงสูงสุด (เงินเดือน)",
        "SQL": "SELECT FirstName, LastName FROM Employees WHERE Salary = ( SELECT MAX(Salary) FROM Employees )",
        "table": "['Employees']"
    },
    {
        "question_id": 6508,
        "db_id": "retail_world",
        "question": "Which company had the most orders in 1998?",
        "evidence": "in 1998 refers to YEAR (OrderDate) = 1998; most orders = Max(Count(CustomerID)); company refers to CompanyName",
        "question_th": "บริษัทใดมีคำสั่งซื้อมากที่สุดในปี 2541?",
        "evidence_th": "ในปี 1998 หมายถึง YEAR (OrderDate) = 1998; คำสั่งซื้อส่วนใหญ่ = Max(Count(CustomerID)); บริษัท หมายถึง ชื่อบริษัท",
        "SQL": "SELECT T1.CompanyName FROM Customers AS T1 INNER JOIN Orders AS T2 ON T1.CustomerID = T2.CustomerID WHERE STRFTIME('%Y', T2.OrderDate) = '1998' GROUP BY T1.CompanyName ORDER BY COUNT(T2.OrderID) DESC LIMIT 1",
        "table": "['Customers', 'Orders']"
    },
    {
        "question_id": 6517,
        "db_id": "retail_world",
        "question": "In August of 1996, how many orders were placed by the customer with the highest amount of orders?",
        "evidence": "August of 1996 refers to OrderDate = '1996-8'; highest amount of orders refers to MAX(COUNT(OrderID))",
        "question_th": "ในเดือนสิงหาคม พ.ศ. 2539 ลูกค้ามีคำสั่งซื้อจำนวนเท่าใดและมียอดสั่งซื้อสูงสุด?",
        "evidence_th": "สิงหาคม 2539 อ้างถึง OrderDate = '1996-8'; จำนวนคำสั่งซื้อสูงสุดหมายถึง MAX(COUNT(OrderID))",
        "SQL": "SELECT COUNT(OrderID) FROM Orders WHERE OrderDate LIKE '1996-08%' GROUP BY CustomerID ORDER BY COUNT(OrderID) DESC LIMIT 1",
        "table": "['Orders']"
    },
    {
        "question_id": 6527,
        "db_id": "retail_world",
        "question": "What is the company name of the supplier who supplies the product with the highest unit price?",
        "evidence": "the highest unit price refers to MAX(UnitPrice);",
        "question_th": "ชื่อบริษัทของซัพพลายเออร์ที่จัดหาผลิตภัณฑ์ในราคาต่อหน่วยสูงสุดคืออะไร?",
        "evidence_th": "ราคาต่อหน่วยสูงสุดหมายถึง MAX(UnitPrice);",
        "SQL": "SELECT T2.CompanyName FROM Products AS T1 INNER JOIN Suppliers AS T2 ON T1.SupplierID = T2.SupplierID WHERE T1.UnitPrice = ( SELECT MAX(UnitPrice) FROM Products )",
        "table": "['Products', 'Suppliers']"
    },
    {
        "question_id": 6529,
        "db_id": "retail_world",
        "question": "Who are the top 8 suppliers supplying the products with the highest user satisfaction?",
        "evidence": "highest user satisfaction refers to max(ReorderLevel);",
        "question_th": "ใครคือซัพพลายเออร์ 8 อันดับแรกที่จัดหาผลิตภัณฑ์ที่สร้างความพึงพอใจให้กับผู้ใช้สูงสุด?",
        "evidence_th": "ความพึงพอใจของผู้ใช้สูงสุดหมายถึงสูงสุด (ReorderLevel);",
        "SQL": "SELECT T2.CompanyName FROM Products AS T1 INNER JOIN Suppliers AS T2 ON T1.SupplierID = T2.SupplierID ORDER BY T1.ReorderLevel DESC LIMIT 8",
        "table": "['Products', 'Suppliers']"
    },
    {
        "question_id": 6537,
        "db_id": "retail_world",
        "question": "Provide the territory IDs under employee ID of 7.",
        "evidence": "",
        "question_th": "ระบุรหัสอาณาเขตภายใต้รหัสพนักงานเป็น 7",
        "evidence_th": "",
        "SQL": "SELECT TerritoryID FROM EmployeeTerritories WHERE EmployeeID = 7",
        "table": "['EmployeeTerritories']"
    },
    {
        "question_id": 6560,
        "db_id": "retail_world",
        "question": "Calculate the total production for each product which were supplied from Japan",
        "evidence": "from Japan refers to Country = 'Japan'; total production refers to ADD(UnitsInstock, UnitsOnOrder)",
        "question_th": "คำนวณการผลิตรวมของผลิตภัณฑ์แต่ละรายการที่จัดหาจากญี่ปุ่น",
        "evidence_th": "จากประเทศญี่ปุ่นหมายถึงประเทศ = 'ญี่ปุ่น'; การผลิตทั้งหมดหมายถึง ADD(UnitsInstock, UnitsOnOrder)",
        "SQL": "SELECT SUM(T1.UnitsInStock + T1.UnitsOnOrder) FROM Products AS T1 INNER JOIN Suppliers AS T2 ON T1.SupplierID = T2.SupplierID WHERE T2.Country = 'Japan'",
        "table": "['Products', 'Suppliers']"
    },
    {
        "question_id": 6564,
        "db_id": "retail_world",
        "question": "Among the products under grains/cereals category, provide the contact person and title of the supplier with one digit ID.",
        "evidence": "grains/cereals category refers to CategoryName = 'Grains/Cereals'; supplier with one digit ID refers to SupplierID between 1 and 10;",
        "question_th": "ในบรรดาผลิตภัณฑ์ที่อยู่ในหมวดหมู่ธัญพืช/ธัญพืช ให้ระบุหมายเลขติดต่อและตำแหน่งของซัพพลายเออร์ด้วยรหัสหนึ่งหลัก",
        "evidence_th": "หมวดหมู่ธัญพืช/ซีเรียล หมายถึง CategoryName = 'ธัญพืช/ธัญพืช'; ซัพพลายเออร์ที่มี ID หนึ่งหลักหมายถึง SupplierID ระหว่าง 1 ถึง 10",
        "SQL": "SELECT DISTINCT T1.ContactName, T1.ContactTitle FROM Suppliers AS T1 INNER JOIN Products AS T2 ON T1.SupplierID = T2.SupplierID INNER JOIN Categories AS T3 ON T2.CategoryID = T3.CategoryID WHERE T3.CategoryName = 'Grains/Cereals' AND T1.SupplierID BETWEEN 1 AND 10 LIMIT 1",
        "table": "['Categories', 'Products', 'Suppliers']"
    },
    {
        "question_id": 6565,
        "db_id": "retail_world",
        "question": "Provide Speedy Express's phone number and number of shipped orders on 30th January, 1998.",
        "evidence": "Speedy Express's refers to CompanyName = 'Speedy Express'; orders on 30th January, 1998 refers to ShippedDate = '1998-01-30 00:00:00'",
        "question_th": "ระบุหมายเลขโทรศัพท์ของ Speedy Express และจำนวนคำสั่งซื้อที่จัดส่งในวันที่ 30 มกราคม 1998",
        "evidence_th": "Speedy Express อ้างอิงถึง CompanyName = 'Speedy Express'; คำสั่งซื้อวันที่ 30 มกราคม 1998 อ้างอิงถึง ShippedDate = '1998-01-30 00:00:00'",
        "SQL": "SELECT T2.Phone, COUNT(T1.OrderID) FROM Orders AS T1 INNER JOIN Shippers AS T2 ON T1.ShipVia = T2.ShipperID WHERE T2.CompanyName = 'Speedy Express' AND T1.ShippedDate LIKE '1998-01-30%' GROUP BY T2.Phone",
        "table": "['Orders', 'Shippers']"
    },
    {
        "question_id": 6566,
        "db_id": "retail_world",
        "question": "Describe the ordered products which were the most overdue from required date.",
        "evidence": "the most overdue from required date refers to MIN(SUBTRACT(ShippedDate, RequiredDate) < 0)",
        "question_th": "อธิบายสินค้าที่สั่งซึ่งเกินกำหนดชำระมากที่สุดจากวันที่กำหนด",
        "evidence_th": "เกินกำหนดชำระมากที่สุดจากวันที่กำหนดหมายถึง MIN(SUBTRACT(ShippedDate, RequiredDate) < 0)",
        "SQL": "SELECT DISTINCT T3.ProductName FROM Orders AS T1 INNER JOIN `Order Details` AS T2 ON T1.OrderID = T2.OrderID INNER JOIN Products AS T3 ON T2.ProductID = T3.ProductID WHERE DATEDIFF(T1.ShippedDate, T1.RequiredDate) < 0",
        "table": "['Order', 'Orders']"
    },
    {
        "question_id": 6572,
        "db_id": "retail_world",
        "question": "Identify the number of employees in Northern sales region.",
        "evidence": "Northern sales region refers to RegionDescription = 'Northern'",
        "question_th": "ระบุจำนวนพนักงานในพื้นที่ขายภาคเหนือ",
        "evidence_th": "ภูมิภาคการขายภาคเหนือหมายถึง RegionDescription = 'ภาคเหนือ'",
        "SQL": "SELECT COUNT(T2.EmployeeID) FROM Territories AS T1 INNER JOIN EmployeeTerritories AS T2 ON T1.TerritoryID = T2.TerritoryID INNER JOIN Region AS T3 ON T1.RegionID = T3.RegionID WHERE T3.RegionDescription = 'Northern'",
        "table": "['EmployeeTerritories', 'Region', 'Territories']"
    },
    {
        "question_id": 6591,
        "db_id": "retail_world",
        "question": "Indicate which company is located in France?",
        "evidence": "company refers to CompanyName; France is a country",
        "question_th": "ระบุว่าบริษัทใดตั้งอยู่ในประเทศฝรั่งเศส",
        "evidence_th": "บริษัท หมายถึง ชื่อบริษัท; ฝรั่งเศสเป็นประเทศ",
        "SQL": "SELECT CompanyName FROM Customers WHERE Country = 'France'",
        "table": "['Customers']"
    },
    {
        "question_id": 6606,
        "db_id": "retail_world",
        "question": "Write the shipping company name with the telephone number of (503) 555-9931.",
        "evidence": "telephone number of (503) 555-9931 refers to Phone = '(503) 555-9931'",
        "question_th": "เขียนชื่อบริษัทขนส่งพร้อมหมายเลขโทรศัพท์ (503) 555-9931",
        "evidence_th": "หมายเลขโทรศัพท์ของ (503) 555-9931 หมายถึง โทรศัพท์ = '(503) 555-9931'",
        "SQL": "SELECT CompanyName FROM Shippers WHERE Phone = '(503) 555-9931'",
        "table": "['Shippers']"
    },
    {
        "question_id": 6614,
        "db_id": "retail_world",
        "question": "Name the products where the suppliers come from Finland.",
        "evidence": "Finland' is a Country; product refers to ProductName; suppliers refers to SupplierID",
        "question_th": "ตั้งชื่อผลิตภัณฑ์ที่ซัพพลายเออร์มาจากฟินแลนด์",
        "evidence_th": "ฟินแลนด์'เป็นประเทศ สินค้าหมายถึงชื่อผลิตภัณฑ์; ซัพพลายเออร์หมายถึง SupplierID",
        "SQL": "SELECT T1.ProductName FROM Products AS T1 INNER JOIN Suppliers AS T2 ON T1.SupplierID = T2.SupplierID WHERE T2.Country = 'Finland'",
        "table": "['Products', 'Suppliers']"
    },
    {
        "question_id": 6621,
        "db_id": "retail_world",
        "question": "How many territory fall into region 1?",
        "evidence": "region 1 refers to RegionID = 1\n\n",
        "question_th": "มีกี่ดินแดนที่อยู่ในภูมิภาค 1?",
        "evidence_th": "ภูมิภาค 1 หมายถึง RegionID = 1\n\n",
        "SQL": "SELECT COUNT(TerritoryID) FROM Territories WHERE RegionID = 1",
        "table": "['Territories']"
    },
    {
        "question_id": 6625,
        "db_id": "retail_world",
        "question": "How many employees from USA with Sales Representative title?",
        "evidence": "from USA refers to Country = 'USA'",
        "question_th": "มีพนักงานจากสหรัฐอเมริกาที่มีตำแหน่งตัวแทนฝ่ายขายกี่คน?",
        "evidence_th": "จาก USA หมายถึง Country = 'USA'",
        "SQL": "SELECT COUNT(Country) FROM Employees WHERE Country = 'USA' AND Title = 'Sales Representative'",
        "table": "['Employees']"
    },
    {
        "question_id": 6637,
        "db_id": "retail_world",
        "question": "What are the most popular confections product and calculate the total sales generated by this product?",
        "evidence": "most popular confections product refers to ProductID = max(count(MULTIPLY(Quantity, UnitPrice))) from CategoryName = 'Confections' ;  total sales refers to sum(MULTIPLY(Quantity, UnitPrice))",
        "question_th": "ผลิตภัณฑ์ขนมหวานที่ได้รับความนิยมมากที่สุดคืออะไรและคำนวณยอดขายรวมที่เกิดจากผลิตภัณฑ์นี้",
        "evidence_th": "ผลิตภัณฑ์ขนมหวานยอดนิยมอ้างถึง ProductID = max(count(MULTIPLY(Quantity, UnitPrice))) จาก CategoryName = 'Confections' ;  ยอดขายรวมหมายถึงผลรวม (คูณ (ปริมาณ, ราคาต่อหน่วย))",
        "SQL": "SELECT COUNT(T1.UnitPrice * T3.Quantity) FROM Products AS T1 INNER JOIN Categories AS T2 ON T1.CategoryID = T2.CategoryID INNER JOIN `Order Details` AS T3 ON T1.ProductID = T3.ProductID WHERE T2.CategoryName = 'Confections' GROUP BY T3.Quantity ORDER BY T3.Quantity DESC LIMIT 1",
        "table": "['Categories', 'Order', 'Products']"
    },
    {
        "question_id": 6652,
        "db_id": "retail_world",
        "question": "Among the product lists in order ID 10337, write down the product names and suppliers which had the highest in reorder level.",
        "evidence": "suppliers refers to CompanyName; highest in reorder level refers to Max(ReorderLevel)",
        "question_th": "ในรายการผลิตภัณฑ์ในรหัสคำสั่งซื้อ 10337 ให้จดชื่อผลิตภัณฑ์และซัพพลายเออร์ที่มีระดับการสั่งซื้อสูงสุดใหม่",
        "evidence_th": "ซัพพลายเออร์หมายถึงชื่อบริษัท สูงสุดในระดับการเรียงลำดับใหม่หมายถึงสูงสุด (ReorderLevel)",
        "SQL": "SELECT T2.ProductName, T1.CompanyName FROM Suppliers AS T1 INNER JOIN Products AS T2 ON T1.SupplierID = T2.SupplierID INNER JOIN `Order Details` AS T3 ON T2.ProductID = T3.ProductID WHERE T3.OrderID = 10337 ORDER BY T2.ReorderLevel DESC LIMIT 1",
        "table": "['Order', 'Products', 'Suppliers']"
    },
    {
        "question_id": 6664,
        "db_id": "retail_world",
        "question": "Calculate the percentage salary of employees who handled orders shipped in 1996.",
        "evidence": "shipped in 1996 refers to ShippedDate = 1996; percentage salary = divide(sum(Salary when ShippedDate = 1996), sum(Salary)) as percentage",
        "question_th": "คำนวณเปอร์เซ็นต์เงินเดือนของพนักงานที่จัดการคำสั่งซื้อที่จัดส่งในปี 1996",
        "evidence_th": "จัดส่งในปี 1996 หมายถึง ShippedDate = 1996; เปอร์เซ็นต์เงินเดือน = หาร (ผลรวม (เงินเดือนเมื่อวันที่จัดส่ง = 1996), ผลรวม (เงินเดือน)) เป็นเปอร์เซ็นต์",
        "SQL": "SELECT CAST(SUM(CASE WHEN STRFTIME('%Y', T2.ShippedDate) = '1996' THEN T1.Salary ELSE 0 END) AS REAL) * 100 / SUM(T1.Salary) FROM Employees AS T1 INNER JOIN Orders AS T2 ON T1.EmployeeID = T2.EmployeeID",
        "table": "['Employees', 'Orders']"
    },
    {
        "question_id": 6665,
        "db_id": "retail_world",
        "question": "When was the employee who handled order id 10281 hired?",
        "evidence": "When was hired refers to HireDate",
        "question_th": "พนักงานที่จัดการรหัสคำสั่งซื้อ 10281 ได้รับการว่าจ้างเมื่อใด",
        "evidence_th": "เมื่อได้รับการว่าจ้างหมายถึง HireDate",
        "SQL": "SELECT T1.HireDate FROM Employees AS T1 INNER JOIN Orders AS T2 ON T1.EmployeeID = T2.EmployeeID WHERE T2.OrderID = 10281",
        "table": "['Employees', 'Orders']"
    },
    {
        "question_id": 6691,
        "db_id": "retails",
        "question": "Which country does supplier No.34 come from?",
        "evidence": "supplier No.34 refers to s_suppkey = 34; country refers to n_name;",
        "question_th": "ซัพพลายเออร์หมายเลข 34 มาจากประเทศใด?",
        "evidence_th": "ซัพพลายเออร์หมายเลข 34 หมายถึง s_suppkey = 34; ประเทศ หมายถึง n_name;",
        "SQL": "SELECT T2.n_name FROM supplier AS T1 INNER JOIN nation AS T2 ON T1.s_nationkey = T2.n_nationkey WHERE T1.s_suppkey = 34",
        "table": "['nation', 'supplier']"
    },
    {
        "question_id": 6701,
        "db_id": "retails",
        "question": "Calculates the profit processed by Supplier No. 7414 on order No. 817154.",
        "evidence": "SUBTRACT(MULTIPLY(l_extendedprice, (SUBTRACT(1, l_discount)), MULTIPLY(ps_supplycost, l_quantity))) WHERE l_suppkey = 7414 AND l_orderkey = 817154;",
        "question_th": "คำนวณกำไรที่ประมวลผลโดยซัพพลายเออร์หมายเลข 7414 ในหมายเลขคำสั่งซื้อ 817154",
        "evidence_th": "SUBTRACT(MULTIPLY(l_extensedprice, (SUBTRACT(1, l_discount)), MULTIPLY(ps_supplycost, l_quantity))) โดยที่ l_suppkey = 7414 และ l_orderkey = 817154;",
        "SQL": "SELECT T1.l_extendedprice * (1 - T1.l_discount) - T2.ps_supplycost * T1.l_quantity FROM lineitem AS T1 INNER JOIN partsupp AS T2 ON T1.l_suppkey = T2.ps_suppkey WHERE T1.l_suppkey = 7414 AND T1.l_orderkey = 817154",
        "table": "['lineitem', 'partsupp']"
    },
    {
        "question_id": 6710,
        "db_id": "retails",
        "question": "What are the top 2 order keys of the item with the highest amount of extended price?",
        "evidence": "the highest amount of extended price refers to MAX(l_extendedprice);",
        "question_th": "รหัสคำสั่งซื้อ 2 อันดับแรกของสินค้าที่มีราคาขยายสูงสุดคืออะไร",
        "evidence_th": "จำนวนสูงสุดของราคาขยายหมายถึง MAX(l_extensedprice);",
        "SQL": "SELECT l_orderkey FROM lineitem ORDER BY l_extendedprice DESC LIMIT 2",
        "table": "['lineitem']"
    },
    {
        "question_id": 6715,
        "db_id": "retails",
        "question": "How many suppliers are from Japan?",
        "evidence": "suppliers refer to s_nationkey; Japan is the name of the nation which refers to n_name = 'JAPAN';",
        "question_th": "มีซัพพลายเออร์จากญี่ปุ่นกี่ราย?",
        "evidence_th": "ซัพพลายเออร์อ้างถึง s_nationkey; ญี่ปุ่นเป็นชื่อของประเทศซึ่งหมายถึง n_name = 'JAPAN';",
        "SQL": "SELECT COUNT(T1.c_custkey) FROM customer AS T1 INNER JOIN nation AS T2 ON T1.c_nationkey = T2.n_nationkey WHERE T2.n_name = 'JAPAN'",
        "table": "['customer', 'nation']"
    },
    {
        "question_id": 6717,
        "db_id": "retails",
        "question": "Among the customers from the United States, which market segment has the highest number of customers?",
        "evidence": "the highest number of customers refer to MAX(COUNT(c_custkey)); the United States is the name of the nation which refers to n_name = 'UNITED STATES'; market segment refers to c_mktsegment;",
        "question_th": "ในบรรดาลูกค้าจากสหรัฐอเมริกา ตลาดใดที่มีจำนวนลูกค้ามากที่สุด?",
        "evidence_th": "จำนวนลูกค้าสูงสุดอ้างอิงถึง MAX(COUNT(c_custkey)); สหรัฐอเมริกาเป็นชื่อของประเทศซึ่งหมายถึง n_name = 'UNITED STATES'; ส่วนตลาดหมายถึง c_mktsegment;",
        "SQL": "SELECT T.c_mktsegment FROM ( SELECT T1.c_mktsegment, COUNT(T1.c_custkey) AS num FROM customer AS T1 INNER JOIN nation AS T2 ON T1.c_nationkey = T2.n_nationkey WHERE T2.n_name = 'UNITED STATES' GROUP BY T1.c_mktsegment ) AS T ORDER BY T.num DESC LIMIT 1",
        "table": "['customer', 'nation']"
    },
    {
        "question_id": 6720,
        "db_id": "retails",
        "question": "How many countries are there in the region whose comment description is \"asymptotes sublate after the r.\"",
        "evidence": "r_comment = 'asymptotes sublate after the r'; countries refer to n_nationkey;",
        "question_th": "มีกี่ประเทศในภูมิภาคนี้ที่คำอธิบายความคิดเห็นเป็น \"asymptotes sublate หลัง r\"",
        "evidence_th": "r_comment = 'เส้นกำกับย่อยหลัง r'; ประเทศต่างๆ อ้างถึง n_nationkey;",
        "SQL": "SELECT COUNT(T1.n_nationkey) FROM nation AS T1 INNER JOIN region AS T2 ON T1.n_regionkey = T2.r_regionkey WHERE T2.r_comment = 'asymptotes sublate after the r'",
        "table": "['nation', 'region']"
    },
    {
        "question_id": 6727,
        "db_id": "retails",
        "question": "Calculate the percentage of customers' accounts in debt.",
        "evidence": "DIVIDE(COUNT(c_custkey where c_acctbal < 0), COUNT(c_custkey)) as percentage;",
        "question_th": "คำนวณเปอร์เซ็นต์บัญชีของลูกค้าที่เป็นหนี้",
        "evidence_th": "DIVIDE(COUNT(c_custkey โดยที่ c_acctbal < 0), COUNT(c_custkey)) เป็นเปอร์เซ็นต์;",
        "SQL": "SELECT CAST(SUM(IIF(c_acctbal < 0, 1, 0)) AS REAL) * 100 / COUNT(c_custkey) FROM customer",
        "table": "['customer']"
    },
    {
        "question_id": 6747,
        "db_id": "retails",
        "question": "What is the order priority of the order with the highest total price?",
        "evidence": "order with the highest total price refers to MAX(o_totalprice);",
        "question_th": "ลำดับความสำคัญของการสั่งซื้อของคำสั่งซื้อที่มีราคารวมสูงสุดคืออะไร?",
        "evidence_th": "คำสั่งซื้อที่มีราคารวมสูงสุดหมายถึง MAX(o_totalprice)",
        "SQL": "SELECT o_orderpriority FROM orders WHERE o_totalprice = ( SELECT MAX(o_totalprice) FROM orders )",
        "table": "['orders']"
    },
    {
        "question_id": 6754,
        "db_id": "retails",
        "question": "Among the customers in Asia, how many customers are in debt?",
        "evidence": "customers in Asia refer to n_name where r_name = 'ASIA'; customers in debt refer to c_acctbal < 0;",
        "question_th": "ในบรรดาลูกค้าในเอเชียมีลูกค้าเป็นหนี้กี่ราย?",
        "evidence_th": "ลูกค้าในเอเชียอ้างถึง n_name โดยที่ r_name = 'ASIA'; ลูกค้าที่เป็นหนี้อ้างถึง c_acctbal < 0;",
        "SQL": "SELECT COUNT(T1.n_name) FROM nation AS T1 INNER JOIN customer AS T2 ON T1.n_nationkey = T2.c_nationkey INNER JOIN region AS T3 ON T1.n_regionkey = T3.r_regionkey WHERE T2.c_acctbal < 0 AND T3.r_name = 'ASIA'",
        "table": "['customer', 'nation', 'region']"
    },
    {
        "question_id": 6757,
        "db_id": "retails",
        "question": "What is the name and marketing segment of the customer with the total order price of 199180.63?",
        "evidence": "name of the customer refers to c_name; total order price of 199180.63 refers o_totalprice = 199180.63; marketing segment refers to c_mktsegment;",
        "question_th": "ชื่อและส่วนการตลาดของลูกค้าที่มีราคาสั่งซื้อรวม 199180.63 คืออะไร?",
        "evidence_th": "ชื่อของลูกค้าหมายถึง c_name; ราคาสั่งซื้อรวม 199180.63 หมายถึง o_totalprice = 199180.63; ส่วนการตลาดหมายถึง c_mktsegment;",
        "SQL": "SELECT T2.c_name, T2.c_mktsegment FROM orders AS T1 INNER JOIN customer AS T2 ON T1.o_custkey = T2.c_custkey WHERE T1.o_totalprice = 199180.63",
        "table": "['customer', 'orders']"
    },
    {
        "question_id": 6760,
        "db_id": "retails",
        "question": "List the country name of the customers in the building marketing segment with an account balance greater than 80% of the average account balance of all customers.",
        "evidence": "country name refers to n_name; building marketing segment refers to c_mktsegment = 'BUILDING'; account balance greater than 80% of the average account balance of all customers refers to c_acctbal > MULTIPLY(AVG(c_acctbal), 0.8);",
        "question_th": "ระบุชื่อประเทศของลูกค้าในส่วนการตลาดของอาคารที่มียอดคงเหลือในบัญชีมากกว่า 80% ของยอดเงินในบัญชีเฉลี่ยของลูกค้าทั้งหมด",
        "evidence_th": "ชื่อประเทศหมายถึง n_name; ส่วนการตลาดอาคารหมายถึง c_mktsegment = 'อาคาร'; ยอดคงเหลือในบัญชีมากกว่า 80% ของยอดคงเหลือในบัญชีเฉลี่ยของลูกค้าทั้งหมดอ้างอิงถึง c_acctbal > MULTIPLY(AVG(c_acctbal), 0.8);",
        "SQL": "SELECT T2.n_name FROM customer AS T1 INNER JOIN nation AS T2 ON T1.c_nationkey = T2.n_nationkey INNER JOIN ( SELECT AVG(c_acctbal) * 0.8 AS avg_acctbal FROM customer ) AS T3 WHERE T1.c_acctbal > T3.avg_acctbal",
        "table": "['customer', 'nation']"
    },
    {
        "question_id": 6761,
        "db_id": "retails",
        "question": "Among the customers with an account balance lower than 4000, what is the percentage of the customers in the US?",
        "evidence": "DIVIDE(COUNT(c_custkey where n_name = 'United States' and c_acctbal < 4000), COUNT(c_custkey where c_acctbal < 4000)) as percentage;",
        "question_th": "ในบรรดาลูกค้าที่มียอดคงเหลือในบัญชีต่ำกว่า 4,000 ลูกค้าในสหรัฐอเมริกาคิดเป็นเปอร์เซ็นต์เท่าใด",
        "evidence_th": "DIVIDE(COUNT(c_custkey โดยที่ n_name = 'United States' และ c_acctbal < 4000), COUNT(c_custkey โดยที่ c_acctbal < 4000)) เป็นเปอร์เซ็นต์;",
        "SQL": "SELECT CAST(SUM(IIF(T2.n_name = 'United States', 1, 0)) AS REAL) * 100 / COUNT(T1.c_custkey) FROM customer AS T1 INNER JOIN nation AS T2 ON T1.c_nationkey = T2.n_nationkey WHERE T1.c_acctbal < 4000",
        "table": "['customer', 'nation']"
    },
    {
        "question_id": 6779,
        "db_id": "retails",
        "question": "Among the suppliers in the European region, what percentage have a below-average account balance?",
        "evidence": "DIVIDE(COUNT(s_acctbal < AVG(s_acctbal)), COUNT(s_suppkey)) as percentage where r_name = 'EUROPE';",
        "question_th": "ในบรรดาซัพพลายเออร์ในภูมิภาคยุโรป มียอดคงเหลือในบัญชีต่ำกว่าค่าเฉลี่ยกี่เปอร์เซ็นต์",
        "evidence_th": "DIVIDE(COUNT(s_acctbal < AVG(s_acctbal)), COUNT(s_suppkey)) เป็นเปอร์เซ็นต์ โดยที่ r_name = 'EUROPE';",
        "SQL": "SELECT CAST(SUM(IIF(T3.s_acctbal < ( SELECT AVG(supplier.s_acctbal) FROM supplier ), 1, 0)) AS REAL) * 100 / COUNT(T1.n_nationkey) FROM nation AS T1 INNER JOIN region AS T2 ON T1.n_regionkey = T2.r_regionkey INNER JOIN supplier AS T3 ON T1.n_nationkey = T3.s_nationkey WHERE T2.r_name = 'EUROPE'",
        "table": "['nation', 'region', 'supplier']"
    },
    {
        "question_id": 6782,
        "db_id": "retails",
        "question": "List by order number the 3 items with the lowest price after applying the discount.",
        "evidence": "order number refers to l_orderkey; the lowest price after applying the discount refers to MIN(MULTIPLY(l_extendedprice), SUBTRACT(1, l_discount));",
        "question_th": "เรียงตามหมายเลขคำสั่งซื้อ 3 รายการที่มีราคาต่ำสุดหลังจากใช้ส่วนลดแล้ว",
        "evidence_th": "หมายเลขคำสั่งซื้อหมายถึง l_orderkey; ราคาต่ำสุดหลังจากใช้ส่วนลดหมายถึง MIN(MULTIPLY(l_extensedprice), SUBTRACT(1, l_discount));",
        "SQL": "SELECT l_orderkey FROM lineitem ORDER BY l_extendedprice * (1 - l_discount) LIMIT 3",
        "table": "['lineitem']"
    },
    {
        "question_id": 6785,
        "db_id": "retails",
        "question": "Of the orders with a lower delivery priority, how many have an urgent priority order?",
        "evidence": "an urgent priority order refers to o_orderkey where o_orderpriority = '1-URGENT'; earlier orderdate have higher priority in delivery; lower delivery priority refers to MAX(o_orderdate);",
        "question_th": "คำสั่งซื้อที่มีลำดับความสำคัญในการจัดส่งต่ำกว่า มีคำสั่งซื้อที่มีลำดับความสำคัญเร่งด่วนจำนวนเท่าใด",
        "evidence_th": "ลำดับความสำคัญเร่งด่วนหมายถึง o_orderkey โดยที่ o_orderpriority = '1-URGENT'; วันที่สั่งซื้อก่อนหน้านี้มีลำดับความสำคัญสูงกว่าในการจัดส่ง ลำดับความสำคัญในการจัดส่งที่ต่ำกว่าหมายถึง MAX(o_orderdate);",
        "SQL": "SELECT COUNT(o_orderkey) FROM orders WHERE o_orderpriority = '1-URGENT' GROUP BY o_orderdate ORDER BY o_orderdate DESC LIMIT 1",
        "table": "['orders']"
    },
    {
        "question_id": 6804,
        "db_id": "retails",
        "question": "What is the total price and the order priority of order number 33?",
        "evidence": "total price refers to o_totalprice; order priority refers to o_orderpriority; order number 33 refers to o_orderkey = 33",
        "question_th": "ราคารวมและลำดับความสำคัญในการสั่งซื้อหมายเลขคำสั่งซื้อ 33 คืออะไร?",
        "evidence_th": "ราคารวมหมายถึง o_totalprice; ลำดับความสำคัญของคำสั่งซื้อหมายถึง o_orderpriority; หมายเลขคำสั่งซื้อ 33 หมายถึง o_orderkey = 33",
        "SQL": "SELECT o_totalprice, o_orderpriority FROM orders WHERE o_orderkey = 33",
        "table": "['orders']"
    },
    {
        "question_id": 6805,
        "db_id": "retails",
        "question": "How many orders in 1998 had a total price under 950?",
        "evidence": "1998 refers to year(o_orderdate) = '1998'; a total price under 950 refers to o_totalprice < 950",
        "question_th": "ในปี 1998 มีคำสั่งซื้อกี่รายการที่มีราคารวมต่ำกว่า 950?",
        "evidence_th": "1998 หมายถึง year(o_orderdate) = '1998'; ราคารวมต่ำกว่า 950 หมายถึง o_totalprice < 950",
        "SQL": "SELECT COUNT(o_orderkey) AS countorders FROM orders WHERE STRFTIME('%Y', o_orderdate) = '1998' AND o_totalprice < 950",
        "table": "['orders']"
    },
    {
        "question_id": 6807,
        "db_id": "retails",
        "question": "What is the discounted price of line item number 1?",
        "evidence": "discounted price refers to multiply(l_extendedprice, subtract(1, l_discount)); line item number 1 refers to l_linenumber = 1",
        "question_th": "ราคาลดของรายการโฆษณาหมายเลข 1 คืออะไร?",
        "evidence_th": "ราคาลดหมายถึงการคูณ (l_extensedprice, ลบ (1, l_discount)); รายการโฆษณาหมายเลข 1 หมายถึง l_linenumber = 1",
        "SQL": "SELECT l_extendedprice * (1 - l_discount) FROM lineitem WHERE l_linenumber = 1",
        "table": "['lineitem']"
    },
    {
        "question_id": 6838,
        "db_id": "retails",
        "question": "What proportion of suppliers are from Asia?",
        "evidence": "Asia refers to r_name = 'ASIA'; proportion = divide(count(s_name where r_name = 'ASIA'), count(s_name)) * 100%",
        "question_th": "ซัพพลายเออร์มาจากเอเชียมีสัดส่วนเท่าไร?",
        "evidence_th": "เอเชียหมายถึง r_name = 'ASIA'; สัดส่วน = หาร (นับ (s_name โดยที่ r_name = 'ASIA'), นับ (s_name)) * 100%",
        "SQL": "SELECT CAST(SUM(IIF(T1.r_name = 'ASIA', 1, 0)) AS REAL) * 100 / COUNT(T1.r_regionkey) FROM region AS T1 INNER JOIN nation AS T2 ON T1.r_regionkey = T2.n_regionkey INNER JOIN supplier AS T3 ON T2.n_nationkey = T3.s_nationkey",
        "table": "['nation', 'region', 'supplier']"
    },
    {
        "question_id": 6840,
        "db_id": "retails",
        "question": "How many order keys are not applied for the discount?",
        "evidence": "order key refers to l_orderkey; not applied for the discount refers to l_discount = 0",
        "question_th": "รหัสคำสั่งซื้อจำนวนเท่าใดที่ไม่สามารถใช้ส่วนลดได้",
        "evidence_th": "รหัสคำสั่งซื้อหมายถึง l_orderkey; ไม่ได้ใช้ส่วนลด หมายถึง l_discount = 0",
        "SQL": "SELECT COUNT(l_orderkey) FROM lineitem WHERE l_discount = 0",
        "table": "['lineitem']"
    },
    {
        "question_id": 6846,
        "db_id": "retails",
        "question": "List the phone numbers of customers whose order priority is urgent.",
        "evidence": "phone number refers to c_phone; order priority is urgent refers to o_orderpriority = '1-URGENT'",
        "question_th": "ระบุหมายเลขโทรศัพท์ของลูกค้าที่มีลำดับความสำคัญในการสั่งซื้อเร่งด่วน",
        "evidence_th": "หมายเลขโทรศัพท์หมายถึง c_phone; ลำดับความสำคัญของการสั่งซื้อเป็นเรื่องเร่งด่วนหมายถึง o_orderpriority = '1-URGENT'",
        "SQL": "SELECT T2.c_phone FROM orders AS T1 INNER JOIN customer AS T2 ON T1.o_custkey = T2.c_custkey WHERE T1.o_orderpriority = '1-URGENT'",
        "table": "['customer', 'orders']"
    },
    {
        "question_id": 6847,
        "db_id": "retails",
        "question": "Name of customer whose order is applied with the highest discount.",
        "evidence": "customer name refers to c_name; the highest discount refers to max(l_discount)",
        "question_th": "ชื่อลูกค้าที่ใช้คำสั่งซื้อที่มีส่วนลดสูงสุด",
        "evidence_th": "ชื่อลูกค้าหมายถึง c_name; ส่วนลดสูงสุดหมายถึงสูงสุด(l_discount)",
        "SQL": "SELECT T3.c_name FROM orders AS T1 INNER JOIN lineitem AS T2 ON T1.o_orderkey = T2.l_orderkey INNER JOIN customer AS T3 ON T1.o_custkey = T3.c_custkey ORDER BY T2.l_discount DESC LIMIT 1",
        "table": "['customer', 'lineitem', 'orders']"
    },
    {
        "question_id": 6849,
        "db_id": "retails",
        "question": "List the comments describing orders from customers in the furniture segment.",
        "evidence": "comment refers to o_comment; furniture segment refers to c_mktsegment = 'FURNITURE'",
        "question_th": "แสดงความคิดเห็นที่อธิบายคำสั่งซื้อจากลูกค้าในส่วนเฟอร์นิเจอร์",
        "evidence_th": "ความคิดเห็นหมายถึง o_comment; ส่วนเฟอร์นิเจอร์หมายถึง c_mktsegment = 'FURNITURE'",
        "SQL": "SELECT T1.o_comment FROM orders AS T1 INNER JOIN customer AS T2 ON T1.o_custkey = T2.c_custkey WHERE T2.c_mktsegment = 'FURNITURE'",
        "table": "['customer', 'orders']"
    },
    {
        "question_id": 6906,
        "db_id": "retails",
        "question": "Which country has the least number of suppliers?",
        "evidence": "country refers to n_name; the least number of suppliers refers to min(count(s_name))",
        "question_th": "ประเทศใดมีซัพพลายเออร์จำนวนน้อยที่สุด?",
        "evidence_th": "ประเทศ หมายถึง n_name; จำนวนซัพพลายเออร์น้อยที่สุดหมายถึง min(count(s_name))",
        "SQL": "SELECT T2.n_name FROM supplier AS T1 INNER JOIN nation AS T2 ON T1.s_nationkey = T2.n_nationkey GROUP BY T1.s_nationkey ORDER BY COUNT(T1.s_name) LIMIT 1",
        "table": "['nation', 'supplier']"
    },
    {
        "question_id": 6919,
        "db_id": "ice_hockey_draft",
        "question": "What is the name of the tallest player?",
        "evidence": "tallest player refers to MAX(height_in_cm);",
        "question_th": "นักเตะที่สูงที่สุดชื่ออะไร?",
        "evidence_th": "ผู้เล่นที่สูงที่สุดหมายถึง MAX(height_in_cm);",
        "SQL": "SELECT T1.PlayerName FROM PlayerInfo AS T1 INNER JOIN height_info AS T2 ON T1.height = T2.height_id ORDER BY T2.height_in_cm DESC LIMIT 1",
        "table": "['PlayerInfo', 'height_info']"
    },
    {
        "question_id": 6932,
        "db_id": "ice_hockey_draft",
        "question": "Among the players whose total NHL games played in their first 7 years of NHL career is no less than 500, what is the name of the player who committed the most rule violations?",
        "evidence": "total NHL games played in their first 7 years of NHL career is no less than 500 refers to sum_7yr_GP > 500; name of the player refers to PlayerName; committed the most rule violations refers to MAX(PIM);",
        "question_th": "ในบรรดาผู้เล่นที่มีเกม NHL ทั้งหมดเล่นในช่วง 7 ปีแรกของอาชีพ NHL ไม่น้อยกว่า 500 ผู้เล่นที่ละเมิดกฎมากที่สุดชื่ออะไร?",
        "evidence_th": "เกม NHL ทั้งหมดที่เล่นใน 7 ปีแรกของอาชีพ NHL ไม่น้อยกว่า 500 หมายถึง sum_7yr_GP > 500; ชื่อของผู้เล่นหมายถึงชื่อผู้เล่น; กระทำการละเมิดกฎส่วนใหญ่หมายถึง MAX (PIM);",
        "SQL": "SELECT T1.PlayerName FROM PlayerInfo AS T1 INNER JOIN SeasonStatus AS T2 ON T1.ELITEID = T2.ELITEID WHERE T1.sum_7yr_GP > 500 ORDER BY T2.PIM DESC LIMIT 1",
        "table": "['PlayerInfo', 'SeasonStatus']"
    },
    {
        "question_id": 6935,
        "db_id": "ice_hockey_draft",
        "question": "What is the weight in kilograms of the player with the highest number of goal differential of all time?",
        "evidence": "weight in kilograms refers to weight_in_kg; highest number of goal differential of all time refers to MAX(PLUSMINUS);",
        "question_th": "น้ำหนักของผู้เล่นที่มีส่วนต่างประตูสูงสุดตลอดกาลในหน่วยกิโลกรัมคือเท่าใด?",
        "evidence_th": "น้ำหนักเป็นกิโลกรัมหมายถึง Weight_in_kg; จำนวนส่วนต่างประตูสูงสุดตลอดกาลหมายถึง MAX(PLUSMINUS)",
        "SQL": "SELECT T3.weight_in_kg FROM SeasonStatus AS T1 INNER JOIN PlayerInfo AS T2 ON T1.ELITEID = T2.ELITEID INNER JOIN weight_info AS T3 ON T2.weight = T3.weight_id ORDER BY T1.PLUSMINUS DESC LIMIT 1",
        "table": "['PlayerInfo', 'SeasonStatus', 'weight_info']"
    },
    {
        "question_id": 6948,
        "db_id": "ice_hockey_draft",
        "question": "Identify the name and position of the player who has committed the most rule violations.",
        "evidence": "name of the player refers to PlayerName; position of the player refers to position_info; committed the most rule violations refers to MAX(PIM);",
        "question_th": "ระบุชื่อและตำแหน่งของผู้เล่นที่ทำผิดกฎมากที่สุด",
        "evidence_th": "ชื่อของผู้เล่นหมายถึงชื่อผู้เล่น; ตำแหน่งของผู้เล่นหมายถึงตำแหน่ง_ข้อมูล; กระทำการละเมิดกฎส่วนใหญ่หมายถึง MAX (PIM);",
        "SQL": "SELECT T2.PlayerName, T2.position_info FROM SeasonStatus AS T1 INNER JOIN PlayerInfo AS T2 ON T1.ELITEID = T2.ELITEID WHERE T1.PIM = ( SELECT MAX(PIM) FROM SeasonStatus )",
        "table": "['PlayerInfo', 'SeasonStatus']"
    },
    {
        "question_id": 6960,
        "db_id": "ice_hockey_draft",
        "question": "Who has the heaviest weight?",
        "evidence": "who refers to PlayerName; heaviest weight refers to MAX(weight_in_kg);",
        "question_th": "ใครมีน้ำหนักมากที่สุด?",
        "evidence_th": "ที่อ้างถึงชื่อผู้เล่น; น้ำหนักที่หนักที่สุดหมายถึง MAX(weight_in_kg);",
        "SQL": "SELECT T1.PlayerName FROM PlayerInfo AS T1 INNER JOIN weight_info AS T2 ON T1.weight = T2.weight_id ORDER BY T2.weight_in_kg DESC LIMIT 1",
        "table": "['PlayerInfo', 'weight_info']"
    },
    {
        "question_id": 6972,
        "db_id": "ice_hockey_draft",
        "question": "Who among the players in season 2000-2001 has committed the highest rule violations or penalty minutes?",
        "evidence": "committed the highest rule violations or penalty minutes refers to MAX(PIM); 2000-2001 season refers to SEASON = '2000-2001'",
        "question_th": "ใครในบรรดาผู้เล่นในฤดูกาล 2000-2001 ที่ทำผิดกฎหรือนาทีจุดโทษสูงสุด?",
        "evidence_th": "กระทำการละเมิดกฎสูงสุดหรือนาทีการลงโทษหมายถึงสูงสุด (PIM) ฤดูกาล 2000-2001 หมายถึง SEASON = '2000-2001'",
        "SQL": "SELECT T2.PlayerName FROM SeasonStatus AS T1 INNER JOIN PlayerInfo AS T2 ON T1.ELITEID = T2.ELITEID WHERE T1.SEASON = '2000-2001' ORDER BY T1.PIM DESC LIMIT 1",
        "table": "['PlayerInfo', 'SeasonStatus']"
    },
    {
        "question_id": 6985,
        "db_id": "ice_hockey_draft",
        "question": "Calculate the average height in centimeter of all players who played in Acadie-Bathurst Titan during regular season.",
        "evidence": "average height in centimeter = AVG(height_in_cm); height in centimeter refers to height_in_cm; players refers to PlayerName; Acadie-Bathurst Titan refers to TEAM = 'Acadie-Bathurst Titan'; regular season refers to GAMETYPE = 'Regular Season';",
        "question_th": "คำนวณความสูงเฉลี่ยเป็นเซนติเมตรของผู้เล่นทุกคนที่เล่นใน Acadie-Bathurst Titan ในช่วงฤดูกาลปกติ",
        "evidence_th": "ความสูงเฉลี่ยเป็นเซนติเมตร = AVG(height_in_cm); ความสูงเป็นเซนติเมตรหมายถึง height_in_cm; ผู้เล่นหมายถึงชื่อผู้เล่น; Acadie-Bathurst Titan หมายถึง TEAM = 'Acadie-Bathurst Titan'; ฤดูกาลปกติ หมายถึง GAMETYPE = 'ฤดูกาลปกติ';",
        "SQL": "SELECT CAST(SUM(T1.height_in_cm) AS REAL) / COUNT(T2.ELITEID) FROM height_info AS T1 INNER JOIN PlayerInfo AS T2 ON T1.height_id = T2.height INNER JOIN SeasonStatus AS T3 ON T2.ELITEID = T3.ELITEID WHERE T3.TEAM = 'Acadie-Bathurst Titan' AND T3.GAMETYPE = 'Regular Season'",
        "table": "['PlayerInfo', 'SeasonStatus', 'height_info']"
    },
    {
        "question_id": 6990,
        "db_id": "ice_hockey_draft",
        "question": "Which team has the most Swedish?",
        "evidence": "Swedish refers to nation = 'Sweden'; team with the most Swedish refers to MAX(TEAM WHERE nation = 'Sweden');",
        "question_th": "ทีมไหนมีสวีดิชมากที่สุด?",
        "evidence_th": "ภาษาสวีเดนหมายถึงชาติ = 'สวีเดน'; ทีมที่มีภาษาสวีเดนมากที่สุดหมายถึง MAX(ทีม WHERE nation = 'สวีเดน');",
        "SQL": "SELECT T.TEAM FROM ( SELECT T2.TEAM, COUNT(DISTINCT T1.ELITEID) FROM PlayerInfo AS T1 INNER JOIN SeasonStatus AS T2 ON T1.ELITEID = T2.ELITEID WHERE T1.nation = 'Sweden' GROUP BY T2.TEAM ORDER BY COUNT(DISTINCT T1.ELITEID) DESC LIMIT 1 ) AS T",
        "table": "['PlayerInfo', 'SeasonStatus']"
    },
    {
        "question_id": 7005,
        "db_id": "works_cycles",
        "question": "For all the purchase order transactions, name all the products with low quality.",
        "evidence": "Low quality refers to the product's quality class, therefore Class = 'L'",
        "question_th": "สำหรับธุรกรรมใบสั่งซื้อทั้งหมด ให้ตั้งชื่อผลิตภัณฑ์ทั้งหมดที่มีคุณภาพต่ำ",
        "evidence_th": "คุณภาพต่ำหมายถึงระดับคุณภาพของผลิตภัณฑ์ ดังนั้น Class = 'L'",
        "SQL": "SELECT DISTINCT T1.Name FROM Product AS T1 INNER JOIN TransactionHistory AS T2 ON T1.ProductID = T2.ProductID WHERE T1.Class = 'L' AND T2.TransactionType = 'P' ORDER BY T1.Name",
        "table": "['Product', 'TransactionHistory']"
    },
    {
        "question_id": 7008,
        "db_id": "works_cycles",
        "question": "How many transactions are there for product under the Mountain line?",
        "evidence": "The Mountain line refers to the product line, therefore ProductLine = 'M'",
        "question_th": "มีรายการธุรกรรมสำหรับผลิตภัณฑ์ภายใต้ Mountain line กี่รายการ?",
        "evidence_th": "เส้นภูเขาหมายถึงสายผลิตภัณฑ์ ดังนั้น ProductLine = 'M'",
        "SQL": "SELECT COUNT(T2.TransactionID) FROM Product AS T1 INNER JOIN TransactionHistory AS T2 ON T1.ProductID = T2.ProductID WHERE T1.ProductLine = 'M'",
        "table": "['Product', 'TransactionHistory']"
    },
    {
        "question_id": 7011,
        "db_id": "works_cycles",
        "question": "Which product line has the most products that are salable?",
        "evidence": "Saleable product refers to FinishedGoodsFlag = 1",
        "question_th": "สายผลิตภัณฑ์ใดมีสินค้าที่สามารถขายได้มากที่สุด?",
        "evidence_th": "ผลิตภัณฑ์ที่ขายได้อ้างอิงถึง FinishedGoodsFlag = 1",
        "SQL": "SELECT ProductLine FROM Product WHERE FinishedGoodsFlag = 1 GROUP BY ProductLine ORDER BY COUNT(FinishedGoodsFlag) DESC LIMIT 1",
        "table": "['Product']"
    },
    {
        "question_id": 7042,
        "db_id": "works_cycles",
        "question": "Which job title has the lowest pay?",
        "evidence": "lowest pay refers to min(Rate);",
        "question_th": "ตำแหน่งงานใดได้รับค่าจ้างต่ำที่สุด?",
        "evidence_th": "การจ่ายขั้นต่ำหมายถึงขั้นต่ำ (อัตรา);",
        "SQL": "SELECT T1.JobTitle FROM Employee AS T1 INNER JOIN EmployeePayHistory AS T2 ON T1.BusinessEntityID = T2.BusinessEntityID ORDER BY T2.Rate ASC LIMIT 1",
        "table": "['Employee', 'EmployeePayHistory']"
    },
    {
        "question_id": 7066,
        "db_id": "works_cycles",
        "question": "Among the employees who are married, how many of them have a western name style?",
        "evidence": "married refers to MaritalStatus = 'M'; western name style refers to NameStyle = '0';",
        "question_th": "ในบรรดาพนักงานที่แต่งงานแล้ว มีกี่คนที่มีสไตล์การตั้งชื่อแบบตะวันตก?",
        "evidence_th": "แต่งงานแล้ว หมายถึง MaritalStatus = 'M'; รูปแบบชื่อตะวันตกหมายถึง NameStyle = '0';",
        "SQL": "SELECT COUNT(T1.BusinessEntityID) FROM Employee AS T1 INNER JOIN Person AS T2 ON T1.BusinessEntityID = T2.BusinessEntityID WHERE T2.NameStyle = 0 AND T1.MaritalStatus = 'M'",
        "table": "['Employee', 'Person']"
    },
    {
        "question_id": 7068,
        "db_id": "works_cycles",
        "question": "Please list the employees who have more than 20 vacations hours and wish to receive e-mail promotions.",
        "evidence": "Contact does wish to receive e-mail promotions refers to EmailPromotion = (1,2); more than 20 vacations hours refers to VacationHours>20",
        "question_th": "กรุณาระบุรายชื่อพนักงานที่มีเวลาลาพักร้อนมากกว่า 20 ชั่วโมง และต้องการรับโปรโมชั่นทางอีเมล์",
        "evidence_th": "ติดต่อไม่ต้องการรับโปรโมชั่นทางอีเมล หมายถึง EmailPromotion = (1,2); ชั่วโมงวันหยุดมากกว่า 20 ชั่วโมง หมายถึง VacationHours>20",
        "SQL": "SELECT T1.BusinessEntityID FROM Employee AS T1 INNER JOIN Person AS T2 ON T1.BusinessEntityID = T2.BusinessEntityID WHERE T2.EmailPromotion = 1 AND T1.VacationHours > 20",
        "table": "['Employee', 'Person']"
    },
    {
        "question_id": 7085,
        "db_id": "works_cycles",
        "question": "List, by ProductID, all products whose profit, relative to the standard price, is negative.",
        "evidence": "Profit = SUBTRACT(StandardPrice, LastRecipeCost)\n",
        "question_th": "รายการตาม ProductID ผลิตภัณฑ์ทั้งหมดที่มีกำไรเมื่อเทียบกับราคามาตรฐานจะเป็นค่าลบ",
        "evidence_th": "กำไร = ลบ (ราคามาตรฐาน, LastRecipeCost)\n",
        "SQL": "SELECT DISTINCT ProductID FROM ProductVendor WHERE StandardPrice - LastReceiptCost < 0",
        "table": "['ProductVendor']"
    },
    {
        "question_id": 7094,
        "db_id": "works_cycles",
        "question": "What is the job title of the newest employee in department 12?",
        "evidence": "newest employee refers to MAX(StartDate)",
        "question_th": "ตำแหน่งงานของพนักงานใหม่ล่าสุดในแผนก 12 คืออะไร?",
        "evidence_th": "พนักงานใหม่ล่าสุดหมายถึง MAX (StartDate)",
        "SQL": "SELECT T1.JobTitle FROM Employee AS T1 INNER JOIN EmployeeDepartmentHistory AS T2 ON T1.BusinessEntityID = T2.BusinessEntityID WHERE T2.DepartmentID = 12 ORDER BY T2.StartDate DESC LIMIT 1",
        "table": "['Employee', 'EmployeeDepartmentHistory']"
    },
    {
        "question_id": 7099,
        "db_id": "works_cycles",
        "question": "If we discount the products that do not have any type of offer, how many different products have been sold in an amount greater than 2 units per order?",
        "evidence": "do not have any type of offer refers to Description = 'No Discount'; sold in an amount greater than 2 refers to OrderQty>2",
        "question_th": "หากเราลดราคาสินค้าที่ไม่มีข้อเสนอประเภทใด สินค้าที่แตกต่างกันจำนวนเท่าใดที่ขายได้มากกว่า 2 หน่วยต่อคำสั่งซื้อ",
        "evidence_th": "ไม่มีข้อเสนอประเภทใดที่อ้างถึงคำอธิบาย = 'ไม่มีส่วนลด'; ขายในจำนวนที่มากกว่า 2 หมายถึง OrderQty>2",
        "SQL": "SELECT COUNT(DISTINCT T1.ProductID) FROM SalesOrderDetail AS T1 INNER JOIN SpecialOfferProduct AS T2 ON T1.SpecialOfferID = T2.SpecialOfferID INNER JOIN SpecialOffer AS T3 ON T2.SpecialOfferID = T3.SpecialOfferID WHERE T1.OrderQty > 2 AND T1.UnitPriceDiscount = 0",
        "table": "['SalesOrderDetail', 'SpecialOffer', 'SpecialOfferProduct']"
    },
    {
        "question_id": 7100,
        "db_id": "works_cycles",
        "question": "What type of transaction was made with the only yellow product, size 62 and with a minimum inventory stock of 500 units?",
        "evidence": "yellow product refers to Color = 'Yellow'; minimum inventory stock of 500 units refers to SafetyStockLevel = 500",
        "question_th": "ทำรายการประเภทใดกับสินค้าสีเหลืองขนาด 62 เท่านั้นและมีสต็อกสินค้าคงคลังขั้นต่ำ 500 หน่วย?",
        "evidence_th": "สินค้าสีเหลืองหมายถึงสี = 'สีเหลือง'; สต็อกสินค้าคงคลังขั้นต่ำ 500 หน่วยหมายถึง SafetyStockLevel = 500",
        "SQL": "SELECT DISTINCT T2.TransactionType FROM Product AS T1 INNER JOIN TransactionHistory AS T2 ON T1.ProductID = T2.ProductID WHERE T1.Size = 62 AND T1.Color = 'Yellow' AND T1.SafetyStockLevel = 500",
        "table": "['Product', 'TransactionHistory']"
    },
    {
        "question_id": 7120,
        "db_id": "works_cycles",
        "question": "What are the company that Adventure Works deal with that have poor credit rating? Please provide their business number.",
        "evidence": "poor credit rating means bad credit; CreditRating = 5; Business number refers to BusinessEntityID",
        "question_th": "บริษัทที่ Adventure Works ติดต่อด้วยซึ่งมีอันดับเครดิตต่ำคือบริษัทใด กรุณาระบุหมายเลขธุรกิจของพวกเขา",
        "evidence_th": "อันดับเครดิตไม่ดีหมายถึงเครดิตไม่ดี อันดับเครดิต = 5; หมายเลขธุรกิจหมายถึง BusinessEntityID",
        "SQL": "SELECT BusinessEntityID FROM Vendor WHERE CreditRating = ( SELECT CreditRating FROM Vendor ORDER BY CreditRating DESC LIMIT 1 )",
        "table": "['Vendor']"
    },
    {
        "question_id": 7134,
        "db_id": "works_cycles",
        "question": "How many employees work for AdvertureWorks that is single?",
        "evidence": "Employees refer to PersonType = 'EM'; Single refers to MaritalStatus = 's'",
        "question_th": "มีพนักงานกี่คนที่ทำงานให้กับ AdvertureWorks ที่เป็นโสด?",
        "evidence_th": "พนักงานอ้างถึง PersonType = 'EM'; โสด หมายถึง MaritalStatus = 's'",
        "SQL": "SELECT COUNT(T1.BusinessentityID) FROM Person AS T1 INNER JOIN Employee AS T2 ON T1.BusinessEntityID = T2.BusinessEntityID WHERE T1.PersonType = 'EM' AND T2.MaritalStatus = 'S'",
        "table": "['Employee', 'Person']"
    },
    {
        "question_id": 7140,
        "db_id": "works_cycles",
        "question": "Where is the address 15873 located, in what city and state? Does that city belong to a province where the code exists?",
        "evidence": "Address number 15873 refers to AddressID = '15873'; IsOnlyStateProvinceCode = '0' refers to StateProvinceCode exists; IsOnlyStateProvinceCode = '1' refers to StateProvinceCode unavailable;",
        "question_th": "ที่อยู่ 15873 อยู่ที่ไหน ในเมืองและรัฐใด? เมืองนั้นเป็นจังหวัดที่มีรหัสนี้หรือไม่?",
        "evidence_th": "ที่อยู่หมายเลข 15873 หมายถึง AddressID = '15873'; IsOnlyStateProvinceCode = '0' หมายถึง StateProvinceCode ที่มีอยู่; IsOnlyStateProvinceCode = '1' หมายถึง StateProvinceCode ไม่พร้อมใช้งาน",
        "SQL": "SELECT T2.City, T1.Name, T1.IsOnlyStateProvinceFlag FROM StateProvince AS T1 INNER JOIN Address AS T2 ON T1.StateProvinceID = T2.StateProvinceID WHERE T2.AddressID = 15873",
        "table": "['Address', 'StateProvince']"
    },
    {
        "question_id": 7141,
        "db_id": "works_cycles",
        "question": "What is the full address of business number 24?",
        "evidence": "Full address refers to AddressLine1+AddressLine2; business number 24 refers to BusinessEntityID = '24'",
        "question_th": "ที่อยู่เต็มของธุรกิจหมายเลข 24 คืออะไร?",
        "evidence_th": "ที่อยู่แบบเต็มหมายถึง AddressLine1+AddressLine2; ธุรกิจหมายเลข 24 หมายถึง BusinessEntityID = '24'",
        "SQL": "SELECT T1.AddressLine1, T1.AddressLine2 FROM Address AS T1 INNER JOIN BusinessEntityAddress AS T2 ON T1.AddressID = T2.AddressID WHERE T2.BusinessEntityID = 24",
        "table": "['Address', 'BusinessEntityAddress']"
    },
    {
        "question_id": 7145,
        "db_id": "works_cycles",
        "question": "What are the Department ids under the Sales and Marketing Group?",
        "evidence": "Sales and Marketing is group name of a department",
        "question_th": "รหัสแผนกภายใต้กลุ่มการขายและการตลาดคืออะไร",
        "evidence_th": "การขายและการตลาดคือชื่อกลุ่มของแผนก",
        "SQL": "SELECT DepartmentID FROM Department WHERE GroupName = 'Sales and Marketing'",
        "table": "['Department']"
    },
    {
        "question_id": 7148,
        "db_id": "works_cycles",
        "question": "What is contact Type ID No.16 represent for?",
        "evidence": "",
        "question_th": "Contact Type ID No.16 เป็นตัวแทนเพื่ออะไร?",
        "evidence_th": "",
        "SQL": "SELECT Name FROM ContactType WHERE ContactTypeID = '16'",
        "table": "['ContactType']"
    },
    {
        "question_id": 7150,
        "db_id": "works_cycles",
        "question": "Please tell the meaning of CultureID \"fr\".",
        "evidence": "tell the meaning is to find the name of culture",
        "question_th": "กรุณาบอกความหมายของ CultureID \"fr\"",
        "evidence_th": "บอกความหมายคือการหาชื่อวัฒนธรรม",
        "SQL": "SELECT Name FROM Culture WHERE CultureID = 'fr'",
        "table": "['Culture']"
    },
    {
        "question_id": 7155,
        "db_id": "works_cycles",
        "question": "What are the unit measure codes for product ID No.762?",
        "evidence": "",
        "question_th": "รหัสหน่วยวัดสำหรับรหัสผลิตภัณฑ์ No.762 คืออะไร",
        "evidence_th": "",
        "SQL": "SELECT T2.UnitMeasureCode FROM Product AS T1 INNER JOIN UnitMeasure AS T2 ON T1.SizeUnitMeasureCode = T2.UnitMeasureCode OR T1.WeightUnitMeasureCode = T2.UnitMeasureCode WHERE T1.ProductID = 762 GROUP BY T1.ProductID, T2.UnitMeasureCode",
        "table": "['Product', 'UnitMeasure']"
    },
    {
        "question_id": 7157,
        "db_id": "works_cycles",
        "question": "For the on going assembly item Component ID No. 494, what's the Unit measure for it?",
        "evidence": "On going assembly item means the assembly item haven't been finished, therefore EndDate is null",
        "question_th": "สำหรับรายการแอสเซมบลีที่กำลังดำเนินอยู่ Component ID No. 494 หน่วยวัดสำหรับสิ่งนั้นคืออะไร",
        "evidence_th": "รายการแอสเซมบลีที่กำลังดำเนินการหมายความว่ารายการแอสเซมบลียังไม่เสร็จสิ้น ดังนั้น EndDate จึงเป็นโมฆะ",
        "SQL": "SELECT T2.Name FROM BillOfMaterials AS T1 INNER JOIN UnitMeasure AS T2 ON T1.UnitMeasureCode = T2.UnitMeasureCode WHERE T1.ComponentID = 494 AND T1.EndDate IS NULL GROUP BY T2.name",
        "table": "['BillOfMaterials', 'UnitMeasure']"
    },
    {
        "question_id": 7187,
        "db_id": "works_cycles",
        "question": "What is the job position currently occupied by Ken J SÃ¡nchez?",
        "evidence": "Job position refers to JobTitle",
        "question_th": "ตำแหน่งงานปัจจุบันของ Ken J SÃ¡nchez คืออะไร?",
        "evidence_th": "ตำแหน่งงานหมายถึง JobTitle",
        "SQL": "SELECT T1.JobTitle FROM Employee AS T1 INNER JOIN Person AS T2 ON T1.BusinessEntityID = T2.BusinessEntityID WHERE T2.FirstName = 'Ken' AND T2.MiddleName = 'J' AND T2.LastName = 'Sánchez'",
        "table": "['Employee', 'Person']"
    },
    {
        "question_id": 7205,
        "db_id": "works_cycles",
        "question": "Among the employees who wish to receive e-mail promotion from AdventureWorks, how many percent of them are female?",
        "evidence": "female refers to Gender = 'F'; employee who wish to receive email promotion refers to EmailPromotion = 1; percentage = DIVIDE(SUM(Gender = 'F')), (sum(Gender = 'F' or Gender = 'M'))) as percentage;",
        "question_th": "ในบรรดาพนักงานที่ต้องการรับอีเมลส่งเสริมการขายจาก AdventureWorks มีพนักงานกี่เปอร์เซ็นต์ที่เป็นผู้หญิง?",
        "evidence_th": "หญิงหมายถึงเพศ = 'F'; พนักงานที่ต้องการรับโปรโมชั่นทางอีเมล หมายถึง EmailPromotion = 1; เปอร์เซ็นต์ = DIVIDE(SUM(Gender = 'F')), (sum(Gender = 'F' หรือ Gender = 'M'))) เป็นเปอร์เซ็นต์;",
        "SQL": "SELECT CAST(SUM(CASE WHEN T1.Gender = 'F' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(T1.BusinessEntityID) FROM Employee AS T1 INNER JOIN Person AS T2 ON T1.BusinessEntityID = T2.BusinessEntityID WHERE T2.EmailPromotion = 1",
        "table": "['Employee', 'Person']"
    },
    {
        "question_id": 7213,
        "db_id": "works_cycles",
        "question": "List all of the credit cards that had expired by 2007.",
        "evidence": "card that expires in 2007 refers to ExpYear = 2007;",
        "question_th": "รายชื่อบัตรเครดิตทั้งหมดที่หมดอายุภายในปี 2550",
        "evidence_th": "บัตรที่หมดอายุในปี 2550 หมายถึง ExpYear = 2007;",
        "SQL": "SELECT CardNumber FROM CreditCard WHERE ExpYear < 2007",
        "table": "['CreditCard']"
    },
    {
        "question_id": 7221,
        "db_id": "works_cycles",
        "question": "How many sales orders did the salesperson David R. Campbell create?",
        "evidence": "SP is an abbreviation for Sales Person; PersonType = 'SP';",
        "question_th": "พนักงานขาย David R. Campbell สร้างใบสั่งขายจำนวนเท่าใด",
        "evidence_th": "SP เป็นตัวย่อสำหรับพนักงานขาย ประเภทบุคคล = 'SP';",
        "SQL": "SELECT COUNT(T2.TotalDue) FROM Person AS T1 INNER JOIN SalesOrderHeader AS T2 ON T1.ModifiedDate = T2.DueDate WHERE T1.FirstName = 'David' AND T1.MiddleName = 'R' AND T1.LastName = 'Campbell' AND T1.PersonType = 'SP'",
        "table": "['Person', 'SalesOrderHeader']"
    },
    {
        "question_id": 7225,
        "db_id": "works_cycles",
        "question": "List the first names of the people with more than 65 sick leave hours.",
        "evidence": "SickLeaveHours>65;",
        "question_th": "รายชื่อบุคคลที่มีเวลาลาป่วยเกิน 65 ชั่วโมง",
        "evidence_th": "ชั่วโมงลาป่วย>65;",
        "SQL": "SELECT T2.FirstName FROM Employee AS T1 INNER JOIN Person AS T2 ON T1.BusinessEntityID = T2.BusinessEntityID WHERE T1.SickLeaveHours > 65",
        "table": "['Employee', 'Person']"
    },
    {
        "question_id": 7236,
        "db_id": "works_cycles",
        "question": "What is the person's business ID with a vista credit card number \"11113366963373\"?",
        "evidence": "business id refers to BusinessEntityID",
        "question_th": "รหัสธุรกิจของบุคคลที่มีหมายเลขบัตรเครดิต vista \"11113366963373\" คืออะไร",
        "evidence_th": "รหัสธุรกิจหมายถึง BusinessEntityID",
        "SQL": "SELECT T2.BusinessEntityID FROM CreditCard AS T1 INNER JOIN PersonCreditCard AS T2 ON T1.CreditCardID = T2.CreditCardID WHERE T1.CardNumber = 11113366963373",
        "table": "['CreditCard', 'PersonCreditCard']"
    },
    {
        "question_id": 7240,
        "db_id": "works_cycles",
        "question": "What is the reason for sales order \"51883\"?",
        "evidence": "reason means the category of sales reason which refers to ReasonType",
        "question_th": "สาเหตุของใบสั่งขาย \"51883\" คืออะไร",
        "evidence_th": "เหตุผล หมายถึงหมวดหมู่ของเหตุผลในการขายซึ่งอ้างถึง ReasonType",
        "SQL": "SELECT T2.Name FROM SalesOrderHeaderSalesReason AS T1 INNER JOIN SalesReason AS T2 ON T1.SalesReasonID = T2.SalesReasonID WHERE T1.SalesOrderID = 51883",
        "table": "['SalesOrderHeaderSalesReason', 'SalesReason']"
    },
    {
        "question_id": 7242,
        "db_id": "works_cycles",
        "question": "List all the sales people in the Northwest US.",
        "evidence": "Northwest is name of SalesTerritory; US is the CountryRegionCode;",
        "question_th": "รายชื่อพนักงานขายทั้งหมดในสหรัฐอเมริกาตะวันตกเฉียงเหนือ",
        "evidence_th": "ภาคตะวันตกเฉียงเหนือเป็นชื่อของ SalesTerritory สหรัฐอเมริกาคือ CountryRegionCode",
        "SQL": "SELECT T2.BusinessEntityID FROM SalesTerritory AS T1 INNER JOIN SalesPerson AS T2 ON T1.TerritoryID = T2.TerritoryID WHERE T1.Name = 'Northwest' AND T1.CountryRegionCode = 'US'",
        "table": "['SalesPerson', 'SalesTerritory']"
    },
    {
        "question_id": 7257,
        "db_id": "works_cycles",
        "question": "What is the total amount due of all the purchases made by the company to the vendor that has the lowest selling price amount of a single product? Indicate the name of the vendor to which the purchases was made.",
        "evidence": "Vendor's selling price of a single product refers to UnitPrice;",
        "question_th": "จำนวนเงินทั้งหมดที่เกิดจากการซื้อทั้งหมดที่บริษัททำกับผู้ขายซึ่งมีราคาขายต่ำสุดของผลิตภัณฑ์เดียวคือเท่าใด ระบุชื่อผู้ขายที่ทำการซื้อ",
        "evidence_th": "ราคาขายของผู้ขายของผลิตภัณฑ์เดียวหมายถึงราคาต่อหน่วย",
        "SQL": "SELECT T1.UnitPrice, T3.Name FROM PurchaseOrderDetail AS T1 INNER JOIN PurchaseOrderHeader AS T2 ON T1.PurchaseOrderID = T2.PurchaseOrderID INNER JOIN Vendor AS T3 ON T2.VendorID = T3.BusinessEntityID ORDER BY T1.UnitPrice LIMIT 1",
        "table": "['PurchaseOrderDetail', 'PurchaseOrderHeader', 'Vendor']"
    },
    {
        "question_id": 7259,
        "db_id": "works_cycles",
        "question": "What is the position of the employee with the 10th highest salary? Indicate his/her salary amount and his/her full name.",
        "evidence": "salary and Rate are synonyms; full name = FirstName+MiddleName+LastName;",
        "question_th": "พนักงานที่ได้รับเงินเดือนสูงสุดอันดับที่ 10 อยู่ในตำแหน่งใด? ระบุจำนวนเงินเดือนและชื่อเต็มของเขา/เธอ",
        "evidence_th": "เงินเดือนและอัตราเป็นคำพ้องความหมาย ชื่อเต็ม = ชื่อ+ชื่อกลาง+นามสกุล;",
        "SQL": "SELECT T2.JobTitle, T1.Rate, T3.FirstName, T3.MiddleName, T3.LastName FROM EmployeePayHistory AS T1 INNER JOIN Employee AS T2 ON T1.BusinessEntityID = T2.BusinessEntityID INNER JOIN Person AS T3 ON T2.BusinessEntityID = T3.BusinessEntityID ORDER BY T1.Rate DESC LIMIT 9, 1",
        "table": "['Employee', 'EmployeePayHistory', 'Person']"
    },
    {
        "question_id": 7305,
        "db_id": "works_cycles",
        "question": "Among the salable products from the mountain product line, how many of them have the most reviews?",
        "evidence": "salable product refers to FinishedGoodsFlag = 1; mountain product line refers to ProductLine = 'M'",
        "question_th": "ในบรรดาสินค้าที่วางขายในกลุ่มผลิตภัณฑ์จากภูเขา มีกี่รายการที่ได้รับการวิจารณ์มากที่สุด?",
        "evidence_th": "ผลิตภัณฑ์ที่ขายได้หมายถึง FinishedGoodsFlag = 1; สายผลิตภัณฑ์ภูเขาหมายถึง ProductLine = 'M'",
        "SQL": "SELECT SUM(CASE WHEN T2.ProductLine = 'M' THEN 1 ELSE 0 END) FROM ProductReview AS T1 INNER JOIN Product AS T2 ON T1.ProductID = T2.ProductID WHERE T2.FinishedGoodsFlag = 1 GROUP BY T1.ProductID ORDER BY COUNT(T1.ProductReviewID) DESC LIMIT 1",
        "table": "['Product', 'ProductReview']"
    },
    {
        "question_id": 7321,
        "db_id": "works_cycles",
        "question": "Which vendor gives the best profit on net for product ID 342?",
        "evidence": "profit on net = subtract(LastReceiptCost, StandardPrice); best profit on net refers to max(subtract(LastReceiptCost, StandardPrice))",
        "question_th": "ผู้ขายรายใดที่ให้ผลกำไรสุทธิดีที่สุดสำหรับรหัสผลิตภัณฑ์ 342",
        "evidence_th": "กำไรสุทธิ = ลบ (LastReceiptCost, StandardPrice); กำไรสุทธิที่ดีที่สุดหมายถึงสูงสุด (ลบ (LastReceiptCost, StandardPrice))",
        "SQL": "SELECT T1.Name FROM Vendor AS T1 INNER JOIN ProductVendor AS T2 ON T1.BusinessEntityID = T2.BusinessEntityID WHERE T2.ProductID = 342 ORDER BY T2.LastReceiptCost - T2.StandardPrice DESC LIMIT 1",
        "table": "['ProductVendor', 'Vendor']"
    },
    {
        "question_id": 7333,
        "db_id": "works_cycles",
        "question": "Who is the oldest married male? State his job title.",
        "evidence": "Male refers to Gender = 'M'; married refers to MaritalStatus = 'M'; oldest refers to Min(BirthDate);",
        "question_th": "ชายที่แต่งงานแล้วอายุมากที่สุดคือใคร? ระบุตำแหน่งงานของเขา",
        "evidence_th": "ชายหมายถึงเพศ = 'M'; แต่งงานแล้ว หมายถึง MaritalStatus = 'M'; เก่าที่สุดหมายถึง Min (วันเกิด);",
        "SQL": "SELECT T2.FirstName, T2.LastName, T1.JobTitle FROM Employee AS T1 INNER JOIN Person AS T2 ON T1.BusinessEntityID = T2.BusinessEntityID WHERE T1.Gender = 'M' AND T1.MaritalStatus = 'M' ORDER BY T1.BirthDate LIMIT 1",
        "table": "['Employee', 'Person']"
    },
    {
        "question_id": 7336,
        "db_id": "works_cycles",
        "question": "State the employee who are born in or after 1970 and with the least sick leave hour.",
        "evidence": "born in or after 1970 refers to year(BirthDate) > = 1970;",
        "question_th": "ระบุลูกจ้างที่เกิดในหรือหลังปี 1970 และมีชั่วโมงลาป่วยน้อยที่สุด",
        "evidence_th": "เกิดในหรือหลังปี 1970 หมายถึง ปีเกิด (วันเกิด) > = 1970;",
        "SQL": "SELECT T2.FirstName, T2.LastName FROM Employee AS T1 INNER JOIN Person AS T2 ON T1.BusinessEntityID = T2.BusinessEntityID WHERE STRFTIME('%Y', T1.BirthDate) > '1970' ORDER BY T1.SickLeaveHours LIMIT 1",
        "table": "['Employee', 'Person']"
    },
    {
        "question_id": 7352,
        "db_id": "works_cycles",
        "question": "Which department, altogether, has the most personnel who work the evening shift?",
        "evidence": "evening shift also means night shift where Name = 'Night';most personnel in evening shift refers to Max(Count(Shift.ShiftID(Name = 'Night')));",
        "question_th": "โดยรวมแล้วแผนกไหนมีบุคลากรที่ทำงานกะเย็นมากที่สุด?",
        "evidence_th": "กะเย็นยังหมายถึงกะกลางคืน โดยที่ Name = 'กลางคืน'; บุคลากรส่วนใหญ่ในกะเย็นหมายถึง Max(Count(Shift.ShiftID(Name = 'Night')));",
        "SQL": "SELECT T3.Name FROM EmployeeDepartmentHistory AS T1 INNER JOIN Shift AS T2 ON T1.ShiftId = T2.ShiftId INNER JOIN Department AS T3 ON T1.DepartmentID = T3.DepartmentID WHERE T2.Name = 'Night' GROUP BY T3.Name ORDER BY COUNT(T1.BusinessEntityID) DESC LIMIT 1",
        "table": "['Department', 'EmployeeDepartmentHistory', 'Shift']"
    },
    {
        "question_id": 7370,
        "db_id": "works_cycles",
        "question": "What is the company's second highest salary per hour for employees who are paid monthly?",
        "evidence": "salary received monthly refers to PayFrequency = 1; highest salary per hour refers to Max(Rate);",
        "question_th": "เงินเดือนสูงสุดเป็นอันดับสองของบริษัทต่อชั่วโมงสำหรับพนักงานที่ได้รับค่าจ้างรายเดือนคือเท่าใด",
        "evidence_th": "เงินเดือนที่ได้รับรายเดือนหมายถึง PayFrequency = 1; เงินเดือนสูงสุดต่อชั่วโมงหมายถึง Max(Rate);",
        "SQL": "SELECT Rate FROM EmployeePayHistory WHERE PayFrequency = 1 ORDER BY Rate DESC LIMIT 1, 1",
        "table": "['EmployeePayHistory']"
    },
    {
        "question_id": 7371,
        "db_id": "works_cycles",
        "question": "How many Vista cards expired before the year 2007?",
        "evidence": "Vista Card refers to CardType = 'Vista'; expire before the year 2007 refers to ExpYear< = 2006;\n\n",
        "question_th": "การ์ด Vista กี่ใบที่หมดอายุก่อนปี 2550",
        "evidence_th": "การ์ด Vista หมายถึง CardType = 'Vista'; หมดอายุก่อนปี 2550 หมายถึง ExpYear< = 2006;\n\n",
        "SQL": "SELECT COUNT(CreditCardID) FROM CreditCard WHERE CardType = 'Vista' AND ExpYear < 2007",
        "table": "['CreditCard']"
    },
    {
        "question_id": 7395,
        "db_id": "works_cycles",
        "question": "What is the company's profit on the product that was rated second-highest by David?",
        "evidence": "profit on net on a single product = SUBTRACT(ListPrice, StandardCost); second highest rating refers to Rating = 4; David is the ReviewerName;",
        "question_th": "กำไรของบริษัทจากผลิตภัณฑ์ที่ David ได้รับการจัดอันดับสูงสุดเป็นอันดับสองเป็นเท่าใด",
        "evidence_th": "กำไรสุทธิจากผลิตภัณฑ์เดียว = SUBTRACT(ListPrice, StandardCost); คะแนนสูงสุดเป็นอันดับสองหมายถึง คะแนน = 4; เดวิดคือชื่อผู้วิจารณ์",
        "SQL": "SELECT T2.ListPrice - T2.StandardCost FROM ProductReview AS T1 INNER JOIN Product AS T2 ON T1.ProductID = T2.ProductID WHERE T1.ReviewerName = 'David' ORDER BY T1.Rating DESC LIMIT 1",
        "table": "['Product', 'ProductReview']"
    },
    {
        "question_id": 7398,
        "db_id": "works_cycles",
        "question": "What is the discount percentage of \"LL Road Frame Sale\"?",
        "evidence": "discount percentage refers to DiscountPct; LL Road Frame Sale is a description of special offer;",
        "question_th": "เปอร์เซ็นต์ส่วนลดของ \"LL Road Frame Sale\" คือเท่าไร?",
        "evidence_th": "เปอร์เซ็นต์ส่วนลดหมายถึง DiscountPct; LL Road Frame Sale เป็นคำอธิบายของข้อเสนอพิเศษ",
        "SQL": "SELECT DiscountPct FROM SpecialOffer WHERE Description = 'LL Road Frame Sale'",
        "table": "['SpecialOffer']"
    },
    {
        "question_id": 7406,
        "db_id": "works_cycles",
        "question": "What type of employee is David Bradley?",
        "evidence": "type of employee refers to PersonType;",
        "question_th": "David Bradley เป็นพนักงานประเภทใด",
        "evidence_th": "ประเภทของพนักงานหมายถึง PersonType;",
        "SQL": "SELECT PersonType FROM Person WHERE FirstName = 'David' AND LastName = 'Bradley'",
        "table": "['Person']"
    },
    {
        "question_id": 7412,
        "db_id": "works_cycles",
        "question": "Please list the e-mail addresses of all the employees who wish to receive e-mail promotions from Adventureworks and selected partners.",
        "evidence": "employees who wish to receive e-mail promotions from AdventureWorks and selected partners refers to EmailPromotion = 2;",
        "question_th": "โปรดระบุที่อยู่อีเมลของพนักงานทุกคนที่ต้องการรับอีเมลส่งเสริมการขายจาก Adventureworks และพันธมิตรที่เลือก",
        "evidence_th": "พนักงานที่ต้องการรับโปรโมชั่นทางอีเมลจาก AdventureWorks และพันธมิตรที่เลือกอ้างอิงถึง EmailPromotion = 2;",
        "SQL": "SELECT T2.EmailAddress FROM Person AS T1 INNER JOIN EmailAddress AS T2 ON T1.BusinessEntityID = T2.BusinessEntityID WHERE T1.EmailPromotion = 2",
        "table": "['EmailAddress', 'Person']"
    },
    {
        "question_id": 7415,
        "db_id": "works_cycles",
        "question": "Please list the names of all the store contact employees whose credit cards expired in 2007.",
        "evidence": "year of credit card expiration refers to ExpYear; ExpYear = 2007; store contact refers to PersonType = 'SC';",
        "question_th": "กรุณาระบุชื่อพนักงานติดต่อร้านค้าทั้งหมดที่บัตรเครดิตหมดอายุในปี 2550",
        "evidence_th": "ปีที่บัตรเครดิตหมดอายุหมายถึง ExpYear ปีที่หมดอายุ = 2007; ติดต่อร้านค้าหมายถึง PersonType = 'SC';",
        "SQL": "SELECT T1.FirstName, T1.LastName FROM Person AS T1 INNER JOIN PersonCreditCard AS T2 ON T1.BusinessEntityID = T2.BusinessEntityID INNER JOIN CreditCard AS T3 ON T2.CreditCardID = T3.CreditCardID WHERE T3.ExpYear = 2007 AND T1.PersonType = 'SC'",
        "table": "['CreditCard', 'Person', 'PersonCreditCard']"
    },
    {
        "question_id": 7418,
        "db_id": "works_cycles",
        "question": "Please list the departments that David Bradley used to belong to.",
        "evidence": "",
        "question_th": "โปรดระบุแผนกที่ David Bradley เคยเป็น",
        "evidence_th": "",
        "SQL": "SELECT T2.DepartmentID FROM Person AS T1 INNER JOIN EmployeeDepartmentHistory AS T2 ON T1.BusinessEntityID = T2.BusinessEntityID INNER JOIN Department AS T3 ON T2.DepartmentID = T3.DepartmentID WHERE T1.FirstName = 'David' AND T1.LastName = 'Bradley'",
        "table": "['Department', 'EmployeeDepartmentHistory', 'Person']"
    },
    {
        "question_id": 7427,
        "db_id": "works_cycles",
        "question": "Please list the product names of all the products on the LL Road Frame Sale.",
        "evidence": "LL Road Frame Sale is a description of special offer",
        "question_th": "โปรดระบุชื่อผลิตภัณฑ์ของผลิตภัณฑ์ทั้งหมดใน LL Road Frame Sale",
        "evidence_th": "LL Road Frame Sale เป็นคำอธิบายข้อเสนอพิเศษ",
        "SQL": "SELECT T3.Name FROM SpecialOffer AS T1 INNER JOIN SpecialOfferProduct AS T2 ON T1.SpecialOfferID = T2.SpecialOfferID INNER JOIN Product AS T3 ON T2.ProductID = T3.ProductID WHERE T1.Description = 'LL Road Frame Sale'",
        "table": "['Product', 'SpecialOffer', 'SpecialOfferProduct']"
    },
    {
        "question_id": 7441,
        "db_id": "works_cycles",
        "question": "Is there a work order where the planned cost is different from the actual cost?",
        "evidence": "planned cost is different from actual cost refers to ActualCost ! = PlannedCost;",
        "question_th": "มีใบสั่งงานที่ต้นทุนที่วางแผนไว้แตกต่างจากต้นทุนจริงหรือไม่",
        "evidence_th": "ต้นทุนที่วางแผนไว้แตกต่างจากต้นทุนจริงหมายถึง ActualCost ! = ต้นทุนตามแผน;",
        "SQL": "SELECT CASE WHEN ActualCost = PlannedCost THEN 'No' ELSE 'Yes' END FROM WorkOrderRouting",
        "table": "['WorkOrderRouting']"
    },
    {
        "question_id": 7451,
        "db_id": "works_cycles",
        "question": "What is the cost for the sports?",
        "evidence": "cost refers to StandardCost;",
        "question_th": "ค่ากีฬาเท่าไหร่คะ?",
        "evidence_th": "ต้นทุนหมายถึง StandardCost;",
        "SQL": "SELECT T2.StandardCost FROM Product AS T1 INNER JOIN ProductCostHistory AS T2 ON T1.ProductID = T2.ProductID WHERE T1.Name LIKE '%Sport%'",
        "table": "['Product', 'ProductCostHistory']"
    },
    {
        "question_id": 7455,
        "db_id": "works_cycles",
        "question": "How many products with a thumpnail photo?",
        "evidence": "products with a thumbnail photo refers to ProductPhotoID ! = 1 ;",
        "question_th": "มีสินค้ากี่ชิ้นที่มีรูปถ่ายขนาดย่อ?",
        "evidence_th": "สินค้าที่มีภาพขนาดย่อหมายถึง ProductPhotoID ! = 1 ;",
        "SQL": "SELECT COUNT(ProductID) FROM ProductProductPhoto WHERE ProductPhotoID != 1",
        "table": "['ProductProductPhoto']"
    },
    {
        "question_id": 7472,
        "db_id": "works_cycles",
        "question": "What is the the average percentage of profit for the all the product?",
        "evidence": "average profit percentage = DIVIDE(SUBTRACT(ListPrice, StandardCost)), (StandardCost)));",
        "question_th": "เปอร์เซ็นต์กำไรโดยเฉลี่ยสำหรับผลิตภัณฑ์ทั้งหมดคือเท่าไร?",
        "evidence_th": "เปอร์เซ็นต์กำไรเฉลี่ย = DIVIDE(SUBTRACT(ListPrice, StandardCost)), (StandardCost)));",
        "SQL": "SELECT AVG((T1.ListPrice - T2.StandardCost) * 100 / T2.StandardCost) FROM ProductListPriceHistory AS T1 INNER JOIN ProductCostHistory AS T2 ON T1.ProductID = T2.ProductID",
        "table": "['ProductCostHistory', 'ProductListPriceHistory']"
    },
    {
        "question_id": 7492,
        "db_id": "image_and_language",
        "question": "State the total number of the attribute classes.",
        "evidence": "attribute classes refers to ATT_CLASS",
        "question_th": "ระบุจำนวนคลาสแอตทริบิวต์ทั้งหมด",
        "evidence_th": "คลาสแอตทริบิวต์อ้างถึง ATT_CLASS",
        "SQL": "SELECT COUNT(ATT_CLASS_ID) FROM ATT_CLASSES",
        "table": "['ATT_CLASSES']"
    },
    {
        "question_id": 7494,
        "db_id": "image_and_language",
        "question": "Provide the number of predicted classes.",
        "evidence": "predicted classes refers to PRED_CLASS",
        "question_th": "ระบุจำนวนคลาสที่คาดการณ์ไว้",
        "evidence_th": "คลาสที่คาดการณ์หมายถึง PRED_CLASS",
        "SQL": "SELECT COUNT(PRED_CLASS_ID) FROM PRED_CLASSES",
        "table": "['PRED_CLASSES']"
    },
    {
        "question_id": 7522,
        "db_id": "image_and_language",
        "question": "What are the captions of all the self-relation relationship prediction classes?",
        "evidence": "self-relation relationship refers to OBJ1_SAMPLE_ID = OBJ2_SAMPLE_ID and PRED_CLASS; captions of prediction classes refers to PRED_CLASS",
        "question_th": "คำบรรยายของคลาสการทำนายความสัมพันธ์ด้วยตนเองทั้งหมดมีอะไรบ้าง",
        "evidence_th": "ความสัมพันธ์ความสัมพันธ์ตนเองหมายถึง OBJ1_SAMPLE_ID = OBJ2_SAMPLE_ID และ PRED_CLASS; คำบรรยายของคลาสการทำนายอ้างอิงถึง PRED_CLASS",
        "SQL": "SELECT T2.PRED_CLASS FROM IMG_REL AS T1 INNER JOIN pred_classes AS T2 ON T1.PRED_CLASS_ID = T2.PRED_CLASS_ID WHERE T1.OBJ1_SAMPLE_ID = T1.OBJ2_SAMPLE_ID GROUP BY T2.PRED_CLASS",
        "table": "['IMG_REL', 'pred_classes']"
    },
    {
        "question_id": 7530,
        "db_id": "image_and_language",
        "question": "On image no. 5, name the attributes that are composed of multiple objects.",
        "evidence": "image no. 5 refers to IMG_ID = 5; name the attributes refers to ATT_CLASS; multiple objects refers to count(ATT_CLASS) > = 2",
        "question_th": "บนภาพหมายเลข 5 ตั้งชื่อคุณลักษณะที่ประกอบด้วยหลายวัตถุ",
        "evidence_th": "หมายเลขภาพ 5 หมายถึง IMG_ID = 5; ตั้งชื่อแอตทริบิวต์อ้างถึง ATT_CLASS; วัตถุหลายรายการอ้างถึงการนับ (ATT_CLASS) > = 2",
        "SQL": "SELECT T2.ATT_CLASS FROM IMG_OBJ_ATT AS T1 INNER JOIN ATT_CLASSES AS T2 ON T1.ATT_CLASS_ID = T2.ATT_CLASS_ID WHERE T1.IMG_ID = 5 GROUP BY T2.ATT_CLASS HAVING COUNT(T2.ATT_CLASS) > 2",
        "table": "['ATT_CLASSES', 'IMG_OBJ_ATT']"
    },
    {
        "question_id": 7531,
        "db_id": "image_and_language",
        "question": "What attributes are used to describe the wall on image no. 27.",
        "evidence": "What attributes refers to ATT_CLASS; wall on image no. 27 refers to OBJ_CLASS = 'wall' and IMG_ID = 27",
        "question_th": "คุณลักษณะใดที่ใช้อธิบายผนังบนรูปภาพหมายเลข 27.",
        "evidence_th": "คุณลักษณะใดที่อ้างถึง ATT_CLASS; ผนังบนภาพหมายเลข 27 หมายถึง OBJ_CLASS = 'ผนัง' และ IMG_ID = 27",
        "SQL": "SELECT T4.ATT_CLASS FROM IMG_OBJ AS T1 INNER JOIN OBJ_CLASSES AS T2 ON T1.OBJ_CLASS_ID = T2.OBJ_CLASS_ID INNER JOIN IMG_OBJ_ATT AS T3 ON T1.IMG_ID = T3.IMG_ID INNER JOIN ATT_CLASSES AS T4 ON T3.ATT_CLASS_ID = T4.ATT_CLASS_ID WHERE T2.OBJ_CLASS = 'wall' AND T1.IMG_ID = 27 GROUP BY T4.ATT_CLASS",
        "table": "['ATT_CLASSES', 'IMG_OBJ', 'IMG_OBJ_ATT', 'OBJ_CLASSES']"
    },
    {
        "question_id": 7542,
        "db_id": "image_and_language",
        "question": "On image no. 99 identify the percentage of objects that are described as white.",
        "evidence": "image no. 99 refers to IMG_ID = 99; described as white refers to ATT_CLASS = 'white'; percentage = divide(count(OBJ_SAMPLE_ID) where ATT_CLASS = 'white', count(OBJ_SAMPLE_ID)) as percentage",
        "question_th": "บนภาพหมายเลข 99 ระบุเปอร์เซ็นต์ของวัตถุที่อธิบายว่าเป็นสีขาว",
        "evidence_th": "หมายเลขภาพ 99 หมายถึง IMG_ID = 99; อธิบายว่าสีขาวหมายถึง ATT_CLASS = 'สีขาว'; เปอร์เซ็นต์ = หาร (นับ (OBJ_SAMPLE_ID) โดยที่ ATT_CLASS = 'สีขาว' นับ (OBJ_SAMPLE_ID)) เป็นเปอร์เซ็นต์",
        "SQL": "SELECT CAST(SUM(CASE WHEN T2.ATT_CLASS = 'white' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(OBJ_SAMPLE_ID) FROM IMG_OBJ_ATT AS T1 INNER JOIN ATT_CLASSES AS T2 ON T1.ATT_CLASS_ID = T2.ATT_CLASS_ID WHERE T1.IMG_ID = 99",
        "table": "['ATT_CLASSES', 'IMG_OBJ_ATT']"
    },
    {
        "question_id": 7555,
        "db_id": "image_and_language",
        "question": "How many images include the \"wood\" objects?",
        "evidence": "images refer to IMG_ID; \"wood\" objects refer to OBJ_CLASS = 'wood';",
        "question_th": "มีกี่ภาพที่มีวัตถุ \"ไม้\"?",
        "evidence_th": "รูปภาพอ้างถึง IMG_ID; วัตถุ \"ไม้\" อ้างถึง OBJ_CLASS = 'ไม้';",
        "SQL": "SELECT COUNT(DISTINCT T1.IMG_ID) FROM IMG_OBJ AS T1 INNER JOIN OBJ_CLASSES AS T2 ON T1.OBJ_CLASS_ID = T2.OBJ_CLASS_ID WHERE T2.OBJ_CLASS = 'wood'",
        "table": "['IMG_OBJ', 'OBJ_CLASSES']"
    },
    {
        "question_id": 7560,
        "db_id": "image_and_language",
        "question": "Name the object class of the image with lowest bounding box.",
        "evidence": "bounding box refers to X, Y, W, H from IMG_OBJ; lowest relates to the height of the bounding box which refers to MIN(H);",
        "question_th": "ตั้งชื่อคลาสอ็อบเจ็กต์ของรูปภาพด้วยกล่องขอบเขตต่ำสุด",
        "evidence_th": "กรอบขอบเขตหมายถึง X, Y, W, H จาก IMG_OBJ; ต่ำสุดเกี่ยวข้องกับความสูงของกรอบขอบเขตซึ่งอ้างอิงถึง MIN(H)",
        "SQL": "SELECT T2.OBJ_CLASS FROM IMG_OBJ AS T1 INNER JOIN OBJ_CLASSES AS T2 ON T1.OBJ_CLASS_ID = T2.OBJ_CLASS_ID ORDER BY T1.H LIMIT 1",
        "table": "['IMG_OBJ', 'OBJ_CLASSES']"
    },
    {
        "question_id": 7562,
        "db_id": "image_and_language",
        "question": "Which images have more than 20 object samples?",
        "evidence": "images have more than 20 object samples refer to IMG_ID where COUNT(OBJ_SAMPLE_ID) > 20;",
        "question_th": "ภาพใดมีตัวอย่างวัตถุมากกว่า 20 รายการ",
        "evidence_th": "รูปภาพมีตัวอย่างวัตถุมากกว่า 20 รายการ อ้างอิงถึง IMG_ID โดยที่ COUNT(OBJ_SAMPLE_ID) > 20;",
        "SQL": "SELECT IMG_ID FROM IMG_OBJ GROUP BY IMG_ID HAVING COUNT(IMG_ID) > 20",
        "table": "['IMG_OBJ']"
    },
    {
        "question_id": 7588,
        "db_id": "image_and_language",
        "question": "List all the ID of the images that have an attribute class of \"horse\".",
        "evidence": "ID of all images refer to IMG_ID; attribute class of \"horse\" refers to ATT_CLASS = 'horse';",
        "question_th": "แสดงรายการ ID ทั้งหมดของรูปภาพที่มีคลาสแอตทริบิวต์เป็น \"horse\"",
        "evidence_th": "ID ของรูปภาพทั้งหมดอ้างอิงถึง IMG_ID; ระดับแอตทริบิวต์ของ \"ม้า\" หมายถึง ATT_CLASS = 'ม้า';",
        "SQL": "SELECT T2.IMG_ID FROM ATT_CLASSES AS T1 INNER JOIN IMG_OBJ_ATT AS T2 ON T1.ATT_CLASS_ID = T2.ATT_CLASS_ID WHERE T1.ATT_CLASS = 'horse'",
        "table": "['ATT_CLASSES', 'IMG_OBJ_ATT']"
    },
    {
        "question_id": 7593,
        "db_id": "image_and_language",
        "question": "How many images have \"picture\" as their attribute class and \"bear\" as their object class?",
        "evidence": "\"picture\" as attribute class refers to ATT_CLASS = 'picture'; \"bear\" as object class refers to OBJ_CLASS = 'bear'; images refer to IMG_ID;",
        "question_th": "มีกี่รูปภาพที่มี \"รูปภาพ\" เป็นคลาสแอตทริบิวต์และมี \"หมี\" เป็นคลาสอ็อบเจ็กต์",
        "evidence_th": "\"รูปภาพ\" เป็นคลาสแอตทริบิวต์อ้างถึง ATT_CLASS = 'รูปภาพ'; \"bear\" เนื่องจากคลาสอ็อบเจ็กต์อ้างถึง OBJ_CLASS = 'bear'; รูปภาพอ้างถึง IMG_ID;",
        "SQL": "SELECT COUNT(T2.IMG_ID) FROM ATT_CLASSES AS T1 INNER JOIN IMG_OBJ_ATT AS T2 ON T1.ATT_CLASS_ID = T2.ATT_CLASS_ID INNER JOIN IMG_OBJ AS T3 ON T2.IMG_ID = T3.IMG_ID INNER JOIN OBJ_CLASSES AS T4 ON T3.OBJ_CLASS_ID = T4.OBJ_CLASS_ID WHERE T1.ATT_CLASS = 'picture' AND T4.OBJ_CLASS = 'bear'",
        "table": "['ATT_CLASSES', 'IMG_OBJ', 'IMG_OBJ_ATT', 'OBJ_CLASSES']"
    },
    {
        "question_id": 7600,
        "db_id": "image_and_language",
        "question": "List all the attribute classes of image ID 22.",
        "evidence": "attribute classes of image ID 22 refer to ATT_CLASS where MG_ID = 22;",
        "question_th": "แสดงรายการคลาสแอตทริบิวต์ทั้งหมดของรูปภาพ ID 22",
        "evidence_th": "คลาสแอตทริบิวต์ของรูปภาพ ID 22 อ้างถึง ATT_CLASS โดยที่ MG_ID = 22;",
        "SQL": "SELECT T1.ATT_CLASS FROM ATT_CLASSES AS T1 INNER JOIN IMG_OBJ_ATT AS T2 ON T1.ATT_CLASS_ID = T2.ATT_CLASS_ID WHERE T2.IMG_ID = 22",
        "table": "['ATT_CLASSES', 'IMG_OBJ_ATT']"
    },
    {
        "question_id": 7601,
        "db_id": "image_and_language",
        "question": "List the object classes of image ID 36 with coordinates (0,0).",
        "evidence": "object classes of image ID 36 refers to OBJ_CLASS where IMG_ID = 36; coordinates (0,0) refer to X and Y coordinates of the bounding box where X = 0 and Y = 0;",
        "question_th": "แสดงรายการคลาสอ็อบเจ็กต์ของรูปภาพ ID 36 พร้อมพิกัด (0,0)",
        "evidence_th": "คลาสอ็อบเจ็กต์ของรูปภาพ ID 36 อ้างถึง OBJ_CLASS โดยที่ IMG_ID = 36; พิกัด (0,0) หมายถึงพิกัด X และ Y ของกรอบขอบเขตโดยที่ X = 0 และ Y = 0;",
        "SQL": "SELECT T2.OBJ_CLASS FROM IMG_OBJ AS T1 INNER JOIN OBJ_CLASSES AS T2 ON T1.OBJ_CLASS_ID = T2.OBJ_CLASS_ID WHERE T1.IMG_ID = 36 AND T1.X = 0 AND T1.Y = 0",
        "table": "['IMG_OBJ', 'OBJ_CLASSES']"
    },
    {
        "question_id": 7604,
        "db_id": "image_and_language",
        "question": "What is the most common object class of image ID 56?",
        "evidence": "the most common object class of image ID 56 refers to MAX(COUNT(OBJ_CLASS_ID)) where IMG_ID = 56;",
        "question_th": "คลาสอ็อบเจ็กต์ที่พบบ่อยที่สุดของรูปภาพ ID 56 คืออะไร",
        "evidence_th": "คลาสอ็อบเจ็กต์ที่พบบ่อยที่สุดของ ID รูปภาพ 56 อ้างอิงถึง MAX(COUNT(OBJ_CLASS_ID)) โดยที่ IMG_ID = 56;",
        "SQL": "SELECT T2.OBJ_CLASS FROM IMG_OBJ AS T1 INNER JOIN OBJ_CLASSES AS T2 ON T1.OBJ_CLASS_ID = T2.OBJ_CLASS_ID WHERE T1.IMG_ID = 56 GROUP BY T2.OBJ_CLASS ORDER BY COUNT(T2.OBJ_CLASS_ID) DESC LIMIT 1",
        "table": "['IMG_OBJ', 'OBJ_CLASSES']"
    },
    {
        "question_id": 7633,
        "db_id": "hockey",
        "question": "State the nick name of the tallest player? If the player had left NHL, mention the last season he was with NHL.",
        "evidence": "nick name refers to nameNick; tallest player refers to MAX(height); had left NHL refers to lastNHL",
        "question_th": "ระบุชื่อเล่นของผู้เล่นที่สูงที่สุด? หากผู้เล่นออกจาก NHL ให้พูดถึงฤดูกาลที่แล้วที่เขาอยู่กับ NHL",
        "evidence_th": "ชื่อเล่นหมายถึงชื่อNick; ผู้เล่นที่สูงที่สุดหมายถึง MAX (ส่วนสูง); ออกจาก NHL หมายถึง LastNHL",
        "SQL": "SELECT nameNick, lastNHL FROM Master ORDER BY height DESC LIMIT 1",
        "table": "['Master']"
    },
    {
        "question_id": 7638,
        "db_id": "hockey",
        "question": "Among all goalies who are still alive, whose first season in NHL in before 1950. List the team names they were in.",
        "evidence": "first season in NHL in before 1950 refers to firstNHL<1950; goalies who are still alive refers to deathYear IS NOT NULL",
        "question_th": "ในบรรดาผู้รักษาประตูทั้งหมดที่ยังมีชีวิตอยู่ ซึ่งมีฤดูกาลแรกใน NHL ก่อนปี 1950 ระบุชื่อทีมที่พวกเขาอยู่",
        "evidence_th": "ฤดูกาลแรกใน NHL ก่อนปี 1950 หมายถึง NHL แรก <1950; ผู้รักษาประตูที่ยังมีชีวิตอยู่หมายถึงปีแห่งความตายไม่เป็นโมฆะ",
        "SQL": "SELECT DISTINCT T3.name FROM Master AS T1 INNER JOIN Goalies AS T2 ON T1.playerID = T2.playerID INNER JOIN Teams AS T3 ON T2.lgID = T3.lgID AND T2.year = T3.year WHERE T1.deathYear IS NOT NULL AND T1.firstNHL < 1950",
        "table": "['Goalies', 'Master', 'Teams']"
    },
    {
        "question_id": 7646,
        "db_id": "hockey",
        "question": "List all living goalies who have greater than 50% wins among all games played. State their last name and first name.",
        "evidence": "wins refers to W; all games played refers to GP;greater than 50% wins among all games played refers to DIVIDE(SUM(W),GP)*100>50",
        "question_th": "รายชื่อผู้รักษาประตูที่มีชีวิตทั้งหมดที่ชนะมากกว่า 50% ในทุกเกมที่เล่น ระบุนามสกุลและชื่อของพวกเขา",
        "evidence_th": "ชัยชนะหมายถึง W; ทุกเกมที่เล่นหมายถึง GP; การชนะมากกว่า 50% ในทุกเกมที่เล่นหมายถึง DIVIDE(SUM(W),GP)*100>50",
        "SQL": "SELECT T1.firstName, T1.lastName FROM Master AS T1 INNER JOIN Goalies AS T2 ON T1.playerID = T2.playerID WHERE T1.deathYear IS NOT NULL GROUP BY T1.playerID HAVING CAST(SUM(T2.Min) AS REAL) / SUM(T2.GP) > 0.5",
        "table": "['Goalies', 'Master']"
    },
    {
        "question_id": 7654,
        "db_id": "hockey",
        "question": "Please list the name of the person who was in the Hall of Fame in the year 1978.",
        "evidence": "",
        "question_th": "กรุณาระบุชื่อผู้อยู่ในหอเกียรติยศ ประจำปี พ.ศ. 2521",
        "evidence_th": "",
        "SQL": "SELECT name FROM HOF WHERE year = 1978",
        "table": "['HOF']"
    },
    {
        "question_id": 7664,
        "db_id": "hockey",
        "question": "Among the coaches who have received an award after the year 1940, how many of them have already died?",
        "evidence": "after the year 1940 refers to year>1940; have already died refers to deathYear IS NOT NULL",
        "question_th": "ในบรรดาโค้ชที่ได้รับรางวัลหลังปี 2483 มีกี่คนที่เสียชีวิตไปแล้ว?",
        "evidence_th": "หลังจากปี พ.ศ. 2483 หมายถึง ปี>พ.ศ. 2483 เสียชีวิตแล้ว หมายถึง deathYear IS NOT NULL",
        "SQL": "SELECT COUNT(T1.coachID) FROM Master AS T1 INNER JOIN AwardsCoaches AS T2 ON T1.coachID = T2.coachID WHERE T1.deathYear IS NOT NULL AND T2.year > 1940",
        "table": "['AwardsCoaches', 'Master']"
    },
    {
        "question_id": 7694,
        "db_id": "hockey",
        "question": "Among the players who had 10 empty net goals in their career, who is the tallest? Show his full name.",
        "evidence": "10 empty net goals refers to ENG = 10; the tallest refers to max(height)",
        "question_th": "ในบรรดานักเตะที่ทำประตูว่างในอาชีพได้ 10 ประตู ใครสูงที่สุด? แสดงชื่อเต็มของเขา",
        "evidence_th": "10 ประตูสุทธิที่ว่างเปล่า หมายถึง ENG = 10; สูงที่สุดหมายถึงสูงสุด (สูง)",
        "SQL": "SELECT T1.firstName, T1.lastName FROM Master AS T1 INNER JOIN Goalies AS T2 ON T1.playerID = T2.playerID GROUP BY T2.playerID, T1.height HAVING SUM(T2.ENG) > 10 ORDER BY T1.height DESC LIMIT 1",
        "table": "['Goalies', 'Master']"
    },
    {
        "question_id": 7717,
        "db_id": "hockey",
        "question": "How many shots on goal did Cam Neely had in the year of 1990?",
        "evidence": "1990 refers to the year played; Shot on goal refers to SOG\n",
        "question_th": "แคม นีลี ยิงเข้าประตูกี่ครั้งในปี 1990?",
        "evidence_th": "1990 หมายถึงปีที่เล่น การยิงประตูหมายถึง SOG\n",
        "SQL": "SELECT T2.SOG FROM Master AS T1 INNER JOIN Scoring AS T2 ON T1.playerID = T2.playerID WHERE T1.firstName = 'Cam' AND T1.lastName = 'Neely' AND T2.year = '1990'",
        "table": "['Master', 'Scoring']"
    },
    {
        "question_id": 7724,
        "db_id": "hockey",
        "question": "Which NHL award was most frequently won by the coach with the most wins?",
        "evidence": "",
        "question_th": "รางวัล NHL ใดที่โค้ชได้รับชัยชนะบ่อยที่สุดบ่อยที่สุด?",
        "evidence_th": "",
        "SQL": "SELECT award FROM Teams AS T1 INNER JOIN AwardsCoaches AS T2 ON T1.lgID = T2.lgID WHERE T1.lgID = 'NHL' GROUP BY T2.coachID, T2.award ORDER BY COUNT(T2.award) DESC LIMIT 1",
        "table": "['AwardsCoaches', 'Teams']"
    },
    {
        "question_id": 7725,
        "db_id": "hockey",
        "question": "What is the power play percentage of the team with the most number of loses?",
        "evidence": "Power play percentage refers to PPG, most number of loses refers to MAX(L)\n\n",
        "question_th": "เปอร์เซ็นต์การเล่นที่มีพลังของทีมที่แพ้มากที่สุดคือเท่าใด?",
        "evidence_th": "เปอร์เซ็นต์การเล่นแบบพาวเวอร์เพลย์หมายถึง PPG จำนวนการแพ้ส่วนใหญ่หมายถึง MAX(L)\n\n",
        "SQL": "SELECT CAST(SUM(PPG) AS REAL) * 100 / SUM(PPC) FROM Teams GROUP BY tmID ORDER BY SUM(L) DESC LIMIT 1",
        "table": "['Teams']"
    },
    {
        "question_id": 7729,
        "db_id": "hockey",
        "question": "Which team recorded the most number of road victories in 2005? Indicate the team ID.",
        "evidence": "road victories refers to rW; team id refers to tmID; victories and wins are synonyms\n\n",
        "question_th": "ทีมใดบันทึกชัยชนะบนท้องถนนได้มากที่สุดในปี 2548 ระบุรหัสทีม",
        "evidence_th": "ชัยชนะบนท้องถนนหมายถึง rW; รหัสทีมหมายถึง tmID; ชัยชนะและชัยชนะเป็นคำพ้องความหมาย\n\n",
        "SQL": "SELECT tmID FROM TeamSplits WHERE YEAR = '2005' ORDER BY rW DESC LIMIT 1",
        "table": "['TeamSplits']"
    },
    {
        "question_id": 7751,
        "db_id": "hockey",
        "question": "How many Canadian players, between the ages of 18 and 24 when they initially played their first NHL, had a cumulative goal total of no more than 5? Indicate their complete names, the year, and the team for which they scored the specified amount of goals.",
        "evidence": "Canadian players mean player whose birthCountry = Canada; ages of 18 and 24 refers to SUBTRACT(firstNHL, birthYear) BETWEEN 18 AND 24; cumulative goal total of no more than 5 refers to G < 5; complete name = nameGiven + lastName",
        "question_th": "ผู้เล่นชาวแคนาดาอายุระหว่าง 18 ถึง 24 ปีเมื่อเริ่มเล่น NHL ครั้งแรก มีผู้เล่นชาวแคนาดากี่คนที่มีเป้าหมายสะสมรวมไม่เกิน 5 คน ระบุชื่อเต็ม ปี และทีมที่ทำประตูได้ตามจำนวนที่ระบุ",
        "evidence_th": "ผู้เล่นชาวแคนาดา หมายถึง ผู้เล่นที่มีประเทศเกิด = แคนาดา; อายุ 18 และ 24 ปีหมายถึง SUBTRACT (firstNHL, ปีเกิด) ระหว่าง 18 และ 24 ปี; เป้าหมายสะสมรวมไม่เกิน 5 หมายถึง G < 5; ชื่อเต็ม = nameGiven + นามสกุล",
        "SQL": "SELECT T2.nameGiven, T2.lastName, T2.birthYear, birthMon, birthDay , T3.tmID FROM Scoring AS T1 INNER JOIN Master AS T2 ON T2.playerID = T1.playerID INNER JOIN Teams AS T3 ON T3.tmID = T1.tmID WHERE (T2.firstNHL - T2.birthYear) BETWEEN 18 AND 24 AND T3.G < 5",
        "table": "['Master', 'Scoring', 'Teams']"
    },
    {
        "question_id": 7753,
        "db_id": "hockey",
        "question": "What is the power play chances of New York Rangers in 2009?",
        "evidence": "power play chanses = DIVIDE (PPG, PPC); name = New York Rangers; year = 2009",
        "question_th": "โอกาสในการเล่นอย่างมีพลังของ New York Rangers ในปี 2009 คืออะไร?",
        "evidence_th": "จังหวะการเล่นที่มีพลัง = DIVIDE (PPG, PPC); ชื่อ = นิวยอร์ก เรนเจอร์ส; ปี = 2552",
        "SQL": "SELECT CAST(PPG AS REAL) / PPC FROM Teams WHERE year = 2009 AND name = 'New York Rangers'",
        "table": "['Teams']"
    },
    {
        "question_id": 7761,
        "db_id": "hockey",
        "question": "Among the teams that played in 1922's Stanley Cup finals, how many of them had over 20 points in that year?",
        "evidence": "how many teams refer to COUNT(tmID); over 20 points refer to Pts>20; year = 1922;",
        "question_th": "ในบรรดาทีมที่เล่นในรอบชิงชนะเลิศถ้วยสแตนลีย์ในปี 1922 มีกี่ทีมที่มีคะแนนมากกว่า 20 คะแนนในปีนั้น",
        "evidence_th": "มีกี่ทีมที่อ้างถึง COUNT(tmID); มากกว่า 20 คะแนน หมายถึง Pts>20; ปี = 1922;",
        "SQL": "SELECT COUNT(T1.tmID) FROM TeamsSC AS T1 INNER JOIN Teams AS T2 ON T1.tmID = T2.tmID AND T1.year = T2.year WHERE T1.year = '1922' AND T2.Pts > 20",
        "table": "['Teams', 'TeamsSC']"
    },
    {
        "question_id": 7769,
        "db_id": "hockey",
        "question": "Please list the first names of the coaches whose team played in 1922's Stanley Cup finals.",
        "evidence": "teams refer to tmID; year = 1922;",
        "question_th": "โปรดระบุชื่อโค้ชที่ทีมของเขาเล่นในรอบชิงชนะเลิศถ้วยสแตนลีย์ในปี 1922",
        "evidence_th": "ทีมอ้างถึง tmID; ปี = 1922;",
        "SQL": "SELECT T3.firstName FROM Coaches AS T1 INNER JOIN TeamsSC AS T2 ON T1.year = T2.year AND T1.tmID = T2.tmID INNER JOIN Master AS T3 ON T1.coachID = T3.coachID WHERE T2.year = 1922",
        "table": "['Coaches', 'Master', 'TeamsSC']"
    },
    {
        "question_id": 7778,
        "db_id": "hockey",
        "question": "In the year that the Montreal Canadiens had 24 penalty minutes in the Stanley Cup finals, how many wins did the team had in total?",
        "evidence": "penalty minutes refer to PIM = 24; wins refer to W;",
        "question_th": "ในปีที่มอนทรีออลชาวแคนาดามีเวลาจุดโทษ 24 นาทีในรอบชิงชนะเลิศถ้วยสแตนลีย์ ทีมชนะทั้งหมดกี่ครั้ง",
        "evidence_th": "นาทีการลงโทษอ้างถึง PIM = 24; การชนะหมายถึง W;",
        "SQL": "SELECT T2.W FROM Teams AS T1 INNER JOIN TeamsSC AS T2 ON T1.tmID = T2.tmID AND T1.year = T2.year WHERE T1.name = 'Montreal Canadiens' AND T2.PIM = 24",
        "table": "['Teams', 'TeamsSC']"
    },
    {
        "question_id": 7792,
        "db_id": "hockey",
        "question": "Which was the dominant hand for the goaltender who played 32 games for QUN in 1973? Give the full name.",
        "evidence": "the dominant hand refers to shootCatch; year = 1973; tmID = 'QUN'; played 32 games refers to GP = 32;",
        "question_th": "มือไหนคือมือที่โดดเด่นของผู้รักษาประตูที่ลงเล่น 32 เกมให้กับ QUN ในปี 1973? แจ้งชื่อเต็มครับ.",
        "evidence_th": "มือที่โดดเด่นหมายถึง ShootCatch; ปี = 1973; tmID = 'คุน'; เล่นไป 32 เกม หมายถึง GP = 32;",
        "SQL": "SELECT T2.shootCatch, T2.firstName, T2.lastName FROM Goalies AS T1 INNER JOIN Master AS T2 ON T1.playerID = T2.playerID AND T1.year = 1973 WHERE T1.tmID = 'QUN' AND T1.GP = 32",
        "table": "['Goalies', 'Master']"
    },
    {
        "question_id": 7795,
        "db_id": "hockey",
        "question": "For the goalie whose legendsID is \"P196402\" , how many games did he play in the league?",
        "evidence": "",
        "question_th": "สำหรับผู้รักษาประตูที่มีรหัสตำนานคือ \"P196402\" เขาได้ลงเล่นในลีกกี่เกม?",
        "evidence_th": "",
        "SQL": "SELECT SUM(T1.GP) FROM Goalies AS T1 INNER JOIN Master AS T2 ON T1.playerID = T2.playerID WHERE T2.legendsID = 'P196402'",
        "table": "['Goalies', 'Master']"
    },
    {
        "question_id": 7803,
        "db_id": "hockey",
        "question": "State the player ID of player with average height of 75.",
        "evidence": "average height of 75 refers to AVG(height) = 75;",
        "question_th": "ระบุ ID ผู้เล่นของผู้เล่นที่มีส่วนสูงเฉลี่ย 75",
        "evidence_th": "ความสูงเฉลี่ย 75 หมายถึง AVG(height) = 75;",
        "SQL": "SELECT DISTINCT playerID FROM Master GROUP BY playerID HAVING AVG(height) = 75",
        "table": "['Master']"
    },
    {
        "question_id": 7804,
        "db_id": "hockey",
        "question": "Who is the heaviest player? State player ID of 5 heaviest players.",
        "evidence": "5 heaviest players refer to MAX(weight) limit to 5 playerID;",
        "question_th": "นักเตะที่หนักที่สุดคือใคร? ระบุ ID ผู้เล่นของผู้เล่นที่หนักที่สุด 5 คน",
        "evidence_th": "ผู้เล่นที่หนักที่สุด 5 คนหมายถึง MAX (น้ำหนัก) จำกัด ไว้ที่ 5 ผู้เล่น ID;",
        "SQL": "SELECT playerID FROM Master ORDER BY weight DESC LIMIT 5",
        "table": "['Master']"
    },
    {
        "question_id": 7808,
        "db_id": "hockey",
        "question": "What is the height and weight for coaches who have won awards in 1930?",
        "evidence": "year = 1930;",
        "question_th": "ส่วนสูงและน้ำหนักของโค้ชที่ได้รับรางวัลในปี 1930 คือเท่าใด",
        "evidence_th": "ปี = 1930;",
        "SQL": "SELECT T1.height, T1.weight FROM Master AS T1 INNER JOIN AwardsCoaches AS T2 ON T1.coachID = T2.coachID WHERE T2.year = '1930'",
        "table": "['AwardsCoaches', 'Master']"
    },
    {
        "question_id": 7816,
        "db_id": "hockey",
        "question": "What are the total weights of players for team 'ANA' as per year 1997?",
        "evidence": "ANA refers to tmID;",
        "question_th": "น้ำหนักรวมของผู้เล่นสำหรับทีม 'ANA' ในปี 1997 คือเท่าใด",
        "evidence_th": "ANA หมายถึง tmID;",
        "SQL": "SELECT SUM(T1.weight) FROM Master AS T1 INNER JOIN Scoring AS T2 ON T1.playerID = T2.playerID WHERE T2.year = 1997 AND T2.tmID = 'ANA'",
        "table": "['Master', 'Scoring']"
    },
    {
        "question_id": 7826,
        "db_id": "world",
        "question": "How many cities are there in the country with the largest surface area?",
        "evidence": "largest surface area refers to MAX(SurfaceArea);",
        "question_th": "มีกี่เมืองในประเทศที่มีพื้นที่ผิวที่ใหญ่ที่สุด?",
        "evidence_th": "พื้นที่ผิวที่ใหญ่ที่สุดหมายถึง MAX (SurfaceArea);",
        "SQL": "SELECT T2.ID FROM Country AS T1 INNER JOIN City AS T2 ON T1.Code = T2.CountryCode WHERE T1.SurfaceArea = ( SELECT MAX(SurfaceArea) FROM Country )",
        "table": "['City', 'Country']"
    },
    {
        "question_id": 7830,
        "db_id": "world",
        "question": "List the countries and their official languages in Antarctica.",
        "evidence": "official language refers to IsOfficial = 'T'; Antarctica refers to Continent = 'Antarctica';",
        "question_th": "รายชื่อประเทศและภาษาราชการในทวีปแอนตาร์กติกา",
        "evidence_th": "ภาษาราชการหมายถึง IsOfficial = 'T'; แอนตาร์กติกาหมายถึงทวีป = 'แอนตาร์กติกา';",
        "SQL": "SELECT T1.Name, T2.Language FROM Country AS T1 INNER JOIN CountryLanguage AS T2 ON T1.Code = T2.CountryCode WHERE T1.Continent = 'Antarctica' AND T2.IsOfficial = 'T'",
        "table": "['Country', 'CountryLanguage']"
    },
    {
        "question_id": 7843,
        "db_id": "world",
        "question": "Give the head of the state of the country with the lowest percentage use of English as their language.",
        "evidence": "head of the state refers to HeadOfState; lowest percentage use of English as their language refers to MIN(Percentage WHERE `Language` = 'English');",
        "question_th": "ให้ประมุขแห่งรัฐที่ใช้ภาษาอังกฤษเป็นภาษาของตนน้อยที่สุด",
        "evidence_th": "ประมุขแห่งรัฐหมายถึง HeadOfState; เปอร์เซ็นต์การใช้ภาษาอังกฤษต่ำสุดเป็นภาษาของพวกเขาหมายถึง MIN (เปอร์เซ็นต์โดยที่ `ภาษา` = 'ภาษาอังกฤษ');",
        "SQL": "SELECT T1.HeadOfState FROM Country AS T1 INNER JOIN CountryLanguage AS T2 ON T1.Code = T2.CountryCode WHERE T2.Language = 'English' ORDER BY T2.Percentage LIMIT 1",
        "table": "['Country', 'CountryLanguage']"
    },
    {
        "question_id": 7844,
        "db_id": "world",
        "question": "What is the surface area of the country where Sutton Coldfield city belongs?",
        "evidence": "",
        "question_th": "พื้นที่ผิวของประเทศที่เมืองซัตตัน โคลด์ฟิลด์ สังกัดอยู่คือข้อใด",
        "evidence_th": "",
        "SQL": "SELECT T1.SurfaceArea FROM Country AS T1 INNER JOIN City AS T2 ON T1.Code = T2.CountryCode WHERE T2.Name = 'Sutton Coldfield'",
        "table": "['City', 'Country']"
    },
    {
        "question_id": 7874,
        "db_id": "world",
        "question": "Which country has the smallest surface area?",
        "evidence": "smallest surface area refers to MIN(smallest surface area);",
        "question_th": "ประเทศใดมีพื้นที่ผิวน้อยที่สุด?",
        "evidence_th": "พื้นที่ผิวที่เล็กที่สุดหมายถึง MIN (พื้นที่ผิวที่เล็กที่สุด);",
        "SQL": "SELECT Name FROM Country ORDER BY SurfaceArea ASC LIMIT 1",
        "table": "['Country']"
    },
    {
        "question_id": 7890,
        "db_id": "world",
        "question": "What is the district of Zaanstad?",
        "evidence": "Zaanstad is a name of city;",
        "question_th": "ซานสตัด อำเภออะไร?",
        "evidence_th": "ซานสตัดเป็นชื่อเมือง",
        "SQL": "SELECT District FROM City WHERE name = 'Zaanstad'",
        "table": "['City']"
    },
    {
        "question_id": 7900,
        "db_id": "world",
        "question": "How many cities are there in the country ruled by Kostis Stefanopoulos?",
        "evidence": "ruled by Kostis Stefanopoulos refers to HeadOfState = 'Kostis Stefanopoulos';",
        "question_th": "มีกี่เมืองในประเทศที่ปกครองโดย Kostis Stefanopoulos",
        "evidence_th": "ปกครองโดย Kostis Stefanopoulos หมายถึง HeadOfState = 'Kostis Stefanopoulos';",
        "SQL": "SELECT COUNT(DISTINCT T1.Name) FROM City AS T1 INNER JOIN Country AS T2 ON T1.CountryCode = T2.Code WHERE T2.HeadOfState = 'Kostis Stefanopoulos'",
        "table": "['City', 'Country']"
    },
    {
        "question_id": 7912,
        "db_id": "world",
        "question": "How many cities are there in the country with the surface area of 652090?",
        "evidence": "",
        "question_th": "มีกี่เมืองในประเทศที่มีพื้นที่ผิว 652090",
        "evidence_th": "",
        "SQL": "SELECT T2.Name, COUNT(T1.Name) FROM City AS T1 INNER JOIN Country AS T2 ON T1.CountryCode = T2.Code WHERE T2.SurfaceArea = 652090 GROUP BY T2.Name",
        "table": "['City', 'Country']"
    },
    {
        "question_id": 7913,
        "db_id": "world",
        "question": "List down the languages of countries with an independence year between 1980 to 1995.",
        "evidence": "independence year between 1980 to 1995 refers to IndepYear BETWEEN 1980 AND 1995;",
        "question_th": "รายชื่อภาษาของประเทศที่มีปีเอกราชระหว่างปี 1980 ถึง 1995",
        "evidence_th": "ปีเอกราชระหว่างปี 1980 ถึง 1995 หมายถึง IndepYear BETWEEN 1980 และ 1995",
        "SQL": "SELECT T2.Name, T1.Language FROM CountryLanguage AS T1 INNER JOIN Country AS T2 ON T1.CountryCode = T2.Code WHERE T2.IndepYear BETWEEN 1980 AND 1995",
        "table": "['Country', 'CountryLanguage']"
    },
    {
        "question_id": 7918,
        "db_id": "world",
        "question": "Among the countries that use Italian as their language, what is the percentage of republic countries?",
        "evidence": "use Italian as their language refers to `Language` = 'Italian'; percentage = MULTIPLY(DIVIDE(SUM(`Language` = 'Italian' WHERE GovernmentForm = 'Republic'), COUNT(`Language` = 'Italian')), 100); use Italian as their language refers to `Language` = 'Italian'; republic countries refers to GovernmentForm = 'Republic';",
        "question_th": "ในบรรดาประเทศที่ใช้ภาษาอิตาลีเป็นภาษาของตน ประเทศสาธารณรัฐมีกี่เปอร์เซ็นต์",
        "evidence_th": "ใช้ภาษาอิตาลีเป็นภาษาของพวกเขาหมายถึง `ภาษา` = 'อิตาลี'; เปอร์เซ็นต์ = MULTIPLY(DIVIDE(SUM(`Language` = 'Italian' WHERE GovernmentForm = 'Republic'), COUNT(`Language` = 'Italian')), 100); ใช้ภาษาอิตาลีเป็นภาษาของพวกเขาหมายถึง `ภาษา` = 'อิตาลี'; ประเทศสาธารณรัฐหมายถึง GovernmentForm = 'สาธารณรัฐ';",
        "SQL": "SELECT CAST(SUM(CASE WHEN T2.GovernmentForm = 'Republic' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(*) FROM CountryLanguage AS T1 INNER JOIN Country AS T2 ON T1.CountryCode = T2.Code WHERE T1.Language = 'Italian'",
        "table": "['Country', 'CountryLanguage']"
    },
    {
        "question_id": 7924,
        "db_id": "music_platform_2",
        "question": "List all the podcast title and its itunes url under the 'society-culture' category.",
        "evidence": "",
        "question_th": "ระบุชื่อพอดแคสต์และ URL ของ iTunes ทั้งหมดภายใต้หมวดหมู่ 'วัฒนธรรมสังคม'",
        "evidence_th": "",
        "SQL": "SELECT T2.title, T2.itunes_url FROM categories AS T1 INNER JOIN podcasts AS T2 ON T2.podcast_id = T1.podcast_id WHERE T1.category = 'society-culture'",
        "table": "['categories', 'podcasts']"
    },
    {
        "question_id": 7926,
        "db_id": "music_platform_2",
        "question": "List the authors who created review for podcast titled 'Pop Rocket' in 2016 with rating less than 5.",
        "evidence": "Pop Rocket' is the title of podcast; in 2016 refers to created_at like'2016%'; rating less than 5 refers to rating < 5; author refers to author_id",
        "question_th": "รายชื่อผู้เขียนที่สร้างบทวิจารณ์พอดแคสต์ชื่อ 'Pop Rocket' ในปี 2559 โดยมีเรตติ้งน้อยกว่า 5",
        "evidence_th": "Pop Rocket' เป็นชื่อของพอดแคสต์ ในปี 2559 หมายถึง create_at like'2016%'; คะแนนน้อยกว่า 5 หมายถึง คะแนน < 5; ผู้เขียนอ้างถึง author_id",
        "SQL": "SELECT T2.author_id FROM podcasts AS T1 INNER JOIN reviews AS T2 ON T2.podcast_id = T1.podcast_id WHERE T1.title = 'Pop Rocket' AND T2.created_at LIKE '2016-%' AND T2.rating < 5",
        "table": "['podcasts', 'reviews']"
    },
    {
        "question_id": 7930,
        "db_id": "music_platform_2",
        "question": "Find the author, rating and review creation date of review for podcast title 'In The Thick'.",
        "evidence": "\"In The Thick\" is the title of podcast; author refers to author_id; creation date refers to created_at",
        "question_th": "ค้นหาผู้เขียน ให้คะแนน และวันที่สร้างบทวิจารณ์สำหรับชื่อพอดแคสต์ 'In The Thick'",
        "evidence_th": "\"In The Thick\" เป็นชื่อของพอดแคสต์ ผู้เขียนอ้างถึง author_id; วันที่สร้างหมายถึง create_at",
        "SQL": "SELECT T2.author_id, T2.rating, T2.created_at FROM podcasts AS T1 INNER JOIN reviews AS T2 ON T2.podcast_id = T1.podcast_id WHERE T1.title = 'In The Thick' GROUP BY T2.author_id, T2.rating, T2.created_at",
        "table": "['podcasts', 'reviews']"
    },
    {
        "question_id": 7940,
        "db_id": "music_platform_2",
        "question": "Write all the review titles and the contents belonging to the podcast 'More Stupider: A 90-Day Fiance Podcast' with a review rating of 1.",
        "evidence": "podcast 'More Stupider: A 90-Day Fiance Podcast'  refers to title = 'More Stupider: A 90-Day Fiance Podcast'; rating of 1 refers to rating = 1",
        "question_th": "เขียนชื่อบทวิจารณ์ทั้งหมดและเนื้อหาที่อยู่ในพอดแคสต์ 'More Stupider: A 90-Day Fiance Podcast' โดยมีคะแนนบทวิจารณ์อยู่ที่ 1",
        "evidence_th": "พอดแคสต์ 'โง่มากขึ้น: พอดแคสต์คู่หมั้น 90 วัน' หมายถึง title = 'โง่มากขึ้น: พอดแคสต์คู่หมั้น 90 วัน'; คะแนน 1 หมายถึง คะแนน = 1",
        "SQL": "SELECT title, content FROM reviews WHERE podcast_id = ( SELECT podcast_id FROM podcasts WHERE title = 'More Stupider: A 90-Day Fiance Podcast' ) AND rating = 1",
        "table": "['podcasts', 'reviews']"
    },
    {
        "question_id": 7965,
        "db_id": "music_platform_2",
        "question": "What is the least common category?",
        "evidence": "least common category refers to Min(Count(category))",
        "question_th": "หมวดหมู่ที่พบน้อยที่สุดคืออะไร?",
        "evidence_th": "หมวดหมู่ทั่วไปน้อยที่สุดหมายถึง Min(Count(category))",
        "SQL": "SELECT category FROM categories GROUP BY category ORDER BY COUNT(podcast_id) ASC LIMIT 1",
        "table": "['categories']"
    },
    {
        "question_id": 7966,
        "db_id": "music_platform_2",
        "question": "What is the longest review?",
        "evidence": "review refers to content; longest review refers to Max(content)",
        "question_th": "รีวิวอะไรยาวที่สุด?",
        "evidence_th": "บทวิจารณ์หมายถึงเนื้อหา รีวิวที่ยาวที่สุดหมายถึงแม็กซ์ (เนื้อหา)",
        "SQL": "SELECT title FROM reviews ORDER BY LENGTH(content) DESC LIMIT 1",
        "table": "['reviews']"
    },
    {
        "question_id": 7984,
        "db_id": "music_platform_2",
        "question": "Among the reviews for the podcast \"Please Excuse My Dead Aunt Sally\", how many of them are made in the year 2019?",
        "evidence": "\"Please Excuse My Dead Aunt Sally\" is the title of podcast; made in the year 2019 refers to created_at like '2019%'",
        "question_th": "ในบรรดาบทวิจารณ์พอดแคสต์ \"Please Excuse My Dead Aunt Sally\" มีกี่บทวิจารณ์ในปี 2019",
        "evidence_th": "\"Please Excuse My Dead Aunt Sally\" เป็นชื่อของพอดแคสต์ สร้างขึ้นในปี 2019 หมายถึง create_at เช่น '2019%'",
        "SQL": "SELECT COUNT(T2.created_at) FROM podcasts AS T1 INNER JOIN reviews AS T2 ON T2.podcast_id = T1.podcast_id WHERE T1.title = 'Please Excuse My Dead Aunt Sally' AND T2.created_at LIKE '2019-%'",
        "table": "['podcasts', 'reviews']"
    },
    {
        "question_id": 7996,
        "db_id": "university",
        "question": "In 2014, what is the name of the university which was considered a leader in the publications rank?",
        "evidence": "In 2014 refers to year = 2014; leader refers to MAX(score); in the publications rank refers to criteria_name = 'Publications Rank'; name of university refers to university_name;",
        "question_th": "ในปี 2014 มหาวิทยาลัยที่ถือว่าเป็นผู้นำอันดับสิ่งพิมพ์มีชื่อว่าอะไร?",
        "evidence_th": "ในปี 2557 หมายถึง ปี = 2557; ผู้นำหมายถึง MAX (คะแนน); ในอันดับสิ่งพิมพ์อ้างอิงถึงเกณฑ์_ชื่อ = 'อันดับสิ่งพิมพ์'; ชื่อมหาวิทยาลัยหมายถึงuniversity_name;",
        "SQL": "SELECT T3.university_name FROM ranking_criteria AS T1 INNER JOIN university_ranking_year AS T2 ON T1.id = T2.ranking_criteria_id INNER JOIN university AS T3 ON T3.id = T2.university_id WHERE T1.criteria_name = 'Publications Rank' AND T2.year = 2014 AND T1.id = 17 ORDER BY T2.score DESC LIMIT 1",
        "table": "['ranking_criteria', 'university', 'university_ranking_year']"
    },
    {
        "question_id": 8000,
        "db_id": "university",
        "question": "How many universities scored 0 in Awards between 2005 to 2015?",
        "evidence": "between 2005 to 2015 refers to year BETWEEN 2005 AND 2015; scored 0 refers to score = 0; in Awards refers to criteria_name = 'Award'",
        "question_th": "มีมหาวิทยาลัยกี่แห่งที่ได้คะแนน 0 ในรางวัลระหว่างปี 2548 ถึง 2558",
        "evidence_th": "ระหว่างปี 2548 ถึง 2558 หมายถึง ปีระหว่างปี 2548 ถึง 2558 คะแนน 0 หมายถึง คะแนน = 0; ในรางวัลหมายถึงเกณฑ์_ชื่อ = 'รางวัล'",
        "SQL": "SELECT COUNT(*) FROM ranking_criteria AS T1 INNER JOIN university_ranking_year AS T2 ON T1.id = T2.ranking_criteria_id WHERE T1.criteria_name = 'Award' AND T2.year BETWEEN 2005 AND 2015 AND T2.score = 0",
        "table": "['ranking_criteria', 'university_ranking_year']"
    },
    {
        "question_id": 8021,
        "db_id": "university",
        "question": "Compute the average score of the university located in Brazil.",
        "evidence": "average score refers to avg(score); located in Brazil refers to country_name = 'Brazil';",
        "question_th": "คำนวณคะแนนเฉลี่ยของมหาวิทยาลัยที่ตั้งอยู่ในบราซิล",
        "evidence_th": "คะแนนเฉลี่ยหมายถึง เฉลี่ย (คะแนน); ตั้งอยู่ในบราซิลหมายถึง Country_name = 'Brazil';",
        "SQL": "SELECT AVG(T2.score) FROM university AS T1 INNER JOIN university_ranking_year AS T2 ON T1.id = T2.university_id INNER JOIN country AS T3 ON T3.id = T1.country_id WHERE T3.country_name = 'Brazil'",
        "table": "['country', 'university', 'university_ranking_year']"
    },
    {
        "question_id": 8022,
        "db_id": "university",
        "question": "In which country does the most populated university in 2014 located ?",
        "evidence": "the most populated university refers to max(num_students); in 2014 refers to year = 2014",
        "question_th": "มหาวิทยาลัยที่มีประชากรมากที่สุดในปี 2014 ตั้งอยู่ในประเทศใด",
        "evidence_th": "มหาวิทยาลัยที่มีประชากรมากที่สุดหมายถึงจำนวนสูงสุด (num_students); ในปี 2557 หมายถึง ปี = 2557",
        "SQL": "SELECT T2.country_id FROM university_year AS T1 INNER JOIN university AS T2 ON T1.university_id = T2.id WHERE T1.year = 2014 ORDER BY T1.num_students DESC LIMIT 1",
        "table": "['university', 'university_year']"
    },
    {
        "question_id": 8038,
        "db_id": "university",
        "question": "How many female students were there at Stanford University in 2011?",
        "evidence": "in 2011 refers to year 2011; female students refers to DIVIDE(MULTIPLY(pct_female_students, num_students), 100); Stanford University refers to university_name = 'Stanford University';",
        "question_th": "ในปี 2554 มีนักศึกษาหญิงจำนวนกี่คนที่มหาวิทยาลัยสแตนฟอร์ด",
        "evidence_th": "ในปี 2554 หมายถึงปี 2554 นักเรียนหญิงหมายถึง DIVIDE(MULTIPLY(pct_Female_students, num_students), 100); มหาวิทยาลัยสแตนฟอร์ด หมายถึง University_name = 'มหาวิทยาลัยสแตนฟอร์ด';",
        "SQL": "SELECT CAST(T1.num_students * T1.pct_female_students AS REAL) / 100 FROM university_year AS T1 INNER JOIN university AS T2 ON T1.university_id = T2.id WHERE T1.year = 2011 AND T2.university_name = 'Stanford University'",
        "table": "['university', 'university_year']"
    },
    {
        "question_id": 8039,
        "db_id": "university",
        "question": "In which nation is Harvard University located?",
        "evidence": "Harvard University refers to university_name = 'Harvard University'; nation refers to country_name",
        "question_th": "มหาวิทยาลัยฮาร์วาร์ดตั้งอยู่ในประเทศใด",
        "evidence_th": "มหาวิทยาลัยฮาร์วาร์ด หมายถึง University_name = 'มหาวิทยาลัยฮาร์วาร์ด'; ประเทศหมายถึงประเทศ_ชื่อ",
        "SQL": "SELECT T2.country_name FROM university AS T1 INNER JOIN country AS T2 ON T1.country_id = T2.id WHERE T1.university_name = 'Harvard University'",
        "table": "['country', 'university']"
    },
    {
        "question_id": 8066,
        "db_id": "university",
        "question": "Calculate the average score per university under Alumni criteria in 2008.",
        "evidence": "under Alumni criteria refers to criteria_name = 'Alumni'; in 2008 refers to year = 2008; average score refers to DIVIDE(SUM(score), COUNT(university_id))",
        "question_th": "คำนวณคะแนนเฉลี่ยต่อมหาวิทยาลัยตามเกณฑ์ศิษย์เก่า ปี 2551",
        "evidence_th": "ภายใต้เกณฑ์ศิษย์เก่า หมายถึง เกณฑ์_ชื่อ = 'ศิษย์เก่า'; ในปี 2551 หมายถึง ปี = 2551; คะแนนเฉลี่ยหมายถึง DIVIDE(SUM(score), COUNT(university_id))",
        "SQL": "SELECT AVG(T2.score) FROM ranking_criteria AS T1 INNER JOIN university_ranking_year AS T2 ON T1.id = T2.ranking_criteria_id WHERE T1.criteria_name = 'Alumni' AND T2.year = 2008",
        "table": "['ranking_criteria', 'university_ranking_year']"
    },
    {
        "question_id": 8076,
        "db_id": "university",
        "question": "Please list the names of all the universities in Australia.",
        "evidence": "in Australia refers to country_name = 'Australia'; name of university refers to university_name",
        "question_th": "กรุณาระบุชื่อมหาวิทยาลัยทั้งหมดในออสเตรเลีย",
        "evidence_th": "ในออสเตรเลียหมายถึง Country_name = 'ออสเตรเลีย'; ชื่อมหาวิทยาลัยหมายถึงuniversity_name",
        "SQL": "SELECT T1.university_name FROM university AS T1 INNER JOIN country AS T2 ON T1.country_id = T2.id WHERE T2.country_name = 'Australia'",
        "table": "['country', 'university']"
    },
    {
        "question_id": 8091,
        "db_id": "university",
        "question": "Show the id of University of Orléans.",
        "evidence": "University of Orléans refers to university_name = 'University of Orléans';",
        "question_th": "แสดงรหัสมหาวิทยาลัยออร์เลอ็อง",
        "evidence_th": "University of Orléans อ้างอิงถึง University_name = 'University of Orléans';",
        "SQL": "SELECT id FROM university WHERE university_name = 'University of Orléans'",
        "table": "['university']"
    },
    {
        "question_id": 8107,
        "db_id": "university",
        "question": "Calculate the average number of criterias among \"Times Higher Education World University Ranking\",\"Shanghai Ranking\" and \"Center for World University Rankings\".",
        "evidence": "average number of criterias refers to DIVIDE(SUM(id), 3); \"Times Higher Education World University Ranking\", \"Shanghai Ranking\" and \"Center for World University Rankings\" refers to system_name IN ('Times Higher Education World University Ranking', 'Shanghai Ranking', 'Center for World University Rankings');",
        "question_th": "คำนวณจำนวนเกณฑ์โดยเฉลี่ยระหว่าง \"การจัดอันดับมหาวิทยาลัยโลกโดย Times Higher Education\", \"อันดับเซี่ยงไฮ้\" และ \"ศูนย์การจัดอันดับมหาวิทยาลัยโลก\"",
        "evidence_th": "จำนวนเกณฑ์เฉลี่ยหมายถึง DIVIDE(SUM(id), 3); \"Times Higher Education World University Ranking\", \"Shanghai Ranking\" และ \"Center for World University Rankings\" หมายถึง system_name IN ('Times Higher Education World University Ranking', 'Shanghai Ranking', 'Center for World University Rankings');",
        "SQL": "SELECT (SUM(CASE WHEN T1.system_name = 'Center for World University Rankings' THEN 1 ELSE 0 END) + SUM(CASE WHEN T1.system_name = 'Shanghai Ranking' THEN 1 ELSE 0 END) + SUM(CASE WHEN T1.system_name = 'Times Higher Education World University Ranking' THEN 1 ELSE 0 END)) / 3 FROM ranking_system AS T1 INNER JOIN ranking_criteria AS T2 ON T1.id = T2.ranking_system_id",
        "table": "['ranking_criteria', 'ranking_system']"
    },
    {
        "question_id": 8117,
        "db_id": "university",
        "question": "Provide the score of the most populated university in 2011.",
        "evidence": "most populated university refers to MAX(num_students); in 2011 refers to year = 2011;",
        "question_th": "ให้คะแนนมหาวิทยาลัยที่มีประชากรมากที่สุดในปี 2554",
        "evidence_th": "มหาวิทยาลัยที่มีประชากรมากที่สุดหมายถึง MAX(num_students); ในปี 2554 หมายถึง ปี = 2554;",
        "SQL": "SELECT T2.score FROM university_year AS T1 INNER JOIN university_ranking_year AS T2 ON T1.university_id = T2.university_id WHERE T1.year = 2011 ORDER BY T1.num_students DESC LIMIT 1",
        "table": "['university_ranking_year', 'university_year']"
    },
    {
        "question_id": 8118,
        "db_id": "university",
        "question": "Give the criteria name where Harvard University scored 100.",
        "evidence": "Harvard University refers to university_name = 'Harvard University'; scored 100 refers to score = 100",
        "question_th": "ระบุชื่อเกณฑ์ที่มหาวิทยาลัยฮาร์วาร์ดได้คะแนน 100",
        "evidence_th": "มหาวิทยาลัยฮาร์วาร์ด หมายถึง University_name = 'มหาวิทยาลัยฮาร์วาร์ด'; คะแนน 100 หมายถึง คะแนน = 100",
        "SQL": "SELECT DISTINCT T3.criteria_name FROM university AS T1 INNER JOIN university_ranking_year AS T2 ON T1.id = T2.university_id INNER JOIN ranking_criteria AS T3 ON T3.id = T2.ranking_criteria_id WHERE T1.university_name = 'Harvard University' AND T2.score = 100",
        "table": "['ranking_criteria', 'university', 'university_ranking_year']"
    },
    {
        "question_id": 8125,
        "db_id": "university",
        "question": "Provide the name of the university with the highest number of male students.",
        "evidence": "highest number of female students refers to MAX(SUBTRACT(num_students, DIVIDE(MULTIPLY(num_students, pct_female_students), 100))); name of university refers to university_name",
        "question_th": "ระบุชื่อมหาวิทยาลัยที่มีนักศึกษาชายมากที่สุด",
        "evidence_th": "จำนวนนักเรียนหญิงสูงสุด หมายถึง MAX(SUBTRACT(num_students, DIVIDE(MULTIPLY(num_students, pct_Female_students), 100))); ชื่อมหาวิทยาลัยหมายถึงuniversity_name",
        "SQL": "SELECT T2.university_name FROM university_year AS T1 INNER JOIN university AS T2 ON T1.university_id = T2.id ORDER BY T1.num_students * T1.pct_female_students / 100 - T1.num_students DESC LIMIT 1",
        "table": "['university', 'university_year']"
    },
    {
        "question_id": 8128,
        "db_id": "university",
        "question": "In which country does Johns Hopkins University located?",
        "evidence": "Johns Hopkins University refers to university_name = 'Johns Hopkins University'; which country refers to country_name",
        "question_th": "มหาวิทยาลัย Johns Hopkins ตั้งอยู่ในประเทศใด",
        "evidence_th": "Johns Hopkins University อ้างอิงถึง University_name = 'Johns Hopkins University'; ประเทศใดหมายถึงประเทศ_ชื่อ",
        "SQL": "SELECT T2.country_name FROM university AS T1 INNER JOIN country AS T2 ON T1.country_id = T2.id WHERE T1.university_name = 'Johns Hopkins University'",
        "table": "['country', 'university']"
    },
    {
        "question_id": 8137,
        "db_id": "university",
        "question": "List the names of universities with a score less than 28% of the average score of all universities in 2015.",
        "evidence": "in 2015 refers to year = 2015; score less than 28% refers to score < MULTIPLY(avg(score), 0.28) where year = 2015; names of universities refers to university_name",
        "question_th": "รายชื่อมหาวิทยาลัยที่ได้คะแนนไม่ถึง 28% ของคะแนนเฉลี่ยของมหาวิทยาลัยทั้งหมด ในปี 2558",
        "evidence_th": "ในปี 2558 หมายถึง ปี = 2558; คะแนนน้อยกว่า 28% หมายถึง คะแนน < MULTIPLY(avg(score), 0.28) โดยที่ปี = 2015; ชื่อมหาวิทยาลัยหมายถึงuniversity_name",
        "SQL": "SELECT T2.university_name FROM university_ranking_year AS T1 INNER JOIN university AS T2 ON T1.university_id = T2.id WHERE T1.year = 2015 AND T1.score * 100 < ( SELECT AVG(score) * 28 FROM university_ranking_year WHERE year = 2015 )",
        "table": "['university', 'university_ranking_year']"
    },
    {
        "question_id": 8138,
        "db_id": "sales_in_weather",
        "question": "How many units of item no.9 were sold in store no.1 on 2012/1/1?",
        "evidence": "store no. 1 refers to store_nbr = 1; item no. 9 refers to item_nbr = 9; on 2012/1/1 refers to date = '2012-01-01'",
        "question_th": "สินค้าหมายเลข 9 ที่จำหน่ายในร้านหมายเลข 1 เมื่อวันที่ 1/1/2555 มีกี่หน่วย?",
        "evidence_th": "หมายเลขร้านค้า 1 หมายถึง store_nbr = 1; หมายเลขสินค้า 9 หมายถึง item_nbr = 9; ในวันที่ 1/1/2555 หมายถึงวันที่ = '2012-01-01'",
        "SQL": "SELECT units FROM sales_in_weather WHERE `date` = '2012-01-01' AND store_nbr = 1 AND item_nbr = 9",
        "table": "['sales_in_weather']"
    },
    {
        "question_id": 8141,
        "db_id": "sales_in_weather",
        "question": "What was the temperature range of station no.1 on 2012/1/1?",
        "evidence": "on 2012/1/1 refers to date = '2012-01-01'; temperature range refers to Subtract (tmax, tmin); station no.1 refers to station_nbr = 1",
        "question_th": "อุณหภูมิของสถานีที่ 1 เมื่อวันที่ 1/1/2555 อยู่ที่เท่าไร?",
        "evidence_th": "ในวันที่ 1/1/2555 หมายถึงวันที่ = '2012-01-01'; ช่วงอุณหภูมิหมายถึงลบ (tmax, tmin); สถานีหมายเลข 1 หมายถึง station_nbr = 1",
        "SQL": "SELECT tmax - tmin AS temrange FROM weather WHERE station_nbr = 1 AND `date` = '2012-01-01'",
        "table": "['weather']"
    },
    {
        "question_id": 8155,
        "db_id": "sales_in_weather",
        "question": "On the day with the highest max temperature in 2012, how many items in store no.3 had no sales?",
        "evidence": "highest max temperature refers to Max(tmax); in 2012 refers to SUBSTR(date, 1, 4) = '2012'; store no.3 refers to store_nbr = 3; had no sale refers to units = 0",
        "question_th": "ในวันที่อุณหภูมิสูงสุดสูงสุดในปี 2555 ร้านค้าหมายเลข 3 ไม่มียอดขายกี่ชิ้น",
        "evidence_th": "อุณหภูมิสูงสุดสูงสุดหมายถึง Max(tmax); ในปี 2555 หมายถึง SUBSTR (วันที่ 1, 4) = '2012'; ร้านค้าหมายเลข 3 หมายถึง store_nbr = 3; ไม่มีการขายหมายถึงหน่วย = 0",
        "SQL": "SELECT COUNT(DISTINCT T1.item_nbr) FROM sales_in_weather AS T1 INNER JOIN relation AS T2 ON T1.store_nbr = T2.store_nbr INNER JOIN weather AS T3 ON T2.station_nbr = T3.station_nbr AND T1.store_nbr = 3 AND SUBSTR(T1.`date`, 1, 4) = '2012' AND T1.units = 0 GROUP BY T3.tmax ORDER BY T3.tmax DESC LIMIT 1",
        "table": "['relation', 'sales_in_weather', 'weather']"
    },
    {
        "question_id": 8164,
        "db_id": "sales_in_weather",
        "question": "Tell the temperature range of the home weather station of store no.7 on 2014/4/28.",
        "evidence": "store no.7 refers to tore_nbr = 7; on 2014/4/28 refers to date = '2014-04-28'; temperature range refers to Subtract (tmax, tmin)",
        "question_th": "บอกช่วงอุณหภูมิสถานีตรวจอากาศประจำบ้านร้านหมายเลข 7 วันที่ 4/28/2557",
        "evidence_th": "ร้านค้าหมายเลข 7 หมายถึง tore_nbr = 7; ในวันที่ 28/04/2014 หมายถึง date = '2014-04-28'; ช่วงอุณหภูมิหมายถึงลบ (tmax, tmin)",
        "SQL": "SELECT T1.tmax - T1.tmin AS temprange FROM weather AS T1 INNER JOIN relation AS T2 ON T1.station_nbr = T2.station_nbr WHERE T2.store_nbr = 7 AND T1.`date` = '2014-04-28'",
        "table": "['relation', 'weather']"
    },
    {
        "question_id": 8180,
        "db_id": "sales_in_weather",
        "question": "How many items weren't sold in store 2 on 1/1/2012?",
        "evidence": "store no.2 refers to store_nbr = 2; item weren't sold refers to units = 0; on 1/1/2012 refers to date = '2012-01-01'",
        "question_th": "มีสินค้าจำนวนเท่าใดที่ไม่ได้ขายในร้านค้า 2 ในวันที่ 1/1/2555",
        "evidence_th": "ร้านค้าหมายเลข 2 หมายถึง store_nbr = 2; สินค้าไม่ได้ขาย หมายถึงหน่วย = 0; วันที่ 1/1/2555 หมายถึง วันที่ = '2012-01-01'",
        "SQL": "SELECT COUNT(item_nbr) FROM sales_in_weather WHERE store_nbr = 2 AND units = 0 AND `date` = '2012-01-01'",
        "table": "['sales_in_weather']"
    },
    {
        "question_id": 8202,
        "db_id": "sales_in_weather",
        "question": "What is the maximum and minimum temperature for station number 1 on 15 January 2012?",
        "evidence": "station number 1 refers to station_nbr = 1 ; minimum temperature = tmin; maximum temperature = tmax; on 15 January 2012 refers to date = '2012-01-15'",
        "question_th": "อุณหภูมิสูงสุดและต่ำสุดของสถานีหมายเลข 1 เมื่อวันที่ 15 มกราคม 2555 คือเท่าใด",
        "evidence_th": "สถานีหมายเลข 1 หมายถึง station_nbr = 1 ; อุณหภูมิต่ำสุด = tmin; อุณหภูมิสูงสุด = tmax; วันที่ 15 มกราคม 2555 อ้างอิงถึงวันที่ = '2012-01-15'",
        "SQL": "SELECT tmax, tmin FROM weather WHERE station_nbr = 1 AND `date` = '2012-01-15'",
        "table": "['weather']"
    },
    {
        "question_id": 8208,
        "db_id": "sales_in_weather",
        "question": "List out dates when haze is recorded in store 35.",
        "evidence": "store 35 refers to store_nbr = 35; haze is recorded refers to codesum like '%'||'HZ'||'%'",
        "question_th": "ระบุวันที่ที่มีการบันทึกหมอกควันในร้าน 35",
        "evidence_th": "ร้านค้า 35 หมายถึง store_nbr = 35; หมอกควันถูกบันทึกหมายถึงรหัสเช่น '%'||'HZ'||'%'",
        "SQL": "SELECT T1.`date` FROM weather AS T1 INNER JOIN relation AS T2 ON T1.station_nbr = T2.station_nbr WHERE T2.store_nbr = 35 AND T1.codesum LIKE '%' OR 'HZ' OR '%'",
        "table": "['relation', 'weather']"
    },
    {
        "question_id": 8213,
        "db_id": "sales_in_weather",
        "question": "What was the average temperature difference between store number 18 and 19 on 16 September 2022?",
        "evidence": "store number 18 refers to store_nbr = 18; store number 19 refers to store_nbr = 19; on 16 September 2022 refers to date = '2022-09-16'; average temperature difference = Subtract(tavg where store_nbr = 18, tavg where store_nbr = 19)",
        "question_th": "อุณหภูมิเฉลี่ยของร้านค้าหมายเลข 18 และ 19 ในวันที่ 16 กันยายน 2022 แตกต่างกันอย่างไร",
        "evidence_th": "ร้านค้าหมายเลข 18 หมายถึง store_nbr = 18; ร้านค้าหมายเลข 19 หมายถึง store_nbr = 19; วันที่ 16 กันยายน 2565 อ้างอิงถึงวันที่ = '2022-09-16'; ความแตกต่างของอุณหภูมิเฉลี่ย = ลบ (tavg โดยที่ store_nbr = 18, tavg โดยที่ store_nbr = 19)",
        "SQL": "SELECT SUM(CASE WHEN T1.store_nbr = 18 THEN T2.tavg ELSE 0 END) - SUM(CASE WHEN T1.store_nbr = 19 THEN T2.tavg ELSE 0 END) FROM relation AS T1 INNER JOIN weather AS T2 ON T1.station_nbr = T2.station_nbr WHERE T2.`date` = '2012-09-16'",
        "table": "['relation', 'weather']"
    },
    {
        "question_id": 8218,
        "db_id": "mondial_geo",
        "question": "In which country does Polish found least in?",
        "evidence": "",
        "question_th": "ประเทศใดที่โปแลนด์พบน้อยที่สุดในประเทศใด",
        "evidence_th": "",
        "SQL": "SELECT T2.Name FROM ethnicGroup AS T1 INNER JOIN country AS T2 ON T1.Country = T2.Code WHERE T1.Name = 'Polish' GROUP BY T2.Name, T1.Percentage ORDER BY T1.Percentage ASC LIMIT 1",
        "table": "['country', 'ethnicGroup']"
    },
    {
        "question_id": 8240,
        "db_id": "mondial_geo",
        "question": "What is the infant mortality rate for Ethiopia?",
        "evidence": "Ethiopia is one of country names",
        "question_th": "อัตราการตายของทารกในเอธิโอเปียคือเท่าไร?",
        "evidence_th": "เอธิโอเปียเป็นหนึ่งในชื่อประเทศ",
        "SQL": "SELECT T2.Infant_Mortality FROM country AS T1 INNER JOIN population AS T2 ON T1.Code = T2.Country WHERE T1.Name = 'Ethiopia'",
        "table": "['country', 'population']"
    },
    {
        "question_id": 8242,
        "db_id": "mondial_geo",
        "question": "How much is her GDP in agriculture for the country with the least area?",
        "evidence": "",
        "question_th": "GDP ของเธอในด้านการเกษตรสำหรับประเทศที่มีพื้นที่น้อยที่สุดคือเท่าไร?",
        "evidence_th": "",
        "SQL": "SELECT T2.GDP * T2.Agriculture FROM country AS T1 INNER JOIN economy AS T2 ON T1.Code = T2.Country ORDER BY T1.Area ASC LIMIT 1",
        "table": "['country', 'economy']"
    },
    {
        "question_id": 8252,
        "db_id": "mondial_geo",
        "question": "Please list the depth of the lakes that are located in the Province of Albania.",
        "evidence": "",
        "question_th": "โปรดระบุความลึกของทะเลสาบที่ตั้งอยู่ในจังหวัดแอลเบเนีย",
        "evidence_th": "",
        "SQL": "SELECT T2.Depth FROM located AS T1 INNER JOIN lake AS T2 ON T1.Lake = T2.Name WHERE T1.Province = 'Albania'",
        "table": "['lake', 'located']"
    },
    {
        "question_id": 8254,
        "db_id": "mondial_geo",
        "question": "How many lakes in the Canary Islands cover an area of over 1000000?",
        "evidence": "",
        "question_th": "มีทะเลสาบกี่แห่งในหมู่เกาะคานารีครอบคลุมพื้นที่มากกว่า 1000,000 แห่ง",
        "evidence_th": "",
        "SQL": "SELECT COUNT(T2.Name) FROM located AS T1 INNER JOIN lake AS T2 ON T1.Lake = T2.Name WHERE T1.Province = 'Canary Islands' AND T2.Area > 1000000",
        "table": "['lake', 'located']"
    },
    {
        "question_id": 8262,
        "db_id": "mondial_geo",
        "question": "Please list the organization names established in the countries where Dutch is spoken.",
        "evidence": "Dutch is one of language",
        "question_th": "โปรดระบุชื่อองค์กรที่จัดตั้งขึ้นในประเทศที่พูดภาษาดัตช์",
        "evidence_th": "ภาษาดัตช์เป็นภาษาหนึ่ง",
        "SQL": "SELECT T2.Name FROM language AS T1 INNER JOIN organization AS T2 ON T1.Country = T2.Country WHERE T1.Name = 'Dutch'",
        "table": "['language', 'organization']"
    },
    {
        "question_id": 8282,
        "db_id": "mondial_geo",
        "question": "What is the area of Egypt as a percentage of Asia?",
        "evidence": "",
        "question_th": "พื้นที่ของอียิปต์คิดเป็นเปอร์เซ็นต์ของเอเชียเป็นเท่าใด",
        "evidence_th": "",
        "SQL": "SELECT T1.Area * 100 / T3.Area FROM country AS T1 INNER JOIN encompasses AS T2 ON T1.Code = T2.Country INNER JOIN continent AS T3 ON T3.Name = T2.Continent WHERE T3.Name = 'Asia' AND T1.Name = 'Egypt'",
        "table": "['continent', 'country', 'encompasses']"
    },
    {
        "question_id": 8284,
        "db_id": "mondial_geo",
        "question": "For the country in which Olsztyn is located, where is the capital?",
        "evidence": "Olsztyn is one of country names",
        "question_th": "สำหรับประเทศที่ Olsztyn ตั้งอยู่ เมืองหลวงอยู่ที่ไหน?",
        "evidence_th": "Olsztyn เป็นหนึ่งในชื่อประเทศ",
        "SQL": "SELECT T1.Capital FROM country AS T1 INNER JOIN city AS T2 ON T1.Code = T2.Country WHERE T2.Name = 'Olsztyn'",
        "table": "['city', 'country']"
    },
    {
        "question_id": 8289,
        "db_id": "mondial_geo",
        "question": "Where is the capital of country which has the largest percentage of Malay people?",
        "evidence": "Malay is one of country names",
        "question_th": "เมืองหลวงของประเทศที่มีประชากรมาเลย์มากที่สุดคือที่ไหน?",
        "evidence_th": "มาเลย์เป็นชื่อประเทศหนึ่ง",
        "SQL": "SELECT T1.Capital FROM country AS T1 INNER JOIN ethnicGroup AS T2 ON T1.Code = T2.Country WHERE T2.Name = 'Malay' ORDER BY T2.Percentage DESC LIMIT 1",
        "table": "['country', 'ethnicGroup']"
    },
    {
        "question_id": 8292,
        "db_id": "mondial_geo",
        "question": "How many rivers finally flows to the sea of 459m in depth?",
        "evidence": "",
        "question_th": "ในที่สุดก็มีแม่น้ำกี่สายไหลลงสู่ทะเลลึก 459 เมตร?",
        "evidence_th": "",
        "SQL": "SELECT COUNT(*) FROM river WHERE Sea IN ( SELECT Name FROM sea WHERE Depth = 459 )",
        "table": "['river', 'sea']"
    },
    {
        "question_id": 8321,
        "db_id": "mondial_geo",
        "question": "List all the cities in Sumatra and state the population of each city.",
        "evidence": "Sumatra is an island",
        "question_th": "รายชื่อเมืองทั้งหมดในสุมาตราและระบุจำนวนประชากรของแต่ละเมือง",
        "evidence_th": "สุมาตราเป็นเกาะ",
        "SQL": "SELECT T1.Name, T1.Population FROM city AS T1 INNER JOIN locatedOn AS T2 ON T1.Name = T2.City INNER JOIN island AS T3 ON T3.Name = T2.Island WHERE T3.Name = 'Sumatra'",
        "table": "['city', 'island', 'locatedOn']"
    },
    {
        "question_id": 8344,
        "db_id": "mondial_geo",
        "question": "In which province and country does Moldoveanu located? State its height.",
        "evidence": "Moldoveanu is a mountain",
        "question_th": "มอลโดวานูตั้งอยู่ในจังหวัดและประเทศใด ระบุความสูงของมัน",
        "evidence_th": "มอลโดวานูเป็นภูเขา",
        "SQL": "SELECT T2.Province, T2.Country, T1.Height FROM mountain AS T1 INNER JOIN geo_mountain AS T2 ON T1.Name = T2.Mountain WHERE T1.Name = 'Moldoveanu'",
        "table": "['geo_mountain', 'mountain']"
    },
    {
        "question_id": 8345,
        "db_id": "mondial_geo",
        "question": "Provide all rivers name and length in USA.",
        "evidence": "USA is a country",
        "question_th": "ระบุชื่อแม่น้ำและความยาวทั้งหมดในสหรัฐอเมริกา",
        "evidence_th": "สหรัฐอเมริกาเป็นประเทศ",
        "SQL": "SELECT DISTINCT T3.Name, T3.Length FROM city AS T1 INNER JOIN located AS T2 ON T1.Name = T2.City INNER JOIN river AS T3 ON T3.Name = T2.River WHERE T2.Country = 'USA'",
        "table": "['city', 'located', 'river']"
    },
    {
        "question_id": 8352,
        "db_id": "mondial_geo",
        "question": "What is the name of the country whose citizens have the lowest purchasing power?",
        "evidence": "Inflation can reduce purchasing power over time for recipients and payers.",
        "question_th": "ประเทศที่พลเมืองมีกำลังซื้อต่ำที่สุดชื่ออะไร?",
        "evidence_th": "อัตราเงินเฟ้อสามารถลดอำนาจการซื้อเมื่อเวลาผ่านไปสำหรับผู้รับและผู้ชำระเงิน",
        "SQL": "SELECT T2.Name FROM economy AS T1 INNER JOIN country AS T2 ON T1.Country = T2.Code ORDER BY T1.Inflation DESC LIMIT 1",
        "table": "['country', 'economy']"
    },
    {
        "question_id": 8353,
        "db_id": "mondial_geo",
        "question": "What province does the 4th most populous city in the United Kingdom belong to, and how many people live there?",
        "evidence": "",
        "question_th": "เมืองที่มีประชากรมากที่สุดเป็นอันดับ 4 ของสหราชอาณาจักรอยู่ในจังหวัดใด และมีกี่คนที่อาศัยอยู่ที่นั่น",
        "evidence_th": "",
        "SQL": "SELECT T1.Province, T1.Population FROM city AS T1 INNER JOIN country AS T2 ON T1.Country = T2.Code WHERE T2.Name = 'United Kingdom' ORDER BY T1.Population DESC LIMIT 3, 1",
        "table": "['city', 'country']"
    },
    {
        "question_id": 8358,
        "db_id": "mondial_geo",
        "question": "How many mountains are there in the country with the most land area?",
        "evidence": "",
        "question_th": "ประเทศที่มีพื้นที่มากที่สุดมีภูเขากี่ลูก",
        "evidence_th": "",
        "SQL": "SELECT COUNT(Mountain) FROM geo_mountain WHERE Country = ( SELECT Code FROM country ORDER BY Area DESC LIMIT 1 )",
        "table": "['country', 'geo_mountain']"
    },
    {
        "question_id": 8381,
        "db_id": "mondial_geo",
        "question": "For the countries have the population north of a billion, which one has the lowest GDP? Give the full name of the country.",
        "evidence": "billion = 1000000000",
        "question_th": "สำหรับประเทศที่มีประชากรมากกว่าพันล้านคน ประเทศไหนมี GDP ต่ำที่สุด? ให้ชื่อเต็มของประเทศ",
        "evidence_th": "พันล้าน = 1000000000",
        "SQL": "SELECT T1.Name FROM country AS T1 INNER JOIN economy AS T2 ON T1.Code = T2.Country WHERE T1.Population > 1000000000 ORDER BY T2.GDP ASC LIMIT 1",
        "table": "['country', 'economy']"
    },
    {
        "question_id": 8390,
        "db_id": "mondial_geo",
        "question": "For all the countries that is smaller than 100 square kilometres, which one has the most GDP?",
        "evidence": "",
        "question_th": "สำหรับทุกประเทศที่มีขนาดเล็กกว่า 100 ตารางกิโลเมตร ประเทศใดมี GDP มากที่สุด",
        "evidence_th": "",
        "SQL": "SELECT T1.Name FROM country AS T1 INNER JOIN economy AS T2 ON T1.Code = T2.Country WHERE T1.Area < 100 ORDER BY T2.GDP DESC LIMIT 1",
        "table": "['country', 'economy']"
    },
    {
        "question_id": 8405,
        "db_id": "mondial_geo",
        "question": "How many times longer is the longest river in Tajikistan than the shortest river?",
        "evidence": "TJ is an abbreviated country code of Tajikistan",
        "question_th": "แม่น้ำที่ยาวที่สุดในทาจิกิสถานยาวกว่าแม่น้ำที่สั้นที่สุดกี่ครั้ง?",
        "evidence_th": "TJ เป็นรหัสประเทศแบบย่อของทาจิกิสถาน",
        "SQL": "SELECT MAX(T2.Length) / MIN(T2.Length) FROM located AS T1 INNER JOIN river AS T2 ON T1.River = T2.Name WHERE T1.Country = 'TJ'",
        "table": "['located', 'river']"
    },
    {
        "question_id": 8408,
        "db_id": "mondial_geo",
        "question": "How many deserts are not located in a single country? Name them.",
        "evidence": "",
        "question_th": "มีทะเลทรายกี่แห่งที่ไม่ได้อยู่ในประเทศเดียว? ตั้งชื่อพวกเขา",
        "evidence_th": "",
        "SQL": "SELECT Desert FROM geo_desert GROUP BY Desert HAVING COUNT(DISTINCT Country) > 1",
        "table": "['geo_desert']"
    },
    {
        "question_id": 8411,
        "db_id": "mondial_geo",
        "question": "What percent of the non volcanic islands in the Lesser Antilles group of islands have an area of no more than 300 square kilometers?",
        "evidence": "Percent = [count(non volcanic islands Lesser Antilles area 300 or less) / count(non volcanic islands Lesser Antilles)] * 100%",
        "question_th": "หมู่เกาะที่ไม่ใช่ภูเขาไฟในกลุ่มหมู่เกาะเลสเซอร์แอนทิลลิสมีพื้นที่ไม่เกิน 300 ตารางกิโลเมตรกี่เปอร์เซ็นต์",
        "evidence_th": "เปอร์เซ็นต์ = [จำนวน (หมู่เกาะที่ไม่ใช่ภูเขาไฟ พื้นที่เลสเซอร์แอนทิลลิส 300 หรือน้อยกว่า) / จำนวน (เกาะที่ไม่ใช่ภูเขาไฟ พื้นที่เลสเซอร์แอนทิลลิส)] * 100%",
        "SQL": "SELECT SUM(CASE WHEN Area <= 300 THEN 1 ELSE 0 END) * 100 / COUNT(*) FROM island WHERE Islands = 'Lesser Antilles' AND (Type != 'volcanic' OR Type IS NULL)",
        "table": "['island']"
    },
    {
        "question_id": 8418,
        "db_id": "mondial_geo",
        "question": "In which city is the sea whose depth is 4232 meters less than that of the Bay of Bengal?",
        "evidence": "",
        "question_th": "ทะเลเมืองใดที่มีความลึกน้อยกว่าอ่าวเบงกอล 4,232 เมตร?",
        "evidence_th": "",
        "SQL": "SELECT T2.City FROM sea AS T1 INNER JOIN located AS T2 ON T1.Name = T2.Sea INNER JOIN city AS T3 ON T3.Name = T2.City WHERE ( SELECT Depth FROM sea WHERE Name LIKE '%Bengal%' ) - T1.Depth = 4235",
        "table": "['city', 'located', 'sea']"
    },
    {
        "question_id": 8449,
        "db_id": "mondial_geo",
        "question": "Which United States province is home to the greatest number of corporations' corporate headquarters?",
        "evidence": "Organization refers to corporation",
        "question_th": "จังหวัดใดของสหรัฐอเมริกาเป็นที่ตั้งของสำนักงานใหญ่ของบริษัทจำนวนมากที่สุด",
        "evidence_th": "องค์กรหมายถึงบริษัท",
        "SQL": "SELECT T1.Province FROM country AS T1 INNER JOIN organization AS T2 ON T1.Code = T2.Country WHERE T1.Name = 'United States' GROUP BY T1.Province ORDER BY COUNT(T1.Name) DESC LIMIT 1",
        "table": "['country', 'organization']"
    },
    {
        "question_id": 8474,
        "db_id": "mondial_geo",
        "question": "Which country has the least organization membership?",
        "evidence": "",
        "question_th": "ประเทศใดมีสมาชิกองค์กรน้อยที่สุด?",
        "evidence_th": "",
        "SQL": "SELECT country FROM organization WHERE country IN ( SELECT Code FROM country ) GROUP BY country ORDER BY COUNT(NAME) LIMIT 1",
        "table": "['country', 'organization']"
    },
    {
        "question_id": 8476,
        "db_id": "mondial_geo",
        "question": "Name the organizations with the most members.",
        "evidence": "",
        "question_th": "ตั้งชื่อองค์กรที่มีสมาชิกมากที่สุด",
        "evidence_th": "",
        "SQL": "SELECT T1.Name FROM organization AS T1 INNER JOIN isMember AS T2 ON T2.Country = T1.Country INNER JOIN country AS T3 ON T2.Country = T3.Code GROUP BY T1.Name ORDER BY COUNT(T3.Name) DESC LIMIT 1",
        "table": "['country', 'isMember', 'organization']"
    },
    {
        "question_id": 8477,
        "db_id": "mondial_geo",
        "question": "What is the capital of Australia? Is the capital a headquarter to any organization? Name the organization(s).",
        "evidence": "",
        "question_th": "เมืองหลวงของออสเตรเลียคืออะไร? เมืองหลวงเป็นสำนักงานใหญ่ขององค์กรใดหรือไม่? ตั้งชื่อองค์กร",
        "evidence_th": "",
        "SQL": "SELECT T2.Capital, T1.Name FROM organization AS T1 INNER JOIN country AS T2 ON T1.City = T2.Capital WHERE T2.Name = 'Australia'",
        "table": "['country', 'organization']"
    },
    {
        "question_id": 8482,
        "db_id": "mondial_geo",
        "question": "What is the height of mountain Dhaulagiri located and in which province is it located?",
        "evidence": "",
        "question_th": "ภูเขาทเลาคีรีมีความสูงเท่าใด และตั้งอยู่ในจังหวัดใด",
        "evidence_th": "",
        "SQL": "SELECT T1.Height, T2.Province FROM mountain AS T1 INNER JOIN geo_mountain AS T2 ON T1.Name = T2.Mountain WHERE T1.Name = 'Dhaulagiri'",
        "table": "['geo_mountain', 'mountain']"
    },
    {
        "question_id": 8500,
        "db_id": "mondial_geo",
        "question": "Which nation, with a population ranging from 60,000,000 to 99,000,000, has the greatest gross domestic product?",
        "evidence": "GDP refers to gross domestic product; Nation and country are synonyms",
        "question_th": "ประเทศใดซึ่งมีประชากรตั้งแต่ 60,000,000 ถึง 99,000,000 คน มีผลิตภัณฑ์มวลรวมภายในประเทศมากที่สุด",
        "evidence_th": "GDP หมายถึงผลิตภัณฑ์มวลรวมภายในประเทศ ประเทศชาติและประเทศเป็นคำพ้องความหมาย",
        "SQL": "SELECT T1.Name, T2.GDP FROM country AS T1 INNER JOIN economy AS T2 ON T1.Code = T2.Country WHERE T1.Population BETWEEN 60000000 AND 90000000 ORDER BY T2.GDP DESC LIMIT 1",
        "table": "['country', 'economy']"
    },
    {
        "question_id": 8506,
        "db_id": "mondial_geo",
        "question": "Lists all governments with a parliamentary democracy that achieved their independence between 01/01/1950 and 12/31/1999.",
        "evidence": "Inhabitants, synonymous with population",
        "question_th": "รายชื่อรัฐบาลทั้งหมดที่มีระบอบประชาธิปไตยแบบรัฐสภาซึ่งได้รับเอกราชระหว่าง 01/01/1950 ถึง 31/12/1999",
        "evidence_th": "ผู้อยู่อาศัย, ตรงกันกับประชากร",
        "SQL": "SELECT * FROM politics WHERE STRFTIME('%Y', Independence) BETWEEN '1950' AND '1999' AND Government = 'parliamentary democracy'",
        "table": "['politics']"
    },
    {
        "question_id": 8517,
        "db_id": "software_company",
        "question": "Of the first 60,000 customers who sent a true response to the incentive mailing sent by the marketing department, how many of them are female?",
        "evidence": "RESPONSE = 'true'; SEX = 'Female';",
        "question_th": "จากลูกค้า 60,000 คนแรกที่ตอบกลับอย่างแท้จริงต่อจดหมายจูงใจที่ฝ่ายการตลาดส่งมา มีกี่รายที่เป็นผู้หญิง?",
        "evidence_th": "การตอบสนอง = 'จริง'; เพศ = 'เพศหญิง';",
        "SQL": "SELECT COUNT(T1.ID) FROM Customers AS T1 INNER JOIN Mailings1_2 AS T2 ON T1.ID = T2.REFID WHERE T1.SEX = 'Female' AND T2.RESPONSE = 'true'",
        "table": "['Customers', 'Mailings1_2']"
    },
    {
        "question_id": 8529,
        "db_id": "software_company",
        "question": "What is the average education level of customers from the place with the highest average income per month?",
        "evidence": "place with the highest average income per month refers to GEOID where MAX(INCOME_K); average education level refers to AVG(EDUCATIONNUM);",
        "question_th": "ระดับการศึกษาเฉลี่ยของลูกค้าจากสถานที่ที่มีรายได้เฉลี่ยสูงสุดต่อเดือนคือเท่าใด",
        "evidence_th": "สถานที่ที่มีรายได้เฉลี่ยสูงสุดต่อเดือนหมายถึง GEOID โดยที่ MAX(INCOME_K) ระดับการศึกษาเฉลี่ยหมายถึง AVG(EDUCATIONNUM);",
        "SQL": "SELECT AVG(T1.EDUCATIONNUM) FROM Customers AS T1 INNER JOIN Demog AS T2 ON T1.GEOID = T2.GEOID ORDER BY T2.INCOME_K DESC LIMIT 1",
        "table": "['Customers', 'Demog']"
    },
    {
        "question_id": 8565,
        "db_id": "software_company",
        "question": "List down the number of inhabitants of customers with a widowed marital status and false response .",
        "evidence": "number of inhabitants refers to INHABITANTS_K; RESPONSE = 'false';",
        "question_th": "ระบุจำนวนผู้อยู่อาศัยของลูกค้าที่มีสถานภาพสมรสเป็นม่ายและการตอบกลับที่เป็นเท็จ",
        "evidence_th": "จำนวนประชากรหมายถึง INHABITANTS_K; การตอบสนอง = 'เท็จ';",
        "SQL": "SELECT COUNT(T1.ID) FROM Customers AS T1 INNER JOIN Mailings1_2 AS T2 ON T1.ID = T2.REFID INNER JOIN Demog AS T3 ON T1.GEOID = T3.GEOID WHERE T1.MARITAL_STATUS = 'Widowed' AND T2.RESPONSE = 'true'",
        "table": "['Customers', 'Demog', 'Mailings1_2']"
    },
    {
        "question_id": 8566,
        "db_id": "software_company",
        "question": "What is the response and number of inhabitants of the oldest female customer?",
        "evidence": "number of inhabitants refers to INHABITANTS_K; oldest female customer refers to SEX = 'Female' where MAX(age);",
        "question_th": "การตอบสนองและจำนวนผู้อยู่อาศัยของลูกค้าหญิงที่มีอายุมากที่สุดคืออะไร?",
        "evidence_th": "จำนวนประชากรหมายถึง INHABITANTS_K; ลูกค้าหญิงที่มีอายุมากที่สุด หมายถึง SEX = 'เพศหญิง' โดยที่ MAX(อายุ);",
        "SQL": "SELECT T2.RESPONSE, T3.INHABITANTS_K FROM Customers AS T1 INNER JOIN Mailings1_2 AS T2 ON T1.ID = T2.REFID INNER JOIN Demog AS T3 ON T1.GEOID = T3.GEOID WHERE T1.SEX = 'Female' ORDER BY T1.age DESC LIMIT 1",
        "table": "['Customers', 'Demog', 'Mailings1_2']"
    },
    {
        "question_id": 8573,
        "db_id": "software_company",
        "question": "What is the age of female customers within the number of inhabitants below 30?",
        "evidence": "female customers within the number of inhabitants below 30 refer to SEX = 'Female' where INHABITANTS_K < 30;",
        "question_th": "ลูกค้าผู้หญิงที่มีอายุต่ำกว่า 30 ปีมีอายุเท่าใด",
        "evidence_th": "ลูกค้าผู้หญิงในจำนวนประชากรต่ำกว่า 30 ปีหมายถึง SEX = 'หญิง' โดยที่ INHABITANTS_K < 30;",
        "SQL": "SELECT age FROM Customers WHERE GEOID IN ( SELECT GEOID FROM Demog WHERE INHABITANTS_K < 30 ) AND SEX = 'Female'",
        "table": "['Customers', 'Demog']"
    },
    {
        "question_id": 8576,
        "db_id": "software_company",
        "question": "In male customers with an occupation handlers or cleaners, what is the percentage of customers with a true response?",
        "evidence": "DIVIDE(COUNT(OCCUPATION = 'Handlers-cleaners', SEX = 'Male' and RESPONSE = 'true'), COUNT(OCCUPATION = 'Handlers-cleaners' and SEX = 'Male')) as percentage;",
        "question_th": "ลูกค้าชายที่มีอาชีพรับจ้างหรือพนักงานทำความสะอาด เปอร์เซ็นต์ของลูกค้าที่ตอบกลับอย่างแท้จริงคือเท่าใด",
        "evidence_th": "DIVIDE(COUNT(OCCUPATION = 'Handlers-cleaners', SEX = 'Male' และ RESPONSE = 'true'), COUNT(OCCUPATION = 'Handlers-cleaners' และ SEX = 'Male')) เป็นเปอร์เซ็นต์;",
        "SQL": "SELECT CAST(SUM(CASE WHEN T2.RESPONSE = 'true' THEN 1.0 ELSE 0 END) AS REAL) * 100 / COUNT(T2.REFID) FROM Customers AS T1 INNER JOIN Mailings1_2 AS T2 ON T1.ID = T2.REFID WHERE T1.OCCUPATION = 'Handlers-cleaners' AND T1.SEX = 'Male'",
        "table": "['Customers', 'Mailings1_2']"
    },
    {
        "question_id": 8580,
        "db_id": "software_company",
        "question": "Point out the greater one between the number of actual responding and not responding to mailing.",
        "evidence": "COUNT(REFID where RESPONSE = 'true')>or<COUNT(REFID where RESPONSE = 'false');",
        "question_th": "ชี้ให้เห็นสิ่งที่มากกว่าระหว่างจำนวนการตอบกลับจริงและการไม่ตอบกลับทางไปรษณีย์",
        "evidence_th": "COUNT(REFID โดยที่ RESPONSE = 'true')>หรือ<COUNT(REFID โดยที่ RESPONSE = 'false');",
        "SQL": "SELECT RESPONSE FROM Mailings1_2 GROUP BY RESPONSE ORDER BY COUNT(RESPONSE) DESC LIMIT 1",
        "table": "['Mailings1_2']"
    },
    {
        "question_id": 8586,
        "db_id": "chicago_crime",
        "question": "How many community areas are there in Central Chicago?",
        "evidence": "Central Chicago refers to side = 'Central'",
        "question_th": "Central Chicago มีพื้นที่ชุมชนกี่แห่ง?",
        "evidence_th": "เซ็นทรัลชิคาโก หมายถึง ฝั่ง = 'เซ็นทรัล'",
        "SQL": "SELECT COUNT(*) FROM Community_Area WHERE side = 'Central'",
        "table": "['Community_Area']"
    },
    {
        "question_id": 8603,
        "db_id": "chicago_crime",
        "question": "What is the fax number for the district with the most number of crimes in January, 2018?",
        "evidence": "fax number refers to fax; the most number of crimes refers to max(count(case_number)); in January 2018 refers to date like '%1/2018%'",
        "question_th": "หมายเลขแฟกซ์ของอำเภอที่มีความผิดมากที่สุดในเดือนมกราคม 2561 คือหมายเลขใด",
        "evidence_th": "หมายเลขแฟกซ์หมายถึงแฟกซ์ จำนวนอาชญากรรมมากที่สุดหมายถึง max(count(case_number)); ในเดือนมกราคม 2018 อ้างถึงวันที่เช่น '%1/2018%'",
        "SQL": "SELECT T1.fax FROM District AS T1 INNER JOIN Crime AS T2 ON T1.district_no = T2.district_no WHERE T2.date LIKE '%1/2018%' GROUP BY T2.district_no ORDER BY COUNT(case_number) DESC LIMIT 1",
        "table": "['Crime', 'District']"
    },
    {
        "question_id": 8604,
        "db_id": "chicago_crime",
        "question": "What is the average number of crimes in a neighborhood in Central Chicago?",
        "evidence": "Central Chicago refers to side = 'Central'; average number = divide(count(report_no), count(community_area_no))",
        "question_th": "จำนวนอาชญากรรมโดยเฉลี่ยในย่านใจกลางชิคาโกคือเท่าไร?",
        "evidence_th": "Central Chicago หมายถึงฝั่ง = 'Central'; จำนวนเฉลี่ย = หาร (จำนวน (report_no), จำนวน (community_area_no))",
        "SQL": "SELECT CAST(COUNT(T1.report_no) AS REAL) / COUNT(T2.community_area_no) FROM Crime AS T1 INNER JOIN Community_Area AS T2 ON T1.community_area_no = T2.community_area_no WHERE T2.side = 'Central'",
        "table": "['Community_Area', 'Crime']"
    },
    {
        "question_id": 8614,
        "db_id": "chicago_crime",
        "question": "Give the name of the community area which had the most pocket-picking thefts.",
        "evidence": "name of the community area refers to community_area_name; the most refers to max(case_number); pocket-picking theft refers to primary_description = 'THEFT' AND secondary_description = 'POCKET-PICKING'",
        "question_th": "ระบุชื่อพื้นที่ชุมชนที่มีการขโมยกระเป๋ามากที่สุด",
        "evidence_th": "ชื่อของพื้นที่ชุมชนหมายถึง community_area_name; มากที่สุดอ้างถึงสูงสุด (case_number); การโจรกรรมกระเป๋าหมายถึง primary_description = 'THEFT' และ Secondary_description = 'POCKET-PICKING'",
        "SQL": "SELECT T3.community_area_name FROM IUCR AS T1 INNER JOIN Crime AS T2 ON T1.iucr_no = T2.iucr_no INNER JOIN Community_Area AS T3 ON T2.community_area_no = T3.community_area_no WHERE T1.primary_description = 'THEFT' AND T1.secondary_description = 'POCKET-PICKING' GROUP BY T2.community_area_no ORDER BY T2.case_number DESC LIMIT 1",
        "table": "['Community_Area', 'Crime', 'IUCR']"
    },
    {
        "question_id": 8615,
        "db_id": "chicago_crime",
        "question": "Who was the alderman of the legislative district where case No. JB103470 took place? Give the full name.",
        "evidence": "case No. JB103470 refers to case_number = 'JB103470'; full name refers to alderman_first_name, alderman_last_name",
        "question_th": "เทศมนตรีเขตนิติบัญญัติที่เกิดคดีหมายเลข JB103470 คือใคร? แจ้งชื่อเต็มครับ.",
        "evidence_th": "กรณีหมายเลข JB103470 อ้างถึง case_number = 'JB103470'; ชื่อเต็มหมายถึง alderman_first_name, alderman_last_name",
        "SQL": "SELECT T1.alderman_first_name, T1.alderman_last_name FROM Ward AS T1 INNER JOIN Crime AS T2 ON T1.ward_no = T2.ward_no WHERE T2.case_number = 'JB103470'",
        "table": "['Crime', 'Ward']"
    },
    {
        "question_id": 8617,
        "db_id": "chicago_crime",
        "question": "How many different neighborhoods are there in Roseland community?",
        "evidence": "Roseland community refers to community_area_name = 'Roseland'",
        "question_th": "ชุมชนโรสแลนด์มีละแวกใกล้เคียงกี่แห่ง?",
        "evidence_th": "ชุมชน Roseland อ้างถึง community_area_name = 'Roseland'",
        "SQL": "SELECT SUM(CASE WHEN T1.community_area_name = 'Roseland' THEN 1 ELSE 0 END) FROM Community_Area AS T1 INNER JOIN Neighborhood AS T2 ON T1.community_area_no = T2.community_area_no",
        "table": "['Community_Area', 'Neighborhood']"
    },
    {
        "question_id": 8634,
        "db_id": "chicago_crime",
        "question": "How many neighborhoods are there in Near North Side?",
        "evidence": "Near North Side refers to community_area_name = 'Near North Side'",
        "question_th": "เนียร์นอร์ทไซด์มีกี่ย่าน?",
        "evidence_th": "ใกล้ฝั่งเหนือ หมายถึง community_area_name = 'ใกล้ฝั่งเหนือ'",
        "SQL": "SELECT SUM(CASE WHEN T1.community_area_name = 'Near North Side' THEN 1 ELSE 0 END) FROM Community_Area AS T1 INNER JOIN Neighborhood AS T2 ON T1.community_area_no = T2.community_area_no",
        "table": "['Community_Area', 'Neighborhood']"
    },
    {
        "question_id": 8647,
        "db_id": "chicago_crime",
        "question": "How many crimes were handled by Brendan Reilly on 7th October 2018?",
        "evidence": "7th October 2018 refers to date like '10/7/2018%'",
        "question_th": "Brendan Reilly จัดการอาชญากรรมกี่ครั้งในวันที่ 7 ตุลาคม 2018",
        "evidence_th": "7 ตุลาคม 2018 หมายถึงวันที่เช่น '10/7/2018%'",
        "SQL": "SELECT SUM(CASE WHEN T2.alderman_last_name = 'Reilly' THEN 1 ELSE 0 END) FROM Crime AS T1 INNER JOIN Ward AS T2 ON T1.ward_no = T2.ward_no WHERE T2.alderman_name_suffix IS NULL AND T2.alderman_first_name = 'Brendan' AND date LIKE '10/7/2018%'",
        "table": "['Crime', 'Ward']"
    },
    {
        "question_id": 8663,
        "db_id": "chicago_crime",
        "question": "How many of the crimes that happened in the street have FBI title \"Homicide 1st & 2nd Degree\"?",
        "evidence": "in the street refers to location_description = 'STREET'",
        "question_th": "อาชญากรรมบนท้องถนนที่มีชื่อ FBI ว่า \"Homicide 1st & 2nd Degree\" มีกี่คดี?",
        "evidence_th": "ในถนนหมายถึง location_description = 'STREET'",
        "SQL": "SELECT SUM(CASE WHEN T2.location_description = 'STREET' THEN 1 ELSE 0 END) FROM FBI_Code AS T1 INNER JOIN Crime AS T2 ON T2.fbi_code_no = T1.fbi_code_no WHERE T1.title = 'Homicide 1st & 2nd Degree'",
        "table": "['Crime', 'FBI_Code']"
    },
    {
        "question_id": 8698,
        "db_id": "chicago_crime",
        "question": "How many weapons violation crimes have occurred in the Calumet district?",
        "evidence": "\"Calumet\" is the district_name; 'WEAPON VIOLATION' is the primary_description of crime",
        "question_th": "อาชญากรรมการละเมิดอาวุธเกิดขึ้นกี่ครั้งในเขต Calumet?",
        "evidence_th": "\"Calumet\" คือเขตชื่อ; \"การละเมิดอาวุธ\" เป็นคำอธิบายหลักของอาชญากรรม",
        "SQL": "SELECT SUM(CASE WHEN T3.district_name = 'Calumet' THEN 1 ELSE 0 END) FROM IUCR AS T1 INNER JOIN Crime AS T2 ON T2.iucr_no = T1.iucr_no INNER JOIN District AS T3 ON T3.district_no = T2.district_no WHERE T1.primary_description = 'WEAPONS VIOLATION'",
        "table": "['Crime', 'District', 'IUCR']"
    },
    {
        "question_id": 8700,
        "db_id": "chicago_crime",
        "question": "How many different types of crimes, according to the primary description, have occurred in the Hermosa neighborhood?",
        "evidence": "\"Hermosa\" is the neighborhood_name",
        "question_th": "ตามคำอธิบายหลัก อาชญากรรมประเภทต่างๆ ที่เกิดขึ้นในย่านเฮอร์โมซามีกี่ประเภท?",
        "evidence_th": "\"เฮอร์โมซา\" คือ Neighbor_name",
        "SQL": "SELECT SUM(CASE WHEN T4.neighborhood_name = 'Hermosa' THEN 1 ELSE 0 END) FROM IUCR AS T1 INNER JOIN Crime AS T2 ON T2.iucr_no = T1.iucr_no INNER JOIN Community_Area AS T3 ON T3.community_area_no = T2.community_area_no INNER JOIN Neighborhood AS T4 ON T4.community_area_no = T3.community_area_no",
        "table": "['Community_Area', 'Crime', 'IUCR', 'Neighborhood']"
    },
    {
        "question_id": 8708,
        "db_id": "chicago_crime",
        "question": "Which commander has had to deal with more cases of criminal sexual abuse?",
        "evidence": "more cases of criminal sexual abuse refers to Max(Count(secondary_description = 'CRIMINAL SEXUAL ABUSE'))",
        "question_th": "ผู้บัญชาการคนไหนที่ต้องรับมือกับคดีล่วงละเมิดทางเพศทางอาญามากกว่านี้?",
        "evidence_th": "กรณีอื่นๆ ของการล่วงละเมิดทางเพศทางอาญาหมายถึง Max(Count(secondary_description = 'CRIMINAL SEXUAL ABUSE'))",
        "SQL": "SELECT T3.commander FROM IUCR AS T1 INNER JOIN Crime AS T2 ON T2.iucr_no = T1.iucr_no INNER JOIN District AS T3 ON T3.district_no = T2.district_no WHERE T1.secondary_description = 'CRIMINAL SEXUAL ABUSE' GROUP BY T3.commander ORDER BY COUNT(T1.secondary_description) DESC LIMIT 1",
        "table": "['Crime', 'District', 'IUCR']"
    },
    {
        "question_id": 8726,
        "db_id": "chicago_crime",
        "question": "How many crime against society were reported in Englewood?",
        "evidence": "\"Englewood\" is the community_area_name; 'Society' is the crime_against",
        "question_th": "มีการรายงานอาชญากรรมต่อสังคมในแองเกิลวูดกี่ครั้ง",
        "evidence_th": "\"แองเกิลวูด\" คือ community_area_name; 'สังคม' คืออาชญากรรมต่อต้าน",
        "SQL": "SELECT SUM(CASE WHEN T3.community_area_name = 'Englewood' THEN 1 ELSE 0 END) FROM FBI_Code AS T1 INNER JOIN Crime AS T2 ON T1.fbi_code_no = T2.fbi_code_no INNER JOIN Community_Area AS T3 ON T2.community_area_no = T3.community_area_no WHERE T1.crime_against = 'Society'",
        "table": "['Community_Area', 'Crime', 'FBI_Code']"
    },
    {
        "question_id": 8729,
        "db_id": "chicago_crime",
        "question": "What are the communities that are grouped together on the central side?",
        "evidence": "central side refers to side = 'Central'; community refers to community_area_name",
        "question_th": "ชุมชนที่จัดกลุ่มรวมกันเป็นฝั่งกลางมีอะไรบ้าง?",
        "evidence_th": "ด้านกลางหมายถึงด้าน = 'กลาง'; ชุมชนอ้างถึง community_area_name",
        "SQL": "SELECT community_area_name FROM Community_Area WHERE side = 'Central'",
        "table": "['Community_Area']"
    },
    {
        "question_id": 8743,
        "db_id": "chicago_crime",
        "question": "What was the major type of crime that happened in the Rogers Park community area?",
        "evidence": "\"Rogers Park\" is the community_area_name; major type of crime refers to title",
        "question_th": "อาชญากรรมประเภทหลักที่เกิดขึ้นในพื้นที่ชุมชน Rogers Park คืออะไร",
        "evidence_th": "\"โรเจอร์ส พาร์ค\" คือ community_area_name; อาชญากรรมประเภทหลักหมายถึงชื่อเรื่อง",
        "SQL": "SELECT T1.fbi_code_no, T1.title FROM FBI_Code AS T1 INNER JOIN Crime AS T2 ON T1.fbi_code_no = T2.fbi_code_no INNER JOIN Community_Area AS T3 ON T2.community_area_no = T3.community_area_no WHERE T3.community_area_name = 'Rogers Park' GROUP BY T1.fbi_code_no, T1.title",
        "table": "['Community_Area', 'Crime', 'FBI_Code']"
    },
    {
        "question_id": 8753,
        "db_id": "chicago_crime",
        "question": "What is the FBI description of the crime for report number 23778?",
        "evidence": "\"23778\" is the report_no; FBI description refers to description",
        "question_th": "คำอธิบายอาชญากรรมของ FBI สำหรับรายงานหมายเลข 23778 คืออะไร",
        "evidence_th": "\"23778\" คือ report_no; คำอธิบาย FBI หมายถึงคำอธิบาย",
        "SQL": "SELECT T1.description FROM FBI_Code AS T1 INNER JOIN Crime AS T2 ON T1.fbi_code_no = T2.fbi_code_no WHERE T2.report_no = 23843",
        "table": "['Crime', 'FBI_Code']"
    },
    {
        "question_id": 8758,
        "db_id": "chicago_crime",
        "question": "How many incidents have the general description of \"ASSAULT\" in the IUCR classification?",
        "evidence": "general description refers to primary_description; 'ASSAULT' is the primary_description; incidents refers to iucr_no",
        "question_th": "มีเหตุการณ์กี่เหตุการณ์ที่มีคำอธิบายทั่วไปของ \"ASSAULT\" ในการจัดประเภท IUCR",
        "evidence_th": "คำอธิบายทั่วไปหมายถึง primary_description; 'ASSAULT' เป็น primary_description; เหตุการณ์หมายถึง iucr_no",
        "SQL": "SELECT COUNT(*) FROM IUCR WHERE primary_description = 'ASSAULT'",
        "table": "['IUCR']"
    },
    {
        "question_id": 8764,
        "db_id": "chicago_crime",
        "question": "The ward represented by which alderman had more incidents in January, 2018, Pat Dowell or Sophia King?",
        "evidence": "January, 2018 refers to Substr(date, 1, 1) = '1' AND Substr(date, 5, 4) = '2018'; had more incidents refers to Max(Count(ward_no))",
        "question_th": "วอร์ดเป็นตัวแทนเทศมนตรีคนไหนมีเหตุการณ์มากกว่าในเดือนมกราคม 2561 แพท โดเวลล์ หรือ โซเฟีย คิง?",
        "evidence_th": "มกราคม 2018 หมายถึง Substr(date, 1, 1) = '1' AND Substr(date, 5, 4) = '2018'; มีเหตุการณ์มากกว่า หมายถึง Max(Count(ward_no))",
        "SQL": "SELECT T1.alderman_first_name, T1.alderman_last_name, COUNT(T1.ward_no) AS num FROM Ward AS T1 INNER JOIN Crime AS T2 ON T1.ward_no = T2.ward_no WHERE (SUBSTR(T2.date, 1, 1) = '1' AND SUBSTR(T2.date, 5, 4) = '2018' AND T1.alderman_first_name = 'Pat' AND T1.alderman_last_name = 'Dowell') OR (T1.alderman_first_name = 'Sophia' AND T1.alderman_last_name = 'King') GROUP BY T1.ward_no",
        "table": "['Crime', 'Ward']"
    },
    {
        "question_id": 8769,
        "db_id": "chicago_crime",
        "question": "District commander Robert A. Rubio was responsible for how many incidents in January, 2018?",
        "evidence": "in January 2018 refers to Substr(date, 1, 1) = '1' AND Substr(date, 5, 4) = '2018'",
        "question_th": "ผู้บัญชาการเขต Robert A. Rubio รับผิดชอบต่อเหตุการณ์ต่างๆ ในเดือนมกราคม 2018 กี่เหตุการณ์",
        "evidence_th": "ในเดือนมกราคม 2561 หมายถึง Substr(date, 1, 1) = '1' AND Substr(date, 5, 4) = '2018'",
        "SQL": "SELECT SUM(CASE WHEN SUBSTR(T2.date, 5, 4) = '2018' THEN 1 ELSE 0 END) FROM District AS T1 INNER JOIN Crime AS T2 ON T1.district_no = T2.district_no WHERE T1.commander = 'Robert A. Rubio' AND SUBSTR(T2.date, 1, 1) = '1'",
        "table": "['Crime', 'District']"
    },
    {
        "question_id": 8776,
        "db_id": "food_inspection",
        "question": "Among the inspections carried out in 2016, how many of them are routine?",
        "evidence": "inspections carried out in 2016 refer to YEAR(date) = 2016; routine inspections refer to type = 'Routine - Unscheduled';",
        "question_th": "ในบรรดาการตรวจสอบที่ดำเนินการในปี 2559 มีการตรวจสอบเป็นประจำกี่รายการ?",
        "evidence_th": "การตรวจสอบที่ดำเนินการในปี 2559 อ้างอิงถึง YEAR(date) = 2016; การตรวจสอบตามปกติอ้างถึงประเภท = 'งานประจำ - ไม่ได้กำหนดตารางเวลา';",
        "SQL": "SELECT COUNT(`date`) FROM inspections WHERE STRFTIME('%Y', `date`) = '2016' AND type = 'Routine - Unscheduled'",
        "table": "['inspections']"
    },
    {
        "question_id": 8781,
        "db_id": "food_inspection",
        "question": "Please list the names of the restaurants that had a low risk violation in inspections in 2014.",
        "evidence": "inspection in 2014 refers to year(date) = 2014; low risk violations refer to risk_category = 'Low Risk';",
        "question_th": "โปรดระบุชื่อร้านอาหารที่มีความเสี่ยงต่ำในการฝ่าฝืนในการตรวจสอบปี 2557",
        "evidence_th": "การตรวจสอบในปี 2557 หมายถึง ปี (วันที่) = 2557; การละเมิดที่มีความเสี่ยงต่ำ อ้างอิงถึง Risk_category = 'ความเสี่ยงต่ำ';",
        "SQL": "SELECT DISTINCT T2.name FROM violations AS T1 INNER JOIN businesses AS T2 ON T1.business_id = T2.business_id WHERE STRFTIME('%Y', T1.`date`) = '2014' AND T1.risk_category = 'Low Risk'",
        "table": "['businesses', 'violations']"
    },
    {
        "question_id": 8805,
        "db_id": "food_inspection",
        "question": "How many eateries are located in Hayward?",
        "evidence": "eateries in Hayward refer city = 'HAYWARD';",
        "question_th": "Hayward มีร้านอาหารกี่แห่ง",
        "evidence_th": "ร้านอาหารใน Hayward หมายถึงเมือง = 'HAYWARD';",
        "SQL": "SELECT COUNT(business_id) FROM businesses WHERE city = 'HAYWARD'",
        "table": "['businesses']"
    },
    {
        "question_id": 8809,
        "db_id": "food_inspection",
        "question": "How many owners have 5 or more establishments?",
        "evidence": "5 or more establishments COUNT(business_id) > = 5;",
        "question_th": "มีเจ้าของกี่คนที่มีสถานประกอบการตั้งแต่ 5 แห่งขึ้นไป",
        "evidence_th": "สถานประกอบการ 5 แห่งขึ้นไป COUNT(business_id) > = 5;",
        "SQL": "SELECT COUNT(T1.owner_name) FROM ( SELECT owner_name FROM businesses GROUP BY owner_name HAVING COUNT(owner_name) > 5 ) T1",
        "table": "['businesses']"
    },
    {
        "question_id": 8812,
        "db_id": "food_inspection",
        "question": "What is the name of the establishment with the lowest inspection score of all time?",
        "evidence": "the lowest inspection score refers to MIN(score);",
        "question_th": "สถานประกอบการที่มีคะแนนการตรวจสอบต่ำที่สุดตลอดกาลชื่ออะไร",
        "evidence_th": "คะแนนการตรวจสอบต่ำสุดหมายถึง MIN (คะแนน)",
        "SQL": "SELECT T2.name FROM inspections AS T1 INNER JOIN businesses AS T2 ON T1.business_id = T2.business_id WHERE T1.score = ( SELECT MIN(score) FROM inspections )",
        "table": "['businesses', 'inspections']"
    },
    {
        "question_id": 8815,
        "db_id": "food_inspection",
        "question": "In 2013, what are the names of the establishments with contaminated or adulterated food?",
        "evidence": "establishments have the same meaning as businesses; contaminated or adulterated food refers to violations where description = 'Contaminated or adulterated food'; date = '2013';",
        "question_th": "ในปี 2556 สถานประกอบการที่มีอาหารปนเปื้อนหรือเจือปนชื่ออะไร",
        "evidence_th": "สถานประกอบการมีความหมายเช่นเดียวกับธุรกิจ อาหารที่ปนเปื้อนหรือเจือปนหมายถึงการละเมิด โดยที่คำอธิบาย = 'อาหารที่ปนเปื้อนหรือเจือปน'; วันที่ = '2013';",
        "SQL": "SELECT T2.name FROM violations AS T1 INNER JOIN businesses AS T2 ON T1.business_id = T2.business_id WHERE STRFTIME('%Y', T1.`date`) = '2013' AND T1.description = 'Contaminated or adulterated food'",
        "table": "['businesses', 'violations']"
    },
    {
        "question_id": 8846,
        "db_id": "food_inspection",
        "question": "Among the businesses with score that ranges from 70 to 80, list their violation type ID and risk category.",
        "evidence": "businesses with score that ranges from 70 to 80 refer to business_id where score between 80 and 90;",
        "question_th": "ในบรรดาธุรกิจที่มีคะแนนตั้งแต่ 70 ถึง 80 ให้ระบุรหัสประเภทการละเมิดและหมวดหมู่ความเสี่ยง",
        "evidence_th": "ธุรกิจที่มีคะแนนตั้งแต่ 70 ถึง 80 หมายถึง business_id โดยที่คะแนนระหว่าง 80 ถึง 90",
        "SQL": "SELECT DISTINCT T1.violation_type_id, T1.risk_category FROM violations AS T1 INNER JOIN businesses AS T2 ON T1.business_id = T2.business_id INNER JOIN inspections AS T3 ON T2.business_id = T3.business_id WHERE T3.score BETWEEN 70 AND 80",
        "table": "['businesses', 'inspections', 'violations']"
    },
    {
        "question_id": 8853,
        "db_id": "food_inspection",
        "question": "In businesses with an owner address 500 California St, 2nd Floor of Silicon Valley, list the type of inspection of the business with the highest score.",
        "evidence": "the highest score MAX(score); Silicon Valley is located in 'SAN FRANCISCO';",
        "question_th": "ในธุรกิจที่มีเจ้าของอยู่ที่ 500 California St, 2nd Floor of Silicon Valley ให้ระบุประเภทการตรวจสอบของธุรกิจที่มีคะแนนสูงสุด",
        "evidence_th": "คะแนนสูงสุด MAX(คะแนน); ซิลิคอนวัลเลย์ตั้งอยู่ใน 'ซานฟรานซิสโก';",
        "SQL": "SELECT T1.type FROM inspections AS T1 INNER JOIN businesses AS T2 ON T1.business_id = T2.business_id WHERE T2.owner_address = '500 California St, 2nd Floor' AND T2.owner_city = 'SAN FRANCISCO' ORDER BY T1.score DESC LIMIT 1",
        "table": "['businesses', 'inspections']"
    },
    {
        "question_id": 8860,
        "db_id": "craftbeer",
        "question": "Of all the beer styles produced by Stevens Point Brewery, how many percent do they allot for American Adjunct Lager?",
        "evidence": "Percent allotted = count(American Adjunct Lager beer styles) / count(styles) * 100%",
        "question_th": "ในบรรดาเบียร์ทุกสไตล์ที่ผลิตโดย Stevens Point Brewery พวกเขาจัดสรรให้กับ American Adjunct Lager กี่เปอร์เซ็นต์",
        "evidence_th": "เปอร์เซ็นต์ที่จัดสรร = จำนวน(รูปแบบเบียร์ American Adjunct Lager) / จำนวน(รูปแบบ) * 100%",
        "SQL": "SELECT CAST(SUM(IIF(T1.style = 'American Adjunct Lager', 1, 0)) AS REAL) * 100 / COUNT(T1.brewery_id) FROM beers AS T1 INNER JOIN breweries AS T2 ON T1.brewery_id = T2.id WHERE T2.name = 'Stevens Point Brewery'",
        "table": "['beers', 'breweries']"
    },
    {
        "question_id": 8877,
        "db_id": "cookbook",
        "question": "How many calories does the turkey tenderloin bundles recipe have?",
        "evidence": "turkey tenderloin refers to title",
        "question_th": "สูตรมัดเนื้อไก่งวงมีกี่แคลอรี่?",
        "evidence_th": "เนื้อไก่งวงหมายถึงชื่อ",
        "SQL": "SELECT T2.calories FROM Recipe AS T1 INNER JOIN Nutrition AS T2 ON T1.recipe_id = T2.recipe_id WHERE T1.title = 'Turkey Tenderloin Bundles'",
        "table": "['Nutrition', 'Recipe']"
    },
    {
        "question_id": 8896,
        "db_id": "cookbook",
        "question": "Which ingredient appeared the least in recipes?",
        "evidence": "ingredient appeared the least in recipes refers to MIN(ingredient_id)",
        "question_th": "ส่วนผสมใดปรากฏน้อยที่สุดในสูตรอาหาร",
        "evidence_th": "ส่วนผสมที่ปรากฏน้อยที่สุดในสูตรหมายถึง MIN(ingredient_id)",
        "SQL": "SELECT T1.name FROM Ingredient AS T1 INNER JOIN Quantity AS T2 ON T1.ingredient_id = T2.ingredient_id GROUP BY T2.ingredient_id ORDER BY COUNT(T2.ingredient_id) ASC LIMIT 1",
        "table": "['Ingredient', 'Quantity']"
    },
    {
        "question_id": 8897,
        "db_id": "cookbook",
        "question": "How many baking product ingredients are there in the No-Bake Chocolate Cheesecake?",
        "evidence": "baking product is a category; No-Bake Chocolate Cheesecake refers to title;",
        "question_th": "ช็อคโกแลตชีสเค้กแบบไม่ต้องอบมีส่วนผสมของผลิตภัณฑ์อบกี่ชนิด",
        "evidence_th": "ผลิตภัณฑ์อบเป็นหมวดหมู่ ชีสเค้กช็อกโกแลตแบบไม่ต้องอบหมายถึงชื่อ;",
        "SQL": "SELECT COUNT(*) FROM Recipe AS T1 INNER JOIN Quantity AS T2 ON T1.recipe_id = T2.recipe_id INNER JOIN Ingredient AS T3 ON T3.ingredient_id = T2.ingredient_id WHERE T3.category = 'baking products' AND T1.title = 'No-Bake Chocolate Cheesecake'",
        "table": "['Ingredient', 'Quantity', 'Recipe']"
    },
    {
        "question_id": 8900,
        "db_id": "cookbook",
        "question": "Among the recipes with alcohol content over 10, which recipe takes the longest to prepare?",
        "evidence": "with alcohol content over 10 refers to alcohol > 10; takes the longest to prepare refers to MAX(prep_min)",
        "question_th": "ในบรรดาสูตรที่มีปริมาณแอลกอฮอล์มากกว่า 10 สูตรไหนใช้เวลาเตรียมนานที่สุด?",
        "evidence_th": "ที่มีปริมาณแอลกอฮอล์มากกว่า 10 หมายถึงแอลกอฮอล์ > 10; ใช้เวลาเตรียมนานที่สุด หมายถึง MAX(prep_min)",
        "SQL": "SELECT T1.title FROM Recipe AS T1 INNER JOIN Nutrition AS T2 ON T1.recipe_id = T2.recipe_id WHERE T2.alcohol > 10 ORDER BY T1.prep_min DESC LIMIT 1",
        "table": "['Nutrition', 'Recipe']"
    },
    {
        "question_id": 8911,
        "db_id": "cookbook",
        "question": "Describe the ingredients in the recipe with the highest vitamin that helps vision in dim light.",
        "evidence": "the highest vitamin that helps vision in dim light refers to MAX(vitamin_a)",
        "question_th": "อธิบายส่วนผสมในสูตรที่มีวิตามินสูงที่สุดที่ช่วยการมองเห็นในแสงสลัว",
        "evidence_th": "วิตามินสูงสุดที่ช่วยการมองเห็นในแสงสลัวคือ MAX(vitamin_a)",
        "SQL": "SELECT T1.name FROM Ingredient AS T1 INNER JOIN Quantity AS T2 ON T1.ingredient_id = T2.ingredient_id INNER JOIN Nutrition AS T3 ON T3.recipe_id = T2.recipe_id ORDER BY T3.vitamin_a DESC LIMIT 1",
        "table": "['Ingredient', 'Nutrition', 'Quantity']"
    },
    {
        "question_id": 8923,
        "db_id": "cookbook",
        "question": "How many dairy recipes can serve more than 10 people?",
        "evidence": "dairy recipes refers to category = 'dairy'; serve more than 10 people refers to servings > 10",
        "question_th": "สูตรนมสามารถเสิร์ฟได้มากกว่า 10 คนได้กี่สูตร?",
        "evidence_th": "สูตรนมหมายถึงหมวดหมู่ = 'นม'; ให้บริการมากกว่า 10 คน หมายถึง ให้บริการ > 10 คน",
        "SQL": "SELECT COUNT(*) FROM Recipe AS T1 INNER JOIN Quantity AS T2 ON T1.recipe_id = T2.recipe_id INNER JOIN Ingredient AS T3 ON T3.ingredient_id = T2.ingredient_id WHERE T3.category = 'dairy' AND T1.servings > 10",
        "table": "['Ingredient', 'Quantity', 'Recipe']"
    },
    {
        "question_id": 8926,
        "db_id": "cookbook",
        "question": "How many recipes are non-dairy?",
        "evidence": "non-dairy refers to category NOT LIKE '%dairy\"",
        "question_th": "ไม่ใช่นมมีกี่สูตร?",
        "evidence_th": "non-dairy หมายถึงหมวดหมู่ที่ไม่ชอบ '%dairy'",
        "SQL": "SELECT COUNT(T2.recipe_id) FROM Ingredient AS T1 INNER JOIN Quantity AS T2 ON T2.ingredient_id = T1.ingredient_id INNER JOIN Nutrition AS T3 ON T3.recipe_id = T2.recipe_id WHERE T1.category NOT LIKE '%dairy%'",
        "table": "['Ingredient', 'Nutrition', 'Quantity']"
    },
    {
        "question_id": 8935,
        "db_id": "human_resources",
        "question": "What is the required education for the position of regional manager?",
        "evidence": "required education refers to educationrequired; position of regional manager refers to  positiontitle = 'Regional Manager'",
        "question_th": "การศึกษาที่จำเป็นสำหรับตำแหน่งผู้จัดการระดับภูมิภาคคืออะไร?",
        "evidence_th": "การศึกษาที่จำเป็นหมายถึงการศึกษาที่จำเป็น ตำแหน่งผู้จัดการระดับภูมิภาค หมายถึง ตำแหน่ง = 'ผู้จัดการระดับภูมิภาค'",
        "SQL": "SELECT educationrequired FROM position WHERE positiontitle = 'Regional Manager'",
        "table": "['position']"
    },
    {
        "question_id": 8941,
        "db_id": "human_resources",
        "question": "How many employees work as an Account Representative?",
        "evidence": "work as an Account Representative refers to positiontitle = 'Account Representative'",
        "question_th": "มีพนักงานกี่คนที่ทำงานเป็นตัวแทนบัญชี?",
        "evidence_th": "ทำงานเป็นตัวแทนบัญชี หมายถึง ตำแหน่ง = 'ตัวแทนบัญชี'",
        "SQL": "SELECT COUNT(*) FROM employee AS T1  INNER JOIN position AS T2  ON T1.positionID = T2.positionID WHERE T2.positiontitle = 'Account Representative'",
        "table": "['employee', 'position']"
    },
    {
        "question_id": 8951,
        "db_id": "human_resources",
        "question": "Give the number of female employees.",
        "evidence": "number of female employees means COUNT(gender = 'F')",
        "question_th": "ให้จำนวนพนักงานหญิง",
        "evidence_th": "จำนวนพนักงานหญิง หมายถึง COUNT(เพศ = 'F')",
        "SQL": "SELECT COUNT(*) FROM employee WHERE gender = 'F'",
        "table": "['employee']"
    },
    {
        "question_id": 8955,
        "db_id": "human_resources",
        "question": "How many employees are there in the \"Miami\" office?",
        "evidence": "Miami office refers to locationcity = 'Miami'",
        "question_th": "สำนักงาน \"ไมอามี่\" มีพนักงานกี่คน?",
        "evidence_th": "สำนักงานไมอามี หมายถึง locationcity = 'Miami'",
        "SQL": "SELECT COUNT(*) FROM employee AS T1  INNER JOIN location AS T2  ON T1.locationID = T2.locationID WHERE T2.locationcity = 'Miami'",
        "table": "['employee', 'location']"
    },
    {
        "question_id": 8978,
        "db_id": "human_resources",
        "question": "Which city and address has zip code of above 90000?",
        "evidence": "zip code of above 90000 refers to zipcode > 90000; city refers to locationcity",
        "question_th": "เมืองและที่อยู่ใดมีรหัสไปรษณีย์มากกว่า 90000",
        "evidence_th": "รหัสไปรษณีย์ที่สูงกว่า 90000 หมายถึงรหัสไปรษณีย์ > 90000 เมืองหมายถึงที่ตั้งเมือง",
        "SQL": "SELECT locationcity, address FROM location WHERE zipcode > 90000",
        "table": "['location']"
    },
    {
        "question_id": 8985,
        "db_id": "human_resources",
        "question": "Mention the full name, hired date and performance status of the employee whose location is in Utah state.",
        "evidence": "full name = firstname, lastname; Utah refers to state = 'UT'",
        "question_th": "กล่าวถึงชื่อนามสกุล วันที่จ้าง และสถานะการปฏิบัติงานของพนักงานซึ่งมีสถานที่ตั้งอยู่ในรัฐยูทาห์",
        "evidence_th": "ชื่อเต็ม = ชื่อ, นามสกุล; ยูทาห์หมายถึงรัฐ = 'UT'",
        "SQL": "SELECT T1.firstname, T1.lastname, T1.hiredate, T1.performance FROM employee AS T1  INNER JOIN location AS T2  ON T1.locationID = T2.locationID WHERE T2.state = 'UT'",
        "table": "['employee', 'location']"
    },
    {
        "question_id": 8995,
        "db_id": "bike_share_1",
        "question": "Which is the station where no bike could not be borrowed form on the 2013/11/03 02:01:01? State the location of the station.",
        "evidence": "Latitude and longitude coordinates can be used to indicate a location, where latitude refers to lat longtitude refer to long; bikes_available = 0 means no bike can be borrowed; 3/11/2013 02:01:01 refers to time;",
        "question_th": "สถานีใดที่ไม่สามารถยืมจักรยานได้ในวันที่ 2013/11/03 02:01:01? ระบุตำแหน่งของสถานี",
        "evidence_th": "พิกัดละติจูดและลองจิจูดสามารถใช้เพื่อระบุตำแหน่ง โดยที่ละติจูดหมายถึงละติจูดลองจิจูดหมายถึงความยาว bikes_available = 0 หมายความว่าไม่สามารถยืมจักรยานได้ 3/11/2013 02:01:01 หมายถึงเวลา;",
        "SQL": "SELECT T1.name, T1.long FROM station AS T1 INNER JOIN status AS T2 ON T2.station_id = T1.id WHERE T2.time = '2013/11/03 02:01:01' AND T2.bikes_available = 0",
        "table": "['station', 'status']"
    },
    {
        "question_id": 8998,
        "db_id": "bike_share_1",
        "question": "At what date and time did San Jose Diridon Caltrain Station have most bikes available.",
        "evidence": "San Jose Diridon Caltrain Station is the name of the station; most bikes available refers to MAX(bikes_available);",
        "question_th": "สถานี Caltrain San Jose Diridon มีจักรยานให้บริการมากที่สุดในวันและเวลาใด",
        "evidence_th": "สถานี Caltrain San Jose Diridon เป็นชื่อของสถานี จักรยานส่วนใหญ่ที่มีอยู่หมายถึง MAX(bikes_available);",
        "SQL": "SELECT T2.time FROM station AS T1 INNER JOIN status AS T2 ON T2.station_id = T1.id WHERE T1.name = 'San Jose Diridon Caltrain Station' AND T2.bikes_available = ( SELECT MAX(T2.bikes_available) FROM station AS T1 INNER JOIN status AS T2 ON T2.station_id = T1.id WHERE T1.name = 'San Jose Diridon Caltrain Station' )",
        "table": "['station', 'status']"
    },
    {
        "question_id": 9017,
        "db_id": "bike_share_1",
        "question": "What is the name of the station that is less used by customers who borrow bikes from? Indicate when was the station installed.",
        "evidence": "less used station where bikes are borrowed from refers to start_station_name which has the least number of customers; subscription_type = 'Customer'; when installed refers to installation_date;",
        "question_th": "สถานีที่ลูกค้ายืมจักรยานใช้น้อยชื่ออะไร? ระบุว่าสถานีถูกติดตั้งเมื่อใด",
        "evidence_th": "สถานีที่ใช้จักรยานยืมน้อย หมายถึง start_station_name ซึ่งมีลูกค้าน้อยที่สุด Subscribe_type = 'ลูกค้า'; เมื่อติดตั้งจะอ้างถึงการติดตั้ง_วันที่;",
        "SQL": "SELECT T1.start_station_name, T2.installation_date FROM trip AS T1 INNER JOIN station AS T2 ON T2.name = T1.start_station_name WHERE T1.subscription_type = 'Customer' GROUP BY T1.start_station_name ORDER BY COUNT(T1.subscription_type) LIMIT 1",
        "table": "['station', 'trip']"
    },
    {
        "question_id": 9019,
        "db_id": "bike_share_1",
        "question": "What is the average duration of bike trips in the city of Palo Alto?",
        "evidence": "DIVIDE(SUM(duration where city = 'Palo Alto'), COUNT(start_station_id));",
        "question_th": "ระยะเวลาเฉลี่ยของการเดินทางด้วยจักรยานในเมือง Palo Alto คือเท่าไร?",
        "evidence_th": "DIVIDE(SUM(ระยะเวลาโดยที่เมือง = 'พาโลอัลโต'), COUNT(start_station_id));",
        "SQL": "SELECT AVG(T1.duration) FROM trip AS T1 LEFT JOIN station AS T2 ON T2.name = T1.start_station_name WHERE T2.city = 'Palo Alto'",
        "table": "['station', 'trip']"
    },
    {
        "question_id": 9027,
        "db_id": "bike_share_1",
        "question": "What were the max gust speed and cloud clover when the customer using bike no. 10 recorded the 386 seconds duration of the trip from MLK Library to San Salvador at 1st?",
        "evidence": "subscription_type = 'Customer'; duration = '364'; bike no. 10 refers to bike_id = 10; start_station_name = 'San Jose Civic Center'; end_station_name = 'San Jose City Hall';",
        "question_th": "ความเร็วลมกระโชกสูงสุดและ Cloud Clover คือเท่าใดเมื่อลูกค้าใช้จักรยานหมายเลข 10 บันทึกระยะเวลา 386 วินาทีของการเดินทางจากห้องสมุด MLK ไปยังซานซัลวาดอร์ที่ 1?",
        "evidence_th": "Subscribe_type = 'ลูกค้า'; ระยะเวลา = '364'; หมายเลขจักรยาน 10 หมายถึง bike_id = 10; start_station_name = 'ศูนย์ราชการซานโฮเซ'; end_station_name = 'ศาลากลางซานโฮเซ';",
        "SQL": "SELECT T2.max_gust_speed_mph, T2.cloud_cover FROM trip AS T1 INNER JOIN weather AS T2 ON T2.zip_code = T1.zip_code AND T2.date = SUBSTR(CAST(T1.start_date AS TEXT), 1, INSTR(T1.start_date, ' ') - 1) WHERE T1.bike_id = 10 AND T2.mean_temperature_f > 62 AND T1.subscription_type = 'Customer' AND T1.start_station_name = 'MLK Library' AND T1.end_station_name = 'San Salvador at 1st' AND T1.duration = 386",
        "table": "['trip', 'weather']"
    },
    {
        "question_id": 9028,
        "db_id": "bike_share_1",
        "question": "Among the subscriber, how many of them finished the 2nd at Folsom and Civic Center BART (7th at Market) as their start and end stations respectively for no more than 490 seconds under minimum visibility of 4 miles.",
        "evidence": "subscription_type = 'Subscriber'; no more than 490 seconds refers to duration<490; start_station_name = '2nd at Folsom'; end_station_name = 'Civic Center BART (7th at Market)'; min_visibility_miles = 4;",
        "question_th": "ในบรรดาสมาชิก มีกี่คนที่เข้าเส้นชัยในอันดับที่ 2 ที่ Folsom และ Civic Center BART (อันดับที่ 7 ที่ Market) โดยเป็นสถานีเริ่มต้นและจุดสิ้นสุดตามลำดับเป็นเวลาไม่เกิน 490 วินาทีภายใต้การมองเห็นขั้นต่ำ 4 ไมล์",
        "evidence_th": "Subscribe_type = 'สมาชิก'; ไม่เกิน 490 วินาทีหมายถึงระยะเวลา <490; start_station_name = 'อันดับ 2 ที่ฟอลซัม'; end_station_name = 'Civic Center BART (อันดับที่ 7 ที่ตลาด)'; ขั้นต่ำการมองเห็น_ไมล์ = 4;",
        "SQL": "SELECT COUNT(T1.id) FROM trip AS T1 INNER JOIN weather AS T2 ON T2.zip_code = T1.zip_code WHERE T1.subscription_type = 'Subscriber' AND T2.min_visibility_miles = 4 AND T1.duration < 490 AND T1.start_station_name = '2nd at Folsom' AND T1.end_station_name = 'Civic Center BART (7th at Market)'",
        "table": "['trip', 'weather']"
    },
    {
        "question_id": 9040,
        "db_id": "bike_share_1",
        "question": "List the name and city of starting stations which has an above-average duration trips.",
        "evidence": "starting stations refers to start_station_name; above average duration trips = DIVIDE(SUM(duration), COUNT(main_trip.id))<duration;",
        "question_th": "ระบุชื่อและเมืองของสถานีต้นทางที่มีระยะเวลาการเดินทางสูงกว่าค่าเฉลี่ย",
        "evidence_th": "สถานีเริ่มต้นหมายถึง start_station_name; สูงกว่าระยะเวลาการเดินทางโดยเฉลี่ย = DIVIDE(SUM(duration), COUNT(main_trip.id))<duration;",
        "SQL": "SELECT DISTINCT T1.start_station_name, T2.city FROM trip AS T1 INNER JOIN station AS T2 ON T2.name = T1.start_station_name WHERE T1.duration > ( SELECT AVG(T1.duration) FROM trip AS T1 LEFT JOIN station AS T2 ON T2.name = T1.start_station_name )",
        "table": "['station', 'trip']"
    },
    {
        "question_id": 9055,
        "db_id": "bike_share_1",
        "question": "What was duration of the longest trip started on the day that has a maximum wind speed of 30 mph?",
        "evidence": "longest trip refers to MAX(duration); started on the day refers to start_date; maximum wind speed refers to max_wind_speed_mph; max_wind_speed_mph = 30;",
        "question_th": "ระยะเวลาของการเดินทางที่ยาวที่สุดเริ่มต้นในวันที่มีความเร็วลมสูงสุด 30 ไมล์ต่อชั่วโมงคือเท่าใด",
        "evidence_th": "การเดินทางที่ยาวที่สุดหมายถึง MAX (ระยะเวลา); เริ่มต้นในวันที่หมายถึง start_date; ความเร็วลมสูงสุดหมายถึง max_wind_speed_mph; max_wind_speed_mph = 30;",
        "SQL": "SELECT T1.duration FROM trip AS T1 INNER JOIN weather AS T2 ON T2.zip_code = T1.zip_code WHERE T2.max_wind_Speed_mph = 30 ORDER BY T1.duration DESC LIMIT 1",
        "table": "['trip', 'weather']"
    },
    {
        "question_id": 9056,
        "db_id": "bike_share_1",
        "question": "Please calculate the average temperature of those trips that started at Market at 4th in 2013.",
        "evidence": "started at refers to start_station_name; start station_name = 'Market at 4th'; in 2013 refers to start_date like '%2013%'; temperature refers to mean_temperature_f; average temperature = DIVIDE(SUM(mean_temperature_f), COUNT(mean_temperature_f));",
        "question_th": "โปรดคำนวณอุณหภูมิเฉลี่ยของการเดินทางที่เริ่มต้นที่ตลาดที่ 4 ในปี 2556",
        "evidence_th": "เริ่มต้นที่อ้างอิงถึง start_station_name; start station_name = 'ตลาดที่ 4'; ในปี 2013 อ้างถึง start_date เช่น '%2013%'; อุณหภูมิหมายถึงmean_temperature_f; อุณหภูมิเฉลี่ย = DIVIDE(SUM(mean_temperature_f), COUNT(mean_temperature_f));",
        "SQL": "SELECT AVG(T2.mean_temperature_f) FROM trip AS T1 INNER JOIN weather AS T2 ON T2.zip_code = T1.zip_code WHERE SUBSTR(CAST(T2.date AS TEXT), -4) = '2013' AND T1.start_station_name = 'Market at 4th'",
        "table": "['trip', 'weather']"
    },
    {
        "question_id": 9073,
        "db_id": "bike_share_1",
        "question": "On the day with the hottest temperature ever in 2014, how many bike trips started from the station 2nd at Folsom?",
        "evidence": "hottest temperature refers to max_temperatutre_f; in 2014 refers to date LIKE '%2014'; started from station refers to start_station_name; start_station_name = '2nd at Folsom';",
        "question_th": "ในวันที่อุณหภูมิร้อนที่สุดในปี 2014 มีทริปปั่นจักรยานจากสถานีที่ 2 ที่ฟอลซัมกี่ทริป?",
        "evidence_th": "อุณหภูมิที่ร้อนที่สุดหมายถึง max_temperatutre_f; ในปี 2014 อ้างถึงวันที่ LIKE '%2014'; เริ่มต้นจากสถานีหมายถึง start_station_name; start_station_name = 'อันดับ 2 ที่ฟอลซัม';",
        "SQL": "SELECT COUNT(T1.start_station_name) FROM trip AS T1 INNER JOIN weather AS T2 ON T2.zip_code = T1.zip_code WHERE T2.date LIKE '%2014%' AND T2.zip_code = 94107 AND T1.start_station_name = '2nd at Folsom' ORDER BY T2.max_temperature_f DESC LIMIT 1",
        "table": "['trip', 'weather']"
    },
    {
        "question_id": 9076,
        "db_id": "bike_share_1",
        "question": "How many rainy days were recorded in Mountain View?",
        "evidence": "rainy days refers to events = 'rain'; Mountain View refers to zip_code = 94041;",
        "question_th": "มีกี่วันที่ฝนตกที่บันทึกไว้ใน Mountain View",
        "evidence_th": "วันที่ฝนตกหมายถึงเหตุการณ์ = 'ฝน'; Mountain View หมายถึง zip_code = 94041;",
        "SQL": "SELECT SUM(IIF(zip_code = 94041 AND events = 'Rain', 1, 0)) FROM weather",
        "table": "['weather']"
    },
    {
        "question_id": 9106,
        "db_id": "movie_3",
        "question": "Please list the titles of the films that are released in 2006 and have a rental rate of $2.99.",
        "evidence": "released in 2006 refers to release_year = 2006; rental rate of $2.99 refers to rental_rate = 2.99",
        "question_th": "โปรดระบุชื่อภาพยนตร์ที่ออกฉายในปี 2549 และมีค่าเช่าอยู่ที่ 2.99 ดอลลาร์",
        "evidence_th": "เปิดตัวในปี 2549 หมายถึง release_year = 2549; อัตราค่าเช่า 2.99 ดอลลาร์ หมายถึง อัตราค่าเช่า = 2.99",
        "SQL": "SELECT title FROM film WHERE release_year = 2006 AND rental_rate = 2.99",
        "table": "['film']"
    },
    {
        "question_id": 9108,
        "db_id": "movie_3",
        "question": "Which film has a higher replacement cost, ACE GOLDFINGER or ACADEMY DINOSAUR?",
        "evidence": "higher replacement cost refers to Max(replacement_cost); 'ACE GOLDFIINGER' and 'ACADEMY DINOSAUR' are both the title of film",
        "question_th": "ภาพยนตร์เรื่องใดมีค่าใช้จ่ายการเปลี่ยนที่สูงกว่า ACE GOLDFINGER หรือ ACADEMY DINOSAUR",
        "evidence_th": "ต้นทุนการเปลี่ยนที่สูงขึ้นหมายถึง Max (replacement_cost); 'ACE GOLDFIINGER' และ 'ACADEMY DINOSAUR' เป็นชื่อภาพยนตร์ทั้งคู่",
        "SQL": "SELECT title FROM film WHERE title IN ('ACE GOLDFINGER', 'ACADEMY DINOSAUR') ORDER BY replacement_cost DESC LIMIT 1",
        "table": "['film']"
    },
    {
        "question_id": 9109,
        "db_id": "movie_3",
        "question": "Among the films that are released in 2006, how many of them are rated Adults Only in the Motion Picture Association Film Rating?",
        "evidence": "released in 2006 refers to release_year = 2006; rated Adults Only refers to rating = 'NC-17'",
        "question_th": "ในบรรดาภาพยนตร์ที่ออกฉายในปี 2549 มีกี่เรื่องที่ได้รับการจัดอันดับภาพยนตร์สำหรับผู้ใหญ่เท่านั้นในสมาคมภาพยนตร์?",
        "evidence_th": "เปิดตัวในปี 2549 หมายถึง release_year = 2549; จัดอันดับผู้ใหญ่เท่านั้น หมายถึงการให้คะแนน = 'NC-17'",
        "SQL": "SELECT COUNT(film_id) FROM film WHERE rating = 'NC-17' AND release_year = 2006",
        "table": "['film']"
    },
    {
        "question_id": 9111,
        "db_id": "movie_3",
        "question": "Please list the titles of all the films that have more than 2 special features.",
        "evidence": "more than 2 special features refers to Count(special_features) > 2",
        "question_th": "โปรดระบุชื่อภาพยนตร์ทั้งหมดที่มีคุณสมบัติพิเศษมากกว่า 2 เรื่อง",
        "evidence_th": "คุณสมบัติพิเศษมากกว่า 2 รายการหมายถึง Count(special_features) > 2",
        "SQL": "SELECT title FROM ( SELECT title, COUNT(special_features) AS num FROM film GROUP BY title ) AS T ORDER BY T.num > 2",
        "table": "['film']"
    },
    {
        "question_id": 9118,
        "db_id": "movie_3",
        "question": "Please list the titles of all the films starring the actor PENELOPE GUINESS.",
        "evidence": "",
        "question_th": "โปรดระบุชื่อภาพยนตร์ทั้งหมดที่นำแสดงโดยนักแสดงเพเนโลเปกินีเนส",
        "evidence_th": "",
        "SQL": "SELECT T2.title FROM film_actor AS T1 INNER JOIN film AS T2 ON T1.film_id = T2.film_id INNER JOIN actor AS T3 ON T1.actor_id = T3.actor_id WHERE T3.first_name = 'PENELOPE' AND T3.last_name = 'GUINESS'",
        "table": "['actor', 'film', 'film_actor']"
    },
    {
        "question_id": 9149,
        "db_id": "movie_3",
        "question": "State the number of films that are 178 minutes long.",
        "evidence": "178 min long refers to length = '178'",
        "question_th": "ระบุจำนวนภาพยนตร์ที่มีความยาว 178 นาที",
        "evidence_th": "ยาว 178 นาที หมายถึง ความยาว = '178'",
        "SQL": "SELECT COUNT(film_id) FROM film WHERE length = '178'",
        "table": "['film']"
    },
    {
        "question_id": 9157,
        "db_id": "movie_3",
        "question": "Sherri Rhodes rented a film at 12:27:27 on 2005/7/28, when did she/he return that film?",
        "evidence": "rented at 12:27:27 on 2005/7/28 refers to rental_date = '2005-07-28 12:27:27'",
        "question_th": "Sherri Rhodes เช่าภาพยนตร์เมื่อเวลา 12:27:27 น. ของวันที่ 28/7/2548 เธอ/เขาส่งคืนภาพยนตร์เรื่องนั้นเมื่อใด",
        "evidence_th": "เช่าเมื่อเวลา 12:27:27 น. วันที่ 28/07/2548 อ้างถึง rent_date = '2005-07-28 12:27:27'",
        "SQL": "SELECT T2.return_date FROM customer AS T1 INNER JOIN rental AS T2 ON T1.customer_id = T2.customer_id WHERE T1.first_name = 'SHERRI' AND T1.last_name = 'RHODES' AND T2.rental_date = '2005-07-28 12:27:27'",
        "table": "['customer', 'rental']"
    },
    {
        "question_id": 9164,
        "db_id": "movie_3",
        "question": "Give the email address of the person who lives in \"1411 Lillydale Drive\".",
        "evidence": "\"1411 Lillydate Drive\" is the address",
        "question_th": "ระบุที่อยู่อีเมลของบุคคลที่อาศัยอยู่ใน \"1411 Lillydale Drive\"",
        "evidence_th": "ที่อยู่คือ \"1411 Lillydate Drive\"",
        "SQL": "SELECT T2.email FROM address AS T1 INNER JOIN staff AS T2 ON T1.address_id = T2.address_id WHERE T1.address = '1411 Lillydale Drive'",
        "table": "['address', 'staff']"
    },
    {
        "question_id": 9165,
        "db_id": "movie_3",
        "question": "How much money did the customer No.297 pay for the rental which happened at 12:27:27 on 2005/7/28?",
        "evidence": "customer no. 297 refers to customer_id = 297; at 12:27:27 on 2005/7/28 refers to rental_date = '2005-07-28 12:27:27'; money pay for rent refers to amount",
        "question_th": "ลูกค้าหมายเลข 297 ชำระค่าเช่าซึ่งเกิดขึ้นเมื่อเวลา 12:27:27 น. วันที่ 28/07/2548 เป็นจำนวนเงินเท่าใด",
        "evidence_th": "หมายเลขลูกค้า 297 หมายถึง customer_id = 297; เมื่อเวลา 12:27:27 น. วันที่ 28/07/2548 อ้างถึง rent_date = '2005-07-28 12:27:27'; เงินที่จ่ายค่าเช่าหมายถึงจำนวนเงิน",
        "SQL": "SELECT T1.amount FROM payment AS T1 INNER JOIN rental AS T2 ON T1.rental_id = T2.rental_id WHERE T2.rental_date = '2005-07-28 12:27:27' AND T2.customer_id = 297",
        "table": "['payment', 'rental']"
    },
    {
        "question_id": 9181,
        "db_id": "movie_3",
        "question": "How many rentals were returned on 5/27/2005?",
        "evidence": "return on 5/27/2005 refers to return_date = '2005-05-27'; rental refers to rental_id",
        "question_th": "เมื่อวันที่ 27/5/2548 มีการส่งคืนค่าเช่าจำนวนเท่าใด",
        "evidence_th": "ส่งคืนวันที่ 27/5/2548 อ้างถึง return_date = '2005-05-27'; การเช่าหมายถึง rent_id",
        "SQL": "SELECT COUNT(rental_id) FROM rental WHERE rental_date = '2005-05-27'",
        "table": "['rental']"
    },
    {
        "question_id": 9187,
        "db_id": "movie_3",
        "question": "What is the most common special features of science-fiction movies?",
        "evidence": "\"science fiction\" is the name of category; most common special features refers to Max(frequency(special_features))",
        "question_th": "ลักษณะพิเศษของภาพยนตร์นิยายวิทยาศาสตร์ที่พบบ่อยที่สุดคืออะไร?",
        "evidence_th": "\"นิยายวิทยาศาสตร์\" เป็นชื่อของหมวดหมู่; คุณสมบัติพิเศษทั่วไปส่วนใหญ่หมายถึง Max (ความถี่ (special_features))",
        "SQL": "SELECT T1.special_features FROM film AS T1 INNER JOIN film_category AS T2 ON T1.film_id = T2.film_id INNER JOIN category AS T3 ON T2.category_id = T3.category_id WHERE T3.name = 'sci-fi' ORDER BY T1.special_features DESC LIMIT 1",
        "table": "['category', 'film', 'film_category']"
    },
    {
        "question_id": 9189,
        "db_id": "movie_3",
        "question": "Among the films with a rental duration of 7 days, how many are comedies?",
        "evidence": "rental duration of 7 refers to rental_duration = 7; comedies refers to name = 'Comedy'",
        "question_th": "ในบรรดาหนังที่มีระยะเวลาเช่า 7 วัน มีหนังตลกกี่เรื่อง?",
        "evidence_th": "ระยะเวลาการเช่า 7 หมายถึง rent_duration = 7; ตลกหมายถึงชื่อ = 'ตลก'",
        "SQL": "SELECT COUNT(T1.film_id) FROM film AS T1 INNER JOIN film_category AS T2 ON T1.film_id = T2.film_id INNER JOIN category AS T3 ON T2.category_id = T3.category_id WHERE T1.rental_duration = 7 AND T3.name = 'Comedy'",
        "table": "['category', 'film', 'film_category']"
    },
    {
        "question_id": 9196,
        "db_id": "movie_3",
        "question": "Among the classic movies, how many movies have a rental rate of less than 1?",
        "evidence": "classic movie refers to name = 'Classics'; rental rate of less than 1 refers to rental_rate < 1; movie refers to film_id",
        "question_th": "ในบรรดาภาพยนตร์คลาสสิก มีภาพยนตร์กี่เรื่องที่มีอัตราการเช่าน้อยกว่า 1 เรื่อง",
        "evidence_th": "ภาพยนตร์คลาสสิกหมายถึงชื่อ = 'คลาสสิก'; อัตราค่าเช่าน้อยกว่า 1 หมายถึง rent_rate < 1; ภาพยนตร์หมายถึง film_id",
        "SQL": "SELECT COUNT(T1.film_id) FROM film_category AS T1 INNER JOIN category AS T2 ON T1.category_id = T2.category_id INNER JOIN film AS T3 ON T1.film_id = T3.film_id WHERE T3.rental_rate < 1 AND T2.name = 'Classics'",
        "table": "['category', 'film', 'film_category']"
    },
    {
        "question_id": 9211,
        "db_id": "movie_3",
        "question": "List down the actors' full names who performed in \"CHOCOLATE DUCK\" film.",
        "evidence": "\"CHOCOLATE DUCK\" is the title of film; full name refers to first_name, last_name",
        "question_th": "รายชื่อนักแสดงที่แสดงในภาพยนตร์เรื่อง \"CHOCOLATE DUCK\"",
        "evidence_th": "\"CHOCOLATE DUCK\" เป็นชื่อหนัง; ชื่อเต็มหมายถึง first_name, Last_name",
        "SQL": "SELECT T3.first_name, T3.last_name FROM film_actor AS T1 INNER JOIN film AS T2 ON T1.film_id = T2.film_id INNER JOIN actor AS T3 ON T1.actor_id = T3.actor_id WHERE T2.title = 'CHOCOLATE DUCK'",
        "table": "['actor', 'film', 'film_actor']"
    },
    {
        "question_id": 9225,
        "db_id": "movie_3",
        "question": "Provide any 5 customers' full names who have rented from Mike Hillyer.",
        "evidence": "full name refers to first_name, last_name; 'Mike Hillyer' is a full name of a staff;",
        "question_th": "ระบุชื่อเต็มของลูกค้า 5 รายที่เช่าจาก Mike Hillyer",
        "evidence_th": "ชื่อเต็มหมายถึง first_name, Last_name; 'Mike Hillyer' เป็นชื่อเต็มของทีมงาน",
        "SQL": "SELECT T3.first_name, T3.last_name FROM staff AS T1 INNER JOIN address AS T2 ON T1.address_id = T2.address_id INNER JOIN customer AS T3 ON T2.address_id = T3.address_id WHERE T1.first_name = 'Mike' AND T1.last_name = 'Hillyer' LIMIT 5",
        "table": "['address', 'customer', 'staff']"
    },
    {
        "question_id": 9264,
        "db_id": "movie_3",
        "question": "How many payments were made throughout the month of August 2005?",
        "evidence": "payments made refers to amount; throughout the month of August 2005 refers to payment_date like '2005-08%'",
        "question_th": "ตลอดเดือนสิงหาคม พ.ศ. 2548 มีการชำระเงินจำนวนเท่าใด",
        "evidence_th": "การชำระเงินหมายถึงจำนวนเงิน ตลอดเดือนสิงหาคม 2548 อ้างอิงถึง pay_date เช่น '2005-08%'",
        "SQL": "SELECT SUM(amount) FROM payment WHERE payment_date LIKE '2005-08%'",
        "table": "['payment']"
    },
    {
        "question_id": 9277,
        "db_id": "movie_3",
        "question": "Indicate the name of the actors of the films rated as 'Parents Strongly Precautioned' with the highest replacement cost.",
        "evidence": "name refers to first_name, last_name; Parents Strongly Precautioned' refers to rating = 'PG-13'; \nhighest replacement cost refers to MAX(replacement_cost)",
        "question_th": "ระบุชื่อนักแสดงภาพยนตร์ที่ได้รับการจัดอันดับเป็น 'ผู้ปกครองต้องระมัดระวังอย่างยิ่ง' โดยมีค่าใช้จ่ายการเปลี่ยนสูงสุด",
        "evidence_th": "ชื่อหมายถึง first_name, Last_name; ผู้ปกครองควรระมัดระวังอย่างยิ่ง' หมายถึงการให้คะแนน = 'PG-13'; \nต้นทุนการเปลี่ยนสูงสุดหมายถึง MAX (replacement_cost)",
        "SQL": "SELECT T1.first_name, T1.last_name FROM actor AS T1 INNER JOIN film_actor AS T2 ON T1.actor_id = T2.actor_id INNER JOIN film AS T3 ON T2.film_id = T3.film_id WHERE T3.rating = 'PG-13' ORDER BY T3.replacement_cost DESC LIMIT 1",
        "table": "['actor', 'film', 'film_actor']"
    },
    {
        "question_id": 9305,
        "db_id": "movie_3",
        "question": "How many of the actors are named \"Dan\"?",
        "evidence": "Dan' is a first_name of an actor",
        "question_th": "มีนักแสดงชื่อ \"แดน\" กี่คน?",
        "evidence_th": "Dan' เป็นชื่อของนักแสดง",
        "SQL": "SELECT COUNT(actor_id) FROM actor WHERE first_name = 'Dan'",
        "table": "['actor']"
    },
    {
        "question_id": 9313,
        "db_id": "movie_3",
        "question": "Which category is the most common?",
        "evidence": "most common category refers to MAX(COUNT(category.name))",
        "question_th": "หมวดหมู่ใดที่พบบ่อยที่สุด?",
        "evidence_th": "หมวดหมู่ที่พบบ่อยที่สุดหมายถึง MAX(COUNT(category.name))",
        "SQL": "SELECT T.name FROM ( SELECT T2.name, COUNT(T2.name) AS num FROM film_category AS T1 INNER JOIN category AS T2 ON T1.category_id = T2.category_id GROUP BY T2.name ) AS T ORDER BY T.num DESC LIMIT 1",
        "table": "['category', 'film_category']"
    },
    {
        "question_id": 9325,
        "db_id": "movie_3",
        "question": "Which category does BABY HALL film belong to?",
        "evidence": "category refers to name; BABY HALL film refers to title = 'BABY HALL'",
        "question_th": "ภาพยนตร์ BABY HALL จัดอยู่ในประเภทใด",
        "evidence_th": "หมวดหมู่หมายถึงชื่อ; ภาพยนตร์ BABY HALL อ้างอิงถึงชื่อ = 'BABY HALL'",
        "SQL": "SELECT T3.`name` FROM film AS T1 INNER JOIN film_category AS T2 ON T1.film_id = T2.film_id INNER JOIN category AS T3 ON T3.category_id = T2.category_id WHERE T1.title = 'BABY HALL'",
        "table": "['category', 'film', 'film_category']"
    },
    {
        "question_id": 9326,
        "db_id": "movie_3",
        "question": "Give the full name of the actor with the highest rental rate.",
        "evidence": "full name refers to first_name, last_name; the highest rental rate refers to max(rental_rate)",
        "question_th": "แจ้งชื่อนามสกุลนักแสดงที่มีอัตราค่าเช่าสูงสุด",
        "evidence_th": "ชื่อเต็มหมายถึง first_name, Last_name; อัตราค่าเช่าสูงสุดหมายถึงสูงสุด (rental_rate)",
        "SQL": "SELECT T1.first_name, T1.last_name FROM actor AS T1 INNER JOIN film_actor AS T2 ON T1.actor_id = T2.actor_id INNER JOIN film AS T3 ON T3.film_id = T2.film_id ORDER BY T3.rental_rate DESC LIMIT 1",
        "table": "['actor', 'film', 'film_actor']"
    },
    {
        "question_id": 9327,
        "db_id": "movie_3",
        "question": "Please give the description of the movie starring JENNIFER DAVIS.",
        "evidence": "",
        "question_th": "โปรดระบุคำอธิบายภาพยนตร์ที่นำแสดงโดย เจนนิเฟอร์ เดวิส",
        "evidence_th": "",
        "SQL": "SELECT T3.description FROM actor AS T1 INNER JOIN film_actor AS T2 ON T1.actor_id = T2.actor_id INNER JOIN film AS T3 ON T3.film_id = T2.film_id WHERE T1.first_name = 'JOHNNY' AND T1.last_name = 'DAVIS'",
        "table": "['actor', 'film', 'film_actor']"
    },
    {
        "question_id": 9329,
        "db_id": "movie_3",
        "question": "Please provide the address of the customer whose first name is SUSAN with the postal code 77948.",
        "evidence": "",
        "question_th": "โปรดระบุที่อยู่ของลูกค้าที่มีชื่อ SUSAN และรหัสไปรษณีย์ 77948",
        "evidence_th": "",
        "SQL": "SELECT T1.address FROM address AS T1 INNER JOIN customer AS T2 ON T1.address_id = T2.address_id WHERE T2.first_name = 'SUSAN' AND T1.postal_code = 77948",
        "table": "['address', 'customer']"
    },
    {
        "question_id": 9338,
        "db_id": "movie_3",
        "question": "Calculate the percentage of movie titles with a screen length of more than 120 minutes that have a category of horror movies.",
        "evidence": "screen length of more than 120 minutes refers to length > 120; category of horror refers to category.name = 'Horror'; percentage = divide(count(title where length > 120 and category.name = 'Horror'), count(title)) * 100%",
        "question_th": "คำนวณเปอร์เซ็นต์ของชื่อภาพยนตร์ที่มีความยาวหน้าจอมากกว่า 120 นาทีซึ่งมีหมวดหมู่ภาพยนตร์สยองขวัญ",
        "evidence_th": "ความยาวหน้าจอมากกว่า 120 นาที หมายถึง ความยาว > 120; หมวดหมู่สยองขวัญหมายถึง category.name = 'สยองขวัญ'; เปอร์เซ็นต์ = หาร (นับ (ชื่อโดยที่ความยาว > 120 และ category.name = 'สยองขวัญ'), นับ (ชื่อ)) * 100%",
        "SQL": "SELECT CAST(SUM(IIF(T3.`name` = 'Horror', 1, 0)) * 100 / COUNT(T1.film_id) AS REAL) FROM film AS T1 INNER JOIN film_category AS T2 ON T1.film_id = T2.film_id INNER JOIN category AS T3 ON T3.category_id = T2.category_id WHERE T1.length > 120",
        "table": "['category', 'film', 'film_category']"
    },
    {
        "question_id": 9344,
        "db_id": "movie_3",
        "question": "What is the language for film titled \"CHILL LUCK\"?",
        "evidence": "",
        "question_th": "หนังเรื่อง CHILL LUCK ใช้ภาษาอะไรครับ?",
        "evidence_th": "",
        "SQL": "SELECT T2.`name` FROM film AS T1 INNER JOIN `language` AS T2 ON T1.language_id = T2.language_id WHERE T1.title = 'CHILL LUCK'",
        "table": "['film', 'language']"
    },
    {
        "question_id": 9345,
        "db_id": "movie_3",
        "question": "What are the last updated date for English film titles that were released in 2006?",
        "evidence": "the last updated date refers to last_update; English is name of language; released in 2006 refers to release_year = 2006\n\n",
        "question_th": "วันที่อัปเดตล่าสุดสำหรับชื่อภาพยนตร์ภาษาอังกฤษที่ออกฉายในปี 2549 คือเมื่อใด",
        "evidence_th": "วันที่อัปเดตล่าสุดหมายถึง Last_update; ภาษาอังกฤษเป็นชื่อของภาษา เปิดตัวในปี 2549 หมายถึง release_year = 2549\n\n",
        "SQL": "SELECT DISTINCT T1.last_update FROM film AS T1 INNER JOIN `language` AS T2 ON T1.language_id = T2.language_id WHERE T2.`name` = 'English' AND T1.release_year = 2006",
        "table": "['film', 'language']"
    },
    {
        "question_id": 9351,
        "db_id": "movie_3",
        "question": "What is the category of film titled \"BLADE POLISH\"?",
        "evidence": "",
        "question_th": "ภาพยนตร์ชื่อ \"BLADE POLISH\" จัดอยู่ในประเภทใด",
        "evidence_th": "",
        "SQL": "SELECT T3.name FROM film AS T1 INNER JOIN film_category AS T2 ON T1.film_id = T2.film_id INNER JOIN category AS T3 ON T3.category_id = T2.category_id WHERE T1.title = 'BLADE POLISH'",
        "table": "['category', 'film', 'film_category']"
    },
    {
        "question_id": 9380,
        "db_id": "movie_3",
        "question": "What is the average replacement cost for the movies with a rental rate of 4.99?",
        "evidence": "a rental rate of 4.99 refers to rental_rate = 4.99; average replacement cost = avg(replacement_cost)",
        "question_th": "ต้นทุนการเปลี่ยนภาพยนตร์โดยเฉลี่ยที่มีอัตราค่าเช่า 4.99 คือเท่าใด",
        "evidence_th": "อัตราค่าเช่า 4.99 หมายถึง rent_rate = 4.99; ต้นทุนการเปลี่ยนโดยเฉลี่ย = เฉลี่ย (replacement_cost)",
        "SQL": "SELECT AVG(replacement_cost) FROM film WHERE rental_rate = 4.99",
        "table": "['film']"
    },
    {
        "question_id": 9385,
        "db_id": "movie_3",
        "question": "Provide the list of the longest movies. Arrange these titles in alphabetical order.",
        "evidence": "the longest refers to max(length)",
        "question_th": "ระบุรายชื่อภาพยนตร์ที่ยาวที่สุด จัดเรียงชื่อเหล่านี้ตามลำดับตัวอักษร",
        "evidence_th": "ที่ยาวที่สุดหมายถึงสูงสุด (ความยาว)",
        "SQL": "SELECT title FROM film WHERE length = ( SELECT MAX(length) FROM film )",
        "table": "['film']"
    },
    {
        "question_id": 9397,
        "db_id": "movie_3",
        "question": "List at least 3 cities under the country of Philippines.",
        "evidence": "",
        "question_th": "รายชื่ออย่างน้อย 3 เมืองภายใต้ประเทศฟิลิปปินส์",
        "evidence_th": "",
        "SQL": "SELECT T1.city FROM city AS T1 INNER JOIN country AS T2 ON T2.country_id = T1.country_id WHERE country = 'Philippines'",
        "table": "['city', 'country']"
    },
    {
        "question_id": 9405,
        "db_id": "movie_3",
        "question": "List down the actor ID of actors with Dee as their last name.",
        "evidence": "",
        "question_th": "ระบุรหัสนักแสดงของนักแสดงโดยมีดีเป็นนามสกุล",
        "evidence_th": "",
        "SQL": "SELECT actor_id FROM actor WHERE last_name = 'Dee'",
        "table": "['actor']"
    },
    {
        "question_id": 9411,
        "db_id": "movie_3",
        "question": "List the store ID of the film titled \"Amadeus Holy\".",
        "evidence": "",
        "question_th": "ระบุรหัสร้านค้าของภาพยนตร์เรื่อง \"Amadeus Holy\"",
        "evidence_th": "",
        "SQL": "SELECT T2.store_id FROM film AS T1 INNER JOIN inventory AS T2 ON T1.film_id = T2.film_id WHERE T1.title = 'Amadeus Holy'",
        "table": "['film', 'inventory']"
    },
    {
        "question_id": 9419,
        "db_id": "movie_3",
        "question": "Please list the full names of all the customers who live in Italy.",
        "evidence": "full name refers to first_name, last_name; Italy refers to country = 'Italy'",
        "question_th": "โปรดระบุชื่อเต็มของลูกค้าทั้งหมดที่อาศัยอยู่ในอิตาลี",
        "evidence_th": "ชื่อเต็มหมายถึง first_name, Last_name; อิตาลีหมายถึงประเทศ = 'อิตาลี'",
        "SQL": "SELECT T4.first_name, T4.last_name FROM address AS T1 INNER JOIN city AS T2 ON T1.city_id = T2.city_id INNER JOIN country AS T3 ON T2.country_id = T3.country_id INNER JOIN customer AS T4 ON T1.address_id = T4.address_id WHERE T3.country = 'Italy'",
        "table": "['address', 'city', 'country', 'customer']"
    }
]