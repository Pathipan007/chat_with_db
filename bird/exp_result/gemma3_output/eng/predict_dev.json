{
    "0": "SELECT MAX(`Percent (%) Eligible Free (K-12)`) FROM frpm WHERE `County Name` = 'Alameda';\t----- bird -----\tcalifornia_schools",
    "1": "SELECT PERCENT (%) Eligible Free (Ages 5-17) FROM frpm WHERE District Type = 'Continuation School' ORDER BY PERCENT (%) Eligible Free (Ages 5-17) ASC LIMIT 3;\t----- bird -----\tcalifornia_schools",
    "2": "SELECT Zip FROM schools WHERE County = 'Fresno' AND Charter = 'Y';\t----- bird -----\tcalifornia_schools",
    "3": "SELECT MailStreet FROM frpm ORDER BY `FRPM Count (K-12)` DESC LIMIT 1;\t----- bird -----\tcalifornia_schools",
    "4": "SELECT Phone FROM schools WHERE Charter = 'Y' AND FundingType = 'Direct Charter' AND OpenDate > '2000-01-01';\t----- bird -----\tcalifornia_schools",
    "5": "SELECT COUNT(DISTINCT satscores.cds) FROM satscores INNER JOIN schools ON satscores.cds = schools.CDSCode WHERE satscores.AvgScrMath > 400 AND schools.Virtual = 'Y';\t----- bird -----\tcalifornia_schools",
    "6": "SELECT T1.School FROM satscores AS T1 INNER JOIN schools AS T2 ON T1.cds = T2.CDSCode WHERE T1.NumTstTakr > 500 AND (T2.Magnet = 'Y' OR T2.Magnet IS NOT NULL);\t----- bird -----\tcalifornia_schools",
    "7": "SELECT T1.Phone FROM satscores AS T1 JOIN schools AS T2 ON T1.cds = T2.CDSCode ORDER BY T1.NumGE1500 DESC LIMIT 1;\t----- bird -----\tcalifornia_schools",
    "8": "SELECT T1.NumTstTakr FROM satscores AS T1 JOIN frpm AS T2 ON T1.cds = T2.CDSCode ORDER BY T2.\"FRPM Count (K-12)\" DESC LIMIT 1;\t----- bird -----\tcalifornia_schools",
    "9": "SELECT COUNT(DISTINCT s.CDSCode) FROM satscores AS st JOIN schools AS s ON st.cds = s.CDSCode WHERE st.AvgScrMath > 560 AND s.FundingType = 'Charter';\t----- bird -----\tcalifornia_schools",
    "10": "SELECT T1.FRPM_Count_Ages_5_17 FROM frpm AS T1 JOIN satscores AS T2 ON T1.CDSCode = T2.cds ORDER BY T2.AvgScrRead DESC LIMIT 1;\t----- bird -----\tcalifornia_schools",
    "11": "SELECT `CDSCode` FROM frpm WHERE `Enrollment (K-12)` > 500;\t----- bird -----\tcalifornia_schools",
    "12": "SELECT MAX(`Percent (%) Eligible FRPM (Ages 5-17)`) FROM frpm WHERE `CDSCode` IN (SELECT `cds` FROM satscores WHERE `NumGE1500` > 0.3 * `NumTstTakr`);\t----- bird -----\tcalifornia_schools",
    "13": "SELECT T1.Phone FROM schools AS T1 JOIN satscores AS T2 ON T1.CDSCode = T2.cds ORDER BY T2.NumGE1500 DESC LIMIT 3;\t----- bird -----\tcalifornia_schools",
    "14": "SELECT NCESSchool FROM frpm ORDER BY `Enrollment (Ages 5-17)` DESC LIMIT 5;\t----- bird -----\tcalifornia_schools",
    "15": "SELECT dname FROM satscores WHERE rtype = 'D' AND enroll12 > 0 GROUP BY dname ORDER BY AVG(AvgScrRead) DESC LIMIT 1;\t----- bird -----\tcalifornia_schools",
    "16": "SELECT count(*) FROM satscores WHERE dname = 'Alameda' AND NumTstTakr < 100;\t----- bird -----\tcalifornia_schools",
    "17": "SELECT CharterNum FROM satscores WHERE AvgScrWrite > 499 ORDER BY AvgScrWrite DESC LIMIT 10;\t----- bird -----\tcalifornia_schools",
    "18": "SELECT COUNT(T1.CDSCode) FROM frpm AS T1 JOIN satscores AS T2 ON T1.CDSCode = T2.cds WHERE T1.County Name = 'Fresno' AND T2.NumTstTakr <= 250 AND T1.Charter Funding Type = 'Direct';\t----- bird -----\tcalifornia_schools",
    "19": "SELECT T1.Phone FROM satscores AS T1 ORDER BY AvgScrMath DESC LIMIT 1;\t----- bird -----\tcalifornia_schools",
    "20": "SELECT count(*) FROM frpm WHERE County Name = \"Amador\" AND Low Grade = 9 AND High Grade = 12;\t----- bird -----\tcalifornia_schools",
    "21": "SELECT count(*) FROM frpm WHERE County Name = 'Los Angeles' AND `Free Meal Count (K-12)` > 500 AND `FRPM Count (K-12)` < 700;\t----- bird -----\tcalifornia_schools",
    "22": "SELECT s.School FROM satscores s JOIN schools s ON s.cds = s.CDSCode WHERE s.County = 'Contra Costa' ORDER BY s.NumTstTakr DESC LIMIT 1;\t----- bird -----\tcalifornia_schools",
    "23": "SELECT School Name, Street FROM frpm JOIN schools ON frpm.CDSCode = schools.CDSCode WHERE ABS(`Enrollment (K-12)` - `Enrollment (Ages 5-17)`) > 30;\t----- bird -----\tcalifornia_schools",
    "24": "SELECT DISTINCT T1.School Name FROM frpm AS T1 JOIN satscores AS T2 ON T1.CDSCode = T2.cds WHERE T1.\"Percent (%) Eligible Free (K-12)\" > 0.1 AND T2.NumGE1500 >= 1;\t----- bird -----\tcalifornia_schools",
    "25": "SELECT T1.FundingType FROM schools AS T1 JOIN satscores AS T2 ON T1.CDSCode = T2.cds WHERE T1.County = 'Riverside' AND T2.AvgScrMath > 400;\t----- bird -----\tcalifornia_schools",
    "26": "SELECT School Name, Street, City, Zip, MailStreet, MailCity, MailZip FROM frpm WHERE County Name = 'Monterey' AND `FRPM Count (Ages 5-17)` > 800 AND `High Grade` = '12';\t----- bird -----\tcalifornia_schools",
    "27": "SELECT s.sname, AVG(satscores.AvgScrWrite), s.CharterNum FROM satscores JOIN schools s ON satscores.cds = s.CDSCode WHERE s.OpenDate > '1991-12-31' OR s.ClosedDate < '2000-01-01' GROUP BY s.sname;\t----- bird -----\tcalifornia_schools",
    "28": "SELECT T1.School Name, T1.`DOC Type` FROM frpm AS T1 JOIN schools AS T2 ON T1.CDSCode = T2.CDSCode WHERE T2.FundingType = 'Local' AND T1.`Enrollment (K-12)` - T1.`Enrollment (Ages 5-17)` > (SELECT AVG(T3.`Enrollment (K-12)` - T3.`Enrollment (Ages 5-17)`) FROM frpm AS T3 WHERE T3.Charter School (Y/N) = 'N');\t----- bird -----\tcalifornia_schools",
    "29": "SELECT OpenDate FROM schools ORDER BY Enrollment DESC LIMIT 1;\t----- bird -----\tcalifornia_schools",
    "30": "SELECT DISTINCT City FROM frpm ORDER BY `Enrollment (K-12)` ASC LIMIT 5;\t----- bird -----\tcalifornia_schools",
    "31": "SELECT `Percent (%) Eligible Free (K-12)` FROM frpm ORDER BY `Enrollment (K-12)` DESC LIMIT 10;\t----- bird -----\tcalifornia_schools",
    "32": "SELECT \"Percent (%) Eligible FRPM (K-12)\" FROM frpm WHERE \"Educational Option Type\" = '66' ORDER BY \"FRPM Count (K-12)\" DESC LIMIT 5;\t----- bird -----\tcalifornia_schools",
    "33": "SELECT frpm.School Name, frpm.Website FROM frpm WHERE `FRPM Count (Ages 5-17)` BETWEEN 1900 AND 2000;\t----- bird -----\tcalifornia_schools",
    "34": "SELECT `Percent (%) Eligible Free (Ages 5-17)` FROM frpm WHERE `School Name` = 'Kacey Gibson';\t----- bird -----\tcalifornia_schools",
    "35": "SELECT AdmEmail1 FROM schools WHERE Charter = 'Y' ORDER BY enroll12 ASC LIMIT 1;\t----- bird -----\tcalifornia_schools",
    "36": "SELECT T1.AdmFName1 || ' ' || T1.AdmLName1 FROM schools AS T1 JOIN satscores AS T2 ON T1.CDSCode = T2.cds WHERE T2.NumGE1500 = (SELECT MAX(NumGE1500) FROM satscores);\t----- bird -----\tcalifornia_schools",
    "37": "SELECT Street, City, Zip, State FROM schools ORDER BY EILName ASC LIMIT 1;\t----- bird -----\tcalifornia_schools",
    "38": "SELECT T1.Website FROM schools AS T1 JOIN satscores AS T2 ON T1.CDSCode = T2.cds WHERE T1.County = \"Los Angeles\" AND T2.NumTstTakr BETWEEN 2000 AND 3000;\t----- bird -----\tcalifornia_schools",
    "39": "SELECT AVG(NumTstTakr) FROM satscores WHERE cds IN (SELECT CDSCode FROM schools WHERE County = 'Fresno' AND OpenDate BETWEEN '1980-01-01' AND '1980-12-31');\t----- bird -----\tcalifornia_schools",
    "40": "SELECT T1.Phone FROM satscores AS T1 JOIN schools AS T2 ON T1.cds = T2.CDSCode WHERE T2.District = 'Fresno Unified' ORDER BY T1.AvgScrRead ASC LIMIT 1;\t----- bird -----\tcalifornia_schools",
    "41": "SELECT s.School FROM satscores AS s JOIN schools AS sch ON s.cds = sch.CDSCode WHERE sch.Virtual = 'Y' ORDER BY s.AvgScrRead DESC LIMIT 5;\t----- bird -----\tcalifornia_schools",
    "42": "SELECT T1.EdOpsName FROM frpm AS T1 JOIN satscores AS T2 ON T1.CDSCode = T2.cds ORDER BY T2.AvgScrMath DESC LIMIT 1;\t----- bird -----\tcalifornia_schools",
    "43": "SELECT satscores.AvgScrMath, schools.County FROM satscores JOIN schools ON satscores.cds = schools.CDSCode ORDER BY (satscores.AvgScrRead + satscores.AvgScrMath + satscores.AvgScrWrite) ASC LIMIT 1;\t----- bird -----\tcalifornia_schools",
    "44": "SELECT s.City, AVG(satscores.AvgScrWrite) FROM satscores JOIN schools s ON satscores.cds = s.CDSCode WHERE satscores.NumGE1500 = (SELECT MAX(NumGE1500) FROM satscores);\t----- bird -----\tcalifornia_schools",
    "45": "SELECT s.School, AVG(satscores.AvgScrWrite) FROM schools AS s JOIN satscores ON s.CDSCode = satscores.cds WHERE s.AdmFName1 = 'Ricci' AND s.AdmEmail1 LIKE '%ulrich%' GROUP BY s.School;\t----- bird -----\tcalifornia_schools",
    "46": "SELECT T1.School FROM frpm AS T1 JOIN schools AS T2 ON T1.CDSCode = T2.CDSCode WHERE T2.StatusType = 'Special School' AND T2.State = 'CA' ORDER BY T1.\"Enrollment (K-12)\" DESC LIMIT 1;\t----- bird -----\tcalifornia_schools",
    "47": "SELECT AVG(CASE WHEN strftime('%Y', OpenDate) = '1980' THEN 1 ELSE 0 END) FROM schools WHERE County = 'Alameda' AND District LIKE '%Elementary School District%';\t----- bird -----\tcalifornia_schools",
    "48": "SELECT CAST(SUM(CASE WHEN District Name LIKE '%Unified School District%' THEN 1 ELSE 0 END) AS REAL) / SUM(CASE WHEN District Name LIKE '%Elementary School District%' THEN 1 ELSE 0 END) FROM frpm WHERE County Name = 'Orange';\t----- bird -----\tcalifornia_schools",
    "49": "SELECT School, ClosedDate FROM schools WHERE StatusType = 'C' GROUP BY County ORDER BY COUNT(*) DESC LIMIT 1;\t----- bird -----\tcalifornia_schools",
    "50": "SELECT s.MailStreet, s.School FROM satscores s JOIN schools s ON s.cds = s.CDSCode ORDER BY AvgScrMath DESC LIMIT 1 OFFSET 6;\t----- bird -----\tcalifornia_schools",
    "51": "SELECT s.MailStreet, s.School FROM schools s JOIN satscores sa ON s.CDSCode = sa.cds ORDER BY sa.AvgScrRead ASC LIMIT 1;\t----- bird -----\tcalifornia_schools",
    "52": "SELECT COUNT(T1.CDSCode) FROM satscores AS T1 JOIN schools AS T2 ON T1.CDSCode = T2.CDSCode WHERE T2.MailCity = 'Lakeport' AND T1.NumGE1500 >= 1;\t----- bird -----\tcalifornia_schools",
    "53": "SELECT sum(NumTstTakr) FROM satscores WHERE cds IN (SELECT CDSCode FROM schools WHERE MailCity = 'Fresno');\t----- bird -----\tcalifornia_schools",
    "54": "SELECT School, MailZip FROM schools WHERE AdmFName1 = 'Avetik' AND AdmLName1 = 'Atoian';\t----- bird -----\tcalifornia_schools",
    "55": "SELECT CAST(SUM(CASE WHEN County = 'Colusa' THEN 1 ELSE 0 END) AS REAL) / SUM(CASE WHEN County = 'Humboldt' THEN 1 ELSE 0 END) FROM schools WHERE MailState = 'CA';\t----- bird -----\tcalifornia_schools",
    "56": "SELECT COUNT(*) FROM schools WHERE MailState = 'CA' AND City = 'San Joaquin' AND StatusType = 'Active';\t----- bird -----\tcalifornia_schools",
    "57": "SELECT Phone, Ext FROM satscores ORDER BY AvgScrWrite DESC LIMIT 1 OFFSET 332;\t----- bird -----\tcalifornia_schools",
    "58": "SELECT Phone, Ext, School FROM schools WHERE Zip = '95203-3704';\t----- bird -----\tcalifornia_schools",
    "59": "SELECT Website FROM schools WHERE AdmFName1 = 'Mike' AND AdmLName1 = 'Larson' OR AdmFName1 = 'Dante' AND AdmLName1 = 'Alvarez';\t----- bird -----\tcalifornia_schools",
    "60": "SELECT Website FROM schools WHERE Charter = 'Y' AND Virtual = 'P' AND County = 'San Joaquin';\t----- bird -----\tcalifornia_schools",
    "61": "SELECT COUNT(s.CDSCode) FROM schools s JOIN frpm f ON s.CDSCode = f.CDSCode WHERE s.City = 'Hickman' AND s.District = 'Elementary School District' AND s.Charter = 'Y';\t----- bird -----\tcalifornia_schools",
    "62": "SELECT COUNT(*) FROM frpm WHERE County Name = 'Los Angeles' AND `Charter School (Y/N)` = 'N' AND `Percent (%) Eligible Free (K-12)` < 0.18;\t----- bird -----\tcalifornia_schools",
    "63": "SELECT s.School, s.City, s.AdmFName1 || ' ' || s.AdmLName1, s.AdmFName2 || ' ' || s.AdmLName2, s.AdmFName3 || ' ' || s.AdmLName3 FROM schools s JOIN frpm f ON s.CDSCode = f.CDSCode WHERE s.Charter = 'Y' AND s.CharterNum = '00D2';\t----- bird -----\tcalifornia_schools",
    "64": "SELECT count(*) FROM schools WHERE MailCity = 'Hickman' AND CharterNum = '00D4';\t----- bird -----\tcalifornia_schools",
    "65": "SELECT CAST(SUM(CASE WHEN frpm.Charter Funding Type = 'LOCAL' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(DISTINCT frpm.CDSCode) AS ratio FROM frpm WHERE frpm.County Name = 'Santa Clara' AND frpm.`Charter School (Y/N)` = 'Y';\t----- bird -----\tcalifornia_schools",
    "66": "SELECT COUNT(*) FROM schools WHERE strftime('%Y', OpenDate) BETWEEN '2000' AND '2005' AND County = 'Stanislaus' AND FundingType = 'Direct';\t----- bird -----\tcalifornia_schools",
    "67": "SELECT COUNT(*) FROM schools WHERE City = 'San Francisco' AND STRFTIME('%Y', ClosedDate) = '1989' AND District LIKE '%Community College District%';\t----- bird -----\tcalifornia_schools",
    "68": "SELECT County FROM frpm WHERE `Academic Year` LIKE '198[0-9]' AND `School Type` = 'Youth Authority Facilities (CEA)' GROUP BY County ORDER BY COUNT(*) DESC LIMIT 1;\t----- bird -----\tcalifornia_schools",
    "69": "SELECT NCESDist FROM schools WHERE SOC = 'State Special Schools';\t----- bird -----\tcalifornia_schools",
    "70": "SELECT COUNT(*) FROM schools WHERE County = 'Alpine' AND (StatusType = 'Active' OR StatusType = 'Closed') AND District LIKE '%District%' AND School LIKE '%Community Day%';\t----- bird -----\tcalifornia_schools",
    "71": "SELECT District FROM schools WHERE City = 'Fresno' AND Magnet = 'N';\t----- bird -----\tcalifornia_schools",
    "72": "SELECT `Enrollment (Ages 5-17)` FROM frpm WHERE `School Name` = 'State Special School' AND `District Name` = 'Fremont' AND `Academic Year` = '2014-15';\t----- bird -----\tcalifornia_schools",
    "73": "SELECT `FRPM Count (Ages 5-17)` FROM frpm JOIN schools ON frpm.CDSCode = schools.CDSCode WHERE schools.MailStrAbr = 'PO' AND schools.MailCity = '1040' AND `School Name` = 'Youth Authority School';\t----- bird -----\tcalifornia_schools",
    "74": "SELECT Low Grade FROM frpm WHERE District Code = (SELECT NCESDist FROM schools WHERE NCESSchool = '0613360' AND District = 'Special Education Consortia');\t----- bird -----\tcalifornia_schools",
    "75": "SELECT T1.EdOpsName FROM frpm AS T1 JOIN schools AS T2 ON T1.CDSCode = T2.CDSCode WHERE T2.County = '37' AND T1.`Educational Option Type` = 'Breakfast Provision 2';\t----- bird -----\tcalifornia_schools",
    "76": "SELECT T1.City FROM schools AS T1 JOIN frpm AS T2 ON T1.CDSCode = T2.CDSCode WHERE T2.NSLP Provision Status = 'Lunch Provision 2' AND T2.Low Grade = 9 AND T2.High Grade = 12 AND T1.County = 'Merced';\t----- bird -----\tcalifornia_schools",
    "77": "SELECT `School Name`, `Percent (%) Eligible FRPM (Ages 5-17)` FROM frpm WHERE `County Name` = 'Los Angeles' AND `Low Grade` = 0 AND `High Grade` = 9;\t----- bird -----\tcalifornia_schools",
    "78": "SELECT GSoffered FROM schools WHERE City = 'Adelanto' GROUP BY GSoffered ORDER BY COUNT(*) DESC LIMIT 1;\t----- bird -----\tcalifornia_schools",
    "79": "SELECT County, COUNT(CDSCode) AS NumberOfSchools FROM frpm WHERE CountyName BETWEEN 'San Diego' AND 'Santa Barbara' AND `Educational Option Type` = 'Virtual' GROUP BY County ORDER BY NumberOfSchools DESC LIMIT 1;\t----- bird -----\tcalifornia_schools",
    "80": "SELECT School Name, School Type, Latitude FROM frpm ORDER BY Latitude DESC LIMIT 1;\t----- bird -----\tcalifornia_schools",
    "81": "SELECT School, City, Low Grade FROM frpm WHERE State = 'CA' ORDER BY Latitude ASC LIMIT 1;\t----- bird -----\tcalifornia_schools",
    "82": "SELECT GSoffered FROM schools ORDER BY Longitude DESC LIMIT 5;\t----- bird -----\tcalifornia_schools",
    "83": "SELECT T1.City, COUNT(DISTINCT T1.City), COUNT(T2.CDSCode) FROM schools AS T1 JOIN frpm AS T2 ON T1.CDSCode = T2.CDSCode WHERE T1.Magnet = 'Y' AND T1.GSoffered = 'K' AND T1.GSserved = '08' GROUP BY T1.City;\t----- bird -----\tcalifornia_schools",
    "84": "SELECT SUBSTR(AdmFName1, 1, 1) AS FirstName, District FROM frpm LIMIT 2;\t----- bird -----\tcalifornia_schools",
    "85": "SELECT frpm.\"District Code\" FROM frpm JOIN schools ON frpm.CDSCode = schools.CDSCode WHERE schools.\"AdmFName1\" = 'Alusine';\t----- bird -----\tcalifornia_schools",
    "86": "SELECT s.District, s.County, s.School, s.AdmLName1 FROM schools s WHERE s.CharterNum = 40;\t----- bird -----\tcalifornia_schools",
    "87": "SELECT AdmEmail1, AdmEmail2, AdmEmail3 FROM schools WHERE County = 'San Bernardino' AND District = 'San Bernardino City Unified' AND OpenDate BETWEEN '2009-01-01' AND '2010-12-31' AND School LIKE '%Public Intermediate/Middle School%' AND School LIKE '%Unified School%';\t----- bird -----\tcalifornia_schools",
    "88": "SELECT s.School, s.AdmEmail1 FROM satscores s JOIN schools s ON s.cds = s.CDSCode ORDER BY s.NumGE1500 DESC LIMIT 1;\t----- bird -----\tcalifornia_schools",
    "89": "SELECT COUNT(DISTINCT A.account_id) FROM account AS A JOIN disp AS D ON A.account_id = D.account_id JOIN district AS DI ON A.district_id = DI.district_id WHERE D.type = 'issuance' AND DI.A1 = 'East Bohemia';\t----- bird -----\tfinancial",
    "90": "SELECT COUNT(DISTINCT A.account_id) FROM account A JOIN client C ON A.district_id = C.district_id JOIN district D ON C.district_id = D.district_id WHERE D.A2 = 'Prague';\t----- bird -----\tfinancial",
    "91": "SELECT CASE WHEN (SELECT AVG(CASE WHEN strftime('%Y', date) = '1995' THEN unemployment_ratio ELSE NULL END) FROM unemployment) > (SELECT AVG(CASE WHEN strftime('%Y', date) = '1996' THEN unemployment_ratio ELSE NULL END) FROM unemployment) THEN '1995' ELSE '1996' END;\t----- bird -----\tfinancial",
    "92": "SELECT COUNT(DISTRICT_ID) FROM client WHERE gender = 'F' GROUP BY district_id HAVING AVG(salary) > 6000 AND AVG(salary) < 10000;\t----- bird -----\tfinancial",
    "93": "SELECT COUNT(c.client_id) FROM client c JOIN district d ON c.district_id = d.district_id WHERE c.gender = 'Male' AND d.A2 LIKE '%North Bohemia%' AND (SELECT AVG(t.amount) FROM trans t WHERE t.account_id = c.client_id) > 8000;\t----- bird -----\tfinancial",
    "94": "-- Unable to determine salary information from the provided schema. Returning a query based on birth_date instead. SELECT T1.account_id FROM client AS T1 JOIN disp AS T2 ON T1.client_id = T2.client_id WHERE T1.gender = 'F' ORDER BY T1.birth_date ASC LIMIT 1;\t----- bird -----\tfinancial",
    "95": "SELECT DISTINCT T1.account_id FROM disp AS T1 JOIN client AS T2 ON T1.client_id = T2.client_id ORDER BY T2.birth_date ASC, (SELECT SUM(amount) FROM trans WHERE account_id = T1.account_id) DESC LIMIT 1;\t----- bird -----\tfinancial",
    "96": "SELECT COUNT(DISTINCT c.client_id) FROM client c JOIN account a ON c.district_id = a.district_id WHERE a.frequency = 'weekly' AND c.gender = 'Owner';\t----- bird -----\tfinancial",
    "97": "SELECT DISTINCT c.client_id FROM client c JOIN disp d ON c.client_id = d.client_id WHERE d.type = 'Disponent' AND EXISTS (SELECT 1 FROM trans t WHERE t.account_id = d.account_id AND t.type = 'statement of issuance');\t----- bird -----\tfinancial",
    "98": "SELECT T1.account_id FROM loan AS T1 JOIN account AS T2 ON T1.account_id = T2.account_id WHERE strftime('%Y', T1.date) = '1997' ORDER BY T1.amount LIMIT 1;\t----- bird -----\tfinancial",
    "99": "SELECT T1.account_id FROM loan AS T1 JOIN account AS T2 ON T1.account_id = T2.account_id WHERE T1.duration > 12 AND STRFTIME('%Y', T2.date) = '1993' ORDER BY T1.amount DESC LIMIT 1;\t----- bird -----\tfinancial",
    "100": "SELECT COUNT(DISTINCT c.client_id) FROM client c JOIN account a ON c.district_id = a.district_id WHERE c.gender = 'F' AND c.birth_date < '1950-01-01' AND c.district_id IN (SELECT district_id FROM district WHERE A2 = 'Sokolov');\t----- bird -----\tfinancial",
    "101": "SELECT account_id FROM trans WHERE strftime('%Y', date) = '1995' GROUP BY account_id ORDER BY MIN(date) LIMIT 1;\t----- bird -----\tfinancial",
    "102": "SELECT DISTINCT account_id FROM account WHERE date < '1997-01-01' AND account_id IN (SELECT account_id FROM trans WHERE amount > 100000);\t----- bird -----\tfinancial",
    "103": "SELECT c.client_id FROM card c JOIN disp d ON c.card_id = d.card_id WHERE issued = '1994-03-03';\t----- bird -----\tfinancial",
    "104": "SELECT T1.date FROM account AS T1 JOIN trans AS T2 ON T1.account_id = T2.account_id WHERE T2.amount = 840 AND T2.date = '1998-10-14';\t----- bird -----\tfinancial",
    "105": "SELECT T1.district_id FROM account AS T1 INNER JOIN loan AS T2 ON T1.account_id = T2.account_id WHERE T2.date = '1994-08-25';\t----- bird -----\tfinancial",
    "106": "SELECT MAX(T.amount) FROM trans AS T JOIN account AS A ON T.account_id = A.account_id JOIN disp AS D ON A.account_id = D.account_id JOIN card AS C ON D.disp_id = C.disp_id WHERE STRFTIME('%Y/%m/%d', C.issued) = '1996/10/21';\t----- bird -----\tfinancial",
    "107": "SELECT T1.gender FROM client AS T1 JOIN district AS T2 ON T1.district_id = T2.district_id ORDER BY T1.birth_date ASC LIMIT 1;\t----- bird -----\tfinancial",
    "108": "SELECT T1.amount FROM trans AS T1 JOIN account AS T2 ON T1.account_id = T2.account_id JOIN loan AS T3 ON T2.account_id = T3.account_id WHERE T3.amount = (SELECT MAX(amount) FROM loan) ORDER BY T1.date ASC LIMIT 1;\t----- bird -----\tfinancial",
    "109": "SELECT count(*) FROM client WHERE district_id IN (SELECT district_id FROM district WHERE A2 = 'Jesenik') AND gender = 'F';\t----- bird -----\tfinancial",
    "110": "SELECT DISTINCT d.disp_id FROM disp d JOIN trans t ON d.disp_id = t.disp_id WHERE t.amount = 5100 AND t.date = '1998-09-02';\t----- bird -----\tfinancial",
    "111": "SELECT COUNT(DISTINCT account_id) FROM account WHERE district_id = (SELECT district_id FROM district WHERE A2 = 'Litomerice') AND strftime('%Y', date) = '1996';\t----- bird -----\tfinancial",
    "112": "SELECT T1.district_id FROM client AS T1 JOIN account AS T2 ON T1.district_id = T2.district_id WHERE T1.gender = 'F' AND T1.birth_date = '1976-01-29';\t----- bird -----\tfinancial",
    "113": "SELECT T1.birth_date FROM client AS T1 JOIN loan AS T2 ON T1.client_id = T2.client_id WHERE T2.amount = 98832 AND T2.date = '1996-01-03';\t----- bird -----\tfinancial",
    "114": "SELECT T1.account_id FROM account AS T1 JOIN client AS T2 ON T1.district_id = T2.district_id WHERE T2.district_id = (SELECT district_id FROM district WHERE district_name = 'Prague') LIMIT 1;\t----- bird -----\tfinancial",
    "115": "SELECT CAST(SUM(CASE WHEN c.gender = 'M' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(c.client_id) FROM client c JOIN district d ON c.district_id = d.district_id WHERE d.A2 = 'south Bohemia';\t----- bird -----\tfinancial",
    "116": "SELECT (SUM(T2.balance) - MIN(T2.balance)) / MIN(T2.balance) FROM trans AS T1 JOIN account AS T3 ON T1.account_id = T3.account_id JOIN loan AS T4 ON T3.account_id = T4.account_id JOIN client AS T5 ON T3.district_id = T5.district_id WHERE T4.date = '1993-07-05' AND T4.status = 'approved' AND T1.date BETWEEN '1993-03-22' AND '1998-12-27' GROUP BY T5.client_id;\t----- bird -----\tfinancial",
    "117": "SELECT CAST(SUM(loan.amount) AS REAL) * 100 / SUM(SUM(loan.amount)) FROM loan WHERE status = 'paid';\t----- bird -----\tfinancial",
    "118": "SELECT CAST(SUM(CASE WHEN L.status = 'running' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(L.account_id) FROM loan AS L WHERE L.amount < 100000;\t----- bird -----\tfinancial",
    "119": "SELECT DISTINCT A.account_id, D.A2, D.A3 FROM account AS A JOIN client AS C ON A.district_id = C.district_id JOIN district AS D ON C.district_id = D.district_id WHERE strftime('%Y', A.date) = '1993' AND A.account_id IN (SELECT account_id FROM trans WHERE date > (SELECT date FROM account WHERE account_id = A.account_id));\t----- bird -----\tfinancial",
    "120": "SELECT T1.account_id, T1.frequency FROM account AS T1 JOIN client AS T2 ON T1.district_id = T2.district_id JOIN district AS T3 ON T2.district_id = T3.district_id WHERE T3.A1 = 'east Bohemia' AND T1.date BETWEEN '1995-01-01' AND '2000-12-31';\t----- bird -----\tfinancial",
    "121": "SELECT a.account_id, a.date FROM account a JOIN client c ON a.district_id = c.district_id JOIN district d ON c.district_id = d.district_id WHERE d.A2 = 'Prachatice';\t----- bird -----\tfinancial",
    "122": "SELECT T1.A2, T1.A3 FROM district AS T1 JOIN client AS T2 ON T1.district_id = T2.district_id JOIN account AS T3 ON T2.district_id = T3.district_id JOIN loan AS T4 ON T3.account_id = T4.account_id WHERE T4.loan_id = '4990';\t----- bird -----\tfinancial",
    "123": "SELECT T1.account_id, T1.district_id, D.A2 FROM loan AS T1 JOIN account AS T2 ON T1.account_id = T2.account_id JOIN district AS D ON T2.district_id = D.district_id WHERE T1.amount > 300000;\t----- bird -----\tfinancial",
    "124": "SELECT L.loan_id, D.A2, AVG(C.birth_date) FROM loan L JOIN account A ON L.account_id = A.account_id JOIN client C ON A.district_id = C.district_id JOIN district D ON C.district_id = D.district_id WHERE L.duration = 60;\t----- bird -----\tfinancial",
    "125": "SELECT T1.A2 FROM district AS T1 JOIN client AS T2 ON T1.district_id = T2.district_id JOIN loan AS T3 ON T2.district_id = T3.account_id WHERE T3.status = 'running';\t----- bird -----\tfinancial",
    "126": "SELECT CAST(SUM(CASE WHEN strftime('%Y', date) = '1993' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(*) FROM account WHERE district_id IN (SELECT district_id FROM district WHERE A2 LIKE '%Decin%');\t----- bird -----\tfinancial",
    "127": "SELECT DISTINCT account_id FROM account WHERE frequency = 'M';\t----- bird -----\tfinancial",
    "128": "SELECT T1.district_id FROM client AS T1 JOIN account AS T2 ON T1.district_id = T2.district_id WHERE T1.gender = 'F' GROUP BY T1.district_id ORDER BY COUNT(T1.client_id) DESC LIMIT 9;\t----- bird -----\tfinancial",
    "129": "SELECT T1.A11 FROM trans AS T1 JOIN account AS T2 ON T1.account_id = T2.account_id JOIN district AS T3 ON T2.district_id = T3.district_id WHERE T1.type != 'credit' AND T1.operation = 'withdrawal' AND T1.date LIKE '1996-01%' ORDER BY T1.amount DESC LIMIT 10;\t----- bird -----\tfinancial",
    "130": "SELECT COUNT(DISTINCT c.client_id) FROM client c JOIN district d ON c.district_id = d.district_id WHERE d.A2 = 'South Bohemia' AND NOT EXISTS (SELECT 1 FROM card ca WHERE ca.disp_id IN (SELECT disp_id FROM disp WHERE client_id = c.client_id));\t----- bird -----\tfinancial",
    "131": "SELECT district_id FROM loan WHERE status = 'active' GROUP BY district_id ORDER BY COUNT(*) DESC LIMIT 1;\t----- bird -----\tfinancial",
    "132": "SELECT AVG(L.amount) FROM loan AS L JOIN account AS A ON L.account_id = A.account_id JOIN client AS C ON A.district_id = C.district_id WHERE C.gender = 'Male';\t----- bird -----\tfinancial",
    "133": "SELECT T1.A2, T2.district_id FROM district AS T1 JOIN client AS T2 ON T1.district_id = T2.district_id WHERE STRFTIME('%Y', T2.birth_date) = '1996' GROUP BY T1.district_id ORDER BY COUNT(T2.client_id) DESC LIMIT 6;\t----- bird -----\tfinancial",
    "134": "SELECT COUNT(a.account_id) FROM account a JOIN district d ON a.district_id = d.district_id WHERE a.date LIKE '1996%' AND d.district_id = (SELECT district_id FROM crime WHERE year = 1996 GROUP BY district_id ORDER BY COUNT(*) DESC LIMIT 1);\t----- bird -----\tfinancial",
    "135": "SELECT COUNT(DISTINCT A.account_id) FROM account A JOIN trans T ON A.account_id = T.account_id WHERE A.frequency = 'monthly' AND T.type = 'credit_card_withdrawal' AND T.balance < 0;\t----- bird -----\tfinancial",
    "136": "SELECT COUNT(loan_id) FROM loan WHERE account_id IN (SELECT account_id FROM account WHERE frequency = 'M' AND date BETWEEN '1995-01-01' AND '1997-12-31') AND amount >= 250000 AND status = 'approved';\t----- bird -----\tfinancial",
    "137": "SELECT COUNT(DISTINCT a.account_id) FROM account a JOIN disp d ON a.account_id = d.account_id JOIN district dis ON a.district_id = dis.district_id WHERE dis.A1 = '1';\t----- bird -----\tfinancial",
    "138": "SELECT COUNT(DISTINCT client.client_id) FROM client WHERE client.district_id = (SELECT district_id FROM district ORDER BY (SELECT COUNT(*) FROM disp WHERE disp.type = 'crime' AND strftime('%Y', disp.date) = '1995') DESC LIMIT 1 OFFSET 1);\t----- bird -----\tfinancial",
    "139": "SELECT COUNT(card_id) FROM card WHERE type = 'OWNER' AND disp_id IN (SELECT disp_id FROM disp WHERE type = 'credit');\t----- bird -----\tfinancial",
    "140": "SELECT COUNT(a.account_id) FROM account a JOIN client c ON a.district_id = c.district_id WHERE c.district_id IN (SELECT district_id FROM district WHERE A2 = 'Pisek');\t----- bird -----\tfinancial",
    "141": "SELECT DISTINCT T1.district_id FROM client AS T1 JOIN trans AS T2 ON T1.district_id = T2.account_id WHERE T2.amount > 10000 AND STRFTIME('%Y', T2.date) = '1997';\t----- bird -----\tfinancial",
    "142": "SELECT DISTINCT T1.account_id FROM order AS T1 JOIN district AS T2 ON T1.bank_to = T2.district_id WHERE T2.A2 = 'Pisek' AND T1.k_symbol = 'household payment';\t----- bird -----\tfinancial",
    "143": "SELECT DISTINCT account_id FROM disp WHERE disp_id IN (SELECT card_id FROM card WHERE type = 'credit' AND k_symbol = 'gold');\t----- bird -----\tfinancial",
    "144": "SELECT AVG(amount) FROM trans WHERE strftime('%Y', date) = '2021' AND type = 'credit card' AND account_id IN (SELECT account_id FROM account);\t----- bird -----\tfinancial",
    "145": "SELECT DISTINCT T1.account_id FROM trans AS T1 JOIN card AS T2 ON T1.account_id = T2.account_id WHERE T2.type = 'CR' AND T1.date BETWEEN '1998-01-01' AND '1998-12-31' AND T1.amount < (SELECT AVG(amount) FROM trans WHERE type = 'CR' AND date BETWEEN '1998-01-01' AND '1998-12-31');\t----- bird -----\tfinancial",
    "146": "SELECT DISTINCT C.client_id FROM client AS C JOIN account AS A ON C.district_id = A.district_id JOIN disp AS D ON A.account_id = D.account_id JOIN card AS CA ON D.disp_id = CA.disp_id JOIN loan AS L ON A.account_id = L.account_id WHERE C.gender = 'F' AND CA.type = 'credit' AND L.status = 'active';\t----- bird -----\tfinancial",
    "147": "SELECT COUNT(DISTINCT a.account_id) FROM account a JOIN client c ON a.district_id = c.district_id WHERE c.gender = 'F' AND a.district_id IN (SELECT district_id FROM district WHERE A2 = 'South Bohemia');\t----- bird -----\tfinancial",
    "148": "SELECT DISTINCT account_id FROM account WHERE district_id IN (SELECT district_id FROM district WHERE district = 'Tabor') AND account_id IN (SELECT account_id FROM loan WHERE status = 'approved');\t----- bird -----\tfinancial",
    "149": "SELECT DISTINCT d.type FROM disp d JOIN account a ON d.account_id = a.account_id JOIN client c ON a.district_id = c.district_id JOIN district dis ON c.district_id = dis.district_id WHERE dis.A1 > 8000 AND dis.A1 <= 9000 AND d.type NOT IN (SELECT type FROM disp WHERE account_id IN (SELECT account_id FROM loan));\t----- bird -----\tfinancial",
    "150": "SELECT COUNT(T1.account_id) FROM trans AS T1 JOIN district AS T2 ON T1.account_id IN (SELECT account_id FROM account WHERE district_id = T2.district_id) WHERE T1.bank = 'AB';\t----- bird -----\tfinancial",
    "151": "SELECT DISTINCT T1.A2 FROM district AS T1 JOIN client AS T2 ON T1.district_id = T2.district_id JOIN account AS T3 ON T2.district_id = T3.district_id JOIN trans AS T4 ON T3.account_id = T4.account_id WHERE T4.type = 'WITHDRAWAL';\t----- bird -----\tfinancial",
    "152": "SELECT AVG(T1.payments) FROM loan AS T1 JOIN account AS T2 ON T1.account_id = T2.account_id WHERE T2.date BETWEEN '1997-01-01' AND '1997-12-31' AND T1.date LIKE '1995%' AND T1.amount > 4000;\t----- bird -----\tfinancial",
    "153": "SELECT COUNT(T1.card_id) FROM card AS T1 INNER JOIN disp AS T2 ON T1.card_id = T2.card_id WHERE T1.type = 'classic' AND T2.account_id IN (SELECT account_id FROM loan);\t----- bird -----\tfinancial",
    "154": "SELECT COUNT(*) FROM client WHERE gender = 'male' AND district_id IN (SELECT district_id FROM district WHERE district_id = 'Hl.m. Praha');\t----- bird -----\tfinancial",
    "155": "SELECT CAST(SUM(CASE WHEN issued < '1998-01-01' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(*) FROM card WHERE type = 'Gold';\t----- bird -----\tfinancial",
    "156": "SELECT c.client_id FROM client c JOIN account a ON c.district_id = a.district_id JOIN loan l ON a.account_id = l.account_id ORDER BY l.amount DESC LIMIT 1;\t----- bird -----\tfinancial",
    "157": "-- There is no table or column related to crimes in the database schema. Returning an empty result. SELECT COUNT(*) FROM trans WHERE strftime('%Y', date) = '1995' AND account_id IN (SELECT account_id FROM account WHERE account_id = 532);\t----- bird -----\tfinancial",
    "158": "SELECT T1.district_id FROM account AS T1 JOIN `order` AS T2 ON T1.account_id = T2.account_id WHERE T2.order_id = 33333;\t----- bird -----\tfinancial",
    "159": "SELECT T1.date FROM trans AS T1 JOIN disp AS T2 ON T1.account_id = T2.account_id WHERE T2.client_id = 3356 AND T1.type = 'W' AND T1.operation = 'CASH';\t----- bird -----\tfinancial",
    "160": "SELECT COUNT(DISTINCT A.account_id) FROM account A JOIN loan L ON A.account_id = L.account_id WHERE A.frequency = 'W' AND L.amount < 200000;\t----- bird -----\tfinancial",
    "161": "SELECT T1.type FROM card AS T1 INNER JOIN disp AS T2 ON T1.card_id = T2.card_id WHERE T2.client_id = 13539;\t----- bird -----\tfinancial",
    "162": "SELECT T1.A2 FROM district AS T1 JOIN client AS T2 ON T1.district_id = T2.district_id WHERE T2.client_id = 3541;\t----- bird -----\tfinancial",
    "163": "SELECT T1.district_id FROM client AS T1 JOIN account AS T2 ON T1.district_id = T2.district_id JOIN loan AS T3 ON T2.account_id = T3.account_id WHERE T3.status = 'finished' GROUP BY T1.district_id ORDER BY COUNT(*) DESC LIMIT 1;\t----- bird -----\tfinancial",
    "164": "SELECT T1.account_id FROM order AS T1 WHERE T1.order_id = 32423;\t----- bird -----\tfinancial",
    "165": "SELECT * FROM trans WHERE account_id IN (SELECT account_id FROM account WHERE district_id = 5);\t----- bird -----\tfinancial",
    "166": "SELECT count(account_id) FROM account WHERE district_id IN (SELECT district_id FROM district WHERE district_id = 'Jesenik');\t----- bird -----\tfinancial",
    "167": "SELECT DISTINCT c.client_id FROM client c JOIN disp d ON c.client_id = d.client_id JOIN card ca ON d.disp_id = ca.disp_id WHERE ca.type = 'junior' AND ca.issued > '1996-01-01';\t----- bird -----\tfinancial",
    "168": "SELECT CAST(SUM(CASE WHEN C.gender = 'F' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(C.client_id) FROM client AS C JOIN account AS A ON C.district_id = A.district_id JOIN district AS D ON C.district_id = D.district_id WHERE (D.A2 + D.A3 + D.A4 + D.A5 + D.A6 + D.A7 + D.A8 + D.A9 + D.A10 + D.A11 + D.A12 + D.A13 + D.A14 + D.A15 + D.A16) / 16 > 10000;\t----- bird -----\tfinancial",
    "169": "SELECT (SUM(loan.amount) - LAG(SUM(loan.amount), 1, 0) OVER (ORDER BY STRFTIME('%Y', loan.date))) / LAG(SUM(loan.amount), 1, 0) OVER (ORDER BY STRFTIME('%Y', loan.date)) FROM loan JOIN account ON loan.account_id = account.account_id JOIN client ON account.district_id = client.district_id WHERE client.gender = 'male' AND STRFTIME('%Y', loan.date) IN ('1996', '1997') GROUP BY STRFTIME('%Y', loan.date);\t----- bird -----\tfinancial",
    "170": "SELECT count(*) FROM trans WHERE type = 'credit card withdrawal' AND date > '1995-01-01';\t----- bird -----\tfinancial",
    "171": "SELECT SUM(CASE WHEN T1.A2 LIKE '%East Bohemia%' THEN 1 ELSE 0 END) - SUM(CASE WHEN T1.A2 LIKE '%North Bohemia%' THEN 1 ELSE 0 END) FROM district AS T1;\t----- bird -----\tfinancial",
    "172": "SELECT count(disp_id) FROM disp WHERE account_id BETWEEN 1 AND 10;\t----- bird -----\tfinancial",
    "173": "SELECT COUNT(T1.trans_id) FROM trans AS T1 WHERE T1.account_id = 3 AND T1.type = 'statement' UNION SELECT SUM(T1.amount) FROM trans AS T1 WHERE T1.account = '3539' AND T1.operation = 'debit';\t----- bird -----\tfinancial",
    "174": "SELECT strftime('%Y', birth_date) FROM client WHERE client_id = 130;\t----- bird -----\tfinancial",
    "175": "SELECT count(DISTINCT T1.account_id) FROM disp AS T1 INNER JOIN disp AS T2 ON T1.disp_id = T2.disp_id WHERE T1.type = 'owner' AND T2.type = 'statement';\t----- bird -----\tfinancial",
    "176": "SELECT SUM(L.amount) AS total_debt, COUNT(L.loan_id) AS payment_count FROM loan AS L JOIN account AS A ON L.account_id = A.account_id WHERE A.account_id IN (SELECT disp_id FROM disp WHERE client_id = 992);\t----- bird -----\tfinancial",
    "177": "SELECT SUM(T1.amount) FROM trans AS T1 JOIN account AS T2 ON T1.account_id = T2.account_id WHERE T2.account_id IN (SELECT account_id FROM disp WHERE client_id = 4) AND T1.trans_id > 851;\t----- bird -----\tfinancial",
    "178": "SELECT T1.type FROM card AS T1 INNER JOIN disp AS T2 ON T1.card_id = T2.card_id WHERE T2.client_id = 9;\t----- bird -----\tfinancial",
    "179": "SELECT sum(amount) FROM trans WHERE account_id IN (SELECT account_id FROM disp WHERE client_id = 617) AND date LIKE '1998%';\t----- bird -----\tfinancial",
    "180": "SELECT c.client_id FROM client c JOIN district d ON c.district_id = d.district_id WHERE strftime('%Y', c.birth_date) BETWEEN '1983' AND '1987' AND d.A1 = 'East Bohemia';\t----- bird -----\tfinancial",
    "181": "SELECT client_id FROM client WHERE gender = 'F' ORDER BY (SELECT SUM(amount) FROM loan WHERE loan.client_id = client.client_id) DESC LIMIT 3;\t----- bird -----\tfinancial",
    "182": "SELECT COUNT(DISTINCT client_id) FROM client WHERE gender = 'Male' AND birth_date BETWEEN '1974-01-01' AND '1976-12-31' AND account_id IN (SELECT account_id FROM loan WHERE amount > 4000);\t----- bird -----\tfinancial",
    "183": "SELECT count(DISTINCT account_id) FROM account WHERE district_id = (SELECT district_id FROM district WHERE city = 'Beroun') AND date > '1996-12-31';\t----- bird -----\tfinancial",
    "184": "SELECT COUNT(DISTINCT c.client_id) FROM client AS c JOIN disp AS d ON c.client_id = d.client_id JOIN card AS ca ON d.disp_id = ca.disp_id WHERE c.gender = 'F' AND ca.type = 'junior credit card';\t----- bird -----\tfinancial",
    "185": "SELECT CAST(SUM(CASE WHEN c.gender = 'F' THEN 1 ELSE 0 END) AS REAL) / COUNT(c.client_id) FROM client c JOIN account a ON c.district_id = a.district_id WHERE a.district_id = (SELECT district_id FROM district WHERE district.A2 = 'Prague');\t----- bird -----\tfinancial",
    "186": "SELECT CAST(SUM(CASE WHEN c.gender = 'Male' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(c.client_id) FROM client c JOIN account a ON c.district_id = a.district_id WHERE a.frequency = 'Weekly';\t----- bird -----\tfinancial",
    "187": "SELECT COUNT(DISTINCT c.client_id) FROM client c JOIN account a ON c.district_id = a.district_id WHERE a.frequency = 'weekly' AND c.gender = 'Owner';\t----- bird -----\tfinancial",
    "188": "SELECT account_id FROM loan WHERE duration > 24 AND account_id IN (SELECT account_id FROM account WHERE date < '1997-01-01') ORDER BY amount LIMIT 1;\t----- bird -----\tfinancial",
    "189": "SELECT T1.account_id FROM client AS T1 JOIN disp AS T2 ON T1.client_id = T2.client_id JOIN account AS T3 ON T2.account_id = T3.account_id WHERE T1.gender = 'F' ORDER BY T1.birth_date ASC, T3.account_id ASC LIMIT 1;\t----- bird -----\tfinancial",
    "190": "SELECT COUNT(client_id) FROM client WHERE birth_date LIKE '1920%' AND district_id IN (SELECT district_id FROM district WHERE A2 LIKE '%east Bohemia%' OR A3 LIKE '%east Bohemia%' OR A4 LIKE '%east Bohemia%' OR A5 LIKE '%east Bohemia%' OR A6 LIKE '%east Bohemia%' OR A7 LIKE '%east Bohemia%' OR A8 LIKE '%east Bohemia%' OR A9 LIKE '%east Bohemia%' OR A10 LIKE '%east Bohemia%' OR A11 LIKE '%east Bohemia%' OR A12 LIKE '%east Bohemia%' OR A13 LIKE '%east Bohemia%' OR A14 LIKE '%east Bohemia%' OR A15 LIKE '%east Bohemia%' OR A16 LIKE '%east Bohemia%');\t----- bird -----\tfinancial",
    "191": "SELECT count(DISTINCT account_id) FROM loan WHERE duration = 24 AND account_id IN (SELECT account_id FROM account WHERE frequency = 'weekly');\t----- bird -----\tfinancial",
    "192": "SELECT AVG(L.amount) FROM loan AS L JOIN trans AS T ON L.account_id = T.account_id WHERE L.status = 'running' AND T.date > L.date;\t----- bird -----\tfinancial",
    "193": "SELECT DISTINCT c.client_id, c.district_id FROM client c JOIN disp d ON c.client_id = d.client_id WHERE d.type = 'permanent order' OR EXISTS (SELECT 1 FROM loan l WHERE l.account_id = d.account_id);\t----- bird -----\tfinancial",
    "194": "SELECT c.client_id, CAST(strftime('%Y', 'now') - strftime('%Y', c.birth_date) AS INTEGER) AS age FROM client c JOIN disp d ON c.client_id = d.client_id JOIN card ca ON d.disp_id = ca.disp_id WHERE ca.type = 'credit' AND EXISTS (SELECT 1 FROM loan l WHERE l.account_id = c.district_id);\t----- bird -----\tfinancial",
    "195": "SELECT bond_type FROM bond GROUP BY bond_type ORDER BY COUNT(*) DESC LIMIT 1;\t----- bird -----\ttoxicology",
    "196": "SELECT COUNT(DISTINCT m.molecule_id) FROM molecule m JOIN atom a ON m.molecule_id = a.molecule_id WHERE a.element = 'Cl' AND m.label NOT LIKE '%carcinogenic%';\t----- bird -----\ttoxicology",
    "197": "SELECT AVG(oxygen_count) FROM (SELECT COUNT(a.atom_id) AS oxygen_count FROM atom a JOIN molecule m ON a.molecule_id = m.molecule_id JOIN bond b ON a.molecule_id = b.molecule_id WHERE a.element = 'O' AND b.bond_type = 'single' GROUP BY m.molecule_id) AS subquery;\t----- bird -----\ttoxicology",
    "198": "SELECT AVG(single_bonded_count) FROM (SELECT molecule_id, COUNT(bond_id) AS single_bonded_count FROM connected c JOIN bond b ON c.bond_id = b.bond_id WHERE b.bond_type = 'single' AND EXISTS (SELECT 1 FROM molecule m WHERE m.molecule_id = connected.molecule_id AND m.label = 'carcinogenic') GROUP BY molecule_id) AS subquery;\t----- bird -----\ttoxicology",
    "199": "SELECT COUNT(DISTINCT m.molecule_id) FROM molecule m JOIN atom a ON m.molecule_id = a.molecule_id WHERE a.element = 'Na' AND m.label NOT LIKE '%carcinogenic%';\t----- bird -----\ttoxicology",
    "200": "SELECT DISTINCT m.label FROM molecule m JOIN bond b ON m.molecule_id = b.molecule_id WHERE b.bond_type = 'triple' AND m.label LIKE '%carcinogenic%';\t----- bird -----\ttoxicology",
    "201": "SELECT CAST(SUM(CASE WHEN T1.element = 'C' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(T1.atom_id) FROM atom AS T1 JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id JOIN bond AS T3 ON T2.molecule_id = T3.molecule_id WHERE T3.bond_type = 'double';\t----- bird -----\ttoxicology",
    "202": "SELECT count(*) FROM bond WHERE bond_type = 'triple';\t----- bird -----\ttoxicology",
    "203": "SELECT COUNT(*) FROM atom WHERE element <> 'Br';\t----- bird -----\ttoxicology",
    "204": "SELECT COUNT(*) FROM molecule WHERE label = 'carcinogenic' LIMIT 100;\t----- bird -----\ttoxicology",
    "205": "SELECT DISTINCT molecule_id FROM atom WHERE element = 'C';\t----- bird -----\ttoxicology",
    "206": "SELECT DISTINCT T1.element FROM atom AS T1 JOIN connected AS T2 ON T1.atom_id = T2.atom_id JOIN bond AS T3 ON T2.bond_id = T3.bond_id WHERE T3.molecule_id = 'TR004_8_9';\t----- bird -----\ttoxicology",
    "207": "SELECT T1.element FROM atom AS T1 JOIN connected AS T2 ON T1.atom_id = T2.atom_id JOIN bond AS T3 ON T2.bond_id = T3.bond_id WHERE T3.bond_type = 'double';\t----- bird -----\ttoxicology",
    "208": "SELECT T1.label FROM molecule AS T1 JOIN atom AS T2 ON T1.molecule_id = T2.molecule_id WHERE T2.element = 'H' GROUP BY T1.label ORDER BY COUNT(*) DESC LIMIT 1;\t----- bird -----\ttoxicology",
    "209": "SELECT T2.bond_type FROM atom AS T1 INNER JOIN connected AS T3 ON T1.atom_id = T3.atom_id INNER JOIN bond AS T2 ON T3.bond_id = T2.bond_id WHERE T1.element = 'Cl';\t----- bird -----\ttoxicology",
    "210": "SELECT DISTINCT a1.atom_id FROM atom a1 JOIN connected c ON a1.atom_id = c.atom_id JOIN bond b ON c.bond_id = b.bond_id WHERE b.bond_type = 'single';\t----- bird -----\ttoxicology",
    "211": "SELECT T1.atom_id, T2.atom_id2 FROM connected AS T1 JOIN connected AS T2 ON T1.bond_id = T2.bond_id JOIN molecule AS M ON T1.molecule_id = M.molecule_id WHERE M.label = 'non-carcinogenic';\t----- bird -----\ttoxicology",
    "212": "SELECT element FROM atom WHERE molecule_id IN (SELECT molecule_id FROM molecule WHERE label = 'non-carcinogenic') GROUP BY element ORDER BY COUNT(*) ASC LIMIT 1;\t----- bird -----\ttoxicology",
    "213": "SELECT T1.bond_type FROM bond AS T1 JOIN connected AS T2 ON T1.bond_id = T2.bond_id WHERE T2.atom_id = 'TR004_8' AND T2.atom_id2 = 'TR004_20';\t----- bird -----\ttoxicology",
    "214": "SELECT DISTINCT T1.label FROM molecule AS T1 WHERE T1.molecule_id NOT IN (SELECT molecule_id FROM atom WHERE element = 'Sn');\t----- bird -----\ttoxicology",
    "215": "SELECT COUNT(DISTINCT a.atom_id) FROM atom a JOIN molecule m ON a.molecule_id = m.molecule_id JOIN connected c ON a.atom_id = c.atom_id WHERE a.element IN ('I', 'S') AND m.molecule_id IN (SELECT molecule_id FROM bond WHERE bond_type = 'single');\t----- bird -----\ttoxicology",
    "216": "SELECT DISTINCT T1.atom_id FROM connected AS T1 JOIN bond AS T2 ON T1.bond_id = T2.bond_id WHERE T2.bond_type = 'triple';\t----- bird -----\ttoxicology",
    "217": "SELECT T1.atom_id FROM connected AS T1 JOIN atom AS T2 ON T1.atom_id = T2.atom_id JOIN molecule AS T3 ON T2.molecule_id = T3.molecule_id WHERE T3.label = 'TR181';\t----- bird -----\ttoxicology",
    "218": "SELECT CAST(SUM(CASE WHEN T1.label = 'carcinogenic' AND NOT EXISTS (SELECT 1 FROM atom WHERE molecule_id = T1.molecule_id AND element = 'F') THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(T1.molecule_id) FROM molecule AS T1;\t----- bird -----\ttoxicology",
    "219": "SELECT CAST(SUM(CASE WHEN M.label = 'carcinogenic' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(DISTINCT M.molecule_id) FROM molecule M JOIN bond B ON M.molecule_id = B.molecule_id WHERE B.bond_type = 'triple';\t----- bird -----\ttoxicology",
    "220": "SELECT element FROM atom WHERE molecule_id = (SELECT molecule_id FROM molecule WHERE label = 'TR000') GROUP BY element ORDER BY element ASC LIMIT 3;\t----- bird -----\ttoxicology",
    "221": "SELECT T1.atom_id FROM connected AS T1 WHERE T1.bond_id = 'TR001_2_6' AND T1.atom_id IN (SELECT atom_id FROM atom WHERE molecule_id IN (SELECT molecule_id FROM molecule WHERE label = 'TR001'));\t----- bird -----\ttoxicology",
    "222": "SELECT SUM(CASE WHEN label = 'carcinogenic' THEN 1 ELSE 0 END) - SUM(CASE WHEN label != 'carcinogenic' THEN 1 ELSE 0 END) FROM molecule;\t----- bird -----\ttoxicology",
    "223": "SELECT T1.atom_id FROM connected AS T1 JOIN bond AS T2 ON T1.bond_id = T2.bond_id WHERE T2.bond_id = 'TR000_2_5';\t----- bird -----\ttoxicology",
    "224": "SELECT bond_id FROM connected WHERE atom_id2 IN (SELECT atom_id FROM atom WHERE molecule_id IN (SELECT molecule_id FROM molecule WHERE label = 'TR000_2'));\t----- bird -----\ttoxicology",
    "225": "SELECT m.label FROM molecule m JOIN bond b ON m.molecule_id = b.molecule_id WHERE b.bond_type = 'double' GROUP BY m.molecule_id ORDER BY m.label ASC LIMIT 5;\t----- bird -----\ttoxicology",
    "226": "SELECT CAST(SUM(CASE WHEN b.bond_type = 'double' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(b.bond_id) AS percentage FROM bond b JOIN molecule m ON b.molecule_id = m.molecule_id WHERE m.label = 'TR008';\t----- bird -----\ttoxicology",
    "227": "SELECT CAST(SUM(CASE WHEN m.label = 'carcinogenic' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(m.molecule_id) AS percentage FROM molecule m;\t----- bird -----\ttoxicology",
    "228": "SELECT CAST(SUM(CASE WHEN T1.element = 'H' THEN 1 ELSE 0 END) AS REAL) * 100 / (SELECT SUM(CASE WHEN T2.element = 'H' THEN 1 ELSE 0 END) FROM atom AS T2 WHERE T2.molecule_id = (SELECT molecule_id FROM molecule WHERE label = 'TR206')) FROM atom AS T1 WHERE T1.molecule_id = (SELECT molecule_id FROM molecule WHERE label = 'TR206');\t----- bird -----\ttoxicology",
    "229": "SELECT DISTINCT t1.bond_type FROM bond AS t1 JOIN molecule AS t2 ON t1.molecule_id = t2.molecule_id WHERE t2.label = 'TR000';\t----- bird -----\ttoxicology",
    "230": "SELECT T1.element FROM atom AS T1 JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id WHERE T2.label = 'TR060';\t----- bird -----\ttoxicology",
    "231": "SELECT bond.bond_type, molecule.carcinogenic FROM molecule JOIN bond ON molecule.molecule_id = bond.molecule_id WHERE molecule.label = 'TR010' GROUP BY bond.bond_type ORDER BY COUNT(*) DESC LIMIT 1;\t----- bird -----\ttoxicology",
    "232": "SELECT label FROM molecule WHERE molecule_id IN (SELECT molecule_id FROM bond WHERE bond_type = 'single') ORDER BY label LIMIT 3;\t----- bird -----\ttoxicology",
    "233": "SELECT bond_id FROM bond WHERE molecule_id = (SELECT molecule_id FROM molecule WHERE label = 'TR006') ORDER BY bond_type LIMIT 2;\t----- bird -----\ttoxicology",
    "234": "SELECT COUNT(T1.bond_id) FROM connected AS T1 INNER JOIN molecule AS T2 ON T1.atom_id IN (SELECT atom_id FROM atom WHERE molecule_id = T2.molecule_id AND atom_id = 12) WHERE T2.molecule_id = (SELECT molecule_id FROM molecule WHERE label = 'TR009');\t----- bird -----\ttoxicology",
    "235": "SELECT COUNT(DISTINCT T1.molecule_id) FROM molecule AS T1 JOIN atom AS T2 ON T1.molecule_id = T2.molecule_id WHERE T1.label = 'carcinogenic' AND T2.element = 'Br';\t----- bird -----\ttoxicology",
    "236": "SELECT T1.bond_type, T2.element, T3.element FROM bond AS T1 INNER JOIN connected AS T2 ON T1.bond_id = T2.bond_id INNER JOIN atom AS T3 ON T2.atom_id2 = T3.atom_id WHERE T1.bond_id = 'TR001_6_9';\t----- bird -----\ttoxicology",
    "237": "SELECT T1.label FROM molecule AS T1 JOIN atom AS T2 ON T1.molecule_id = T2.molecule_id WHERE T2.element = 'TR001_10' LIMIT 1;\t----- bird -----\ttoxicology",
    "238": "SELECT COUNT(DISTINCT molecule_id) FROM bond WHERE bond_type = 'triple';\t----- bird -----\ttoxicology",
    "239": "SELECT COUNT(*) FROM connected WHERE atom_id = 19;\t----- bird -----\ttoxicology",
    "240": "SELECT T1.element FROM atom AS T1 JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id WHERE T2.label = \"TR004\";\t----- bird -----\ttoxicology",
    "241": "SELECT count(*) FROM molecule WHERE label != 'carcinogenic';\t----- bird -----\ttoxicology",
    "242": "SELECT DISTINCT m.label FROM molecule m JOIN atom a ON m.molecule_id = a.molecule_id WHERE a.atom_id BETWEEN 21 AND 25 AND m.label = 'carcinogenic';\t----- bird -----\ttoxicology",
    "243": "SELECT T1.bond_id FROM bond AS T1 JOIN connected AS T2 ON T1.bond_id = T2.bond_id JOIN atom AS T3 ON T2.atom_id = T3.atom_id WHERE T3.element = 'P' AND EXISTS (SELECT 1 FROM connected AS T4 JOIN atom AS T5 ON T4.atom_id = T5.atom_id WHERE T4.atom_id2 = T3.atom_id AND T5.element = 'N');\t----- bird -----\ttoxicology",
    "244": "SELECT M.label FROM molecule AS M JOIN (SELECT molecule_id, COUNT(*) AS double_bond_count FROM bond JOIN connected ON bond.bond_id = connected.bond_id WHERE bond_type = 'double' GROUP BY molecule_id ORDER BY double_bond_count DESC LIMIT 1) AS DBC ON M.molecule_id = DBC.molecule_id WHERE M.label LIKE '%carcinogenic%';\t----- bird -----\ttoxicology",
    "245": "SELECT AVG(bond_count) FROM (SELECT COUNT(c.bond_id) AS bond_count FROM atom a JOIN connected c ON a.atom_id = c.atom_id WHERE a.element = 'I' GROUP BY a.atom_id) AS subquery;\t----- bird -----\ttoxicology",
    "246": "SELECT T1.bond_type, T1.bond_id FROM bond AS T1 JOIN connected AS T2 ON T1.bond_id = T2.bond_id WHERE T2.atom_id = 45;\t----- bird -----\ttoxicology",
    "247": "SELECT element FROM atom WHERE atom_id NOT IN (SELECT atom_id FROM connected);\t----- bird -----\ttoxicology",
    "248": "SELECT T1.atom_id FROM atom AS T1 JOIN connected AS T2 ON T1.atom_id = T2.atom_id JOIN bond AS T3 ON T2.bond_id = T3.bond_id JOIN molecule AS T4 ON T3.molecule_id = T4.molecule_id WHERE T4.label = \"TR041\" AND T3.bond_type = \"triple\";\t----- bird -----\ttoxicology",
    "249": "SELECT T1.element FROM atom AS T1 INNER JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id WHERE T2.label = 'TR144_8_19';\t----- bird -----\ttoxicology",
    "250": "SELECT m.label FROM molecule m JOIN bond b ON m.molecule_id = b.molecule_id WHERE m.label = 'carcinogenic' GROUP BY m.molecule_id HAVING COUNT(CASE WHEN b.bond_type = 'double' THEN 1 END) = (SELECT MAX(count_double) FROM (SELECT molecule_id, COUNT(CASE WHEN bond_type = 'double' THEN 1 END) AS count_double FROM bond GROUP BY molecule_id) AS subquery);\t----- bird -----\ttoxicology",
    "251": "SELECT element FROM atom WHERE molecule_id IN (SELECT molecule_id FROM molecule WHERE label = 'carcinogenic') GROUP BY element ORDER BY COUNT(*) ASC LIMIT 1;\t----- bird -----\ttoxicology",
    "252": "SELECT T1.atom_id FROM connected AS T1 JOIN atom AS T2 ON T1.atom_id = T2.atom_id WHERE T2.element = 'lead' AND T1.atom_id2 != T1.atom_id;\t----- bird -----\ttoxicology",
    "253": "SELECT DISTINCT T1.element FROM atom AS T1 JOIN connected AS T2 ON T1.atom_id = T2.atom_id JOIN bond AS T3 ON T2.bond_id = T3.bond_id WHERE T3.bond_type = 'triple';\t----- bird -----\ttoxicology",
    "254": "SELECT CAST(SUM(CASE WHEN c.bond_id IS NOT NULL THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(DISTINCT b.bond_id) FROM bond AS b JOIN connected AS c ON b.bond_id = c.bond_id GROUP BY a.element, b.element ORDER BY COUNT(*) DESC LIMIT 1;\t----- bird -----\ttoxicology",
    "255": "SELECT CAST(SUM(CASE WHEN b.bond_type = 'single' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(b.bond_id) AS proportion FROM bond AS b JOIN connected AS c ON b.bond_id = c.bond_id WHERE EXISTS (SELECT 1 FROM molecule AS m WHERE m.molecule_id = b.molecule_id AND m.label = 'carcinogenic');\t----- bird -----\ttoxicology",
    "256": "SELECT COUNT(DISTINCT atom_id) FROM atom WHERE element IN ('C', 'H');\t----- bird -----\ttoxicology",
    "257": "SELECT atom_id2 FROM connected WHERE atom_id IN (SELECT atom_id FROM atom WHERE element = 'S');\t----- bird -----\ttoxicology",
    "258": "SELECT T1.bond_type FROM bond AS T1 INNER JOIN connected AS T2 ON T1.bond_id = T2.bond_id INNER JOIN atom AS T3 ON T2.atom_id = T3.atom_id WHERE T3.element = 'Tin';\t----- bird -----\ttoxicology",
    "259": "SELECT COUNT(DISTINCT T1.element) FROM atom AS T1 JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id JOIN bond AS T3 ON T2.molecule_id = T3.molecule_id WHERE T3.bond_type = 'single';\t----- bird -----\ttoxicology",
    "260": "SELECT COUNT(DISTINCT T1.atom_id) FROM atom AS T1 JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id JOIN bond AS T3 ON T2.molecule_id = T3.molecule_id WHERE T3.bond_type = 'triple' AND T1.element IN ('P', 'Br');\t----- bird -----\ttoxicology",
    "261": "SELECT T1.bond_id FROM bond AS T1 JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id WHERE T2.label = 'carcinogenic';\t----- bird -----\ttoxicology",
    "262": "SELECT DISTINCT molecule_id FROM bond WHERE bond_type = 'single' AND molecule_id NOT IN (SELECT molecule_id FROM molecule WHERE label = 'carcinogenic');\t----- bird -----\ttoxicology",
    "263": "SELECT CAST(SUM(CASE WHEN T1.element = 'Cl' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(T1.atom_id) FROM atom AS T1 JOIN connected AS T2 ON T1.atom_id = T2.atom_id JOIN bond AS T3 ON T2.bond_id = T3.bond_id WHERE T3.bond_type = 'single' GROUP BY T1.molecule_id;\t----- bird -----\ttoxicology",
    "264": "SELECT label FROM molecule WHERE molecule_id IN ('TR000', 'TR001', 'TR002');\t----- bird -----\ttoxicology",
    "265": "SELECT molecule_id FROM molecule WHERE label != 'carcinogenic';\t----- bird -----\ttoxicology",
    "266": "SELECT COUNT(molecule_id) FROM molecule WHERE molecule_id BETWEEN 'TR000' AND 'TR030' AND label = 'carcinogenic';\t----- bird -----\ttoxicology",
    "267": "SELECT T1.bond_type FROM bond AS T1 INNER JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id WHERE T2.molecule_id BETWEEN 'TR000' AND 'TR050';\t----- bird -----\ttoxicology",
    "268": "SELECT T1.element FROM atom AS T1 JOIN connected AS T2 ON T1.atom_id = T2.atom_id WHERE T2.bond_id = 'TR001_10_11';\t----- bird -----\ttoxicology",
    "269": "SELECT COUNT(c.bond_id) FROM atom a JOIN connected c ON a.atom_id = c.atom_id WHERE a.element = 'I';\t----- bird -----\ttoxicology",
    "270": "SELECT T2.label FROM atom AS T1 INNER JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id WHERE T1.element = 'Calcium' GROUP BY T2.label ORDER BY COUNT(*) DESC LIMIT 1;\t----- bird -----\ttoxicology",
    "271": "SELECT EXISTS (SELECT 1 FROM atom a JOIN connected c ON a.atom_id = c.atom_id WHERE c.bond_id = 'TR001_1_8' AND a.element = 'Cl') AND EXISTS (SELECT 1 FROM atom a JOIN connected c ON a.atom_id = c.atom_id WHERE c.bond_id = 'TR001_1_8' AND a.element = 'C');\t----- bird -----\ttoxicology",
    "272": "SELECT DISTINCT molecule_id FROM atom WHERE element = 'C' AND atom_id IN (SELECT atom_id1 FROM connected WHERE bond_id IN (SELECT bond_id FROM bond WHERE bond_type = 'triple')) LIMIT 2;\t----- bird -----\ttoxicology",
    "273": "SELECT CAST(SUM(CASE WHEN T1.element = 'Cl' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(T1.atom_id) FROM atom AS T1 JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id WHERE T2.label = 'carcinogenic';\t----- bird -----\ttoxicology",
    "274": "SELECT DISTINCT T1.element FROM atom AS T1 JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id WHERE T2.label = 'TR001';\t----- bird -----\ttoxicology",
    "275": "SELECT DISTINCT molecule_id FROM bond WHERE bond_type = 'double';\t----- bird -----\ttoxicology",
    "276": "SELECT DISTINCT a1.atom_id FROM molecule m JOIN atom a1 ON m.molecule_id = a1.molecule_id JOIN connected c ON a1.atom_id = c.atom_id JOIN bond b ON c.bond_id = b.bond_id WHERE m.label = 'triple' AND b.bond_type = 'triple' LIMIT 2;\t----- bird -----\ttoxicology",
    "277": "SELECT T1.element FROM atom AS T1 JOIN connected AS T2 ON T1.atom_id = T2.atom_id WHERE T2.bond_id = 'TR000_1_2';\t----- bird -----\ttoxicology",
    "278": "SELECT COUNT(DISTINCT m.molecule_id) FROM molecule m JOIN bond b ON m.molecule_id = b.molecule_id WHERE b.bond_type = 'single' AND m.label = 'non-carcinogenic';\t----- bird -----\ttoxicology",
    "279": "SELECT T1.label FROM molecule AS T1 INNER JOIN bond AS T2 ON T1.molecule_id = T2.molecule_id WHERE T2.bond_id = 'TR001_10_11';\t----- bird -----\ttoxicology",
    "280": "SELECT b.bond_id FROM bond AS b JOIN molecule AS m ON b.molecule_id = m.molecule_id WHERE b.bond_type = 'triple' AND m.label = 'carcinogenic';\t----- bird -----\ttoxicology",
    "281": "SELECT COUNT(T1.element) FROM atom AS T1 JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id WHERE T2.label = 'carcinogenic' LIMIT 4;\t----- bird -----\ttoxicology",
    "282": "SELECT CAST(SUM(CASE WHEN T1.element = 'H' THEN 1 ELSE 0 END) AS REAL) / COUNT(T1.atom_id) AS ratio, T2.label FROM atom AS T1 JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id WHERE T1.molecule_id = 'TR006';\t----- bird -----\ttoxicology",
    "283": "SELECT T1.label FROM molecule AS T1 INNER JOIN atom AS T2 ON T1.molecule_id = T2.molecule_id WHERE T2.element = 'Ca' AND T1.label LIKE '%carcinogenic%';\t----- bird -----\ttoxicology",
    "284": "SELECT DISTINCT b.bond_type FROM bond AS b JOIN connected AS c ON b.bond_id = c.bond_id JOIN atom AS a ON c.atom_id = a.atom_id WHERE a.element = 'C' AND b.molecule_id = a.molecule_id;\t----- bird -----\ttoxicology",
    "285": "SELECT DISTINCT T1.element FROM atom AS T1 JOIN connected AS T2 ON T1.atom_id = T2.atom_id JOIN bond AS T3 ON T2.bond_id = T3.bond_id WHERE T3.bond_id = 'TR001_10_11';\t----- bird -----\ttoxicology",
    "286": "SELECT CAST(SUM(CASE WHEN b.bond_type = 'triple' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(DISTINCT m.molecule_id) FROM molecule AS m JOIN bond AS b ON m.molecule_id = b.molecule_id;\t----- bird -----\ttoxicology",
    "287": "SELECT CAST(SUM(CASE WHEN b.bond_type = 'double' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(b.bond_id) FROM bond b JOIN molecule m ON b.molecule_id = m.molecule_id WHERE m.molecule_id = 'TR047';\t----- bird -----\ttoxicology",
    "288": "SELECT T1.label FROM molecule AS T1 JOIN atom AS T2 ON T1.molecule_id = T2.molecule_id WHERE T2.element = 'TR001_1' AND T1.label LIKE '%carcinogenic%';\t----- bird -----\ttoxicology",
    "289": "SELECT EXISTS (SELECT 1 FROM molecule WHERE molecule_id = 'TR151' AND label = 'carcinogenic');\t----- bird -----\ttoxicology",
    "290": "SELECT DISTINCT element FROM atom WHERE molecule_id IN (SELECT molecule_id FROM molecule WHERE label = 'TR151');\t----- bird -----\ttoxicology",
    "291": "SELECT COUNT(*) FROM molecule WHERE label = 'carcinogenic';\t----- bird -----\ttoxicology",
    "292": "SELECT DISTINCT a.atom_id FROM atom a JOIN molecule m ON a.molecule_id = m.molecule_id WHERE m.molecule_id BETWEEN 'TR010' AND 'TR050' AND a.element = 'C';\t----- bird -----\ttoxicology",
    "293": "SELECT COUNT(T1.atom_id) FROM atom AS T1 JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id WHERE T2.label = 'carcinogenic compounds';\t----- bird -----\ttoxicology",
    "294": "SELECT T1.bond_id FROM bond AS T1 JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id WHERE T1.bond_type = 'double' AND T2.label = 'carcinogenic';\t----- bird -----\ttoxicology",
    "295": "SELECT COUNT(T1.atom_id) FROM atom AS T1 JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id WHERE T1.element = 'H' AND T2.label = 'carcinogenic compound';\t----- bird -----\ttoxicology",
    "296": "SELECT DISTINCT molecule_id FROM atom WHERE element = 'TR000_1' AND atom_id IN (SELECT atom_id1 FROM connected WHERE bond_id IN (SELECT bond_id FROM bond WHERE bond_type = 'TR000_1_2'));\t----- bird -----\ttoxicology",
    "297": "SELECT DISTINCT a.atom_id FROM atom a WHERE a.element = 'carbon' AND NOT EXISTS (SELECT 1 FROM connected c JOIN bond b ON c.bond_id = b.bond_id WHERE c.atom_id = a.atom_id AND b.bond_type LIKE '%carcinogenic%');\t----- bird -----\ttoxicology",
    "298": "SELECT CAST(SUM(CASE WHEN T1.element = 'H' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(T1.molecule_id) FROM atom AS T1 INNER JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id WHERE T2.label = 'carcinogenic';\t----- bird -----\ttoxicology",
    "299": "SELECT EXISTS (SELECT 1 FROM molecule WHERE molecule_id = 'TR124' AND label = 'carcinogenic');\t----- bird -----\ttoxicology",
    "300": "SELECT T1.atom_id FROM atom AS T1 JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id WHERE T2.label = 'TR186';\t----- bird -----\ttoxicology",
    "301": "SELECT T1.bond_type FROM bond AS T1 INNER JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id WHERE T2.label = 'TR007_4_19';\t----- bird -----\ttoxicology",
    "302": "SELECT T1.element FROM atom AS T1 JOIN connected AS T2 ON T1.atom_id = T2.atom_id WHERE T2.bond_id = 'TR001_2_4';\t----- bird -----\ttoxicology",
    "303": "SELECT COUNT(b.bond_id) FROM molecule m JOIN bond b ON m.molecule_id = b.molecule_id WHERE m.label = 'TR006' AND b.bond_type = 'double';\t----- bird -----\ttoxicology",
    "304": "SELECT m.label, a.element FROM molecule m JOIN atom a ON m.molecule_id = a.molecule_id WHERE m.label = 'carcinogenic';\t----- bird -----\ttoxicology",
    "305": "SELECT b.bond_id, a1.atom_id, a2.atom_id FROM bond b JOIN connected c ON b.bond_id = c.bond_id JOIN atom a1 ON c.atom_id = a1.atom_id JOIN atom a2 ON c.atom_id2 = a2.atom_id WHERE b.bond_type = 'single';\t----- bird -----\ttoxicology",
    "306": "SELECT DISTINCT m.label FROM molecule AS m JOIN bond AS b ON m.molecule_id = b.molecule_id WHERE b.bond_type = 'triple' JOIN atom AS a ON m.molecule_id = a.molecule_id;\t----- bird -----\ttoxicology",
    "307": "SELECT T1.element FROM atom AS T1 JOIN connected AS T2 ON T1.atom_id = T2.atom_id WHERE T2.bond_id = 'TR000_2_3';\t----- bird -----\ttoxicology",
    "308": "SELECT COUNT(c.bond_id) FROM connected c JOIN atom a ON c.atom_id = a.atom_id WHERE a.element = 'Cl';\t----- bird -----\ttoxicology",
    "309": "SELECT A.atom_id, COUNT(DISTINCT B.bond_type) FROM atom A JOIN molecule M ON A.molecule_id = M.molecule_id JOIN connected C ON A.atom_id = C.atom_id JOIN bond B ON C.bond_id = B.bond_id WHERE M.label = 'TR346' GROUP BY A.atom_id;\t----- bird -----\ttoxicology",
    "310": "SELECT COUNT(DISTINCT m.molecule_id) FROM molecule m JOIN bond b ON m.molecule_id = b.molecule_id WHERE b.bond_type = 'double' AND m.label = 'carcinogenic compound';\t----- bird -----\ttoxicology",
    "311": "SELECT COUNT(DISTINCT T1.molecule_id) FROM molecule AS T1 LEFT JOIN atom AS T2 ON T1.molecule_id = T2.molecule_id LEFT JOIN connected AS T3 ON T2.atom_id = T3.atom_id LEFT JOIN bond AS T4 ON T3.bond_id = T4.bond_id WHERE T2.element != 'S' AND T4.bond_type != 'double';\t----- bird -----\ttoxicology",
    "312": "SELECT T1.label FROM molecule AS T1 JOIN bond AS T2 ON T1.molecule_id = T2.molecule_id WHERE T2.bond_id = 'TR001_2_4' AND T1.label LIKE '%carcinogenic%';\t----- bird -----\ttoxicology",
    "313": "SELECT COUNT(*) FROM atom WHERE molecule_id = 'TR001';\t----- bird -----\ttoxicology",
    "314": "SELECT COUNT(*) FROM bond WHERE bond_type = 'single';\t----- bird -----\ttoxicology",
    "315": "SELECT DISTINCT T1.label FROM molecule AS T1 JOIN atom AS T2 ON T1.molecule_id = T2.molecule_id WHERE T2.element = 'cl' AND T1.label LIKE '%carcinogenic%';\t----- bird -----\ttoxicology",
    "316": "SELECT DISTINCT m.label FROM molecule m JOIN atom a ON m.molecule_id = a.molecule_id WHERE a.element = 'c' AND m.label NOT IN (SELECT label FROM molecule WHERE label LIKE '%carcinogenic%');\t----- bird -----\ttoxicology",
    "317": "SELECT CAST(SUM(CASE WHEN m.label = 'carcinogenic' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(DISTINCT m.molecule_id) FROM atom a JOIN molecule m ON a.molecule_id = m.molecule_id WHERE a.element = 'Cl';\t----- bird -----\ttoxicology",
    "318": "SELECT molecule_id FROM bond WHERE bond_id = 'TR001_1_7';\t----- bird -----\ttoxicology",
    "319": "SELECT COUNT(DISTINCT T1.element) FROM atom AS T1 INNER JOIN connected AS T2 ON T1.atom_id = T2.atom_id WHERE T2.bond_id = 'TR001_3_4';\t----- bird -----\ttoxicology",
    "320": "SELECT T1.bond_type FROM bond AS T1 INNER JOIN connected AS T2 ON T1.bond_id = T2.bond_id WHERE T2.atom_id = 'TR000_1' AND T2.atom_id2 = 'TR000_2';\t----- bird -----\ttoxicology",
    "321": "SELECT DISTINCT T1.label FROM molecule AS T1 JOIN atom AS T2 ON T1.molecule_id = T2.molecule_id WHERE T2.atom_id = 'TR000_2' OR T2.atom_id = 'TR000_4';\t----- bird -----\ttoxicology",
    "322": "SELECT element FROM atom WHERE atom_id = 'TR000_1';\t----- bird -----\ttoxicology",
    "323": "SELECT EXISTS (SELECT 1 FROM molecule WHERE label = 'TR000');\t----- bird -----\ttoxicology",
    "324": "SELECT CAST(SUM(CASE WHEN T1.bond_type = 'single' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(T1.atom_id) FROM connected AS T1 INNER JOIN bond AS T2 ON T1.bond_id = T2.bond_id;\t----- bird -----\ttoxicology",
    "325": "SELECT COUNT(DISTINCT m.molecule_id) FROM molecule m JOIN atom a ON m.molecule_id = a.molecule_id WHERE m.label = 'carcinogenic' AND a.element = 'N';\t----- bird -----\ttoxicology",
    "326": "SELECT DISTINCT m.label FROM molecule AS m JOIN atom AS a ON m.molecule_id = a.molecule_id JOIN bond AS b ON m.molecule_id = b.molecule_id JOIN connected AS c ON b.bond_id = c.bond_id WHERE a.element = 'S' AND b.bond_type = 'double';\t----- bird -----\ttoxicology",
    "327": "SELECT DISTINCT m.label FROM molecule AS m JOIN atom AS a ON m.molecule_id = a.molecule_id WHERE m.label NOT LIKE '%carcinogenic%' GROUP BY m.molecule_id HAVING COUNT(a.atom_id) > 5;\t----- bird -----\ttoxicology",
    "328": "SELECT DISTINCT T1.element FROM atom AS T1 INNER JOIN connected AS T2 ON T1.atom_id = T2.atom_id INNER JOIN bond AS T3 ON T2.bond_id = T3.bond_id INNER JOIN molecule AS T4 ON T3.molecule_id = T4.molecule_id WHERE T3.bond_type = 'double' AND T4.label = 'TR024';\t----- bird -----\ttoxicology",
    "329": "SELECT m.label FROM molecule m JOIN atom a ON m.molecule_id = a.molecule_id WHERE m.label LIKE '%carcinogenic%' GROUP BY m.molecule_id ORDER BY COUNT(a.atom_id) DESC LIMIT 1;\t----- bird -----\ttoxicology",
    "330": "SELECT CAST(SUM(CASE WHEN m.label = 'carcinogenic' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(DISTINCT m.molecule_id) FROM molecule m JOIN atom a ON m.molecule_id = a.molecule_id JOIN connected c ON a.atom_id = c.atom_id JOIN bond b ON c.bond_id = b.bond_id WHERE a.element = 'H' AND b.bond_type = 'triple';\t----- bird -----\ttoxicology",
    "331": "SELECT count(*) FROM molecule WHERE label = 'carcinogenic';\t----- bird -----\ttoxicology",
    "332": "SELECT COUNT(DISTINCT m.molecule_id) FROM molecule m JOIN bond b ON m.molecule_id = b.molecule_id WHERE m.label BETWEEN 'TR004' AND 'TR010' AND b.bond_type = 'single';\t----- bird -----\ttoxicology",
    "333": "SELECT COUNT(a.atom_id) FROM atom a JOIN molecule m ON a.molecule_id = m.molecule_id WHERE m.label = 'TR008' AND a.element = 'C';\t----- bird -----\ttoxicology",
    "334": "SELECT T1.element FROM atom AS T1 JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id WHERE T1.atom_id = 'TR004_7' AND T2.label <> 'carcinogenic';\t----- bird -----\ttoxicology",
    "335": "SELECT count(DISTINCT T1.molecule_id) FROM atom AS T1 INNER JOIN connected AS T2 ON T1.atom_id = T2.atom_id INNER JOIN bond AS T3 ON T2.bond_id = T3.bond_id WHERE T1.element = 'O' AND T3.bond_type = 'double';\t----- bird -----\ttoxicology",
    "336": "SELECT COUNT(DISTINCT m.molecule_id) FROM molecule m JOIN bond b ON m.molecule_id = b.molecule_id WHERE b.bond_type = 'triple' AND m.label NOT LIKE '%carcinogenic%';\t----- bird -----\ttoxicology",
    "337": "SELECT T1.element, T2.bond_type FROM atom AS T1 JOIN connected AS T3 ON T1.atom_id = T3.atom_id JOIN bond AS T2 ON T3.bond_id = T2.bond_id WHERE T1.molecule_id = 'TR002';\t----- bird -----\ttoxicology",
    "338": "SELECT T1.atom_id FROM atom AS T1 JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id JOIN bond AS T3 ON T1.atom_id = T3.atom_id WHERE T2.label = 'TR012' AND T1.element = 'C' AND T3.bond_type = 'double';\t----- bird -----\ttoxicology",
    "339": "SELECT T1.atom_id FROM atom AS T1 INNER JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id WHERE T2.label = 'carcinogenic' AND T1.element = 'O';\t----- bird -----\ttoxicology",
    "340": "SELECT name FROM cards WHERE hasFoil = TRUE AND power IS NOT NULL AND power > 2;\t----- bird -----\tcard_games",
    "341": "SELECT name FROM cards WHERE frameEffects LIKE '%borderless%' AND availability = 'paper' AND hasFoil = 0;\t----- bird -----\tcard_games",
    "342": "SELECT name FROM cards WHERE convertedManaCost > faceConvertedManaCost;\t----- bird -----\tcard_games",
    "343": "SELECT name FROM cards WHERE frameVersion = '2015' AND edhrecRank < 100;\t----- bird -----\tcard_games",
    "344": "SELECT c.name FROM cards AS c JOIN legalities AS l ON c.id = l.uuid WHERE c.rarity = 'Mythic' AND l.format = 'Gladiator' AND l.status = 'Banned';\t----- bird -----\tcard_games",
    "345": "SELECT T1.status FROM legalities AS T1 JOIN cards AS T2 ON T1.uuid = T2.uuid WHERE T2.type LIKE '%Artifact%' AND T2.layout = 'Normal' AND T1.format = 'Vintage';\t----- bird -----\tcard_games",
    "346": "SELECT cards.id, cards.artist FROM cards JOIN legalities ON cards.id = legalities.uuid WHERE cards.power IS NULL AND legalities.format = 'Commander';\t----- bird -----\tcard_games",
    "347": "SELECT T1.text FROM rulings AS T1 JOIN cards AS T2 ON T1.uuid = T2.uuid WHERE T2.scryfallIllustrationId = (SELECT id FROM images WHERE artist = 'Stephen Daniel');\t----- bird -----\tcard_games",
    "348": "SELECT * FROM rulings WHERE uuid IN (SELECT uuid FROM cards WHERE name = 'Sublime Epiphany' AND number = '74s');\t----- bird -----\tcard_games",
    "349": "SELECT c.name, c.artist FROM cards c JOIN rulings r ON c.uuid = r.uuid GROUP BY c.uuid ORDER BY COUNT(r.id) DESC LIMIT 1; SELECT c.name, c.artist FROM cards c WHERE c.uuid = (SELECT uuid FROM cards ORDER BY (SELECT COUNT(*) FROM rulings WHERE rulings.uuid = cards.uuid) DESC LIMIT 1); SELECT c.name, c.artist FROM cards c JOIN rulings r ON c.uuid = r.uuid GROUP BY c.uuid ORDER BY count(r.id) DESC LIMIT 1; SELECT c.name, c.artist FROM cards c JOIN rulings r ON c.uuid = r.uuid GROUP BY c.uuid ORDER BY count(r.id) DESC LIMIT 1; SELECT c.name, c.artist FROM cards c JOIN rulings r ON c.uuid = r.uuid GROUP BY c.uuid ORDER BY COUNT(r.id) DESC LIMIT 1;\t----- bird -----\tcard_games",
    "350": "SELECT T1.translation FROM set_translations AS T1 JOIN cards AS T2 ON T1.setCode = T2.setCode WHERE T2.name = 'Annul' AND T2.number = 29;\t----- bird -----\tcard_games",
    "351": "SELECT name FROM cards WHERE uuid IN (SELECT uuid FROM set_translations WHERE language = 'ja' AND translation IS NOT NULL);\t----- bird -----\tcard_games",
    "352": "SELECT CAST(SUM(CASE WHEN T1.availability = 'Chinese Simplified' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(T1.id) FROM cards AS T1;\t----- bird -----\tcard_games",
    "353": "SELECT s.name, s.totalSetSize FROM sets s JOIN set_translations st ON s.code = st.setCode WHERE st.language = 'it';\t----- bird -----\tcard_games",
    "354": "SELECT COUNT(DISTINCT T1.type) FROM cards AS T1 WHERE T1.artist = 'Aaron Boyd';\t----- bird -----\tcard_games",
    "355": "SELECT keywords FROM cards WHERE name = 'Angel of Mercy';\t----- bird -----\tcard_games",
    "356": "SELECT count(*) FROM cards WHERE power = '\u221e';\t----- bird -----\tcard_games",
    "357": "SELECT T1.promoTypes FROM cards AS T1 WHERE T1.name = 'Duress';\t----- bird -----\tcard_games",
    "358": "SELECT borderColor FROM cards WHERE name = \"Ancestor's Chosen\";\t----- bird -----\tcard_games",
    "359": "SELECT type FROM cards WHERE name = \"Ancestor's Chosen\" AND originalType IS NOT NULL;\t----- bird -----\tcard_games",
    "360": "SELECT DISTINCT T1.language FROM set_translations AS T1 JOIN sets AS T2 ON T1.setCode = T2.code JOIN cards AS T3 ON T2.code = T3.setCode WHERE T3.name = 'Angel of Mercy';\t----- bird -----\tcard_games",
    "361": "SELECT COUNT(c.id) FROM cards c JOIN legalities l ON c.id = l.uuid WHERE l.status = 'Restricted' AND c.text IS NOT NULL;\t----- bird -----\tcard_games",
    "362": "SELECT T1.text FROM rulings AS T1 JOIN cards AS T2 ON T1.uuid = T2.uuid WHERE T2.name = \"Condemn\";\t----- bird -----\tcard_games",
    "363": "SELECT COUNT(c.id) FROM cards c JOIN legalities l ON c.id = l.uuid WHERE l.status = 'Restricted' AND c.isStarter = TRUE;\t----- bird -----\tcard_games",
    "364": "SELECT l.status FROM cards c JOIN legalities l ON c.scryfallId = l.uuid WHERE c.name = \"Cloudchaser Eagle\";\t----- bird -----\tcard_games",
    "365": "SELECT type FROM cards WHERE name = \"Benalish Knight\";\t----- bird -----\tcard_games",
    "366": "SELECT T1.text FROM rulings AS T1 JOIN cards AS T2 ON T1.uuid = T2.uuid WHERE T2.name = \"Benalish Knight\";\t----- bird -----\tcard_games",
    "367": "SELECT DISTINCT artist FROM cards WHERE setCode = 'PRM';\t----- bird -----\tcard_games",
    "368": "SELECT CAST(SUM(CASE WHEN frameEffects LIKE '%borderless%' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(*) FROM cards;\t----- bird -----\tcard_games",
    "369": "SELECT count(*) FROM cards WHERE scryfallId IN (SELECT scryfallId FROM foreign_data WHERE language = 'de') AND isReprint = TRUE;\t----- bird -----\tcard_games",
    "370": "SELECT COUNT(c.id) FROM cards c JOIN foreign_data fd ON c.scryfallId = fd.uuid WHERE c.isFullArt = TRUE AND fd.language = 'ru';\t----- bird -----\tcard_games",
    "371": "SELECT CAST(SUM(CASE WHEN T1.language = 'fr' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(T1.id) FROM foreign_data AS T1 INNER JOIN cards AS T2 ON T1.uuid = T2.uuid WHERE T2.isStorySpotlight = TRUE;\t----- bird -----\tcard_games",
    "372": "SELECT count(*) FROM cards WHERE toughness = '99';\t----- bird -----\tcard_games",
    "373": "SELECT name FROM cards WHERE artist = 'Aaron Boyd';\t----- bird -----\tcard_games",
    "374": "SELECT count(*) FROM cards WHERE borderColor = 'black' AND mtgoId IS NOT NULL AND cardKingdomId IS NULL AND duelDeck IS NULL AND edhrecRank IS NULL AND mcmId IS NULL AND multiverseId IS NULL AND name IS NOT NULL;\t----- bird -----\tcard_games",
    "375": "SELECT id FROM cards WHERE convertedManaCost = 0;\t----- bird -----\tcard_games",
    "376": "SELECT layout FROM cards WHERE keywords LIKE '%flying%';\t----- bird -----\tcard_games",
    "377": "SELECT COUNT(*) FROM cards WHERE originalType = 'Summon - Angel' AND NOT subtypes LIKE '%Angel%';\t----- bird -----\tcard_games",
    "378": "SELECT id FROM cards WHERE hasFoil = TRUE AND power > 5;\t----- bird -----\tcard_games",
    "379": "SELECT id FROM cards WHERE duelDeck = 'a';\t----- bird -----\tcard_games",
    "380": "SELECT edhrecRank FROM cards WHERE frameVersion = '2015';\t----- bird -----\tcard_games",
    "381": "SELECT T1.artist FROM cards AS T1 JOIN set_translations AS T2 ON T1.setCode = T2.setCode WHERE T2.language = 'zh-CN';\t----- bird -----\tcard_games",
    "382": "SELECT T1.name FROM cards AS T1 JOIN foreign_data AS T2 ON T1.id = T2.multiverseid WHERE T1.availability = 'paper' AND T2.language = 'ja';\t----- bird -----\tcard_games",
    "383": "SELECT COUNT(*) FROM cards WHERE borderColor = 'white' AND availability = 'banned';\t----- bird -----\tcard_games",
    "384": "SELECT c.uuid, fd.language FROM cards AS c JOIN foreign_data AS fd ON c.scryfallId = fd.uuid JOIN legalities AS l ON c.uuid = l.uuid WHERE l.format = 'Legacy';\t----- bird -----\tcard_games",
    "385": "SELECT T1.text FROM rulings AS T1 JOIN cards AS T2 ON T1.uuid = T2.uuid WHERE T2.name = 'Beacon of Immortality';\t----- bird -----\tcard_games",
    "386": "SELECT T1.id, T2.status FROM cards AS T1 JOIN legalities AS T2 ON T1.id = T2.uuid WHERE T1.frameVersion = 'future';\t----- bird -----\tcard_games",
    "387": "SELECT T1.name, T1.colorIdentity FROM cards AS T1 JOIN sets AS T2 ON T1.setCode = T2.code WHERE T2.code = 'OGW';\t----- bird -----\tcard_games",
    "388": "SELECT T1.name, T1.convertedManaCost, T3.language FROM cards AS T1 JOIN set_translations AS T2 ON T1.setCode = T2.setCode JOIN foreign_data AS T3 ON T1.name = T3.name WHERE T1.setCode = '10E' AND T1.convertedManaCost = 5;\t----- bird -----\tcard_games",
    "389": "SELECT T1.name, T2.date FROM cards AS T1 JOIN rulings AS T2 ON T1.uuid = T2.uuid WHERE T1.originalType = 'Creature - Elf';\t----- bird -----\tcard_games",
    "390": "SELECT T1.colors, T3.format FROM cards AS T1 JOIN legalities AS T2 ON T1.id = T2.uuid JOIN sets AS T3 ON T1.setCode = T3.code WHERE T1.id BETWEEN 1 AND 20;\t----- bird -----\tcard_games",
    "391": "SELECT T1.name FROM cards AS T1 INNER JOIN foreign_data AS T2 ON T1.id = T2.multiverseid WHERE T1.type LIKE '%Artifact%' AND T1.colors LIKE '%B%' AND T2.language IS NOT NULL;\t----- bird -----\tcard_games",
    "392": "SELECT T1.name FROM cards AS T1 JOIN rulings AS T2 ON T1.id = T2.uuid WHERE T1.rarity = 'uncommon' ORDER BY T2.date ASC LIMIT 3;\t----- bird -----\tcard_games",
    "393": "SELECT count(*) FROM cards WHERE artist = 'John Avon' AND hasNonFoil = FALSE;\t----- bird -----\tcard_games",
    "394": "SELECT count(*) FROM cards WHERE borderColor = 'white' AND power IS NOT NULL;\t----- bird -----\tcard_games",
    "395": "SELECT count(*) FROM cards WHERE artist = 'UDON' AND type = 'mtgo' AND hand = -1;\t----- bird -----\tcard_games",
    "396": "SELECT COUNT(*) FROM cards WHERE frameVersion = '1993' AND availability = 'paper' AND hasContentWarning = TRUE;\t----- bird -----\tcard_games",
    "397": "SELECT manaCost FROM cards WHERE layout = 'normal' AND frameVersion = '2003' AND borderColor = 'black' AND availability LIKE '%paper%' AND availability LIKE '%mtgo%';\t----- bird -----\tcard_games",
    "398": "SELECT SUM(convertedManaCost) FROM cards WHERE artist = \"Rob Alexander\";\t----- bird -----\tcard_games",
    "399": "SELECT DISTINCT types FROM cards WHERE mtgArenaId IS NOT NULL;\t----- bird -----\tcard_games",
    "400": "SELECT DISTINCT T1.setCode FROM cards AS T1 JOIN set_translations AS T2 ON T1.id = T2.id WHERE T2.language = 'es';\t----- bird -----\tcard_games",
    "401": "SELECT CAST(SUM(CASE WHEN T1.frameEffects IS NOT NULL AND T1.variations IS NOT NULL THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(T1.id) FROM cards AS T1 WHERE T1.isLegendary = 1 AND T1.isOnlineOnly = 1;\t----- bird -----\tcard_games",
    "402": "SELECT id FROM cards WHERE isStorySpotlight = TRUE AND text IS NULL ORDER BY id;\t----- bird -----\tcard_games",
    "403": "SELECT name FROM cards WHERE availability LIKE '%Spanish%' ORDER BY name;\t----- bird -----\tcard_games",
    "404": "SELECT T1.language FROM set_translations AS T1 JOIN sets AS T2 ON T1.setCode = T2.code WHERE T2.totalSetSize = 309;\t----- bird -----\tcard_games",
    "405": "SELECT COUNT(T1.id) FROM set_translations AS T1 INNER JOIN sets AS T2 ON T1.setCode = T2.code WHERE T1.language = 'Portuguese (Brazil)' AND T2.block = 'Commander';\t----- bird -----\tcard_games",
    "406": "SELECT c.id FROM cards c JOIN legalities l ON c.id = l.uuid WHERE c.type = 'Creature' AND l.status != 'Illegal';\t----- bird -----\tcard_games",
    "407": "SELECT DISTINCT T1.type FROM cards AS T1 JOIN set_translations AS T2 ON T1.setCode = T2.setCode WHERE T2.language = 'de';\t----- bird -----\tcard_games",
    "408": "SELECT COUNT(*) FROM cards WHERE power IS NULL AND text LIKE '%triggered ability%';\t----- bird -----\tcard_games",
    "409": "SELECT COUNT(C.id) FROM cards AS C JOIN legalities AS L ON C.id = L.uuid WHERE L.format LIKE 'Pre-Modern%' AND C.id IN (SELECT ruling_id FROM rulings WHERE text LIKE '%This is a triggered mana ability.%') AND C.otherFaceIds IS NULL;\t----- bird -----\tcard_games",
    "410": "SELECT id FROM cards WHERE artist = 'Erica Yang' AND availability = 'paper' AND EXISTS (SELECT 1 FROM legalities WHERE legalities.uuid = cards.uuid AND format = 'Pauper');\t----- bird -----\tcard_games",
    "411": "SELECT T1.artist FROM cards AS T1 WHERE T1.text = \"Das perfekte Gegenmittel zu einer dichten Formation\";\t----- bird -----\tcard_games",
    "412": "SELECT f.name FROM cards c JOIN foreign_data f ON c.scryfallId = f.uuid WHERE c.artist = \"Matthew D. Wilson\" AND c.type = \"Creature\" AND c.layout = \"normal\" AND c.borderColor = \"black\" AND f.language = \"fr\";\t----- bird -----\tcard_games",
    "413": "SELECT count(*) FROM cards WHERE rarity = 'R' AND id IN (SELECT card_id FROM rulings WHERE date = '2007-02-01');\t----- bird -----\tcard_games",
    "414": "SELECT T1.translation FROM set_translations AS T1 JOIN sets AS T2 ON T1.setCode = T2.code WHERE T2.totalSetSize = 180 AND T2.block = 'Ravnica';\t----- bird -----\tcard_games",
    "415": "SELECT CAST(SUM(CASE WHEN hasContentWarning = FALSE THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(id) FROM cards JOIN legalities ON cards.id = legalities.uuid WHERE legalities.format = 'Commander' AND legalities.status = 'Legal';\t----- bird -----\tcard_games",
    "416": "SELECT CAST(SUM(CASE WHEN T1.power IS NULL AND T2.language = 'fr' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(T1.id) FROM cards AS T1 INNER JOIN foreign_data AS T2 ON T1.scryfallId = T2.uuid WHERE T2.name IS NOT NULL;\t----- bird -----\tcard_games",
    "417": "SELECT CAST(SUM(CASE WHEN T1.type = 'expansion' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(T1.id) FROM sets AS T1 INNER JOIN set_translations AS T2 ON T1.id = T2.setCode INNER JOIN legalities AS T3 ON T1.id = T3.uuid WHERE T2.language = 'ja';\t----- bird -----\tcard_games",
    "418": "SELECT printings FROM cards WHERE artist = \"Daren Bader\";\t----- bird -----\tcard_games",
    "419": "SELECT count(*) FROM cards WHERE colors IS NOT NULL AND borderColor = 'black' AND edhrecRank > 12000;\t----- bird -----\tcard_games",
    "420": "SELECT count(*) FROM cards WHERE isOversized = TRUE AND isReprint = TRUE AND isPromo = TRUE;\t----- bird -----\tcard_games",
    "421": "SELECT name FROM cards WHERE power IS NULL AND promoTypes LIKE '%arena league%' ORDER BY name ASC LIMIT 3;\t----- bird -----\tcard_games",
    "422": "SELECT T1.language FROM foreign_data AS T1 WHERE T1.multiverseid = 149934;\t----- bird -----\tcard_games",
    "423": "SELECT T1.id FROM cards AS T1 INNER JOIN cards AS T2 ON T1.cardKingdomFoilId = T2.cardKingdomId ORDER BY T1.cardKingdomFoilId ASC LIMIT 2;\t----- bird -----\tcard_games",
    "424": "SELECT CAST(SUM(CASE WHEN layout <> 'normal' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(*) FROM cards;\t----- bird -----\tcard_games",
    "425": "SELECT number FROM cards WHERE otherFaceIds IS NULL AND subtypes LIKE '%Angel%' AND subtypes LIKE '%Wizard%';\t----- bird -----\tcard_games",
    "426": "SELECT name FROM sets WHERE isOnlineOnly = FALSE ORDER BY name LIMIT 3;\t----- bird -----\tcard_games",
    "427": "SELECT DISTINCT T1.language FROM set_translations AS T1 JOIN sets AS T2 ON T1.setCode = T2.code WHERE T2.mcmName = 'Archenemy' AND T2.code = 'ARC';\t----- bird -----\tcard_games",
    "428": "SELECT s.name, st.translation FROM sets s JOIN set_translations st ON s.code = st.setCode WHERE s.number = 5;\t----- bird -----\tcard_games",
    "429": "SELECT T1.language, T1.type FROM set_translations AS T1 INNER JOIN sets AS T2 ON T1.setCode = T2.code WHERE T2.number = 206;\t----- bird -----\tcard_games",
    "430": "SELECT sets.id, sets.name FROM sets JOIN set_translations ON sets.code = set_translations.setCode WHERE set_translations.language = 'it' AND sets.block = 'Shadowmoor' ORDER BY sets.name ASC LIMIT 2;\t----- bird -----\tcard_games",
    "431": "SELECT sets.id FROM sets JOIN set_translations ON sets.code = set_translations.setCode WHERE sets.isForeignOnly = TRUE AND set_translations.language = 'ja';\t----- bird -----\tcard_games",
    "432": "SELECT s.name FROM sets s JOIN set_translations st ON s.code = st.setCode WHERE st.language = 'ru' ORDER BY s.totalSetSize DESC LIMIT 1;\t----- bird -----\tcard_games",
    "433": "SELECT CAST(SUM(CASE WHEN T1.language = 'zh-CN' AND T1.isOnlineOnly = TRUE THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(T1.id) FROM foreign_data AS T1;\t----- bird -----\tcard_games",
    "434": "SELECT count(*) FROM sets WHERE isForeignOnly = TRUE AND isOnlineOnly = FALSE AND EXISTS (SELECT 1 FROM set_translations WHERE set_translations.setCode = sets.code AND set_translations.language = 'ja');\t----- bird -----\tcard_games",
    "435": "SELECT id FROM cards WHERE borderColor = 'black';\t----- bird -----\tcard_games",
    "436": "SELECT id FROM cards WHERE frameEffects = 'extendedart';\t----- bird -----\tcard_games",
    "437": "SELECT name FROM cards WHERE borderColor = 'black' AND isFullArt = TRUE;\t----- bird -----\tcard_games",
    "438": "SELECT T1.language FROM set_translations AS T1 WHERE T1.setCode = '174';\t----- bird -----\tcard_games",
    "439": "SELECT name FROM sets WHERE code = \"ALL\";\t----- bird -----\tcard_games",
    "440": "SELECT language FROM foreign_data WHERE name = \"A Pedra Fellwar\";\t----- bird -----\tcard_games",
    "441": "SELECT code FROM sets WHERE releaseDate = '2007-07-13';\t----- bird -----\tcard_games",
    "442": "SELECT baseSetSize, code FROM sets WHERE block IN ('Masques', 'Mirage');\t----- bird -----\tcard_games",
    "443": "SELECT code FROM sets WHERE type = 'expansion';\t----- bird -----\tcard_games",
    "444": "SELECT T1.name, T1.type FROM cards AS T1 WHERE T1.watermark = 'Boros';\t----- bird -----\tcard_games",
    "445": "SELECT T1.language, T1.flavorText, T1.type FROM foreign_data AS T1 JOIN cards AS T2 ON T1.uuid = T2.uuid WHERE T2.watermark = 'colorpie';\t----- bird -----\tcard_games",
    "446": "SELECT CAST(SUM(CASE WHEN T1.convertedManaCost = 10 THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(T1.id) FROM cards AS T1 JOIN sets AS T2 ON T1.setCode = T2.code WHERE T2.name = 'Abyssal Horror';\t----- bird -----\tcard_games",
    "447": "SELECT code FROM sets WHERE type = 'commander';\t----- bird -----\tcard_games",
    "448": "SELECT T1.name, T1.type FROM cards AS T1 WHERE T1.watermark = 'abzan';\t----- bird -----\tcard_games",
    "449": "SELECT T1.type, T1.language FROM foreign_data AS T1 JOIN cards AS T2 ON T1.uuid = T2.uuid WHERE T2.watermark = 'azorius';\t----- bird -----\tcard_games",
    "450": "SELECT COUNT(*) FROM cards WHERE artist = 'Aaron Miller' AND text LIKE '%incredibly powerful%';\t----- bird -----\tcard_games",
    "451": "SELECT count(*) FROM cards WHERE availability LIKE '%paper%' AND hand > 0;\t----- bird -----\tcard_games",
    "452": "SELECT name FROM cards WHERE text IS NOT NULL AND text != '';\t----- bird -----\tcard_games",
    "453": "SELECT convertedManaCost FROM cards WHERE name = \"Ancestor's Chosen\";\t----- bird -----\tcard_games",
    "454": "SELECT COUNT(id) FROM cards WHERE borderColor = 'white' AND power IS NULL;\t----- bird -----\tcard_games",
    "455": "SELECT name FROM cards WHERE promoTypes LIKE '%promotional painting%' AND variations > 0;\t----- bird -----\tcard_games",
    "456": "SELECT types FROM cards WHERE name = \"Molimo, Maro-Sorcerer\";\t----- bird -----\tcard_games",
    "457": "SELECT T1.purchaseUrls FROM cards AS T1 JOIN sets AS T2 ON T1.setCode = T2.code WHERE T2.promoTypes LIKE '%bundle%';\t----- bird -----\tcard_games",
    "458": "SELECT COUNT(DISTINCT artist) FROM cards WHERE borderColor = 'black' AND availability IN ('arena', 'mtgo');\t----- bird -----\tcard_games",
    "459": "SELECT convertedManaCost FROM cards WHERE name IN ('Serra Angel', 'Shrine Keeper');\t----- bird -----\tcard_games",
    "460": "SELECT T1.artist FROM cards AS T1 JOIN foreign_data AS T2 ON T1.id = T2.multiverseid WHERE T2.name = \"Battra, Dark Destroyer\" AND T2.promoTypes IS NOT NULL;\t----- bird -----\tcard_games",
    "461": "SELECT name FROM cards ORDER BY convertedManaCost DESC LIMIT 3 OFFSET 0 WHERE frameVersion = '2003';\t----- bird -----\tcard_games",
    "462": "SELECT T1.translation FROM set_translations AS T1 JOIN sets AS T2 ON T1.setCode = T2.code WHERE T2.name = (SELECT name FROM cards WHERE name = 'Ancestor\\'s Chosen') AND T1.language = 'it';\t----- bird -----\tcard_games",
    "463": "SELECT COUNT(*) FROM set_translations WHERE set_translations.setCode IN (SELECT code FROM sets WHERE sets.name LIKE '%Angel of Mercy%');\t----- bird -----\tcard_games",
    "464": "SELECT c.name FROM cards c JOIN sets s ON c.setCode = s.code WHERE s.name = \"Hauptset Zehnte Edition\";\t----- bird -----\tcard_games",
    "465": "SELECT T1.id FROM cards AS T1 JOIN sets AS T2 ON T1.setCode = T2.code WHERE T1.name = 'Ancestor\\'s Chosen' AND EXISTS (SELECT 1 FROM set_translations WHERE set_translations.language = 'ko' AND set_translations.setCode = T2.code);\t----- bird -----\tcard_games",
    "466": "SELECT COUNT(*) FROM cards WHERE artist = 'Adam Rex' AND setCode = (SELECT code FROM sets WHERE name = 'Hauptset Zehnte Edition');\t----- bird -----\tcard_games",
    "467": "SELECT COUNT(c.id) FROM cards c JOIN sets s ON c.setCode = s.code WHERE s.name = \"Hauptset Zehnte Edition\" AND s.type = \"base\";\t----- bird -----\tcard_games",
    "468": "SELECT translation FROM set_translations WHERE set_translations.setCode = (SELECT code FROM sets WHERE name = \"Eighth Edition\") AND set_translations.language = \"zh-CN\";\t----- bird -----\tcard_games",
    "469": "SELECT EXISTS (SELECT 1 FROM cards WHERE name = \"Angel of Mercy\" AND isOnlineOnly = TRUE);\t----- bird -----\tcard_games",
    "470": "SELECT T1.releaseDate FROM sets AS T1 JOIN cards AS T2 ON T1.code = T2.setCode WHERE T2.name = \"Ancestor\\'s Chosen\";\t----- bird -----\tcard_games",
    "471": "SELECT type FROM sets WHERE name = \"Hauptset Zehnte Edition\";\t----- bird -----\tcard_games",
    "472": "SELECT COUNT(T1.id) FROM sets AS T1 INNER JOIN set_translations AS T2 ON T1.code = T2.setCode WHERE T1.block = \"Ice Age\" AND T2.language = \"it\";\t----- bird -----\tcard_games",
    "473": "SELECT EXISTS (SELECT 1 FROM cards WHERE name = 'Adarkar Valkyrie' AND availability LIKE '%outside the United States%');\t----- bird -----\tcard_games",
    "474": "SELECT COUNT(DISTINCT s.id) FROM sets s JOIN set_translations st ON s.code = st.setCode WHERE st.language = 'it' AND s.baseSetSize < 100;\t----- bird -----\tcard_games",
    "475": "SELECT count(*) FROM cards WHERE setCode = 'COL' AND borderColor = 'black';\t----- bird -----\tcard_games",
    "476": "SELECT name FROM cards WHERE setCode = 'COL' ORDER BY convertedManaCost DESC LIMIT 1;\t----- bird -----\tcard_games",
    "477": "SELECT DISTINCT artist FROM cards WHERE artist IN ('Jeremy Jarvis', 'Aaron Miller', 'Chippy') AND setCode = 'COL';\t----- bird -----\tcard_games",
    "478": "SELECT * FROM cards WHERE number = 4 AND setCode = 'Coldsnap';\t----- bird -----\tcard_games",
    "479": "SELECT COUNT(*) FROM cards WHERE convertedManaCost > 5 AND setCode = 'COL' AND power IS NULL;\t----- bird -----\tcard_games",
    "480": "SELECT T1.flavorText FROM cards AS T1 JOIN foreign_data AS T2 ON T1.id = T2.multiverseid WHERE T1.name = \"Ancestor's Chosen\" AND T2.language = \"it\";\t----- bird -----\tcard_games",
    "481": "SELECT DISTINCT T1.language FROM foreign_data AS T1 INNER JOIN cards AS T2 ON T1.name = T2.name WHERE T2.name = \"Ancestor\\'s Chosen\";\t----- bird -----\tcard_games",
    "482": "SELECT T1.type FROM cards AS T1 JOIN set_translations AS T2 ON T1.id = T2.id WHERE T1.name = \"Ancestor's Chosen\" AND T2.language = \"de\";\t----- bird -----\tcard_games",
    "483": "SELECT T1.text FROM rulings AS T1 JOIN cards AS T2 ON T1.uuid = T2.uuid JOIN sets AS T3 ON T2.setCode = T3.code WHERE T3.name = 'Coldsnap' AND T1.date IS NOT NULL AND T1.text IS NOT NULL AND T1.language = 'it';\t----- bird -----\tcard_games",
    "484": "SELECT T1.translation FROM set_translations AS T1 JOIN sets AS T2 ON T1.setCode = T2.code WHERE T2.name = 'Coldsnap' AND T1.language = 'it' ORDER BY (SELECT MAX(convertedManaCost) FROM cards) LIMIT 1;\t----- bird -----\tcard_games",
    "485": "SELECT T1.date FROM rulings AS T1 INNER JOIN cards AS T2 ON T1.uuid = T2.uuid WHERE T2.name = 'Reminisce';\t----- bird -----\tcard_games",
    "486": "SELECT CAST(SUM(CASE WHEN T1.convertedManaCost = 7 THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(T1.id) FROM cards AS T1 JOIN sets AS T2 ON T1.setCode = T2.code WHERE T2.name = 'Coldsnap';\t----- bird -----\tcard_games",
    "487": "SELECT CAST(SUM(CASE WHEN T1.edhrecRank <= 10 THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(T1.id) FROM cards AS T1 JOIN sets AS T2 ON T1.setCode = T2.code WHERE T2.name = 'Coldsnap';\t----- bird -----\tcard_games",
    "488": "SELECT code FROM sets WHERE releaseDate = '2017-07-14';\t----- bird -----\tcard_games",
    "489": "SELECT keyruneCode FROM sets WHERE code = 'PKHC';\t----- bird -----\tcard_games",
    "490": "SELECT mcmId FROM sets WHERE code = 'SS2';\t----- bird -----\tcard_games",
    "491": "SELECT mcmName FROM sets WHERE releaseDate = '2017-06-09';\t----- bird -----\tcard_games",
    "492": "SELECT type FROM sets WHERE name = \"From the Vault: Lore\";\t----- bird -----\tcard_games",
    "493": "SELECT parentCode FROM sets WHERE name = \"Commander 2014 Oversized\";\t----- bird -----\tcard_games",
    "494": "SELECT T1.text FROM rulings AS T1 JOIN cards AS T2 ON T1.uuid = T2.uuid WHERE T2.scryfallIllustrationId = 'https://img.scryfall.com/cards/illustrated/jim-pavelec/jim-pavelec.jpg';\t----- bird -----\tcard_games",
    "495": "SELECT T1.releaseDate FROM sets AS T1 INNER JOIN cards AS T2 ON T1.code = T2.setCode WHERE T2.name = 'Evacuation';\t----- bird -----\tcard_games",
    "496": "SELECT COUNT(*) FROM cards WHERE setCode = 'RCA';\t----- bird -----\tcard_games",
    "497": "SELECT type FROM sets WHERE name = \"Huiti\u00e8me \u00e9dition\";\t----- bird -----\tcard_games",
    "498": "SELECT T1.translation FROM set_translations AS T1 JOIN sets AS T2 ON T1.setCode = T2.code WHERE T2.name = (SELECT name FROM cards WHERE name = \"Tendo Ice Bridge\") AND T1.language = \"fr\";\t----- bird -----\tcard_games",
    "499": "SELECT COUNT(*) FROM set_translations WHERE set_translations.setCode = (SELECT code FROM sets WHERE name = \"Tenth Edition\");\t----- bird -----\tcard_games",
    "500": "SELECT T2.translation FROM cards AS T1 JOIN set_translations AS T2 ON T1.setCode = T2.setCode WHERE T1.name = 'Fellwar Stone' AND T2.language = 'ja' LIMIT 1;\t----- bird -----\tcard_games",
    "501": "SELECT name FROM cards WHERE setCode = 'JHN' ORDER BY convertedManaCost DESC LIMIT 1;\t----- bird -----\tcard_games",
    "502": "SELECT releaseDate FROM sets WHERE name = \"Ola de fr\u00edo\";\t----- bird -----\tcard_games",
    "503": "SELECT T1.type FROM sets AS T1 INNER JOIN cards AS T2 ON T1.code = T2.setCode WHERE T2.name = 'Samite Pilgrim';\t----- bird -----\tcard_games",
    "504": "SELECT count(*) FROM cards WHERE setCode = 'WCD' AND convertedManaCost = '3';\t----- bird -----\tcard_games",
    "505": "SELECT T1.translation FROM set_translations AS T1 JOIN sets AS T2 ON T1.setCode = T2.code WHERE T2.name = \"Mirrodin\" AND T1.language = \"zh-CN\";\t----- bird -----\tcard_games",
    "506": "SELECT CAST(SUM(CASE WHEN T1.hasNonFoil = 1 THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(T1.id) FROM cards AS T1 INNER JOIN set_translations AS T2 ON T1.setCode = T2.setCode WHERE T2.language = 'ja-JP';\t----- bird -----\tcard_games",
    "507": "SELECT CAST(SUM(CASE WHEN T1.isOnlineOnly = TRUE THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(T1.id) FROM cards AS T1 JOIN set_translations AS T2 ON T1.setCode = T2.setCode WHERE T2.language = 'Portuguese (Brazil)';\t----- bird -----\tcard_games",
    "508": "SELECT DISTINCT T1.printings FROM cards AS T1 WHERE T1.artist != 'Aleksi Briclot';\t----- bird -----\tcard_games",
    "509": "SELECT id FROM sets ORDER BY baseSetSize DESC LIMIT 1;\t----- bird -----\tcard_games",
    "510": "SELECT T1.artist FROM cards AS T1 WHERE T1.variations IS NULL AND T1.convertedManaCost = (SELECT MAX(convertedManaCost) FROM cards);\t----- bird -----\tcard_games",
    "511": "SELECT frameEffects FROM cards WHERE hasFoil = TRUE ORDER BY frameEffects DESC LIMIT 200 GROUP BY frameEffects ORDER BY COUNT(*) DESC LIMIT 1;\t----- bird -----\tcard_games",
    "512": "SELECT count(*) FROM cards WHERE power IS NULL AND duelDeck = 'A' AND hasFoil = 0;\t----- bird -----\tcard_games",
    "513": "SELECT id FROM sets WHERE type = 'commander' ORDER BY totalSetSize DESC LIMIT 1;\t----- bird -----\tcard_games",
    "514": "SELECT name FROM cards WHERE duelDeck = TRUE ORDER BY convertedManaCost DESC LIMIT 10;\t----- bird -----\tcard_games",
    "515": "SELECT c.originalReleaseDate, l.format FROM cards c JOIN legalities l ON c.scryfallId = l.uuid WHERE c.type = 'Mythic Rare' ORDER BY c.originalReleaseDate LIMIT 1;\t----- bird -----\tcard_games",
    "516": "SELECT COUNT(c.id) FROM cards AS c JOIN foreign_data AS fd ON c.id = fd.multiverseid WHERE c.artist = \"Volkan Balamut\" AND fd.language = \"French\";\t----- bird -----\tcard_games",
    "517": "SELECT count(*) FROM cards WHERE type LIKE '%Enchantment%' AND rarity = 'Rare' AND id IN (SELECT card_id FROM legalities WHERE format IN (SELECT format FROM legalities) AND status = 'Legal');\t----- bird -----\tcard_games",
    "518": "SELECT l.format, c.name FROM legalities l JOIN cards c ON l.uuid = c.uuid WHERE l.status = 'Banned' GROUP BY l.format ORDER BY COUNT(*) DESC LIMIT 1;\t----- bird -----\tcard_games",
    "519": "SELECT translation FROM set_translations WHERE set_translations.setCode = 'BB' LIMIT 1;\t----- bird -----\tcard_games",
    "520": "SELECT T1.artist, T2.format FROM cards AS T1 JOIN legalities AS T2 ON T1.id = T2.uuid GROUP BY T1.artist ORDER BY COUNT(T1.id) ASC LIMIT 1;\t----- bird -----\tcard_games",
    "521": "SELECT T1.status FROM legalities AS T1 JOIN cards AS T2 ON T1.uuid = T2.uuid WHERE T2.frameVersion = '1997' AND T2.scryfallIllustrationId = 'daniele-alexander-gregory' AND T2.hasContentWarning = TRUE OR T2.artist = 'Wizards of the Coast' AND T1.format = 'Legacy';\t----- bird -----\tcard_games",
    "522": "SELECT c.name, l.format FROM cards c JOIN legalities l ON c.id = l.uuid WHERE c.edhrecRank = 1 AND l.status = 'Banned';\t----- bird -----\tcard_games",
    "523": "SELECT CAST(COUNT(DISTINCT sets.id) AS REAL) / CAST(STRFTIME('%Y', '2015-12-31') - STRFTIME('%Y', '2012-01-01') + 1 AS REAL) FROM sets WHERE releaseDate BETWEEN '2012-01-01' AND '2015-12-31';\t----- bird -----\tcard_games",
    "524": "SELECT DISTINCT artist FROM cards WHERE borderColor = 'black' AND isOnlineOnly = TRUE AND mtgArenaId IS NOT NULL;\t----- bird -----\tcard_games",
    "525": "SELECT c.uuid FROM cards c JOIN legalities l ON c.uuid = l.uuid WHERE l.format = 'Old School' AND l.status IN ('Restricted', 'Banned');\t----- bird -----\tcard_games",
    "526": "SELECT COUNT(c.id) FROM cards c WHERE c.artist = 'Matthew D. Wilson' AND c.availability = 'paper';\t----- bird -----\tcard_games",
    "527": "SELECT R.text FROM rulings AS R JOIN cards AS C ON R.uuid = C.uuid WHERE C.artist = 'Kev Walker' ORDER BY R.date DESC;\t----- bird -----\tcard_games",
    "528": "SELECT c.name, l.format FROM cards c JOIN legalities l ON c.id = l.uuid WHERE c.setCode = 'HOU';\t----- bird -----\tcard_games",
    "529": "SELECT DISTINCT T1.name FROM sets AS T1 INNER JOIN set_translations AS T2 ON T1.code = T2.setCode WHERE T2.language = 'ko' AND NOT EXISTS (SELECT 1 FROM set_translations AS T3 WHERE T3.setCode = T1.code AND T3.language = 'ja');\t----- bird -----\tcard_games",
    "530": "SELECT DISTINCT c.frameEffects, c.name FROM cards c JOIN rulings r ON c.id = r.id WHERE c.artist LIKE '%Allen Williams%' AND r.text LIKE '%banned%';\t----- bird -----\tcard_games",
    "531": "SELECT DisplayName FROM users WHERE DisplayName IN ('Harlan', 'Jarrod Dixon') ORDER BY Reputation DESC LIMIT 2;\t----- bird -----\tcodebase_community",
    "532": "SELECT DisplayName FROM users WHERE STRFTIME('%Y', CreationDate) = '2011';\t----- bird -----\tcodebase_community",
    "533": "SELECT count(*) FROM users WHERE LastAccessDate > '2014-09-01';\t----- bird -----\tcodebase_community",
    "534": "SELECT DisplayName FROM users ORDER BY Views DESC LIMIT 1;\t----- bird -----\tcodebase_community",
    "535": "SELECT COUNT(DISTINCT UserId) FROM users WHERE UpVotes > 100 AND DownVotes > 1;\t----- bird -----\tcodebase_community",
    "536": "SELECT COUNT(*) FROM users WHERE Views > 10 AND STRFTIME('%Y', CreationDate) > '2013';\t----- bird -----\tcodebase_community",
    "537": "SELECT COUNT(*) FROM posts WHERE OwnerUserId = (SELECT Id FROM users WHERE DisplayName = 'csgillespie');\t----- bird -----\tcodebase_community",
    "538": "SELECT Title FROM posts WHERE OwnerDisplayName = 'csgillespie';\t----- bird -----\tcodebase_community",
    "539": "SELECT OwnerDisplayName FROM posts WHERE Title = \"Eliciting priors from experts\";\t----- bird -----\tcodebase_community",
    "540": "SELECT Title FROM posts ORDER BY Score DESC LIMIT 1;\t----- bird -----\tcodebase_community",
    "541": "SELECT OwnerDisplayName FROM posts ORDER BY Score DESC LIMIT 1;\t----- bird -----\tcodebase_community",
    "542": "SELECT SUM(c.Score) FROM comments AS c JOIN posts AS p ON c.PostId = p.Id WHERE p.OwnerDisplayName = 'csgillespie';\t----- bird -----\tcodebase_community",
    "543": "SELECT AnswerCount FROM posts WHERE OwnerUserId = (SELECT OwnerUserId FROM users WHERE DisplayName = 'csgillespie') ORDER BY AnswerCount DESC LIMIT 1;\t----- bird -----\tcodebase_community",
    "544": "SELECT LastEditorDisplayName FROM posts WHERE Title = \"Examples for teaching: Correlation does not mean causation\";\t----- bird -----\tcodebase_community",
    "545": "SELECT COUNT(Id) FROM posts WHERE OwnerUserId = (SELECT Id FROM users WHERE DisplayName = 'csgillespie') AND ParentId IS NULL;\t----- bird -----\tcodebase_community",
    "546": "SELECT DISTINCT OwnerDisplayName FROM posts WHERE AcceptedAnswerId IS NOT NULL;\t----- bird -----\tcodebase_community",
    "547": "SELECT COUNT(*) FROM posts WHERE OwnerUserId IN (SELECT Id FROM users WHERE Age > 18) AND Score > 19;\t----- bird -----\tcodebase_community",
    "548": "SELECT U.Location FROM posts P JOIN users U ON P.OwnerUserId = U.Id WHERE P.Title = \"Eliciting priors from experts\";\t----- bird -----\tcodebase_community",
    "549": "SELECT T1.Body FROM posts AS T1 INNER JOIN tags AS T2 ON T1.Id = T2.ExcerptPostId WHERE T2.TagName = \"bayesian\";\t----- bird -----\tcodebase_community",
    "550": "SELECT p.Body FROM posts p JOIN tags t ON p.Tags LIKE '%' + t.TagName + '%' ORDER BY t.Count DESC LIMIT 1;\t----- bird -----\tcodebase_community",
    "551": "SELECT COUNT(*) FROM badges WHERE UserId = (SELECT Id FROM users WHERE DisplayName = 'csgillespie');\t----- bird -----\tcodebase_community",
    "552": "SELECT Name FROM badges WHERE UserId = (SELECT Id FROM users WHERE DisplayName = 'csgillespie');\t----- bird -----\tcodebase_community",
    "553": "SELECT COUNT(*) FROM badges WHERE UserId = (SELECT Id FROM users WHERE DisplayName = 'csgillespie') AND STRFTIME('%Y', Date) = '2011';\t----- bird -----\tcodebase_community",
    "554": "SELECT u.DisplayName FROM users u JOIN badges b ON u.Id = b.UserId GROUP BY u.Id ORDER BY COUNT(b.Id) DESC LIMIT 1;\t----- bird -----\tcodebase_community",
    "555": "SELECT AVG(Score) FROM posts WHERE OwnerUserId = (SELECT Id FROM users WHERE DisplayName = 'csgillespie');\t----- bird -----\tcodebase_community",
    "556": "SELECT AVG(badge_counts.BadgeCount) FROM (SELECT UserId, COUNT(*) AS BadgeCount FROM badges GROUP BY UserId) AS badge_counts JOIN users ON badge_counts.UserId = users.Id WHERE users.Views > 200;\t----- bird -----\tcodebase_community",
    "557": "SELECT CAST(SUM(CASE WHEN U.Age > 0 THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(*) FROM posts P JOIN users U ON P.OwnerUserId = U.Id WHERE P.Score > 5;\t----- bird -----\tcodebase_community",
    "558": "SELECT count(*) FROM votes WHERE UserId = 58 AND CreationDate = '2010-07-19';\t----- bird -----\tcodebase_community",
    "559": "SELECT CreationDate FROM votes ORDER BY Id DESC LIMIT 1;\t----- bird -----\tcodebase_community",
    "560": "SELECT count(*) FROM badges WHERE Name = 'Revival';\t----- bird -----\tcodebase_community",
    "561": "SELECT T1.Title FROM posts AS T1 INNER JOIN comments AS T2 ON T1.Id = T2.PostId ORDER BY T2.Score DESC LIMIT 1;\t----- bird -----\tcodebase_community",
    "562": "SELECT CommentCount FROM posts WHERE ViewCount = 1910;\t----- bird -----\tcodebase_community",
    "563": "SELECT p.FavoriteCount FROM posts AS p JOIN comments AS c ON p.Id = c.PostId WHERE c.UserId = 3025 AND c.CreationDate = '2014-04-23T20:29:39';\t----- bird -----\tcodebase_community",
    "564": "SELECT Text FROM comments WHERE PostId = (SELECT Id FROM posts WHERE ParentId = 107829) LIMIT 1;\t----- bird -----\tcodebase_community",
    "565": "SELECT T1.Score FROM posts AS T1 JOIN comments AS T2 ON T1.Id = T2.PostId WHERE T2.UserId = 23853 AND STRFTIME('%H:%M:%S', T2.CreationDate) = '09:08:18' AND STRFTIME('%Y-%m-%d', T2.CreationDate) = '2013-07-12';\t----- bird -----\tcodebase_community",
    "566": "SELECT u.Reputation FROM users u JOIN posts p ON u.Id = p.OwnerUserId WHERE p.Id = 65041;\t----- bird -----\tcodebase_community",
    "567": "SELECT COUNT(*) FROM posts WHERE OwnerDisplayName = \"Tiago Pasqualini\";\t----- bird -----\tcodebase_community",
    "568": "SELECT U.DisplayName FROM votes V JOIN users U ON V.UserId = U.Id WHERE V.Id = 6347;\t----- bird -----\tcodebase_community",
    "569": "SELECT COUNT(*) FROM votes WHERE PostId IN (SELECT Id FROM posts WHERE Tags LIKE '%data visualization%');\t----- bird -----\tcodebase_community",
    "570": "SELECT b.Name FROM badges b JOIN users u ON b.UserId = u.Id WHERE u.DisplayName = \"DatEpicCoderGuyWhoPrograms\";\t----- bird -----\tcodebase_community",
    "571": "SELECT CAST(COUNT(posts.Id) AS REAL) / SUM(votes.BountyAmount) FROM posts JOIN users ON posts.OwnerUserId = users.Id WHERE users.Id = 24 JOIN votes ON posts.Id = votes.PostId;\t----- bird -----\tcodebase_community",
    "572": "SELECT ViewCount FROM posts WHERE Title = 'Integration of Weka and/or RapidMiner into Informatica PowerCenter/Developer';\t----- bird -----\tcodebase_community",
    "573": "SELECT Text FROM comments WHERE Score = 17;\t----- bird -----\tcodebase_community",
    "574": "SELECT DisplayName FROM users WHERE WebsiteUrl = 'http://stackoverflow.com';\t----- bird -----\tcodebase_community",
    "575": "SELECT Name FROM badges WHERE UserId = (SELECT Id FROM users WHERE DisplayName = 'SilentGhost');\t----- bird -----\tcodebase_community",
    "576": "SELECT UserDisplayName FROM comments WHERE Text = 'thank you user93!';\t----- bird -----\tcodebase_community",
    "577": "SELECT * FROM comments WHERE UserDisplayName = 'A Lion';\t----- bird -----\tcodebase_community",
    "578": "SELECT U.DisplayName, U.Reputation FROM users U JOIN posts P ON U.Id = P.OwnerUserId WHERE P.Title = 'Understanding what Dassault iSight is doing?';\t----- bird -----\tcodebase_community",
    "579": "SELECT c.Id, c.PostId, c.Score, c.Text, c.CreationDate, c.UserId, c.UserDisplayName FROM comments AS c JOIN posts AS p ON c.PostId = p.Id WHERE p.Title = 'How does gentle boosting differ from AdaBoost?';\t----- bird -----\tcodebase_community",
    "580": "SELECT U.DisplayName FROM users AS U JOIN badges AS B ON U.Id = B.UserId WHERE B.Name = 'Necromancer' LIMIT 10;\t----- bird -----\tcodebase_community",
    "581": "SELECT T1.UserDisplayName FROM posts AS T1 INNER JOIN postHistory AS T2 ON T1.Id = T2.PostId WHERE T1.Title = 'Open source tools for visualizing multi-dimensional data' AND T2.PostHistoryTypeId = 2 LIMIT 1;\t----- bird -----\tcodebase_community",
    "582": "SELECT p.Title FROM posts AS p JOIN postHistory AS ph ON p.Id = ph.PostId WHERE ph.UserDisplayName = \"Vebjorn Ljosa\";\t----- bird -----\tcodebase_community",
    "583": "SELECT SUM(p.Score), u.WebsiteUrl FROM posts p JOIN postHistory ph ON p.Id = ph.PostId JOIN users u ON ph.UserId = u.Id WHERE ph.UserDisplayName = \"Yevgeny\" GROUP BY u.WebsiteUrl;\t----- bird -----\tcodebase_community",
    "584": "SELECT c.Id, c.PostId, c.Score, c.Text, c.CreationDate, c.UserId, c.UserDisplayName FROM comments AS c JOIN postHistory AS ph ON c.UserId = ph.UserId WHERE ph.PostId IN (SELECT Id FROM posts WHERE Title = 'Why square the difference instead of taking the absolute value in standard deviation?');\t----- bird -----\tcodebase_community",
    "585": "SELECT SUM(BountyAmount) FROM votes WHERE PostId IN (SELECT Id FROM posts WHERE Title LIKE '%data%');\t----- bird -----\tcodebase_community",
    "586": "SELECT U.DisplayName FROM users AS U JOIN votes AS V ON U.Id = V.UserId WHERE V.BountyAmount = 50 AND EXISTS (SELECT 1 FROM posts AS P WHERE P.Id = V.PostId AND P.Title LIKE '%variance%');\t----- bird -----\tcodebase_community",
    "587": "SELECT p.Title, c.Text FROM posts AS p JOIN tags AS t ON p.Id = t.ExcerptPostId JOIN comments AS c ON p.Id = c.PostId WHERE t.TagName = 'humor' GROUP BY p.Id;\t----- bird -----\tcodebase_community",
    "588": "SELECT count(*) FROM comments WHERE UserId = 13;\t----- bird -----\tcodebase_community",
    "589": "SELECT Id FROM users ORDER BY Reputation DESC LIMIT 1;\t----- bird -----\tcodebase_community",
    "590": "SELECT Id FROM users ORDER BY Views LIMIT 1;\t----- bird -----\tcodebase_community",
    "591": "SELECT count(DISTINCT UserId) FROM badges WHERE Name = 'supporter' AND strftime('%Y', Date) = '2011';\t----- bird -----\tcodebase_community",
    "592": "SELECT COUNT(DISTINCT UserId) FROM badges WHERE Id IN (SELECT Id FROM badges);\t----- bird -----\tcodebase_community",
    "593": "SELECT COUNT(DISTINCT U.Id) FROM users AS U JOIN badges AS B ON U.Id = B.UserId WHERE U.Location = 'New York' AND B.Name = 'teacher and supporter';\t----- bird -----\tcodebase_community",
    "594": "SELECT U.DisplayName, U.Reputation FROM users AS U JOIN posts AS P ON U.Id = P.OwnerUserId WHERE P.Id = 1;\t----- bird -----\tcodebase_community",
    "595": "SELECT DISTINCT T1.UserId FROM postHistory AS T1 INNER JOIN posts AS T2 ON T1.PostId = T2.Id WHERE T2.ViewCount >= 1000 AND (SELECT COUNT(*) FROM postHistory AS PH WHERE PH.PostId = T1.PostId) = 1;\t----- bird -----\tcodebase_community",
    "596": "SELECT U.DisplayName, B.Name FROM users AS U JOIN comments AS C ON U.Id = C.UserId GROUP BY U.Id ORDER BY COUNT(C.Id) DESC LIMIT 100;\t----- bird -----\tcodebase_community",
    "597": "SELECT COUNT(DISTINCT U.Id) FROM users AS U JOIN badges AS B ON U.Id = B.UserId JOIN tags AS T ON U.Location = 'India' WHERE B.Name = 'teacher';\t----- bird -----\tcodebase_community",
    "598": "SELECT CAST(SUM(CASE WHEN strftime('%Y', `Date`) = '2010' THEN 1 ELSE 0 END) AS REAL) * 100 / SUM(CASE WHEN strftime('%Y', `Date`) = '2011' THEN 1 ELSE 0 END) - 100 FROM badges WHERE Name = 'student';\t----- bird -----\tcodebase_community",
    "599": "SELECT ph.PostHistoryTypeId, COUNT(DISTINCT c.UserId) FROM postHistory ph JOIN comments c ON ph.PostId = c.PostId WHERE ph.PostId = 3720 GROUP BY ph.PostHistoryTypeId;\t----- bird -----\tcodebase_community",
    "600": "SELECT T1.PostId, T1.RelatedPostId, (T2.ViewCount + T2.Score + T2.FavoriteCount) AS Popularity FROM postLinks AS T1 INNER JOIN posts AS T2 ON T1.RelatedPostId = T2.Id WHERE T1.PostId = 61217;\t----- bird -----\tcodebase_community",
    "601": "SELECT Score, LinkTypeId FROM postLinks WHERE PostId = 395;\t----- bird -----\tcodebase_community",
    "602": "SELECT P.Id, P.OwnerUserId FROM posts AS P WHERE P.Score > 60;\t----- bird -----\tcodebase_community",
    "603": "SELECT SUM(p.FavoriteCount) FROM posts AS p JOIN users AS u ON p.OwnerUserId = u.Id WHERE u.Id = 686 AND STRFTIME('%Y', p.CreaionDate) = '2011';\t----- bird -----\tcodebase_community",
    "604": "SELECT AVG(u.UpVotes), AVG(u.Age) FROM users u JOIN posts p ON u.Id = p.OwnerUserId GROUP BY u.Id HAVING COUNT(p.Id) > 10;\t----- bird -----\tcodebase_community",
    "605": "SELECT COUNT(DISTINCT UserId) FROM badges WHERE Name = 'Announcer';\t----- bird -----\tcodebase_community",
    "606": "SELECT Name FROM badges WHERE Date = '2010-07-19 19:39:08';\t----- bird -----\tcodebase_community",
    "607": "SELECT COUNT(*) FROM comments WHERE Score > 0;\t----- bird -----\tcodebase_community",
    "608": "SELECT Text FROM comments WHERE CreationDate = '2010-07-19T19:25:47';\t----- bird -----\tcodebase_community",
    "609": "SELECT count(*) FROM posts WHERE Score = 10;\t----- bird -----\tcodebase_community",
    "610": "SELECT B.Name FROM badges AS B JOIN users AS U ON B.UserId = U.Id ORDER BY U.Reputation DESC LIMIT 1;\t----- bird -----\tcodebase_community",
    "611": "SELECT U.Reputation FROM users AS U JOIN badges AS B ON U.Id = B.UserId WHERE B.Date = '2010-07-19T19:39:08';\t----- bird -----\tcodebase_community",
    "612": "SELECT Name FROM badges WHERE UserId IN (SELECT Id FROM users WHERE DisplayName = \"Pierre\");\t----- bird -----\tcodebase_community",
    "613": "SELECT DISTINCT b.Date FROM badges AS b JOIN users AS u ON b.UserId = u.Id WHERE u.Location = 'Rochester, NY';\t----- bird -----\tcodebase_community",
    "614": "SELECT CAST(SUM(CASE WHEN EXISTS(SELECT 1 FROM badges WHERE UserId = u.Id AND Name = 'Teacher') THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(u.Id) FROM users AS u;\t----- bird -----\tcodebase_community",
    "615": "SELECT CAST(SUM(CASE WHEN U.Age BETWEEN 13 AND 19 THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(U.Id) FROM badges B JOIN users U ON B.UserId = U.Id WHERE B.Name = 'Organizer';\t----- bird -----\tcodebase_community",
    "616": "SELECT c.Score FROM comments AS c JOIN posts AS p ON c.PostId = p.Id WHERE p.CreaionDate = '2010-07-19T19:19:56';\t----- bird -----\tcodebase_community",
    "617": "SELECT Text FROM comments WHERE CreationDate = '2010-07-19 19:37:33';\t----- bird -----\tcodebase_community",
    "618": "SELECT U.Age FROM users AS U JOIN badges AS B ON U.Id = B.UserId WHERE U.Location = 'Vienna, Austria';\t----- bird -----\tcodebase_community",
    "619": "SELECT COUNT(DISTINCT U.Id) FROM users AS U JOIN badges AS B ON U.Id = B.UserId WHERE B.Name = 'Supporter' AND U.Age >= 18;\t----- bird -----\tcodebase_community",
    "620": "SELECT SUM(p.ViewCount) FROM posts p JOIN badges b ON p.OwnerUserId = b.UserId WHERE b.Date = '2010-07-19T19:39:08';\t----- bird -----\tcodebase_community",
    "621": "SELECT B.Name FROM badges AS B JOIN users AS U ON B.UserId = U.Id WHERE U.Reputation = (SELECT MIN(Reputation) FROM users);\t----- bird -----\tcodebase_community",
    "622": "SELECT B.Name FROM badges AS B JOIN users AS U ON B.UserId = U.Id WHERE U.DisplayName = \"Sharpie\";\t----- bird -----\tcodebase_community",
    "623": "SELECT COUNT(DISTINCT U.Id) FROM users AS U JOIN badges AS B ON U.Id = B.UserId WHERE B.Name = 'Supporter' AND U.Age >= 65;\t----- bird -----\tcodebase_community",
    "624": "SELECT DisplayName FROM users WHERE Id = 30;\t----- bird -----\tcodebase_community",
    "625": "SELECT count(*) FROM users WHERE Location = 'New York';\t----- bird -----\tcodebase_community",
    "626": "SELECT COUNT(*) FROM votes WHERE strftime('%Y', CreationDate) = '2010';\t----- bird -----\tcodebase_community",
    "627": "SELECT COUNT(*) FROM users WHERE Age > 18;\t----- bird -----\tcodebase_community",
    "628": "SELECT DisplayName FROM users ORDER BY Views DESC LIMIT 1;\t----- bird -----\tcodebase_community",
    "629": "SELECT SUM(CASE WHEN strftime('%Y', CreationDate) = '2010' THEN 1 ELSE 0 END) * 1.0 / SUM(CASE WHEN strftime('%Y', CreationDate) = '2011' THEN 1 ELSE 0 END) FROM votes;\t----- bird -----\tcodebase_community",
    "630": "SELECT T1.TagName FROM tags AS T1 JOIN posts AS T2 ON T2.Tags LIKE '%' + T1.TagName + '%' JOIN users AS T3 ON T3.Id = T2.OwnerUserId WHERE T3.DisplayName = 'John Salvatier';\t----- bird -----\tcodebase_community",
    "631": "SELECT count(*) FROM posts WHERE OwnerDisplayName = 'Daniel Vassallo';\t----- bird -----\tcodebase_community",
    "632": "SELECT COUNT(*) FROM votes WHERE UserId = (SELECT Id FROM users WHERE DisplayName = 'Harlan');\t----- bird -----\tcodebase_community",
    "633": "SELECT posts.Id FROM posts WHERE OwnerDisplayName = 'slashnick' ORDER BY AnswerCount DESC LIMIT 1;\t----- bird -----\tcodebase_community",
    "634": "SELECT p1.Id, p1.Score - p2.Score AS ScoreDifference FROM posts p1 JOIN posts p2 ON p1.PostTypeId = 1 AND p2.PostTypeId = 1 WHERE p1.OwnerUserId IN (SELECT Id FROM users WHERE DisplayName = 'Harvey Motulsky') AND p2.OwnerUserId IN (SELECT Id FROM users WHERE DisplayName = 'Noah Snyder') ORDER BY ScoreDifference DESC LIMIT 1;\t----- bird -----\tcodebase_community",
    "635": "SELECT COUNT(p.Id) FROM posts AS p JOIN votes AS v ON p.Id = v.PostId WHERE p.OwnerUserId = (SELECT Id FROM users WHERE DisplayName = 'Matt Parker') AND v.VoteTypeId = 1 AND v.VoteTypeId != -1 GROUP BY p.Id HAVING COUNT(v.Id) > 4;\t----- bird -----\tcodebase_community",
    "636": "SELECT COUNT(*) FROM comments WHERE UserId = (SELECT Id FROM users WHERE DisplayName = 'Neil McGuigan') AND Score < 0;\t----- bird -----\tcodebase_community",
    "637": "SELECT DISTINCT T1.TagName FROM tags AS T1 JOIN posts AS T2 ON T1.Id = T2.Tags JOIN users AS U ON T2.OwnerUserId = U.Id WHERE U.DisplayName = 'Mark Meckes' AND T2.CommentCount = 0;\t----- bird -----\tcodebase_community",
    "638": "SELECT DISTINCT UserId FROM badges WHERE Name = 'Organizer';\t----- bird -----\tcodebase_community",
    "639": "SELECT CAST(SUM(CASE WHEN T.TagName = 'R' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(P.Id) FROM posts AS P JOIN tags AS T ON P.Id = T.ExcerptPostId JOIN users AS U ON P.OwnerUserId = U.Id WHERE U.DisplayName = 'Community';\t----- bird -----\tcodebase_community",
    "640": "SELECT (SELECT SUM(ViewCount) FROM posts WHERE OwnerDisplayName = 'Mornington') - (SELECT SUM(ViewCount) FROM posts WHERE OwnerDisplayName = 'Amos');\t----- bird -----\tcodebase_community",
    "641": "SELECT COUNT(DISTINCT UserId) FROM badges WHERE Name = 'commentator' AND strftime('%Y', Date) = '2014';\t----- bird -----\tcodebase_community",
    "642": "SELECT count(*) FROM posts WHERE strftime('%d', CreationDate) = '21' AND strftime('%m', CreationDate) = '07' AND strftime('%Y', CreationDate) = '2010';\t----- bird -----\tcodebase_community",
    "643": "SELECT DisplayName, Age FROM users ORDER BY Views DESC LIMIT 1;\t----- bird -----\tcodebase_community",
    "644": "SELECT LastEditDate, LastEditorUserId FROM posts WHERE Title = \"Detecting a given face in a database of facial images\";\t----- bird -----\tcodebase_community",
    "645": "SELECT count(*) FROM comments WHERE UserId = 13 AND Score < 0;\t----- bird -----\tcodebase_community",
    "646": "SELECT T1.Title, T2.UserDisplayName FROM posts AS T1 JOIN comments AS T2 ON T1.Id = T2.PostId WHERE T2.Score > 0;\t----- bird -----\tcodebase_community",
    "647": "SELECT b.Name FROM badges AS b JOIN users AS u ON b.UserId = u.Id WHERE u.Location = 'North Pole' AND strftime('%Y', b.Date) = '2011';\t----- bird -----\tcodebase_community",
    "648": "SELECT OwnerDisplayName, WebsiteUrl FROM posts WHERE FavoriteCount > 150;\t----- bird -----\tcodebase_community",
    "649": "SELECT COUNT(*) AS PostHistoryCount, LastEditDate FROM postHistory JOIN posts ON postHistory.PostId = posts.Id WHERE posts.Title = \"What is the best introductory Bayesian statistics textbook?\";\t----- bird -----\tcodebase_community",
    "650": "SELECT U.LastAccessDate, U.Location FROM users AS U JOIN badges AS B ON U.Id = B.UserId WHERE B.Name = 'outliers';\t----- bird -----\tcodebase_community",
    "651": "SELECT T1.Title FROM posts AS T1 INNER JOIN postLinks AS T2 ON T1.Id = T2.RelatedPostId WHERE T2.PostId = (SELECT Id FROM posts WHERE Title = 'How to tell if something happened in a data set which monitors a value over time');\t----- bird -----\tcodebase_community",
    "652": "SELECT T1.PostId, T2.Name FROM postHistory AS T1 JOIN badges AS T2 ON T1.UserId = T2.UserId WHERE T1.UserDisplayName = 'Samuel' AND STRFTIME('%Y', T1.CreationDate) = '2013';\t----- bird -----\tcodebase_community",
    "653": "SELECT OwnerDisplayName FROM posts ORDER BY Score DESC LIMIT 1;\t----- bird -----\tcodebase_community",
    "654": "SELECT U.DisplayName, U.Location FROM users AS U JOIN tags AS T ON U.Id = T.ExcerptPostId WHERE T.TagName = 'hypothesis-testing';\t----- bird -----\tcodebase_community",
    "655": "SELECT T1.Title, T2.LinkTypeId FROM posts AS T1 JOIN postLinks AS T2 ON T1.Id = T2.PostId WHERE T1.Title = \"What are principal component scores?\";\t----- bird -----\tcodebase_community",
    "656": "SELECT p.OwnerDisplayName FROM posts AS p ORDER BY p.Score DESC LIMIT 1;\t----- bird -----\tcodebase_community",
    "657": "SELECT U.DisplayName, U.WebsiteUrl FROM users AS U JOIN votes AS V ON U.Id = V.UserId WHERE V.VoteTypeId = 1 ORDER BY V.BountyAmount DESC LIMIT 1;\t----- bird -----\tcodebase_community",
    "658": "SELECT Title FROM posts ORDER BY Score DESC LIMIT 5;\t----- bird -----\tcodebase_community",
    "659": "SELECT COUNT(*) FROM tags WHERE Count BETWEEN 5000 AND 7000;\t----- bird -----\tcodebase_community",
    "660": "SELECT OwnerUserId FROM posts ORDER BY Score DESC LIMIT 1;\t----- bird -----\tcodebase_community",
    "661": "SELECT Age FROM users ORDER BY Reputation DESC LIMIT 1;\t----- bird -----\tcodebase_community",
    "662": "SELECT count(*) FROM votes WHERE PostId IN (SELECT Id FROM posts WHERE strftime('%Y', CreaionDate) = '2011') AND BountyAmount = 50;\t----- bird -----\tcodebase_community",
    "663": "SELECT Id FROM users ORDER BY CreationDate DESC LIMIT 1;\t----- bird -----\tcodebase_community",
    "664": "SELECT SUM(Score) FROM posts WHERE CreaionDate = '2010-07-19';\t----- bird -----\tcodebase_community",
    "665": "SELECT AVG(monthly_links) FROM (SELECT COUNT(*) AS monthly_links FROM postLinks WHERE strftime('%Y', CreationDate) = '2010' AND PostId IN (SELECT Id FROM posts WHERE AnswerCount <= 2) GROUP BY strftime('%m', CreationDate));\t----- bird -----\tcodebase_community",
    "666": "SELECT PostId FROM votes WHERE UserId = 1465 ORDER BY VoteTypeId DESC LIMIT 1;\t----- bird -----\tcodebase_community",
    "667": "SELECT p.Title FROM posts AS p JOIN postLinks AS pl ON p.Id = pl.PostId ORDER BY pl.CreationDate ASC LIMIT 1;\t----- bird -----\tcodebase_community",
    "668": "SELECT T1.DisplayName FROM users AS T1 JOIN badges AS T2 ON T1.Id = T2.UserId GROUP BY T1.Id ORDER BY COUNT(T2.Id) DESC LIMIT 1;\t----- bird -----\tcodebase_community",
    "669": "SELECT MIN(CreationDate) FROM votes WHERE UserId = (SELECT Id FROM users WHERE DisplayName = 'chl');\t----- bird -----\tcodebase_community",
    "670": "SELECT MIN(CreationDate) FROM posts WHERE OwnerUserId IN (SELECT Id FROM users ORDER BY Age ASC LIMIT 1);\t----- bird -----\tcodebase_community",
    "671": "SELECT U.DisplayName FROM users AS U JOIN badges AS B ON U.Id = B.UserId WHERE B.Name = 'Autobiographer' ORDER BY B.Date ASC LIMIT 1;\t----- bird -----\tcodebase_community",
    "672": "SELECT COUNT(DISTINCT u.Id) FROM users u JOIN posts p ON u.Id = p.OwnerUserId WHERE u.Location = 'United Kingdom' AND EXISTS (SELECT 1 FROM votes v WHERE v.PostId = p.Id AND v.VoteTypeId = 2) AND (SELECT COUNT(*) FROM votes WHERE PostId = p.Id AND VoteTypeId = 2) >= 4;\t----- bird -----\tcodebase_community",
    "673": "SELECT AVG(post_votes.PostId) FROM votes AS post_votes JOIN users ON post_votes.UserId = users.Id ORDER BY users.Age DESC LIMIT 1;\t----- bird -----\tcodebase_community",
    "674": "SELECT DisplayName FROM users ORDER BY Reputation DESC LIMIT 1;\t----- bird -----\tcodebase_community",
    "675": "SELECT COUNT(*) FROM users WHERE Reputation > 2000 AND Views > 1000;\t----- bird -----\tcodebase_community",
    "676": "SELECT DisplayName FROM users WHERE Age >= 18;\t----- bird -----\tcodebase_community",
    "677": "SELECT count(*) FROM posts WHERE OwnerDisplayName = 'Jay Stevens' AND STRFTIME('%Y', CreaionDate) = '2010';\t----- bird -----\tcodebase_community",
    "678": "SELECT p.Id, p.Title FROM posts p JOIN users u ON p.OwnerUserId = u.Id WHERE u.DisplayName = 'Harvey Motulsky' ORDER BY p.ViewCount DESC LIMIT 1;\t----- bird -----\tcodebase_community",
    "679": "SELECT posts.Id, posts.Title FROM posts ORDER BY posts.Score DESC LIMIT 1;\t----- bird -----\tcodebase_community",
    "680": "SELECT AVG(p.Score) FROM posts p JOIN users u ON p.OwnerUserId = u.Id WHERE u.DisplayName = 'Stephen Turner';\t----- bird -----\tcodebase_community",
    "681": "SELECT DISTINCT OwnerDisplayName FROM posts WHERE CreationDate BETWEEN '2011-01-01' AND '2011-12-31' AND ViewCount > 20000;\t----- bird -----\tcodebase_community",
    "682": "SELECT P.Id, P.OwnerDisplayName FROM posts AS P WHERE STRFTIME('%Y', P.CreaionDate) = '2010' ORDER BY P.Score DESC LIMIT 1;\t----- bird -----\tcodebase_community",
    "683": "SELECT CAST(SUM(CASE WHEN u.Reputation > 1000 AND strftime('%Y', u.CreationDate) = '2011' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(DISTINCT p.Id) AS Percentage FROM posts p JOIN users u ON p.OwnerUserId = u.Id;\t----- bird -----\tcodebase_community",
    "684": "SELECT CAST(SUM(CASE WHEN Age BETWEEN 13 AND 19 THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(*) FROM users;\t----- bird -----\tcodebase_community",
    "685": "SELECT p.ViewCount, p.OwnerDisplayName FROM posts AS p WHERE p.Title = 'Computer Game Datasets' ORDER BY p.LastEditDate DESC LIMIT 1;\t----- bird -----\tcodebase_community",
    "686": "SELECT COUNT(*) FROM posts WHERE ViewCount > (SELECT AVG(ViewCount) FROM posts);\t----- bird -----\tcodebase_community",
    "687": "SELECT COUNT(*) FROM comments WHERE PostId = (SELECT Id FROM posts ORDER BY Score DESC LIMIT 1);\t----- bird -----\tcodebase_community",
    "688": "SELECT COUNT(*) FROM posts WHERE ViewCount > 35000 AND CommentCount = 0;\t----- bird -----\tcodebase_community",
    "689": "SELECT U.DisplayName, U.Location FROM users AS U JOIN posts AS P ON U.Id = P.LastEditorUserId WHERE P.Id = 183;\t----- bird -----\tcodebase_community",
    "690": "SELECT Id, UserId, Name, Date FROM badges WHERE UserId IN (SELECT Id FROM users WHERE DisplayName = 'Emmett') ORDER BY Date DESC LIMIT 1;\t----- bird -----\tcodebase_community",
    "691": "SELECT COUNT(*) FROM users WHERE Age >= 18 AND UpVotes > 5000;\t----- bird -----\tcodebase_community",
    "692": "SELECT CAST(DATEDIFF(day, c.CreationDate, b.Date) AS INT) FROM users AS c JOIN badges AS b ON c.Id = b.UserId WHERE c.DisplayName = 'Zolomon';\t----- bird -----\tcodebase_community",
    "693": "SELECT COUNT(p.Id) AS PostCount, COUNT(c.Id) AS CommentCount FROM posts AS p JOIN users AS u ON p.OwnerUserId = u.Id JOIN comments AS c ON p.Id = c.PostId WHERE u.Id = (SELECT Id FROM users ORDER BY CreationDate DESC LIMIT 1);\t----- bird -----\tcodebase_community",
    "694": "SELECT c.Text, c.UserDisplayName FROM comments AS c JOIN posts AS p ON c.PostId = p.Id WHERE p.Title = 'Analysing wind data with R' ORDER BY c.CreationDate DESC LIMIT 10;\t----- bird -----\tcodebase_community",
    "695": "SELECT count(DISTINCT UserId) FROM badges WHERE Name = 'Citizen Patrol';\t----- bird -----\tcodebase_community",
    "696": "SELECT COUNT(p.Id) FROM posts p JOIN tags t ON p.Tags LIKE '%' || t.TagName || '%' WHERE t.TagName = 'careers';\t----- bird -----\tcodebase_community",
    "697": "SELECT u.Reputation, u.Views FROM users AS u WHERE u.DisplayName = 'Jarrod Dixon';\t----- bird -----\tcodebase_community",
    "698": "SELECT COUNT(c.Id) + COUNT(p.Id) FROM comments c JOIN posts p ON c.PostId = p.Id WHERE p.Title = 'Clustering 1D data';\t----- bird -----\tcodebase_community",
    "699": "SELECT CreationDate FROM users WHERE DisplayName = 'IrishStat';\t----- bird -----\tcodebase_community",
    "700": "SELECT count(Id) FROM votes WHERE BountyAmount > 30;\t----- bird -----\tcodebase_community",
    "701": "SELECT CAST(SUM(CASE WHEN p.Score > 50 THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(p.Id) FROM posts AS p JOIN users AS u ON p.OwnerUserId = u.Id WHERE u.Reputation = (SELECT MAX(Reputation) FROM users);\t----- bird -----\tcodebase_community",
    "702": "SELECT COUNT(*) FROM posts WHERE Score < 20;\t----- bird -----\tcodebase_community",
    "703": "SELECT COUNT(*) FROM tags WHERE Id < 15 AND Count <= 20;\t----- bird -----\tcodebase_community",
    "704": "SELECT ExcerptPostId, WikiPostId FROM tags WHERE TagName = 'sample';\t----- bird -----\tcodebase_community",
    "705": "SELECT u.Reputation, u.UpVotes FROM users u JOIN comments c ON u.Id = c.UserId WHERE c.Text = 'fine, you win :)';\t----- bird -----\tcodebase_community",
    "706": "SELECT T1.Text FROM comments AS T1 JOIN posts AS T2 ON T1.PostId = T2.Id WHERE T2.Title LIKE '%linear regression%';\t----- bird -----\tcodebase_community",
    "707": "SELECT T1.Score FROM comments AS T1 JOIN posts AS T2 ON T1.PostId = T2.Id WHERE T2.ViewCount BETWEEN 100 AND 150 ORDER BY T1.Score DESC LIMIT 1;\t----- bird -----\tcodebase_community",
    "708": "SELECT c.CreationDate, u.Age FROM comments c JOIN users u ON c.UserId = u.Id WHERE u.WebsiteUrl IS NOT NULL;\t----- bird -----\tcodebase_community",
    "709": "SELECT COUNT(DISTINCT p.Id) FROM comments c JOIN posts p ON c.PostId = p.Id WHERE c.Score = 0 AND p.ViewCount < 5;\t----- bird -----\tcodebase_community",
    "710": "SELECT COUNT(c.Id) FROM comments AS c JOIN posts AS p ON c.PostId = p.Id WHERE p.CommentCount = 1 AND c.Score = 0;\t----- bird -----\tcodebase_community",
    "711": "SELECT COUNT(DISTINCT T1.UserId) FROM comments AS T1 INNER JOIN users AS T2 ON T1.UserId = T2.Id WHERE T1.Score = 0 AND T2.Age = 40;\t----- bird -----\tcodebase_community",
    "712": "SELECT p.Id, c.Text FROM posts AS p JOIN comments AS c ON p.Id = c.PostId WHERE p.Title = \"Group differences on a five point Likert item\";\t----- bird -----\tcodebase_community",
    "713": "SELECT U.UpVotes FROM users AS U JOIN comments AS C ON U.Id = C.UserId WHERE C.Text = \"R is also lazy evaluated.\";\t----- bird -----\tcodebase_community",
    "714": "SELECT * FROM comments WHERE UserId IN (SELECT Id FROM users WHERE DisplayName = 'Harvey Motulsky');\t----- bird -----\tcodebase_community",
    "715": "SELECT DISTINCT c.UserDisplayName FROM comments AS c JOIN users AS u ON c.UserId = u.Id WHERE c.Score BETWEEN 1 AND 5 AND u.DownVotes = 0;\t----- bird -----\tcodebase_community",
    "716": "SELECT CAST(SUM(CASE WHEN u.UpVotes = 0 THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(DISTINCT c.UserId) FROM comments c JOIN users u ON c.UserId = u.Id WHERE c.Score BETWEEN 5 AND 10;\t----- bird -----\tcodebase_community",
    "717": "SELECT T1.power_name FROM superpower AS T1 INNER JOIN hero_power AS T2 ON T1.id = T2.power_id INNER JOIN superhero AS T3 ON T2.hero_id = T3.id WHERE T3.superhero_name = '3-D Man';\t----- bird -----\tsuperhero",
    "718": "SELECT COUNT(hero_id) FROM hero_power WHERE power_id IN (SELECT id FROM superpower WHERE power_name = \"Super Strength\");\t----- bird -----\tsuperhero",
    "719": "SELECT COUNT(hero_id) FROM hero_power WHERE power_id IN (SELECT id FROM superpower WHERE power_name = 'Super Strength') AND hero_id IN (SELECT id FROM superhero WHERE height_cm > 200);\t----- bird -----\tsuperhero",
    "720": "SELECT T1.full_name FROM superhero AS T1 JOIN hero_power AS T2 ON T1.id = T2.hero_id GROUP BY T1.id HAVING COUNT(T2.power_id) > 15;\t----- bird -----\tsuperhero",
    "721": "SELECT COUNT(*) FROM superhero WHERE eye_colour_id = (SELECT id FROM colour WHERE colour = 'blue');\t----- bird -----\tsuperhero",
    "722": "SELECT T1.colour FROM colour AS T1 JOIN superhero AS T2 ON T1.id = T2.skin_colour_id WHERE T2.superhero_name = \"Apocalypse\";\t----- bird -----\tsuperhero",
    "723": "SELECT COUNT(DISTINCT superhero.id) FROM superhero JOIN hero_power ON superhero.id = hero_power.hero_id JOIN superpower ON hero_power.power_id = superpower.id WHERE superhero.eye_colour_id = (SELECT id FROM colour WHERE colour = 'blue') AND superpower.power_name = 'Agility';\t----- bird -----\tsuperhero",
    "724": "SELECT superhero_name FROM superhero WHERE eye_colour_id = (SELECT id FROM colour WHERE colour = 'blue') AND hair_colour_id = (SELECT id FROM colour WHERE colour = 'blond');\t----- bird -----\tsuperhero",
    "725": "SELECT COUNT(*) FROM superhero WHERE publisher_id = (SELECT id FROM publisher WHERE publisher_name = 'Marvel Comics');\t----- bird -----\tsuperhero",
    "726": "SELECT superhero.superhero_name FROM superhero JOIN publisher ON superhero.publisher_id = publisher.id WHERE publisher.publisher_name = 'Marvel Comics' ORDER BY superhero.height_cm DESC;\t----- bird -----\tsuperhero",
    "727": "SELECT T1.publisher_name FROM publisher AS T1 JOIN superhero AS T2 ON T1.id = T2.publisher_id WHERE T2.superhero_name = 'Sauron';\t----- bird -----\tsuperhero",
    "728": "SELECT T1.superhero_name FROM superhero AS T1 JOIN colour AS T2 ON T1.eye_colour_id = T2.id JOIN publisher AS T3 ON T1.publisher_id = T3.id WHERE T3.publisher_name = 'Marvel Comics' GROUP BY T2.colour ORDER BY COUNT(*) DESC LIMIT 100;\t----- bird -----\tsuperhero",
    "729": "SELECT AVG(height_cm) FROM superhero WHERE publisher_id = (SELECT id FROM publisher WHERE publisher_name = 'Marvel Comics');\t----- bird -----\tsuperhero",
    "730": "SELECT s.superhero_name FROM superhero s JOIN hero_power hp ON s.id = hp.hero_id JOIN superpower p ON hp.power_id = p.id JOIN publisher pub ON s.publisher_id = pub.id WHERE pub.publisher_name = 'Marvel Comics' AND p.power_name = 'Super Strength';\t----- bird -----\tsuperhero",
    "731": "SELECT COUNT(s.id) FROM superhero AS s JOIN publisher AS p ON s.publisher_id = p.id WHERE p.publisher_name = 'DC Comics';\t----- bird -----\tsuperhero",
    "732": "SELECT publisher_name FROM publisher WHERE id IN (SELECT publisher_id FROM superhero ORDER BY weight_kg DESC LIMIT 1);\t----- bird -----\tsuperhero",
    "733": "SELECT COUNT(s.id) FROM superhero s JOIN publisher p ON s.publisher_id = p.id WHERE p.publisher_name = 'Marvel Comics' AND s.eye_colour_id = (SELECT id FROM colour WHERE colour = 'gold');\t----- bird -----\tsuperhero",
    "734": "SELECT T1.publisher_name FROM publisher AS T1 JOIN superhero AS T2 ON T1.id = T2.publisher_id WHERE T2.superhero_name = 'Blue Beetle II';\t----- bird -----\tsuperhero",
    "735": "SELECT COUNT(*) FROM superhero WHERE hair_colour_id = (SELECT id FROM colour WHERE colour = 'blonde');\t----- bird -----\tsuperhero",
    "736": "SELECT superhero_name FROM superhero ORDER BY weight_kg ASC LIMIT 1;\t----- bird -----\tsuperhero",
    "737": "SELECT T1.race FROM race AS T1 JOIN superhero AS T2 ON T1.id = T2.race_id WHERE T2.superhero_name = \"Copycat\";\t----- bird -----\tsuperhero",
    "738": "SELECT superhero.superhero_name FROM superhero INNER JOIN hero_attribute ON superhero.id = hero_attribute.hero_id WHERE hero_attribute.attribute_id = (SELECT id FROM attribute WHERE attribute_name = 'durability') AND hero_attribute.attribute_value < 50;\t----- bird -----\tsuperhero",
    "739": "SELECT T1.superhero_name FROM superhero AS T1 INNER JOIN hero_power AS T2 ON T1.id = T2.hero_id INNER JOIN superpower AS T3 ON T2.power_id = T3.id WHERE T3.power_name = 'Death Touch';\t----- bird -----\tsuperhero",
    "740": "SELECT COUNT(hero.id) FROM superhero AS hero JOIN hero_attribute AS ha ON hero.id = ha.hero_id JOIN gender AS g ON hero.gender_id = g.id WHERE g.gender = 'Female' AND ha.attribute_value = '100' AND ha.attribute_name = 'Strength';\t----- bird -----\tsuperhero",
    "741": "SELECT T1.superhero_name FROM superhero AS T1 JOIN hero_power AS T2 ON T1.id = T2.hero_id GROUP BY T1.id ORDER BY COUNT(T2.power_id) DESC LIMIT 1;\t----- bird -----\tsuperhero",
    "742": "SELECT count(*) FROM superhero WHERE race_id = (SELECT id FROM race WHERE race = 'Vampire');\t----- bird -----\tsuperhero",
    "743": "SELECT CAST(SUM(CASE WHEN a.alignment = 'Neutral' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(s.id) AS percentage, COUNT(CASE WHEN p.publisher_name = 'Marvel Comics' THEN s.id ELSE NULL END) AS marvel_count FROM superhero s JOIN alignment a ON s.alignment_id = a.id JOIN publisher p ON s.publisher_id = p.id;\t----- bird -----\tsuperhero",
    "744": "SELECT ABS(COUNT(CASE WHEN publisher_id = (SELECT id FROM publisher WHERE publisher_name = 'DC Comics') THEN 1 ELSE NULL END) - COUNT(CASE WHEN publisher_id = (SELECT id FROM publisher WHERE publisher_name = 'Marvel Comics') THEN 1 ELSE NULL END)) FROM superhero;\t----- bird -----\tsuperhero",
    "745": "SELECT publisher_id FROM superhero WHERE superhero_name = 'Star Trek';\t----- bird -----\tsuperhero",
    "746": "SELECT avg(attribute_value) FROM hero_attribute;\t----- bird -----\tsuperhero",
    "747": "SELECT count(*) FROM superhero WHERE full_name IS NULL;\t----- bird -----\tsuperhero",
    "748": "SELECT c.colour FROM colour AS c JOIN superhero AS s ON c.id = s.eye_colour_id WHERE s.id = 75;\t----- bird -----\tsuperhero",
    "749": "SELECT T2.power_name FROM superhero AS T1 INNER JOIN hero_power AS T3 ON T1.id = T3.hero_id INNER JOIN superpower AS T2 ON T3.power_id = T2.id WHERE T1.superhero_name = 'Deathlok';\t----- bird -----\tsuperhero",
    "750": "SELECT AVG(weight_kg) FROM superhero WHERE gender_id = (SELECT id FROM gender WHERE gender = 'Female');\t----- bird -----\tsuperhero",
    "751": "SELECT DISTINCT T1.power_name FROM superpower AS T1 INNER JOIN hero_power AS T2 ON T1.id = T2.power_id INNER JOIN superhero AS T3 ON T2.hero_id = T3.id WHERE T3.gender_id = (SELECT id FROM gender WHERE gender = 'Male') LIMIT 5;\t----- bird -----\tsuperhero",
    "752": "SELECT superhero_name FROM superhero WHERE race_id = (SELECT id FROM race WHERE race = 'Alien');\t----- bird -----\tsuperhero",
    "753": "SELECT superhero_name FROM superhero WHERE height_cm BETWEEN 170 AND 190 AND eye_colour_id IS NULL;\t----- bird -----\tsuperhero",
    "754": "SELECT T1.power_name FROM superpower AS T1 INNER JOIN hero_power AS T2 ON T1.id = T2.power_id WHERE T2.hero_id = 56;\t----- bird -----\tsuperhero",
    "755": "SELECT full_name FROM superhero WHERE race_id = (SELECT id FROM race WHERE race = 'Demi-God') LIMIT 5;\t----- bird -----\tsuperhero",
    "756": "SELECT COUNT(s.id) FROM superhero s JOIN alignment a ON s.alignment_id = a.id WHERE a.alignment = 'bad';\t----- bird -----\tsuperhero",
    "757": "SELECT T1.race FROM race AS T1 INNER JOIN superhero AS T2 ON T1.id = T2.race_id WHERE T2.weight_kg = 169;\t----- bird -----\tsuperhero",
    "758": "SELECT T1.colour FROM colour AS T1 INNER JOIN superhero AS T2 ON T1.id = T2.hair_colour_id WHERE T2.race_id = 1 AND T2.height_cm = 185;\t----- bird -----\tsuperhero",
    "759": "SELECT T1.colour FROM colour AS T1 JOIN superhero AS T2 ON T1.id = T2.eye_colour_id ORDER BY T2.weight_kg DESC LIMIT 1;\t----- bird -----\tsuperhero",
    "760": "SELECT CAST(SUM(CASE WHEN publisher_id = (SELECT id FROM publisher WHERE publisher_name = 'Marvel Comics') THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(*) FROM superhero WHERE height_cm BETWEEN 150 AND 180;\t----- bird -----\tsuperhero",
    "761": "SELECT superhero_name FROM superhero WHERE gender_id = (SELECT id FROM gender WHERE gender = 'Male') AND weight_kg > (SELECT AVG(weight_kg) * 0.79 FROM superhero);\t----- bird -----\tsuperhero",
    "762": "SELECT power_name FROM superpower INNER JOIN hero_power ON superpower.id = hero_power.power_id GROUP BY power_name ORDER BY COUNT(*) DESC LIMIT 1;\t----- bird -----\tsuperhero",
    "763": "SELECT T2.attribute_value FROM hero_attribute AS T1 JOIN attribute AS T2 ON T1.attribute_id = T2.id WHERE T1.hero_id = (SELECT id FROM superhero WHERE superhero_name = 'Abomination');\t----- bird -----\tsuperhero",
    "764": "SELECT T1.power_name FROM superpower AS T1 INNER JOIN hero_power AS T2 ON T1.id = T2.power_id WHERE T2.hero_id = 1;\t----- bird -----\tsuperhero",
    "765": "SELECT COUNT(hero_id) FROM hero_power WHERE power_id IN (SELECT id FROM superpower WHERE power_name = 'Stealth');\t----- bird -----\tsuperhero",
    "766": "SELECT T1.full_name FROM superhero AS T1 JOIN hero_attribute AS T2 ON T1.id = T2.hero_id WHERE T2.attribute_id = (SELECT id FROM attribute WHERE attribute_name = 'Strength') ORDER BY T2.attribute_value DESC LIMIT 1;\t----- bird -----\tsuperhero",
    "767": "SELECT AVG(weight_kg) FROM superhero WHERE skin_colour_id IS NULL;\t----- bird -----\tsuperhero",
    "768": "SELECT COUNT(s.id) FROM superhero AS s JOIN publisher AS p ON s.publisher_id = p.id WHERE p.publisher_name = 'Dark Horse Comics';\t----- bird -----\tsuperhero",
    "769": "SELECT s.superhero_name FROM superhero s JOIN publisher p ON s.publisher_id = p.id WHERE p.publisher_name = 'Dark Horse Comics' ORDER BY s.weight_kg DESC LIMIT 1;\t----- bird -----\tsuperhero",
    "770": "SELECT c.colour FROM superhero s JOIN colour c ON s.eye_colour_id = c.id WHERE s.superhero_name = \"Abraham Sapien\";\t----- bird -----\tsuperhero",
    "771": "SELECT T1.superhero_name FROM superhero AS T1 INNER JOIN hero_power AS T2 ON T1.id = T2.hero_id INNER JOIN superpower AS T3 ON T2.power_id = T3.id WHERE T3.power_name = 'Flight';\t----- bird -----\tsuperhero",
    "772": "SELECT T1.eye_colour_id, T1.hair_colour_id, T1.skin_colour_id FROM superhero AS T1 JOIN gender AS T2 ON T1.gender_id = T2.id JOIN publisher AS T3 ON T1.publisher_id = T3.id WHERE T2.gender = 'Female' AND T3.publisher_name = 'Dark Horse Comics';\t----- bird -----\tsuperhero",
    "773": "SELECT DISTINCT T1.superhero_name, T2.publisher_name FROM superhero AS T1 JOIN publisher AS T2 ON T1.publisher_id = T2.id WHERE T1.eye_colour_id IN (SELECT eye_colour_id FROM superhero) AND T1.hair_colour_id IN (SELECT hair_colour_id FROM superhero) AND T1.skin_colour_id IN (SELECT skin_colour_id FROM superhero) AND EXISTS (SELECT 1 FROM superhero AS S2 WHERE S2.id != T1.id AND S2.eye_colour_id = T1.eye_colour_id AND S2.hair_colour_id = T1.hair_colour_id AND S2.skin_colour_id = T1.skin_colour_id);\t----- bird -----\tsuperhero",
    "774": "SELECT T1.alignment FROM alignment AS T1 INNER JOIN superhero AS T2 ON T1.id = T2.alignment_id WHERE T2.superhero_name = 'A-Bomb';\t----- bird -----\tsuperhero",
    "775": "SELECT CAST(SUM(CASE WHEN colour.colour = 'blue' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(gender.id) FROM superhero JOIN gender ON superhero.gender_id = gender.id JOIN colour ON superhero.eye_colour_id = colour.id WHERE gender.gender = 'female';\t----- bird -----\tsuperhero",
    "776": "SELECT superhero.superhero_name, race.race FROM superhero JOIN race ON superhero.race_id = race.id WHERE superhero.full_name = 'Charles Chandler';\t----- bird -----\tsuperhero",
    "777": "SELECT g.gender FROM gender g JOIN superhero s ON g.id = s.gender_id WHERE s.superhero_name = 'Agent 13';\t----- bird -----\tsuperhero",
    "778": "SELECT superhero.superhero_name FROM superhero JOIN hero_power ON superhero.id = hero_power.hero_id JOIN superpower ON hero_power.power_id = superpower.id WHERE superpower.power_name = 'Adaptation';\t----- bird -----\tsuperhero",
    "779": "SELECT COUNT(*) FROM hero_power WHERE hero_id = (SELECT id FROM superhero WHERE superhero_name = 'Amazo');\t----- bird -----\tsuperhero",
    "780": "SELECT T1.power_name FROM superpower AS T1 INNER JOIN hero_power AS T2 ON T1.id = T2.power_id INNER JOIN superhero AS T3 ON T2.hero_id = T3.id WHERE T3.superhero_name = 'Hunter Zolomon';\t----- bird -----\tsuperhero",
    "781": "SELECT height_cm FROM superhero WHERE eye_colour_id = (SELECT id FROM colour WHERE colour = 'amber');\t----- bird -----\tsuperhero",
    "782": "SELECT superhero_name FROM superhero WHERE eye_colour_id = (SELECT id FROM colour WHERE colour = 'black') AND hair_colour_id = (SELECT id FROM colour WHERE colour = 'black');\t----- bird -----\tsuperhero",
    "783": "SELECT T1.colour FROM colour AS T1 INNER JOIN superhero AS T2 ON T1.id = T2.eye_colour_id WHERE T2.skin_colour_id = (SELECT id FROM colour WHERE colour = 'gold');\t----- bird -----\tsuperhero",
    "784": "SELECT T1.full_name FROM superhero AS T1 JOIN race AS T2 ON T1.race_id = T2.id WHERE T2.race = 'Vampire';\t----- bird -----\tsuperhero",
    "785": "SELECT s.superhero_name FROM superhero s JOIN alignment a ON s.alignment_id = a.id WHERE a.alignment = 'Neutral';\t----- bird -----\tsuperhero",
    "786": "SELECT COUNT(hero_id) FROM hero_attribute WHERE attribute_id = (SELECT attribute_id FROM attribute WHERE attribute_name = 'strength' ORDER BY attribute_value DESC LIMIT 1);\t----- bird -----\tsuperhero",
    "787": "SELECT T1.race, T2.alignment FROM race AS T1 INNER JOIN superhero AS S ON T1.id = S.race_id INNER JOIN alignment AS T2 ON S.alignment_id = T2.id WHERE S.superhero_name = \"Cameron Hicks\";\t----- bird -----\tsuperhero",
    "788": "SELECT CAST(SUM(CASE WHEN T1.publisher_id = (SELECT id FROM publisher WHERE publisher_name = 'Marvel Comics') THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(T1.id) FROM superhero AS T1 INNER JOIN gender AS T2 ON T1.gender_id = T2.id WHERE T2.gender = 'Female';\t----- bird -----\tsuperhero",
    "789": "SELECT AVG(weight_kg) FROM superhero WHERE race_id = (SELECT id FROM race WHERE race = 'Alien');\t----- bird -----\tsuperhero",
    "790": "SELECT ABS(weight_kg) - ABS(weight_kg) FROM superhero WHERE superhero_name = 'Emil Blonsky' AND superhero_name = 'Charles Chandler';\t----- bird -----\tsuperhero",
    "791": "SELECT superhero_name, AVG(height_cm) FROM superhero GROUP BY superhero_name;\t----- bird -----\tsuperhero",
    "792": "SELECT T1.power_name FROM superpower AS T1 INNER JOIN hero_power AS T2 ON T1.id = T2.power_id INNER JOIN superhero AS T3 ON T2.hero_id = T3.id WHERE T3.superhero_name = 'Abomination';\t----- bird -----\tsuperhero",
    "793": "SELECT COUNT(id) FROM superhero WHERE race_id IN (SELECT id FROM race WHERE race = 'god/eternal') AND gender_id IN (SELECT id FROM gender WHERE gender = 'Male');\t----- bird -----\tsuperhero",
    "794": "SELECT superhero_name FROM superhero ORDER BY weight_kg ASC LIMIT 1;\t----- bird -----\tsuperhero",
    "795": "SELECT COUNT(s.id) FROM superhero s JOIN alignment a ON s.alignment_id = a.id WHERE a.alignment = 'neutral';\t----- bird -----\tsuperhero",
    "796": "SELECT ha.attribute_value FROM hero_attribute ha JOIN superhero s ON ha.hero_id = s.id WHERE s.superhero_name = '3-D Man';\t----- bird -----\tsuperhero",
    "797": "SELECT s.superhero_name FROM superhero s JOIN colour e ON s.eye_colour_id = e.id WHERE e.colour = 'blue' JOIN colour h ON s.hair_colour_id = h.id WHERE h.colour = 'brown';\t----- bird -----\tsuperhero",
    "798": "SELECT DISTINCT T1.publisher_name FROM publisher AS T1 INNER JOIN superhero AS T2 ON T1.id = T2.publisher_id WHERE T2.superhero_name IN ('Hawkman', 'Karate Kid', 'Speedy');\t----- bird -----\tsuperhero",
    "799": "SELECT COUNT(*) FROM superhero WHERE publisher_id IS NULL;\t----- bird -----\tsuperhero",
    "800": "SELECT CAST(SUM(CASE WHEN eye_colour_id = (SELECT id FROM colour WHERE colour = 'blue') THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(*) FROM superhero;\t----- bird -----\tsuperhero",
    "801": "SELECT CAST(SUM(CASE WHEN G.gender = 'Male' THEN 1 ELSE 0 END) AS REAL) / SUM(CASE WHEN G.gender = 'Female' THEN 1 ELSE 0 END) FROM superhero S JOIN gender G ON S.gender_id = G.id;\t----- bird -----\tsuperhero",
    "802": "SELECT superhero_name FROM superhero ORDER BY height_cm DESC LIMIT 1;\t----- bird -----\tsuperhero",
    "803": "SELECT power_id FROM hero_power WHERE power_id IN (SELECT id FROM superpower WHERE power_name = 'cryokinesis');\t----- bird -----\tsuperhero",
    "804": "SELECT superhero_name FROM superhero WHERE id = 294;\t----- bird -----\tsuperhero",
    "805": "SELECT full_name FROM superhero WHERE weight_kg IS NULL;\t----- bird -----\tsuperhero",
    "806": "SELECT c.colour FROM colour c JOIN superhero s ON c.id = s.eye_colour_id WHERE s.full_name = 'Karen Beecher-Duncan';\t----- bird -----\tsuperhero",
    "807": "SELECT T2.power_name FROM superhero AS T1 INNER JOIN hero_power AS T3 ON T1.id = T3.hero_id INNER JOIN superpower AS T2 ON T3.power_id = T2.id WHERE T1.full_name = 'Helen Parr';\t----- bird -----\tsuperhero",
    "808": "SELECT T1.race FROM race AS T1 JOIN superhero AS T2 ON T1.id = T2.race_id WHERE T2.weight_kg = 108 AND T2.height_cm = 188;\t----- bird -----\tsuperhero",
    "809": "SELECT T1.publisher_name FROM publisher AS T1 JOIN superhero AS T2 ON T1.id = T2.publisher_id WHERE T2.id = 38;\t----- bird -----\tsuperhero",
    "810": "SELECT T1.race FROM race AS T1 JOIN superhero AS T2 ON T1.id = T2.race_id JOIN hero_attribute AS T3 ON T2.id = T3.hero_id WHERE T3.attribute_value = (SELECT MAX(attribute_value) FROM hero_attribute) LIMIT 1;\t----- bird -----\tsuperhero",
    "811": "SELECT a.alignment, GROUP_CONCAT(s.power_name) FROM superhero AS sh JOIN alignment AS a ON sh.alignment_id = a.id JOIN hero_power AS hp ON sh.id = hp.hero_id JOIN superpower AS s ON hp.power_id = s.id WHERE sh.superhero_name = 'Atom IV' GROUP BY a.alignment;\t----- bird -----\tsuperhero",
    "812": "SELECT full_name FROM superhero WHERE eye_colour_id = (SELECT id FROM colour WHERE colour = 'blue') LIMIT 5;\t----- bird -----\tsuperhero",
    "813": "SELECT AVG(ha.attribute_value) FROM hero_attribute ha JOIN superhero s ON ha.hero_id = s.id JOIN alignment a ON s.alignment_id = a.id WHERE a.alignment = 'Neutral';\t----- bird -----\tsuperhero",
    "814": "SELECT DISTINCT T1.colour FROM colour AS T1 JOIN superhero AS T2 ON T1.id = T2.skin_colour_id JOIN hero_attribute AS T3 ON T2.id = T3.hero_id WHERE T3.attribute_value = '100';\t----- bird -----\tsuperhero",
    "815": "SELECT COUNT(s.id) FROM superhero AS s JOIN alignment AS a ON s.alignment_id = a.id WHERE a.alignment = 'good' AND s.gender_id = (SELECT id FROM gender WHERE gender = 'female');\t----- bird -----\tsuperhero",
    "816": "SELECT T1.superhero_name FROM superhero AS T1 INNER JOIN hero_attribute AS T2 ON T1.id = T2.hero_id WHERE T2.attribute_value BETWEEN 75 AND 80;\t----- bird -----\tsuperhero",
    "817": "SELECT T1.race FROM race AS T1 INNER JOIN superhero AS T2 ON T1.id = T2.race_id INNER JOIN colour AS T3 ON T2.hair_colour_id = T3.id WHERE T3.colour = 'blue' AND T2.gender_id = (SELECT id FROM gender WHERE gender = 'male');\t----- bird -----\tsuperhero",
    "818": "SELECT CAST(SUM(CASE WHEN g.gender = 'Female' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(a.id) FROM alignment a JOIN superhero s ON a.id = s.alignment_id JOIN gender g ON s.gender_id = g.id WHERE a.alignment = 'Bad';\t----- bird -----\tsuperhero",
    "819": "SELECT COUNT(CASE WHEN eye_colour_id = (SELECT id FROM colour WHERE colour = 'blue') THEN 1 ELSE NULL END) - COUNT(CASE WHEN eye_colour_id IS NULL THEN 1 ELSE NULL END) FROM superhero WHERE weight_kg IS NULL;\t----- bird -----\tsuperhero",
    "820": "SELECT T1.attribute_value FROM hero_attribute AS T1 INNER JOIN superhero AS T2 ON T1.hero_id = T2.id WHERE T2.superhero_name = 'Hulk' AND T1.attribute_id = (SELECT id FROM attribute WHERE attribute_name = 'Strength');\t----- bird -----\tsuperhero",
    "821": "SELECT T1.power_name FROM superpower AS T1 INNER JOIN hero_power AS T2 ON T1.id = T2.power_id INNER JOIN superhero AS T3 ON T2.hero_id = T3.id WHERE T3.superhero_name = 'Ajax';\t----- bird -----\tsuperhero",
    "822": "SELECT COUNT(s.id) FROM superhero s JOIN alignment a ON s.alignment_id = a.id WHERE s.skin_colour_id = (SELECT id FROM colour WHERE colour = 'green') AND a.alignment = 'villain';\t----- bird -----\tsuperhero",
    "823": "SELECT COUNT(s.id) FROM superhero AS s JOIN gender AS g ON s.gender_id = g.id JOIN publisher AS p ON s.publisher_id = p.id WHERE g.gender = 'Female' AND p.publisher_name = 'Marvel Comics';\t----- bird -----\tsuperhero",
    "824": "SELECT s.superhero_name FROM superhero s JOIN hero_power hp ON s.id = hp.hero_id JOIN superpower p ON hp.power_id = p.id WHERE p.power_name = 'Wind Control' ORDER BY s.superhero_name;\t----- bird -----\tsuperhero",
    "825": "SELECT T1.gender FROM gender AS T1 JOIN superhero AS T2 ON T1.id = T2.gender_id JOIN hero_power AS T3 ON T2.id = T3.hero_id JOIN superpower AS T4 ON T3.power_id = T4.id WHERE T4.power_name = 'Phoenix Force';\t----- bird -----\tsuperhero",
    "826": "SELECT superhero_name FROM superhero WHERE publisher_id = (SELECT id FROM publisher WHERE publisher_name = 'DC Comics') ORDER BY weight_kg DESC LIMIT 1;\t----- bird -----\tsuperhero",
    "827": "SELECT AVG(height_cm) FROM superhero WHERE publisher_id = (SELECT id FROM publisher WHERE publisher_name = 'Dark Horse Comics') AND race_id != (SELECT id FROM race WHERE race = 'Human');\t----- bird -----\tsuperhero",
    "828": "SELECT COUNT(*) FROM superhero ORDER BY weight_kg ASC LIMIT 1;\t----- bird -----\tsuperhero",
    "829": "SELECT ABS(COUNT(CASE WHEN publisher_id = (SELECT id FROM publisher WHERE publisher_name = 'DC Comics') THEN 1 END) - COUNT(CASE WHEN publisher_id = (SELECT id FROM publisher WHERE publisher_name = 'Marvel Comics') THEN 1 END)) FROM superhero;\t----- bird -----\tsuperhero",
    "830": "SELECT T1.attribute_name FROM attribute AS T1 INNER JOIN hero_attribute AS T2 ON T1.id = T2.attribute_id INNER JOIN superhero AS T3 ON T2.hero_id = T3.id WHERE T3.superhero_name = 'Black Panther' ORDER BY T2.attribute_value LIMIT 1;\t----- bird -----\tsuperhero",
    "831": "SELECT c.colour FROM superhero s JOIN colour c ON s.eye_colour_id = c.id WHERE s.superhero_name = \"Abomination\";\t----- bird -----\tsuperhero",
    "832": "SELECT superhero_name FROM superhero ORDER BY height_cm DESC LIMIT 1;\t----- bird -----\tsuperhero",
    "833": "SELECT superhero_name FROM superhero WHERE full_name = 'Charles Chandler';\t----- bird -----\tsuperhero",
    "834": "SELECT CAST(SUM(CASE WHEN G.gender = 'Female' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(S.id) FROM superhero S JOIN gender G ON S.gender_id = G.id JOIN publisher P ON S.publisher_id = P.id WHERE P.publisher_name = 'George Lucas';\t----- bird -----\tsuperhero",
    "835": "SELECT CAST(SUM(CASE WHEN A.alignment = 'good' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(T1.id) FROM superhero AS T1 JOIN alignment AS A ON T1.alignment_id = A.id JOIN publisher AS P ON T1.publisher_id = P.id WHERE P.publisher_name = 'Marvel Comics';\t----- bird -----\tsuperhero",
    "836": "SELECT count(*) FROM superhero WHERE full_name LIKE '%John%';\t----- bird -----\tsuperhero",
    "837": "SELECT hero_id FROM hero_attribute ORDER BY attribute_value ASC LIMIT 1;\t----- bird -----\tsuperhero",
    "838": "SELECT full_name FROM superhero WHERE superhero_name = 'Alien';\t----- bird -----\tsuperhero",
    "839": "SELECT full_name FROM superhero WHERE weight_kg < 100 AND eye_colour_id = (SELECT id FROM colour WHERE colour = 'brown');\t----- bird -----\tsuperhero",
    "840": "SELECT T2.attribute_value FROM superhero AS T1 INNER JOIN hero_attribute AS T2 ON T1.id = T2.hero_id WHERE T1.superhero_name = 'Aquababy';\t----- bird -----\tsuperhero",
    "841": "SELECT weight_kg, race_id FROM superhero WHERE id = 40;\t----- bird -----\tsuperhero",
    "842": "SELECT AVG(height_cm) FROM superhero WHERE alignment_id = (SELECT id FROM alignment WHERE alignment = 'Neutral');\t----- bird -----\tsuperhero",
    "843": "SELECT hero_id FROM hero_power WHERE power_id IN (SELECT id FROM superpower WHERE power_name = 'Intellegence');\t----- bird -----\tsuperhero",
    "844": "SELECT c.colour FROM superhero s JOIN colour c ON s.eye_colour_id = c.id WHERE s.superhero_name = \"Blackwulf\";\t----- bird -----\tsuperhero",
    "845": "SELECT T1.power_name FROM superpower AS T1 INNER JOIN hero_power AS T2 ON T1.id = T2.power_id INNER JOIN superhero AS T3 ON T2.hero_id = T3.id WHERE T3.height_cm > (SELECT AVG(height_cm) * 0.8 FROM superhero);\t----- bird -----\tsuperhero",
    "846": "SELECT T1.forename, T1.surname FROM drivers AS T1 JOIN results AS T2 ON T1.driverId = T2.driverId WHERE T2.raceId = 20 AND T2.statusId = (SELECT statusId FROM status WHERE status = 'Eliminated');\t----- bird -----\tformula_1",
    "847": "SELECT T1.surname FROM drivers AS T1 JOIN qualifying AS T2 ON T1.driverId = T2.driverId WHERE T2.raceId = 19 AND T2.q2 IS NOT NULL ORDER BY T2.q2 ASC LIMIT 1;\t----- bird -----\tformula_1",
    "848": "SELECT DISTINCT T1.year FROM races AS T1 JOIN circuits AS T2 ON T1.circuitId = T2.circuitId WHERE T2.location = 'Shanghai';\t----- bird -----\tformula_1",
    "849": "SELECT url FROM circuits WHERE name = 'Circuit de Barcelona-Catalunya';\t----- bird -----\tformula_1",
    "850": "SELECT name FROM races WHERE circuitId IN (SELECT circuitId FROM circuits WHERE country = 'Germany');\t----- bird -----\tformula_1",
    "851": "SELECT T1.position FROM results AS T1 INNER JOIN constructors AS T2 ON T1.constructorId = T2.constructorId WHERE T2.name = 'Renault';\t----- bird -----\tformula_1",
    "852": "SELECT COUNT(*) FROM races WHERE year = 2010 AND circuitId IN (SELECT circuitId FROM circuits WHERE location NOT LIKE '%Asia%' AND location NOT LIKE '%Europe%');\t----- bird -----\tformula_1",
    "853": "SELECT name FROM races WHERE circuitId IN (SELECT circuitId FROM circuits WHERE country = 'Spain');\t----- bird -----\tformula_1",
    "854": "SELECT lat, lng FROM circuits WHERE name LIKE '%Australian Grand Prix%';\t----- bird -----\tformula_1",
    "855": "SELECT * FROM races WHERE circuitId IN (SELECT circuitId FROM circuits WHERE name = 'Sepang International Circuit');\t----- bird -----\tformula_1",
    "856": "SELECT time FROM races WHERE circuitId IN (SELECT circuitId FROM circuits WHERE name = 'Sepang International Circuit');\t----- bird -----\tformula_1",
    "857": "SELECT lat, lng FROM circuits WHERE name = 'Abu Dhabi Grand Prix';\t----- bird -----\tformula_1",
    "858": "SELECT T1.nationality FROM constructors AS T1 JOIN constructorResults AS T2 ON T1.constructorId = T2.constructorId WHERE T2.raceId = 24 AND T2.points = 1;\t----- bird -----\tformula_1",
    "859": "SELECT q1 FROM qualifying WHERE raceId = 354 AND driverId IN (SELECT driverId FROM drivers WHERE forename = 'Bruno' AND surname = 'Senna');\t----- bird -----\tformula_1",
    "860": "SELECT T1.nationality FROM drivers AS T1 JOIN qualifying AS T2 ON T1.driverId = T2.driverId WHERE T2.raceId = 355 AND T2.q2 = '0:01:40';\t----- bird -----\tformula_1",
    "861": "SELECT T1.number FROM qualifying AS T1 INNER JOIN races AS T2 ON T1.raceId = T2.raceId WHERE T2.raceId = 903 AND T1.q3 = '0:01:54';\t----- bird -----\tformula_1",
    "862": "SELECT COUNT(DISTINCT driverId) FROM results WHERE raceId IN (SELECT raceId FROM races WHERE name = 'Bahrain Grand Prix' AND year = 2007) AND statusId IN (SELECT statusId FROM status WHERE status LIKE '%Finished%') AND positionText NOT LIKE '%Finished%';\t----- bird -----\tformula_1",
    "863": "SELECT T1.year FROM seasons AS T1 JOIN races AS T2 ON T1.year = T2.year WHERE T2.raceId = 901;\t----- bird -----\tformula_1",
    "864": "SELECT count(DISTINCT driverId) FROM results WHERE raceId IN (SELECT raceId FROM races WHERE date = '2015-11-29') AND positionText IS NOT NULL;\t----- bird -----\tformula_1",
    "865": "SELECT forename, surname FROM drivers WHERE driverId IN (SELECT driverId FROM results WHERE raceId = 592 AND statusId IN (SELECT statusId FROM status WHERE status NOT LIKE '%Disqualified%' AND status NOT LIKE '%Excluded%')) ORDER BY dob ASC LIMIT 1;\t----- bird -----\tformula_1",
    "866": "SELECT D.url FROM drivers AS D JOIN lapTimes AS LT ON D.driverId = LT.driverId WHERE LT.raceId = 161 AND LT.time = '0:01:27';\t----- bird -----\tformula_1",
    "867": "SELECT T1.nationality FROM drivers AS T1 JOIN results AS T2 ON T1.driverId = T2.driverId WHERE T2.raceId = 933 ORDER BY T2.fastestLapSpeed DESC LIMIT 1;\t----- bird -----\tformula_1",
    "868": "SELECT lat, lng FROM circuits WHERE circuitRef = 'Malaysia';\t----- bird -----\tformula_1",
    "869": "SELECT T1.url FROM constructors AS T1 JOIN constructorStandings AS T2 ON T1.constructorId = T2.constructorId WHERE T2.raceId = 9 ORDER BY T2.points DESC LIMIT 1;\t----- bird -----\tformula_1",
    "870": "SELECT q1 FROM qualifying WHERE raceId = 345 AND driverId = (SELECT driverId FROM drivers WHERE forename = 'Lucas' AND surname = 'di Grassi');\t----- bird -----\tformula_1",
    "871": "SELECT T1.nationality FROM drivers AS T1 JOIN qualifying AS T2 ON T1.driverId = T2.driverId WHERE T2.raceId = 347 AND T2.q2 = '0:01:15';\t----- bird -----\tformula_1",
    "872": "SELECT T1.code FROM drivers AS T1 JOIN qualifying AS T2 ON T1.driverId = T2.driverId WHERE T2.raceId = (SELECT raceId FROM races WHERE round = 45) AND T2.q3 = '0:01:33';\t----- bird -----\tformula_1",
    "873": "SELECT T1.time FROM results AS T1 INNER JOIN drivers AS T2 ON T1.driverId = T2.driverId WHERE T2.forename = 'Bruce' AND T2.surname = 'McLaren' AND T1.raceId = 743;\t----- bird -----\tformula_1",
    "874": "SELECT T1.forename, T1.surname FROM drivers AS T1 JOIN results AS T2 ON T1.driverId = T2.driverId JOIN races AS T3 ON T2.raceId = T3.raceId WHERE T3.name = 'San Marino Grand Prix' AND T3.year = 2006 AND T2.position = 2;\t----- bird -----\tformula_1",
    "875": "SELECT T1.year FROM seasons AS T1 JOIN races AS T2 ON T1.url = T2.url WHERE T2.raceId = 901;\t----- bird -----\tformula_1",
    "876": "SELECT COUNT(DISTINCT driverId) FROM results WHERE raceId IN (SELECT raceId FROM races WHERE date = '2015-11-29') AND statusId IN (SELECT statusId FROM status WHERE status LIKE '%Finished%') IS FALSE;\t----- bird -----\tformula_1",
    "877": "SELECT forename, surname FROM drivers WHERE driverId IN (SELECT driverId FROM results WHERE raceId = 872 AND positionText != 'Retired' AND positionText != 'Disqualified') ORDER BY dob ASC LIMIT 1;\t----- bird -----\tformula_1",
    "878": "SELECT forename, surname FROM drivers WHERE driverId IN (SELECT driverId FROM lapTimes WHERE raceId = 348 ORDER BY time ASC LIMIT 1);\t----- bird -----\tformula_1",
    "879": "SELECT T1.nationality FROM drivers AS T1 JOIN results AS T2 ON T1.driverId = T2.driverId ORDER BY T2.fastestLapSpeed DESC LIMIT 1;\t----- bird -----\tformula_1",
    "880": "SELECT (T1.fastestLapSpeed - T2.fastestLapSpeed) * 100.0 / T1.fastestLapSpeed FROM results AS T1 INNER JOIN results AS T2 ON T1.raceId = (SELECT raceId FROM races WHERE name = '853' ) AND T2.raceId = (SELECT raceId FROM races ORDER BY raceId LIMIT 1 OFFSET 1) WHERE T1.driverId = (SELECT driverId FROM drivers WHERE forename = 'Paul' AND surname = 'di Resta') AND T2.driverId = (SELECT driverId FROM drivers WHERE forename = 'Paul' AND surname = 'di Resta');\t----- bird -----\tformula_1",
    "881": "SELECT CAST(SUM(CASE WHEN r.position IS NOT NULL THEN 1 ELSE 0 END) AS REAL) / COUNT(DISTINCT d.driverId) AS race_completion_rate FROM races r JOIN results r2 ON r.raceId = r2.raceId JOIN drivers d ON r2.driverId = d.driverId WHERE r.date = '1983-07-16';\t----- bird -----\tformula_1",
    "882": "SELECT T1.year FROM seasons AS T1 JOIN races AS T2 ON T1.year = T2.year WHERE T2.name = 'Singapore Grand Prix' ORDER BY T2.round ASC LIMIT 1;\t----- bird -----\tformula_1",
    "883": "SELECT name FROM races WHERE year = 2005 ORDER BY name DESC;\t----- bird -----\tformula_1",
    "884": "SELECT name FROM races WHERE year = (SELECT MIN(year) FROM races) ORDER BY date ASC LIMIT 1;\t----- bird -----\tformula_1",
    "885": "SELECT name, date FROM races WHERE year = 1999 ORDER BY round DESC LIMIT 1;\t----- bird -----\tformula_1",
    "886": "SELECT year FROM races GROUP BY year ORDER BY COUNT(*) DESC LIMIT 1;\t----- bird -----\tformula_1",
    "887": "SELECT name FROM races WHERE year = 2017;\t----- bird -----\tformula_1",
    "888": "SELECT c.name, c.location FROM races r JOIN circuits c ON r.circuitId = c.circuitId WHERE r.year = (SELECT MIN(year) FROM races WHERE name LIKE '%European Grand Prix%' ) AND c.location LIKE '%Europe%' LIMIT 1;\t----- bird -----\tformula_1",
    "889": "SELECT s.year FROM seasons s JOIN races r ON s.year = r.year JOIN circuits c ON r.circuitId = c.circuitId WHERE c.name = 'Brands Hatch' AND c.country = 'United Kingdom' ORDER BY s.year DESC LIMIT 1;\t----- bird -----\tformula_1",
    "890": "SELECT COUNT(DISTINCT T1.year) FROM races AS T1 JOIN circuits AS T2 ON T1.circuitId = T2.circuitId WHERE T2.name = 'Silverstone Circuit' AND T2.country = 'United Kingdom';\t----- bird -----\tformula_1",
    "891": "SELECT T1.forename, T1.surname FROM drivers AS T1 JOIN results AS T2 ON T1.driverId = T2.driverId JOIN races AS T3 ON T2.raceId = T3.raceId WHERE T3.year = 2010 AND T3.name = 'Singapore Grand Prix' ORDER BY T2.position;\t----- bird -----\tformula_1",
    "892": "SELECT D.forename, D.surname, sum(R.points) AS total_points FROM drivers AS D JOIN results AS R ON D.driverId = R.driverId GROUP BY D.driverId ORDER BY total_points DESC LIMIT 1;\t----- bird -----\tformula_1",
    "893": "SELECT T1.forename, T1.surname, T3.points FROM drivers AS T1 INNER JOIN results AS T2 ON T1.driverId = T2.driverId INNER JOIN driverStandings AS T3 ON T1.driverId = T3.driverId AND T2.raceId = T3.raceId WHERE T2.raceId IN (SELECT raceId FROM races WHERE name = 'Chinese Grand Prix' AND year = 2017) ORDER BY T3.points DESC LIMIT 3;\t----- bird -----\tformula_1",
    "894": "SELECT T1.driverId, T1.raceId, T1.time FROM lapTimes AS T1 ORDER BY T1.time ASC LIMIT 1;\t----- bird -----\tformula_1",
    "895": "SELECT AVG(time) FROM lapTimes WHERE raceId = (SELECT raceId FROM races WHERE name = 'Malaysian Grand Prix' AND year = 2009) AND driverId = (SELECT driverId FROM drivers WHERE forename = 'Lewis' AND surname = 'Hamilton');\t----- bird -----\tformula_1",
    "896": "SELECT CAST(SUM(CASE WHEN R.circuitId NOT IN (SELECT circuitId FROM races WHERE year = 2010 AND round = 1) THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(DISTINCT R.circuitId) FROM races AS R JOIN drivers AS D ON R.raceId = D.driverId WHERE D.forename = 'Lewis' AND D.surname = 'Hamilton';\t----- bird -----\tformula_1",
    "897": "SELECT D.forename, D.surname, D.nationality, MAX(DR.points) AS max_points FROM drivers AS D JOIN driverStandings AS DR ON D.driverId = DR.driverId GROUP BY D.driverId ORDER BY COUNT(DR.wins) DESC LIMIT 1;\t----- bird -----\tformula_1",
    "898": "SELECT strftime('%Y', 'now') - strftime('%Y', dob) AS age, forename, surname FROM drivers WHERE nationality = 'Japanese' ORDER BY dob DESC LIMIT 1;\t----- bird -----\tformula_1",
    "899": "SELECT T1.name FROM circuits AS T1 JOIN races AS T2 ON T1.circuitId = T2.circuitId WHERE T2.year BETWEEN 1990 AND 2000 GROUP BY T1.circuitId HAVING COUNT(*) = 4;\t----- bird -----\tformula_1",
    "900": "SELECT c.name, c.location, r.name FROM circuits AS c JOIN races AS r ON c.circuitId = r.circuitId WHERE c.country = 'USA' AND r.year = 2006;\t----- bird -----\tformula_1",
    "901": "SELECT R.name, C.name AS circuit_name, C.location FROM races AS R JOIN circuits AS C ON R.circuitId = C.circuitId WHERE strftime('%Y', R.date) = '2005' AND strftime('%m', R.date) = '09';\t----- bird -----\tformula_1",
    "902": "SELECT T1.name FROM races AS T1 INNER JOIN results AS T2 ON T1.raceId = T2.raceId INNER JOIN drivers AS T3 ON T2.driverId = T3.driverId WHERE T3.forename = 'Alex' AND T3.surname = 'Yoong' AND T2.number < 20;\t----- bird -----\tformula_1",
    "903": "SELECT COUNT(*) FROM results WHERE driverId = (SELECT driverId FROM drivers WHERE forename = 'Michael' AND surname = 'Schumacher') AND raceId IN (SELECT raceId FROM races WHERE circuitId IN (SELECT circuitId FROM circuits WHERE name = 'Sepang International Circuit')) AND position = 1;\t----- bird -----\tformula_1",
    "904": "SELECT T1.name, T1.year FROM races AS T1 JOIN results AS T2 ON T1.raceId = T2.raceId WHERE T2.driverId = (SELECT driverId FROM drivers WHERE forename = 'Michael' AND surname = 'Schumacher') AND T2.fastestLap = 1;\t----- bird -----\tformula_1",
    "905": "SELECT AVG(T1.points) FROM results AS T1 INNER JOIN drivers AS T2 ON T1.driverId = T2.driverId INNER JOIN races AS T3 ON T1.raceId = T3.raceId WHERE T2.forename = 'Eddie' AND T2.surname = 'Irvine' AND T3.year = 2000;\t----- bird -----\tformula_1",
    "906": "SELECT T1.date, T2.points FROM races AS T1 JOIN results AS T2 ON T1.raceId = T2.raceId WHERE T2.driverId = (SELECT driverId FROM drivers WHERE forename = 'Lewis' AND surname = 'Hamilton') ORDER BY T1.date ASC LIMIT 1;\t----- bird -----\tformula_1",
    "907": "SELECT R.name, C.country FROM races AS R JOIN circuits AS C ON R.circuitId = C.circuitId WHERE R.year = 2017 ORDER BY R.date;\t----- bird -----\tformula_1",
    "908": "SELECT r.name, s.year, c.location FROM races r JOIN seasons s ON r.year = s.year JOIN circuits c ON r.circuitId = c.circuitId JOIN results rs ON r.raceId = rs.raceId GROUP BY r.raceId ORDER BY rs.laps DESC LIMIT 1;\t----- bird -----\tformula_1",
    "909": "SELECT CAST(SUM(CASE WHEN r.country = 'Germany' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(r.raceId) FROM races r WHERE r.country IN ('Austria', 'Belgium', 'France', 'Germany', 'Hungary', 'Italy', 'Monaco', 'Spain', 'Netherlands', 'Great Britain', 'Switzerland', 'Portugal', 'Czech Republic');\t----- bird -----\tformula_1",
    "910": "SELECT lat, lng FROM circuits WHERE name = 'Silverstone Circuit';\t----- bird -----\tformula_1",
    "911": "SELECT name FROM circuits WHERE name IN ('Silverstone Circuit', 'Hockenheimring', 'Hungaroring') ORDER BY lat DESC LIMIT 1;\t----- bird -----\tformula_1",
    "912": "SELECT circuitRef FROM circuits WHERE name = 'Marina Bay Street Circuit';\t----- bird -----\tformula_1",
    "913": "SELECT country FROM circuits ORDER BY alt DESC LIMIT 1;\t----- bird -----\tformula_1",
    "914": "SELECT count(*) FROM drivers WHERE code IS NULL;\t----- bird -----\tformula_1",
    "915": "SELECT T1.nationality FROM drivers AS T1 ORDER BY T1.dob LIMIT 1;\t----- bird -----\tformula_1",
    "916": "SELECT surname FROM drivers WHERE nationality = 'Italy';\t----- bird -----\tformula_1",
    "917": "SELECT url FROM drivers WHERE forename = 'Anthony' AND surname = 'Davidson';\t----- bird -----\tformula_1",
    "918": "SELECT driverRef FROM drivers WHERE forename = 'Lewis' AND surname = 'Hamilton';\t----- bird -----\tformula_1",
    "919": "SELECT T1.name FROM circuits AS T1 JOIN races AS T2 ON T1.circuitId = T2.circuitId WHERE T2.name = 'Spanish Grand Prix' AND T2.year = 2009;\t----- bird -----\tformula_1",
    "920": "SELECT DISTINCT T1.year FROM races AS T1 INNER JOIN circuits AS T2 ON T1.circuitId = T2.circuitId WHERE T2.circuitRef = 'Silverstone';\t----- bird -----\tformula_1",
    "921": "SELECT * FROM races WHERE circuitId IN (SELECT circuitId FROM circuits WHERE name = 'Silverstone Circuit');\t----- bird -----\tformula_1",
    "922": "SELECT time FROM races WHERE year = 2010 AND circuitId = (SELECT circuitId FROM circuits WHERE name = 'Abu Dhabi');\t----- bird -----\tformula_1",
    "923": "SELECT COUNT(r.raceId) FROM races r JOIN circuits c ON r.circuitId = c.circuitId WHERE c.country = 'Italy';\t----- bird -----\tformula_1",
    "924": "SELECT date FROM races WHERE circuitId = (SELECT circuitId FROM circuits WHERE name = 'Barcelona-Catalunya');\t----- bird -----\tformula_1",
    "925": "SELECT T1.url FROM circuits AS T1 JOIN races AS T2 ON T1.circuitId = T2.circuitId WHERE T2.name = \"Spanish Grand Prix\" AND T2.year = 2009;\t----- bird -----\tformula_1",
    "926": "SELECT MIN(fastestLapTime) FROM results WHERE driverId = (SELECT driverId FROM drivers WHERE forename = 'Lewis' AND surname = 'Hamilton');\t----- bird -----\tformula_1",
    "927": "SELECT T1.forename, T1.surname FROM drivers AS T1 JOIN results AS T2 ON T1.driverId = T2.driverId ORDER BY T2.fastestLapSpeed DESC LIMIT 1;\t----- bird -----\tformula_1",
    "928": "SELECT T1.driverRef FROM results AS T1 JOIN races AS T2 ON T1.raceId = T2.raceId WHERE T2.name = 'Canadian Grand Prix' AND T2.year = 2007 AND T1.position = 1;\t----- bird -----\tformula_1",
    "929": "SELECT T1.raceId FROM races AS T1 JOIN results AS T2 ON T1.raceId = T2.raceId JOIN drivers AS T3 ON T2.driverId = T3.driverId WHERE T3.forename = 'Lewis' AND T3.surname = 'Hamilton';\t----- bird -----\tformula_1",
    "930": "SELECT raceId FROM results WHERE driverId = (SELECT driverId FROM drivers WHERE forename = 'Lewis' AND surname = 'Hamilton') ORDER BY position ASC LIMIT 1;\t----- bird -----\tformula_1",
    "931": "SELECT MAX(fastestLapSpeed) FROM results WHERE raceId = (SELECT raceId FROM races WHERE year = 2009 AND name = 'Spanish Grand Prix');\t----- bird -----\tformula_1",
    "932": "SELECT DISTINCT T1.year FROM seasons AS T1 JOIN races AS T2 ON T1.year = T2.year JOIN results AS T3 ON T2.raceId = T3.raceId JOIN drivers AS T4 ON T3.driverId = T4.driverId WHERE T4.forename = 'Lewis' AND T4.surname = 'Hamilton';\t----- bird -----\tformula_1",
    "933": "SELECT rank FROM results WHERE raceId = (SELECT raceId FROM races WHERE name = 'Chinese Grand Prix' AND year = 2008) AND driverId = (SELECT driverId FROM drivers WHERE forename = 'Lewis' AND surname = 'Hamilton');\t----- bird -----\tformula_1",
    "934": "SELECT T1.forename, T1.surname FROM drivers AS T1 JOIN results AS T2 ON T1.driverId = T2.driverId WHERE T2.raceId = (SELECT raceId FROM races WHERE year = 1989 AND name = 'Australian Grand Prix') AND T2.grid = 4;\t----- bird -----\tformula_1",
    "935": "SELECT COUNT(DISTINCT driverId) FROM results WHERE raceId = (SELECT raceId FROM races WHERE name = 'Australian Grand Prix' AND year = 2008) AND positionText != 'Retired' AND positionText != 'Disqualified' AND positionText != 'DNF' AND positionText != 'Not Started';\t----- bird -----\tformula_1",
    "936": "SELECT time FROM lapTimes WHERE raceId = (SELECT raceId FROM races WHERE name = 'Australian Grand Prix' AND year = 2008) AND driverId = (SELECT driverId FROM drivers WHERE forename = 'Lewis' AND surname = 'Hamilton') ORDER BY time ASC LIMIT 1;\t----- bird -----\tformula_1",
    "937": "SELECT T1.time FROM results AS T1 JOIN races AS T2 ON T1.raceId = T2.raceId WHERE T2.name = 'AustChineseralian Grand Prix' AND T2.year = 2008 AND T1.position = 2;\t----- bird -----\tformula_1",
    "938": "SELECT T1.forename, T1.surname, T1.url FROM drivers AS T1 JOIN results AS T2 ON T1.driverId = T2.driverId WHERE T2.raceId = (SELECT raceId FROM races WHERE name = 'Australian Grand Prix' AND year = 2008) AND T2.positionText = '1st';\t----- bird -----\tformula_1",
    "939": "SELECT COUNT(T1.driverId) FROM drivers AS T1 INNER JOIN results AS T2 ON T1.driverId = T2.driverId INNER JOIN races AS T3 ON T2.raceId = T3.raceId WHERE T1.nationality = 'United Nations' AND T3.year = 2008 AND T3.name = 'Australian Grand Prix';\t----- bird -----\tformula_1",
    "940": "SELECT COUNT(DISTINCT T1.driverId) FROM results AS T1 INNER JOIN drivers AS T2 ON T1.driverId = T2.driverId WHERE T1.raceId = (SELECT raceId FROM races WHERE name = 'Chinese Grand Prix' AND year = 2008) AND T1.positionText != 'Retired' AND T1.positionText != 'DNF' AND T1.positionText != 'Did not start';\t----- bird -----\tformula_1",
    "941": "SELECT SUM(T1.points) FROM results AS T1 INNER JOIN drivers AS T2 ON T1.driverId = T2.driverId WHERE T2.forename = 'Lewis' AND T2.surname = 'Hamilton';\t----- bird -----\tformula_1",
    "942": "SELECT AVG(milliseconds / 1000.0) FROM lapTimes WHERE driverId IN (SELECT driverId FROM drivers WHERE forename = 'Lewis' AND surname = 'Hamilton');\t----- bird -----\tformula_1",
    "943": "SELECT CAST(SUM(CASE WHEN r.laps = r.position THEN 1 ELSE 0 END) AS REAL) / COUNT(DISTINCT r.driverId) FROM results r JOIN races race ON r.raceId = race.raceId WHERE race.year = 2008 AND race.name = 'Australian Grand Prix';\t----- bird -----\tformula_1",
    "944": "SELECT (T1.fastestLapTime * 100) / (T2.fastestLapTime * 100) FROM results AS T1 INNER JOIN results AS T2 ON T1.raceId = T2.raceId WHERE T1.raceId = 7 AND T1.rank = 1 AND T2.rank = 26;\t----- bird -----\tformula_1",
    "945": "SELECT count(*) FROM circuits WHERE location = 'Adelaide' AND country = 'Australia';\t----- bird -----\tformula_1",
    "946": "SELECT lat, lng FROM circuits WHERE country = 'USA';\t----- bird -----\tformula_1",
    "947": "SELECT COUNT(*) FROM drivers WHERE nationality = 'British' AND strftime('%Y', dob) > '1980';\t----- bird -----\tformula_1",
    "948": "SELECT MAX(points) FROM constructorResults WHERE constructorId IN (SELECT constructorId FROM constructors WHERE nationality = 'British');\t----- bird -----\tformula_1",
    "949": "SELECT constructorId FROM constructorResults ORDER BY points DESC LIMIT 1;\t----- bird -----\tformula_1",
    "950": "SELECT c.name FROM constructors c JOIN constructorResults cr ON c.constructorId = cr.constructorId WHERE cr.raceId = 291 AND cr.points = 0;\t----- bird -----\tformula_1",
    "951": "SELECT COUNT(DISTINCT c.constructorId) FROM constructors c JOIN constructorStandings cs ON c.constructorId = cs.constructorId WHERE c.nationality = 'Japanese' AND cs.points = 0 AND cs.raceId IN (SELECT raceId FROM races WHERE year = 2000) LIMIT 2;\t----- bird -----\tformula_1",
    "952": "SELECT DISTINCT constructorId FROM constructorStandings WHERE position = 1;\t----- bird -----\tformula_1",
    "953": "SELECT COUNT(DISTINCT c.constructorId) FROM constructors c JOIN lapTimes lt ON c.constructorId = lt.constructorId WHERE c.nationality = 'French' AND lt.lap > 50;\t----- bird -----\tformula_1",
    "954": "SELECT CAST(SUM(CASE WHEN r.statusId = 1 THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(r.raceId) FROM races r JOIN drivers d ON r.raceId = d.driverId JOIN seasons s ON r.year = s.year WHERE d.nationality = 'Japanese' AND s.year BETWEEN 2007 AND 2009;\t----- bird -----\tformula_1",
    "955": "SELECT AVG(T1.time / 1000) FROM results AS T1 INNER JOIN seasons AS T2 ON T1.raceId = T2.year WHERE T2.year < 1975 AND T1.position = 1;\t----- bird -----\tformula_1",
    "956": "SELECT forename, surname FROM drivers WHERE strftime('%Y', dob) > '1975' AND positionText = '2';\t----- bird -----\tformula_1",
    "957": "SELECT COUNT(T1.driverId) FROM drivers AS T1 INNER JOIN results AS T2 ON T1.driverId = T2.driverId WHERE T1.nationality = 'Italy' AND T2.statusId = 13;\t----- bird -----\tformula_1",
    "958": "SELECT T1.forename, T1.surname FROM drivers AS T1 JOIN lapTimes AS T2 ON T1.driverId = T2.driverId ORDER BY T2.time ASC LIMIT 2;\t----- bird -----\tformula_1",
    "959": "SELECT T1.lap FROM lapTimes AS T1 JOIN drivers AS T2 ON T1.driverId = T2.driverId JOIN races AS T3 ON T1.raceId = T3.raceId JOIN driverStandings AS T4 ON T2.driverId = T4.driverId WHERE T3.year = 2009 AND T4.position = 1 ORDER BY T1.time ASC LIMIT 1;\t----- bird -----\tformula_1",
    "960": "SELECT AVG(fastestLapSpeed) FROM results WHERE raceId IN (SELECT raceId FROM races WHERE year = 2009 AND name = 'Spanish Grand Prix');\t----- bird -----\tformula_1",
    "961": "SELECT r.name, r.year FROM races r JOIN results res ON r.raceId = res.raceId ORDER BY res.milliseconds ASC LIMIT 1;\t----- bird -----\tformula_1",
    "962": "SELECT CAST(SUM(CASE WHEN T1.year >= 2000 AND T1.year <= 2005 AND T2.dob < '1985-01-01' AND T3.lap > 50 THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(DISTINCT T2.driverId) FROM races AS T1 INNER JOIN lapTimes AS T3 ON T1.raceId = T3.raceId INNER JOIN drivers AS T2 ON T2.driverId = T3.driverId;\t----- bird -----\tformula_1",
    "963": "SELECT COUNT(T1.driverId) FROM drivers AS T1 JOIN lapTimes AS T2 ON T1.driverId = T2.driverId WHERE T1.nationality = 'France' AND T2.time < '02:00.00';\t----- bird -----\tformula_1",
    "964": "SELECT code FROM drivers WHERE nationality = 'America';\t----- bird -----\tformula_1",
    "965": "SELECT raceId FROM races WHERE year = 2009;\t----- bird -----\tformula_1",
    "966": "SELECT count(DISTINCT driverId) FROM results WHERE raceId = 18;\t----- bird -----\tformula_1",
    "967": "SELECT code, COUNT(*) FROM drivers WHERE driverId IN (SELECT driverId FROM drivers ORDER BY dob ASC LIMIT 3) AND nationality = 'Netherlands';\t----- bird -----\tformula_1",
    "968": "SELECT driverRef FROM drivers WHERE forename = 'Robert' AND surname = 'Kubica';\t----- bird -----\tformula_1",
    "969": "SELECT count(*) FROM drivers WHERE nationality = 'British' AND strftime('%Y', dob) = '1980';\t----- bird -----\tformula_1",
    "970": "SELECT T1.forename, T1.surname, MIN(T3.time) AS earliest_lap_time FROM drivers AS T1 INNER JOIN lapTimes AS T3 ON T1.driverId = T3.driverId WHERE T1.nationality = 'Germany' AND strftime('%Y', T1.dob) BETWEEN '1980' AND '1990' GROUP BY T1.driverId ORDER BY earliest_lap_time ASC LIMIT 3;\t----- bird -----\tformula_1",
    "971": "SELECT driverRef FROM drivers WHERE nationality = 'German' ORDER BY dob ASC LIMIT 1;\t----- bird -----\tformula_1",
    "972": "SELECT DISTINCT T1.driverId, T1.code FROM drivers AS T1 JOIN results AS T2 ON T1.driverId = T2.driverId WHERE strftime('%Y', T1.dob) = '1971' AND T2.fastestLapTime IS NOT NULL ORDER BY T2.fastestLapTime;\t----- bird -----\tformula_1",
    "973": "SELECT T1.driverId, T1.forename, T1.surname, T1.dob FROM drivers AS T1 JOIN lapTimes AS T2 ON T1.driverId = T2.driverId WHERE T1.nationality = 'Spain' AND T1.dob < '1982-01-01' ORDER BY T2.time DESC LIMIT 10;\t----- bird -----\tformula_1",
    "974": "SELECT year FROM seasons ORDER BY (SELECT MIN(fastestLapTime) FROM results) LIMIT 1;\t----- bird -----\tformula_1",
    "975": "SELECT year FROM races ORDER BY raceId LIMIT 1;\t----- bird -----\tformula_1",
    "976": "SELECT driverId FROM lapTimes WHERE raceId IN (SELECT raceId FROM races WHERE round = 1) ORDER BY time ASC LIMIT 5;\t----- bird -----\tformula_1",
    "977": "SELECT COUNT(T1.driverId) FROM results AS T1 INNER JOIN races AS T2 ON T1.raceId = T2.raceId WHERE T2.round BETWEEN 50 AND 100 AND T1.statusId = (SELECT statusId FROM status WHERE status = 'Disqualified');\t----- bird -----\tformula_1",
    "978": "SELECT COUNT(c.circuitId), c.location, c.lat, c.lng FROM circuits AS c JOIN races AS r ON c.circuitId = r.circuitId WHERE c.country = 'Austria' GROUP BY c.circuitId;\t----- bird -----\tformula_1",
    "979": "SELECT round FROM races ORDER BY raceId DESC LIMIT 1;\t----- bird -----\tformula_1",
    "980": "SELECT T1.forename, T1.surname, T1.nationality, T1.dob FROM drivers AS T1 JOIN qualifying AS T2 ON T1.driverId = T2.driverId WHERE T2.raceId = 23 AND T2.q2 IS NOT NULL;\t----- bird -----\tformula_1",
    "981": "SELECT T1.year, T2.name, T2.date, T2.time FROM seasons AS T1 JOIN races AS T2 ON T1.year = T2.year JOIN drivers AS T3 ON T3.driverId IN (SELECT driverId FROM drivers ORDER BY dob ASC LIMIT 1) JOIN qualifying AS T4 ON T4.raceId = T2.raceId AND T4.driverId = T3.driverId LIMIT 1;\t----- bird -----\tformula_1",
    "982": "SELECT COUNT(T1.driverId) FROM drivers AS T1 JOIN results AS T2 ON T1.driverId = T2.driverId JOIN status AS T3 ON T2.statusId = T3.statusId WHERE T1.nationality = 'USA' AND T3.status = 'Puncture';\t----- bird -----\tformula_1",
    "983": "SELECT T1.name, T1.url FROM constructors AS T1 WHERE T1.nationality = 'Italian' ORDER BY T1.points DESC LIMIT 1;\t----- bird -----\tformula_1",
    "984": "SELECT url FROM constructors ORDER BY (SELECT COUNT(*) FROM constructorStandings WHERE constructorStandings.constructorId = constructors.constructorId) DESC LIMIT 1;\t----- bird -----\tformula_1",
    "985": "SELECT T1.forename, T1.surname FROM drivers AS T1 JOIN results AS T2 ON T1.driverId = T2.driverId JOIN races AS T3 ON T2.raceId = T3.raceId WHERE T3.name = 'Monaco Grand Prix' AND T2.number IS NOT NULL AND T2.laps > 0 AND T2.milliseconds = (SELECT MIN(milliseconds) FROM lapTimes WHERE raceId = T2.raceId AND lap = 3);\t----- bird -----\tformula_1",
    "986": "SELECT raceId FROM lapTimes ORDER BY time ASC LIMIT 1;\t----- bird -----\tformula_1",
    "987": "SELECT AVG(fastestLapTime) FROM results WHERE raceId IN (SELECT raceId FROM races WHERE name = 'United States Grand Prix' AND year = 2006) ORDER BY position ASC LIMIT 10;\t----- bird -----\tformula_1",
    "988": "SELECT T1.forename, T1.surname, AVG(T3.duration) AS avg_pit_stop_duration FROM drivers AS T1 JOIN pitStops AS T2 ON T1.driverId = T2.driverId WHERE T1.nationality = 'German' AND T1.dob BETWEEN '1980-01-01' AND '1985-12-31' GROUP BY T1.driverId ORDER BY avg_pit_stop_duration ASC LIMIT 3;\t----- bird -----\tformula_1",
    "989": "SELECT T1.forename, T1.surname, T3.time FROM drivers AS T1 JOIN results AS T2 ON T1.driverId = T2.driverId JOIN races AS T3 ON T2.raceId = T3.raceId WHERE T3.name = 'Canadian Grand Prix' AND T3.year = 2008 AND T2.positionText = 'Winner';\t----- bird -----\tformula_1",
    "990": "SELECT T1.constructorRef, T1.url FROM constructors AS T1 JOIN constructorResults AS T2 ON T1.constructorId = T2.constructorId JOIN races AS T3 ON T2.raceId = T3.raceId WHERE T3.year = 2009 AND T3.name = 'Singapore Grand Prix' AND T2.points = (SELECT MAX(points) FROM constructorResults WHERE raceId = T2.raceId);\t----- bird -----\tformula_1",
    "991": "SELECT forename, surname, dob FROM drivers WHERE nationality = 'Austrian' AND strftime('%Y', dob) BETWEEN '1981' AND '1991';\t----- bird -----\tformula_1",
    "992": "SELECT forename, surname, dob, url FROM drivers WHERE nationality = 'Germany' AND strftime('%Y', dob) BETWEEN '1971' AND '1985' ORDER BY dob DESC;\t----- bird -----\tformula_1",
    "993": "SELECT location, country, lat, lng FROM circuits WHERE circuitRef = 'Hungaroring';\t----- bird -----\tformula_1",
    "994": "SELECT T1.points, T1.name, T1.nationality FROM constructors AS T1 JOIN constructorResults AS T2 ON T1.constructorId = T2.constructorId JOIN races AS T3 ON T2.raceId = T3.raceId WHERE T3.name = 'Monaco Grand Prix' AND T3.year BETWEEN 1980 AND 2010 GROUP BY T1.constructorId ORDER BY SUM(T2.points) DESC LIMIT 1;\t----- bird -----\tformula_1",
    "995": "SELECT AVG(R.points) FROM results AS R JOIN races AS Races ON R.raceId = Races.raceId JOIN circuits AS C ON Races.circuitId = C.circuitId WHERE C.name = 'Istanbul Park' AND R.driverId = (SELECT driverId FROM drivers WHERE forename = 'Lewis' AND surname = 'Hamilton');\t----- bird -----\tformula_1",
    "996": "SELECT AVG(race_count) FROM (SELECT COUNT(raceId) AS race_count FROM races WHERE year BETWEEN 2000 AND 2009 GROUP BY year) AS annual_race_counts;\t----- bird -----\tformula_1",
    "997": "SELECT nationality FROM drivers GROUP BY nationality ORDER BY COUNT(*) DESC LIMIT 1;\t----- bird -----\tformula_1",
    "998": "SELECT T1.wins FROM driverStandings AS T1 WHERE T1.position = 91;\t----- bird -----\tformula_1",
    "999": "SELECT T1.name FROM races AS T1 JOIN results AS T2 ON T1.raceId = T2.raceId ORDER BY T2.fastestLapSpeed DESC LIMIT 1;\t----- bird -----\tformula_1",
    "1000": "SELECT location FROM circuits ORDER BY year DESC LIMIT 1;\t----- bird -----\tformula_1",
    "1001": "SELECT T1.forename, T1.surname FROM drivers AS T1 JOIN qualifying AS T2 ON T1.driverId = T2.driverId JOIN races AS T3 ON T2.raceId = T3.raceId JOIN circuits AS T4 ON T3.circuitId = T4.circuitId WHERE T4.name = 'Marina Bay Street Circuit' AND T3.year = 2008 AND T2.position = 1;\t----- bird -----\tformula_1",
    "1002": "SELECT d.forename, d.surname, d.nationality, r.name FROM drivers d JOIN results r ON d.driverId = r.driverId WHERE d.dob = (SELECT MIN(dob) FROM drivers) LIMIT 1;\t----- bird -----\tformula_1",
    "1003": "SELECT COUNT(*) FROM results WHERE driverId IN (SELECT driverId FROM results WHERE raceId IN (SELECT raceId FROM races WHERE name = 'Canadian Grand Prix' AND year = (SELECT MAX(year) FROM races WHERE name = 'Canadian Grand Prix')) GROUP BY driverId ORDER BY COUNT(*) DESC LIMIT 1) AND statusId = (SELECT statusId FROM status WHERE status = 'Accident');\t----- bird -----\tformula_1",
    "1004": "SELECT T1.wins, T1.forename, T1.surname FROM drivers AS T1 JOIN driverStandings AS T2 ON T1.driverId = T2.driverId ORDER BY T1.dob ASC LIMIT 1;\t----- bird -----\tformula_1",
    "1005": "SELECT MAX(duration) FROM pitStops;\t----- bird -----\tformula_1",
    "1006": "SELECT MIN(milliseconds) FROM lapTimes;\t----- bird -----\tformula_1",
    "1007": "SELECT MAX(duration) FROM pitStops WHERE driverId = (SELECT driverId FROM drivers WHERE forename = 'Lewis' AND surname = 'Hamilton');\t----- bird -----\tformula_1",
    "1008": "SELECT lap FROM pitStops WHERE raceId = (SELECT raceId FROM races WHERE name = 'Australian Grand Prix' AND year = 2011) AND driverId = (SELECT driverId FROM drivers WHERE forename = 'Lewis' AND surname = 'Hamilton');\t----- bird -----\tformula_1",
    "1009": "SELECT T1.time, T1.duration FROM pitStops AS T1 JOIN races AS T2 ON T1.raceId = T2.raceId WHERE T2.year = 2011 AND T2.name = 'Australia';\t----- bird -----\tformula_1",
    "1010": "SELECT MIN(time) FROM lapTimes WHERE driverId = (SELECT driverId FROM drivers WHERE forename = 'Lewis' AND surname = 'Hamilton');\t----- bird -----\tformula_1",
    "1011": "SELECT DISTINCT T1.forename, T1.surname FROM drivers AS T1 JOIN lapTimes AS T2 ON T1.driverId = T2.driverId ORDER BY T2.milliseconds ASC LIMIT 20;\t----- bird -----\tformula_1",
    "1012": "SELECT T1.position FROM results AS T1 JOIN drivers AS T2 ON T1.driverId = T2.driverId WHERE T2.forename = 'Lewis' AND T2.surname = 'Hamilton' AND T1.fastestLap = 1;\t----- bird -----\tformula_1",
    "1013": "SELECT min(milliseconds) FROM lapTimes WHERE raceId IN (SELECT raceId FROM races WHERE circuitId IN (SELECT circuitId FROM circuits WHERE name = 'Red Bull Ring'));\t----- bird -----\tformula_1",
    "1014": "SELECT T1.raceId, T1.driverId, T1.lap, T1.position, T1.time, T1.milliseconds FROM lapTimes AS T1 JOIN circuits AS T2 ON T1.raceId = T2.circuitId WHERE T2.country = 'Italy';\t----- bird -----\tformula_1",
    "1015": "SELECT T1.name FROM races AS T1 JOIN circuits AS T2 ON T1.circuitId = T2.circuitId WHERE T2.name = 'Austrian Grand Prix Circuit' ORDER BY T1.date LIMIT 1;\t----- bird -----\tformula_1",
    "1016": "SELECT T1.duration FROM pitStops AS T1 JOIN races AS T2 ON T1.raceId = T2.raceId JOIN circuits AS T3 ON T2.circuitId = T3.circuitId WHERE T3.name = 'Austrian Grand Prix Circuit' AND T1.raceId IN (SELECT raceId FROM lapTimes ORDER BY time ASC LIMIT 1);\t----- bird -----\tformula_1",
    "1017": "SELECT lat, lng FROM circuits WHERE circuitId IN (SELECT circuitId FROM lapTimes WHERE time = '1:29.488');\t----- bird -----\tformula_1",
    "1018": "SELECT AVG(milliseconds) FROM pitStops WHERE driverId = (SELECT driverId FROM drivers WHERE forename = 'Lewis' AND surname = 'Hamilton');\t----- bird -----\tformula_1",
    "1019": "SELECT AVG(milliseconds) FROM lapTimes JOIN races ON lapTimes.raceId = races.raceId JOIN circuits ON races.circuitId = circuits.circuitId WHERE circuits.country = 'Italy';\t----- bird -----\tformula_1",
    "1020": "SELECT player_api_id FROM Player_Attributes ORDER BY overall_rating DESC LIMIT 1;\t----- bird -----\teuropean_football_2",
    "1021": "SELECT player_name, height FROM Player ORDER BY height DESC LIMIT 1;\t----- bird -----\teuropean_football_2",
    "1022": "SELECT preferred_foot FROM Player_Attributes ORDER BY potential LIMIT 1;\t----- bird -----\teuropean_football_2",
    "1023": "SELECT COUNT(*) FROM Player_Attributes WHERE overall_rating BETWEEN 60 AND 65 AND attacking_work_rate = 'attack';\t----- bird -----\teuropean_football_2",
    "1024": "SELECT player_fifa_api_id FROM Player_Attributes ORDER BY crossing DESC LIMIT 5;\t----- bird -----\teuropean_football_2",
    "1025": "SELECT L.name FROM League AS L JOIN Match AS M ON L.id = M.league_id WHERE M.season = 2016 ORDER BY M.goal DESC LIMIT 1;\t----- bird -----\teuropean_football_2",
    "1026": "SELECT home_team_api_id FROM Match WHERE season = 2016 AND home_team_goal < away_team_goal GROUP BY home_team_api_id ORDER BY COUNT(*) LIMIT 1;\t----- bird -----\teuropean_football_2",
    "1027": "SELECT player_name FROM Player ORDER BY penalties DESC LIMIT 10;\t----- bird -----\teuropean_football_2",
    "1028": "SELECT T1.team_long_name FROM Match AS T1 INNER JOIN League AS T2 ON T1.league_id = T2.id INNER JOIN Country AS T3 ON T2.country_id = T3.id WHERE T3.name = 'Scotland' AND T2.name = 'Premier League' AND T1.season = 2010 AND T1.away_team_goal > T1.home_team_goal GROUP BY T1.team_long_name ORDER BY COUNT(*) DESC LIMIT 1;\t----- bird -----\teuropean_football_2",
    "1029": "SELECT buildUpPlaySpeed FROM Team_Attributes ORDER BY buildUpPlaySpeed DESC LIMIT 4;\t----- bird -----\teuropean_football_2",
    "1030": "SELECT L.name FROM League L JOIN Match M ON L.id = M.league_id WHERE M.season = 2016 AND M.home_team_goal = M.away_team_goal GROUP BY L.id ORDER BY COUNT(*) DESC LIMIT 1;\t----- bird -----\teuropean_football_2",
    "1031": "SELECT CAST((JULIANDAY('now') - JULIANDAY(birthday)) / 365.25 AS INTEGER) FROM Player WHERE sprint_speed >= 97 AND birthday BETWEEN '1998-01-01' AND '2013-01-01';\t----- bird -----\teuropean_football_2",
    "1032": "SELECT L.name, COUNT(M.id) FROM League AS L JOIN Match AS M ON L.id = M.league_id GROUP BY L.id ORDER BY COUNT(M.id) DESC LIMIT 1;\t----- bird -----\teuropean_football_2",
    "1033": "SELECT AVG(height) FROM Player WHERE birthday BETWEEN '1990-01-01' AND '1995-12-31';\t----- bird -----\teuropean_football_2",
    "1034": "SELECT player_api_id FROM Player_Attributes WHERE date = '2010-01-01' ORDER BY overall_rating DESC LIMIT 1;\t----- bird -----\teuropean_football_2",
    "1035": "SELECT team_fifa_api_id FROM Team_Attributes WHERE buildUpPlaySpeed > 50 AND buildUpPlaySpeed < 60;\t----- bird -----\teuropean_football_2",
    "1036": "SELECT team_long_name FROM Team_Attributes WHERE date = 2012 AND buildUpPlayPassingClass > AVG(buildUpPlayPassingClass) GROUP BY team_long_name;\t----- bird -----\teuropean_football_2",
    "1037": "SELECT CAST(SUM(CASE WHEN preferred_foot = 'Left' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(*) FROM Player_Attributes WHERE player_fifa_api_id IN (SELECT player_fifa_api_id FROM Player WHERE birthday BETWEEN '1987-01-01' AND '1992-12-31');\t----- bird -----\teuropean_football_2",
    "1038": "SELECT T1.name FROM League AS T1 JOIN Match AS T2 ON T1.id = T2.league_id GROUP BY T1.id ORDER BY COUNT(T2.goal) ASC LIMIT 5;\t----- bird -----\teuropean_football_2",
    "1039": "SELECT AVG(PA.long_shots) FROM Player_Attributes AS PA JOIN Player AS P ON PA.player_fifa_api_id = P.player_fifa_api_id WHERE P.player_name = \"Ahmed Samir Farag\";\t----- bird -----\teuropean_football_2",
    "1040": "SELECT P.player_name FROM Player AS P JOIN Player_Attributes AS PA ON P.player_api_id = PA.player_api_id WHERE P.height > 180 GROUP BY P.player_name ORDER BY AVG(PA.heading_accuracy) DESC LIMIT 10;\t----- bird -----\teuropean_football_2",
    "1041": "SELECT team_long_name FROM Team_Attributes WHERE buildUpPlayDribblingClass = 'Normal' AND date = 2014 ORDER BY chanceCreationPassing DESC;\t----- bird -----\teuropean_football_2",
    "1042": "SELECT DISTINCT L.name FROM League AS L JOIN Match AS M ON L.id = M.league_id WHERE M.season = '2009/2010' AND M.home_team_goal > M.away_team_goal;\t----- bird -----\teuropean_football_2",
    "1043": "SELECT team_short_name FROM Team WHERE team_long_name = 'Queens Park Rangers';\t----- bird -----\teuropean_football_2",
    "1044": "SELECT * FROM Player WHERE strftime('%Y', birthday) = '1970' AND strftime('%m', birthday) = '10';\t----- bird -----\teuropean_football_2",
    "1045": "SELECT T1.attacking_work_rate FROM Player_Attributes AS T1 INNER JOIN Player AS T2 ON T1.player_fifa_api_id = T2.player_fifa_api_id WHERE T2.player_name = 'Franco Zennaro';\t----- bird -----\teuropean_football_2",
    "1046": "SELECT Team_Attributes.defenceTeamWidthClass FROM Team_Attributes JOIN Team ON Team.team_api_id = Team_Attributes.team_api_id WHERE Team.team_short_name = 'ADO Den Haag' LIMIT 2;\t----- bird -----\teuropean_football_2",
    "1047": "SELECT finishing FROM Player_Attributes WHERE player_name = 'Francois Affolter' AND date = '2014-09-18';\t----- bird -----\teuropean_football_2",
    "1048": "SELECT T1.overall_rating FROM Player_Attributes AS T1 JOIN Player AS T2 ON T1.player_fifa_api_id = T2.player_fifa_api_id WHERE T2.player_name = 'Gabriel Tamas' AND STRFTIME('%Y', T1.date) = '2011';\t----- bird -----\teuropean_football_2",
    "1049": "SELECT count(*) FROM Match WHERE season = '2015/2016' AND league_id IN (SELECT id FROM League WHERE name = 'Scottish Premier League') AND country_id IN (SELECT id FROM Country WHERE name = 'Scotland');\t----- bird -----\teuropean_football_2",
    "1050": "SELECT T1.preferred_foot FROM Player_Attributes AS T1 JOIN Player AS T2 ON T1.player_fifa_api_id = T2.player_fifa_api_id ORDER BY T2.birthday ASC LIMIT 1;\t----- bird -----\teuropean_football_2",
    "1051": "SELECT player_name FROM Player_Attributes ORDER BY potential DESC LIMIT 1;\t----- bird -----\teuropean_football_2",
    "1052": "SELECT count(*) FROM Player_Attributes pa JOIN Player p ON pa.player_fifa_api_id = p.player_fifa_api_id WHERE p.weight < 130 AND pa.preferred_foot = 'Left';\t----- bird -----\teuropean_football_2",
    "1053": "SELECT team_short_name FROM Team_Attributes WHERE buildUpPlayPassingClass = 'Risky';\t----- bird -----\teuropean_football_2",
    "1054": "SELECT T1.defensive_work_rate FROM Player_Attributes AS T1 JOIN Player AS T2 ON T1.player_fifa_api_id = T2.player_fifa_api_id WHERE T2.player_name = \"David Wilson\";\t----- bird -----\teuropean_football_2",
    "1055": "SELECT birthday FROM Player ORDER BY Player_Attributes.overall_rating DESC LIMIT 1;\t----- bird -----\teuropean_football_2",
    "1056": "SELECT T1.name FROM League AS T1 JOIN Country AS T2 ON T1.country_id = T2.id WHERE T2.name = 'Netherlands';\t----- bird -----\teuropean_football_2",
    "1057": "SELECT AVG(home_team_goal) FROM Match WHERE country_id = (SELECT id FROM Country WHERE name = 'Poland') AND season = '2010/2011';\t----- bird -----\teuropean_football_2",
    "1058": "SELECT T1.player_name FROM Player AS T1 JOIN Player_Attributes AS T2 ON T1.player_fifa_api_id = T2.player_fifa_api_id ORDER BY T1.height DESC, T1.height ASC LIMIT 1;\t----- bird -----\teuropean_football_2",
    "1059": "SELECT player_name FROM Player WHERE height > 180;\t----- bird -----\teuropean_football_2",
    "1060": "SELECT COUNT(*) FROM Player WHERE birthday > '1990-12-31';\t----- bird -----\teuropean_football_2",
    "1061": "SELECT count(*) FROM Player WHERE player_name LIKE 'Adam%' AND weight > 170;\t----- bird -----\teuropean_football_2",
    "1062": "SELECT T1.player_name FROM Player AS T1 JOIN Player_Attributes AS T2 ON T1.player_fifa_api_id = T2.player_fifa_api_id WHERE T2.overall_rating > 80 AND T2.date BETWEEN '2008-01-01' AND '2010-12-31';\t----- bird -----\teuropean_football_2",
    "1063": "SELECT potential FROM Player_Attributes WHERE player_name = 'Aaron Doran' ORDER BY date DESC LIMIT 1;\t----- bird -----\teuropean_football_2",
    "1064": "SELECT player_name FROM Player_Attributes WHERE preferred_foot = 'Left';\t----- bird -----\teuropean_football_2",
    "1065": "SELECT team_long_name FROM Team_Attributes WHERE buildUpPlaySpeedClass = 'Fast';\t----- bird -----\teuropean_football_2",
    "1066": "SELECT buildUpPlayPassingClass FROM Team_Attributes WHERE team_long_name = 'CLB' LIMIT 1;\t----- bird -----\teuropean_football_2",
    "1067": "SELECT team_short_name FROM Team_Attributes WHERE buildUpPlayPassing > 70;\t----- bird -----\teuropean_football_2",
    "1068": "SELECT AVG(overall_rating) FROM Player_Attributes WHERE height > 170 AND date BETWEEN '2010-01-01' AND '2015-12-31';\t----- bird -----\teuropean_football_2",
    "1069": "SELECT player_name FROM Player ORDER BY height ASC LIMIT 1;\t----- bird -----\teuropean_football_2",
    "1070": "SELECT T1.name FROM Country AS T1 JOIN League AS T2 ON T1.id = T2.country_id WHERE T2.name = 'Italy Serie A';\t----- bird -----\teuropean_football_2",
    "1071": "SELECT team_short_name FROM Team_Attributes WHERE buildUpPlaySpeed = 31 AND buildUpPlayDribbling = 53 AND buildUpPlayPassing = 32;\t----- bird -----\teuropean_football_2",
    "1072": "SELECT AVG(overall_rating) FROM Player_Attributes WHERE player_api_id IN (SELECT player_api_id FROM Player WHERE player_name = 'Aaron Doran');\t----- bird -----\teuropean_football_2",
    "1073": "SELECT count(*) FROM Match WHERE league_id = (SELECT id FROM League WHERE name = 'Germany 1. Bundesliga') AND date BETWEEN '2008-08-01' AND '2008-10-31';\t----- bird -----\teuropean_football_2",
    "1074": "SELECT T1.team_short_name FROM Team AS T1 JOIN Match AS T2 ON T1.team_api_id = T2.home_team_api_id WHERE T2.home_team_goal = 10;\t----- bird -----\teuropean_football_2",
    "1075": "SELECT player_name FROM Player_Attributes WHERE balance = (SELECT MAX(balance) FROM Player_Attributes) AND potential = 61;\t----- bird -----\teuropean_football_2",
    "1076": "SELECT ABS(AVG(CASE WHEN player_name = 'Abdou Diallo' THEN overall_rating ELSE NULL END) - AVG(CASE WHEN player_name = 'Aaron Appindangoye' THEN overall_rating ELSE NULL END)) FROM Player_Attributes;\t----- bird -----\teuropean_football_2",
    "1077": "SELECT team_long_name FROM Team WHERE team_short_name = 'GEN';\t----- bird -----\teuropean_football_2",
    "1078": "SELECT player_name FROM Player WHERE player_name IN ('Aaron Lennon', 'Abdelaziz Barrada') ORDER BY birthday ASC LIMIT 2;\t----- bird -----\teuropean_football_2",
    "1079": "SELECT player_name FROM Player ORDER BY height DESC LIMIT 1;\t----- bird -----\teuropean_football_2",
    "1080": "SELECT COUNT(DISTINCT player_fifa_api_id) FROM Player_Attributes WHERE preferred_foot = 'Left';\t----- bird -----\teuropean_football_2",
    "1081": "SELECT T1.name FROM Country AS T1 JOIN League AS T2 ON T1.id = T2.country_id WHERE T2.name = 'Jupiler League';\t----- bird -----\teuropean_football_2",
    "1082": "SELECT L.name FROM League AS L JOIN Country AS C ON L.country_id = C.id WHERE C.name = 'Germany';\t----- bird -----\teuropean_football_2",
    "1083": "SELECT player_name FROM Player_Attributes ORDER BY strength DESC LIMIT 1;\t----- bird -----\teuropean_football_2",
    "1084": "SELECT COUNT(DISTINCT P.id) FROM Player AS P JOIN Player_Attributes AS PA ON P.id = PA.player_fifa_api_id WHERE strftime('%Y', P.birthday) < '1986' AND PA.defensive_work_rate > 70 AND PA.attacking_work_rate < 30;\t----- bird -----\teuropean_football_2",
    "1085": "SELECT player_name FROM Player WHERE player_name IN ('Alexis', 'Ariel Borysiuk', 'Arouna Kone') ORDER BY crossing DESC LIMIT 1;\t----- bird -----\teuropean_football_2",
    "1086": "SELECT heading_accuracy FROM Player_Attributes WHERE player_name = 'Ariel Borysiuk' LIMIT 1;\t----- bird -----\teuropean_football_2",
    "1087": "SELECT COUNT(Player.id) FROM Player INNER JOIN Player_Attributes ON Player.id = Player_Attributes.player_fifa_api_id WHERE Player.height > 180 AND Player_Attributes.volleys > 70;\t----- bird -----\teuropean_football_2",
    "1088": "SELECT p.player_name FROM Player AS p JOIN Player_Attributes AS pa ON p.player_api_id = pa.player_api_id WHERE pa.volleys > 70 AND pa.dribbling > 70;\t----- bird -----\teuropean_football_2",
    "1089": "SELECT COUNT(*) FROM Match WHERE season = '2008/2009' AND country_id = (SELECT id FROM Country WHERE name = 'Belgium');\t----- bird -----\teuropean_football_2",
    "1090": "SELECT T1.long_passing FROM Player_Attributes AS T1 JOIN Player AS T2 ON T1.player_fifa_api_id = T2.player_fifa_api_id ORDER BY T2.birthday ASC LIMIT 1;\t----- bird -----\teuropean_football_2",
    "1091": "SELECT count(*) FROM Match WHERE league_id IN (SELECT id FROM League WHERE name = 'Jupiler Pro League' AND country_id IN (SELECT id FROM Country WHERE name = 'Belgium')) AND strftime('%Y', date) = '2009' AND strftime('%m', date) BETWEEN '04' AND '04';\t----- bird -----\teuropean_football_2",
    "1092": "SELECT name FROM League WHERE id IN (SELECT league_id FROM Match WHERE season = '2008/2009' GROUP BY league_id ORDER BY COUNT(*) DESC LIMIT 1);\t----- bird -----\teuropean_football_2",
    "1093": "SELECT AVG(pa.overall_rating) FROM Player_Attributes pa JOIN Player p ON pa.player_fifa_api_id = p.player_fifa_api_id WHERE strftime('%Y', p.birthday) < '1986';\t----- bird -----\teuropean_football_2",
    "1094": "SELECT (A.overall_rating - B.overall_rating) * 100.0 / B.overall_rating FROM Player_Attributes AS A JOIN Player_Attributes AS B ON A.player_fifa_api_id = 112330 AND B.player_name = 'Paulin Puel';\t----- bird -----\teuropean_football_2",
    "1095": "SELECT AVG(buildUpPlaySpeed) FROM Team_Attributes WHERE team_long_name = 'Heart of Midlothian';\t----- bird -----\teuropean_football_2",
    "1096": "SELECT AVG(overall_rating) FROM Player_Attributes WHERE player_api_id IN (SELECT player_api_id FROM Player WHERE player_name = 'Pietro Marino');\t----- bird -----\teuropean_football_2",
    "1097": "SELECT SUM(Crossing) FROM Player_Attributes WHERE player_name = 'Aaron Lennox';\t----- bird -----\teuropean_football_2",
    "1098": "SELECT chanceCreationPassing, chanceCreationPassingClass FROM Team_Attributes WHERE team_long_name = \"Ajax\" ORDER BY chanceCreationPassing DESC LIMIT 1;\t----- bird -----\teuropean_football_2",
    "1099": "SELECT preferred_foot FROM Player_Attributes WHERE player_fifa_api_id IN (SELECT player_fifa_api_id FROM Player WHERE player_name = 'Abdou Diallo') LIMIT 1;\t----- bird -----\teuropean_football_2",
    "1100": "SELECT MAX(overall_rating) FROM Player_Attributes WHERE player_api_id = (SELECT player_api_id FROM Player WHERE player_name = 'Dorlan Pabon');\t----- bird -----\teuropean_football_2",
    "1101": "SELECT AVG(Match.away_team_goal) FROM Match JOIN League ON Match.league_id = League.id JOIN Country ON League.country_id = Country.id WHERE Country.name = 'Italy' AND Match.away_team_api_id IN (SELECT team_api_id FROM Team WHERE team_long_name = 'Parma');\t----- bird -----\teuropean_football_2",
    "1102": "SELECT p.player_name FROM Player_Attributes pa JOIN Player p ON pa.player_fifa_api_id = p.player_fifa_api_id WHERE pa.overall_rating = 77 AND pa.date = '2016-06-23' ORDER BY p.birthday ASC LIMIT 1;\t----- bird -----\teuropean_football_2",
    "1103": "SELECT overall_rating FROM Player_Attributes WHERE player_name = 'Aaron Mooy' AND date = '2016-02-04';\t----- bird -----\teuropean_football_2",
    "1104": "SELECT potential FROM Player_Attributes WHERE player_name = 'Francesco Parravicini' AND date = '2010-08-30';\t----- bird -----\teuropean_football_2",
    "1105": "SELECT attacking_work_rate FROM Player_Attributes WHERE player_name = 'Francesco Migliore' AND date = '2015-05-01';\t----- bird -----\teuropean_football_2",
    "1106": "SELECT defensive_work_rate FROM Player_Attributes WHERE player_name = \"Kevin Berigaud\" AND date = \"2013-02-22\";\t----- bird -----\teuropean_football_2",
    "1107": "SELECT date FROM Player_Attributes WHERE player_name = 'Kevin Constant' ORDER BY crossing DESC LIMIT 1;\t----- bird -----\teuropean_football_2",
    "1108": "SELECT buildUpPlaySpeedClass FROM Team_Attributes WHERE team_long_name = \"Willem II\" AND date = \"2011-02-22\";\t----- bird -----\teuropean_football_2",
    "1109": "SELECT buildUpPlayDribblingClass FROM Team_Attributes WHERE team_fifa_api_id = 'LEI' AND date = '2015-09-10';\t----- bird -----\teuropean_football_2",
    "1110": "SELECT buildUpPlayPassingClass FROM Team_Attributes WHERE team_long_name = \"FC Lorient\" AND date = \"2010-02-22\";\t----- bird -----\teuropean_football_2",
    "1111": "SELECT buildUpPlayPassingClass FROM Team_Attributes WHERE team_long_name = \"PEC Zwolle\" AND date = \"2013-09-20\";\t----- bird -----\teuropean_football_2",
    "1112": "SELECT chanceCreationCrossingClass FROM Team_Attributes WHERE team_long_name = \"Hull City\" AND date = \"2010-02-22\";\t----- bird -----\teuropean_football_2",
    "1113": "SELECT defenceAggressionClass FROM Team_Attributes WHERE team_long_name = \"Hannover 96\" AND date = \"2015-09-10\";\t----- bird -----\teuropean_football_2",
    "1114": "SELECT AVG(overall_rating) FROM Player_Attributes WHERE player_name = \"Marko Arnautovic\" AND date BETWEEN \"2007-02-22\" AND \"2016-04-21\";\t----- bird -----\teuropean_football_2",
    "1115": "SELECT (CAST((SELECT overall_rating FROM Player_Attributes WHERE player_name = 'Landon Donovan' AND date = '2013-07-12') AS REAL) - CAST((SELECT overall_rating FROM Player_Attributes WHERE player_name = 'Jordan Bowery' AND date = '2013-07-12') AS REAL)) / CAST((SELECT overall_rating FROM Player_Attributes WHERE player_name = 'Jordan Bowery' AND date = '2013-07-12') AS REAL) * 100;\t----- bird -----\teuropean_football_2",
    "1116": "SELECT player_name FROM Player ORDER BY height DESC LIMIT 10;\t----- bird -----\teuropean_football_2",
    "1117": "SELECT player_api_id FROM Player ORDER BY weight DESC LIMIT 10;\t----- bird -----\teuropean_football_2",
    "1118": "SELECT player_name FROM Player WHERE strftime('%Y', 'now') - strftime('%Y', birthday) >= 35;\t----- bird -----\teuropean_football_2",
    "1119": "SELECT SUM(M.home_team_goal) FROM Player AS P JOIN Match AS M ON P.player_api_id = M.home_player_X1 OR P.player_api_id = M.home_player_X2 OR P.player_api_id = M.home_player_X3 OR P.player_api_id = M.home_player_X4 OR P.player_api_id = M.home_player_X5 OR P.player_api_id = M.home_player_X6 OR P.player_api_id = M.home_player_X7 OR P.player_api_id = M.home_player_X8 OR P.player_api_id = M.home_player_X9 OR P.player_api_id = M.home_player_X10 OR P.player_api_id = M.home_player_X11 WHERE P.player_name = 'Aaron Lennon';\t----- bird -----\teuropean_football_2",
    "1120": "SELECT SUM(T1.away_team_goal) FROM Match AS T1 JOIN Player AS T2 ON T2.player_api_id = T1.away_player_X1 WHERE T2.player_name = 'Daan Smith' OR T2.player_name = 'Filipe Ferreira';\t----- bird -----\teuropean_football_2",
    "1121": "SELECT SUM(T1.home_team_goal) FROM Match AS T1 JOIN Player AS T2 ON T1.home_player_X1 = T2.player_fifa_api_id WHERE strftime('%Y', 'now') - strftime('%Y', T2.birthday) <= 30;\t----- bird -----\teuropean_football_2",
    "1122": "SELECT p.player_name FROM Player p JOIN Player_Attributes pa ON p.player_api_id = pa.player_api_id ORDER BY pa.overall_rating DESC LIMIT 1;\t----- bird -----\teuropean_football_2",
    "1123": "SELECT player_name FROM Player ORDER BY potential DESC LIMIT 1;\t----- bird -----\teuropean_football_2",
    "1124": "SELECT DISTINCT T1.player_name FROM Player AS T1 JOIN Player_Attributes AS T2 ON T1.id = T2.player_fifa_api_id WHERE T2.attacking_work_rate > 70;\t----- bird -----\teuropean_football_2",
    "1125": "SELECT P.player_name FROM Player P JOIN Player_Attributes PA ON P.player_api_id = PA.player_api_id WHERE PA.finishing = 1 ORDER BY P.birthday ASC LIMIT 1;\t----- bird -----\teuropean_football_2",
    "1126": "SELECT p.player_name FROM Player AS p JOIN Country AS c ON p.country_id = c.id WHERE c.name = 'Belgium';\t----- bird -----\teuropean_football_2",
    "1127": "SELECT T1.name FROM Country AS T1 JOIN Player AS T2 ON T1.id = T2.country_id JOIN Player_Attributes AS T3 ON T2.id = T3.player_fifa_api_id WHERE T3.vision >= 90;\t----- bird -----\teuropean_football_2",
    "1128": "SELECT T1.name FROM Country AS T1 JOIN Player AS T2 ON T1.id = T2.country_id ORDER BY AVG(T2.weight) DESC LIMIT 1;\t----- bird -----\teuropean_football_2",
    "1129": "SELECT T1.team_long_name FROM Team_Attributes AS T1 WHERE T1.buildUpPlaySpeedClass = 'Slow';\t----- bird -----\teuropean_football_2",
    "1130": "SELECT T1.team_short_name FROM Team AS T1 JOIN Team_Attributes AS T2 ON T1.team_api_id = T2.team_api_id WHERE T2.chanceCreationPassingClass = 'Safe Passing';\t----- bird -----\teuropean_football_2",
    "1131": "SELECT AVG(P.height) FROM Player AS P JOIN Country AS C ON P.country_id = C.id WHERE C.name = 'Italy';\t----- bird -----\teuropean_football_2",
    "1132": "SELECT player_name FROM Player WHERE height > 180 ORDER BY player_name ASC LIMIT 3;\t----- bird -----\teuropean_football_2",
    "1133": "SELECT COUNT(*) FROM Player WHERE strftime('%Y', birthday) > '1990' AND player_name = 'Aaron';\t----- bird -----\teuropean_football_2",
    "1134": "SELECT ABS(CAST(SUM(CASE WHEN player_fifa_api_id = 6 THEN Player_Attributes.jumping ELSE 0 END) AS REAL) - CAST(SUM(CASE WHEN player_fifa_api_id = 23 THEN Player_Attributes.jumping ELSE 0 END) AS REAL)) FROM Player_Attributes;\t----- bird -----\teuropean_football_2",
    "1135": "SELECT player_fifa_api_id FROM Player_Attributes WHERE preferred_foot = 'Right' ORDER BY potential ASC LIMIT 5;\t----- bird -----\teuropean_football_2",
    "1136": "SELECT COUNT(*) FROM Player_Attributes WHERE crossing = (SELECT MAX(crossing) FROM Player_Attributes) AND preferred_foot = 'Left';\t----- bird -----\teuropean_football_2",
    "1137": "SELECT CAST(SUM(CASE WHEN strength > 80 AND stamina > 80 THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(*) AS percentage FROM Player_Attributes;\t----- bird -----\teuropean_football_2",
    "1138": "SELECT T1.name FROM Country AS T1 JOIN League AS T2 ON T1.id = T2.country_id WHERE T2.name = \"Ekstraklasa\" AND T1.name = \"Poland\";\t----- bird -----\teuropean_football_2",
    "1139": "SELECT home_team_goal, away_team_goal FROM Match WHERE date = '2008-09-24' AND league_id IN (SELECT id FROM League WHERE name = 'Jupiler League' AND country_id IN (SELECT id FROM Country WHERE name = 'Belgium'));\t----- bird -----\teuropean_football_2",
    "1140": "SELECT T1.sprint_speed, T1.agility, T1.acceleration FROM Player_Attributes AS T1 JOIN Player AS T2 ON T1.player_fifa_api_id = T2.player_fifa_api_id WHERE T2.player_name = 'Alexis Blin';\t----- bird -----\teuropean_football_2",
    "1141": "SELECT buildUpPlaySpeedClass FROM Team_Attributes WHERE team_long_name = 'KSV Cercle Brugge' LIMIT 1;\t----- bird -----\teuropean_football_2",
    "1142": "SELECT COUNT(*) FROM Match WHERE league_id = (SELECT id FROM League WHERE name = 'Serie A' AND country_id = (SELECT id FROM Country WHERE name = 'Italy')) AND season = '2015\u20132016';\t----- bird -----\teuropean_football_2",
    "1143": "SELECT MAX(home_team_goal) FROM Match WHERE league_id IN (SELECT id FROM League WHERE name = 'Eredivisie' AND country_id IN (SELECT id FROM Country WHERE name = 'Netherlands'));\t----- bird -----\teuropean_football_2",
    "1144": "SELECT T1.finishing, T1.curve FROM Player_Attributes AS T1 JOIN Player AS T2 ON T1.player_fifa_api_id = T2.player_fifa_api_id ORDER BY T2.weight DESC LIMIT 1;\t----- bird -----\teuropean_football_2",
    "1145": "SELECT T1.name FROM League AS T1 JOIN Match AS T2 ON T1.id = T2.league_id WHERE T2.season = '2015-2016' GROUP BY T1.id ORDER BY COUNT(T2.id) DESC LIMIT 4;\t----- bird -----\teuropean_football_2",
    "1146": "SELECT T1.team_long_name FROM Team AS T1 INNER JOIN Match AS T2 ON T1.team_api_id = T2.away_team_api_id ORDER BY T2.away_team_goal DESC LIMIT 1;\t----- bird -----\teuropean_football_2",
    "1147": "SELECT player_name FROM Player_Attributes ORDER BY overall_rating DESC LIMIT 1;\t----- bird -----\teuropean_football_2",
    "1148": "SELECT CAST(COUNT(Player.id) AS REAL) * 100 / COUNT(Player.id) FROM Player WHERE height < 180 AND Player.id IN (SELECT player_fifa_api_id FROM Player_Attributes WHERE strength > 70);\t----- bird -----\teuropean_football_2",
    "1149": "SELECT (SUM(CASE WHEN Patient.Admission = 'In-patient' AND Patient.SEX = 'Male' THEN 1 ELSE 0 END) * 100.0 / COUNT(CASE WHEN Patient.SEX = 'Male' THEN 1 ELSE 0 END)) - (SUM(CASE WHEN Patient.Admission = 'Out-patient' AND Patient.SEX = 'Male' THEN 1 ELSE 0 END) * 100.0 / COUNT(CASE WHEN Patient.SEX = 'Male' THEN 1 ELSE 0 END)) AS Deviation FROM Patient WHERE Patient.SEX = 'Male' UNION ALL SELECT (SUM(CASE WHEN Patient.Admission = 'In-patient' AND Patient.SEX = 'Male' THEN 1 ELSE 0 END) * 100.0 / COUNT(CASE WHEN Patient.SEX = 'Male' THEN 1 ELSE 0 END)) - (SUM(CASE WHEN Patient.Admission = 'Out-patient' AND Patient.SEX = 'Male' THEN 1 ELSE 0 END) * 100.0 / COUNT(CASE WHEN Patient.SEX = 'Male' THEN 1 ELSE 0 END)) AS Deviation FROM Patient WHERE Patient.SEX = 'Male';\t----- bird -----\tthrombosis_prediction",
    "1150": "SELECT CAST(SUM(CASE WHEN P.SEX = 'Female' AND STRFTIME('%Y', P.Birthday) > '1930' THEN 1 ELSE 0 END) AS REAL) / COUNT(P.ID) FROM Patient AS P;\t----- bird -----\tthrombosis_prediction",
    "1151": "SELECT CAST(SUM(CASE WHEN P.Admission = 'Y' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(P.ID) FROM Patient AS P WHERE strftime('%Y', P.Birthday) BETWEEN '1930' AND '1940';\t----- bird -----\tthrombosis_prediction",
    "1152": "SELECT CAST(SUM(CASE WHEN P.Diagnosis = 'SLE' AND P.Admission = 1 THEN 1 ELSE 0 END) AS REAL) / SUM(CASE WHEN P.Diagnosis = 'SLE' THEN 1 ELSE 0 END) FROM Patient AS P;\t----- bird -----\tthrombosis_prediction",
    "1153": "SELECT T1.Diagnosis, T2.Date FROM Patient AS T1 JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T1.ID = 30609;\t----- bird -----\tthrombosis_prediction",
    "1154": "SELECT P.SEX, P.Birthday, E.Examination Date, E.Symptoms FROM Patient AS P JOIN Examination AS E ON P.ID = E.ID WHERE P.ID = '163109';\t----- bird -----\tthrombosis_prediction",
    "1155": "SELECT P.ID, P.SEX, P.Birthday FROM Patient AS P JOIN Laboratory AS L ON P.ID = L.ID WHERE L.LDH > 300;\t----- bird -----\tthrombosis_prediction",
    "1156": "SELECT P.ID, CAST(STRFTIME('%Y', 'now') - STRFTIME('%Y', P.Birthday) AS INTEGER) AS Age FROM Patient P JOIN Examination E ON P.ID = E.ID WHERE E.LAC = 'Positive';\t----- bird -----\tthrombosis_prediction",
    "1157": "SELECT p.ID, p.SEX, p.Diagnosis FROM Patient p JOIN Examination e ON p.ID = e.ID WHERE e.Thrombosis = 'Severe';\t----- bird -----\tthrombosis_prediction",
    "1158": "SELECT P.ID FROM Patient AS P JOIN Laboratory AS L ON P.ID = L.ID WHERE strftime('%Y', P.Birthday) = '1937' AND L.T-CHO > 200;\t----- bird -----\tthrombosis_prediction",
    "1159": "SELECT p.ID, p.SEX, p.Diagnosis FROM Patient p JOIN Laboratory l ON p.ID = l.ID WHERE l.ALB < 3.5;\t----- bird -----\tthrombosis_prediction",
    "1160": "SELECT CAST(SUM(CASE WHEN P.SEX = 'Female' AND L.TP < 3.5 OR L.TP > 5.5 THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(P.ID) FROM Patient AS P JOIN Laboratory AS L ON P.ID = L.ID WHERE P.ID IS NOT NULL AND L.ID IS NOT NULL;\t----- bird -----\tthrombosis_prediction",
    "1161": "SELECT AVG(L.IGG) FROM Laboratory L JOIN Patient P ON L.ID = P.ID WHERE P.Birthday <= date('now', '-50 years') AND P.Admission = 'In-patient';\t----- bird -----\tthrombosis_prediction",
    "1162": "SELECT count(*) FROM Patient WHERE SUBSTR(First Date, 1, 2) = '97' AND SEX = 'F' AND Admission = 'Y';\t----- bird -----\tthrombosis_prediction",
    "1163": "SELECT MIN(CAST(strftime('%Y', 'now') - strftime('%Y', Birthday) AS INTEGER)) FROM Patient;\t----- bird -----\tthrombosis_prediction",
    "1164": "SELECT COUNT(T1.ID) FROM Patient AS T1 JOIN Examination AS T2 ON T1.ID = T2.ID WHERE STRFTIME('%Y', T2.\"Examination Date\") = '1997' AND T2.Thrombosis = (SELECT MAX(Thrombosis) FROM Examination) AND T1.SEX = 'Female';\t----- bird -----\tthrombosis_prediction",
    "1165": "SELECT ABS(MIN(Birthday) - MAX(Birthday)) FROM Patient WHERE Patient.ID IN (SELECT ID FROM Laboratory WHERE TG IS NOT NULL AND TG = (SELECT MIN(TG) FROM Laboratory));\t----- bird -----\tthrombosis_prediction",
    "1166": "SELECT T1.Symptoms, T1.Diagnosis FROM Examination AS T1 JOIN Patient AS T2 ON T1.ID = T2.ID ORDER BY T2.Birthday ASC LIMIT 1;\t----- bird -----\tthrombosis_prediction",
    "1167": "SELECT AVG(COUNT(L.ID)) FROM Laboratory L JOIN Patient P ON L.ID = P.ID WHERE strftime('%Y', L.Date) = '1998' AND P.SEX = 'M' GROUP BY strftime('%m', L.Date);\t----- bird -----\tthrombosis_prediction",
    "1168": "SELECT L.Date, CAST(JULIANDAY('now') - JULIANDAY(P.Birthday) AS INT) / 365 FROM Patient AS P JOIN Examination AS E ON P.ID = E.ID JOIN Laboratory AS L ON P.ID = L.ID WHERE P.Diagnosis = 'SJS' ORDER BY P.Birthday LIMIT 1;\t----- bird -----\tthrombosis_prediction",
    "1169": "SELECT CAST(SUM(CASE WHEN P.SEX = 'M' THEN 1 ELSE 0 END) AS REAL) / SUM(CASE WHEN P.SEX = 'F' THEN 1 ELSE 0 END) FROM Patient P JOIN Laboratory L ON P.ID = L.ID WHERE L.UA > 100;\t----- bird -----\tthrombosis_prediction",
    "1170": "SELECT COUNT(p.ID) FROM Patient p WHERE p.ID NOT IN (SELECT PatientID FROM Examination WHERE `Examination Date` < DATE(p.First Date, '+1 year'));\t----- bird -----\tthrombosis_prediction",
    "1171": "SELECT COUNT(T1.ID) FROM Patient AS T1 INNER JOIN Examination AS T2 ON T1.ID = T2.ID WHERE STRFTIME('%Y', T1.Birthday) > '1990-12-31' AND STRFTIME('%Y', T1.Birthday) < '1993-12-31';\t----- bird -----\tthrombosis_prediction",
    "1172": "SELECT COUNT(P.ID) FROM Patient AS P JOIN Laboratory AS L ON P.ID = L.ID WHERE P.SEX = 'Male' AND L.T-BIL > 2.0;\t----- bird -----\tthrombosis_prediction",
    "1173": "SELECT Diagnosis FROM Patient WHERE ID IN (SELECT PatientID FROM Laboratory WHERE Date BETWEEN '1985-01-01' AND '1995-12-31') GROUP BY Diagnosis ORDER BY COUNT(*) DESC LIMIT 1;\t----- bird -----\tthrombosis_prediction",
    "1174": "SELECT AVG(1999 - Birthday) FROM Patient WHERE ID IN (SELECT PatientID FROM Examination WHERE `Examination Date` LIKE '1991-10-%' AND PatientID IN (SELECT PatientID FROM Laboratory WHERE Date LIKE '1991-10-%'));\t----- bird -----\tthrombosis_prediction",
    "1175": "SELECT P.Birthday, P.Diagnosis FROM Patient P JOIN Examination E ON P.ID = E.ID ORDER BY E.HGB DESC LIMIT 1;\t----- bird -----\tthrombosis_prediction",
    "1176": "SELECT ANA FROM Examination WHERE ID = 3605340 AND `Examination Date` = '1996-12-02';\t----- bird -----\tthrombosis_prediction",
    "1177": "SELECT TCHO FROM Laboratory WHERE ID = 2927464 AND Date = '1995-9-4';\t----- bird -----\tthrombosis_prediction",
    "1178": "SELECT P.SEX FROM Patient AS P JOIN Examination AS E ON P.ID = E.ID WHERE E.Diagnosis = 'AORTITIS' ORDER BY P.First Date ASC LIMIT 1;\t----- bird -----\tthrombosis_prediction",
    "1179": "SELECT T1.aCL IgG, T1.aCL IgM, T1.aCL IgA FROM Examination AS T1 JOIN Patient AS T2 ON T1.ID = T2.ID WHERE T2.Diagnosis = 'SLE' AND T2.First Date = '1994-02-19' AND T1.Examination Date = '1993-11-12';\t----- bird -----\tthrombosis_prediction",
    "1180": "SELECT P.ID FROM Patient AS P JOIN Laboratory AS L ON P.ID = L.ID WHERE P.SEX IN ('Male', 'Female') AND L.GPT = 9 AND L.Date = '1992-06-12';\t----- bird -----\tthrombosis_prediction",
    "1181": "SELECT P.Birthday FROM Patient P JOIN Laboratory L ON P.ID = L.ID WHERE L.UA = 8.4 AND L.Date = '1991-10-21';\t----- bird -----\tthrombosis_prediction",
    "1182": "SELECT COUNT(L.ID) FROM Laboratory AS L JOIN Patient AS P ON L.ID = P.ID WHERE P.First Date = '1991/6/13' AND P.Diagnosis = 'SJS' AND STRFTIME('%Y', L.Date) = '1995';\t----- bird -----\tthrombosis_prediction",
    "1183": "SELECT P.Diagnosis FROM Patient AS P WHERE P.Diagnosis = 'SLE' AND P.First Date = '1997-01-27';\t----- bird -----\tthrombosis_prediction",
    "1184": "SELECT T1.Symptoms FROM Examination AS T1 JOIN Patient AS T2 ON T1.ID = T2.ID WHERE T2.Birthday = '1959-03-01' AND T1.`Examination Date` = '1993-09-27';\t----- bird -----\tthrombosis_prediction",
    "1185": "SELECT (T1.T-CHO - T2.T-CHO) / T2.T-CHO FROM Laboratory T1 JOIN Laboratory T2 ON T1.PatientID = T2.PatientID WHERE T1.Date BETWEEN '1981-11-01' AND '1981-11-30' AND T2.Date BETWEEN '1981-12-01' AND '1981-12-31' AND PatientID IN (SELECT ID FROM Patient WHERE Birthday = '1959-02-18');\t----- bird -----\tthrombosis_prediction",
    "1186": "SELECT P.ID FROM Patient AS P JOIN Examination AS E ON P.ID = E.ID WHERE P.Diagnosis = 'Behcet\\'s' AND E.`Examination Date` BETWEEN '1997-01-01' AND '1997-12-31';\t----- bird -----\tthrombosis_prediction",
    "1187": "SELECT T1.ID FROM Examination AS T1 JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T1.\"Examination Date\" BETWEEN '1987-07-06' AND '1996-01-31' AND T2.GPT > 30 AND T2.ALB < 4;\t----- bird -----\tthrombosis_prediction",
    "1188": "SELECT ID FROM Patient WHERE SEX = 'Female' AND strftime('%Y', Birthday) = '1964' AND Admission = 'Yes';\t----- bird -----\tthrombosis_prediction",
    "1189": "SELECT COUNT(T1.ID) FROM Examination AS T1 JOIN Patient AS T2 ON T1.ID = T2.ID WHERE Thrombosis = 2 AND ANA = 'S' AND `aCL IgM` > (SELECT AVG(`aCL IgM`) * 1.2 FROM Examination);\t----- bird -----\tthrombosis_prediction",
    "1190": "SELECT CAST(SUM(CASE WHEN Laboratory.UA < 50 THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(Laboratory.ID) FROM Laboratory JOIN Patient ON Laboratory.ID = Patient.ID WHERE Laboratory.U_PRO BETWEEN 15 AND 30;\t----- bird -----\tthrombosis_prediction",
    "1191": "SELECT CAST(SUM(CASE WHEN P.Diagnosis = 'BEHCET' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(P.ID) FROM Patient P WHERE P.SEX = 'Male' AND STRFTIME('%Y', P.First Date) = '1981';\t----- bird -----\tthrombosis_prediction",
    "1192": "SELECT DISTINCT P.ID FROM Patient AS P JOIN Laboratory AS L ON P.ID = L.ID WHERE L.Date BETWEEN '1991-10-01' AND '1991-10-31' AND L.T-BIL BETWEEN 0.2 AND 1.2;\t----- bird -----\tthrombosis_prediction",
    "1193": "SELECT COUNT(*) FROM Patient WHERE SEX = 'F' AND Birthday BETWEEN '1980-01-01' AND '1989-12-31' AND ID NOT IN (SELECT PatientID FROM Examination WHERE ANA LIKE '%P%ANA Pattern%');\t----- bird -----\tthrombosis_prediction",
    "1194": "SELECT T1.SEX FROM Patient AS T1 JOIN Examination AS T2 ON T1.ID = T2.ID JOIN Laboratory AS T3 ON T1.ID = T3.ID WHERE T2.Diagnosis = 'PSS' AND T3.CRP = '2+' AND T3.CRE = 1 AND T3.LDH = 123;\t----- bird -----\tthrombosis_prediction",
    "1195": "SELECT AVG(ALB) FROM Laboratory L JOIN Patient P ON L.ID = P.ID WHERE P.SEX = 'F' AND P.Diagnosis = 'SLE' AND L.PLT > 400;\t----- bird -----\tthrombosis_prediction",
    "1196": "SELECT Symptoms FROM Examination WHERE Diagnosis = 'SLE' GROUP BY Symptoms ORDER BY COUNT(*) DESC LIMIT 1;\t----- bird -----\tthrombosis_prediction",
    "1197": "SELECT P.First Date, P.Diagnosis FROM Patient AS P WHERE P.ID = 48473;\t----- bird -----\tthrombosis_prediction",
    "1198": "SELECT COUNT(T1.ID) FROM Patient AS T1 INNER JOIN Examination AS T2 ON T1.ID = T2.ID WHERE T1.SEX = 'Female' AND T2.Diagnosis = 'APS';\t----- bird -----\tthrombosis_prediction",
    "1199": "SELECT COUNT(DISTINCT P.ID) FROM Patient AS P JOIN Laboratory AS L ON P.ID = L.ID WHERE STRFTIME('%Y', L.Date) = '1997' AND L.U-PRO > 1 OR L.U-PRO < 1;\t----- bird -----\tthrombosis_prediction",
    "1200": "SELECT CAST(SUM(CASE WHEN P.Diagnosis = 'SLE' THEN 1 ELSE 0 END) AS REAL) / SUM(CASE WHEN E.Thrombosis = 'Yes' THEN 1 ELSE 0 END) FROM Patient AS P JOIN Examination AS E ON P.ID = E.ID;\t----- bird -----\tthrombosis_prediction",
    "1201": "SELECT CAST(SUM(CASE WHEN P.SEX = 'Female' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(P.ID) FROM Patient AS P WHERE STRFTIME('%Y', P.Birthday) = '1980' AND P.Diagnosis = 'RA';\t----- bird -----\tthrombosis_prediction",
    "1202": "SELECT COUNT(P.ID) FROM Patient AS P JOIN Laboratory AS L ON P.ID = L.ID WHERE P.SEX = 'M' AND STRFTIME('%Y', P.Birthday) BETWEEN '1995' AND '1997' AND P.Diagnosis = 'Behcet disease' AND P.Admission = 'False';\t----- bird -----\tthrombosis_prediction",
    "1203": "SELECT count(P.ID) FROM Patient AS P JOIN Laboratory AS L ON P.ID = L.ID WHERE P.SEX = 'Female' AND L.WBC < 3.5;\t----- bird -----\tthrombosis_prediction",
    "1204": "SELECT STRFTIME('%d', T1.`Examination Date`) - STRFTIME('%d', T2.First Date) FROM Examination AS T1 INNER JOIN Patient AS T2 ON T1.ID = T2.ID WHERE T2.ID = 821298;\t----- bird -----\tthrombosis_prediction",
    "1205": "SELECT UA FROM Laboratory WHERE ID = 57266;\t----- bird -----\tthrombosis_prediction",
    "1206": "SELECT Date FROM Laboratory WHERE ID = 48473 AND GOT > 40;\t----- bird -----\tthrombosis_prediction",
    "1207": "SELECT P.ID, P.SEX, P.Birthday FROM Patient P JOIN Laboratory L ON P.ID = L.ID WHERE L.GOT BETWEEN 5 AND 40 AND L.Date LIKE '1994%';\t----- bird -----\tthrombosis_prediction",
    "1208": "SELECT P.ID FROM Patient AS P JOIN Laboratory AS L ON P.ID = L.ID WHERE P.SEX = 'M' AND L.GPT > 40;\t----- bird -----\tthrombosis_prediction",
    "1209": "SELECT T1.Diagnosis FROM Patient AS T1 JOIN Examination AS T2 ON T1.ID = T2.ID WHERE T2.GPT > 40 ORDER BY T1.Birthday ASC;\t----- bird -----\tthrombosis_prediction",
    "1210": "SELECT AVG(LDH) FROM Laboratory WHERE LDH BETWEEN 100 AND 250;\t----- bird -----\tthrombosis_prediction",
    "1211": "SELECT P.ID, CAST(STRFTIME('%Y', 'now') - STRFTIME('%Y', P.Birthday) AS INT) FROM Patient P JOIN Laboratory L ON P.ID = L.ID WHERE L.LDH BETWEEN 100 AND 300;\t----- bird -----\tthrombosis_prediction",
    "1212": "SELECT T1.Admission FROM Patient AS T1 JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T2.ALP BETWEEN 71 AND 98;\t----- bird -----\tthrombosis_prediction",
    "1213": "SELECT P.ID FROM Patient AS P WHERE P.Birthday = '1982-04-01' AND EXISTS (SELECT 1 FROM Laboratory AS L WHERE L.CRE BETWEEN 60 AND 120);\t----- bird -----\tthrombosis_prediction",
    "1214": "SELECT P.ID, P.SEX, P.Birthday FROM Patient P JOIN Laboratory L ON P.ID = L.ID WHERE L.TP < 2.0;\t----- bird -----\tthrombosis_prediction",
    "1215": "SELECT TP - (SELECT AVG(TP) FROM Laboratory) AS TP_Deviation FROM Laboratory L JOIN Patient P ON L.ID = P.ID WHERE P.SEX = 'Female' AND TP > (SELECT AVG(TP) FROM Laboratory);\t----- bird -----\tthrombosis_prediction",
    "1216": "SELECT P.ID FROM Patient AS P JOIN Laboratory AS L ON P.ID = L.ID WHERE P.SEX = 'Male' AND L.ALB < 2.5 AND L.ALB > 5.5 ORDER BY P.Birthday DESC;\t----- bird -----\tthrombosis_prediction",
    "1217": "SELECT T1.ID FROM Patient AS T1 JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE strftime('%Y', T1.Birthday) = '1982' AND T2.ALB BETWEEN 3.5 AND 5.0;\t----- bird -----\tthrombosis_prediction",
    "1218": "SELECT CAST(SUM(CASE WHEN L.UA > 2.0 THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(P.ID) FROM Patient AS P JOIN Laboratory AS L ON P.ID = L.ID WHERE P.SEX = 'F';\t----- bird -----\tthrombosis_prediction",
    "1219": "SELECT AVG(L.UA) FROM Laboratory L JOIN Patient P ON L.ID = P.ID WHERE L.UA IS NOT NULL AND L.UA < 6.0;\t----- bird -----\tthrombosis_prediction",
    "1220": "SELECT ID, SEX, Birthday FROM Patient WHERE ID IN (SELECT ID FROM Laboratory WHERE UN BETWEEN 8 AND 27);\t----- bird -----\tthrombosis_prediction",
    "1221": "SELECT P.ID, P.SEX, P.Birthday FROM Patient AS P JOIN Laboratory AS L ON P.ID = L.ID WHERE P.Diagnosis = 'RA' AND L.UN BETWEEN 8 AND 40;\t----- bird -----\tthrombosis_prediction",
    "1222": "SELECT COUNT(P.ID) FROM Patient AS P JOIN Laboratory AS L ON P.ID = L.ID WHERE P.SEX = 'Male' AND L.CRE > 2.5 OR L.CRE < 0.8;\t----- bird -----\tthrombosis_prediction",
    "1223": "SELECT CASE WHEN COUNT(CASE WHEN P.SEX = 'Male' AND L.CRE > 1.3 OR L.CRE < 0.7 THEN 1 ELSE NULL END) > COUNT(CASE WHEN P.SEX = 'Female' AND L.CRE > 1.3 OR L.CRE < 0.7 THEN 1 ELSE NULL END) THEN 'True' ELSE 'False' END FROM Patient AS P JOIN Laboratory AS L ON P.ID = L.ID WHERE L.CRE IS NOT NULL AND P.ID IS NOT NULL;\t----- bird -----\tthrombosis_prediction",
    "1224": "SELECT T1.ID, T1.SEX, T1.Birthday FROM Patient AS T1 JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T2.T-BIL = (SELECT MAX(`T-BIL`) FROM Laboratory);\t----- bird -----\tthrombosis_prediction",
    "1225": "SELECT P.SEX, AVG(L.T-BIL) AS Avg_T_BIL FROM Patient AS P JOIN Laboratory AS L ON P.ID = L.ID WHERE L.\"T-BIL\" > 2.5 OR L.\"T-BIL\" < 0.5 GROUP BY P.SEX;\t----- bird -----\tthrombosis_prediction",
    "1226": "SELECT P.ID, L.T-CHO FROM Patient AS P JOIN Laboratory AS L ON P.ID = L.ID ORDER BY P.Birthday ASC LIMIT 1;\t----- bird -----\tthrombosis_prediction",
    "1227": "SELECT AVG(CAST(strftime('%Y', 'now') - strftime('%Y', Birthday) AS REAL)) FROM Patient WHERE SEX = 'M' AND T-CHO > 200;\t----- bird -----\tthrombosis_prediction",
    "1228": "SELECT P.ID, P.Diagnosis FROM Patient AS P JOIN Laboratory AS L ON P.ID = L.ID WHERE L.TG > 100;\t----- bird -----\tthrombosis_prediction",
    "1229": "SELECT COUNT(DISTINCT P.ID) FROM Patient AS P JOIN Laboratory AS L ON P.ID = L.ID WHERE L.TG > 200 AND STRFTIME('%Y', 'now') - STRFTIME('%Y', P.Birthday) > 50;\t----- bird -----\tthrombosis_prediction",
    "1230": "SELECT DISTINCT Patient.ID FROM Patient WHERE Patient.Admission = 'outpatient' AND EXISTS (SELECT 1 FROM Laboratory WHERE Laboratory.CPK BETWEEN 50 AND 200);\t----- bird -----\tthrombosis_prediction",
    "1231": "SELECT COUNT(P.ID) FROM Patient AS P JOIN Laboratory AS L ON P.ID = L.ID WHERE P.Birthday BETWEEN '1936-01-01' AND '1956-12-31' AND P.SEX = 'M' AND L.CPK > 200;\t----- bird -----\tthrombosis_prediction",
    "1232": "SELECT P.ID, P.SEX, CAST(STRFTIME('%Y', 'now') - STRFTIME('%Y', P.Birthday) AS INTEGER) AS Age FROM Patient AS P JOIN Laboratory AS L ON P.ID = L.ID WHERE L.GLU < 70 OR L.GLU > 140 AND L.T_CHO BETWEEN 150 AND 239;\t----- bird -----\tthrombosis_prediction",
    "1233": "SELECT P.ID, L.GLU FROM Patient AS P JOIN Laboratory AS L ON P.ID = L.ID WHERE strftime('%Y', P.First Date) = '1991' AND L.GLU BETWEEN 70 AND 100;\t----- bird -----\tthrombosis_prediction",
    "1234": "SELECT P.ID, P.SEX, P.Birthday FROM Patient P JOIN Laboratory L ON P.ID = L.ID WHERE L.WBC > 11000 OR L.WBC < 4000 GROUP BY P.SEX ORDER BY CAST(STRFTIME('%Y', 'now') - STRFTIME('%Y', P.Birthday) AS INTEGER) ASC;\t----- bird -----\tthrombosis_prediction",
    "1235": "SELECT P.ID, P.Birthday, P.Diagnosis FROM Patient P JOIN Laboratory L ON P.ID = L.ID WHERE L.RBC < (SELECT AVG(RBC) FROM Laboratory);\t----- bird -----\tthrombosis_prediction",
    "1236": "SELECT T1.Admission FROM Patient AS T1 JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T1.SEX = 'F' AND T1.Birthday <= date('now', '-50 years') AND T2.RBC < 4.0 OR T2.RBC > 5.5;\t----- bird -----\tthrombosis_prediction",
    "1237": "SELECT DISTINCT P.ID, P.SEX FROM Patient AS P JOIN Laboratory AS L ON P.ID = L.ID WHERE P.Admission = 'outpatient' AND L.HGB < 11;\t----- bird -----\tthrombosis_prediction",
    "1238": "SELECT P.ID, P.SEX FROM Patient AS P JOIN Examination AS E ON P.ID = E.ID WHERE P.Diagnosis = 'SLE' AND E.HGB BETWEEN 12.0 AND 15.5 ORDER BY P.Birthday DESC LIMIT 1;\t----- bird -----\tthrombosis_prediction",
    "1239": "SELECT P.ID, CAST(strftime('%Y', 'now') - strftime('%Y', P.Birthday) AS INTEGER) AS Age FROM Patient P JOIN Laboratory L ON P.ID = L.ID WHERE L.HCT > 45 -- Assuming normal HCT range is 45% (adjust as needed) GROUP BY P.ID HAVING COUNT(DISTINCT L.Date) >= 2;\t----- bird -----\tthrombosis_prediction",
    "1240": "SELECT AVG(HCT) FROM Laboratory WHERE STRFTIME('%Y', Date) = '1991' AND HCT < 0.45;\t----- bird -----\tthrombosis_prediction",
    "1241": "SELECT SUM(CASE WHEN PLT < (SELECT MIN(PLT) FROM Laboratory) THEN 1 ELSE 0 END) - SUM(CASE WHEN PLT > (SELECT MAX(PLT) FROM Laboratory) THEN 1 ELSE 0 END) FROM Laboratory;\t----- bird -----\tthrombosis_prediction",
    "1242": "SELECT DISTINCT P.ID FROM Patient AS P JOIN Laboratory AS L ON P.ID = L.ID WHERE STRFTIME('%Y', L.Date) = '1984' AND STRFTIME('%Y', P.Birthday) < STRFTIME('%Y', '1984-12-31') AND P.Birthday < date('1984-12-31') AND L.PLT BETWEEN 150000 AND 400000;\t----- bird -----\tthrombosis_prediction",
    "1243": "SELECT CAST(SUM(CASE WHEN P.SEX = 'F' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(P.ID) FROM Patient P JOIN Examination E ON P.ID = E.ID WHERE strftime('%Y', 'now') - strftime('%Y', P.Birthday) > 55 AND E.PT < 35 OR E.PT > 45;\t----- bird -----\tthrombosis_prediction",
    "1244": "SELECT P.ID FROM Patient AS P JOIN Laboratory AS L ON P.ID = L.ID WHERE P.First Date > '1992-01-01' AND L.PT BETWEEN 11 AND 13;\t----- bird -----\tthrombosis_prediction",
    "1245": "SELECT count(*) FROM Examination WHERE `Examination Date` > '1997-01-01' AND RVVT IS NOT NULL;\t----- bird -----\tthrombosis_prediction",
    "1246": "SELECT COUNT(*) FROM Examination WHERE APTT > 0 AND Thrombosis = 'No';\t----- bird -----\tthrombosis_prediction",
    "1247": "SELECT COUNT(DISTINCT P.ID) FROM Patient P JOIN Laboratory L ON P.ID = L.ID WHERE P.SEX = 'Male' AND L.WBC <= 11.0 AND L.FG > 4.0 OR L.FG < 2.0;\t----- bird -----\tthrombosis_prediction",
    "1248": "SELECT COUNT(P.ID) FROM Patient AS P JOIN Laboratory AS L ON P.ID = L.ID WHERE P.Birthday > '1980-01-01' AND L.FG > 100;\t----- bird -----\tthrombosis_prediction",
    "1249": "SELECT DISTINCT T1.Diagnosis FROM Patient AS T1 JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T2.U-PRO > 1;\t----- bird -----\tthrombosis_prediction",
    "1250": "SELECT P.ID FROM Patient AS P JOIN Examination AS E ON P.ID = E.ID WHERE E.Diagnosis = 'SLE' AND E.U-PRO IS NOT NULL AND E.U-PRO <= 150;\t----- bird -----\tthrombosis_prediction",
    "1251": "SELECT COUNT(Patient.ID) FROM Patient JOIN Laboratory ON Patient.ID = Laboratory.ID WHERE Laboratory.IGG > 400;\t----- bird -----\tthrombosis_prediction",
    "1252": "SELECT COUNT(T1.ID) FROM Patient AS T1 JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T2.`IGG` <= 1000 AND T2.`IGG` >= 700 AND T2.Symptoms IS NOT NULL;\t----- bird -----\tthrombosis_prediction",
    "1253": "SELECT T1.Diagnosis FROM Patient AS T1 JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T2.IGA BETWEEN 700 AND 2500 ORDER BY T2.IGA DESC LIMIT 1;\t----- bird -----\tthrombosis_prediction",
    "1254": "SELECT count(*) FROM Patient WHERE First Date > '1990-01-01' AND ID IN (SELECT PatientID FROM Laboratory WHERE IGA IS NOT NULL AND IGA <= 1.5);\t----- bird -----\tthrombosis_prediction",
    "1255": "SELECT Diagnosis FROM Laboratory WHERE IGM > (SELECT AVG(IGM) FROM Laboratory) GROUP BY Diagnosis ORDER BY COUNT(*) DESC LIMIT 1;\t----- bird -----\tthrombosis_prediction",
    "1256": "SELECT count(Patient.ID) FROM Patient WHERE Patient.ID NOT IN (SELECT Patient.ID FROM Laboratory WHERE CRP > 1);\t----- bird -----\tthrombosis_prediction",
    "1257": "SELECT COUNT(DISTINCT Patient.ID) FROM Patient JOIN Laboratory ON Patient.ID = Laboratory.ID WHERE Laboratory.CRE IS NOT NULL AND Laboratory.CRE != '' AND Patient.Birthday > DATE('now', '-70 years');\t----- bird -----\tthrombosis_prediction",
    "1258": "SELECT COUNT(DISTINCT P.ID) FROM Patient AS P JOIN Laboratory AS L ON P.ID = L.ID WHERE L.RA = 0 AND L.TAT2 > 0;\t----- bird -----\tthrombosis_prediction",
    "1259": "SELECT DISTINCT P.Diagnosis FROM Patient AS P JOIN Laboratory AS L ON P.ID = L.ID WHERE P.Birthday > '1985-01-01' AND L.RA = 0;\t----- bird -----\tthrombosis_prediction",
    "1260": "SELECT ID FROM Patient WHERE RF = 'Normal' AND Birthday < date('now', '-60 years');\t----- bird -----\tthrombosis_prediction",
    "1261": "SELECT COUNT(P.ID) FROM Patient AS P JOIN Examination AS E ON P.ID = E.ID WHERE E.RF = 'Normal' AND E.Thrombosis = 'No';\t----- bird -----\tthrombosis_prediction",
    "1262": "SELECT COUNT(DISTINCT P.ID) FROM Patient AS P JOIN Examination AS E ON P.ID = E.ID WHERE E.ANA LIKE '%P%' AND E.C3 IS NOT NULL AND E.C3 <= 200;\t----- bird -----\tthrombosis_prediction",
    "1263": "SELECT P.ID FROM Patient P JOIN Examination E ON P.ID = E.ID WHERE E.HCT IS NOT NULL AND E.HCT NOT IN (SELECT AVG(HCT) FROM Examination) ORDER BY E.aCL IgG DESC LIMIT 1;\t----- bird -----\tthrombosis_prediction",
    "1264": "SELECT COUNT(T1.ID) FROM Patient AS T1 INNER JOIN Examination AS T2 ON T1.ID = T2.ID WHERE T2.Thrombosis = 'Yes' AND T2.C4 IS NOT NULL AND T2.C4 <= 25;\t----- bird -----\tthrombosis_prediction",
    "1265": "SELECT COUNT(DISTINCT Patient.ID) FROM Patient JOIN Laboratory ON Patient.ID = Laboratory.ID WHERE RNP = 'normal' AND Admission = 'yes';\t----- bird -----\tthrombosis_prediction",
    "1266": "SELECT Birthday FROM Patient WHERE ID IN (SELECT P.ID FROM Patient AS P JOIN Laboratory AS L ON P.ID = L.ID WHERE RNP > 0 ORDER BY Birthday ASC LIMIT 1);\t----- bird -----\tthrombosis_prediction",
    "1267": "SELECT COUNT(T1.ID) FROM Patient AS T1 JOIN Examination AS T2 ON T1.ID = T2.ID WHERE T2.SM = 'Negative' AND T2.Thrombosis = 'No';\t----- bird -----\tthrombosis_prediction",
    "1268": "SELECT Patient.ID FROM Patient WHERE Patient.Diagnosis LIKE '%anti-SM%' ORDER BY Patient.Birthday ASC LIMIT 3;\t----- bird -----\tthrombosis_prediction",
    "1269": "SELECT DISTINCT Patient.ID FROM Patient JOIN Examination ON Patient.ID = Examination.ID WHERE Examination.\"Examination Date\" > '1997-01-01' AND Examination.SC170 = 'Normal';\t----- bird -----\tthrombosis_prediction",
    "1270": "SELECT COUNT(T1.ID) FROM Patient AS T1 JOIN Examination AS T2 ON T1.ID = T2.ID WHERE T2.SC170 = 'Normal' AND T1.SEX = 'Female' AND T2.Symptoms IS NULL;\t----- bird -----\tthrombosis_prediction",
    "1271": "SELECT count(P.ID) FROM Patient AS P JOIN Laboratory AS L ON P.ID = L.ID WHERE L.SSA = 0 AND P.First Date < '2000-01-01';\t----- bird -----\tthrombosis_prediction",
    "1272": "SELECT T1.ID FROM Patient AS T1 JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T2.SSA > 0 ORDER BY T1.First Date ASC LIMIT 1;\t----- bird -----\tthrombosis_prediction",
    "1273": "SELECT COUNT(DISTINCT T1.ID) FROM Examination AS T1 JOIN Patient AS T2 ON T1.ID = T2.ID WHERE T1.SSB = 'Normal' AND T1.Diagnosis = 'SLE';\t----- bird -----\tthrombosis_prediction",
    "1274": "SELECT COUNT(DISTINCT T1.ID) FROM Patient AS T1 JOIN Examination AS T2 ON T1.ID = T2.ID WHERE T2.SSB = FALSE AND T2.Symptoms IS NOT NULL;\t----- bird -----\tthrombosis_prediction",
    "1275": "SELECT COUNT(P.ID) FROM Patient AS P JOIN Examination AS E ON P.ID = E.ID WHERE E.CENTROMEA <= 100 AND E.SSB <= 100 AND P.SEX = 'M';\t----- bird -----\tthrombosis_prediction",
    "1276": "SELECT DISTINCT T1.Diagnosis FROM Patient AS T1 JOIN Examination AS T2 ON T1.ID = T2.ID WHERE T2.DNA LIKE '%abnormal%';\t----- bird -----\tthrombosis_prediction",
    "1277": "SELECT COUNT(P.ID) FROM Patient P WHERE P.ID NOT IN (SELECT PatientID FROM Laboratory WHERE DNA IS NULL OR DNA > 15) AND P.ID NOT IN (SELECT PatientID FROM Examination);\t----- bird -----\tthrombosis_prediction",
    "1278": "SELECT COUNT(P.ID) FROM Patient AS P JOIN Laboratory AS L ON P.ID = L.ID WHERE L.IGG IS NOT NULL AND L.IGG <= 1600 AND P.Admission = 'Yes';\t----- bird -----\tthrombosis_prediction",
    "1279": "SELECT CAST(SUM(CASE WHEN L.GOT > 50 THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(DISTINCT P.ID) FROM Patient AS P JOIN Laboratory AS L ON P.ID = L.ID WHERE P.Diagnosis = 'SLE';\t----- bird -----\tthrombosis_prediction",
    "1280": "SELECT COUNT(P.ID) FROM Patient AS P JOIN Laboratory AS L ON P.ID = L.ID WHERE P.SEX = 'Male' AND L.GOT BETWEEN 5 AND 40;\t----- bird -----\tthrombosis_prediction",
    "1281": "SELECT MIN(Birthday) FROM Patient WHERE Patient.ID IN (SELECT p.ID FROM Patient p JOIN Laboratory l ON p.ID = l.ID WHERE GOT > 40 OR GOT < 10);\t----- bird -----\tthrombosis_prediction",
    "1282": "SELECT Birthday FROM Patient ORDER BY GPT DESC LIMIT 3;\t----- bird -----\tthrombosis_prediction",
    "1283": "SELECT COUNT(P.ID) FROM Patient AS P JOIN Laboratory AS L ON P.ID = L.ID WHERE L.GPT <= 40 AND P.SEX = 'Male';\t----- bird -----\tthrombosis_prediction",
    "1284": "SELECT T1.First Date FROM Patient AS T1 JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T2.LDH BETWEEN 10 AND 50 ORDER BY T2.LDH DESC LIMIT 1;\t----- bird -----\tthrombosis_prediction",
    "1285": "SELECT MAX(Date) FROM Laboratory WHERE LDH > 1000;\t----- bird -----\tthrombosis_prediction",
    "1286": "SELECT COUNT(p.ID) FROM Patient p JOIN Laboratory l ON p.ID = l.ID WHERE l.ALP > 100 AND p.Admission = 'Yes';\t----- bird -----\tthrombosis_prediction",
    "1287": "SELECT COUNT(DISTINCT P.ID) FROM Patient AS P JOIN Laboratory AS L ON P.ID = L.ID WHERE L.ALP IS NOT NULL AND L.ALP <= 100;\t----- bird -----\tthrombosis_prediction",
    "1288": "SELECT T1.Diagnosis FROM Patient AS T1 JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T2.TP < 66;\t----- bird -----\tthrombosis_prediction",
    "1289": "SELECT COUNT(T1.ID) FROM Patient AS T1 INNER JOIN Examination AS T2 ON T1.ID = T2.ID WHERE T1.Diagnosis = 'SJS' AND T2.TP <= 1.0;\t----- bird -----\tthrombosis_prediction",
    "1290": "SELECT `Examination Date` FROM Examination WHERE `ALB` = (SELECT MAX(`ALB`) FROM Laboratory WHERE `ALB` <= 4.0 AND `ALB` >= 2.5);\t----- bird -----\tthrombosis_prediction",
    "1291": "SELECT COUNT(P.ID) FROM Patient AS P JOIN Laboratory AS L ON P.ID = L.ID WHERE P.SEX = 'Male' AND L.ALB >= 3.5 AND L.ALB <= 5.5 AND L.TP >= 6.0 AND L.TP <= 8.3;\t----- bird -----\tthrombosis_prediction",
    "1292": "SELECT T1.aCL_IgG FROM Examination AS T1 JOIN Patient AS T2 ON T1.ID = T2.ID WHERE T2.SEX = 'Female' AND T1.aCL_IgG IS NOT NULL AND T1.aCL_IgG BETWEEN 10 AND 50 ORDER BY T1.UA DESC LIMIT 1;\t----- bird -----\tthrombosis_prediction",
    "1293": "SELECT MAX(ANA) FROM Examination WHERE ANA IS NOT NULL AND ID IN (SELECT ID FROM Patient WHERE CRE = 'Normal');\t----- bird -----\tthrombosis_prediction",
    "1294": "SELECT P.ID FROM Patient P JOIN Laboratory L ON P.ID = L.ID WHERE L.CRE < 1.3 AND L.aCL_IgG = (SELECT MAX(aCL_IgG) FROM Laboratory);\t----- bird -----\tthrombosis_prediction",
    "1295": "SELECT COUNT(DISTINCT P.ID) FROM Patient AS P JOIN Examination AS E ON P.ID = E.ID WHERE P.ID IN (SELECT ID FROM Patient WHERE T-BIL > 2.0) AND E.\"ANA Pattern\" = 'peripheral';\t----- bird -----\tthrombosis_prediction",
    "1296": "SELECT T1.ANA FROM Examination AS T1 JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T2.T-BIL = (SELECT MAX(T-BIL) FROM Laboratory WHERE T-BIL <= 2.0);\t----- bird -----\tthrombosis_prediction",
    "1297": "SELECT COUNT(DISTINCT P.ID) FROM Patient AS P JOIN Laboratory AS L ON P.ID = L.ID WHERE L.T-CHO > 200 AND L.TAT < 0;\t----- bird -----\tthrombosis_prediction",
    "1298": "SELECT COUNT(DISTINCT P.ID) FROM Patient AS P JOIN Examination AS E ON P.ID = E.ID WHERE P.ID IN (SELECT ID FROM Patient WHERE T-CHO BETWEEN 160 AND 180) AND E.ANA Pattern = 'P';\t----- bird -----\tthrombosis_prediction",
    "1299": "SELECT COUNT(DISTINCT p.ID) FROM Patient p JOIN Examination e ON p.ID = e.ID WHERE e.TG IS NOT NULL AND e.TG < 150 AND e.Symptoms IS NOT NULL;\t----- bird -----\tthrombosis_prediction",
    "1300": "SELECT T1.Diagnosis FROM Patient AS T1 JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T2.TG BETWEEN 70 AND 150 ORDER BY T2.TG DESC LIMIT 1;\t----- bird -----\tthrombosis_prediction",
    "1301": "SELECT P.ID FROM Patient AS P JOIN Examination AS E ON P.ID = E.ID WHERE E.Thrombosis IS NULL AND E.CPK > 200;\t----- bird -----\tthrombosis_prediction",
    "1302": "SELECT COUNT(T1.ID) FROM Patient AS T1 JOIN Examination AS T2 ON T1.ID = T2.ID WHERE T2.CPK <= 200 AND T2.LAC = 'Positive';\t----- bird -----\tthrombosis_prediction",
    "1303": "SELECT Birthday FROM Patient WHERE ID IN (SELECT ID FROM Laboratory WHERE GLU > 200 OR GLU < 70) ORDER BY Birthday ASC LIMIT 1;\t----- bird -----\tthrombosis_prediction",
    "1304": "SELECT COUNT(DISTINCT P.ID) FROM Patient AS P JOIN Examination AS E ON P.ID = E.ID WHERE E.GLU <= 100 AND E.Thrombosis = 'False';\t----- bird -----\tthrombosis_prediction",
    "1305": "SELECT COUNT(P.ID) FROM Patient P JOIN Laboratory L ON P.ID = L.ID WHERE P.Admission = 'Yes' AND L.WBC < 11000;\t----- bird -----\tthrombosis_prediction",
    "1306": "SELECT COUNT(P.ID) FROM Patient AS P JOIN Examination AS E ON P.ID = E.ID WHERE P.Diagnosis = 'SLE' AND E.WBC < 11.000;\t----- bird -----\tthrombosis_prediction",
    "1307": "SELECT DISTINCT P.ID FROM Patient AS P JOIN Laboratory AS L ON P.ID = L.ID WHERE L.RBC < 4.0 AND P.Diagnosis LIKE '%outpatient%';\t----- bird -----\tthrombosis_prediction",
    "1308": "SELECT COUNT(DISTINCT p.ID) FROM Patient p JOIN Examination e ON p.ID = e.ID WHERE e.PLT IS NOT NULL AND e.PLT BETWEEN 150000 AND 400000 AND e.Symptoms IS NOT NULL;\t----- bird -----\tthrombosis_prediction",
    "1309": "SELECT PLT FROM Laboratory WHERE PLT BETWEEN 150000 AND 450000 AND ID IN (SELECT ID FROM Patient WHERE Diagnosis LIKE '%MCTD%');\t----- bird -----\tthrombosis_prediction",
    "1310": "SELECT AVG(PT) FROM Laboratory WHERE ID IN (SELECT ID FROM Patient WHERE SEX = 'Male') AND PT IS NOT NULL;\t----- bird -----\tthrombosis_prediction",
    "1311": "SELECT COUNT(T1.ID) FROM Patient AS T1 JOIN Examination AS T2 ON T1.ID = T2.ID WHERE T2.Thrombosis = 'Severe' AND T2.PT = 'Normal';\t----- bird -----\tthrombosis_prediction",
    "1312": "SELECT T1.major_name FROM major AS T1 JOIN member AS T2 ON T1.major_id = T2.link_to_major WHERE T2.first_name = 'Angela' AND T2.last_name = 'Sanders';\t----- bird -----\tstudent_club",
    "1313": "SELECT COUNT(DISTINCT M.member_id) FROM member AS M JOIN major AS MA ON M.link_to_major = MA.major_id WHERE MA.college = 'College of Engineering' AND M.position = 'Student';\t----- bird -----\tstudent_club",
    "1314": "SELECT m.first_name, m.last_name FROM member m JOIN major ma ON m.link_to_major = ma.major_id WHERE ma.department = 'Art and Design';\t----- bird -----\tstudent_club",
    "1315": "SELECT COUNT(DISTINCT A.link_to_member) FROM attendance A JOIN event E ON A.link_to_event = E.event_id WHERE E.event_name = \"Women's Soccer\" AND EXISTS (SELECT 1 FROM member M JOIN major MA ON M.link_to_major = MA.major_id WHERE MA.major_name = \"Student_Club\" AND M.member_id = A.link_to_member);\t----- bird -----\tstudent_club",
    "1316": "SELECT T1.phone FROM member AS T1 JOIN attendance AS T2 ON T1.member_id = T2.link_to_member JOIN event AS T3 ON T2.link_to_event = T3.event_id WHERE T3.event_name = 'Women\\'s Soccer' AND T1.link_to_major IN (SELECT major_id FROM major WHERE major_name = 'Student_Club');\t----- bird -----\tstudent_club",
    "1317": "SELECT COUNT(M.member_id) FROM member AS M JOIN attendance AS A ON M.member_id = A.link_to_member JOIN event AS E ON A.link_to_event = E.event_id WHERE E.event_name = \"Women's Soccer\" AND M.t_shirt_size = \"Medium\" AND M.link_to_major IN (SELECT major_id FROM major WHERE major_name = \"Student_Club\");\t----- bird -----\tstudent_club",
    "1318": "SELECT event_name FROM event WHERE event_id IN (SELECT link_to_event FROM attendance WHERE link_to_member IN (SELECT member_id FROM member WHERE position = 'Student_Club')) ORDER BY COUNT(*) DESC LIMIT 1;\t----- bird -----\tstudent_club",
    "1319": "SELECT T1.college FROM major AS T1 INNER JOIN member AS T2 ON T1.major_id = T2.link_to_major WHERE T2.position = 'Vice President of Student_Club';\t----- bird -----\tstudent_club",
    "1320": "SELECT T1.event_name FROM event AS T1 INNER JOIN attendance AS T2 ON T1.event_id = T2.link_to_event INNER JOIN member AS T3 ON T2.link_to_member = T3.member_id WHERE T3.first_name = 'Maya' AND T3.last_name = 'Mclean';\t----- bird -----\tstudent_club",
    "1321": "SELECT COUNT(DISTINCT T1.event_name) FROM event AS T1 INNER JOIN attendance AS T2 ON T1.event_id = T2.link_to_event INNER JOIN member AS T3 ON T2.link_to_member = T3.member_id WHERE T3.first_name = 'Sacha' AND T3.last_name = 'Harrison' AND STRFTIME('%Y', T1.event_date) = '2019' AND T1.type = 'Student_Club';\t----- bird -----\tstudent_club",
    "1322": "SELECT COUNT(*) FROM event WHERE event_name = 'Meeting' AND event_id IN (SELECT link_to_event FROM attendance GROUP BY link_to_event HAVING COUNT(link_to_member) > 10);\t----- bird -----\tstudent_club",
    "1323": "SELECT T1.event_name FROM event AS T1 JOIN attendance AS T2 ON T1.event_id = T2.link_to_event WHERE T1.type != 'fundraiser' GROUP BY T1.event_name HAVING COUNT(T2.link_to_member) > 20;\t----- bird -----\tstudent_club",
    "1324": "SELECT AVG(COUNT(T1.link_to_member)) FROM attendance AS T1 JOIN event AS T2 ON T1.link_to_event = T2.event_id WHERE STRFTIME('%Y', T2.event_date) = '2020';\t----- bird -----\tstudent_club",
    "1325": "SELECT T1.cost FROM expense AS T1 JOIN budget AS T2 ON T1.link_to_budget = T2.budget_id WHERE T2.category = 'club events' ORDER BY T1.cost DESC LIMIT 1;\t----- bird -----\tstudent_club",
    "1326": "SELECT COUNT(m.member_id) FROM member m JOIN major ma ON m.link_to_major = ma.major_id WHERE ma.major_name = 'Environmental Engineering' AND m.position = 'Student_Club';\t----- bird -----\tstudent_club",
    "1327": "SELECT m.first_name, m.last_name FROM member m JOIN attendance a ON m.member_id = a.link_to_member JOIN event e ON a.link_to_event = e.event_id WHERE e.event_name = \"Laugh Out Loud\" AND m.link_to_major IN (SELECT major_id FROM major WHERE major_name = \"Student_Club\");\t----- bird -----\tstudent_club",
    "1328": "SELECT T1.last_name FROM member AS T1 JOIN major AS T2 ON T1.link_to_major = T2.major_id WHERE T2.major_name = 'Law and Constitutional Studies';\t----- bird -----\tstudent_club",
    "1329": "SELECT T1.county FROM zip_code AS T1 INNER JOIN member AS T2 ON T1.zip_code = T2.zip WHERE T2.first_name = 'Sherri' AND T2.last_name = 'Ramsey';\t----- bird -----\tstudent_club",
    "1330": "SELECT T1.college FROM major AS T1 JOIN member AS T2 ON T1.major_id = T2.link_to_major WHERE T2.first_name = 'Tyler' AND T2.last_name = 'Hewitt';\t----- bird -----\tstudent_club",
    "1331": "SELECT SUM(amount) FROM income WHERE link_to_member IN (SELECT member_id FROM member WHERE position = 'Vice President');\t----- bird -----\tstudent_club",
    "1332": "SELECT SUM(E.cost) FROM expense AS E JOIN budget AS B ON E.link_to_budget = B.budget_id JOIN event AS EV ON B.link_to_event = EV.event_id WHERE EV.event_name = 'September Meeting' AND B.category = 'Food' AND EV.type = 'Student_Club';\t----- bird -----\tstudent_club",
    "1333": "SELECT T1.city, T1.state FROM zip_code AS T1 INNER JOIN member AS T2 ON T1.zip_code = T2.zip WHERE T2.position = 'President of the Student_Club';\t----- bird -----\tstudent_club",
    "1334": "SELECT m.first_name, m.last_name FROM member m JOIN zip_code z ON m.zip = z.zip_code WHERE z.state = 'IL';\t----- bird -----\tstudent_club",
    "1335": "SELECT SUM(E.cost) FROM expense AS E JOIN budget AS B ON E.link_to_budget = B.budget_id JOIN event AS EV ON B.link_to_event = EV.event_id JOIN member AS M ON E.link_to_member = M.member_id WHERE EV.event_name = 'September Meeting' AND B.category = 'advertisement' AND M.position = 'Student_Club';\t----- bird -----\tstudent_club",
    "1336": "SELECT T1.department FROM major AS T1 INNER JOIN member AS T2 ON T1.major_id = T2.link_to_major WHERE T2.first_name = 'Pierce' OR T2.first_name = 'Guidi';\t----- bird -----\tstudent_club",
    "1337": "SELECT SUM(amount) FROM budget WHERE link_to_event = (SELECT event_id FROM event WHERE event_name = 'October Speaker');\t----- bird -----\tstudent_club",
    "1338": "SELECT T1.approved FROM expense AS T1 JOIN budget AS T2 ON T1.link_to_budget = T2.budget_id JOIN event AS T3 ON T2.link_to_event = T3.event_id WHERE T3.event_name = 'October Meeting' AND T3.event_date = '2019-10-08';\t----- bird -----\tstudent_club",
    "1339": "SELECT SUM(e.cost) / COUNT(e.expense_id) AS total_average_cost FROM expense e JOIN member m ON e.link_to_member = m.member_id WHERE m.first_name = 'Elijah' AND m.last_name = 'Allen' AND e.expense_date BETWEEN '2023-09-01' AND '2023-10-31';\t----- bird -----\tstudent_club",
    "1340": "SELECT SUM(CASE WHEN strftime('%Y', link_to_event) = '2020' THEN amount ELSE 0 END) - SUM(CASE WHEN strftime('%Y', link_to_event) = '2019' THEN amount ELSE 0 END) FROM budget WHERE category = 'Student_Club';\t----- bird -----\tstudent_club",
    "1341": "SELECT location FROM event WHERE event_name = \"Spring Budget Review\";\t----- bird -----\tstudent_club",
    "1342": "SELECT cost FROM expense WHERE expense_description = \"Posters\" AND expense_date = \"2019/9/4\";\t----- bird -----\tstudent_club",
    "1343": "SELECT remaining FROM budget WHERE category = 'Food' ORDER BY amount DESC LIMIT 1;\t----- bird -----\tstudent_club",
    "1344": "SELECT notes FROM event WHERE event_name = 'fundraising' AND event_date = '2019-09-14';\t----- bird -----\tstudent_club",
    "1345": "SELECT count(*) FROM major WHERE college = \"College of Humanities and Social Sciences\";\t----- bird -----\tstudent_club",
    "1346": "SELECT phone FROM member WHERE first_name = 'Carlo' AND last_name = 'Jacobs';\t----- bird -----\tstudent_club",
    "1347": "SELECT T1.county FROM zip_code AS T1 INNER JOIN member AS T2 ON T1.zip_code = T2.zip WHERE T2.first_name = 'Adela' AND T2.last_name = 'O\\'Gallagher';\t----- bird -----\tstudent_club",
    "1348": "SELECT COUNT(*) FROM budget WHERE link_to_event IN (SELECT event_id FROM event WHERE event_name = 'November Meeting') AND spent > amount;\t----- bird -----\tstudent_club",
    "1349": "SELECT amount FROM budget WHERE link_to_event = (SELECT event_id FROM event WHERE event_name = \"September Speaker\");\t----- bird -----\tstudent_club",
    "1350": "SELECT T1.status FROM event AS T1 INNER JOIN budget AS T2 ON T1.event_id = T2.link_to_event INNER JOIN expense AS T3 ON T2.budget_id = T3.link_to_budget WHERE T3.expense_description = \"Post Cards, Posters\" AND T3.expense_date = \"2019/8/20\";\t----- bird -----\tstudent_club",
    "1351": "SELECT T1.major_name FROM major AS T1 JOIN member AS T2 ON T1.major_id = T2.link_to_major WHERE T2.first_name = 'Brent' AND T2.last_name = 'Thomason';\t----- bird -----\tstudent_club",
    "1352": "SELECT COUNT(*) FROM member WHERE link_to_major IN (SELECT major_id FROM major WHERE major_name = 'Business') AND t_shirt_size = 'Medium';\t----- bird -----\tstudent_club",
    "1353": "SELECT T1.type FROM zip_code AS T1 JOIN member AS T2 ON T1.zip_code = T2.zip WHERE T2.first_name = 'Christof' AND T2.last_name = 'Nielson';\t----- bird -----\tstudent_club",
    "1354": "SELECT T1.major_name FROM major AS T1 JOIN member AS T2 ON T1.major_id = T2.link_to_major WHERE T2.position = 'Vice President';\t----- bird -----\tstudent_club",
    "1355": "SELECT T1.short_state FROM member AS T1 JOIN major AS T2 ON T1.link_to_major = T2.major_id WHERE T1.first_name = 'Sacha' AND T1.last_name = 'Harrison';\t----- bird -----\tstudent_club",
    "1356": "SELECT T1.department FROM major AS T1 INNER JOIN member AS T2 ON T1.major_id = T2.link_to_major WHERE T2.position = 'President';\t----- bird -----\tstudent_club",
    "1357": "SELECT date_received FROM income WHERE link_to_member IN (SELECT member_id FROM member WHERE first_name = 'Connor' AND last_name = 'Hilton');\t----- bird -----\tstudent_club",
    "1358": "SELECT m.first_name, m.last_name FROM member m JOIN income i ON m.member_id = i.link_to_member ORDER BY i.date_received ASC LIMIT 1;\t----- bird -----\tstudent_club",
    "1359": "SELECT COUNT(*) FROM budget WHERE category = 'Advertisement' AND link_to_event IN (SELECT event_id FROM event WHERE event_name = 'Yearly Kickoff') AND amount > (SELECT amount FROM budget WHERE link_to_event IN (SELECT event_id FROM event WHERE event_name = 'October Meeting'));\t----- bird -----\tstudent_club",
    "1360": "SELECT CAST(SUM(CASE WHEN category = 'Parking' THEN amount ELSE 0 END) AS REAL) / SUM(amount) * 100 FROM budget WHERE link_to_event IN (SELECT event_id FROM event WHERE event_name = \"November Speaker\");\t----- bird -----\tstudent_club",
    "1361": "SELECT SUM(cost) FROM expense WHERE expense_description LIKE '%pizza%';\t----- bird -----\tstudent_club",
    "1362": "SELECT COUNT(*) FROM zip_code WHERE county = 'Orange' AND state = 'Virginia';\t----- bird -----\tstudent_club",
    "1363": "SELECT DISTINCT department FROM major WHERE college = 'Humanities and Social Sciences';\t----- bird -----\tstudent_club",
    "1364": "SELECT T1.city FROM zip_code AS T1 INNER JOIN member AS T2 ON T1.zip_code = T2.zip WHERE T2.first_name = 'Amy' AND T2.last_name = 'Firth';\t----- bird -----\tstudent_club",
    "1365": "SELECT E.expense_description, E.cost FROM expense AS E JOIN budget AS B ON E.link_to_budget = B.budget_id WHERE B.remaining = (SELECT MIN(remaining) FROM budget);\t----- bird -----\tstudent_club",
    "1366": "SELECT T1.member_id FROM attendance AS T1 JOIN event AS T2 ON T1.link_to_event = T2.event_id WHERE T2.event_name = \"October Meeting\";\t----- bird -----\tstudent_club",
    "1367": "SELECT college FROM member JOIN major ON member.link_to_major = major.major_id GROUP BY college ORDER BY COUNT(*) DESC LIMIT 1;\t----- bird -----\tstudent_club",
    "1368": "SELECT T1.major_name FROM major AS T1 JOIN member AS T2 ON T1.major_id = T2.link_to_major WHERE T2.phone = '809-555-3360';\t----- bird -----\tstudent_club",
    "1369": "SELECT event_name FROM event JOIN budget ON event.event_id = budget.link_to_event ORDER BY amount DESC LIMIT 1;\t----- bird -----\tstudent_club",
    "1370": "SELECT E.expense_id, E.expense_description, E.expense_date, E.cost FROM expense AS E JOIN member AS M ON E.link_to_member = M.member_id WHERE M.position = 'Vice President';\t----- bird -----\tstudent_club",
    "1371": "SELECT COUNT(DISTINCT T1.link_to_member) FROM attendance AS T1 JOIN event AS T2 ON T1.link_to_event = T2.event_id WHERE T2.event_name = \"Women's Soccer\";\t----- bird -----\tstudent_club",
    "1372": "SELECT T1.date_received FROM income AS T1 JOIN member AS T2 ON T1.link_to_member = T2.member_id WHERE T2.first_name = 'Casey' AND T2.last_name = 'Mason';\t----- bird -----\tstudent_club",
    "1373": "SELECT count(*) FROM member WHERE zip IN (SELECT zip_code FROM zip_code WHERE state = 'MD');\t----- bird -----\tstudent_club",
    "1374": "SELECT COUNT(a.link_to_event) FROM attendance a JOIN member m ON a.link_to_member = m.member_id WHERE m.phone = '954-555-6240';\t----- bird -----\tstudent_club",
    "1375": "SELECT m.first_name, m.last_name FROM member m JOIN major ma ON m.link_to_major = ma.major_id WHERE ma.department = 'School of Applied Sciences, Technology and Education';\t----- bird -----\tstudent_club",
    "1376": "SELECT T1.event_name FROM event AS T1 JOIN budget AS T2 ON T1.event_id = T2.link_to_event WHERE T1.status = 'Closed' ORDER BY (T2.spent / T2.amount) DESC LIMIT 1;\t----- bird -----\tstudent_club",
    "1377": "SELECT count(*) FROM member WHERE position = 'president';\t----- bird -----\tstudent_club",
    "1378": "SELECT MAX(spent) FROM budget;\t----- bird -----\tstudent_club",
    "1379": "SELECT count(*) FROM event WHERE type = 'meeting' AND strftime('%Y', event_date) = '2020';\t----- bird -----\tstudent_club",
    "1380": "SELECT SUM(cost) FROM expense WHERE expense_description LIKE '%food%';\t----- bird -----\tstudent_club",
    "1381": "SELECT T1.first_name, T1.last_name FROM member AS T1 JOIN attendance AS T2 ON T1.member_id = T2.link_to_member GROUP BY T1.member_id HAVING COUNT(T2.link_to_event) > 7;\t----- bird -----\tstudent_club",
    "1382": "SELECT M.first_name, M.last_name FROM member AS M JOIN major AS MA ON M.link_to_major = MA.major_id JOIN attendance AS A ON M.member_id = A.link_to_member JOIN event AS E ON A.link_to_event = E.event_id WHERE MA.major_name = 'Interior Design' AND E.event_name = 'Community Theater';\t----- bird -----\tstudent_club",
    "1383": "SELECT m.first_name, m.last_name FROM member m JOIN zip_code z ON m.zip = z.zip_code WHERE z.city = 'Georgetown' AND z.state = 'South Carolina';\t----- bird -----\tstudent_club",
    "1384": "SELECT SUM(amount) FROM income WHERE link_to_member = (SELECT member_id FROM member WHERE first_name = 'Grant' AND last_name = 'Gilmour');\t----- bird -----\tstudent_club",
    "1385": "SELECT T1.first_name, T1.last_name FROM member AS T1 JOIN income AS T2 ON T1.member_id = T2.link_to_member WHERE T2.amount > 40;\t----- bird -----\tstudent_club",
    "1386": "SELECT SUM(e.cost) FROM expense AS e JOIN budget AS b ON e.link_to_budget = b.budget_id JOIN event AS ev ON b.link_to_event = ev.event_id WHERE ev.event_name = 'Yearly Kickoff';\t----- bird -----\tstudent_club",
    "1387": "SELECT T1.first_name, T1.last_name FROM member AS T1 JOIN budget AS T2 ON T1.member_id = T2.link_to_member JOIN event AS T3 ON T2.link_to_event = T3.event_id WHERE T3.event_name = 'Yearly Kickoff' AND T2.category = 'budget';\t----- bird -----\tstudent_club",
    "1388": "SELECT m.first_name, m.last_name, i.source FROM member AS m JOIN income AS i ON m.member_id = i.link_to_member ORDER BY i.amount DESC LIMIT 1;\t----- bird -----\tstudent_club",
    "1389": "SELECT event_name FROM event ORDER BY event_id LIMIT 1;\t----- bird -----\tstudent_club",
    "1390": "SELECT CAST(SUM(CASE WHEN event_name = 'Yearly Kickoff' THEN (SELECT SUM(cost) FROM expense WHERE link_to_budget IN (SELECT budget_id FROM budget WHERE link_to_event IN (SELECT event_id FROM event WHERE event_name = 'Yearly Kickoff'))) ELSE 0 END) AS DECIMAL) / (SELECT SUM(cost) FROM expense) * 100;\t----- bird -----\tstudent_club",
    "1391": "SELECT CAST(SUM(CASE WHEN T1.major_name = 'Finance' THEN 1 ELSE 0 END) AS REAL) / SUM(CASE WHEN T1.major_name = 'Physics' THEN 1 ELSE 0 END) FROM major AS T1;\t----- bird -----\tstudent_club",
    "1392": "SELECT source FROM income WHERE date_received BETWEEN '2019-09-01' AND '2019-09-30' GROUP BY source ORDER BY SUM(amount) DESC LIMIT 1;\t----- bird -----\tstudent_club",
    "1393": "SELECT first_name, last_name, email FROM member WHERE position = 'Secretary' AND link_to_major IN (SELECT major_id FROM major WHERE major_name = 'Student_Club');\t----- bird -----\tstudent_club",
    "1394": "SELECT COUNT(M.member_id) FROM member AS M JOIN major AS MA ON M.link_to_major = MA.major_id WHERE MA.major_name = 'Physics Teaching' AND M.position = 'Student_Club';\t----- bird -----\tstudent_club",
    "1395": "SELECT COUNT(DISTINCT T1.link_to_member) FROM attendance AS T1 JOIN event AS T2 ON T1.link_to_event = T2.event_id WHERE T2.event_name = 'Community Theater' AND STRFTIME('%Y', T2.event_date) = '2019';\t----- bird -----\tstudent_club",
    "1396": "SELECT COUNT(A.link_to_member), M.major_name FROM attendance A JOIN member M ON A.link_to_member = M.member_id WHERE M.first_name = 'Luisa' AND M.last_name = 'Guidi' GROUP BY M.major_name;\t----- bird -----\tstudent_club",
    "1397": "SELECT AVG(E.cost) FROM expense AS E JOIN budget AS B ON E.link_to_budget = B.budget_id WHERE B.category = 'Food' AND B.event_status = 'Past';\t----- bird -----\tstudent_club",
    "1398": "SELECT T1.event_name FROM event AS T1 JOIN budget AS T2 ON T1.event_id = T2.link_to_event WHERE T2.category = 'advertisement' ORDER BY T2.spent DESC LIMIT 1;\t----- bird -----\tstudent_club",
    "1399": "SELECT CASE WHEN EXISTS (SELECT 1 FROM attendance WHERE link_to_member IN (SELECT member_id FROM member WHERE first_name = 'Maya' AND last_name = 'Mclean') AND link_to_event IN (SELECT event_id FROM event WHERE event_name = 'Women''s Soccer')) THEN 'Yes' ELSE 'No' END;\t----- bird -----\tstudent_club",
    "1400": "SELECT CAST(SUM(CASE WHEN type = 'Community Service' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(*) AS percentage FROM event WHERE strftime('%Y', event_date) = '2019' AND type = 'Student_Club';\t----- bird -----\tstudent_club",
    "1401": "SELECT T1.cost FROM expense AS T1 INNER JOIN budget AS T2 ON T1.link_to_budget = T2.budget_id INNER JOIN event AS T3 ON T2.link_to_event = T3.event_id WHERE T3.event_name = 'September Speaker' AND T1.expense_description LIKE '%poster%';\t----- bird -----\tstudent_club",
    "1402": "SELECT t_shirt_size FROM member GROUP BY t_shirt_size ORDER BY COUNT(*) DESC LIMIT 1;\t----- bird -----\tstudent_club",
    "1403": "SELECT e.event_name FROM event e JOIN budget b ON e.event_id = b.link_to_event WHERE e.status = 'Closed' AND b.spent > b.amount ORDER BY (b.spent - b.amount) DESC LIMIT 1;\t----- bird -----\tstudent_club",
    "1404": "SELECT T1.expense_description, SUM(T1.cost) FROM expense AS T1 INNER JOIN budget AS T2 ON T1.link_to_budget = T2.budget_id WHERE T2.link_to_event = (SELECT event_id FROM event WHERE event_name = 'October Meeting') AND T1.approved = TRUE GROUP BY T1.expense_description;\t----- bird -----\tstudent_club",
    "1405": "SELECT category, amount FROM budget WHERE link_to_event = (SELECT event_id FROM event WHERE event_name = 'April Speaker') ORDER BY amount ASC;\t----- bird -----\tstudent_club",
    "1406": "SELECT * FROM budget WHERE category = 'Food' ORDER BY amount DESC LIMIT 1;\t----- bird -----\tstudent_club",
    "1407": "SELECT budget_id, amount FROM budget WHERE category = 'Advertising' ORDER BY amount DESC LIMIT 3;\t----- bird -----\tstudent_club",
    "1408": "SELECT SUM(cost) FROM expense WHERE expense_description LIKE '%Parking%';\t----- bird -----\tstudent_club",
    "1409": "SELECT SUM(cost) FROM expense WHERE expense_date = '2019-08-20';\t----- bird -----\tstudent_club",
    "1410": "SELECT m.first_name, m.last_name, SUM(e.cost) AS total_cost FROM member m JOIN expense e ON m.member_id = e.link_to_member WHERE m.member_id = 'rec4BLdZHS2Blfp4v' GROUP BY m.member_id;\t----- bird -----\tstudent_club",
    "1411": "SELECT T1.expense_description FROM expense AS T1 JOIN member AS T2 ON T1.link_to_member = T2.member_id WHERE T2.first_name = 'Sacha' AND T2.last_name = 'Harrison';\t----- bird -----\tstudent_club",
    "1412": "SELECT DISTINCT T1.expense_description FROM expense AS T1 JOIN member AS T2 ON T1.link_to_member = T2.member_id WHERE T2.t_shirt_size = 'X-Large';\t----- bird -----\tstudent_club",
    "1413": "SELECT DISTINCT T1.zip FROM member AS T1 JOIN expense AS T2 ON T1.member_id = T2.link_to_member WHERE T2.cost < 50;\t----- bird -----\tstudent_club",
    "1414": "SELECT T1.major_name FROM major AS T1 INNER JOIN member AS T2 ON T1.major_id = T2.link_to_major WHERE T2.first_name = 'Phillip' AND T2.last_name = 'Cullen';\t----- bird -----\tstudent_club",
    "1415": "SELECT T1.position FROM member AS T1 JOIN major AS T2 ON T1.link_to_major = T2.major_id WHERE T2.major_name = 'Business';\t----- bird -----\tstudent_club",
    "1416": "SELECT COUNT(*) FROM member WHERE link_to_major IN (SELECT major_id FROM major WHERE major_name = 'Business') AND t_shirt_size = 'Medium';\t----- bird -----\tstudent_club",
    "1417": "SELECT DISTINCT event.type FROM event JOIN budget ON event.event_id = budget.link_to_event WHERE budget.remaining > 30;\t----- bird -----\tstudent_club",
    "1418": "SELECT DISTINCT b.category FROM budget AS b JOIN event AS e ON b.link_to_event = e.event_id WHERE e.location = 'MU 215';\t----- bird -----\tstudent_club",
    "1419": "SELECT T1.category FROM budget AS T1 JOIN event AS T2 ON T1.link_to_event = T2.event_id WHERE T2.event_date = '2020-03-24T12:00:00';\t----- bird -----\tstudent_club",
    "1420": "SELECT T1.major_name FROM major AS T1 JOIN member AS T2 ON T1.major_id = T2.link_to_major WHERE T2.position = 'Vice President';\t----- bird -----\tstudent_club",
    "1421": "SELECT CAST(SUM(CASE WHEN T1.link_to_major IN (SELECT major_id FROM major WHERE major_name = 'Business') THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(T1.member_id) AS percentage FROM member AS T1;\t----- bird -----\tstudent_club",
    "1422": "SELECT DISTINCT T1.category FROM budget AS T1 JOIN event AS T2 ON T1.link_to_event = T2.event_id WHERE T2.location = 'MU 215';\t----- bird -----\tstudent_club",
    "1423": "SELECT count(*) FROM income WHERE amount = 50;\t----- bird -----\tstudent_club",
    "1424": "SELECT COUNT(*) FROM member WHERE t_shirt_size = 'extra large';\t----- bird -----\tstudent_club",
    "1425": "SELECT COUNT(*) FROM major WHERE college = 'College of Agriculture and Applied Sciences' AND department = 'School of Applied Sciences, Technology and Education';\t----- bird -----\tstudent_club",
    "1426": "SELECT m.last_name, maj.department, maj.college FROM member m JOIN major maj ON m.link_to_major = maj.major_id WHERE maj.major_name = 'environmental engineering';\t----- bird -----\tstudent_club",
    "1427": "SELECT DISTINCT b.category FROM budget AS b JOIN event AS e ON b.link_to_event = e.event_id WHERE e.location = 'MU 215' AND e.type = 'guest speaker' AND b.spent = 0;\t----- bird -----\tstudent_club",
    "1428": "SELECT T1.city, T1.state FROM zip_code AS T1 INNER JOIN member AS T2 ON T1.zip_code = T2.zip INNER JOIN major AS T3 ON T2.link_to_major = T3.major_id WHERE T3.department = 'electrical and computer engineering';\t----- bird -----\tstudent_club",
    "1429": "SELECT T1.event_name FROM event AS T1 JOIN attendance AS T2 ON T1.event_id = T2.link_to_event JOIN member AS T3 ON T2.link_to_member = T3.member_id WHERE T3.position = 'Vice President' AND T1.type = 'Social' AND T1.location = '900 E. Washington St.';\t----- bird -----\tstudent_club",
    "1430": "SELECT T1.last_name, T1.position FROM member AS T1 JOIN expense AS T2 ON T1.member_id = T2.link_to_member WHERE T2.expense_description = 'pizza' AND T2.expense_date = '2019-09-10';\t----- bird -----\tstudent_club",
    "1431": "SELECT T1.last_name FROM member AS T1 JOIN attendance AS T2 ON T1.member_id = T2.link_to_member JOIN event AS T3 ON T2.link_to_event = T3.event_id WHERE T3.event_name = \"women's soccer\";\t----- bird -----\tstudent_club",
    "1432": "SELECT CAST(SUM(I.amount) AS REAL) * 100 / (SELECT SUM(amount) FROM income WHERE source = 'Student_Club') FROM income I JOIN member M ON I.link_to_member = M.member_id WHERE M.t_shirt_size = 'medium';\t----- bird -----\tstudent_club",
    "1433": "SELECT DISTINCT state FROM zip_code WHERE `type` = 'PO Box';\t----- bird -----\tstudent_club",
    "1434": "SELECT zip_code FROM zip_code WHERE type = 'PO Box' AND county = (SELECT county FROM zip_code WHERE city = 'San Juan Municipio' AND state = 'PR') AND state = 'PR';\t----- bird -----\tstudent_club",
    "1435": "SELECT event_name FROM event WHERE type = 'game' AND status = 'closed' AND event_date BETWEEN '2019-03-15' AND '2020-03-20';\t----- bird -----\tstudent_club",
    "1436": "SELECT link_to_event FROM attendance WHERE link_to_member IN (SELECT member_id FROM income WHERE amount > 50);\t----- bird -----\tstudent_club",
    "1437": "SELECT M.member_id, M.first_name, M.last_name, A.link_to_event FROM member AS M JOIN attendance AS A ON M.member_id = A.link_to_member WHERE M.member_id IN (SELECT link_to_member FROM expense WHERE expense_date BETWEEN '2019-10-01' AND '2019-11-19' AND approved = TRUE);\t----- bird -----\tstudent_club",
    "1438": "SELECT T1.college FROM major AS T1 INNER JOIN member AS T2 ON T1.major_id = T2.link_to_major WHERE T2.first_name = 'Katy' AND T2.link_to_major = 'rec1N0upiVLy5esTO';\t----- bird -----\tstudent_club",
    "1439": "SELECT m.phone FROM member AS m JOIN major AS ma ON m.link_to_major = ma.major_id WHERE ma.major_name = 'Business' AND ma.college = 'College of Agriculture and Applied Sciences';\t----- bird -----\tstudent_club",
    "1440": "SELECT T1.email FROM member AS T1 JOIN income AS T2 ON T1.member_id = T2.link_to_member WHERE T2.amount > 20 AND T2.date_received BETWEEN '2019-09-10' AND '2019-11-19';\t----- bird -----\tstudent_club",
    "1441": "SELECT COUNT(m.member_id) FROM member AS m JOIN major AS ma ON m.link_to_major = ma.major_id WHERE ma.major_name = 'education' AND ma.college = 'Education & Human Services';\t----- bird -----\tstudent_club",
    "1442": "SELECT CAST(SUM(CASE WHEN B.remaining < 0 THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(B.link_to_event) FROM budget AS B;\t----- bird -----\tstudent_club",
    "1443": "SELECT event_id, location, status FROM event WHERE event_date BETWEEN '2019-11-01' AND '2020-03-31';\t----- bird -----\tstudent_club",
    "1444": "SELECT expense_description FROM expense GROUP BY expense_description HAVING AVG(cost) > 50;\t----- bird -----\tstudent_club",
    "1445": "SELECT first_name, last_name FROM member WHERE t_shirt_size = 'extra large';\t----- bird -----\tstudent_club",
    "1446": "SELECT CAST(SUM(CASE WHEN type = 'PO Box' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(*) FROM zip_code;\t----- bird -----\tstudent_club",
    "1447": "SELECT E.event_name, E.location FROM event AS E JOIN budget AS B ON E.event_id = B.link_to_event WHERE B.spent < B.amount;\t----- bird -----\tstudent_club",
    "1448": "SELECT T1.event_name, T1.event_date FROM event AS T1 JOIN expense AS T2 ON T1.event_id = T2.link_to_event WHERE T2.expense_description LIKE '%pizza%' AND T2.cost > 50 AND T2.cost < 100;\t----- bird -----\tstudent_club",
    "1449": "SELECT m.first_name, m.last_name, ma.major_name FROM member m JOIN major ma ON m.link_to_major = ma.major_id JOIN expense e ON m.member_id = e.link_to_member WHERE e.cost > 100;\t----- bird -----\tstudent_club",
    "1450": "SELECT T1.city, T1.county FROM zip_code AS T1 JOIN event AS T2 ON T1.zip_code = T2.location WHERE T2.event_id IN (SELECT link_to_event FROM income GROUP BY link_to_event HAVING COUNT(*) > 20);\t----- bird -----\tstudent_club",
    "1451": "SELECT M.first_name, M.last_name FROM member M JOIN expense E ON M.member_id = E.link_to_member GROUP BY M.member_id HAVING COUNT(DISTINCT E.link_to_budget) > 1 ORDER BY SUM(E.cost) DESC LIMIT 1;\t----- bird -----\tstudent_club",
    "1452": "SELECT AVG(I.amount) FROM income AS I JOIN member AS M ON I.link_to_member = M.member_id WHERE M.position != 'member';\t----- bird -----\tstudent_club",
    "1453": "SELECT event_name FROM event WHERE event_id IN (SELECT link_to_event FROM budget WHERE category = 'parking' AND spent < (SELECT AVG(spent) FROM budget WHERE category = 'parking'));\t----- bird -----\tstudent_club",
    "1454": "SELECT SUM(budget.spent) * 100 / SUM(budget.amount) FROM budget WHERE budget.link_to_event IN (SELECT event_id FROM event WHERE type = 'Meeting');\t----- bird -----\tstudent_club",
    "1455": "SELECT budget_id FROM budget WHERE category IN ('water', 'chips', 'cookies') ORDER BY amount DESC LIMIT 1;\t----- bird -----\tstudent_club",
    "1456": "SELECT m.first_name, m.last_name FROM member m JOIN expense e ON m.member_id = e.link_to_member ORDER BY e.cost DESC LIMIT 5;\t----- bird -----\tstudent_club",
    "1457": "SELECT m.first_name, m.last_name, m.phone FROM member m JOIN expense e ON m.member_id = e.link_to_member WHERE e.cost > (SELECT AVG(cost) FROM expense);\t----- bird -----\tstudent_club",
    "1458": "SELECT ABS((COUNT(CASE WHEN z.state = 'NJ' THEN m.member_id END) * 100.0 / COUNT(m.member_id)) - (COUNT(CASE WHEN z.state = 'VT' THEN m.member_id END) * 100.0 / COUNT(m.member_id))) FROM member m JOIN zip_code z ON m.zip = z.zip_code;\t----- bird -----\tstudent_club",
    "1459": "SELECT T1.major_name, T1.department FROM major AS T1 JOIN member AS T2 ON T1.major_id = T2.link_to_major WHERE T2.first_name = 'Garrett' AND T2.last_name = 'Gerke';\t----- bird -----\tstudent_club",
    "1460": "SELECT m.first_name, m.last_name, e.cost FROM member m JOIN expense e ON m.member_id = e.link_to_member WHERE e.expense_description LIKE '%water%' OR e.expense_description LIKE '%veggie tray%' OR e.expense_description LIKE '%supplies%';\t----- bird -----\tstudent_club",
    "1461": "SELECT m.last_name, m.phone FROM member m JOIN major ma ON m.link_to_major = ma.major_id WHERE ma.major_name = 'Elementary Education';\t----- bird -----\tstudent_club",
    "1462": "SELECT category, amount FROM budget WHERE link_to_event = (SELECT event_id FROM event WHERE event_name = 'January Speaker');\t----- bird -----\tstudent_club",
    "1463": "SELECT T1.event_name FROM event AS T1 JOIN budget AS T2 ON T1.event_id = T2.link_to_event WHERE T2.category = 'food';\t----- bird -----\tstudent_club",
    "1464": "SELECT m.first_name, m.last_name, i.amount FROM member AS m JOIN income AS i ON m.member_id = i.link_to_member WHERE i.date_received = '2019-09-09';\t----- bird -----\tstudent_club",
    "1465": "SELECT T1.category FROM budget AS T1 INNER JOIN expense AS T2 ON T1.budget_id = T2.link_to_budget WHERE T2.expense_description = 'Posters';\t----- bird -----\tstudent_club",
    "1466": "SELECT m.first_name, m.last_name, ma.college FROM member m JOIN major ma ON m.link_to_major = ma.major_id WHERE m.position = 'Secretary';\t----- bird -----\tstudent_club",
    "1467": "SELECT e.event_name, SUM(b.spent) AS total_spent FROM budget AS b JOIN event AS e ON b.link_to_event = e.event_id WHERE b.category = 'speaker gifts' GROUP BY e.event_name;\t----- bird -----\tstudent_club",
    "1468": "SELECT T1.city FROM zip_code AS T1 INNER JOIN member AS T2 ON T1.zip_code = T2.zip WHERE T2.first_name = 'Garrett' AND T2.last_name = 'Gerke';\t----- bird -----\tstudent_club",
    "1469": "SELECT m.first_name, m.last_name, m.position FROM member m JOIN zip_code z ON m.zip = z.zip_code WHERE z.city = 'Lincolnton' AND z.state = 'North Carolina' AND z.zip_code = '28092';\t----- bird -----\tstudent_club",
    "1470": "SELECT COUNT(*) FROM gasstations WHERE Country = 'CZE' AND Segment = 'Premium';\t----- bird -----\tdebit_card_specializing",
    "1471": "SELECT CAST(SUM(CASE WHEN Currency = 'EUR' THEN 1 ELSE 0 END) AS REAL) / SUM(CASE WHEN Currency = 'CZK' THEN 1 ELSE 0 END) FROM customers;\t----- bird -----\tdebit_card_specializing",
    "1472": "SELECT CustomerID FROM yearmonth WHERE strftime('%Y', Date) = '2012' AND Country = 'LAM' ORDER BY Consumption LIMIT 1;\t----- bird -----\tdebit_card_specializing",
    "1473": "SELECT AVG(Consumption) FROM yearmonth WHERE CustomerID IN (SELECT CustomerID FROM customers WHERE Segment = 'SME') AND strftime('%Y', Date) = '2013';\t----- bird -----\tdebit_card_specializing",
    "1474": "SELECT c.CustomerID FROM yearmonth ym JOIN customers c ON ym.CustomerID = c.CustomerID WHERE c.Currency = 'CZK' AND strftime('%Y', ym.Date) = '2011' ORDER BY ym.Consumption DESC LIMIT 1;\t----- bird -----\tdebit_card_specializing",
    "1475": "SELECT COUNT(DISTINCT CustomerID) FROM yearmonth WHERE Segment = 'KAM' AND Date LIKE '2012%' AND Consumption < 30000;\t----- bird -----\tdebit_card_specializing",
    "1476": "SELECT SUM(CASE WHEN c.Currency = 'CZK' THEN y.Consumption ELSE 0 END) - SUM(CASE WHEN c.Currency = 'EUR' THEN y.Consumption ELSE 0 END) FROM yearmonth y JOIN customers c ON y.CustomerID = c.CustomerID WHERE strftime('%Y', y.Date) = '2012';\t----- bird -----\tdebit_card_specializing",
    "1477": "SELECT STRFTIME('%Y', Date) FROM transactions_1k WHERE Currency = 'EUR' GROUP BY STRFTIME('%Y', Date) ORDER BY SUM(Amount) DESC LIMIT 1;\t----- bird -----\tdebit_card_specializing",
    "1478": "SELECT Segment FROM yearmonth GROUP BY Segment ORDER BY SUM(Consumption) LIMIT 1;\t----- bird -----\tdebit_card_specializing",
    "1479": "SELECT STRFTIME('%Y', Date) FROM yearmonth WHERE Currency = 'CZK' GROUP BY 1 ORDER BY SUM(Consumption) DESC LIMIT 1;\t----- bird -----\tdebit_card_specializing",
    "1480": "SELECT Date FROM yearmonth WHERE CustomerID IN (SELECT CustomerID FROM customers WHERE Segment = 'SME') AND strftime('%Y', Date) = '2013' GROUP BY Date ORDER BY SUM(Consumption) DESC LIMIT 1;\t----- bird -----\tdebit_card_specializing",
    "1481": "SELECT SUM(CASE WHEN Segment = 'SME' THEN Consumption ELSE 0 END) - SUM(CASE WHEN Segment = 'LAM' THEN Consumption ELSE 0 END) AS SME_LAM_Diff, SUM(CASE WHEN Segment = 'LAM' THEN Consumption ELSE 0 END) - SUM(CASE WHEN Segment = 'KAM' THEN Consumption ELSE 0 END) AS LAM_KAM_Diff, SUM(CASE WHEN Segment = 'KAM' THEN Consumption ELSE 0 END) - SUM(CASE WHEN Segment = 'SME' THEN Consumption ELSE 0 END) AS KAM_SME_Diff FROM yearmonth WHERE STRFTIME('%Y', Date) = '2013' AND Currency = 'CZK' GROUP BY CustomerID;\t----- bird -----\tdebit_card_specializing",
    "1482": "WITH SegmentConsumption AS ( SELECT c.Segment, SUM(y.Consumption) AS TotalConsumption FROM yearmonth y JOIN customers c ON y.CustomerID = c.CustomerID WHERE c.Currency = 'EUR' AND y.Date BETWEEN '2012-01-01' AND '2013-12-31' AND c.Segment IN ('SME', 'LAM', 'KAM') GROUP BY c.Segment ), SegmentGrowth AS ( SELECT c.Segment, (SUM(CASE WHEN STRFTIME('%Y', y.Date) = '2013' THEN y.Consumption ELSE 0 END) - SUM(CASE WHEN STRFTIME('%Y', y.Date) = '2012' THEN y.Consumption ELSE 0 END)) AS ConsumptionIncrease FROM yearmonth y JOIN customers c ON y.CustomerID = c.CustomerID WHERE c.Currency = 'EUR' AND c.Segment IN ('SME', 'LAM', 'KAM') AND y.Date BETWEEN '2012-01-01' AND '2013-12-31' GROUP BY c.Segment ) SELECT Segment FROM SegmentGrowth ORDER BY ConsumptionIncrease DESC LIMIT 1;\t----- bird -----\tdebit_card_specializing",
    "1483": "SELECT sum(Consumption) FROM yearmonth WHERE CustomerID = 6 AND Date BETWEEN '2013-08-01' AND '2013-11-30';\t----- bird -----\tdebit_card_specializing",
    "1484": "SELECT SUM(CASE WHEN Country = 'Czech Republic' THEN 1 ELSE 0 END) - SUM(CASE WHEN Country = 'Slovakia' THEN 1 ELSE 0 END) FROM gasstations WHERE Segment = 'discount';\t----- bird -----\tdebit_card_specializing",
    "1485": "SELECT SUM(Consumption) - (SELECT SUM(Consumption) FROM yearmonth WHERE CustomerID = 5 AND Date LIKE '2013-04%') FROM yearmonth WHERE CustomerID = 7 AND Date LIKE '2013-04%';\t----- bird -----\tdebit_card_specializing",
    "1486": "SELECT SUM(CASE WHEN c.Currency = 'CZK' THEN 1 ELSE 0 END) - SUM(CASE WHEN c.Currency = 'EUR' THEN 1 ELSE 0 END) FROM customers c JOIN transactions_1k t ON c.CustomerID = t.CustomerID WHERE c.Segment = 'SME';\t----- bird -----\tdebit_card_specializing",
    "1487": "SELECT T1.CustomerID FROM yearmonth AS T1 JOIN customers AS T2 ON T1.CustomerID = T2.CustomerID WHERE T2.Segment = 'LAM' AND T2.Currency = 'Euro' AND T1.Date = '2013-10-01' ORDER BY T1.Consumption DESC LIMIT 1;\t----- bird -----\tdebit_card_specializing",
    "1488": "SELECT T1.CustomerID, SUM(T1.Consumption) AS TotalConsumption FROM yearmonth AS T1 WHERE T1.CustomerID IN (SELECT CustomerID FROM customers WHERE Segment = 'KAM') GROUP BY T1.CustomerID ORDER BY TotalConsumption DESC LIMIT 1;\t----- bird -----\tdebit_card_specializing",
    "1489": "SELECT SUM(Consumption) FROM yearmonth WHERE CustomerID IN (SELECT CustomerID FROM customers WHERE Segment = 'KAM') AND Date = '2013-05-01';\t----- bird -----\tdebit_card_specializing",
    "1490": "SELECT CAST(SUM(CASE WHEN Consumption > 46.73 THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(CustomerID) FROM yearmonth WHERE Segment = 'LAM';\t----- bird -----\tdebit_card_specializing",
    "1491": "SELECT Country, COUNT(*) AS \"value for money\" FROM gasstations WHERE Segment = 'value for money' GROUP BY Country;\t----- bird -----\tdebit_card_specializing",
    "1492": "SELECT CAST(SUM(CASE WHEN Currency = 'EUR' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(*) FROM customers WHERE Segment = 'KAM';\t----- bird -----\tdebit_card_specializing",
    "1493": "SELECT CAST(SUM(CASE WHEN Consumption > 528.3 THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(*) FROM yearmonth WHERE strftime('%Y-%m', Date) = '2012-02';\t----- bird -----\tdebit_card_specializing",
    "1494": "SELECT CAST(SUM(CASE WHEN T1.Segment = 'Premium' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(T1.GasStationID) FROM gasstations AS T1 WHERE T1.Country = 'Slovakia';\t----- bird -----\tdebit_card_specializing",
    "1495": "SELECT CustomerID FROM yearmonth WHERE Date = '2013-09-01' ORDER BY Consumption DESC LIMIT 1;\t----- bird -----\tdebit_card_specializing",
    "1496": "SELECT Segment FROM yearmonth WHERE Date = '2013-09-01' GROUP BY Segment ORDER BY SUM(Consumption) ASC LIMIT 1;\t----- bird -----\tdebit_card_specializing",
    "1497": "SELECT CustomerID FROM yearmonth WHERE Date = '2012-06-01' AND Segment = 'SME' ORDER BY Consumption LIMIT 1;\t----- bird -----\tdebit_card_specializing",
    "1498": "SELECT MAX(Consumption) FROM yearmonth WHERE strftime('%Y', Date) = '2012';\t----- bird -----\tdebit_card_specializing",
    "1499": "SELECT max(Consumption) FROM yearmonth WHERE CustomerID IN (SELECT CustomerID FROM customers WHERE Currency = 'euro');\t----- bird -----\tdebit_card_specializing",
    "1500": "SELECT p.Description FROM transactions_1k t JOIN products p ON t.ProductID = p.ProductID JOIN yearmonth y ON t.CustomerID = y.CustomerID AND t.Date = y.Date WHERE y.Date LIKE '2013-09%';\t----- bird -----\tdebit_card_specializing",
    "1501": "SELECT DISTINCT T1.Country FROM gasstations AS T1 INNER JOIN transactions_1k AS T2 ON T1.GasStationID = T2.GasStationID WHERE strftime('%Y-%m', T2.Date) = '2013-06';\t----- bird -----\tdebit_card_specializing",
    "1502": "SELECT DISTINCT g.ChainID FROM gasstations g JOIN transactions_1k t ON g.GasStationID = t.GasStationID WHERE t.Currency = 'EUR';\t----- bird -----\tdebit_card_specializing",
    "1503": "SELECT p.Description FROM transactions_1k t JOIN products p ON t.ProductID = p.ProductID WHERE t.Currency = 'EUR';\t----- bird -----\tdebit_card_specializing",
    "1504": "SELECT AVG(Price * Amount) FROM transactions_1k WHERE strftime('%Y-%m', Date) = '2012-01';\t----- bird -----\tdebit_card_specializing",
    "1505": "SELECT COUNT(DISTINCT T1.CustomerID) FROM yearmonth AS T1 INNER JOIN customers AS T2 ON T1.CustomerID = T2.CustomerID WHERE T2.Currency = 'EUR' AND T1.Consumption > 1000;\t----- bird -----\tdebit_card_specializing",
    "1506": "SELECT p.Description FROM transactions_1k t JOIN products p ON t.ProductID = p.ProductID JOIN gasstations g ON t.GasStationID = g.GasStationID WHERE g.Country = 'Czech Republic';\t----- bird -----\tdebit_card_specializing",
    "1507": "SELECT DISTINCT Time FROM transactions_1k WHERE GasStationID IN (SELECT GasStationID FROM gasstations WHERE ChainID = 11);\t----- bird -----\tdebit_card_specializing",
    "1508": "SELECT count(*) FROM transactions_1k WHERE GasStationID IN (SELECT GasStationID FROM gasstations WHERE Country = 'Czech Republic') AND Price > 1000;\t----- bird -----\tdebit_card_specializing",
    "1509": "SELECT COUNT(*) FROM transactions_1k WHERE GasStationID IN (SELECT GasStationID FROM gasstations WHERE Country = 'Czech Republic') AND Date > '2012-01-01';\t----- bird -----\tdebit_card_specializing",
    "1510": "SELECT AVG(Price) FROM transactions_1k WHERE GasStationID IN (SELECT GasStationID FROM gasstations WHERE Country = 'Czech Republic');\t----- bird -----\tdebit_card_specializing",
    "1511": "SELECT AVG(Price) FROM transactions_1k WHERE CustomerID IN (SELECT CustomerID FROM customers WHERE Currency = 'euro');\t----- bird -----\tdebit_card_specializing",
    "1512": "SELECT T1.CustomerID FROM transactions_1k AS T1 JOIN yearmonth AS T2 ON T1.CustomerID = T2.CustomerID WHERE T2.Date = '2012-08-25' ORDER BY T1.Amount DESC LIMIT 1;\t----- bird -----\tdebit_card_specializing",
    "1513": "SELECT T1.Country FROM gasstations AS T1 JOIN transactions_1k AS T2 ON T1.GasStationID = T2.GasStationID WHERE T2.Date = '2012-08-25' ORDER BY T2.TransactionID LIMIT 1;\t----- bird -----\tdebit_card_specializing",
    "1514": "SELECT T1.Currency FROM customers AS T1 JOIN transactions_1k AS T2 ON T1.CustomerID = T2.CustomerID WHERE T2.Time = '16:25:00' AND T2.Date = '2012-08-24';\t----- bird -----\tdebit_card_specializing",
    "1515": "SELECT T1.Segment FROM customers AS T1 JOIN yearmonth AS T2 ON T1.CustomerID = T2.CustomerID WHERE T2.Date = '2012-08-23' AND T2.Consumption > 0;\t----- bird -----\tdebit_card_specializing",
    "1516": "SELECT count(*) FROM transactions_1k WHERE Currency = 'CZK' AND Date = '2012-08-26' AND Time LIKE '00:00:00' AND Time LIKE '06:59:59';\t----- bird -----\tdebit_card_specializing",
    "1517": "SELECT T1.Segment FROM customers AS T1 ORDER BY T1.CustomerID ASC LIMIT 1;\t----- bird -----\tdebit_card_specializing",
    "1518": "SELECT T1.Country FROM gasstations AS T1 INNER JOIN transactions_1k AS T2 ON T1.GasStationID = T2.GasStationID WHERE T2.Date = '2012-08-24' AND T2.Time = '12:42:00';\t----- bird -----\tdebit_card_specializing",
    "1519": "SELECT ProductID FROM transactions_1k WHERE Date = '2012-08-23' AND Time = '21:20:00';\t----- bird -----\tdebit_card_specializing",
    "1520": "SELECT T1.Date, T1.Amount FROM transactions_1k AS T1 WHERE T1.CustomerID IN (SELECT CustomerID FROM transactions_1k WHERE Date = '2012-08-24' AND Amount = 124.05) AND T1.Date LIKE '2012-01%';\t----- bird -----\tdebit_card_specializing",
    "1521": "SELECT count(*) FROM transactions_1k WHERE strftime('%H', Time) BETWEEN '08' AND '09' AND strftime('%Y-%m-%d', Date) = '2012-08-26' AND GasStationID IN (SELECT GasStationID FROM gasstations WHERE Country = 'CZE');\t----- bird -----\tdebit_card_specializing",
    "1522": "SELECT T1.Currency FROM customers AS T1 JOIN yearmonth AS T2 ON T1.CustomerID = T2.CustomerID WHERE T2.Date = '2013-06-01' AND T2.Consumption = 214582.17;\t----- bird -----\tdebit_card_specializing",
    "1523": "SELECT T1.Country FROM gasstations AS T1 JOIN transactions_1k AS T2 ON T1.GasStationID = T2.GasStationID WHERE T2.CardID = '667467' LIMIT 1;\t----- bird -----\tdebit_card_specializing",
    "1524": "SELECT T1.Country FROM gasstations AS T1 INNER JOIN transactions_1k AS T2 ON T1.GasStationID = T2.GasStationID WHERE T2.Date = '2012-08-24' AND T2.Amount = 548.4 AND T2.CustomerID = T2.CustomerID;\t----- bird -----\tdebit_card_specializing",
    "1525": "SELECT CAST(SUM(CASE WHEN T1.Currency = 'EUR' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(T1.CustomerID) FROM customers AS C JOIN transactions_1k AS T1 ON C.CustomerID = T1.CustomerID WHERE STRFTIME('%Y/%m/%d', T1.Date) = '2012/08/25';\t----- bird -----\tdebit_card_specializing",
    "1526": "SELECT (Consumption - LAG(Consumption, 1, 0) OVER (PARTITION BY CustomerID ORDER BY Date)) / LAG(Consumption, 1, 0) OVER (PARTITION BY CustomerID ORDER BY Date) FROM yearmonth WHERE CustomerID IN (SELECT CustomerID FROM transactions_1k WHERE Amount = 634.8 AND Date = '2012-08-25') AND Date BETWEEN '2012-01-01' AND '2013-12-31';\t----- bird -----\tdebit_card_specializing",
    "1527": "SELECT GasStationID FROM transactions_1k GROUP BY GasStationID ORDER BY SUM(Amount * Price) DESC LIMIT 1;\t----- bird -----\tdebit_card_specializing",
    "1528": "SELECT CAST(SUM(CASE WHEN g.Segment = 'premium' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(g.GasStationID) FROM gasstations g WHERE g.Country = 'SVK';\t----- bird -----\tdebit_card_specializing",
    "1529": "SELECT SUM(T1.Amount) FROM transactions_1k AS T1 WHERE T1.CustomerID = \"38508\" AND T1.Date LIKE \"2012-01%\";\t----- bird -----\tdebit_card_specializing",
    "1530": "SELECT p.Description FROM products p JOIN transactions_1k t ON p.ProductID = t.ProductID GROUP BY p.ProductID ORDER BY SUM(t.Amount) DESC LIMIT 5;\t----- bird -----\tdebit_card_specializing",
    "1531": "SELECT T1.CustomerID, SUM(T1.Amount) AS TotalSpent, AVG(T1.Price) AS AveragePricePerItem, C.Currency FROM transactions_1k AS T1 JOIN customers AS C ON T1.CustomerID = C.CustomerID WHERE T1.CustomerID = (SELECT CustomerID FROM transactions_1k ORDER BY Amount DESC LIMIT 1) GROUP BY T1.CustomerID;\t----- bird -----\tdebit_card_specializing",
    "1532": "SELECT T1.Country FROM gasstations AS T1 JOIN transactions_1k AS T2 ON T1.GasStationID = T2.GasStationID WHERE T2.ProductID = 2 ORDER BY T2.Price DESC LIMIT 1;\t----- bird -----\tdebit_card_specializing",
    "1533": "SELECT T1.Consumption FROM yearmonth AS T1 WHERE T1.CustomerID IN (SELECT DISTINCT T2.CustomerID FROM transactions_1k AS T2 WHERE T2.ProductID = 5 AND T2.Price > 29.00) AND T1.Date = '2012-08';\t----- bird -----\tdebit_card_specializing"
}