{
    "0": "SELECT MAX(`Percent (%) Eligible Free (K-12)`) FROM frpm WHERE `County Name` = 'Alameda';\t----- bird -----\tcalifornia_schools",
    "1": "SELECT \"Percent (%) Eligible Free (Ages 5-17)\" FROM frpm WHERE \"District Type\" = 'Continuation School' ORDER BY \"Percent (%) Eligible Free (Ages 5-17)\" ASC LIMIT 3;\t----- bird -----\tcalifornia_schools",
    "2": "SELECT `Zip` FROM schools WHERE `Charter` = 'Y' AND `County` = 'Fresno County Office of Education';\t----- bird -----\tcalifornia_schools",
    "3": "SELECT MailStreet FROM frpm ORDER BY `FRPM Count (K-12)` DESC LIMIT 1;\t----- bird -----\tcalifornia_schools",
    "4": "SELECT Phone FROM schools WHERE Charter = 'Y' AND FundingType = 'Charter' AND OpenDate > '2000-01-01';\t----- bird -----\tcalifornia_schools",
    "5": "SELECT COUNT(T1.CDSCode) FROM satscores AS T1 INNER JOIN schools AS T2 ON T1.cds = T2.CDSCode WHERE T2.Virtual = 'F' AND T1.AvgScrMath > 400;\t----- bird -----\tcalifornia_schools",
    "6": "SELECT T1.School FROM satscores AS T1 JOIN schools AS T2 ON T1.cds = T2.CDSCode WHERE T1.NumTstTakr > 500 AND T2.Magnet = 1;\t----- bird -----\tcalifornia_schools",
    "7": "SELECT T1.Phone FROM satscores AS T1 JOIN schools AS T2 ON T1.cds = T2.CDSCode ORDER BY T1.NumGE1500 DESC LIMIT 1;\t----- bird -----\tcalifornia_schools",
    "8": "SELECT T1.NumTstTakr FROM satscores AS T1 JOIN frpm AS T2 ON T1.cds = T2.CDSCode ORDER BY T2.\"FRPM Count (K-12)\" DESC LIMIT 1;\t----- bird -----\tcalifornia_schools",
    "9": "SELECT COUNT(DISTINCT s.CDSCode) FROM satscores AS st JOIN schools AS s ON st.cds = s.CDSCode WHERE st.AvgScrMath > 560 AND s.FundingType = 'Charter';\t----- bird -----\tcalifornia_schools",
    "10": "SELECT T1.FRPM Count (Ages 5-17) FROM frpm AS T1 JOIN satscores AS T2 ON T1.CDSCode = T2.cds ORDER BY T2.AvgScrRead DESC LIMIT 1;\t----- bird -----\tcalifornia_schools",
    "11": "SELECT `CDSCode` FROM frpm WHERE (`Enrollment (K-12)` + `Enrollment (Ages 5-17)`) > 500;\t----- bird -----\tcalifornia_schools",
    "12": "SELECT MAX(`Percent (%) Eligible Free (Ages 5-17)`) FROM frpm WHERE `CDSCode` IN (SELECT `cds` FROM satscores WHERE `NumGE1500` > 0 AND `NumGE1500` / `NumTstTakr` > 0.3);\t----- bird -----\tcalifornia_schools",
    "13": "SELECT T1.Phone FROM satscores AS T1 JOIN schools AS T2 ON T1.cds = T2.CDSCode ORDER BY (T1.NumGE1500 * 1.0 / T1.NumTstTakr) DESC LIMIT 3;\t----- bird -----\tcalifornia_schools",
    "14": "SELECT NCESSchool FROM frpm ORDER BY `Enrollment (Ages 5-17)` DESC LIMIT 5;\t----- bird -----\tcalifornia_schools",
    "15": "SELECT dname FROM satscores WHERE rtype = 'D' AND EXISTS (SELECT 1 FROM schools WHERE schools.CDSCode = satscores.cds AND schools.StatusType = 'Active') GROUP BY dname ORDER BY AVG(AvgScrRead) DESC LIMIT 1;\t----- bird -----\tcalifornia_schools",
    "16": "SELECT count(*) FROM satscores WHERE dname = 'Alameda' AND NumTstTakr < 100;\t----- bird -----\tcalifornia_schools",
    "17": "SELECT s.CharterNum FROM satscores s JOIN schools s ON s.cds = s.CDSCode WHERE s.AvgScrWrite > 499 ORDER BY s.AvgScrWrite DESC;\t----- bird -----\tcalifornia_schools",
    "18": "SELECT COUNT(T1.CDSCode) FROM frpm AS T1 JOIN satscores AS T2 ON T1.CDSCode = T2.cds WHERE T1.`County Name` = 'Fresno' AND T2.NumTstTakr <= 250 AND T1.`Charter Funding Type` = 'Direct';\t----- bird -----\tcalifornia_schools",
    "19": "SELECT T1.Phone FROM satscores AS T1 ORDER BY AvgScrMath DESC LIMIT 1;\t----- bird -----\tcalifornia_schools",
    "20": "SELECT count(*) FROM frpm WHERE County Name = 'Amador' AND Low Grade = 9 AND High Grade = 12;\t----- bird -----\tcalifornia_schools",
    "21": "SELECT count(School Code) FROM frpm WHERE County Name = 'Los Angeles' AND `Free Meal Count (K-12)` > 500 AND `FRPM Count (K-12)` < 700;\t----- bird -----\tcalifornia_schools",
    "22": "SELECT s.School FROM satscores s JOIN schools s ON s.cds = s.CDSCode WHERE s.County = 'Contra Costa' ORDER BY s.NumTstTakr DESC LIMIT 1;\t----- bird -----\tcalifornia_schools",
    "23": "SELECT School Name, Street FROM frpm WHERE (`Enrollment (K-12)` - `Enrollment (Ages 5-17)`) > 30;\t----- bird -----\tcalifornia_schools",
    "24": "SELECT DISTINCT frpm.School Name FROM frpm JOIN satscores ON frpm.CDSCode = satscores.cds WHERE frpm.\"Percent (%) Eligible Free (K-12)\" > 0.1 AND satscores.\"NumGE1500\" >= 1;\t----- bird -----\tcalifornia_schools",
    "25": "SELECT DISTINCT T1.FundingType FROM schools AS T1 JOIN satscores AS T2 ON T1.CDSCode = T2.cds WHERE T1.County = 'Riverside' AND T2.AvgScrMath > 400;\t----- bird -----\tcalifornia_schools",
    "26": "SELECT School Name, Street, City, Zip, State FROM frpm WHERE County Name = 'Monterey' AND High Grade = '12' AND FRPM Count (Ages 5-17) > 800;\t----- bird -----\tcalifornia_schools",
    "27": "SELECT sname, AvgScrWrite, Phone FROM satscores INNER JOIN schools ON satscores.cds = schools.CDSCode WHERE OpenDate > '1991-12-31' OR ClosedDate < '2000-01-01';\t----- bird -----\tcalifornia_schools",
    "28": "SELECT School, DOCType FROM frpm WHERE CharterFundingType = 'Local' AND `Enrollment (K-12)` - `Enrollment (Ages 5-17)` > (SELECT AVG(`Enrollment (K-12)` - `Enrollment (Ages 5-17)`) FROM frpm WHERE CharterFundingType = 'Local');\t----- bird -----\tcalifornia_schools",
    "29": "SELECT OpenDate FROM schools ORDER BY `Enrollment (K-12)` DESC LIMIT 1;\t----- bird -----\tcalifornia_schools",
    "30": "SELECT DISTINCT City FROM frpm ORDER BY `Enrollment (K-12)` ASC LIMIT 5;\t----- bird -----\tcalifornia_schools",
    "31": "SELECT `Percent (%) Eligible Free (K-12)` FROM frpm ORDER BY `Enrollment (K-12)` DESC LIMIT 10;\t----- bird -----\tcalifornia_schools",
    "32": "SELECT \"Percent (%) Eligible FRPM (K-12)\" FROM frpm WHERE \"District Type\" = '66' ORDER BY \"FRPM Count (K-12)\" DESC LIMIT 5;\t----- bird -----\tcalifornia_schools",
    "33": "SELECT T1.Website, T1.School FROM frpm AS T1 JOIN schools AS T2 ON T1.CDSCode = T2.CDSCode WHERE `FRPM Count (Ages 5-17)` BETWEEN 1900 AND 2000;\t----- bird -----\tcalifornia_schools",
    "34": "SELECT CAST(`Free Meal Count (Ages 5-17)` AS DECIMAL) / CAST(`Enrollment (Ages 5-17)` AS DECIMAL) FROM frpm WHERE `School Name` LIKE '%Kacey Gibson%';\t----- bird -----\tcalifornia_schools",
    "35": "SELECT T1.AdmEmail1 FROM schools AS T1 JOIN frpm AS T2 ON T1.CDSCode = T2.CDSCode WHERE T1.Charter = 1 ORDER BY T2.`Enrollment (K-12)` ASC LIMIT 1;\t----- bird -----\tcalifornia_schools",
    "36": "SELECT T1.AdmFName1, T1.AdmLName1 FROM schools AS T1 JOIN satscores AS T2 ON T1.CDSCode = T2.cds ORDER BY T2.NumGE1500 DESC LIMIT 1;\t----- bird -----\tcalifornia_schools",
    "37": "SELECT s.Street, s.City, s.Zip, s.State FROM schools s JOIN satscores sa ON s.CDSCode = sa.cds WHERE (sa.NumGE1500 / sa.NumTstTakr) = (SELECT MIN(NumGE1500 / NumTstTakr) FROM satscores);\t----- bird -----\tcalifornia_schools",
    "38": "SELECT T1.Website FROM schools AS T1 JOIN satscores AS T2 ON T1.CDSCode = T2.cds WHERE T1.County = \"Los Angeles\" AND T2.NumTstTakr BETWEEN 2000 AND 3000;\t----- bird -----\tcalifornia_schools",
    "39": "SELECT AVG(NumTstTakr) FROM satscores WHERE cds IN (SELECT CDSCode FROM schools WHERE District LIKE '%Fresno%' AND OpenDate BETWEEN '1980-01-01' AND '1980-12-31');\t----- bird -----\tcalifornia_schools",
    "40": "SELECT T1.Phone FROM satscores AS T1 JOIN frpm AS T2 ON T1.cds = T2.CDSCode WHERE T2.District Name = 'Fresno Unified' ORDER BY T1.AvgScrRead ASC LIMIT 1;\t----- bird -----\tcalifornia_schools",
    "41": "SELECT sname FROM satscores s JOIN schools sc ON s.cds = sc.CDSCode WHERE sc.Virtual = 'F' ORDER BY s.AvgScrRead DESC LIMIT 5 PARTITION BY sc.County;\t----- bird -----\tcalifornia_schools",
    "42": "SELECT T1.EdOpsName FROM frpm AS T1 JOIN satscores AS T2 ON T1.CDSCode = T2.cds ORDER BY T2.AvgScrMath DESC LIMIT 1;\t----- bird -----\tcalifornia_schools",
    "43": "SELECT s.AvgScrMath, s.cname FROM satscores s JOIN schools sh ON s.cds = sh.CDSCode ORDER BY (s.AvgScrMath + s.AvgScrRead + s.AvgScrWrite) ASC LIMIT 1;\t----- bird -----\tcalifornia_schools",
    "44": "SELECT s.City, AVG(satscores.AvgScrWrite) FROM satscores JOIN schools s ON satscores.cds = s.CDSCode WHERE satscores.NumGE1500 = (SELECT MAX(NumGE1500) FROM satscores);\t----- bird -----\tcalifornia_schools",
    "45": "SELECT T1.School, AVG(T1.AvgScrWrite) FROM satscores AS T1 JOIN schools AS T2 ON T1.cds = T2.CDSCode WHERE T2.AdmFName1 = 'Ricci' AND T2.AdmLastName1 = 'Ulrich' GROUP BY T1.School;\t----- bird -----\tcalifornia_schools",
    "46": "SELECT T1.School FROM frpm AS T1 INNER JOIN schools AS T2 ON T1.CDSCode = T2.CDSCode WHERE T2.DOC = 31 ORDER BY T1.`Enrollment (K-12)` DESC LIMIT 1;\t----- bird -----\tcalifornia_schools",
    "47": "SELECT CAST(COUNT(s.CDSCode) AS REAL) / 12 FROM schools s WHERE s.County = 'Alameda' AND s.DOC = 52 AND STRFTIME('%Y', s.OpenDate) = '1980';\t----- bird -----\tcalifornia_schools",
    "48": "SELECT CAST(SUM(CASE WHEN T1.DOC = 54 THEN 1 ELSE 0 END) AS REAL) / SUM(CASE WHEN T1.DOC = 52 THEN 1 ELSE 0 END) FROM schools AS T1 WHERE T1.County = \"Orange\";\t----- bird -----\tcalifornia_schools",
    "49": "SELECT School, `Closed Date` FROM schools WHERE `StatusType` LIKE '%Closed%' GROUP BY County ORDER BY COUNT(*) DESC LIMIT 1;\t----- bird -----\tcalifornia_schools",
    "50": "SELECT s.Street FROM satscores AS st JOIN schools AS s ON st.cds = s.CDSCode ORDER BY AvgScrMath DESC LIMIT 1 OFFSET 6;\t----- bird -----\tcalifornia_schools",
    "51": "SELECT s.MailStreet, s.School FROM schools s JOIN satscores sa ON s.CDSCode = sa.cds ORDER BY sa.AvgScrRead ASC LIMIT 1;\t----- bird -----\tcalifornia_schools",
    "52": "SELECT COUNT(T1.CDSCode) FROM satscores AS T1 JOIN schools AS T2 ON T1.CDSCode = T2.CDSCode WHERE (T1.AvgScrRead + T1.AvgScrMath + T1.AvgScrWrite) >= 1500 AND T2.MailCity = 'Lakeport';\t----- bird -----\tcalifornia_schools",
    "53": "SELECT SUM(NumTstTakr) FROM satscores WHERE cds IN (SELECT CDSCode FROM schools WHERE MailCity = 'Fresno');\t----- bird -----\tcalifornia_schools",
    "54": "SELECT School, MailZip FROM schools WHERE AdmFName1 = 'Avetik' AND AdmLName1 = 'Atoian';\t----- bird -----\tcalifornia_schools",
    "55": "SELECT CAST(SUM(CASE WHEN County = 'Colusa' THEN 1 ELSE 0 END) AS REAL) / SUM(CASE WHEN County = 'Humboldt' THEN 1 ELSE 0 END) FROM schools WHERE MailState = 'CA';\t----- bird -----\tcalifornia_schools",
    "56": "SELECT COUNT(*) FROM schools WHERE MailState = 'CA' AND City = 'San Joaquin' AND StatusType = 'Active';\t----- bird -----\tcalifornia_schools",
    "57": "SELECT Phone, Ext FROM satscores ORDER BY AvgScrWrite DESC LIMIT 1 OFFSET 332;\t----- bird -----\tcalifornia_schools",
    "58": "SELECT Phone, Ext, School FROM schools WHERE Zip = '95203-3704';\t----- bird -----\tcalifornia_schools",
    "59": "SELECT Website FROM schools WHERE AdmFName1 = 'Mike' AND AdmLName1 = 'Larson' OR AdmFName1 = 'Dante' AND AdmLName1 = 'Alvarez';\t----- bird -----\tcalifornia_schools",
    "60": "SELECT Website FROM schools WHERE Virtual = 'P' AND Charter = 1 AND County = 'San Joaquin';\t----- bird -----\tcalifornia_schools",
    "61": "SELECT COUNT(s.CDSCode) FROM schools s JOIN frpm f ON s.CDSCode = f.CDSCode WHERE s.Charter = 1 AND s.City = 'Hickman' AND s.DOC = 52;\t----- bird -----\tcalifornia_schools",
    "62": "SELECT COUNT(*) FROM frpm WHERE County Name = 'Los Angeles' AND `Charter School (Y/N)` = 'N' AND `Percent (%) Eligible Free (K-12)` < 0.18;\t----- bird -----\tcalifornia_schools",
    "63": "SELECT s.School, s.City, s.AdmFName1 || ' ' || s.AdmLName1 AS AdministratorName FROM schools s JOIN frpm f ON s.CDSCode = f.CDSCode WHERE s.Charter = 1 AND s.CharterNum = '00D2';\t----- bird -----\tcalifornia_schools",
    "64": "SELECT count(*) FROM schools WHERE MailCity = 'Hickman' AND CharterNum = '00D4';\t----- bird -----\tcalifornia_schools",
    "65": "SELECT CAST(SUM(CASE WHEN schools.County = 'Santa Clara' AND schools.FundingType = 'Local' THEN 1 ELSE 0 END) AS REAL) * 100 / SUM(CASE WHEN schools.County = 'Santa Clara' THEN 1 ELSE 0 END);\t----- bird -----\tcalifornia_schools",
    "66": "SELECT COUNT(*) FROM schools WHERE strftime('%Y', OpenDate) BETWEEN '2000' AND '2005' AND County = 'Stanislaus' AND FundingType = 'Directly Funded';\t----- bird -----\tcalifornia_schools",
    "67": "SELECT COUNT(*) FROM schools WHERE City = 'San Francisco' AND STRFTIME('%Y', ClosedDate) = '1989' AND District LIKE '%Community College District%';\t----- bird -----\tcalifornia_schools",
    "68": "SELECT County FROM schools WHERE strftime('%Y', OpenDate) BETWEEN '1980' AND '1989' AND SOC = 11 GROUP BY County ORDER BY COUNT(*) DESC LIMIT 1;\t----- bird -----\tcalifornia_schools",
    "69": "SELECT NCESDist FROM schools WHERE SOC = 31;\t----- bird -----\tcalifornia_schools",
    "70": "SELECT count(*) FROM schools WHERE County = 'Alpine' AND (StatusType = 'Active' OR StatusType = 'Closed') AND District LIKE '%Community Day%' AND School LIKE '%School%';\t----- bird -----\tcalifornia_schools",
    "71": "SELECT District FROM schools WHERE City = 'Fresno' AND Magnet = 0;\t----- bird -----\tcalifornia_schools",
    "72": "SELECT SUM(`Enrollment (Ages 5-17)`) FROM frpm WHERE `Academic Year` = '2014-15' AND `County Name` = 'Alameda' AND `District Name` LIKE '%Fremont%' AND `Educational Option Type` = 'SSS';\t----- bird -----\tcalifornia_schools",
    "73": "SELECT `FRPM Count (Ages 5-17)` FROM frpm JOIN schools ON frpm.CDSCode = schools.CDSCode WHERE schools.MailStrAbr = 'PO' AND schools.MailCity = '1040' AND schools.School LIKE '%Youth Authority%';\t----- bird -----\tcalifornia_schools",
    "74": "SELECT Low Grade FROM frpm WHERE District Code IN (SELECT District FROM schools WHERE NCESDist = '0613360') AND EdOpsCode = 'SPECON' LIMIT 1;\t----- bird -----\tcalifornia_schools",
    "75": "SELECT frpm.School Name FROM frpm WHERE `NSLP Provision Status` = '2' AND County Code = '37';\t----- bird -----\tcalifornia_schools",
    "76": "SELECT City FROM schools WHERE EILCode = 'HS' AND County = 'Merced' AND Low Grade = 9 AND High Grade = 12;\t----- bird -----\tcalifornia_schools",
    "77": "SELECT T1.School Name, (T1.`FRPM Count (Ages 5-17)` / T1.`Enrollment (Ages 5-17)` * 100) AS \"Percent (%) Eligible FRPM (Ages 5-17)\" FROM frpm AS T1 JOIN schools AS T2 ON T1.CDSCode = T2.CDSCode WHERE T2.GSoffered = 'K-9' AND T2.County = 'Los Angeles';\t----- bird -----\tcalifornia_schools",
    "78": "SELECT GSoffered FROM schools WHERE City = 'Adelanto' GROUP BY GSoffered ORDER BY COUNT(*) DESC LIMIT 1;\t----- bird -----\tcalifornia_schools",
    "79": "SELECT County, COUNT(CDSCode) FROM frpm WHERE County LIKE 'San%' OR County LIKE 'Santa%' AND `Educational Option Type` = 'Virtual' GROUP BY County ORDER BY COUNT(CDSCode) DESC LIMIT 1;\t----- bird -----\tcalifornia_schools",
    "80": "SELECT School Name, School Type, Latitude FROM frpm ORDER BY Latitude DESC LIMIT 1;\t----- bird -----\tcalifornia_schools",
    "81": "SELECT School, City, Low Grade FROM schools WHERE State = 'CA' ORDER BY Latitude ASC LIMIT 1;\t----- bird -----\tcalifornia_schools",
    "82": "SELECT GSoffered FROM schools ORDER BY Longitude DESC LIMIT 1;\t----- bird -----\tcalifornia_schools",
    "83": "SELECT T1.City, COUNT(DISTINCT T1.CDSCode) AS NumberOfSchools FROM schools AS T1 INNER JOIN frpm AS T2 ON T1.CDSCode = T2.CDSCode WHERE T1.Virtual = 0 AND T1.Magnet = 1 AND T1.GSoffered = 'K-8' AND T2.NSLPProvisionStatus = 'Multiple Provision Types' GROUP BY T1.City;\t----- bird -----\tcalifornia_schools",
    "84": "SELECT AdmFName1, District FROM schools GROUP BY AdmFName1 ORDER BY COUNT(*) DESC LIMIT 2;\t----- bird -----\tcalifornia_schools",
    "85": "SELECT frpm.District Code FROM frpm JOIN schools ON frpm.CDSCode = schools.CDSCode WHERE schools.AdmFName1 = 'Alusine';\t----- bird -----\tcalifornia_schools",
    "86": "SELECT T1.District, T1.County, T1.School, T2.AdmLName1 FROM schools AS T1 JOIN schools AS T2 ON T1.CDSCode = T2.CDSCode WHERE T1.CharterNum = 40;\t----- bird -----\tcalifornia_schools",
    "87": "SELECT T1.AdmEmail1, T1.AdmEmail2, T1.AdmEmail3 FROM schools AS T1 WHERE T1.County = 'San Bernardino' AND T1.District = 'San Bernardino City Unified' AND T1.OpenDate BETWEEN '2009-01-01' AND '2010-12-31' AND T1.SOC = 62 AND T1.DOC = 54;\t----- bird -----\tcalifornia_schools",
    "88": "SELECT s.School, s.AdmEmail1 FROM satscores AS s JOIN schools AS sch ON s.cds = sch.CDSCode ORDER BY s.NumGE1500 DESC LIMIT 1;\t----- bird -----\tcalifornia_schools",
    "89": "SELECT COUNT(DISTINCT A.account_id) FROM account AS A JOIN disp AS D ON A.account_id = D.account_id WHERE D.type = 'POPLATEK PO OBRATU' AND A.district_id IN (SELECT district_id FROM district WHERE A3 LIKE '%East Bohemia%');\t----- bird -----\tfinancial",
    "90": "SELECT count(DISTINCT A.account_id) FROM account A JOIN client C ON A.district_id = C.district_id JOIN district D ON C.district_id = D.district_id WHERE D.A3 = 'Prague';\t----- bird -----\tfinancial",
    "91": "SELECT CASE WHEN district.A12 > district.A13 THEN '1995' ELSE '1996' END;\t----- bird -----\tfinancial",
    "92": "SELECT count(DISTRICT_ID) FROM district WHERE A11 > 6000 AND A11 < 10000;\t----- bird -----\tfinancial",
    "93": "SELECT count(c.client_id) FROM client c JOIN district d ON c.district_id = d.district_id WHERE c.gender = 'M' AND d.A3 = 'North Bohemia' AND d.A11 > 8000;\t----- bird -----\tfinancial",
    "94": "SELECT T1.account_id FROM client AS T1 JOIN disp AS T2 ON T1.client_id = T2.client_id JOIN account AS T3 ON T2.account_id = T3.account_id WHERE T1.gender = 'F' ORDER BY T1.birth_date ASC, district.A11 ASC LIMIT 1; SELECT district.A11 FROM district ORDER BY A11 DESC LIMIT 1; SELECT district.A11 FROM district ORDER BY A11 ASC LIMIT 1;\t----- bird -----\tfinancial",
    "95": "SELECT DISTINCT T1.account_id FROM client AS T1 JOIN district AS T2 ON T1.district_id = T2.district_id WHERE T1.birth_date = (SELECT MIN(birth_date) FROM client) AND T2.A11 = (SELECT MAX(A11) FROM district);\t----- bird -----\tfinancial",
    "96": "SELECT COUNT(DISTINCT c.client_id) FROM client c JOIN account a ON c.district_id = a.district_id WHERE a.frequency = 'POPLATEK TYDNE' AND c.gender = 'Owner';\t----- bird -----\tfinancial",
    "97": "SELECT DISTINCT d.client_id FROM disp d JOIN trans t ON d.disp_id = t.disp_id WHERE t.operation = 'POPLATEK PO OBRATU';\t----- bird -----\tfinancial",
    "98": "SELECT T1.account_id FROM loan AS T1 JOIN account AS T2 ON T1.account_id = T2.account_id WHERE strftime('%Y', T1.date) = '1997' AND T2.frequency = 'POPLATEK TYDNE' ORDER BY T1.amount LIMIT 1;\t----- bird -----\tfinancial",
    "99": "SELECT DISTINCT account_id FROM loan WHERE duration > 12 AND account_id IN (SELECT account_id FROM account WHERE strftime('%Y', date) = '1993') ORDER BY amount DESC LIMIT 1;\t----- bird -----\tfinancial",
    "100": "SELECT COUNT(c.client_id) FROM client c JOIN account a ON c.district_id = a.district_id WHERE c.gender = 'F' AND c.birth_date < '1950-01-01' AND a.district_id IN (SELECT district_id FROM district WHERE A2 LIKE '%Sokolov%');\t----- bird -----\tfinancial",
    "101": "SELECT account_id FROM trans WHERE strftime('%Y', date) = '1995' ORDER BY date ASC LIMIT 1;\t----- bird -----\tfinancial",
    "102": "SELECT DISTINCT account_id FROM account WHERE date < '1997-01-01' AND account_id IN (SELECT account_id FROM trans WHERE amount > 1000);\t----- bird -----\tfinancial",
    "103": "SELECT c.client_id FROM client c JOIN disp d ON c.client_id = d.client_id JOIN card ca ON d.disp_id = ca.disp_id WHERE ca.issued = '1994-03-03';\t----- bird -----\tfinancial",
    "104": "SELECT T1.date FROM account AS T1 INNER JOIN trans AS T2 ON T1.account_id = T2.account_id WHERE T2.amount = 840 AND T2.date = '1998-10-14';\t----- bird -----\tfinancial",
    "105": "SELECT T1.district_id FROM account AS T1 INNER JOIN loan AS T2 ON T1.account_id = T2.account_id WHERE T2.date = '1994-08-25';\t----- bird -----\tfinancial",
    "106": "SELECT MAX(T.amount) FROM trans AS T JOIN disp AS D ON T.account_id = D.account_id JOIN card AS C ON D.disp_id = C.disp_id WHERE STRFTIME('%Y/%m/%d', C.issued) = '1996/10/21';\t----- bird -----\tfinancial",
    "107": "SELECT T1.gender FROM client AS T1 JOIN district AS T2 ON T1.district_id = T2.district_id ORDER BY T1.birth_date ASC LIMIT 1;\t----- bird -----\tfinancial",
    "108": "SELECT T1.amount FROM trans AS T1 JOIN account AS T2 ON T1.account_id = T2.account_id JOIN loan AS T3 ON T2.account_id = T3.account_id WHERE T3.amount = (SELECT MAX(amount) FROM loan) ORDER BY T1.date ASC LIMIT 1;\t----- bird -----\tfinancial",
    "109": "SELECT count(c.client_id) FROM client c JOIN account a ON c.district_id = a.district_id WHERE a.district_id IN (SELECT district_id FROM district WHERE A2 = 'Jesenik') AND c.gender = 'F';\t----- bird -----\tfinancial",
    "110": "SELECT d.disp_id FROM disp d JOIN trans t ON d.disp_id = t.disp_id WHERE t.amount = 5100 AND t.date = '1998-09-02';\t----- bird -----\tfinancial",
    "111": "SELECT COUNT(a.account_id) FROM account a JOIN district d ON a.district_id = d.district_id WHERE d.A2 = 'Litomerice' AND strftime('%Y', a.date) = '1996';\t----- bird -----\tfinancial",
    "112": "SELECT T1.district_id FROM client AS T1 JOIN account AS T2 ON T1.district_id = T2.district_id WHERE T1.gender = 'F' AND T1.birth_date = '1976-01-29';\t----- bird -----\tfinancial",
    "113": "SELECT T1.birth_date FROM client AS T1 JOIN loan AS T2 ON T1.client_id = T2.client_id WHERE T2.amount = 98832 AND T2.date = '1996-01-03';\t----- bird -----\tfinancial",
    "114": "SELECT T1.account_id FROM account AS T1 JOIN client AS T2 ON T1.district_id = T2.district_id WHERE T2.district_id = (SELECT district_id FROM district WHERE A3 = 'Prague') LIMIT 1;\t----- bird -----\tfinancial",
    "115": "SELECT CAST(SUM(CASE WHEN T1.gender = 'M' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(T1.client_id) FROM client AS T1 JOIN district AS T2 ON T1.district_id = T2.district_id WHERE T2.A3 = 'South Bohemia' ORDER BY T2.A4 DESC LIMIT 1;\t----- bird -----\tfinancial",
    "116": "SELECT ( (t2.balance - t1.balance) / t1.balance ) * 100 FROM trans t1 JOIN trans t2 ON t1.account_id = t2.account_id AND t1.date = '1993-03-22' AND t2.date = '1998-12-27' WHERE t1.account_id IN (SELECT account_id FROM loan WHERE date = '1993-07-05' AND status = 'approved' LIMIT 1);\t----- bird -----\tfinancial",
    "117": "SELECT SUM(CASE WHEN L.status = 'A' THEN L.amount ELSE 0 END) * 100.0 / SUM(L.amount) FROM loan AS L;\t----- bird -----\tfinancial",
    "118": "SELECT CAST(SUM(CASE WHEN L.status = 'C' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(L.account_id) FROM loan L WHERE L.amount < 100000;\t----- bird -----\tfinancial",
    "119": "SELECT T1.account_id, T3.A2, T3.A3 FROM account AS T1 JOIN disp AS T2 ON T1.account_id = T2.account_id JOIN district AS T3 ON T1.district_id = T3.district_id WHERE T1.date LIKE '1993%' AND T2.type = 'POPLATEK PO OBRATU';\t----- bird -----\tfinancial",
    "120": "SELECT T1.account_id, T1.frequency FROM account AS T1 JOIN client AS T2 ON T1.district_id = T2.district_id JOIN district AS T3 ON T2.district_id = T3.district_id WHERE T3.A1 = 'east Bohemia' AND T1.date BETWEEN '1995-01-01' AND '2000-12-31';\t----- bird -----\tfinancial",
    "121": "SELECT account.account_id, account.date FROM account JOIN district ON account.district_id = district.district_id WHERE district.A2 = 'Prachatice';\t----- bird -----\tfinancial",
    "122": "SELECT T1.A2, T1.A3 FROM district AS T1 JOIN account AS T2 ON T1.district_id = T2.district_id JOIN loan AS T3 ON T2.district_id = T3.account_id WHERE T3.loan_id = '4990';\t----- bird -----\tfinancial",
    "123": "SELECT T1.account_id, T1.district_id, district.A3 FROM loan AS T1 JOIN account AS T2 ON T1.account_id = T2.account_id JOIN district ON T2.district_id = district.district_id WHERE T1.amount > 100000;\t----- bird -----\tfinancial",
    "124": "SELECT L.loan_id, D.A11, D.district_id FROM loan AS L JOIN account AS A ON L.account_id = A.account_id JOIN district AS D ON A.district_id = D.district_id WHERE L.duration = 60;\t----- bird -----\tfinancial",
    "125": "SELECT T1.A12, (T1.A13 - T1.A12) * 100 FROM district AS T1 JOIN loan AS T2 ON T1.district_id = T2.account_id WHERE T2.status = 'D';\t----- bird -----\tfinancial",
    "126": "SELECT CAST(SUM(CASE WHEN T1.date LIKE '1993%' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(T1.account_id) FROM account AS T1 JOIN district AS T2 ON T1.district_id = T2.district_id WHERE T2.A2 = 'Decin';\t----- bird -----\tfinancial",
    "127": "SELECT account_id FROM account WHERE frequency = 'POPLATEK MESICNE';\t----- bird -----\tfinancial",
    "128": "SELECT T1.district_id FROM client AS T1 JOIN account AS T2 ON T1.district_id = T2.district_id WHERE T1.gender = 'F' GROUP BY T1.district_id ORDER BY COUNT(*) DESC LIMIT 9;\t----- bird -----\tfinancial",
    "129": "SELECT T1.A2 FROM district AS T1 JOIN client AS T2 ON T1.district_id = T2.district_id JOIN trans AS T3 ON T2.district_id = T3.account_id WHERE T3.type = 'VYDAJ' AND T3.date LIKE '1996-01%' GROUP BY T1.A2 ORDER BY SUM(T3.amount) DESC LIMIT 10;\t----- bird -----\tfinancial",
    "130": "SELECT COUNT(DISTINCT A.account_id) FROM account A JOIN client C ON A.district_id = C.district_id JOIN district D ON C.district_id = D.district_id WHERE D.A3 = 'South Bohemia' AND NOT EXISTS (SELECT 1 FROM card WHERE card.disp_id IN (SELECT disp_id FROM disp WHERE disp.account_id = A.account_id));\t----- bird -----\tfinancial",
    "131": "SELECT district_id FROM loan WHERE status = 'C' GROUP BY district_id ORDER BY count(*) DESC LIMIT 1;\t----- bird -----\tfinancial",
    "132": "SELECT AVG(L.amount) FROM loan AS L JOIN account AS A ON L.account_id = A.account_id JOIN client AS C ON A.district_id = C.district_id WHERE C.gender = 'M';\t----- bird -----\tfinancial",
    "133": "SELECT D.A13, D.A2 FROM district AS D WHERE YEAR(D.A13) = 1996 ORDER BY D.A13 DESC LIMIT 1;\t----- bird -----\tfinancial",
    "134": "SELECT COUNT(T1.account_id) FROM account AS T1 JOIN district AS T2 ON T1.district_id = T2.district_id WHERE T2.A16 = (SELECT MAX(A16) FROM district);\t----- bird -----\tfinancial",
    "135": "SELECT count(DISTINCT T1.account_id) FROM trans AS T1 JOIN account AS T2 ON T1.account_id = T2.account_id WHERE T1.operation = 'VYBER KARTOU' AND T2.frequency = 'POPLATEK MESICNE' AND T1.balance < 0;\t----- bird -----\tfinancial",
    "136": "SELECT COUNT(loan_id) FROM loan WHERE date BETWEEN '1995-01-01' AND '1997-12-31' AND amount >= 250000 AND account_id IN (SELECT account_id FROM account WHERE frequency = 'POPLATEK MESICNE');\t----- bird -----\tfinancial",
    "137": "SELECT COUNT(DISTINCT account_id) FROM loan WHERE status = 'C' AND account_id IN (SELECT account_id FROM account WHERE district_id = 1);\t----- bird -----\tfinancial",
    "138": "SELECT COUNT(c.client_id) FROM client c JOIN district d ON c.district_id = d.district_id WHERE d.A15 = (SELECT MAX(A15) FROM district WHERE A15 < (SELECT MAX(A15) FROM district)) AND c.gender = 'M';\t----- bird -----\tfinancial",
    "139": "SELECT COUNT(card_id) FROM card WHERE type = 'gold' AND disp_id IN (SELECT disp_id FROM disp WHERE type = 'OWNER');\t----- bird -----\tfinancial",
    "140": "SELECT COUNT(account_id) FROM account WHERE district_id IN (SELECT district_id FROM district WHERE A2 = 'Pisek');\t----- bird -----\tfinancial",
    "141": "SELECT DISTINCT T1.district_id FROM client AS T1 JOIN trans AS T2 ON T1.district_id = T2.account_id WHERE T2.amount > 10000 AND STRFTIME('%Y', T2.date) = '1997';\t----- bird -----\tfinancial",
    "142": "SELECT DISTINCT T1.account_id FROM order AS T1 JOIN district AS T2 ON T1.bank_to = T2.district_id WHERE T2.A2 = 'Pisek' AND T1.k_symbol = 'SIPO';\t----- bird -----\tfinancial",
    "143": "SELECT DISTINCT disp.account_id FROM disp JOIN card ON disp.disp_id = card.disp_id WHERE card.type = 'credit' AND card.type LIKE '%gold%';\t----- bird -----\tfinancial",
    "144": "SELECT AVG(T1.amount) FROM trans AS T1 INNER JOIN account AS T2 ON T1.account_id = T2.account_id WHERE T1.type = 'VYBER KARTOU' AND STRFTIME('%Y', T1.date) = '2021';\t----- bird -----\tfinancial",
    "145": "SELECT DISTINCT T1.account_id FROM trans AS T1 JOIN (SELECT AVG(amount) AS avg_amount FROM trans WHERE type = 'VYBER KARTOU' AND date BETWEEN '1998-01-01' AND '1998-12-31') AS T2 WHERE T1.type = 'VYBER KARTOU' AND T1.amount < T2.avg_amount AND T1.date BETWEEN '1998-01-01' AND '1998-12-31';\t----- bird -----\tfinancial",
    "146": "SELECT DISTINCT C.client_id FROM client AS C JOIN account AS A ON C.district_id = A.district_id JOIN disp AS D ON A.account_id = D.account_id JOIN card AS CA ON D.disp_id = CA.disp_id JOIN loan AS L ON A.account_id = L.account_id WHERE C.gender = 'F' AND CA.type = 'CREDIT' AND L.status = 'ACTIVE';\t----- bird -----\tfinancial",
    "147": "SELECT COUNT(DISTINCT A.account_id) FROM client AS C JOIN account AS A ON C.district_id = A.district_id JOIN district AS D ON C.district_id = D.district_id WHERE C.gender = 'F' AND D.A3 = 'south Bohemia';\t----- bird -----\tfinancial",
    "148": "SELECT account_id FROM account WHERE district_id IN (SELECT district_id FROM district WHERE A2 = 'Tabor') AND frequency = 'OWNER';\t----- bird -----\tfinancial",
    "149": "SELECT DISTINCT d.A11 FROM disp d JOIN account a ON d.disp_id = a.account_id JOIN client c ON a.district_id = c.district_id JOIN district dist ON c.district_id = dist.district_id WHERE a.account_id NOT IN (SELECT account_id FROM account WHERE account_id IN (SELECT account_id FROM disp WHERE type = 'OWNER')) AND CAST(dist.A11 AS DECIMAL) >= 8000 AND CAST(dist.A11 AS DECIMAL) <= 9000;\t----- bird -----\tfinancial",
    "150": "SELECT COUNT(DISTINCT T1.account_id) FROM trans AS T1 JOIN district AS T2 ON T1.account_id IN (SELECT account_id FROM account WHERE district_id = T2.district_id) WHERE T2.A3 = 'North Bohemia' AND T1.bank = 'AB';\t----- bird -----\tfinancial",
    "151": "SELECT DISTINCT T1.A2 FROM district AS T1 JOIN account AS T2 ON T1.district_id = T2.district_id JOIN trans AS T3 ON T2.account_id = T3.account_id WHERE T3.type = 'VYDAJ';\t----- bird -----\tfinancial",
    "152": "SELECT AVG(A15) FROM district WHERE A15 > 4000 AND district_id IN (SELECT district_id FROM account WHERE date >= '1997-01-01');\t----- bird -----\tfinancial",
    "153": "SELECT count(*) FROM card WHERE type = 'classic' AND EXISTS (SELECT 1 FROM disp d WHERE d.card_id = card.card_id AND d.type = 'OWNER');\t----- bird -----\tfinancial",
    "154": "SELECT COUNT(*) FROM client WHERE gender = 'M' AND district_id = (SELECT district_id FROM district WHERE A2 = 'Hl.m. Praha');\t----- bird -----\tfinancial",
    "155": "SELECT CAST(SUM(CASE WHEN type = 'gold' AND issued < '1998-01-01' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(card_id) FROM card;\t----- bird -----\tfinancial",
    "156": "SELECT C.client_id FROM client AS C JOIN account AS A ON C.district_id = A.district_id JOIN loan AS L ON A.account_id = L.account_id ORDER BY L.amount DESC LIMIT 1;\t----- bird -----\tfinancial",
    "157": "SELECT A15 FROM district WHERE district_id = (SELECT district_id FROM account WHERE account_id = 532);\t----- bird -----\tfinancial",
    "158": "SELECT T1.district_id FROM account AS T1 JOIN order AS T2 ON T1.account_id = T2.account_id WHERE T2.order_id = 33333;\t----- bird -----\tfinancial",
    "159": "SELECT T1.trans_id FROM trans AS T1 JOIN disp AS T2 ON T1.account_id = T2.account_id WHERE T2.client_id = 3356 AND T1.operation = 'VYBER';\t----- bird -----\tfinancial",
    "160": "SELECT COUNT(T1.account_id) FROM account AS T1 INNER JOIN loan AS T2 ON T1.account_id = T2.account_id WHERE T1.frequency = 'POPLATEK TYDNE' AND T2.amount < 200000;\t----- bird -----\tfinancial",
    "161": "SELECT T1.type FROM card AS T1 INNER JOIN disp AS T2 ON T1.card_id = T2.card_id WHERE T2.client_id = 13539;\t----- bird -----\tfinancial",
    "162": "SELECT T1.A3 FROM district AS T1 JOIN client AS T2 ON T1.district_id = T2.district_id WHERE T2.client_id = 3541;\t----- bird -----\tfinancial",
    "163": "SELECT T1.district_id FROM client AS T1 JOIN account AS T2 ON T1.district_id = T2.district_id JOIN loan AS T3 ON T2.account_id = T3.account_id WHERE T3.status = 'A' GROUP BY T1.district_id ORDER BY COUNT(*) DESC LIMIT 1;\t----- bird -----\tfinancial",
    "164": "SELECT T1.account_id FROM order AS T1 WHERE T1.order_id = 32423;\t----- bird -----\tfinancial",
    "165": "SELECT * FROM trans WHERE account_id IN (SELECT account_id FROM account WHERE district_id = 5);\t----- bird -----\tfinancial",
    "166": "SELECT count(*) FROM account WHERE district_id IN (SELECT district_id FROM district WHERE district_id = (SELECT district_id FROM district WHERE A2 = 'Jesenik'));\t----- bird -----\tfinancial",
    "167": "SELECT DISTINCT c.client_id FROM client c JOIN disp d ON c.client_id = d.client_id JOIN card ca ON d.disp_id = ca.disp_id WHERE ca.type = 'junior' AND ca.issued > '1996-12-31';\t----- bird -----\tfinancial",
    "168": "SELECT CAST(SUM(CASE WHEN c.gender = 'F' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(c.client_id) FROM client c JOIN district d ON c.district_id = d.district_id WHERE d.A11 > 10000;\t----- bird -----\tfinancial",
    "169": "SELECT (SUM(L.amount) - SUM(L.amount)) / SUM(L.amount) * 100 FROM loan AS L JOIN account AS A ON L.account_id = A.account_id JOIN client AS C ON A.district_id = C.district_id WHERE C.gender = 'M' AND L.date BETWEEN '1996-01-01' AND '1997-12-31';\t----- bird -----\tfinancial",
    "170": "SELECT count(*) FROM trans WHERE operation = 'VYBER KARTOU' AND date > '1995-12-31';\t----- bird -----\tfinancial",
    "171": "SELECT ABS(SUM(CASE WHEN district.A3 = 'North Bohemia' THEN 1 ELSE 0 END) - SUM(CASE WHEN district.A3 = 'East Bohemia' THEN 1 ELSE 0 END)) FROM district;\t----- bird -----\tfinancial",
    "172": "SELECT COUNT(T1.disp_id) FROM disp AS T1 WHERE T1.account_id BETWEEN 1 AND 10;\t----- bird -----\tfinancial",
    "173": "SELECT COUNT(T1.date), SUM(T1.amount) FROM trans AS T1 WHERE T1.account_id = 3 AND T1.k_symbol = 'account statement' AND T1.account = 3539;\t----- bird -----\tfinancial",
    "174": "SELECT STRFTIME('%Y', birth_date) FROM client WHERE client_id = 130;\t----- bird -----\tfinancial",
    "175": "SELECT count(DISTINCT account_id) FROM disp WHERE type = 'OWNER DISPOSITION' AND account_id IN (SELECT account_id FROM trans WHERE type = 'STATEMENT REQUEST');\t----- bird -----\tfinancial",
    "176": "SELECT SUM(L.amount) AS total_debt, COUNT(DISTINCT L.loan_id) AS number_of_loans FROM loan L JOIN account A ON L.account_id = A.account_id WHERE A.client_id = 992;\t----- bird -----\tfinancial",
    "177": "SELECT SUM(T1.amount), C1.gender FROM trans AS T1 JOIN account AS A1 ON T1.account_id = A1.account_id JOIN client AS C1 ON A1.district_id = C1.district_id WHERE T1.trans_id > 851 AND A1.account_id IN (SELECT account_id FROM disp WHERE client_id = 4) GROUP BY C1.gender;\t----- bird -----\tfinancial",
    "178": "SELECT T1.type FROM card AS T1 INNER JOIN disp AS T2 ON T1.card_id = T2.card_id WHERE T2.client_id = 9;\t----- bird -----\tfinancial",
    "179": "SELECT sum(amount) FROM trans WHERE account_id IN (SELECT account_id FROM client WHERE client_id = 617) AND strftime('%Y', date) = '1998';\t----- bird -----\tfinancial",
    "180": "SELECT c.client_id FROM client c JOIN account a ON c.district_id = a.district_id WHERE strftime('%Y', c.birth_date) BETWEEN '1983' AND '1987' AND a.district_id = (SELECT district_id FROM district WHERE A1 = 'East Bohemia');\t----- bird -----\tfinancial",
    "181": "SELECT client_id FROM client WHERE gender = 'F' ORDER BY client_id DESC LIMIT 3;\t----- bird -----\tfinancial",
    "182": "SELECT count(*) FROM client WHERE gender = 'M' AND birth_date BETWEEN '1974-01-01' AND '1976-12-31' AND EXISTS (SELECT 1 FROM disp WHERE disp.client_id = client.client_id AND type = 'SIPO' AND amount > 4000);\t----- bird -----\tfinancial",
    "183": "SELECT COUNT(a.account_id) FROM account a JOIN district d ON a.district_id = d.district_id WHERE d.A2 = 'Beroun' AND a.date > '1996-12-31';\t----- bird -----\tfinancial",
    "184": "SELECT COUNT(DISTINCT c.client_id) FROM client c JOIN disp d ON c.client_id = d.client_id JOIN card ca ON d.disp_id = ca.disp_id WHERE c.gender = 'F' AND ca.type = 'JUNIOR';\t----- bird -----\tfinancial",
    "185": "SELECT CAST(SUM(CASE WHEN c.gender = 'F' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(c.client_id) FROM client c JOIN account a ON c.district_id = a.district_id WHERE a.district_id IN (SELECT district_id FROM district WHERE A3 = 'Prague');\t----- bird -----\tfinancial",
    "186": "SELECT (COUNT(CASE WHEN C.gender = 'M' AND T.operation = 'POPLATEK TYDNE' THEN 1 END) * 100.0) / COUNT(T.operation) FROM client AS C JOIN disp AS D ON C.client_id = D.client_id JOIN trans AS T ON D.account_id = T.account_id WHERE T.operation = 'POPLATEK TYDNE';\t----- bird -----\tfinancial",
    "187": "SELECT COUNT(DISTINCT c.client_id) FROM client c JOIN account a ON c.district_id = a.district_id WHERE a.frequency = 'POPLATEK TYDNE' AND c.gender = 'Owner';\t----- bird -----\tfinancial",
    "188": "SELECT account_id FROM loan WHERE duration > 24 AND account_id IN (SELECT account_id FROM account WHERE date < '1997-01-01' ORDER BY amount ASC LIMIT 1);\t----- bird -----\tfinancial",
    "189": "SELECT T1.account_id FROM client AS T1 JOIN district AS T2 ON T1.district_id = T2.district_id WHERE T1.gender = 'F' ORDER BY T1.birth_date ASC, T2.A11 ASC LIMIT 1;\t----- bird -----\tfinancial",
    "190": "SELECT COUNT(client_id) FROM client WHERE strftime('%Y', birth_date) = '1920' AND district_id IN (SELECT district_id FROM district WHERE A3 = 'East Bohemia');\t----- bird -----\tfinancial",
    "191": "SELECT COUNT(DISTINCT account_id) FROM loan WHERE duration = 24 AND account_id IN (SELECT account_id FROM account WHERE frequency = 'POPLATEK TYDNE');\t----- bird -----\tfinancial",
    "192": "SELECT avg(T1.amount) FROM loan AS T1 INNER JOIN trans AS T2 ON T1.account_id = T2.account_id WHERE T1.status = 'C' AND T2.k_symbol = 'POPLATEK PO OBRATU';\t----- bird -----\tfinancial",
    "193": "SELECT DISTINCT c.client_id, c.district_id FROM client c JOIN account a ON c.district_id = a.district_id WHERE c.client_id IN (SELECT disp_id FROM disp WHERE account_id IN (SELECT account_id FROM account) OR account_id IN (SELECT account_id FROM loan));\t----- bird -----\tfinancial",
    "194": "SELECT c.client_id, CAST(STRFTIME('%Y', 'now') - STRFTIME('%Y', c.birth_date) AS INTEGER) AS age FROM client c JOIN card ca ON c.client_id = ca.client_id WHERE ca.type = 'gold' AND EXISTS (SELECT 1 FROM disp d WHERE d.client_id = c.client_id AND d.type = 'OWNER');\t----- bird -----\tfinancial",
    "195": "SELECT bond_type FROM bond GROUP BY bond_type ORDER BY COUNT(*) DESC LIMIT 1;\t----- bird -----\ttoxicology",
    "196": "SELECT COUNT(DISTINCT m.molecule_id) FROM molecule m JOIN atom a ON m.molecule_id = a.molecule_id WHERE m.label = '-' AND a.element = 'cl';\t----- bird -----\ttoxicology",
    "197": "SELECT AVG(oxygen_count) FROM (SELECT COUNT(a.element) AS oxygen_count FROM molecule m JOIN atom a ON m.molecule_id = a.molecule_id JOIN bond b ON m.molecule_id = b.molecule_id WHERE b.bond_type = '-' GROUP BY m.molecule_id) AS subquery;\t----- bird -----\ttoxicology",
    "198": "SELECT AVG(CASE WHEN m.label = '+' THEN 1 ELSE 0 END) FROM molecule AS m JOIN bond AS b ON m.molecule_id = b.molecule_id WHERE b.bond_type = '-';\t----- bird -----\ttoxicology",
    "199": "SELECT COUNT(m.molecule_id) FROM molecule m JOIN atom a ON m.molecule_id = a.molecule_id WHERE a.element = 'na' AND m.label = '-';\t----- bird -----\ttoxicology",
    "200": "SELECT DISTINCT m.label FROM molecule AS m JOIN bond AS b ON m.molecule_id = b.molecule_id WHERE b.bond_type = '#' AND m.label = '+';\t----- bird -----\ttoxicology",
    "201": "SELECT SUM(CASE WHEN T1.element = 'c' THEN 1 ELSE 0 END) * 1.0 / COUNT(T1.atom_id) FROM atom AS T1 JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id JOIN bond AS T3 ON T2.molecule_id = T3.molecule_id WHERE T3.bond_type = '=';\t----- bird -----\ttoxicology",
    "202": "SELECT count(*) FROM bond WHERE bond_type = '#';\t----- bird -----\ttoxicology",
    "203": "SELECT COUNT(*) FROM atom WHERE element != 'br';\t----- bird -----\ttoxicology",
    "204": "SELECT COUNT(*) FROM molecule WHERE molecule_id LIKE 'TR0%' AND label = '+' LIMIT 100;\t----- bird -----\ttoxicology",
    "205": "SELECT DISTINCT molecule_id FROM atom WHERE element = 'c';\t----- bird -----\ttoxicology",
    "206": "SELECT T1.element FROM atom AS T1 JOIN connected AS T2 ON T1.atom_id = T2.atom_id JOIN bond AS T3 ON T2.bond_id = T3.bond_id WHERE T3.bond_id = 'TR004_8_9';\t----- bird -----\ttoxicology",
    "207": "SELECT DISTINCT T1.element FROM atom AS T1 JOIN connected AS T2 ON T1.atom_id = T2.atom_id JOIN bond AS T3 ON T2.bond_id = T3.bond_id WHERE T3.bond_type = '=';\t----- bird -----\ttoxicology",
    "208": "SELECT label FROM molecule WHERE molecule_id IN (SELECT molecule_id FROM atom WHERE element = 'h') GROUP BY label ORDER BY COUNT(*) DESC LIMIT 1;\t----- bird -----\ttoxicology",
    "209": "SELECT T1.bond_type FROM bond AS T1 INNER JOIN connected AS T2 ON T1.bond_id = T2.bond_id INNER JOIN atom AS T3 ON T2.atom_id = T3.atom_id WHERE T3.element = 'cl';\t----- bird -----\ttoxicology",
    "210": "SELECT DISTINCT a1.atom_id, a2.atom_id FROM atom a1 JOIN connected c1 ON a1.atom_id = c1.atom_id JOIN connected c2 ON c2.atom_id2 = a1.atom_id JOIN bond b ON c1.bond_id = b.bond_id WHERE b.bond_type = '-';\t----- bird -----\ttoxicology",
    "211": "SELECT T1.atom_id, T2.atom_id2 FROM connected AS T1 JOIN connected AS T2 ON T1.bond_id = T2.bond_id JOIN bond AS T3 ON T1.bond_id = T3.bond_id JOIN molecule AS M ON T3.molecule_id = M.molecule_id WHERE M.label = '-';\t----- bird -----\ttoxicology",
    "212": "SELECT element FROM atom WHERE molecule_id IN (SELECT molecule_id FROM molecule WHERE label = '-') GROUP BY element ORDER BY COUNT(element) ASC LIMIT 1;\t----- bird -----\ttoxicology",
    "213": "SELECT T1.bond_type FROM bond AS T1 INNER JOIN connected AS T2 ON T1.bond_id = T2.bond_id WHERE (T2.atom_id = 'TR004_8' AND T2.atom_id2 = 'TR004_20') OR (T2.atom_id = 'TR004_20' AND T2.atom_id2 = 'TR004_8');\t----- bird -----\ttoxicology",
    "214": "SELECT DISTINCT label FROM molecule WHERE molecule_id NOT IN (SELECT molecule_id FROM atom WHERE element = 'sn');\t----- bird -----\ttoxicology",
    "215": "SELECT COUNT(DISTINCT atom_id) FROM atom WHERE element = 'i' OR element = 's' AND molecule_id IN (SELECT molecule_id FROM bond WHERE bond_type = '-');\t----- bird -----\ttoxicology",
    "216": "SELECT DISTINCT atom_id FROM connected WHERE bond_id IN (SELECT bond_id FROM bond WHERE bond_type = '#');\t----- bird -----\ttoxicology",
    "217": "SELECT DISTINCT T1.atom_id FROM connected AS T1 INNER JOIN molecule AS T2 ON T1.atom_id IN (SELECT atom_id FROM connected WHERE bond_id IN (SELECT bond_id FROM connected WHERE atom_id2 IN (SELECT atom_id FROM atom WHERE molecule_id = (SELECT molecule_id FROM molecule WHERE label = 'TR181')))) AND T2.molecule_id = (SELECT molecule_id FROM molecule WHERE label = 'TR181');\t----- bird -----\ttoxicology",
    "218": "SELECT 100 * SUM(CASE WHEN element <> 'f' THEN 1 ELSE 0 END) * 1.0 / COUNT(DISTINCT molecule_id) FROM atom WHERE molecule_id IN (SELECT molecule_id FROM molecule WHERE label = '+');\t----- bird -----\ttoxicology",
    "219": "SELECT DIVIDE(SUM(CASE WHEN m.label = '+' THEN 1 ELSE 0 END), COUNT(m.molecule_id)) * 100 AS percentage FROM molecule m JOIN connected c ON m.molecule_id = c.atom_id JOIN bond b ON c.bond_id = b.bond_id WHERE b.bond_type = '#';\t----- bird -----\ttoxicology",
    "220": "SELECT element FROM atom WHERE molecule_id = (SELECT molecule_id FROM molecule WHERE label = 'TR000') GROUP BY element ORDER BY element ASC LIMIT 3;\t----- bird -----\ttoxicology",
    "221": "SELECT DISTINCT a.atom_id FROM atom a JOIN connected c ON a.atom_id = c.atom_id WHERE c.bond_id = 'TR001_2_6' AND c.atom_id2 IN (SELECT atom_id FROM atom WHERE molecule_id = (SELECT molecule_id FROM molecule WHERE label = 'TR001'));\t----- bird -----\ttoxicology",
    "222": "SELECT SUBTRACT(SUM(CASE WHEN label = '+' THEN 1 ELSE 0 END), SUM(CASE WHEN label = '-' THEN 1 ELSE 0 END)) FROM molecule;\t----- bird -----\ttoxicology",
    "223": "SELECT T1.atom_id FROM connected AS T1 JOIN bond AS T2 ON T1.bond_id = T2.bond_id WHERE T2.bond_id = 'TR000_2_5';\t----- bird -----\ttoxicology",
    "224": "SELECT bond_id FROM connected WHERE atom_id2 = 2;\t----- bird -----\ttoxicology",
    "225": "SELECT m.label FROM molecule m JOIN atom a ON m.molecule_id = a.molecule_id JOIN connected c ON a.atom_id = c.atom_id JOIN bond b ON c.bond_id = b.bond_id WHERE b.bond_type = ' = ' GROUP BY m.molecule_id ORDER BY m.label LIMIT 5;\t----- bird -----\ttoxicology",
    "226": "SELECT CAST(SUM(CASE WHEN bond_type = '=' THEN 1 ELSE 0 END) * 1.0 / COUNT(bond_id) AS DECIMAL(5, 5)) FROM bond WHERE molecule_id = 'TR008';\t----- bird -----\ttoxicology",
    "227": "SELECT CAST(SUM(CASE WHEN label = '+' THEN 1 ELSE 0 END) * 100.0 / COUNT(molecule_id) AS DECIMAL(5,3));\t----- bird -----\ttoxicology",
    "228": "SELECT CAST(percentage AS DECIMAL(5,4)) FROM (SELECT DIVIDE(SUM(CASE WHEN element = 'h' THEN 1 ELSE 0 END), COUNT(atom_id)) as percentage FROM atom WHERE molecule_id = 'TR206') AS subquery;\t----- bird -----\ttoxicology",
    "229": "SELECT DISTINCT bond.bond_type FROM bond WHERE bond.molecule_id = 'TR000';\t----- bird -----\ttoxicology",
    "230": "SELECT T1.element, T2.label FROM atom AS T1 JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id WHERE T2.molecule_id = 'TR060';\t----- bird -----\ttoxicology",
    "231": "SELECT b.bond_type FROM bond AS b JOIN connected AS c ON b.bond_id = c.bond_id JOIN molecule AS m ON b.molecule_id = m.molecule_id WHERE m.molecule_id = 'TR010' GROUP BY b.bond_type ORDER BY COUNT(*) DESC LIMIT 1;\t----- bird -----\ttoxicology",
    "232": "SELECT molecule_id FROM molecule WHERE label = '-' AND molecule_id IN (SELECT molecule_id FROM bond WHERE bond_type = '-') ORDER BY label ASC LIMIT 3;\t----- bird -----\ttoxicology",
    "233": "SELECT bond_id FROM bond WHERE molecule_id = 'TR006' ORDER BY bond_type ASC LIMIT 2;\t----- bird -----\ttoxicology",
    "234": "SELECT COUNT(T1.bond_id) FROM connected AS T1 WHERE T1.atom_id = 'TR009_12' OR T1.atom_id2 = 'TR009_12' AND T1.bond_id IN (SELECT bond_id FROM bond WHERE molecule_id = 'TR009');\t----- bird -----\ttoxicology",
    "235": "SELECT COUNT(DISTINCT molecule_id) FROM atom WHERE element = 'br' AND molecule_id IN (SELECT molecule_id FROM molecule WHERE label = '+');\t----- bird -----\ttoxicology",
    "236": "SELECT b.bond_type, c.atom_id, c.atom_id2 FROM bond AS b JOIN connected AS c ON b.bond_id = c.bond_id WHERE b.bond_id = 'TR001_6_9';\t----- bird -----\ttoxicology",
    "237": "SELECT M.label FROM molecule AS M JOIN atom AS A ON M.molecule_id = A.molecule_id WHERE A.atom_id = 'TR001_10';\t----- bird -----\ttoxicology",
    "238": "SELECT count(DISTINCT molecule_id) FROM bond WHERE bond_type = '#';\t----- bird -----\ttoxicology",
    "239": "SELECT count(*) FROM connected WHERE atom_id = 'TR%_19';\t----- bird -----\ttoxicology",
    "240": "SELECT T1.element FROM atom AS T1 JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id WHERE T2.molecule_id = 'TR004';\t----- bird -----\ttoxicology",
    "241": "SELECT COUNT(*) FROM molecule WHERE label = '-';\t----- bird -----\ttoxicology",
    "242": "SELECT DISTINCT m.label FROM molecule AS m JOIN atom AS a ON m.molecule_id = a.molecule_id WHERE SUBSTR(a.atom_id, 7, 2) BETWEEN '21' AND '25' AND m.label = '+';\t----- bird -----\ttoxicology",
    "243": "SELECT DISTINCT t1.bond_id FROM connected AS t1 JOIN atom AS t2 ON t1.atom_id = t2.atom_id AND t2.element = 'p' JOIN atom AS t3 ON t1.atom_id2 = t3.atom_id AND t3.element = 'n';\t----- bird -----\ttoxicology",
    "244": "SELECT T1.label FROM molecule AS T1 WHERE T1.molecule_id IN (SELECT molecule_id FROM bond WHERE bond_type = ' = ' GROUP BY molecule_id ORDER BY COUNT(*) DESC LIMIT 1) AND T1.label = '+';\t----- bird -----\ttoxicology",
    "245": "SELECT AVG(CASE WHEN a.element = 'i' THEN 1 ELSE 0 END) FROM atom a JOIN connected c ON a.atom_id = c.atom_id;\t----- bird -----\ttoxicology",
    "246": "SELECT T1.bond_type, T1.bond_id FROM bond AS T1 JOIN connected AS T2 ON T1.bond_id = T2.bond_id WHERE T2.atom_id = 45;\t----- bird -----\ttoxicology",
    "247": "SELECT DISTINCT element FROM atom WHERE atom_id NOT IN (SELECT atom_id FROM connected);\t----- bird -----\ttoxicology",
    "248": "SELECT T1.atom_id FROM connected AS T1 INNER JOIN bond AS T2 ON T1.bond_id = T2.bond_id INNER JOIN molecule AS T3 ON T2.molecule_id = T3.molecule_id WHERE T3.label = 'TR041' AND T2.bond_type = '#';\t----- bird -----\ttoxicology",
    "249": "SELECT T1.element FROM atom AS T1 JOIN connected AS T2 ON T1.atom_id = T2.atom_id JOIN bond AS T3 ON T2.bond_id = T3.bond_id WHERE T3.bond_id = 'TR144_8_19';\t----- bird -----\ttoxicology",
    "250": "SELECT m.label FROM molecule m JOIN atom a ON m.molecule_id = a.molecule_id WHERE m.label = '+' GROUP BY m.molecule_id ORDER BY COUNT(CASE WHEN b.bond_type = ' =' THEN 1 ELSE NULL END) DESC LIMIT 1;\t----- bird -----\ttoxicology",
    "251": "SELECT element FROM atom WHERE molecule_id IN (SELECT molecule_id FROM molecule WHERE label = '+') GROUP BY element ORDER BY COUNT(*) ASC LIMIT 1;\t----- bird -----\ttoxicology",
    "252": "SELECT DISTINCT t1.atom_id FROM connected AS t1 JOIN atom AS t2 ON t1.atom_id = t2.atom_id JOIN atom AS t3 ON t1.atom_id2 = t3.atom_id WHERE t3.element = 'pb';\t----- bird -----\ttoxicology",
    "253": "SELECT DISTINCT T1.element FROM atom AS T1 JOIN connected AS T2 ON T1.atom_id = T2.atom_id JOIN bond AS T3 ON T2.bond_id = T3.bond_id WHERE T3.bond_type = '#';\t----- bird -----\ttoxicology",
    "254": "SELECT CAST(SUM(CASE WHEN element_counts.max_count = element_counts.count THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(bond_id) FROM (SELECT element, COUNT(*) AS count, RANK() OVER (ORDER BY COUNT(*) DESC) AS rn FROM atom GROUP BY element) AS element_counts JOIN connected ON connected.bond_id = bond.bond_id JOIN bond ON bond.bond_id = connected.bond_id WHERE connected.atom_id IN (SELECT atom_id FROM atom) AND connected.atom_id2 IN (SELECT atom_id FROM atom) GROUP BY element ORDER BY COUNT(*) DESC LIMIT 1;\t----- bird -----\ttoxicology",
    "255": "SELECT CAST(SUM(CASE WHEN m.label = '+' THEN 1 ELSE 0 END) * 100.0 / COUNT(c.bond_id) AS DECIMAL(5,5)) FROM molecule AS m JOIN bond AS b ON m.molecule_id = b.molecule_id JOIN connected AS c ON b.bond_id = c.bond_id WHERE b.bond_type = '-';\t----- bird -----\ttoxicology",
    "256": "SELECT COUNT(*) FROM atom WHERE element IN ('c', 'h');\t----- bird -----\ttoxicology",
    "257": "SELECT atom_id2 FROM connected WHERE atom_id IN (SELECT atom_id FROM atom WHERE element = 's');\t----- bird -----\ttoxicology",
    "258": "SELECT DISTINCT t1.bond_type FROM bond AS t1 JOIN connected AS t2 ON t1.bond_id = t2.bond_id JOIN atom AS t3 ON t2.atom_id = t3.atom_id WHERE t3.element = 'sn';\t----- bird -----\ttoxicology",
    "259": "SELECT COUNT(DISTINCT T1.element) FROM atom AS T1 JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id JOIN bond AS T3 ON T2.molecule_id = T3.molecule_id WHERE T3.bond_type = '-';\t----- bird -----\ttoxicology",
    "260": "SELECT COUNT(T1.atom_id) FROM atom AS T1 JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id JOIN bond AS T3 ON T2.molecule_id = T3.molecule_id WHERE T3.bond_type = '#' AND T1.element IN ('p', 'br');\t----- bird -----\ttoxicology",
    "261": "SELECT bond_id FROM bond WHERE molecule_id IN (SELECT molecule_id FROM molecule WHERE label = '+');\t----- bird -----\ttoxicology",
    "262": "SELECT DISTINCT molecule_id FROM bond WHERE bond_type = '-' AND molecule_id IN (SELECT molecule_id FROM molecule WHERE label = '-');\t----- bird -----\ttoxicology",
    "263": "SELECT DIVIDE(SUM(CASE WHEN element = 'cl' THEN 1 ELSE 0 END), COUNT(atom_id)) AS percent FROM atom WHERE molecule_id IN (SELECT molecule_id FROM bond WHERE bond_type = '-');\t----- bird -----\ttoxicology",
    "264": "SELECT label FROM molecule WHERE molecule_id IN (000, 001, 002);\t----- bird -----\ttoxicology",
    "265": "SELECT molecule_id FROM molecule WHERE label = '-';\t----- bird -----\ttoxicology",
    "266": "SELECT COUNT(*) FROM molecule WHERE molecule_id BETWEEN 'TR000' AND 'TR030' AND label = '+';\t----- bird -----\ttoxicology",
    "267": "SELECT DISTINCT T1.bond_type FROM bond AS T1 JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id WHERE T2.molecule_id BETWEEN 'TR000' AND 'TR050';\t----- bird -----\ttoxicology",
    "268": "SELECT T1.element FROM atom AS T1 JOIN connected AS T2 ON T1.atom_id = T2.atom_id JOIN bond AS T3 ON T2.bond_id = T3.bond_id WHERE T3.bond_id = 'TR001_10_11';\t----- bird -----\ttoxicology",
    "269": "SELECT COUNT(c.bond_id) FROM atom a JOIN connected c ON a.atom_id = c.atom_id WHERE a.element = 'i';\t----- bird -----\ttoxicology",
    "270": "SELECT COUNT(CASE WHEN m.label = '+' THEN 1 ELSE 0 END) AS carcinogenic_count, COUNT(CASE WHEN m.label = '-' THEN 1 ELSE 0 END) AS non_carcinogenic_count FROM atom a JOIN molecule m ON a.molecule_id = m.molecule_id WHERE a.element = 'ca';\t----- bird -----\ttoxicology",
    "271": "SELECT EXISTS (SELECT 1 FROM connected c JOIN atom a ON c.atom_id = a.atom_id WHERE c.bond_id = 'TR001_1_8' AND a.element = 'cl') AND EXISTS (SELECT 1 FROM connected c JOIN atom a ON c.atom_id = a.atom_id WHERE c.bond_id = 'TR001_1_8' AND a.element = 'c');\t----- bird -----\ttoxicology",
    "272": "SELECT DISTINCT molecule_id FROM atom WHERE element = 'c' AND atom_id IN (SELECT atom_id FROM connected WHERE bond_id IN (SELECT bond_id FROM bond WHERE bond_type = '#')) AND molecule_id IN (SELECT molecule_id FROM molecule WHERE label = '-') LIMIT 2;\t----- bird -----\ttoxicology",
    "273": "SELECT CAST(SUM(CASE WHEN T1.element = 'cl' THEN 1 ELSE 0 END) AS REAL) / COUNT(T2.molecule_id) AS percentage FROM atom AS T1 JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id WHERE T2.label = '+';\t----- bird -----\ttoxicology",
    "274": "SELECT DISTINCT T1.element FROM atom AS T1 JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id WHERE T2.molecule_id = 'TR001';\t----- bird -----\ttoxicology",
    "275": "SELECT molecule_id FROM bond WHERE bond_type = ' = ';\t----- bird -----\ttoxicology",
    "276": "SELECT T1.atom_id, T2.atom_id FROM connected AS T1 INNER JOIN connected AS T2 ON T1.bond_id = T2.bond_id WHERE T1.bond_id IN (SELECT bond_id FROM bond WHERE bond_type = '#');\t----- bird -----\ttoxicology",
    "277": "SELECT T1.element FROM atom AS T1 JOIN connected AS T2 ON T1.atom_id = T2.atom_id JOIN bond AS T3 ON T2.bond_id = T3.bond_id WHERE T3.bond_id = 'TR000_1_2';\t----- bird -----\ttoxicology",
    "278": "SELECT COUNT(m.molecule_id) FROM molecule m JOIN bond b ON m.molecule_id = b.molecule_id WHERE b.bond_type = '-' AND m.label = '-';\t----- bird -----\ttoxicology",
    "279": "SELECT T1.label FROM molecule AS T1 JOIN bond AS T2 ON T1.molecule_id = T2.molecule_id WHERE T2.bond_id = 'TR001_10_11';\t----- bird -----\ttoxicology",
    "280": "SELECT b.bond_id, m.label FROM molecule m JOIN bond b ON m.molecule_id = b.molecule_id WHERE b.bond_type = '#';\t----- bird -----\ttoxicology",
    "281": "SELECT T1.element FROM atom AS T1 JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id WHERE T2.label = '+' AND T1.atom_id LIKE '%4%';\t----- bird -----\ttoxicology",
    "282": "SELECT CAST(SUM(CASE WHEN t1.element = 'h' THEN 1 ELSE 0 END) AS REAL) / COUNT(t1.element), (SELECT label FROM molecule WHERE molecule_id = 'TR006') FROM atom AS t1 WHERE t1.molecule_id = 'TR006';\t----- bird -----\ttoxicology",
    "283": "SELECT T1.label FROM molecule AS T1 INNER JOIN atom AS T2 ON T1.molecule_id = T2.molecule_id WHERE T2.element = 'ca' AND T1.label = '+' OR T1.label = '-';\t----- bird -----\ttoxicology",
    "284": "SELECT DISTINCT bond_type FROM bond WHERE molecule_id IN (SELECT molecule_id FROM atom WHERE element = 'c');\t----- bird -----\ttoxicology",
    "285": "SELECT DISTINCT T1.element FROM atom AS T1 INNER JOIN connected AS T2 ON T1.atom_id = T2.atom_id AND T2.bond_id = 'TR001_10_11' UNION SELECT DISTINCT T1.element FROM atom AS T1 INNER JOIN connected AS T2 ON T1.atom_id = T2.atom_id2 AND T2.bond_id = 'TR001_10_11';\t----- bird -----\ttoxicology",
    "286": "SELECT CAST(SUM(CASE WHEN T1.bond_type = '#' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(T1.molecule_id) FROM bond AS T1 INNER JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id;\t----- bird -----\ttoxicology",
    "287": "SELECT DIVIDE(SUM(CASE WHEN bond_type = ' = ' THEN 1 ELSE 0 END), COUNT(bond_id)) AS percent FROM bond WHERE molecule_id = 'TR047';\t----- bird -----\ttoxicology",
    "288": "SELECT T1.label FROM molecule AS T1 JOIN atom AS T2 ON T1.molecule_id = T2.molecule_id WHERE T2.element = 'TR001_1' AND T1.label = '+';\t----- bird -----\ttoxicology",
    "289": "SELECT * FROM molecule WHERE label = '+' AND molecule_id = 'TR151';\t----- bird -----\ttoxicology",
    "290": "SELECT DISTINCT atom.element FROM atom JOIN molecule ON atom.molecule_id = molecule.molecule_id WHERE molecule.label = 'TR151' AND atom.element IN ('sn', 'pb', 'te', 'ca', 'cl', 'br', 'i');\t----- bird -----\ttoxicology",
    "291": "SELECT count(*) FROM molecule WHERE label = '+';\t----- bird -----\ttoxicology",
    "292": "SELECT a.atom_id FROM atom a JOIN molecule m ON a.molecule_id = m.molecule_id WHERE m.molecule_id LIKE 'TR%' AND SUBSTR(m.molecule_id, 3, 2) >= 10 AND SUBSTR(m.molecule_id, 3, 2) <= 50 AND a.element = 'c';\t----- bird -----\ttoxicology",
    "293": "SELECT COUNT(T1.atom_id) FROM atom AS T1 JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id WHERE T2.label = '+';\t----- bird -----\ttoxicology",
    "294": "SELECT T1.bond_id FROM bond AS T1 JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id WHERE T2.label = '+' AND T1.bond_type = ' = ';\t----- bird -----\ttoxicology",
    "295": "SELECT COUNT(a.atom_id) FROM atom a JOIN molecule m ON a.molecule_id = m.molecule_id WHERE a.element = 'h' AND m.label = '+';\t----- bird -----\ttoxicology",
    "296": "SELECT DISTINCT molecule_id FROM atom WHERE element = 'TR000_1' AND atom_id IN (SELECT atom_id FROM connected WHERE bond_id = (SELECT bond_id FROM bond WHERE bond_type = 'TR000_1_2'));\t----- bird -----\ttoxicology",
    "297": "SELECT DISTINCT a.atom_id FROM atom a WHERE a.element = 'c' AND NOT EXISTS (SELECT 1 FROM molecule m WHERE m.label = '-' AND EXISTS (SELECT 1 FROM connected c WHERE c.atom_id = a.atom_id AND c.bond_id IN (SELECT bond_id FROM bond b WHERE b.molecule_id = m.molecule_id)));\t----- bird -----\ttoxicology",
    "298": "SELECT (SUM(CASE WHEN T1.label = '+' THEN 1 ELSE 0 END) * SUM(CASE WHEN T2.element = 'h' THEN 1 ELSE 0 END) ) * 100.0 / COUNT(DISTINCT T1.molecule_id) FROM molecule AS T1 INNER JOIN atom AS T2 ON T1.molecule_id = T2.molecule_id;\t----- bird -----\ttoxicology",
    "299": "SELECT EXISTS (SELECT 1 FROM molecule WHERE molecule_id = (SELECT molecule_id FROM molecule WHERE label = '+' AND label = (SELECT label FROM molecule WHERE molecule_id = (SELECT molecule_id FROM molecule WHERE label = 'TR124'))));\t----- bird -----\ttoxicology",
    "300": "SELECT T1.element FROM atom AS T1 JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id WHERE T2.molecule_id = 'TR186';\t----- bird -----\ttoxicology",
    "301": "SELECT bond_type FROM bond WHERE molecule_id = 'TR007_4_19';\t----- bird -----\ttoxicology",
    "302": "SELECT DISTINCT T1.element FROM atom AS T1 INNER JOIN connected AS T2 ON T1.atom_id = T2.atom_id INNER JOIN bond AS T3 ON T2.bond_id = T3.bond_id WHERE T3.bond_id = 'TR001_2_4';\t----- bird -----\ttoxicology",
    "303": "SELECT COUNT(c.bond_id), EXISTS (SELECT 1 FROM molecule WHERE molecule_id = (SELECT molecule_id FROM molecule WHERE label = '+' AND molecule_id = (SELECT molecule_id FROM molecule WHERE label = '+' AND molecule_id = (SELECT molecule_id FROM molecule WHERE label = '+' AND molecule_id = (SELECT molecule_id FROM molecule WHERE label = '+' AND molecule_id = (SELECT molecule_id FROM molecule WHERE label = '+' AND molecule_id = (SELECT molecule_id FROM molecule WHERE label = '+' AND molecule_id = (SELECT molecule_id FROM molecule WHERE label = '+' AND molecule_id = (SELECT molecule_id FROM molecule WHERE label = '+' AND molecule_id = (SELECT molecule_id FROM molecule WHERE label = '+' AND molecule_id = (SELECT molecule_id FROM molecule WHERE label = '+' AND molecule_id = (SELECT molecule_id FROM molecule WHERE label = '+' AND molecule_id = (SELECT molecule_id FROM molecule WHERE label = '+' AND molecule_id = (SELECT molecule_id FROM molecule WHERE label = '+' AND molecule_id = (SELECT molecule_id FROM molecule WHERE label = '+' AND molecule_id = (SELECT molecule_id FROM molecule WHERE label = '+' AND molecule_id = (SELECT molecule_id FROM molecule WHERE label = '+' AND molecule_id = (SELECT molecule_id FROM molecule WHERE label = '+' AND molecule_id = (SELECT molecule_id FROM molecule WHERE label = '+' AND molecule_id = 600001)))))))))))))))))))))) AND molecule_id = 600001)) ) FROM connected c JOIN bond b ON c.bond_id = b.bond_id WHERE b.bond_type = ' = ' AND c.atom_id IN (SELECT atom_id FROM atom WHERE molecule_id = (SELECT molecule_id FROM molecule WHERE label = '+' AND molecule_id = 600001)) AND atom_id2 IN (SELECT atom_id2 FROM connected WHERE bond_id = (SELECT bond_id FROM connected WHERE atom_id = (SELECT atom_id FROM atom WHERE molecule_id = (SELECT molecule_id FROM molecule WHERE label = '+' AND molecule_id = 600001))));\t----- bird -----\ttoxicology",
    "304": "SELECT DISTINCT m.label, a.element FROM molecule m JOIN atom a ON m.molecule_id = a.molecule_id WHERE m.label = '+';\t----- bird -----\ttoxicology",
    "305": "SELECT T1.bond_id, T3.atom_id, T4.atom_id AS atom_id2 FROM bond AS T1 JOIN connected AS T2 ON T1.bond_id = T2.bond_id JOIN atom AS T3 ON T2.atom_id = T3.atom_id JOIN atom AS T4 ON T2.atom_id2 = T4.atom_id WHERE T1.bond_type = '-';\t----- bird -----\ttoxicology",
    "306": "SELECT DISTINCT T1.label FROM molecule AS T1 JOIN bond AS T2 ON T1.molecule_id = T2.molecule_id WHERE T2.bond_type = '#';\t----- bird -----\ttoxicology",
    "307": "SELECT T1.element FROM atom AS T1 JOIN connected AS T2 ON T1.atom_id = T2.atom_id WHERE T2.bond_id = 'TR000_2_3';\t----- bird -----\ttoxicology",
    "308": "SELECT COUNT(c.bond_id) FROM connected AS c JOIN atom AS a ON c.atom_id = a.atom_id WHERE a.element = 'cl';\t----- bird -----\ttoxicology",
    "309": "SELECT a.atom_id, COUNT(DISTINCT b.bond_type) FROM atom a JOIN molecule m ON a.molecule_id = m.molecule_id JOIN bond b ON a.molecule_id = b.molecule_id WHERE m.label = 'TR346' GROUP BY a.atom_id;\t----- bird -----\ttoxicology",
    "310": "SELECT COUNT(DISTINCT m.molecule_id) FROM molecule m JOIN bond b ON m.molecule_id = b.molecule_id WHERE b.bond_type = ' = ' AND m.label = '+';\t----- bird -----\ttoxicology",
    "311": "SELECT COUNT(DISTINCT T1.molecule_id) FROM molecule AS T1 WHERE T1.molecule_id NOT IN (SELECT molecule_id FROM atom WHERE element = 's') AND T1.molecule_id NOT IN (SELECT molecule_id FROM bond WHERE bond_type = ' = ');\t----- bird -----\ttoxicology",
    "312": "SELECT T1.label FROM molecule AS T1 JOIN bond AS T2 ON T1.molecule_id = T2.molecule_id WHERE T2.bond_id = 'TR001_2_4';\t----- bird -----\ttoxicology",
    "313": "SELECT COUNT(atom_id) FROM atom WHERE molecule_id = 'TR001';\t----- bird -----\ttoxicology",
    "314": "SELECT COUNT(*) FROM bond WHERE bond_type = '-';\t----- bird -----\ttoxicology",
    "315": "SELECT DISTINCT m.label FROM molecule AS m JOIN atom AS a ON m.molecule_id = a.molecule_id WHERE a.element = 'cl' AND m.label = '+';\t----- bird -----\ttoxicology",
    "316": "SELECT DISTINCT m.label FROM molecule AS m JOIN atom AS a ON m.molecule_id = a.molecule_id WHERE a.element = 'c' AND m.label <> '-';\t----- bird -----\ttoxicology",
    "317": "SELECT CAST(SUM(CASE WHEN M.label = '+' THEN 1 ELSE 0 END) AS REAL) / COUNT(DISTINCT M.molecule_id) AS percentage FROM atom A JOIN molecule M ON A.molecule_id = M.molecule_id WHERE A.element = 'cl';\t----- bird -----\ttoxicology",
    "318": "SELECT molecule_id FROM bond WHERE bond_id = 'TR001_1_7';\t----- bird -----\ttoxicology",
    "319": "SELECT count(DISTINCT atom.element) FROM atom JOIN connected ON atom.atom_id = connected.atom_id WHERE connected.bond_id = 'TR001_3_4';\t----- bird -----\ttoxicology",
    "320": "SELECT T1.bond_type FROM bond AS T1 INNER JOIN connected AS T2 ON T1.bond_id = T2.bond_id WHERE T2.atom_id = 'TR000_1' AND T2.atom_id2 = 'TR000_2';\t----- bird -----\ttoxicology",
    "321": "SELECT DISTINCT T1.label FROM molecule AS T1 INNER JOIN atom AS T2 ON T1.molecule_id = T2.molecule_id WHERE T2.atom_id = 'TR000_2' OR T2.atom_id = 'TR000_4';\t----- bird -----\ttoxicology",
    "322": "SELECT element FROM atom WHERE atom_id = 'TR000_1';\t----- bird -----\ttoxicology",
    "323": "SELECT EXISTS (SELECT 1 FROM molecule WHERE molecule_id = 'TR000' AND label = '+');\t----- bird -----\ttoxicology",
    "324": "SELECT percentage FROM (SELECT DIVIDE(SUM(CASE WHEN T1.bond_type = '-' THEN 1 ELSE 0 END), COUNT(T1.bond_id)) AS percentage FROM bond AS T1);\t----- bird -----\ttoxicology",
    "325": "SELECT COUNT(DISTINCT m.molecule_id) FROM molecule m JOIN atom a ON m.molecule_id = a.molecule_id WHERE m.label = '+' AND a.element = 'n';\t----- bird -----\ttoxicology",
    "326": "SELECT DISTINCT T1.label FROM molecule AS T1 INNER JOIN atom AS T2 ON T1.molecule_id = T2.molecule_id INNER JOIN connected AS T3 ON T2.atom_id = T3.atom_id INNER JOIN bond AS T4 ON T3.bond_id = T4.bond_id WHERE T2.element = 's' AND T4.bond_type = ' = ';\t----- bird -----\ttoxicology",
    "327": "SELECT DISTINCT label FROM molecule WHERE label = '-' AND molecule_id IN (SELECT molecule_id FROM atom GROUP BY molecule_id HAVING COUNT(*) > 5);\t----- bird -----\ttoxicology",
    "328": "SELECT DISTINCT T1.element FROM atom AS T1 JOIN connected AS T2 ON T1.atom_id = T2.atom_id JOIN bond AS T3 ON T2.bond_id = T3.bond_id WHERE T3.molecule_id = 'TR024' AND T3.bond_type = '=';\t----- bird -----\ttoxicology",
    "329": "SELECT T1.label FROM molecule AS T1 JOIN atom AS T2 ON T1.molecule_id = T2.molecule_id WHERE T1.label = '+' ORDER BY COUNT(T2.molecule_id) DESC LIMIT 1;\t----- bird -----\ttoxicology",
    "330": "SELECT DIVIDE(SUM(CASE WHEN T1.label = '+' THEN 1 ELSE 0 END), COUNT(DISTINCT T1.molecule_id)) * 100.0 FROM molecule AS T1 JOIN atom AS T2 ON T1.molecule_id = T2.molecule_id JOIN connected AS T3 ON T2.atom_id = T3.atom_id JOIN bond AS T4 ON T3.bond_id = T4.bond_id WHERE T2.element = 'h' AND T4.bond_type = '#';\t----- bird -----\ttoxicology",
    "331": "SELECT count(*) FROM molecule WHERE label = '+';\t----- bird -----\ttoxicology",
    "332": "SELECT count(DISTINCT molecule_id) FROM bond WHERE molecule_id BETWEEN 'TR004' AND 'TR010' AND bond_type = '-';\t----- bird -----\ttoxicology",
    "333": "SELECT COUNT(a.atom_id) FROM atom a JOIN molecule m ON a.molecule_id = m.molecule_id WHERE m.label = 'TR008' AND a.element = 'c';\t----- bird -----\ttoxicology",
    "334": "SELECT T1.element FROM atom AS T1 JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id WHERE T1.atom_id = 'TR004_7' AND T2.label <> '-';\t----- bird -----\ttoxicology",
    "335": "SELECT COUNT(DISTINCT m.molecule_id) FROM molecule m JOIN atom a ON m.molecule_id = a.molecule_id JOIN connected c ON a.atom_id = c.atom_id JOIN bond b ON c.bond_id = b.bond_id WHERE a.element = 'o' AND b.bond_type = ' = ';\t----- bird -----\ttoxicology",
    "336": "SELECT COUNT(m.molecule_id) FROM molecule m JOIN bond b ON m.molecule_id = b.molecule_id WHERE b.bond_type = '#' AND m.label = '-';\t----- bird -----\ttoxicology",
    "337": "SELECT T1.element, T2.bond_type FROM atom AS T1 JOIN connected AS T3 ON T1.atom_id = T3.atom_id JOIN bond AS T2 ON T3.bond_id = T2.bond_id WHERE T1.molecule_id = 'TR002';\t----- bird -----\ttoxicology",
    "338": "SELECT DISTINCT t1.atom_id FROM atom AS t1 JOIN connected AS t2 ON t1.atom_id = t2.atom_id JOIN bond AS t3 ON t2.bond_id = t3.bond_id JOIN molecule AS t4 ON t3.molecule_id = t4.molecule_id WHERE t4.label = 'TR012' AND t1.element = 'c' AND t3.bond_type = ' = ';\t----- bird -----\ttoxicology",
    "339": "SELECT t1.atom_id FROM atom AS t1 JOIN molecule AS t2 ON t1.molecule_id = t2.molecule_id WHERE t2.label = '+' AND t1.element = 'o';\t----- bird -----\ttoxicology",
    "340": "SELECT * FROM cards WHERE cardKingdomFoilId IS NOT NULL AND cardKingdomId IS NOT NULL;\t----- bird -----\tcard_games",
    "341": "SELECT name FROM cards WHERE borderColor = 'borderless' AND cardKingdomFoilId IS NULL;\t----- bird -----\tcard_games",
    "342": "SELECT name FROM cards WHERE convertedManaCost = (SELECT MAX(faceConvertedManaCost) FROM cards);\t----- bird -----\tcard_games",
    "343": "SELECT name FROM cards WHERE frameVersion = 2015 AND edhrecRank < 100;\t----- bird -----\tcard_games",
    "344": "SELECT T1.name FROM cards AS T1 JOIN legalities AS T2 ON T1.id = T2.uuid WHERE T1.rarity = 'mythic' AND T2.format = 'gladiator' AND T2.status = 'Banned';\t----- bird -----\tcard_games",
    "345": "SELECT T1.status FROM legalities AS T1 JOIN cards AS T2 ON T1.uuid = T2.uuid WHERE T2.type = 'Artifact' AND T2.side IS NULL AND T1.format = 'vintage';\t----- bird -----\tcard_games",
    "346": "SELECT c.id, c.artist FROM cards c JOIN legalities l ON c.id = l.uuid WHERE c.power IS NULL AND l.format = 'commander';\t----- bird -----\tcard_games",
    "347": "SELECT T1.id FROM cards AS T1 JOIN rulings AS T2 ON T1.id = T2.id WHERE T1.artist = 'Stephen Daniele' AND T1.hasContentWarning = 1;\t----- bird -----\tcard_games",
    "348": "SELECT * FROM rulings WHERE uuid = (SELECT uuid FROM cards WHERE name = 'Sublime Epiphany' AND number = '74s');\t----- bird -----\tcard_games",
    "349": "SELECT c.name, c.artist, c.isPromo FROM cards c JOIN rulings ON c.id = rulings.uuid GROUP BY c.id ORDER BY COUNT(rulings.id) DESC LIMIT 1;\t----- bird -----\tcard_games",
    "350": "SELECT T1.language FROM set_translations AS T1 INNER JOIN cards AS T2 ON T1.setCode = T2.setCode WHERE T2.name = 'Annul' AND T2.number = '29';\t----- bird -----\tcard_games",
    "351": "SELECT T1.name FROM cards AS T1 JOIN foreign_data AS T2 ON T1.id = T2.multiverseid WHERE T2.language = 'Japanese';\t----- bird -----\tcard_games",
    "352": "SELECT CAST(SUM(CASE WHEN language = 'Chinese Simplified' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(id) AS percentage FROM foreign_data;\t----- bird -----\tcard_games",
    "353": "SELECT T1.name, T1.totalSetSize FROM sets AS T1 INNER JOIN set_translations AS T2 ON T1.code = T2.setCode WHERE T2.language = 'Italian';\t----- bird -----\tcard_games",
    "354": "SELECT COUNT(DISTINCT T1.type) FROM cards AS T1 WHERE T1.artist = 'Aaron Boyd';\t----- bird -----\tcard_games",
    "355": "SELECT keywords FROM cards WHERE name = 'Angel of Mercy';\t----- bird -----\tcard_games",
    "356": "SELECT count(*) FROM cards WHERE power = '*';\t----- bird -----\tcard_games",
    "357": "SELECT T1.promoTypes FROM cards AS T1 WHERE T1.name = 'Duress';\t----- bird -----\tcard_games",
    "358": "SELECT borderColor FROM cards WHERE name = 'Ancestor''s Chosen';\t----- bird -----\tcard_games",
    "359": "SELECT originalType FROM cards WHERE name = 'Ancestor''s Chosen';\t----- bird -----\tcard_games",
    "360": "SELECT DISTINCT T1.language FROM set_translations AS T1 JOIN sets AS T2 ON T1.setCode = T2.code JOIN cards AS T3 ON T2.setCode = T3.setCode WHERE T3.name = 'Angel of Mercy';\t----- bird -----\tcard_games",
    "361": "SELECT COUNT(*) FROM cards WHERE id IN (SELECT card_id FROM legalities WHERE status = 'restricted') AND isTextless = 0;\t----- bird -----\tcard_games",
    "362": "SELECT T1.text FROM rulings AS T1 WHERE T1.uuid IN (SELECT uuid FROM cards WHERE name = 'Condemn');\t----- bird -----\tcard_games",
    "363": "SELECT COUNT(c.id) FROM cards c JOIN legalities l ON c.id = l.uuid WHERE l.status = 'restricted' AND c.isStarter = 1;\t----- bird -----\tcard_games",
    "364": "SELECT T1.status FROM legalities AS T1 JOIN cards AS T2 ON T1.uuid = T2.uuid WHERE T2.name = 'Cloudchaser Eagle';\t----- bird -----\tcard_games",
    "365": "SELECT type FROM cards WHERE name = \"Benalish Knight\";\t----- bird -----\tcard_games",
    "366": "SELECT T1.text FROM rulings AS T1 JOIN cards AS T2 ON T1.uuid = T2.uuid WHERE T2.name = 'Benalish Knight';\t----- bird -----\tcard_games",
    "367": "SELECT artist FROM cards WHERE language = 'Phyrexian';\t----- bird -----\tcard_games",
    "368": "SELECT CAST(SUM(CASE WHEN borderColor = 'borderless' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(id);\t----- bird -----\tcard_games",
    "369": "SELECT COUNT(T1.id) FROM cards AS T1 INNER JOIN foreign_data AS T2 ON T1.id = T2.multiverseid WHERE T2.language = 'German' AND T1.isReprint = 1;\t----- bird -----\tcard_games",
    "370": "SELECT count(*) FROM cards WHERE borderColor = 'borderless' AND EXISTS (SELECT 1 FROM foreign_data WHERE foreign_data.language = 'Russian' AND foreign_data.scryfallId = cards.scryfallId);\t----- bird -----\tcard_games",
    "371": "SELECT (COUNT(CASE WHEN T1.language = 'French' AND T1.isStorySpotlight = 1 THEN 1 END) * 100.0) / COUNT(CASE WHEN T1.isStorySpotlight = 1 THEN 1 END) FROM foreign_data AS T1;\t----- bird -----\tcard_games",
    "372": "SELECT count(*) FROM cards WHERE toughness = '99';\t----- bird -----\tcard_games",
    "373": "SELECT name FROM cards WHERE artist = 'Aaron Boyd';\t----- bird -----\tcard_games",
    "374": "SELECT count(*) FROM cards WHERE borderColor = 'black' AND availability = 'mtgo';\t----- bird -----\tcard_games",
    "375": "SELECT id FROM cards WHERE convertedManaCost = 0;\t----- bird -----\tcard_games",
    "376": "SELECT layout FROM cards WHERE keywords LIKE '%flying%';\t----- bird -----\tcard_games",
    "377": "SELECT count(*) FROM cards WHERE originalType = 'Summon - Angel' AND subtypes NOT LIKE '%Angel%';\t----- bird -----\tcard_games",
    "378": "SELECT id FROM cards WHERE hasFoil = TRUE AND cardKingdomFoilId IS NOT NULL AND cardKingdomId IS NOT NULL;\t----- bird -----\tcard_games",
    "379": "SELECT id FROM cards WHERE duelDeck = 'a';\t----- bird -----\tcard_games",
    "380": "SELECT edhrecRank FROM cards WHERE frameVersion = '2015';\t----- bird -----\tcard_games",
    "381": "SELECT DISTINCT T1.artist FROM cards AS T1 JOIN foreign_data AS T2 ON T1.id = T2.multiverseid WHERE T2.language = 'Chinese Simplified';\t----- bird -----\tcard_games",
    "382": "SELECT T1.id FROM cards AS T1 JOIN foreign_data AS T2 ON T1.id = T2.multiverseid WHERE T1.availability = 'paper' AND T2.language = 'Japanese';\t----- bird -----\tcard_games",
    "383": "SELECT COUNT(c.id) FROM cards c JOIN legalities l ON c.id = l.uuid WHERE l.status = 'Banned' AND c.borderColor = 'white';\t----- bird -----\tcard_games",
    "384": "SELECT c.uuid, fd.language FROM cards c JOIN legalities l ON c.id = l.uuid JOIN foreign_data fd ON c.scryfallId = fd.multiverseid WHERE l.format = 'legacy';\t----- bird -----\tcard_games",
    "385": "SELECT T1.text FROM rulings AS T1 JOIN cards AS T2 ON T1.uuid = T2.uuid WHERE T2.name = 'Beacon of Immortality';\t----- bird -----\tcard_games",
    "386": "SELECT COUNT(cards.id), GROUP_CONCAT(DISTINCT legalities.status) FROM cards JOIN legalities ON cards.id = legalities.uuid WHERE cards.frameVersion = 'future';\t----- bird -----\tcard_games",
    "387": "SELECT c.name, c.colors FROM cards c JOIN sets s ON c.setCode = s.code WHERE s.code = 'OGW';\t----- bird -----\tcard_games",
    "388": "SELECT T1.name, T3.language FROM cards AS T1 JOIN set_translations AS T2 ON T1.mtgjsonV4Id = T2.id JOIN cards AS T3 ON T1.mtgjsonV4Id = T3.mtgjsonV4Id WHERE T1.setCode = '10E' AND T1.convertedManaCost = 5;\t----- bird -----\tcard_games",
    "389": "SELECT T1.name, T2.date FROM cards AS T1 JOIN rulings AS T2 ON T1.id = T2.id WHERE T1.originalType = 'Creature - Elf';\t----- bird -----\tcard_games",
    "390": "SELECT T1.colors, L.format FROM cards AS T1 JOIN legalities AS L ON T1.id = L.uuid WHERE T1.id BETWEEN 1 AND 20;\t----- bird -----\tcard_games",
    "391": "SELECT T1.name FROM cards AS T1 JOIN foreign_data AS T2 ON T1.id = T2.multiverseid WHERE T1.originalType = 'Artifact' AND T1.colors LIKE '%B%' AND T2.language IS NOT NULL;\t----- bird -----\tcard_games",
    "392": "SELECT T1.name FROM cards AS T1 JOIN rulings AS T2 ON T1.id = T2.uuid WHERE T1.rarity = 'uncommon' ORDER BY T2.date ASC LIMIT 3;\t----- bird -----\tcard_games",
    "393": "SELECT count(*) FROM cards WHERE artist = 'John Avon' AND cardKingdomFoilId IS NULL;\t----- bird -----\tcard_games",
    "394": "SELECT count(*) FROM cards WHERE borderColor = 'white' AND cardKingdomFoilId IS NOT NULL AND cardKingdomId IS NOT NULL;\t----- bird -----\tcard_games",
    "395": "SELECT count(*) FROM cards WHERE artist = 'UDON' AND availability = 'mtgo' AND hand = -1;\t----- bird -----\tcard_games",
    "396": "SELECT count(*) FROM cards WHERE frameVersion = '1993' AND availability = 'paper' AND hasContentWarning = 1;\t----- bird -----\tcard_games",
    "397": "SELECT manaCost FROM cards WHERE layout = 'normal' AND frameVersion = 2003 AND borderColor = 'black' AND availability = 'mtgo,paper';\t----- bird -----\tcard_games",
    "398": "SELECT SUM(CAST(REPLACE(manaCost, '+', '') AS INT)) FROM cards WHERE artist = 'Rob Alexander';\t----- bird -----\tcard_games",
    "399": "SELECT DISTINCT types FROM cards WHERE availability = 'arena';\t----- bird -----\tcard_games",
    "400": "SELECT DISTINCT T1.setCode FROM cards AS T1 JOIN set_translations AS T2 ON T1.id = T2.id WHERE T2.language = 'es';\t----- bird -----\tcard_games",
    "401": "SELECT CAST(SUM(CASE WHEN T1.isOnlineOnly = 1 THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(T1.id) FROM cards AS T1 WHERE T1.frameEffects = 'legendary';\t----- bird -----\tcard_games",
    "402": "SELECT CAST(SUM(CASE WHEN isStorySpotlight = 1 AND isTextless = 0 THEN 1 ELSE 0 END) AS REAL) * 100 / SUM(1) FROM cards;\t----- bird -----\tcard_games",
    "403": "SELECT name FROM cards WHERE availability = 'Spanish' LIMIT 1000;\t----- bird -----\tcard_games",
    "404": "SELECT DISTINCT T1.language FROM set_translations AS T1 JOIN sets AS T2 ON T1.setCode = T2.code WHERE T2.baseSetSize = 309;\t----- bird -----\tcard_games",
    "405": "SELECT COUNT(*) FROM set_translations WHERE language = 'Portuguese (Brasil)' AND set_translations.setCode IN (SELECT code FROM sets WHERE block = 'Commander');\t----- bird -----\tcard_games",
    "406": "SELECT c.id FROM cards c JOIN legalities l ON c.uuid = l.uuid WHERE c.types LIKE '%Creature%' AND l.status = 'legal';\t----- bird -----\tcard_games",
    "407": "SELECT T1.types FROM cards AS T1 JOIN foreign_data AS T2 ON T1.id = T2.multiverseid WHERE T2.language = 'German';\t----- bird -----\tcard_games",
    "408": "SELECT count(*) FROM cards WHERE power IS NULL OR power = '*' AND text LIKE '%triggered ability%';\t----- bird -----\tcard_games",
    "409": "SELECT COUNT(c.id) FROM cards c JOIN legalities l ON c.id = l.uuid WHERE l.format = 'premodern' AND c.id IN (SELECT card_id FROM rulings WHERE text LIKE '%This is a triggered mana ability.%') AND c.side IS NULL;\t----- bird -----\tcard_games",
    "410": "SELECT id FROM cards WHERE artist = 'Erica Yang' AND availability = 'paper' AND EXISTS (SELECT 1 FROM legalities WHERE legalities.uuid = cards.uuid AND format = 'Pauper');\t----- bird -----\tcard_games",
    "411": "SELECT T1.artist FROM cards AS T1 WHERE T1.text = \"Das perfekte Gegenmittel zu einer dichten Formation\";\t----- bird -----\tcard_games",
    "412": "SELECT T1.name FROM cards AS T1 JOIN foreign_data AS T2 ON T1.id = T2.multiverseid WHERE T2.language = 'French' AND T1.type LIKE '%Creature%' AND T1.layout = 'normal' AND T1.borderColor = 'black' AND T1.artist = 'Matthew D. Wilson';\t----- bird -----\tcard_games",
    "413": "SELECT COUNT(c.id) FROM cards c JOIN rulings r ON c.id = r.uuid WHERE c.rarity = 'rare' AND r.date = '2007-02-01';\t----- bird -----\tcard_games",
    "414": "SELECT T1.translation FROM set_translations AS T1 JOIN sets AS T2 ON T1.setCode = T2.code WHERE T2.baseSetSize = 180 AND T2.block = 'Ravnica';\t----- bird -----\tcard_games",
    "415": "SELECT CAST(SUM(CASE WHEN T1.hasContentWarning = 0 THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(T1.id) FROM cards AS T1 JOIN legalities AS T2 ON T1.id = T2.uuid WHERE T2.format = 'commander' AND T2.status = 'legal';\t----- bird -----\tcard_games",
    "416": "SELECT DIVIDE(COUNT(CASE WHEN colors = 'French' AND power IS NULL OR power = '*' THEN 1 END), COUNT(CASE WHEN power IS NULL OR power = '*' THEN 1 END))*100;\t----- bird -----\tcard_games",
    "417": "SELECT CAST(SUM(CASE WHEN T1.type = 'expansion' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(T1.id) FROM set_translations AS T1 WHERE T1.language = 'Japanese';\t----- bird -----\tcard_games",
    "418": "SELECT cards.availability FROM cards WHERE cards.artist = 'Daren Bader';\t----- bird -----\tcard_games",
    "419": "SELECT count(*) FROM cards WHERE borderColor = 'borderless' AND edhrecRank > 12000;\t----- bird -----\tcard_games",
    "420": "SELECT count(*) FROM cards WHERE isOversized = 1 AND isReprint = 1 AND isPromo = 1;\t----- bird -----\tcard_games",
    "421": "SELECT name FROM cards WHERE power IS NULL OR power = '*' AND promoTypes = 'arenaleague' ORDER BY name ASC LIMIT 3;\t----- bird -----\tcard_games",
    "422": "SELECT T1.language FROM foreign_data AS T1 WHERE T1.multiverseid = 149934;\t----- bird -----\tcard_games",
    "423": "SELECT id FROM cards WHERE cardKingdomFoilId IS NOT NULL AND cardKingdomId IS NOT NULL ORDER BY cardKingdomFoilId ASC LIMIT 3;\t----- bird -----\tcard_games",
    "424": "SELECT CAST(SUM(CASE WHEN isTextless = 0 AND layout = 'normal' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(*) FROM cards;\t----- bird -----\tcard_games",
    "425": "SELECT number FROM cards WHERE otherFaceIds IS NULL AND subtypes LIKE '%Angel%' AND subtypes LIKE '%Wizard%';\t----- bird -----\tcard_games",
    "426": "SELECT name FROM sets WHERE mtgoCode IS NULL OR mtgoCode = '' ORDER BY name ASC LIMIT 3;\t----- bird -----\tcard_games",
    "427": "SELECT T1.language FROM set_translations AS T1 JOIN sets AS T2 ON T1.setCode = T2.code WHERE T2.mcmName = 'Archenemy' AND T2.code = 'ARC';\t----- bird -----\tcard_games",
    "428": "SELECT s.name, st.translation FROM sets s JOIN set_translations st ON s.code = st.setCode WHERE s.id = 5;\t----- bird -----\tcard_games",
    "429": "SELECT T1.language, T1.type FROM set_translations AS T1 JOIN sets AS T2 ON T1.setCode = T2.code WHERE T2.id = 206;\t----- bird -----\tcard_games",
    "430": "SELECT sets.id, sets.name FROM sets JOIN set_translations ON sets.code = set_translations.setCode WHERE set_translations.language = 'it' AND sets.block = 'Shadowmoor' ORDER BY sets.name LIMIT 2;\t----- bird -----\tcard_games",
    "431": "SELECT s.id FROM sets s JOIN set_translations st ON s.code = st.setCode WHERE s.isForeignOnly = 0 AND s.isFoilOnly = 1 AND st.language = 'Japanese';\t----- bird -----\tcard_games",
    "432": "SELECT T1.name FROM sets AS T1 JOIN set_translations AS T2 ON T1.code = T2.setCode WHERE T2.language = 'Russian' ORDER BY T1.baseSetSize DESC LIMIT 1;\t----- bird -----\tcard_games",
    "433": "SELECT CAST(SUM(CASE WHEN T1.language = 'Chinese Simplified' AND T1.isOnlineOnly = 1 THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(T1.id) FROM foreign_data AS T1;\t----- bird -----\tcard_games",
    "434": "SELECT count(*) FROM sets WHERE code IN (SELECT setCode FROM set_translations WHERE language = 'Japanese') AND mtgoCode IS NULL OR mtgoCode = '';\t----- bird -----\tcard_games",
    "435": "SELECT id FROM cards WHERE borderColor = 'black';\t----- bird -----\tcard_games",
    "436": "SELECT id FROM cards WHERE frameEffects = 'extendedart';\t----- bird -----\tcard_games",
    "437": "SELECT name FROM cards WHERE borderColor = 'black' AND isFullArt = 1;\t----- bird -----\tcard_games",
    "438": "SELECT T1.language FROM set_translations AS T1 WHERE T1.setCode = \"174\";\t----- bird -----\tcard_games",
    "439": "SELECT name FROM sets WHERE code = \"ALL\";\t----- bird -----\tcard_games",
    "440": "SELECT language FROM foreign_data WHERE name = 'A Pedra Fellwar';\t----- bird -----\tcard_games",
    "441": "SELECT code FROM sets WHERE releaseDate = '2007-07-13';\t----- bird -----\tcard_games",
    "442": "SELECT baseSetSize, code FROM sets WHERE block IN ('Masques', 'Mirage');\t----- bird -----\tcard_games",
    "443": "SELECT code FROM sets WHERE type = 'expansion';\t----- bird -----\tcard_games",
    "444": "SELECT T1.name, T1.type FROM cards AS T1 WHERE T1.watermark = 'Boros';\t----- bird -----\tcard_games",
    "445": "SELECT T1.language, T1.flavorText, T1.type FROM foreign_data AS T1 JOIN cards AS T2 ON T1.uuid = T2.uuid WHERE T2.watermark = 'colorpie';\t----- bird -----\tcard_games",
    "446": "SELECT CAST(SUM(CASE WHEN convertedManaCost = 10 THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(*) FROM cards WHERE name = 'Abyssal Horror';\t----- bird -----\tcard_games",
    "447": "SELECT code FROM sets WHERE type = 'commander';\t----- bird -----\tcard_games",
    "448": "SELECT f.name, f.type FROM foreign_data AS f JOIN cards AS c ON f.multiverseid = c.multiverseId WHERE c.watermark = 'Abzan';\t----- bird -----\tcard_games",
    "449": "SELECT T1.type, T1.language FROM foreign_data AS T1 JOIN cards AS T2 ON T1.uuid = T2.uuid WHERE T2.watermark = 'azorius';\t----- bird -----\tcard_games",
    "450": "SELECT COUNT(*) FROM cards WHERE artist = 'Aaron Miller' AND cardKingdomFoilId IS NOT NULL AND cardKingdomId IS NOT NULL;\t----- bird -----\tcard_games",
    "451": "SELECT COUNT(*) FROM cards WHERE availability LIKE '%paper%' AND hand = '3';\t----- bird -----\tcard_games",
    "452": "SELECT name FROM cards WHERE isTextless = 0;\t----- bird -----\tcard_games",
    "453": "SELECT convertedManaCost FROM cards WHERE name = 'Ancestor`s Chosen';\t----- bird -----\tcard_games",
    "454": "SELECT COUNT(*) FROM cards WHERE borderColor = 'white' AND power = '*' OR power IS NULL;\t----- bird -----\tcard_games",
    "455": "SELECT c.name FROM cards c WHERE c.isPromo = 1 AND c.side IS NOT NULL;\t----- bird -----\tcard_games",
    "456": "SELECT subtypes,supertypes FROM cards WHERE name = 'Molimo, Maro-Sorcerer';\t----- bird -----\tcard_games",
    "457": "SELECT T1.purchaseUrls FROM cards AS T1 JOIN promo_types AS T2 ON T1.promoTypes = T2.name WHERE T2.name = 'bundle';\t----- bird -----\tcard_games",
    "458": "SELECT COUNT(DISTINCT artist) FROM cards WHERE borderColor = 'black' AND availability LIKE '%arena,mtgo%';\t----- bird -----\tcard_games",
    "459": "SELECT name FROM cards WHERE name IN ('Serra Angel', 'Shrine Keeper') ORDER BY convertedManaCost DESC LIMIT 1;\t----- bird -----\tcard_games",
    "460": "SELECT T1.artist FROM cards AS T1 JOIN foreign_data AS T2 ON T1.scryfallId = T2.uuid WHERE T2.name = 'Battra, Dark Destroyer';\t----- bird -----\tcard_games",
    "461": "SELECT name FROM cards WHERE frameVersion = '2003' ORDER BY convertedManaCost DESC LIMIT 3;\t----- bird -----\tcard_games",
    "462": "SELECT T1.translation FROM set_translations AS T1 JOIN sets AS T2 ON T1.setCode = T2.code WHERE T2.name = 'Ancestor\\'s Chosen' AND T1.language = 'Italian';\t----- bird -----\tcard_games",
    "463": "SELECT COUNT(*) FROM set_translations WHERE set_translations.setCode = (SELECT setCode FROM cards WHERE name = 'Angel of Mercy');\t----- bird -----\tcard_games",
    "464": "SELECT T1.name FROM cards AS T1 JOIN sets AS T2 ON T1.setCode = T2.code WHERE T2.name = 'Hauptset Zehnte Edition';\t----- bird -----\tcard_games",
    "465": "SELECT EXISTS (SELECT 1 FROM cards WHERE name LIKE '%Ancestor''s Chosen%' AND EXISTS (SELECT 1 FROM foreign_data WHERE cards.id = foreign_data.multiverseid AND language = 'Korean'));\t----- bird -----\tcard_games",
    "466": "SELECT COUNT(c.id) FROM cards c JOIN sets s ON c.setCode = s.code WHERE s.name = 'Hauptset Zehnte Edition' AND c.artist = 'Adam Rex';\t----- bird -----\tcard_games",
    "467": "SELECT baseSetSize FROM sets WHERE name = \"Hauptset Zehnte Edition\";\t----- bird -----\tcard_games",
    "468": "SELECT translation FROM set_translations WHERE set_translations.setCode = (SELECT code FROM sets WHERE name = 'Eighth Edition') AND set_translations.language = 'Chinese Simplified';\t----- bird -----\tcard_games",
    "469": "SELECT EXISTS (SELECT 1 FROM cards WHERE name = 'Angel of Mercy' AND mtgoCode IS NOT NULL);\t----- bird -----\tcard_games",
    "470": "SELECT T1.releaseDate FROM sets AS T1 JOIN cards AS T2 ON T1.code = T2.setCode WHERE T2.name = 'Ancestor''s Chosen';\t----- bird -----\tcard_games",
    "471": "SELECT T1.type FROM sets AS T1 JOIN set_translations AS T2 ON T1.code = T2.setCode WHERE T2.translation = 'Hauptset Zehnte Edition';\t----- bird -----\tcard_games",
    "472": "SELECT COUNT(*) FROM set_translations WHERE set_translations.setCode IN (SELECT code FROM sets WHERE block = 'Ice Age') AND translation IS NOT NULL AND language = 'Italian';\t----- bird -----\tcard_games",
    "473": "SELECT EXISTS(SELECT 1 FROM cards WHERE name = 'Adarkar Valkyrie' AND cards.setCode IN (SELECT code FROM sets WHERE isForeignOnly = 1));\t----- bird -----\tcard_games",
    "474": "SELECT COUNT(*) FROM sets WHERE code IN (SELECT setCode FROM set_translations WHERE language = 'Italian') AND baseSetSize < 100;\t----- bird -----\tcard_games",
    "475": "SELECT COUNT(*) FROM cards WHERE setCode = 'COL' AND borderColor = 'black';\t----- bird -----\tcard_games",
    "476": "SELECT name FROM cards WHERE setCode = 'COL' ORDER BY convertedManaCost DESC LIMIT 1;\t----- bird -----\tcard_games",
    "477": "SELECT DISTINCT artist FROM cards WHERE artist IN ('Jeremy Jarvis', 'Aaron Miller', 'Chippy') AND name = 'Coldsnap';\t----- bird -----\tcard_games",
    "478": "SELECT * FROM cards WHERE setCode = 'COL' AND number = 4;\t----- bird -----\tcard_games",
    "479": "SELECT COUNT(c.id) FROM cards c JOIN sets s ON c.setCode = s.code WHERE s.name = 'Coldsnap' AND c.convertedManaCost > 5 AND c.power = '*' OR c.power IS NULL;\t----- bird -----\tcard_games",
    "480": "SELECT T1.flavorText FROM cards AS T1 JOIN foreign_data AS T2 ON T1.id = T2.multiverseid WHERE T1.name = 'Ancestor''s Chosen' AND T2.language = 'Italian';\t----- bird -----\tcard_games",
    "481": "SELECT DISTINCT T1.language FROM foreign_data AS T1 JOIN cards AS T2 ON T1.multiverseid = T2.multiverseId WHERE T2.name = 'Ancestor''s Chosen' AND T1.flavorText IS NOT NULL;\t----- bird -----\tcard_games",
    "482": "SELECT T1.type FROM foreign_data AS T1 JOIN cards AS T2 ON T1.uuid = T2.uuid WHERE T2.name = 'Ancestor''s Chosen' AND T1.language = 'German';\t----- bird -----\tcard_games",
    "483": "SELECT T1.text FROM rulings AS T1 JOIN cards AS T2 ON T1.uuid = T2.uuid JOIN sets AS T3 ON T2.setCode = T3.code WHERE T3.name = 'Coldsnap' AND T1.date IS NOT NULL AND T2.originalText IS NOT NULL AND T2.originalText != '' AND EXISTS (SELECT 1 FROM set_translations AS ST WHERE ST.setCode = T2.setCode AND ST.language = 'Italian');\t----- bird -----\tcard_games",
    "484": "SELECT T1.name FROM cards AS T1 JOIN set_translations AS T2 ON T1.id = T2.id JOIN sets AS T3 ON T2.setCode = T3.code WHERE T3.name = 'Coldsnap' AND T2.language = 'Italian' ORDER BY T1.convertedManaCost DESC LIMIT 1;\t----- bird -----\tcard_games",
    "485": "SELECT date FROM rulings WHERE uuid IN (SELECT uuid FROM cards WHERE name = 'Reminisce');\t----- bird -----\tcard_games",
    "486": "SELECT CAST(SUM(CASE WHEN convertedManaCost = 7 THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(*) FROM cards WHERE setCode = 'COL';\t----- bird -----\tcard_games",
    "487": "SELECT CAST(SUM(CASE WHEN cards.cardKingdomFoilId IS NOT NULL AND cards.cardKingdomId IS NOT NULL THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(cards.id) FROM cards WHERE cards.name = 'Coldsnap';\t----- bird -----\tcard_games",
    "488": "SELECT code FROM sets WHERE releaseDate = '2017-07-14';\t----- bird -----\tcard_games",
    "489": "SELECT keyruneCode FROM sets WHERE code = 'PKHC';\t----- bird -----\tcard_games",
    "490": "SELECT mcmId FROM sets WHERE code = 'SS2';\t----- bird -----\tcard_games",
    "491": "SELECT T1.mcmName FROM sets AS T1 WHERE T1.releaseDate = '2017-06-09';\t----- bird -----\tcard_games",
    "492": "SELECT type FROM sets WHERE name = \"From the Vault: Lore\";\t----- bird -----\tcard_games",
    "493": "SELECT parentCode FROM sets WHERE name = \"Commander 2014 Oversized\";\t----- bird -----\tcard_games",
    "494": "SELECT T1.text FROM rulings AS T1 JOIN cards AS T2 ON T1.uuid = T2.uuid WHERE T2.artist = 'Jim Pavelec' AND T2.hasContentWarning = 1;\t----- bird -----\tcard_games",
    "495": "SELECT T1.releaseDate FROM sets AS T1 INNER JOIN cards AS T2 ON T1.code = T2.setCode WHERE T2.name = 'Evacuation';\t----- bird -----\tcard_games",
    "496": "SELECT baseSetSize FROM sets WHERE code IN (SELECT setCode FROM set_translations WHERE translation = 'Rinascita di Alara');\t----- bird -----\tcard_games",
    "497": "SELECT T1.type FROM sets AS T1 JOIN set_translations AS T2 ON T1.code = T2.setCode WHERE T2.translation = 'Huiti\u00e8me \u00e9dition';\t----- bird -----\tcard_games",
    "498": "SELECT T1.name FROM sets AS T1 JOIN set_translations AS T2 ON T1.code = T2.setCode WHERE T2.translation = 'Tendo Ice Bridge' AND T2.language = 'French';\t----- bird -----\tcard_games",
    "499": "SELECT COUNT(*) FROM set_translations WHERE setCode = (SELECT code FROM sets WHERE name = 'Tenth Edition');\t----- bird -----\tcard_games",
    "500": "SELECT T1.name FROM sets AS T1 JOIN cards AS T2 ON T1.code = T2.setCode WHERE T2.name = 'Fellwar Stone' AND T1.name LIKE '%Japanese%';\t----- bird -----\tcard_games",
    "501": "SELECT name FROM cards WHERE setCode = 'JOU' ORDER BY convertedManaCost DESC LIMIT 1;\t----- bird -----\tcard_games",
    "502": "SELECT releaseDate FROM sets WHERE code = (SELECT code FROM set_translations WHERE translation = 'Ola de fr\u00edo');\t----- bird -----\tcard_games",
    "503": "SELECT T1.type FROM sets AS T1 JOIN cards AS T2 ON T1.code = T2.setCode WHERE T2.name = 'Samite Pilgrim';\t----- bird -----\tcard_games",
    "504": "SELECT COUNT(c.id) FROM cards c JOIN sets s ON c.setCode = s.code WHERE s.name = 'World Championship Decks 2004' AND c.convertedManaCost = '3';\t----- bird -----\tcard_games",
    "505": "SELECT translation FROM set_translations WHERE set_translations.setCode = (SELECT code FROM sets WHERE name = 'Mirrodin') AND set_translations.language = 'Chinese Simplified';\t----- bird -----\tcard_games",
    "506": "SELECT (SUM(CASE WHEN T1.language = 'Japanese' AND T1.isNonFoilOnly = 1 THEN 1 ELSE 0 END) * 100.0) / SUM(CASE WHEN T1.language = 'Japanese' THEN 1 ELSE 0 END) FROM foreign_data AS T1;\t----- bird -----\tcard_games",
    "507": "SELECT CAST(SUM(CASE WHEN T1.isOnlineOnly = 1 THEN 1 ELSE 0 END) AS REAL) * 100 / SUM(CASE WHEN T2.language = 'Portuguese (Brazil)' THEN 1 ELSE 0 END) FROM cards AS T1 INNER JOIN set_translations AS T2 ON T1.setCode = T2.setCode WHERE T2.language = 'Portuguese (Brazil)';\t----- bird -----\tcard_games",
    "508": "SELECT T1.availability FROM cards AS T1 JOIN artists AS T2 ON T1.artist = T2.name WHERE T1.artist = 'Aleksi Briclot' AND T1.isTextless = 1;\t----- bird -----\tcard_games",
    "509": "SELECT id FROM sets ORDER BY baseSetSize DESC LIMIT 1;\t----- bird -----\tcard_games",
    "510": "SELECT artist FROM cards WHERE side IS NULL ORDER BY convertedManaCost DESC LIMIT 1;\t----- bird -----\tcard_games",
    "511": "SELECT MAX(T1.frameEffects) FROM cards AS T1 WHERE T1.cardKingdomFoilId IS NOT NULL AND T1.cardKingdomId IS NOT NULL;\t----- bird -----\tcard_games",
    "512": "SELECT count(*) FROM cards WHERE power IS NULL OR power = '*' AND hasFoil = 0 AND duelDeck = 'a';\t----- bird -----\tcard_games",
    "513": "SELECT id FROM sets WHERE type = 'commander' ORDER BY totalSetSize DESC LIMIT 1;\t----- bird -----\tcard_games",
    "514": "SELECT name FROM cards WHERE duelDeck = TRUE ORDER BY convertedManaCost DESC LIMIT 10;\t----- bird -----\tcard_games",
    "515": "SELECT C.originalReleaseDate, L.format FROM cards AS C JOIN legalities AS L ON C.scryfallId = L.uuid WHERE C.rarity = 'mythic' AND L.status = 'legal' ORDER BY C.originalReleaseDate LIMIT 1;\t----- bird -----\tcard_games",
    "516": "SELECT count(*) FROM cards WHERE artist = 'Volkan Ba\u01f5a' AND EXISTS (SELECT 1 FROM foreign_data WHERE foreign_data.multiverseid = cards.multiverseId AND language = 'French');\t----- bird -----\tcard_games",
    "517": "SELECT COUNT(*) FROM cards WHERE rarity = 'rare' AND types LIKE '%Enchantment%' AND name = 'Abundance' AND id IN (SELECT card_id FROM legalities WHERE format IN (SELECT format FROM legalities WHERE status = 'Legal'));\t----- bird -----\tcard_games",
    "518": "SELECT T1.format, T2.name FROM legalities AS T1 JOIN cards AS T2 ON T1.uuid = T2.uuid WHERE T1.status = 'Banned' GROUP BY T1.format ORDER BY COUNT(*) DESC LIMIT 1;\t----- bird -----\tcard_games",
    "519": "SELECT T1.language FROM set_translations AS T1 INNER JOIN sets AS T2 ON T1.setCode = T2.code WHERE T2.name = 'Battlebond';\t----- bird -----\tcard_games",
    "520": "SELECT T1.artist, T1.format FROM cards AS T1 GROUP BY T1.artist ORDER BY COUNT(T1.id) ASC LIMIT 1;\t----- bird -----\tcard_games",
    "521": "SELECT T1.status FROM legalities AS T1 JOIN cards AS T2 ON T1.uuid = T2.uuid WHERE T2.frameVersion = '1997' AND T2.artist = 'D. Alexander Gregory' AND T1.format = 'legacy' AND T2.hasContentWarning = 1;\t----- bird -----\tcard_games",
    "522": "SELECT c.name, l.format FROM cards c JOIN legalities l ON c.id = l.uuid WHERE c.edhrecRank = 1 AND l.status = 'Banned';\t----- bird -----\tcard_games",
    "523": "SELECT CAST(COUNT(T1.id) AS REAL) / CAST(STRFTIME('%Y',MIN(T1.releaseDate)) AS INT) AS annual_average_sets FROM sets AS T1 WHERE releaseDate BETWEEN '2012-01-01' AND '2015-12-31' LIMIT 1;\t----- bird -----\tcard_games",
    "524": "SELECT DISTINCT artist FROM cards WHERE borderColor = 'black' AND availability = 'arena';\t----- bird -----\tcard_games",
    "525": "SELECT T1.uuid FROM cards AS T1 JOIN legalities AS T2 ON T1.uuid = T2.uuid WHERE T2.format = 'oldschool' AND T2.status IN ('restricted', 'banned');\t----- bird -----\tcard_games",
    "526": "SELECT COUNT(*) FROM cards WHERE artist = 'Matthew D. Wilson' AND availability = 'paper';\t----- bird -----\tcard_games",
    "527": "SELECT T1.text FROM rulings AS T1 INNER JOIN cards AS T2 ON T1.uuid = T2.uuid WHERE T2.artist = 'Kev Walker' ORDER BY T1.date DESC;\t----- bird -----\tcard_games",
    "528": "SELECT T1.name, T3.format FROM cards AS T1 JOIN sets AS T2 ON T1.setCode = T2.code JOIN legalities AS T3 ON T1.id = T3.uuid WHERE T2.name = 'Hour of Devastation' AND T3.status = 'Legal';\t----- bird -----\tcard_games",
    "529": "SELECT DISTINCT SETS.name FROM SETS JOIN set_translations ON SETS.code = set_translations.setCode WHERE set_translations.language = 'Korean' AND set_translations.language NOT LIKE '%Japanese%';\t----- bird -----\tcard_games",
    "530": "SELECT DISTINCT T1.frameVersion, T1.name FROM cards AS T1 WHERE T1.artist = 'Allen Williams' UNION SELECT T1.name FROM cards AS T1 INNER JOIN legalities AS T2 ON T1.id = T2.uuid WHERE T2.status = 'Banned';\t----- bird -----\tcard_games",
    "531": "SELECT DisplayName FROM users WHERE DisplayName IN ('Harlan', 'Jarrod Dixon') ORDER BY Reputation DESC LIMIT 1;\t----- bird -----\tcodebase_community",
    "532": "SELECT DisplayName FROM users WHERE strftime('%Y', CreationDate) = '2011';\t----- bird -----\tcodebase_community",
    "533": "SELECT COUNT(Id) FROM users WHERE LastAccessDate > '2014-09-01';\t----- bird -----\tcodebase_community",
    "534": "SELECT DisplayName FROM users ORDER BY Views DESC LIMIT 1;\t----- bird -----\tcodebase_community",
    "535": "SELECT count(DISTINCT UserId) FROM users WHERE UpVotes > 100 AND DownVotes > 1;\t----- bird -----\tcodebase_community",
    "536": "SELECT count(Id) FROM users WHERE Views > 10 AND CreationDate > '2013-01-01';\t----- bird -----\tcodebase_community",
    "537": "SELECT COUNT(*) FROM posts WHERE OwnerDisplayName = 'csgillespie';\t----- bird -----\tcodebase_community",
    "538": "SELECT T1.Title FROM posts AS T1 INNER JOIN users AS T2 ON T1.OwnerUserId = T2.Id WHERE T2.DisplayName = 'csgillespie';\t----- bird -----\tcodebase_community",
    "539": "SELECT OwnerDisplayName FROM posts WHERE Title = \"Eliciting priors from experts\";\t----- bird -----\tcodebase_community",
    "540": "SELECT Title FROM posts WHERE OwnerDisplayName = 'csgillespie' ORDER BY ViewCount DESC LIMIT 1;\t----- bird -----\tcodebase_community",
    "541": "SELECT OwnerDisplayName FROM posts ORDER BY FavoriteCount DESC LIMIT 1;\t----- bird -----\tcodebase_community",
    "542": "SELECT SUM(c.Score) FROM comments AS c JOIN posts AS p ON c.PostId = p.Id WHERE p.OwnerDisplayName = 'csgillespie';\t----- bird -----\tcodebase_community",
    "543": "SELECT posts.AnswerCount FROM posts WHERE posts.OwnerDisplayName = 'csgillespie' ORDER BY posts.AnswerCount DESC LIMIT 1;\t----- bird -----\tcodebase_community",
    "544": "SELECT LastEditorDisplayName FROM posts WHERE Title = 'Examples for teaching: Correlation does not mean causation';\t----- bird -----\tcodebase_community",
    "545": "SELECT COUNT(p.Id) FROM posts p WHERE p.OwnerDisplayName = 'csgillespie' AND p.ParentId IS NULL;\t----- bird -----\tcodebase_community",
    "546": "SELECT DISTINCT OwnerDisplayName FROM posts WHERE ClosedDate IS NOT NULL;\t----- bird -----\tcodebase_community",
    "547": "SELECT COUNT(p.Id) FROM posts p JOIN users u ON p.OwnerUserId = u.Id WHERE u.Age > 65 AND p.Score >= 20;\t----- bird -----\tcodebase_community",
    "548": "SELECT u.Location FROM posts p JOIN users u ON p.OwnerUserId = u.Id WHERE p.Title = 'Eliciting priors from experts';\t----- bird -----\tcodebase_community",
    "549": "SELECT p.Body FROM posts p JOIN tags t ON p.Id = t.ExcerptPostId WHERE t.TagName = 'bayesian';\t----- bird -----\tcodebase_community",
    "550": "SELECT p.Body FROM posts p JOIN tags t ON p.Id = t.ExcerptPostId ORDER BY t.Count DESC LIMIT 1;\t----- bird -----\tcodebase_community",
    "551": "SELECT COUNT(*) FROM badges WHERE UserId IN (SELECT Id FROM users WHERE DisplayName = 'csgillespie');\t----- bird -----\tcodebase_community",
    "552": "SELECT Name FROM badges WHERE UserId IN (SELECT Id FROM users WHERE DisplayName = 'csgillespie');\t----- bird -----\tcodebase_community",
    "553": "SELECT COUNT(*) FROM badges WHERE UserId IN (SELECT Id FROM users WHERE DisplayName = 'csgillespie') AND STRFTIME('%Y', Date) = '2011';\t----- bird -----\tcodebase_community",
    "554": "SELECT u.DisplayName FROM users u JOIN badges b ON u.Id = b.UserId GROUP BY u.Id ORDER BY COUNT(b.Id) DESC LIMIT 1;\t----- bird -----\tcodebase_community",
    "555": "SELECT AVG(p.Score) FROM posts AS p WHERE p.OwnerDisplayName = 'csgillespie';\t----- bird -----\tcodebase_community",
    "556": "SELECT CAST(COUNT(b.Id) AS REAL) / COUNT(DISTINCT u.DisplayName) FROM badges AS b JOIN users AS u ON b.UserId = u.Id WHERE u.Views > 200;\t----- bird -----\tcodebase_community",
    "557": "SELECT CAST(SUM(CASE WHEN p.OwnerUserId = u.Id AND u.Age > 65 THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(p.Id) FROM posts p JOIN users u ON p.OwnerUserId = u.Id WHERE p.Score > 5;\t----- bird -----\tcodebase_community",
    "558": "SELECT count(*) FROM votes WHERE UserId = 58 AND CreationDate = '2010-07-19';\t----- bird -----\tcodebase_community",
    "559": "SELECT CreationDate FROM votes GROUP BY CreationDate ORDER BY COUNT(Id) DESC LIMIT 1;\t----- bird -----\tcodebase_community",
    "560": "SELECT COUNT(*) FROM badges WHERE Name = 'Revival';\t----- bird -----\tcodebase_community",
    "561": "SELECT T1.Title FROM posts AS T1 JOIN comments AS T2 ON T1.Id = T2.PostId WHERE T2.Score = (SELECT MAX(Score) FROM comments);\t----- bird -----\tcodebase_community",
    "562": "SELECT CommentCount FROM posts WHERE ViewCount = 1910;\t----- bird -----\tcodebase_community",
    "563": "SELECT T1.FavoriteCount FROM posts AS T1 JOIN comments AS T2 ON T1.Id = T2.PostId WHERE T2.UserId = '3025' AND T2.CreationDate = '2014/4/23 20:29:39.0';\t----- bird -----\tcodebase_community",
    "564": "SELECT Text FROM comments WHERE PostId = (SELECT Id FROM posts WHERE ParentId = 107829) LIMIT 1;\t----- bird -----\tcodebase_community",
    "565": "SELECT CASE WHEN p.ClosedDate IS NULL THEN 'Yes' ELSE 'No' END FROM comments c JOIN posts p ON c.PostId = p.Id WHERE c.UserId = 23853 AND c.CreationDate = '2013-07-12 09:08:18.0';\t----- bird -----\tcodebase_community",
    "566": "SELECT u.Reputation FROM users u JOIN posts p ON u.Id = p.OwnerUserId WHERE p.Id = 65041;\t----- bird -----\tcodebase_community",
    "567": "SELECT COUNT(*) FROM posts WHERE OwnerDisplayName = \"Tiago Pasqualini\";\t----- bird -----\tcodebase_community",
    "568": "SELECT U.DisplayName FROM users AS U JOIN votes AS V ON U.Id = V.UserId WHERE V.Id = 6347;\t----- bird -----\tcodebase_community",
    "569": "SELECT COUNT(*) FROM votes WHERE PostId IN (SELECT Id FROM posts WHERE Title LIKE '%data visualization%');\t----- bird -----\tcodebase_community",
    "570": "SELECT b.Name FROM badges AS b JOIN users AS u ON b.UserId = u.Id WHERE u.DisplayName = \"DatEpicCoderGuyWhoPrograms\";\t----- bird -----\tcodebase_community",
    "571": "SELECT CAST(COUNT(posts.Id) AS REAL) / COUNT(votes.Id) FROM posts JOIN votes ON posts.Id = votes.PostId WHERE posts.OwnerUserId = '24';\t----- bird -----\tcodebase_community",
    "572": "SELECT ViewCount FROM posts WHERE Title = 'Integration of Weka and/or RapidMiner into Informatica PowerCenter/Developer';\t----- bird -----\tcodebase_community",
    "573": "SELECT Text FROM comments WHERE Score = 17;\t----- bird -----\tcodebase_community",
    "574": "SELECT DisplayName FROM users WHERE WebsiteUrl = 'http://stackoverflow.com';\t----- bird -----\tcodebase_community",
    "575": "SELECT Name FROM badges WHERE UserId IN (SELECT Id FROM users WHERE DisplayName = 'SilentGhost');\t----- bird -----\tcodebase_community",
    "576": "SELECT UserDisplayName FROM comments WHERE Text = 'thank you user93';\t----- bird -----\tcodebase_community",
    "577": "SELECT * FROM comments WHERE UserDisplayName = 'A Lion';\t----- bird -----\tcodebase_community",
    "578": "SELECT U.DisplayName, U.Reputation FROM posts P JOIN users U ON P.OwnerUserId = U.Id WHERE P.Title = 'Understanding what Dassault iSight is doing?';\t----- bird -----\tcodebase_community",
    "579": "SELECT c.Text FROM comments AS c JOIN posts AS p ON c.PostId = p.Id WHERE p.Title = 'How does gentle boosting differ from AdaBoost?';\t----- bird -----\tcodebase_community",
    "580": "SELECT U.DisplayName FROM users AS U JOIN badges AS B ON U.Id = B.UserId WHERE B.Name = 'Necromancer' LIMIT 10;\t----- bird -----\tcodebase_community",
    "581": "SELECT LastEditorDisplayName FROM posts WHERE Title = 'Open source tools for visualizing multi-dimensional data';\t----- bird -----\tcodebase_community",
    "582": "SELECT T1.Title FROM posts AS T1 INNER JOIN postHistory AS T2 ON T1.Id = T2.PostId INNER JOIN users AS T3 ON T2.UserId = T3.Id WHERE T3.DisplayName = 'Vebjorn Ljosa';\t----- bird -----\tcodebase_community",
    "583": "SELECT p.Score, u.WebsiteUrl FROM posts AS p JOIN postHistory AS ph ON p.Id = ph.PostId JOIN users AS u ON ph.LastEditorUserId = u.Id WHERE ph.LastEditorUserId = (SELECT Id FROM users WHERE DisplayName = 'Yevgeny') AND ph.PostHistoryTypeId = 2;\t----- bird -----\tcodebase_community",
    "584": "SELECT c.Id, c.PostId, c.Score, c.Text, c.CreationDate, c.UserId, c.UserDisplayName FROM comments c JOIN posts p ON c.PostId = p.Id WHERE p.Title = 'Why square the difference instead of taking the absolute value in standard deviation?';\t----- bird -----\tcodebase_community",
    "585": "SELECT sum(BountyAmount) FROM votes WHERE PostId IN (SELECT Id FROM posts WHERE Title LIKE '%data%');\t----- bird -----\tcodebase_community",
    "586": "SELECT T1.DisplayName FROM users AS T1 INNER JOIN votes AS T2 ON T1.Id = T2.UserId INNER JOIN posts AS T3 ON T2.PostId = T3.Id WHERE T2.BountyAmount = 50 AND T3.Title LIKE '%variance%';\t----- bird -----\tcodebase_community",
    "587": "SELECT P.Title, C.Text, AVG(P.ViewCount) AS AverageViewCount FROM posts P JOIN postLinks PL ON P.Id = PL.PostId JOIN tags T ON PL.RelatedPostId = T.Id JOIN comments C ON P.Id = C.PostId WHERE T.TagName = 'humor' GROUP BY P.Id, P.Title, C.Text;\t----- bird -----\tcodebase_community",
    "588": "SELECT count(*) FROM comments WHERE UserId = 13;\t----- bird -----\tcodebase_community",
    "589": "SELECT Id FROM users ORDER BY Reputation DESC LIMIT 1;\t----- bird -----\tcodebase_community",
    "590": "SELECT Id FROM users ORDER BY Views ASC LIMIT 1;\t----- bird -----\tcodebase_community",
    "591": "SELECT count(DISTINCT UserId) FROM badges WHERE Name = 'Supporter' AND strftime('%Y', Date) = '2011';\t----- bird -----\tcodebase_community",
    "592": "SELECT count(DISTINCT UserId) FROM badges WHERE Id > 5;\t----- bird -----\tcodebase_community",
    "593": "SELECT COUNT(DISTINCT UserId) FROM badges WHERE Name IN ('Teacher', 'Supporter') AND UserId IN (SELECT Id FROM users WHERE Location = 'New York');\t----- bird -----\tcodebase_community",
    "594": "SELECT U.DisplayName, U.Reputation FROM users U JOIN posts P ON U.Id = P.OwnerUserId WHERE P.Id = 1;\t----- bird -----\tcodebase_community",
    "595": "SELECT DISTINCT T1.UserId FROM postHistory AS T1 INNER JOIN posts AS T2 ON T1.PostId = T2.Id WHERE T2.ViewCount >= 1000 AND (SELECT COUNT(*) FROM postHistory AS PH WHERE PH.PostId = T1.PostId) = 1;\t----- bird -----\tcodebase_community",
    "596": "SELECT b.Name FROM badges AS b JOIN users AS u ON b.UserId = u.Id WHERE u.Id IN (SELECT UserId FROM comments GROUP BY UserId ORDER BY COUNT(*) DESC LIMIT 1);\t----- bird -----\tcodebase_community",
    "597": "SELECT COUNT(DISTINCT b.UserId) FROM badges AS b JOIN users AS u ON b.UserId = u.Id WHERE u.Location = 'India' AND b.Name = 'Teacher';\t----- bird -----\tcodebase_community",
    "598": "SELECT SUM(CASE WHEN strftime('%Y', Date) = '2010' THEN 1 ELSE 0 END) * 100.0 / COUNT(*) - SUM(CASE WHEN strftime('%Y', Date) = '2011' THEN 1 ELSE 0 END) * 100.0 / COUNT(*) FROM badges WHERE Name = 'Student';\t----- bird -----\tcodebase_community",
    "599": "SELECT T1.PostHistoryTypeId, COUNT(DISTINCT T2.UserId) FROM postHistory AS T1 INNER JOIN comments AS T2 ON T1.PostId = T2.PostId WHERE T1.PostId = 3720 GROUP BY T1.PostHistoryTypeId;\t----- bird -----\tcodebase_community",
    "600": "SELECT T1.RelatedPostId, T1.LinkTypeId, T2.ViewCount FROM postLinks AS T1 JOIN posts AS T2 ON T1.RelatedPostId = T2.Id WHERE T1.PostId = 61217;\t----- bird -----\tcodebase_community",
    "601": "SELECT Score, LinkTypeId FROM postLinks WHERE PostId = 395;\t----- bird -----\tcodebase_community",
    "602": "SELECT p.Id, p.OwnerUserId FROM posts AS p WHERE p.Score > 60;\t----- bird -----\tcodebase_community",
    "603": "SELECT SUM(p.FavoriteCount) FROM posts AS p JOIN users AS u ON p.OwnerUserId = u.Id WHERE u.Id = 686 AND STRFTIME('%Y', p.CreaionDate) = '2011';\t----- bird -----\tcodebase_community",
    "604": "SELECT AVG(UpVotes), AVG(Age) FROM users WHERE Id IN (SELECT UserId FROM posts GROUP BY UserId HAVING COUNT(*) > 10);\t----- bird -----\tcodebase_community",
    "605": "SELECT COUNT(DISTINCT UserId) FROM badges WHERE Name = 'Announcer';\t----- bird -----\tcodebase_community",
    "606": "SELECT Name FROM badges WHERE Date = '2010-07-19 19:39:08.0';\t----- bird -----\tcodebase_community",
    "607": "SELECT count(*) FROM comments WHERE Score > 60;\t----- bird -----\tcodebase_community",
    "608": "SELECT Text FROM comments WHERE CreationDate = '2010-07-19 19:25:47.0';\t----- bird -----\tcodebase_community",
    "609": "SELECT count(*) FROM posts WHERE Score = 10;\t----- bird -----\tcodebase_community",
    "610": "SELECT B.Name FROM badges AS B JOIN users AS U ON B.UserId = U.Id WHERE U.Id = (SELECT Id FROM users ORDER BY Reputation DESC LIMIT 1);\t----- bird -----\tcodebase_community",
    "611": "SELECT T1.Reputation FROM users AS T1 JOIN badges AS T2 ON T1.Id = T2.UserId WHERE T2.Date = '2010-07-19 19:39:08.0';\t----- bird -----\tcodebase_community",
    "612": "SELECT b.Name FROM badges b JOIN users u ON b.UserId = u.Id WHERE u.DisplayName = \"Pierre\";\t----- bird -----\tcodebase_community",
    "613": "SELECT DISTINCT B.Date FROM badges AS B JOIN users AS U ON B.UserId = U.Id WHERE U.Location = \"Rochester, NY\";\t----- bird -----\tcodebase_community",
    "614": "SELECT CAST(SUM(CASE WHEN EXISTS (SELECT 1 FROM badges WHERE UserId = u.Id AND Name = 'Teacher') THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(u.Id) FROM users u;\t----- bird -----\tcodebase_community",
    "615": "SELECT CAST(SUM(CASE WHEN T1.Age BETWEEN 13 AND 18 THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(T1.Id) FROM users AS T1 JOIN badges AS T2 ON T1.Id = T2.UserId WHERE T2.Name = 'Organizer';\t----- bird -----\tcodebase_community",
    "616": "SELECT c.Score FROM comments AS c JOIN posts AS p ON c.PostId = p.Id WHERE p.CreaionDate = '2010-07-19 19:19:56.0';\t----- bird -----\tcodebase_community",
    "617": "SELECT Text FROM comments WHERE CreationDate = '2010-07-19 19:37:33.0';\t----- bird -----\tcodebase_community",
    "618": "SELECT T1.Age FROM users AS T1 JOIN badges AS T2 ON T1.Id = T2.UserId WHERE T1.Location = \"Vienna, Austria\";\t----- bird -----\tcodebase_community",
    "619": "SELECT COUNT(DISTINCT U.Id) FROM users AS U JOIN badges AS B ON U.Id = B.UserId WHERE B.Name = 'Supporter' AND U.Age BETWEEN 19 AND 65;\t----- bird -----\tcodebase_community",
    "620": "SELECT SUM(P.ViewCount) FROM posts AS P JOIN badges AS B ON P.OwnerUserId = B.UserId WHERE B.Date = '2010-07-19 19:39:08.0';\t----- bird -----\tcodebase_community",
    "621": "SELECT b.Name FROM badges AS b JOIN users AS u ON b.UserId = u.Id WHERE u.Id = (SELECT Id FROM users ORDER BY Reputation LIMIT 1);\t----- bird -----\tcodebase_community",
    "622": "SELECT Name FROM badges WHERE UserId IN (SELECT Id FROM users WHERE DisplayName = 'Sharpie');\t----- bird -----\tcodebase_community",
    "623": "SELECT COUNT(DISTINCT U.Id) FROM users AS U JOIN badges AS B ON U.Id = B.UserId WHERE B.Name = \"Supporter\" AND U.Age > 65;\t----- bird -----\tcodebase_community",
    "624": "SELECT DisplayName FROM users WHERE Id = 30;\t----- bird -----\tcodebase_community",
    "625": "SELECT count(*) FROM users WHERE Location = 'New York';\t----- bird -----\tcodebase_community",
    "626": "SELECT count(*) FROM votes WHERE YEAR(CreationDate) = 2010;\t----- bird -----\tcodebase_community",
    "627": "SELECT COUNT(*) FROM users WHERE Age BETWEEN 19 AND 65;\t----- bird -----\tcodebase_community",
    "628": "SELECT DisplayName FROM users ORDER BY Views DESC LIMIT 1;\t----- bird -----\tcodebase_community",
    "629": "SELECT CAST(SUM(CASE WHEN strftime('%Y', CreationDate) = '2010' THEN 1 ELSE 0 END) AS REAL) / SUM(CASE WHEN strftime('%Y', CreationDate) = '2011' THEN 1 ELSE 0 END) FROM votes;\t----- bird -----\tcodebase_community",
    "630": "SELECT T1.TagName FROM tags AS T1 INNER JOIN posts AS T2 ON T2.Tags LIKE '%' || T1.TagName || '%' INNER JOIN users AS U ON T2.OwnerUserId = U.Id WHERE U.DisplayName = 'John Salvatier';\t----- bird -----\tcodebase_community",
    "631": "SELECT count(*) FROM posts WHERE OwnerDisplayName = 'Daniel Vassallo';\t----- bird -----\tcodebase_community",
    "632": "SELECT count(*) FROM votes WHERE UserId IN (SELECT Id FROM users WHERE DisplayName = 'Harlan');\t----- bird -----\tcodebase_community",
    "633": "SELECT posts.Id FROM posts WHERE OwnerDisplayName = 'slashnick' ORDER BY AnswerCount DESC LIMIT 1;\t----- bird -----\tcodebase_community",
    "634": "SELECT P.Title FROM posts AS P WHERE OwnerDisplayName IN ('Harvey Motulsky', 'Noah Snyder') ORDER BY P.ViewCount DESC LIMIT 1;\t----- bird -----\tcodebase_community",
    "635": "SELECT COUNT(p.Id) FROM posts p JOIN votes v ON p.Id = v.PostId WHERE p.OwnerDisplayName = 'Matt Parker' AND v.VoteTypeId = 1 GROUP BY p.Id HAVING COUNT(v.Id) > 4;\t----- bird -----\tcodebase_community",
    "636": "SELECT count(*) FROM comments WHERE UserDisplayName = 'Neil McGuigan' AND Score < 60;\t----- bird -----\tcodebase_community",
    "637": "SELECT T1.TagName FROM tags AS T1 JOIN posts AS T2 ON T1.ExcerptPostId = T2.Id JOIN users AS U ON T2.OwnerUserId = U.Id WHERE U.DisplayName = 'Mark Meckes' AND T2.CommentCount = 0;\t----- bird -----\tcodebase_community",
    "638": "SELECT DISTINCT UserId FROM badges WHERE Name = 'Organizer';\t----- bird -----\tcodebase_community",
    "639": "SELECT CAST(SUM(CASE WHEN T2.TagName = 'r' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(T1.Id) AS percentage FROM posts AS T1 JOIN postHistory AS T3 ON T1.Id = T3.PostId JOIN tags AS T2 ON T3.Text LIKE '%' || T2.TagName || '%' WHERE T3.UserDisplayName = 'Community';\t----- bird -----\tcodebase_community",
    "640": "SELECT SUM(ViewCount) FROM posts WHERE OwnerDisplayName = 'Mornington' - SUM(ViewCount) FROM posts WHERE OwnerDisplayName = 'Amos';\t----- bird -----\tcodebase_community",
    "641": "SELECT COUNT(DISTINCT UserId) FROM badges WHERE Name = 'Commentator' AND YEAR(Date) = 2014;\t----- bird -----\tcodebase_community",
    "642": "SELECT count(*) FROM posts WHERE CreationDate BETWEEN '2010-07-21 00:00:00' AND '2010-07-21 23:59:59';\t----- bird -----\tcodebase_community",
    "643": "SELECT T1.DisplayName, T1.Age FROM users AS T1 WHERE T1.Views = (SELECT MAX(Views) FROM users);\t----- bird -----\tcodebase_community",
    "644": "SELECT LastEditDate, LastEditorUserId FROM posts WHERE Title = 'Detecting a given face in a database of facial images';\t----- bird -----\tcodebase_community",
    "645": "SELECT COUNT(*) FROM comments WHERE UserId = 13 AND Score < 60;\t----- bird -----\tcodebase_community",
    "646": "SELECT P.Title, U.DisplayName FROM posts AS P JOIN comments AS C ON P.Id = C.PostId JOIN users AS U ON C.UserId = U.Id WHERE C.Score > 60;\t----- bird -----\tcodebase_community",
    "647": "SELECT T1.Name FROM badges AS T1 INNER JOIN users AS T2 ON T1.UserId = T2.Id WHERE T2.Location = 'North Pole' AND YEAR(T1.Date) = 2011;\t----- bird -----\tcodebase_community",
    "648": "SELECT T1.DisplayName, T1.WebsiteUrl FROM users AS T1 JOIN posts AS T2 ON T1.Id = T2.OwnerUserId WHERE T2.FavoriteCount > 150;\t----- bird -----\tcodebase_community",
    "649": "SELECT COUNT(*) AS PostHistoryCount, MAX(LastEditDate) AS LastEditDate FROM postHistory PH JOIN posts P ON PH.PostId = P.Id WHERE P.Title = \"What is the best introductory Bayesian statistics textbook?\";\t----- bird -----\tcodebase_community",
    "650": "SELECT u.LastAccessDate, u.Location FROM users u JOIN badges b ON u.Id = b.UserId WHERE b.Name = 'Outliers';\t----- bird -----\tcodebase_community",
    "651": "SELECT T1.Title FROM posts AS T1 JOIN postLinks AS T2 ON T1.Id = T2.RelatedPostId WHERE T2.PostId = (SELECT Id FROM posts WHERE Title = \"How to tell if something happened in a data set which monitors a value over time\");\t----- bird -----\tcodebase_community",
    "652": "SELECT T1.PostId, T2.Name FROM postHistory AS T1 INNER JOIN badges AS T2 ON T1.UserId = T2.UserId WHERE T1.UserDisplayName = \"Samuel\" AND YEAR(T1.CreationDate) = 2013 AND YEAR(T2.Date) = 2013;\t----- bird -----\tcodebase_community",
    "653": "SELECT OwnerDisplayName FROM posts ORDER BY ViewCount DESC LIMIT 1;\t----- bird -----\tcodebase_community",
    "654": "SELECT U.DisplayName, U.Location FROM users U JOIN tags T ON U.Id = T.ExcerptPostId WHERE T.TagName = 'hypothesis-testing';\t----- bird -----\tcodebase_community",
    "655": "SELECT T2.Title, T1.LinkTypeId FROM postLinks AS T1 INNER JOIN posts AS T2 ON T1.RelatedPostId = T2.Id WHERE T1.PostId = (SELECT Id FROM posts WHERE Title = 'What are principal component scores?');\t----- bird -----\tcodebase_community",
    "656": "SELECT p.OwnerDisplayName FROM posts AS p WHERE p.ParentId IS NOT NULL AND p.Score = (SELECT MAX(Score) FROM posts WHERE ParentId IS NOT NULL);\t----- bird -----\tcodebase_community",
    "657": "SELECT u.DisplayName, u.WebsiteUrl FROM users u JOIN votes v ON u.Id = v.UserId WHERE v.VoteTypeId = 8 ORDER BY v.BountyAmount DESC LIMIT 1;\t----- bird -----\tcodebase_community",
    "658": "SELECT Title FROM posts ORDER BY ViewCount DESC LIMIT 5;\t----- bird -----\tcodebase_community",
    "659": "SELECT COUNT(*) FROM tags WHERE Count BETWEEN 5000 AND 7000;\t----- bird -----\tcodebase_community",
    "660": "SELECT OwnerUserId FROM posts ORDER BY FavoriteCount DESC LIMIT 1;\t----- bird -----\tcodebase_community",
    "661": "SELECT Age FROM users ORDER BY Reputation DESC LIMIT 1;\t----- bird -----\tcodebase_community",
    "662": "SELECT COUNT(T1.PostId) FROM votes AS T1 INNER JOIN posts AS T2 ON T1.PostId = T2.Id WHERE YEAR(T2.CreaionDate) = 2011 AND T1.BountyAmount = 50;\t----- bird -----\tcodebase_community",
    "663": "SELECT Id FROM users ORDER BY Age ASC LIMIT 1;\t----- bird -----\tcodebase_community",
    "664": "SELECT sum(Score) FROM posts WHERE CreaionDate LIKE '2010-07-19%';\t----- bird -----\tcodebase_community",
    "665": "SELECT DIVIDE(COUNT(Id) WHERE YEAR(CreationDate) = 2010 AND PostId IN (SELECT Id FROM posts WHERE AnswerCount <= 2), 12) FROM postLinks;\t----- bird -----\tcodebase_community",
    "666": "SELECT PostId FROM votes WHERE UserId = 1465 AND PostId IN (SELECT Id FROM posts) ORDER BY PostId DESC LIMIT 1;\t----- bird -----\tcodebase_community",
    "667": "SELECT T1.Title FROM posts AS T1 INNER JOIN postLinks AS T2 ON T1.Id = T2.PostId ORDER BY T2.CreationDate ASC LIMIT 1;\t----- bird -----\tcodebase_community",
    "668": "SELECT u.DisplayName FROM users AS u JOIN badges AS b ON u.Id = b.UserId GROUP BY u.Id ORDER BY COUNT(b.Name) DESC LIMIT 1;\t----- bird -----\tcodebase_community",
    "669": "SELECT MIN(CreationDate) FROM votes WHERE UserId IN (SELECT Id FROM users WHERE DisplayName = 'chl');\t----- bird -----\tcodebase_community",
    "670": "SELECT T1.CreaionDate FROM posts AS T1 JOIN users AS T2 ON T1.OwnerUserId = T2.Id WHERE T2.Age = (SELECT MIN(Age) FROM users);\t----- bird -----\tcodebase_community",
    "671": "SELECT UserDisplayName FROM badges WHERE Name = 'Autobiographer' ORDER BY Date ASC LIMIT 1;\t----- bird -----\tcodebase_community",
    "672": "SELECT COUNT(DISTINCT u.Id) FROM users u JOIN posts p ON u.Id = p.OwnerUserId WHERE u.Location = 'United Kingdom' AND p.FavoriteCount >= 4;\t----- bird -----\tcodebase_community",
    "673": "SELECT AVG(PostId) FROM votes WHERE UserId IN (SELECT Id FROM users ORDER BY Age DESC LIMIT 1);\t----- bird -----\tcodebase_community",
    "674": "SELECT DisplayName FROM users ORDER BY Reputation DESC LIMIT 1;\t----- bird -----\tcodebase_community",
    "675": "SELECT count(Id) FROM users WHERE Reputation > 2000 AND Views > 1000;\t----- bird -----\tcodebase_community",
    "676": "SELECT DisplayName FROM users WHERE Age BETWEEN 19 AND 65;\t----- bird -----\tcodebase_community",
    "677": "SELECT COUNT(p.Id) FROM posts p JOIN users u ON p.OwnerUserId = u.Id WHERE u.DisplayName = 'Jay Stevens' AND YEAR(p.CreaionDate) = 2010;\t----- bird -----\tcodebase_community",
    "678": "SELECT P.Id, P.Title FROM posts AS P JOIN users AS U ON P.OwnerUserId = U.Id WHERE U.DisplayName = 'Harvey Motulsky' ORDER BY P.ViewCount DESC LIMIT 1;\t----- bird -----\tcodebase_community",
    "679": "SELECT Id, Title FROM posts ORDER BY Score DESC LIMIT 1;\t----- bird -----\tcodebase_community",
    "680": "SELECT AVG(p.Score) FROM posts p WHERE p.OwnerDisplayName = 'Stephen Turner';\t----- bird -----\tcodebase_community",
    "681": "SELECT DISTINCT OwnerDisplayName FROM posts WHERE YEAR(CreationDate) = 2011 AND ViewCount > 20000;\t----- bird -----\tcodebase_community",
    "682": "SELECT posts.Id, posts.OwnerDisplayName FROM posts WHERE strftime('%Y', posts.CreationDate) = '2010' ORDER BY posts.FavoriteCount DESC LIMIT 1;\t----- bird -----\tcodebase_community",
    "683": "SELECT CAST(SUM(CASE WHEN strftime('%Y', p.CreaionDate) = '2011' AND p.OwnerUserId IN (SELECT Id FROM users WHERE strftime('%Y', CreationDate) = '2011' AND Reputation > 1000) THEN 1 ELSE 0 END) AS REAL) / COUNT(p.Id) * 100 FROM posts AS p;\t----- bird -----\tcodebase_community",
    "684": "SELECT DIVIDE(COUNT(CASE WHEN Age BETWEEN 13 AND 18 THEN Id END), COUNT(Id)) AS percentage FROM users;\t----- bird -----\tcodebase_community",
    "685": "SELECT p.ViewCount, p.LastEditorDisplayName FROM posts AS p WHERE p.Body = 'Computer Game Datasets';\t----- bird -----\tcodebase_community",
    "686": "SELECT COUNT(*) FROM posts WHERE ViewCount > (SELECT AVG(ViewCount) FROM posts);\t----- bird -----\tcodebase_community",
    "687": "SELECT COUNT(*) FROM comments WHERE PostId = (SELECT Id FROM posts ORDER BY Score DESC LIMIT 1);\t----- bird -----\tcodebase_community",
    "688": "SELECT COUNT(*) FROM posts WHERE ViewCount > 35000 AND CommentCount = 0;\t----- bird -----\tcodebase_community",
    "689": "SELECT T1.DisplayName, T1.Location FROM users AS T1 JOIN posts AS T2 ON T1.Id = T2.LastEditorUserId WHERE T2.Id = 183 ORDER BY T2.LastEditDate DESC LIMIT 1;\t----- bird -----\tcodebase_community",
    "690": "SELECT b.Name FROM badges AS b JOIN users AS u ON b.UserId = u.Id WHERE u.DisplayName = 'Emmett' ORDER BY b.Date DESC LIMIT 1;\t----- bird -----\tcodebase_community",
    "691": "SELECT count(Id) FROM users WHERE Age BETWEEN 19 AND 65 AND UpVotes > 5000;\t----- bird -----\tcodebase_community",
    "692": "SELECT SUBTRACT(T1.Date FROM T1.CreationDate) FROM users AS T1 WHERE T1.DisplayName = 'Zolomon' LIMIT 1;\t----- bird -----\tcodebase_community",
    "693": "SELECT COUNT(p.Id) AS PostCount, COUNT(c.Id) AS CommentCount FROM posts AS p JOIN users AS u ON p.OwnerUserId = u.Id JOIN comments AS c ON p.Id = c.PostId WHERE u.Id = (SELECT Id FROM users ORDER BY CreationDate DESC LIMIT 1);\t----- bird -----\tcodebase_community",
    "694": "SELECT c.Text, c.UserDisplayName FROM comments AS c JOIN posts AS p ON c.PostId = p.Id WHERE p.Title = 'Analysing wind data with R' ORDER BY c.CreationDate DESC LIMIT 10;\t----- bird -----\tcodebase_community",
    "695": "SELECT count(DISTINCT UserId) FROM badges WHERE Name = 'Citizen Patrol';\t----- bird -----\tcodebase_community",
    "696": "SELECT COUNT(p.Id) FROM posts p JOIN tags t ON p.Tags LIKE '%' || t.TagName || '%' WHERE t.TagName = 'careers';\t----- bird -----\tcodebase_community",
    "697": "SELECT u.Reputation, u.Views FROM users AS u WHERE u.DisplayName = 'Jarrod Dixon';\t----- bird -----\tcodebase_community",
    "698": "SELECT COUNT(c.Id) + COUNT(p.Id) FROM comments c JOIN posts p ON c.PostId = p.Id WHERE p.Title = 'Clustering 1D data';\t----- bird -----\tcodebase_community",
    "699": "SELECT CreationDate FROM users WHERE DisplayName = 'IrishStat';\t----- bird -----\tcodebase_community",
    "700": "SELECT count(PostId) FROM votes WHERE BountyAmount >= 30;\t----- bird -----\tcodebase_community",
    "701": "SELECT CAST(SUM(CASE WHEN P.Score > 50 THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(P.Id) AS Percentage FROM posts AS P JOIN users AS U ON P.OwnerUserId = U.Id WHERE U.Id = (SELECT Id FROM users ORDER BY Reputation DESC LIMIT 1);\t----- bird -----\tcodebase_community",
    "702": "SELECT count(*) FROM posts WHERE Score < 20;\t----- bird -----\tcodebase_community",
    "703": "SELECT COUNT(*) FROM tags WHERE Id < 15 AND Count <= 20;\t----- bird -----\tcodebase_community",
    "704": "SELECT ExcerptPostId, WikiPostId FROM tags WHERE TagName = 'sample';\t----- bird -----\tcodebase_community",
    "705": "SELECT u.Reputation, u.UpVotes FROM users u JOIN comments c ON u.Id = c.UserId WHERE c.Text = 'fine, you win :)';\t----- bird -----\tcodebase_community",
    "706": "SELECT T1.Text FROM postHistory AS T1 INNER JOIN posts AS T2 ON T1.PostId = T2.Id WHERE T2.Title LIKE '%linear regression%' AND T1.PostHistoryTypeId = 1;\t----- bird -----\tcodebase_community",
    "707": "SELECT T1.Text FROM comments AS T1 INNER JOIN posts AS T2 ON T1.PostId = T2.Id WHERE T2.ViewCount BETWEEN 100 AND 150 ORDER BY T1.Score DESC LIMIT 1;\t----- bird -----\tcodebase_community",
    "708": "SELECT u.CreationDate, u.Age FROM users u JOIN comments c ON u.Id = c.UserId WHERE c.Text LIKE '%http://%';\t----- bird -----\tcodebase_community",
    "709": "SELECT COUNT(DISTINCT T1.PostId) FROM comments AS T1 INNER JOIN posts AS T2 ON T1.PostId = T2.Id WHERE T1.Score = 0 AND T2.ViewCount < 5;\t----- bird -----\tcodebase_community",
    "710": "SELECT COUNT(c.Id) FROM comments AS c JOIN posts AS p ON c.PostId = p.Id WHERE p.CommentCount = 1 AND c.Score = 0;\t----- bird -----\tcodebase_community",
    "711": "SELECT COUNT(DISTINCT T1.UserId) FROM comments AS T1 INNER JOIN users AS T2 ON T1.UserId = T2.Id WHERE T1.Score = 0 AND T2.Age = 40;\t----- bird -----\tcodebase_community",
    "712": "SELECT p.Id, c.Text FROM posts AS p JOIN comments AS c ON p.Id = c.PostId WHERE p.Title = 'Group differences on a five point Likert item';\t----- bird -----\tcodebase_community",
    "713": "SELECT U.UpVotes FROM users AS U JOIN comments AS C ON U.Id = C.UserId WHERE C.Text = \"R is also lazy evaluated.\";\t----- bird -----\tcodebase_community",
    "714": "SELECT * FROM comments WHERE UserDisplayName = 'Harvey Motulsky';\t----- bird -----\tcodebase_community",
    "715": "SELECT DISTINCT UserDisplayName FROM comments WHERE Score BETWEEN 1 AND 5 AND UserId IN (SELECT Id FROM users WHERE DownVotes = 0);\t----- bird -----\tcodebase_community",
    "716": "SELECT CAST(SUM(CASE WHEN u.UpVotes = 0 THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(DISTINCT c.UserId) FROM comments c JOIN users u ON c.UserId = u.Id WHERE c.Score BETWEEN 5 AND 10;\t----- bird -----\tcodebase_community",
    "717": "SELECT T2.power_name FROM superhero AS T1 INNER JOIN hero_power AS T3 ON T1.id = T3.hero_id INNER JOIN superpower AS T2 ON T3.power_id = T2.id WHERE T1.superhero_name = '3-D Man';\t----- bird -----\tsuperhero",
    "718": "SELECT COUNT(hero_id) FROM hero_power WHERE power_id IN (SELECT id FROM superpower WHERE power_name = 'Super Strength');\t----- bird -----\tsuperhero",
    "719": "SELECT COUNT(DISTINCT h.id) FROM superhero AS h JOIN hero_power AS hp ON h.id = hp.hero_id JOIN superpower AS p ON hp.power_id = p.id WHERE p.power_name = 'Super Strength' AND h.height_cm > 200;\t----- bird -----\tsuperhero",
    "720": "SELECT T1.full_name FROM superhero AS T1 JOIN hero_power AS T2 ON T1.id = T2.hero_id GROUP BY T1.id HAVING COUNT(T2.power_id) > 15;\t----- bird -----\tsuperhero",
    "721": "SELECT COUNT(*) FROM superhero WHERE eye_colour_id IN (SELECT id FROM colour WHERE colour = 'Blue');\t----- bird -----\tsuperhero",
    "722": "SELECT T1.colour FROM colour AS T1 JOIN superhero AS T2 ON T1.id = T2.skin_colour_id WHERE T2.superhero_name = 'Apocalypse';\t----- bird -----\tsuperhero",
    "723": "SELECT COUNT(T1.hero_id) FROM hero_power AS T1 INNER JOIN superhero AS T2 ON T1.hero_id = T2.id INNER JOIN colour AS T3 ON T2.eye_colour_id = T3.id WHERE T3.colour = 'Blue' AND T1.power_id = (SELECT id FROM superpower WHERE power_name = 'Agility');\t----- bird -----\tsuperhero",
    "724": "SELECT superhero.superhero_name FROM superhero JOIN colour ON superhero.eye_colour_id = colour.id WHERE colour.colour = 'Blue' JOIN colour ON superhero.hair_colour_id = colour.id WHERE colour.colour = 'Blond';\t----- bird -----\tsuperhero",
    "725": "SELECT COUNT(s.id) FROM superhero AS s JOIN publisher AS p ON s.publisher_id = p.id WHERE p.publisher_name = 'Marvel Comics';\t----- bird -----\tsuperhero",
    "726": "SELECT superhero_name FROM superhero WHERE publisher_id = (SELECT id FROM publisher WHERE publisher_name = 'Marvel Comics') ORDER BY height_cm DESC;\t----- bird -----\tsuperhero",
    "727": "SELECT T1.publisher_name FROM publisher AS T1 INNER JOIN superhero AS T2 ON T1.id = T2.publisher_id WHERE T2.superhero_name = 'Sauron';\t----- bird -----\tsuperhero",
    "728": "SELECT superhero.superhero_name FROM superhero JOIN colour ON superhero.eye_colour_id = colour.id GROUP BY colour.colour ORDER BY COUNT(superhero.id) DESC LIMIT 10;\t----- bird -----\tsuperhero",
    "729": "SELECT AVG(height_cm) FROM superhero WHERE publisher_id IN (SELECT id FROM publisher WHERE publisher_name = 'Marvel Comics');\t----- bird -----\tsuperhero",
    "730": "SELECT s.superhero_name FROM superhero s JOIN hero_power hp ON s.id = hp.hero_id JOIN superpower p ON hp.power_id = p.id JOIN publisher pub ON s.publisher_id = pub.id WHERE pub.publisher_name = 'Marvel Comics' AND p.power_name = 'Super Strength';\t----- bird -----\tsuperhero",
    "731": "SELECT count(*) FROM superhero WHERE publisher_id = (SELECT id FROM publisher WHERE publisher_name = 'DC Comics');\t----- bird -----\tsuperhero",
    "732": "SELECT T1.publisher_name FROM publisher AS T1 INNER JOIN superhero AS T2 ON T1.id = T2.publisher_id INNER JOIN hero_attribute AS T3 ON T2.id = T3.hero_id WHERE T3.attribute_name = 'Speed' ORDER BY T3.attribute_value ASC LIMIT 1;\t----- bird -----\tsuperhero",
    "733": "SELECT COUNT(s.id) FROM superhero AS s JOIN colour AS c ON s.eye_colour_id = c.id JOIN publisher AS p ON s.publisher_id = p.id WHERE c.colour = 'Gold' AND p.publisher_name = 'Marvel Comics';\t----- bird -----\tsuperhero",
    "734": "SELECT T1.publisher_name FROM publisher AS T1 INNER JOIN superhero AS T2 ON T1.id = T2.publisher_id WHERE T2.superhero_name = 'Blue Beetle II';\t----- bird -----\tsuperhero",
    "735": "SELECT COUNT(s.id) FROM superhero AS s JOIN colour AS c ON s.hair_colour_id = c.id WHERE c.colour = 'Blond';\t----- bird -----\tsuperhero",
    "736": "SELECT T1.superhero_name FROM superhero AS T1 JOIN hero_attribute AS T2 ON T1.id = T2.hero_id JOIN attribute AS T3 ON T2.attribute_id = T3.id WHERE T3.attribute_name = 'Intelligence' ORDER BY T2.attribute_value ASC LIMIT 1;\t----- bird -----\tsuperhero",
    "737": "SELECT T1.race FROM race AS T1 INNER JOIN superhero AS T2 ON T1.id = T2.race_id WHERE T2.superhero_name = 'Copycat';\t----- bird -----\tsuperhero",
    "738": "SELECT DISTINCT superhero.superhero_name FROM superhero INNER JOIN hero_attribute ON superhero.id = hero_attribute.hero_id WHERE hero_attribute.attribute_id = (SELECT id FROM attribute WHERE attribute_name = 'Durability') AND hero_attribute.attribute_value < 50;\t----- bird -----\tsuperhero",
    "739": "SELECT T1.superhero_name FROM superhero AS T1 INNER JOIN hero_power AS T2 ON T1.id = T2.hero_id INNER JOIN superpower AS T3 ON T2.power_id = T3.id WHERE T3.power_name = 'Death Touch';\t----- bird -----\tsuperhero",
    "740": "SELECT COUNT(s.id) FROM superhero AS s JOIN hero_attribute AS ha ON s.id = ha.hero_id JOIN attribute AS a ON ha.attribute_id = a.id JOIN gender AS g ON s.gender_id = g.id WHERE g.gender = 'Female' AND a.attribute_name = 'Strength' AND ha.attribute_value = 100;\t----- bird -----\tsuperhero",
    "741": "SELECT T1.superhero_name FROM superhero AS T1 INNER JOIN hero_power AS T2 ON T1.id = T2.hero_id GROUP BY T1.id ORDER BY COUNT(T2.power_id) DESC LIMIT 1;\t----- bird -----\tsuperhero",
    "742": "SELECT count(*) FROM superhero WHERE race_id IN (SELECT id FROM race WHERE race = 'Vampire');\t----- bird -----\tsuperhero",
    "743": "SELECT (SUM(CASE WHEN T1.alignment_id IN (SELECT id FROM alignment WHERE alignment = 'Bad') THEN 1 ELSE 0 END) * 100.0) / COUNT(T1.id), SUM(CASE WHEN T2.publisher_name = 'Marvel Comics' THEN 1 ELSE 0 END) FROM superhero AS T1 LEFT JOIN publisher AS T2 ON T1.publisher_id = T2.id;\t----- bird -----\tsuperhero",
    "744": "SELECT calculation FROM publisher WHERE publisher_name IN ('DC Comics', 'Marvel Comics') LIMIT 1;\t----- bird -----\tsuperhero",
    "745": "SELECT id FROM publisher WHERE publisher_name = 'Star Trek';\t----- bird -----\tsuperhero",
    "746": "SELECT AVG(attribute_value) FROM hero_attribute;\t----- bird -----\tsuperhero",
    "747": "SELECT COUNT(*) FROM superhero WHERE full_name IS NULL;\t----- bird -----\tsuperhero",
    "748": "SELECT T1.colour FROM colour AS T1 JOIN superhero AS T2 ON T1.id = T2.eye_colour_id WHERE T2.id = 75;\t----- bird -----\tsuperhero",
    "749": "SELECT T2.power_name FROM superhero AS T1 INNER JOIN hero_power AS T3 ON T1.id = T3.hero_id INNER JOIN superpower AS T2 ON T3.power_id = T2.id WHERE T1.superhero_name = 'Deathlok';\t----- bird -----\tsuperhero",
    "750": "SELECT AVG(weight_kg) FROM superhero WHERE gender_id IN (SELECT id FROM gender WHERE gender = 'Female');\t----- bird -----\tsuperhero",
    "751": "SELECT T1.power_name FROM superpower AS T1 INNER JOIN hero_power AS T2 ON T1.id = T2.power_id INNER JOIN superhero AS T3 ON T2.hero_id = T3.id WHERE T3.gender_id = (SELECT id FROM gender WHERE gender = 'Male') LIMIT 5;\t----- bird -----\tsuperhero",
    "752": "SELECT superhero_name FROM superhero WHERE race_id IN (SELECT id FROM race WHERE race = 'Alien');\t----- bird -----\tsuperhero",
    "753": "SELECT superhero_name FROM superhero WHERE height_cm BETWEEN 170 AND 190 AND eye_colour_id IN (SELECT id FROM colour WHERE colour = 'No Colour');\t----- bird -----\tsuperhero",
    "754": "SELECT T1.power_name FROM superpower AS T1 INNER JOIN hero_power AS T2 ON T1.id = T2.power_id WHERE T2.hero_id = 56;\t----- bird -----\tsuperhero",
    "755": "SELECT full_name FROM superhero WHERE race_id = (SELECT id FROM race WHERE race = 'Demi-God') LIMIT 5;\t----- bird -----\tsuperhero",
    "756": "SELECT COUNT(*) FROM superhero WHERE alignment_id = (SELECT id FROM alignment WHERE alignment = 'Bad');\t----- bird -----\tsuperhero",
    "757": "SELECT T1.race FROM race AS T1 INNER JOIN superhero AS T2 ON T1.id = T2.race_id WHERE T2.weight_kg = 169;\t----- bird -----\tsuperhero",
    "758": "SELECT T1.colour FROM colour AS T1 JOIN superhero AS T2 ON T1.id = T2.hair_colour_id WHERE T2.race_id = (SELECT id FROM race WHERE race = 'human') AND T2.height_cm = 185;\t----- bird -----\tsuperhero",
    "759": "SELECT T1.colour FROM colour AS T1 JOIN superhero AS T2 ON T1.id = T2.eye_colour_id ORDER BY T2.weight_kg DESC LIMIT 1;\t----- bird -----\tsuperhero",
    "760": "SELECT MULTIPLY(DIVIDE(SUM(CASE WHEN superhero.publisher_id = (SELECT id FROM publisher WHERE publisher_name = 'Marvel Comics') THEN 1 ELSE 0 END), COUNT(superhero.id)), 100) FROM superhero WHERE superhero.height_cm BETWEEN 150 AND 180;\t----- bird -----\tsuperhero",
    "761": "SELECT superhero_name FROM superhero WHERE gender_id = (SELECT id FROM gender WHERE gender = 'Male') AND weight_kg > (SELECT AVG(weight_kg) * 0.79 FROM superhero);\t----- bird -----\tsuperhero",
    "762": "SELECT power_name FROM superpower GROUP BY power_name ORDER BY COUNT(*) DESC LIMIT 1;\t----- bird -----\tsuperhero",
    "763": "SELECT T2.attribute_value FROM superhero AS T1 INNER JOIN hero_attribute AS T2 ON T1.id = T2.hero_id WHERE T1.superhero_name = 'Abomination';\t----- bird -----\tsuperhero",
    "764": "SELECT T1.power_name FROM superpower AS T1 INNER JOIN hero_power AS T2 ON T1.id = T2.power_id WHERE T2.hero_id = 1;\t----- bird -----\tsuperhero",
    "765": "SELECT COUNT(hero_id) FROM hero_power WHERE power_id IN (SELECT id FROM superpower WHERE power_name = 'stealth');\t----- bird -----\tsuperhero",
    "766": "SELECT T1.full_name FROM superhero AS T1 JOIN hero_attribute AS T2 ON T1.id = T2.hero_id WHERE T2.attribute_name = 'strength' AND T2.attribute_value = (SELECT MAX(attribute_value) FROM hero_attribute WHERE attribute_name = 'strength');\t----- bird -----\tsuperhero",
    "767": "SELECT AVG(superhero.id) FROM superhero WHERE superhero.skin_colour_id IS NULL;\t----- bird -----\tsuperhero",
    "768": "SELECT COUNT(s.id) FROM superhero AS s JOIN publisher AS p ON s.publisher_id = p.id WHERE p.publisher_name = 'Dark Horse Comics';\t----- bird -----\tsuperhero",
    "769": "SELECT sh.superhero_name FROM superhero sh JOIN publisher p ON sh.publisher_id = p.id WHERE p.publisher_name = 'Dark Horse Comics' ORDER BY (SELECT MAX(attribute_value) FROM hero_attribute ha JOIN attribute a ON ha.attribute_id = a.id WHERE a.attribute_name = 'durability' AND ha.hero_id = sh.id) DESC LIMIT 1;\t----- bird -----\tsuperhero",
    "770": "SELECT T1.colour FROM colour AS T1 INNER JOIN superhero AS T2 ON T1.id = T2.eye_colour_id WHERE T2.full_name = 'Abraham Sapien';\t----- bird -----\tsuperhero",
    "771": "SELECT T1.superhero_name FROM superhero AS T1 INNER JOIN hero_power AS T2 ON T1.id = T2.hero_id INNER JOIN superpower AS T3 ON T2.power_id = T3.id WHERE T3.power_name = 'Flight';\t----- bird -----\tsuperhero",
    "772": "SELECT c1.colour AS eyes, c2.colour AS hair, c3.colour AS skin_colour FROM superhero AS s JOIN colour AS c1 ON s.eye_colour_id = c1.id JOIN colour AS c2 ON s.hair_colour_id = c2.id JOIN colour AS c3 ON s.skin_colour_id = c3.id JOIN publisher AS p ON s.publisher_id = p.id WHERE s.gender_id = (SELECT id FROM gender WHERE gender = 'Female') AND p.publisher_name = 'Dark Horse Comics';\t----- bird -----\tsuperhero",
    "773": "SELECT DISTINCT T1.superhero_name, T2.publisher_name FROM superhero AS T1 JOIN publisher AS T2 ON T1.publisher_id = T2.id WHERE T1.eye_colour_id = T1.hair_colour_id AND T1.hair_colour_id = T1.skin_colour_id;\t----- bird -----\tsuperhero",
    "774": "SELECT T1.race FROM race AS T1 INNER JOIN superhero AS T2 ON T1.id = T2.race_id WHERE T2.superhero_name = 'A-Bomb';\t----- bird -----\tsuperhero",
    "775": "SELECT CAST(SUM(CASE WHEN T1.colour = 'Blue' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(T1.colour) FROM colour AS T1 INNER JOIN superhero AS T2 ON T1.id = T2.skin_colour_id INNER JOIN gender AS T3 ON T2.gender_id = T3.id WHERE T3.gender = 'Female';\t----- bird -----\tsuperhero",
    "776": "SELECT s.superhero_name, r.race FROM superhero s JOIN race r ON s.race_id = r.id WHERE s.full_name = 'Charles Chandler';\t----- bird -----\tsuperhero",
    "777": "SELECT T1.gender FROM gender AS T1 INNER JOIN superhero AS T2 ON T1.id = T2.gender_id WHERE T2.superhero_name = 'Agent 13';\t----- bird -----\tsuperhero",
    "778": "SELECT T1.superhero_name FROM superhero AS T1 INNER JOIN hero_power AS T2 ON T1.id = T2.hero_id INNER JOIN superpower AS T3 ON T2.power_id = T3.id WHERE T3.power_name = 'Adaptation';\t----- bird -----\tsuperhero",
    "779": "SELECT COUNT(hp.power_id) FROM hero_power AS hp JOIN superhero AS sh ON hp.hero_id = sh.id WHERE sh.superhero_name = 'Amazo';\t----- bird -----\tsuperhero",
    "780": "SELECT T2.power_name FROM superhero AS T1 INNER JOIN hero_power AS T3 ON T1.id = T3.hero_id INNER JOIN superpower AS T2 ON T3.power_id = T2.id WHERE T1.full_name = 'Hunter Zolomon';\t----- bird -----\tsuperhero",
    "781": "SELECT height_cm FROM superhero WHERE eye_colour_id IN (SELECT id FROM colour WHERE colour = 'Amber');\t----- bird -----\tsuperhero",
    "782": "SELECT superhero_name FROM superhero WHERE eye_colour_id = (SELECT id FROM colour WHERE colour = 'Black') AND hair_colour_id = (SELECT id FROM colour WHERE colour = 'Black');\t----- bird -----\tsuperhero",
    "783": "SELECT T1.colour FROM colour AS T1 JOIN superhero AS T2 ON T1.id = T2.eye_colour_id WHERE T2.skin_colour_id = (SELECT id FROM colour WHERE colour = 'Gold');\t----- bird -----\tsuperhero",
    "784": "SELECT full_name FROM superhero WHERE race_id IN (SELECT id FROM race WHERE race = 'Vampire');\t----- bird -----\tsuperhero",
    "785": "SELECT superhero_name FROM superhero WHERE alignment_id IN (SELECT id FROM alignment WHERE alignment = 'Neutral');\t----- bird -----\tsuperhero",
    "786": "SELECT COUNT(hero_id) FROM hero_attribute WHERE attribute_value = (SELECT MAX(attribute_value) FROM hero_attribute WHERE attribute_id = (SELECT id FROM attribute WHERE attribute_name = 'Strength'));\t----- bird -----\tsuperhero",
    "787": "SELECT T1.race, T2.alignment FROM race AS T1 INNER JOIN superhero AS S ON T1.id = S.race_id INNER JOIN alignment AS T2 ON S.alignment_id = T2.id WHERE S.superhero_name = 'Cameron Hicks';\t----- bird -----\tsuperhero",
    "788": "SELECT CAST(SUM(CASE WHEN T1.gender_id IN (SELECT id FROM gender WHERE gender = 'Female') THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(T1.id) FROM superhero AS T1 JOIN publisher AS T2 ON T1.publisher_id = T2.id WHERE T2.publisher_name = 'Marvel Comics';\t----- bird -----\tsuperhero",
    "789": "SELECT AVG(weight_kg) FROM superhero WHERE race_id IN (SELECT id FROM race WHERE race = 'Alien');\t----- bird -----\tsuperhero",
    "790": "SELECT SUBTRACT(SUM(weight_kg) FROM SUM(weight_kg)) FROM superhero WHERE full_name = 'Emil Blonsky' EXCEPT SELECT SUM(weight_kg) FROM superhero WHERE full_name = 'Charles Chandler';\t----- bird -----\tsuperhero",
    "791": "SELECT superhero_name, AVG(height_cm) AS average_height FROM superhero GROUP BY superhero_name;\t----- bird -----\tsuperhero",
    "792": "SELECT T2.power_name FROM superhero AS T1 INNER JOIN hero_power AS T3 ON T1.id = T3.hero_id INNER JOIN superpower AS T2 ON T3.power_id = T2.id WHERE T1.superhero_name = 'Abomination';\t----- bird -----\tsuperhero",
    "793": "SELECT COUNT(DISTINCT superhero.id) FROM superhero WHERE race_id = 21 AND gender_id = 1;\t----- bird -----\tsuperhero",
    "794": "SELECT T1.superhero_name FROM superhero AS T1 JOIN hero_attribute AS T2 ON T1.id = T2.hero_id JOIN attribute AS T3 ON T2.attribute_id = T3.id WHERE T3.attribute_name = 'Speed' ORDER BY T2.attribute_value DESC LIMIT 1;\t----- bird -----\tsuperhero",
    "795": "SELECT COUNT(*) FROM superhero WHERE alignment_id = 3;\t----- bird -----\tsuperhero",
    "796": "SELECT T1.attribute_name, T2.attribute_value FROM attribute AS T1 JOIN hero_attribute AS T2 ON T1.id = T2.attribute_id WHERE T2.hero_id IN (SELECT id FROM superhero WHERE superhero_name = '3-D Man');\t----- bird -----\tsuperhero",
    "797": "SELECT T1.superhero_name FROM superhero AS T1 JOIN colour AS T2 ON T1.eye_colour_id = T2.id WHERE T2.colour = 'Blue' JOIN colour AS T3 ON T1.hair_colour_id = T3.id WHERE T3.colour = 'Brown';\t----- bird -----\tsuperhero",
    "798": "SELECT DISTINCT T1.publisher_name FROM publisher AS T1 INNER JOIN superhero AS T2 ON T1.id = T2.publisher_id WHERE T2.superhero_name IN ('Hawkman', 'Karate Kid', 'Speedy');\t----- bird -----\tsuperhero",
    "799": "SELECT count(*) FROM superhero WHERE publisher_id IS NULL;\t----- bird -----\tsuperhero",
    "800": "SELECT CAST(SUM(CASE WHEN eye_colour_id = 7 THEN 1 ELSE 0 END) AS REAL) * 100.0 / COUNT(id) FROM superhero;\t----- bird -----\tsuperhero",
    "801": "SELECT CAST(SUM(CASE WHEN gender_id = 1 THEN 1 ELSE 0 END) AS REAL) / SUM(CASE WHEN gender_id = 2 THEN 1 ELSE 0 END) FROM superhero;\t----- bird -----\tsuperhero",
    "802": "SELECT superhero_name FROM superhero ORDER BY height_cm DESC LIMIT 1;\t----- bird -----\tsuperhero",
    "803": "SELECT id FROM superpower WHERE power_name = 'cryokinesis';\t----- bird -----\tsuperhero",
    "804": "SELECT superhero_name FROM superhero WHERE id = 294;\t----- bird -----\tsuperhero",
    "805": "SELECT full_name FROM superhero WHERE weight_kg = 0 OR weight_kg IS NULL;\t----- bird -----\tsuperhero",
    "806": "SELECT T1.colour FROM colour AS T1 INNER JOIN superhero AS T2 ON T1.id = T2.eye_colour_id WHERE T2.full_name = 'Karen Beecher-Duncan';\t----- bird -----\tsuperhero",
    "807": "SELECT T1.power_name FROM superpower INNER JOIN hero_power ON superpower.id = hero_power.power_id INNER JOIN superhero ON hero_power.hero_id = superhero.id WHERE superhero.full_name = 'Helen Parr';\t----- bird -----\tsuperhero",
    "808": "SELECT T1.race FROM race AS T1 JOIN superhero AS T2 ON T1.id = T2.race_id WHERE T2.weight_kg = 108 AND T2.height_cm = 188;\t----- bird -----\tsuperhero",
    "809": "SELECT T1.publisher_name FROM publisher AS T1 INNER JOIN superhero AS T2 ON T1.id = T2.publisher_id WHERE T2.id = 38;\t----- bird -----\tsuperhero",
    "810": "SELECT T1.race FROM race AS T1 JOIN superhero AS T2 ON T1.id = T2.race_id JOIN hero_attribute AS T3 ON T2.id = T3.hero_id WHERE T3.attribute_value = (SELECT MAX(attribute_value) FROM hero_attribute);\t----- bird -----\tsuperhero",
    "811": "SELECT A.alignment, GROUP_CONCAT(SP.power_name) FROM superhero AS SH JOIN alignment AS A ON SH.alignment_id = A.id JOIN hero_power AS HP ON SH.id = HP.hero_id JOIN superpower AS SP ON HP.power_id = SP.id WHERE SH.superhero_name = 'Atom IV';\t----- bird -----\tsuperhero",
    "812": "SELECT T1.full_name FROM superhero AS T1 JOIN colour AS T2 ON T1.eye_colour_id = T2.id WHERE T2.colour = 'Blue' LIMIT 5;\t----- bird -----\tsuperhero",
    "813": "SELECT AVG(attribute_value) FROM hero_attribute WHERE hero_id IN (SELECT id FROM superhero WHERE alignment_id = 3);\t----- bird -----\tsuperhero",
    "814": "SELECT T1.colour FROM colour AS T1 JOIN superhero AS T2 ON T1.id = T2.skin_colour_id JOIN hero_attribute AS T3 ON T2.id = T3.hero_id WHERE T3.attribute_value = 100;\t----- bird -----\tsuperhero",
    "815": "SELECT COUNT(s.id) FROM superhero AS s JOIN alignment AS a ON s.alignment_id = a.id JOIN gender AS g ON s.gender_id = g.id WHERE a.id = 1 AND g.id = 2;\t----- bird -----\tsuperhero",
    "816": "SELECT superhero.superhero_name FROM superhero JOIN hero_attribute ON superhero.id = hero_attribute.hero_id WHERE hero_attribute.attribute_value BETWEEN 75 AND 80;\t----- bird -----\tsuperhero",
    "817": "SELECT T1.race FROM race AS T1 INNER JOIN superhero AS T2 ON T1.id = T2.race_id INNER JOIN colour AS T3 ON T2.hair_colour_id = T3.id INNER JOIN gender AS T4 ON T2.gender_id = T4.id WHERE T3.colour = 'blue' AND T4.gender = 'male';\t----- bird -----\tsuperhero",
    "818": "SELECT CAST(SUM(CASE WHEN gender.id = 2 THEN 1 ELSE 0 END) AS REAL) * 100.0 / COUNT(alignment.id) FROM superhero JOIN gender ON superhero.gender_id = gender.id JOIN alignment ON superhero.alignment_id = alignment.id WHERE alignment.id = 2;\t----- bird -----\tsuperhero",
    "819": "SELECT SUBTRACT(SUM(CASE WHEN superhero.eye_colour_id = 7 THEN 1 ELSE 0 END), SUM(CASE WHEN superhero.eye_colour_id = 1 THEN 1 ELSE 0 END)) FROM superhero WHERE superhero.weight_kg = 0 OR superhero.weight_kg IS NULL;\t----- bird -----\tsuperhero",
    "820": "SELECT T1.attribute_value FROM hero_attribute AS T1 INNER JOIN superhero AS T2 ON T1.hero_id = T2.id WHERE T2.superhero_name = 'Hulk' AND T1.attribute_id IN (SELECT id FROM attribute WHERE attribute_name = 'Strength');\t----- bird -----\tsuperhero",
    "821": "SELECT p.power_name FROM superpower AS p JOIN hero_power AS hp ON p.id = hp.power_id JOIN superhero AS s ON hp.hero_id = s.id WHERE s.superhero_name = 'Ajax';\t----- bird -----\tsuperhero",
    "822": "SELECT COUNT(s.id) FROM superhero AS s JOIN alignment AS a ON s.alignment_id = a.id JOIN colour AS c ON s.skin_colour_id = c.id WHERE c.colour = 'Green' AND a.alignment = 'Bad';\t----- bird -----\tsuperhero",
    "823": "SELECT COUNT(s.id) FROM superhero AS s JOIN gender AS g ON s.gender_id = g.id JOIN publisher AS p ON s.publisher_id = p.id WHERE g.gender = 'Female' AND p.publisher_name = 'Marvel Comics';\t----- bird -----\tsuperhero",
    "824": "SELECT s.superhero_name FROM superhero s JOIN hero_power hp ON s.id = hp.hero_id JOIN superpower p ON hp.power_id = p.id WHERE p.power_name = 'Wind Control' ORDER BY s.superhero_name;\t----- bird -----\tsuperhero",
    "825": "SELECT T1.gender FROM gender AS T1 JOIN superhero AS T2 ON T1.id = T2.gender_id JOIN hero_power AS T3 ON T2.id = T3.hero_id JOIN superpower AS T4 ON T3.power_id = T4.id WHERE T4.power_name = 'Phoenix Force';\t----- bird -----\tsuperhero",
    "826": "SELECT superhero_name FROM superhero WHERE publisher_id = (SELECT id FROM publisher WHERE publisher_name = 'DC Comics') ORDER BY weight_kg DESC LIMIT 1;\t----- bird -----\tsuperhero",
    "827": "SELECT AVG(T1.height_cm) FROM superhero AS T1 JOIN publisher AS T2 ON T1.publisher_id = T2.id WHERE T2.publisher_name = 'Dark Horse Comics' AND T1.race_id <> (SELECT id FROM race WHERE race = 'Human');\t----- bird -----\tsuperhero",
    "828": "SELECT COUNT(hero_id) FROM hero_attribute WHERE attribute_id IN (SELECT id FROM attribute WHERE attribute_name = 'Speed') AND attribute_value = 100;\t----- bird -----\tsuperhero",
    "829": "SELECT SUM(CASE WHEN publisher_name = 'DC Comics' THEN 1 ELSE 0 END) - SUM(CASE WHEN publisher_name = 'Marvel Comics' THEN 1 ELSE 0 END) FROM superhero;\t----- bird -----\tsuperhero",
    "830": "SELECT T1.attribute_name FROM attribute AS T1 JOIN hero_attribute AS T2 ON T1.id = T2.attribute_id JOIN superhero AS T3 ON T2.hero_id = T3.id WHERE T3.superhero_name = 'Black Panther' AND T1.attribute_name = (SELECT attribute_name FROM attribute WHERE id IN (SELECT attribute_id FROM hero_attribute WHERE hero_id IN (SELECT id FROM superhero WHERE superhero_name = 'Black Panther') ORDER BY attribute_value LIMIT 1));\t----- bird -----\tsuperhero",
    "831": "SELECT T1.colour FROM colour AS T1 INNER JOIN superhero AS T2 ON T1.id = T2.eye_colour_id WHERE T2.superhero_name = 'Abomination';\t----- bird -----\tsuperhero",
    "832": "SELECT superhero_name FROM superhero ORDER BY height_cm DESC LIMIT 1;\t----- bird -----\tsuperhero",
    "833": "SELECT superhero_name FROM superhero WHERE full_name = 'Charles Chandler';\t----- bird -----\tsuperhero",
    "834": "SELECT CAST(SUM(CASE WHEN G.gender = 'Female' THEN 1 ELSE 0 END) AS REAL) * 100.0 / COUNT(G.gender) FROM superhero AS S JOIN gender AS G ON S.gender_id = G.id JOIN publisher AS P ON S.publisher_id = P.id WHERE P.publisher_name = 'George Lucas';\t----- bird -----\tsuperhero",
    "835": "SELECT CAST(SUM(CASE WHEN T1.alignment_id IN (SELECT id FROM alignment WHERE alignment = 'Good') THEN 1 ELSE 0 END) AS REAL) * 100.0 / COUNT(T1.id) FROM superhero AS T1 JOIN publisher AS T2 ON T1.publisher_id = T2.id WHERE T2.publisher_name = 'Marvel Comics';\t----- bird -----\tsuperhero",
    "836": "SELECT COUNT(*) FROM superhero WHERE full_name LIKE 'John%';\t----- bird -----\tsuperhero",
    "837": "SELECT hero_id FROM hero_attribute ORDER BY attribute_value ASC LIMIT 1;\t----- bird -----\tsuperhero",
    "838": "SELECT full_name FROM superhero WHERE superhero_name = 'Alien';\t----- bird -----\tsuperhero",
    "839": "SELECT full_name FROM superhero WHERE weight_kg < 100 AND eye_colour_id IN (SELECT id FROM colour WHERE colour = 'brown');\t----- bird -----\tsuperhero",
    "840": "SELECT T2.attribute_value FROM superhero AS T1 INNER JOIN hero_attribute AS T2 ON T1.id = T2.hero_id WHERE T1.superhero_name = 'Aquababy';\t----- bird -----\tsuperhero",
    "841": "SELECT weight_kg, race_id FROM superhero WHERE id = 40;\t----- bird -----\tsuperhero",
    "842": "SELECT AVG(height_cm) FROM superhero WHERE alignment_id = (SELECT id FROM alignment WHERE alignment = 'neutral');\t----- bird -----\tsuperhero",
    "843": "SELECT hero_id FROM hero_power WHERE power_id IN (SELECT id FROM superpower WHERE power_name = 'Intelligence');\t----- bird -----\tsuperhero",
    "844": "SELECT T1.colour FROM colour AS T1 INNER JOIN superhero AS T2 ON T1.id = T2.eye_colour_id WHERE T2.superhero_name = 'Blackwulf';\t----- bird -----\tsuperhero",
    "845": "SELECT T1.power_name FROM superpower AS T1 INNER JOIN hero_power AS T2 ON T1.id = T2.power_id INNER JOIN superhero AS T3 ON T2.hero_id = T3.id WHERE T3.height_cm > (SELECT AVG(height_cm) * 0.8 FROM superhero);\t----- bird -----\tsuperhero",
    "846": "SELECT T1.driverRef FROM qualifying AS T1 INNER JOIN races AS T2 ON T1.raceId = T2.raceId WHERE T2.raceId = 20 ORDER BY T1.q1 DESC LIMIT 5;\t----- bird -----\tformula_1",
    "847": "SELECT T1.surname FROM drivers AS T1 JOIN qualifying AS T2 ON T1.driverId = T2.driverId WHERE T2.raceId = 19 AND T2.q2 = (SELECT MIN(q2) FROM qualifying WHERE raceId = 19);\t----- bird -----\tformula_1",
    "848": "SELECT DISTINCT year FROM races WHERE circuitId IN (SELECT circuitId FROM circuits WHERE location = 'Shanghai');\t----- bird -----\tformula_1",
    "849": "SELECT url FROM races WHERE circuitId IN (SELECT circuitId FROM circuits WHERE name = 'Circuit de Barcelona-Catalunya');\t----- bird -----\tformula_1",
    "850": "SELECT name FROM races WHERE circuitId IN (SELECT circuitId FROM circuits WHERE country = 'Germany');\t----- bird -----\tformula_1",
    "851": "SELECT T1.position FROM results AS T1 JOIN constructors AS T2 ON T1.constructorId = T2.constructorId WHERE T2.name = 'Renault';\t----- bird -----\tformula_1",
    "852": "SELECT COUNT(raceId) FROM races WHERE year = 2010 AND circuitId IN (SELECT circuitId FROM circuits WHERE location NOT LIKE '%Asia%' AND location NOT LIKE '%Europe%');\t----- bird -----\tformula_1",
    "853": "SELECT name FROM races WHERE circuitId IN (SELECT circuitId FROM circuits WHERE country = 'Spain');\t----- bird -----\tformula_1",
    "854": "SELECT lat, lng FROM circuits WHERE circuitId IN (SELECT circuitId FROM races WHERE name = 'Australian Grand Prix');\t----- bird -----\tformula_1",
    "855": "SELECT * FROM races WHERE circuitId IN (SELECT circuitId FROM circuits WHERE name = 'Sepang International Circuit');\t----- bird -----\tformula_1",
    "856": "SELECT time FROM races WHERE circuitId IN (SELECT circuitId FROM circuits WHERE name = 'Sepang International Circuit');\t----- bird -----\tformula_1",
    "857": "SELECT lat, lng FROM circuits WHERE circuitId IN (SELECT circuitId FROM races WHERE name = 'Abu Dhabi Grand Prix');\t----- bird -----\tformula_1",
    "858": "SELECT T1.nationality FROM constructors AS T1 JOIN constructorResults AS T2 ON T1.constructorId = T2.constructorId WHERE T2.points = 1 AND T2.raceId = 24;\t----- bird -----\tformula_1",
    "859": "SELECT T1.q1 FROM qualifying AS T1 JOIN drivers AS T2 ON T1.driverId = T2.driverId WHERE T2.forename = 'Bruno' AND T2.surname = 'Senna' AND T1.raceId = 354;\t----- bird -----\tformula_1",
    "860": "SELECT T1.nationality FROM drivers AS T1 JOIN qualifying AS T2 ON T1.driverId = T2.driverId WHERE T2.raceId = 355 AND T2.q2 = '0:01:40';\t----- bird -----\tformula_1",
    "861": "SELECT T1.number FROM drivers AS T1 JOIN qualifying AS T2 ON T1.driverId = T2.driverId WHERE T2.raceId = 903 AND T2.q3 LIKE 'M:SS%' AND T2.q3 = '0:01:54';\t----- bird -----\tformula_1",
    "862": "SELECT COUNT(DISTINCT driverId) FROM results WHERE raceId IN (SELECT raceId FROM races WHERE name = 'Bahrain Grand Prix' AND year = 2007) AND statusId IN (SELECT statusId FROM status WHERE status NOT LIKE '%Finished%');\t----- bird -----\tformula_1",
    "863": "SELECT T1.year FROM seasons AS T1 JOIN races AS T2 ON T1.year = T2.year WHERE T2.raceId = 901;\t----- bird -----\tformula_1",
    "864": "SELECT count(DISTINCT driverId) FROM results WHERE raceId IN (SELECT raceId FROM races WHERE date = '2015-11-29') AND positionText != 'Withdrawn' AND positionText != 'Retired' AND positionText != 'Disqualified' AND positionText != 'Not Started';\t----- bird -----\tformula_1",
    "865": "SELECT forename, surname FROM drivers WHERE driverId IN (SELECT driverId FROM results WHERE raceId = 592 AND time IS NOT NULL) ORDER BY dob ASC LIMIT 1;\t----- bird -----\tformula_1",
    "866": "SELECT T1.url FROM drivers AS T1 JOIN lapTimes AS T2 ON T1.driverId = T2.driverId WHERE T2.raceId = 161 AND T2.time LIKE '0:01:27%';\t----- bird -----\tformula_1",
    "867": "SELECT T1.nationality FROM drivers AS T1 JOIN results AS T2 ON T1.driverId = T2.driverId WHERE T2.raceId = 933 ORDER BY T2.fastestLapSpeed DESC LIMIT 1;\t----- bird -----\tformula_1",
    "868": "SELECT lat, lng FROM races WHERE name = 'Malaysian Grand Prix';\t----- bird -----\tformula_1",
    "869": "SELECT T1.url FROM constructors AS T1 JOIN constructorResults AS T2 ON T1.constructorId = T2.constructorId WHERE T2.raceId = 9 ORDER BY T2.points DESC LIMIT 1;\t----- bird -----\tformula_1",
    "870": "SELECT q1 FROM qualifying WHERE raceId = 345 AND driverId = (SELECT driverId FROM drivers WHERE forename = 'Lucas' AND surname = 'di Grassi');\t----- bird -----\tformula_1",
    "871": "SELECT T1.nationality FROM drivers AS T1 JOIN qualifying AS T2 ON T1.driverId = T2.driverId WHERE T2.raceId = 347 AND T2.q2 = '0:01:15';\t----- bird -----\tformula_1",
    "872": "SELECT T1.code FROM drivers AS T1 JOIN qualifying AS T2 ON T1.driverId = T2.driverId WHERE T2.raceId = 45 AND T2.q3 LIKE '0:01:33';\t----- bird -----\tformula_1",
    "873": "SELECT T1.time FROM races AS T1 INNER JOIN results AS T2 ON T1.raceId = T2.raceId WHERE T2.driverId = (SELECT driverId FROM drivers WHERE forename = 'Bruce' AND surname = 'McLaren') AND T1.raceId = 743;\t----- bird -----\tformula_1",
    "874": "SELECT T1.forename, T1.surname FROM drivers AS T1 JOIN results AS T2 ON T1.driverId = T2.driverId JOIN races AS T3 ON T2.raceId = T3.raceId WHERE T3.name = 'San Marino Grand Prix' AND T3.year = 2006 AND T2.position = 2;\t----- bird -----\tformula_1",
    "875": "SELECT T1.url FROM seasons AS T1 JOIN races AS T2 ON T1.year = T2.year WHERE T2.raceId = 901;\t----- bird -----\tformula_1",
    "876": "SELECT count(DISTINCT driverId) FROM results WHERE raceId = (SELECT raceId FROM races WHERE date = '2015-11-29') AND statusId = (SELECT statusId FROM status WHERE status = 'Finished');\t----- bird -----\tformula_1",
    "877": "SELECT T1.forename, T1.surname FROM drivers AS T1 JOIN results AS T2 ON T1.driverId = T2.driverId WHERE T2.raceId = 872 AND T2.time IS NOT NULL ORDER BY T1.dob ASC LIMIT 1;\t----- bird -----\tformula_1",
    "878": "SELECT forename, surname FROM drivers WHERE driverId IN (SELECT driverId FROM lapTimes WHERE raceId = 348 ORDER BY time ASC LIMIT 1);\t----- bird -----\tformula_1",
    "879": "SELECT T1.nationality FROM drivers AS T1 JOIN results AS T2 ON T1.driverId = T2.driverId ORDER BY T2.fastestLapSpeed DESC LIMIT 1;\t----- bird -----\tformula_1",
    "880": "SELECT (SELECT fastestLapSpeed FROM results WHERE raceId = 853) - ((SELECT fastestLapSpeed FROM results WHERE raceId = 854) * 100) / (SELECT fastestLapSpeed FROM results WHERE raceId = 853);\t----- bird -----\tformula_1",
    "881": "SELECT CAST(SUM(CASE WHEN r.statusId IS NOT NULL THEN 1 ELSE 0 END) AS REAL) / COUNT(DISTINCT r.driverId) AS race_completion_rate FROM results r JOIN races ra ON r.raceId = ra.raceId WHERE ra.date = '1983-07-16';\t----- bird -----\tformula_1",
    "882": "SELECT T1.year FROM seasons AS T1 JOIN races AS T2 ON T1.year = T2.year WHERE T2.name = 'Singapore Grand Prix' LIMIT 2 OFFSET 0;\t----- bird -----\tformula_1",
    "883": "SELECT name FROM races WHERE year = 2005 ORDER BY name DESC;\t----- bird -----\tformula_1",
    "884": "SELECT name FROM races WHERE year = (SELECT year FROM races ORDER BY date ASC LIMIT 1) AND strftime('%m', date) = (SELECT strftime('%m', date) FROM races ORDER BY date ASC LIMIT 1);\t----- bird -----\tformula_1",
    "885": "SELECT T1.name, T1.date FROM races AS T1 WHERE T1.year = 1999 ORDER BY T1.round DESC LIMIT 1;\t----- bird -----\tformula_1",
    "886": "SELECT year FROM races GROUP BY year ORDER BY COUNT(*) DESC LIMIT 1;\t----- bird -----\tformula_1",
    "887": "SELECT name FROM races WHERE year = 2017 AND circuitId NOT IN (SELECT circuitId FROM circuits WHERE year = 2000);\t----- bird -----\tformula_1",
    "888": "SELECT T1.name, T1.location FROM circuits AS T1 JOIN races AS T2 ON T1.circuitId = T2.circuitId WHERE T2.year = (SELECT MIN(year) FROM races WHERE T1.country = 'European Union' OR T1.country = 'United Kingdom' OR T1.country = 'Germany' OR T1.country = 'Spain' OR T1.country = 'France' OR T1.country = 'Italy' OR T1.country = 'Belgium' OR T1.country = 'Netherlands' OR T1.country = 'Austria' OR T1.country = 'Switzerland' OR T1.country = 'Monaco' OR T1.country = 'Portugal') LIMIT 1;\t----- bird -----\tformula_1",
    "889": "SELECT MAX(year) FROM races WHERE circuitId = (SELECT circuitId FROM circuits WHERE name = 'Brands Hatch' AND country = 'United Kingdom');\t----- bird -----\tformula_1",
    "890": "SELECT COUNT(DISTINCT R.year) FROM races AS R JOIN circuits AS C ON R.circuitId = C.circuitId WHERE C.name = \"Silverstone Circuit\" AND R.name LIKE \"%Grand Prix%\" AND C.country = \"United Kindom\";\t----- bird -----\tformula_1",
    "891": "SELECT DISTINCT T1.forename, T1.surname FROM drivers AS T1 JOIN results AS T2 ON T1.driverId = T2.driverId JOIN races AS T3 ON T2.raceId = T3.raceId WHERE T3.year = 2010 AND T3.name = 'Singapore Grand Prix' ORDER BY T2.position;\t----- bird -----\tformula_1",
    "892": "SELECT T1.forename, T1.surname, T2.points FROM drivers AS T1 JOIN driverStandings AS T2 ON T1.driverId = T2.driverId ORDER BY T2.points DESC LIMIT 1;\t----- bird -----\tformula_1",
    "893": "SELECT T1.forename, T1.surname, T2.points FROM drivers AS T1 JOIN results AS T2 ON T1.driverId = T2.driverId WHERE T2.raceId = (SELECT raceId FROM races WHERE year = 2017 AND name = 'Chinese Grand Prix') ORDER BY T2.points DESC LIMIT 3;\t----- bird -----\tformula_1",
    "894": "SELECT T1.forename, T1.surname, T2.name FROM drivers AS T1 JOIN lapTimes AS T2 ON T1.driverId = T2.driverId ORDER BY T2.milliseconds LIMIT 1;\t----- bird -----\tformula_1",
    "895": "SELECT AVG(T1.milliseconds) FROM lapTimes AS T1 INNER JOIN drivers AS T2 ON T1.driverId = T2.driverId WHERE T2.forename = 'Lewis' AND T2.surname = 'Hamilton' AND T1.raceId = (SELECT raceId FROM races WHERE name = 'Malaysian Grand Prix' AND year = 2009);\t----- bird -----\tformula_1",
    "896": "SELECT CAST(SUM(CASE WHEN R.position > 2 THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(DISTINCT R.raceId) FROM results AS R JOIN drivers AS D ON R.driverId = D.driverId WHERE D.surname = 'Hamilton' AND R.raceId IN (SELECT raceId FROM races WHERE year >= 2010);\t----- bird -----\tformula_1",
    "897": "SELECT T1.forename, T1.surname, T1.nationality, T2.points FROM drivers AS T1 INNER JOIN driverStandings AS T2 ON T1.driverId = T2.driverId GROUP BY T1.driverId ORDER BY COUNT(T2.wins) DESC LIMIT 1;\t----- bird -----\tformula_1",
    "898": "SELECT forename, surname, age FROM drivers WHERE nationality = 'Japanese' ORDER BY dob DESC LIMIT 1;\t----- bird -----\tformula_1",
    "899": "SELECT T1.name FROM circuits AS T1 INNER JOIN races AS T2 ON T1.circuitId = T2.circuitId WHERE T2.year BETWEEN 1990 AND 2000 GROUP BY T1.circuitId HAVING COUNT(T2.raceId) = 4;\t----- bird -----\tformula_1",
    "900": "SELECT c.name, c.location, r.name FROM circuits AS c JOIN races AS r ON c.circuitId = r.circuitId WHERE c.country = 'USA' AND r.year = 2006;\t----- bird -----\tformula_1",
    "901": "SELECT races.name, circuits.name AS circuit_name, circuits.location FROM races JOIN circuits ON races.circuitId = circuits.circuitId WHERE strftime('%m', races.date) = '09' AND strftime('%Y', races.date) = '2005';\t----- bird -----\tformula_1",
    "902": "SELECT T1.name FROM races AS T1 INNER JOIN results AS T2 ON T1.raceId = T2.raceId INNER JOIN drivers AS T3 ON T2.driverId = T3.driverId WHERE T3.forename = 'Alex' AND T3.surname = 'Yoong' AND T2.number < 20;\t----- bird -----\tformula_1",
    "903": "SELECT COUNT(T1.raceId) FROM races AS T1 JOIN results AS T2 ON T1.raceId = T2.raceId JOIN drivers AS T3 ON T2.driverId = T3.driverId JOIN circuits AS T4 ON T1.circuitId = T4.circuitId WHERE T4.name = 'Sepang International Circuit' AND T3.forename = 'Michael' AND T3.surname = 'Schumacher' AND T2.position = 1;\t----- bird -----\tformula_1",
    "904": "SELECT T1.name, T1.year FROM races AS T1 JOIN results AS T2 ON T1.raceId = T2.raceId JOIN drivers AS T3 ON T2.driverId = T3.driverId WHERE T3.forename = 'Michael' AND T3.surname = 'Schumacher' AND T2.fastestLap = (SELECT MIN(fastestLap) FROM results AS T4 JOIN drivers AS T5 ON T4.driverId = T5.driverId WHERE T5.forename = 'Michael' AND T5.surname = 'Schumacher');\t----- bird -----\tformula_1",
    "905": "SELECT AVG(T1.points) FROM results AS T1 INNER JOIN drivers AS T2 ON T1.driverId = T2.driverId WHERE T2.forename = 'Eddie' AND T2.surname = 'Irvine' AND T1.raceId IN (SELECT raceId FROM races WHERE year = 2000);\t----- bird -----\tformula_1",
    "906": "SELECT T1.year, T3.points FROM seasons AS T1 INNER JOIN races AS T2 ON T1.year = T2.year INNER JOIN results AS T3 ON T2.raceId = T3.raceId WHERE T3.driverId = (SELECT driverId FROM drivers WHERE forename = 'Lewis' AND surname = 'Hamilton') AND T1.year = (SELECT MIN(year) FROM seasons);\t----- bird -----\tformula_1",
    "907": "SELECT r.name, c.country FROM races AS r JOIN circuits AS c ON r.circuitId = c.circuitId WHERE r.year = 2017 ORDER BY r.date ASC;\t----- bird -----\tformula_1",
    "908": "SELECT r.name, s.year, c.location FROM races r JOIN seasons s ON r.year = s.year JOIN circuits c ON r.circuitId = c.circuitId JOIN results rs ON r.raceId = rs.raceId ORDER BY rs.laps DESC LIMIT 1;\t----- bird -----\tformula_1",
    "909": "SELECT CAST(SUM(CASE WHEN races.country = 'Germany' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(races) FROM races WHERE races.name = 'European Grand Prix';\t----- bird -----\tformula_1",
    "910": "SELECT lat, lng FROM circuits WHERE name = 'Silverstone Circuit';\t----- bird -----\tformula_1",
    "911": "SELECT name FROM circuits WHERE name IN ('Silverstone Circuit', 'Hockenheimring', 'Hungaroring') ORDER BY lat DESC LIMIT 1;\t----- bird -----\tformula_1",
    "912": "SELECT circuitRef FROM circuits WHERE name = 'Marina Bay Street Circuit';\t----- bird -----\tformula_1",
    "913": "SELECT country FROM circuits ORDER BY alt DESC LIMIT 1;\t----- bird -----\tformula_1",
    "914": "SELECT COUNT(*) FROM drivers WHERE code IS NULL;\t----- bird -----\tformula_1",
    "915": "SELECT nationality FROM drivers ORDER BY dob ASC LIMIT 1;\t----- bird -----\tformula_1",
    "916": "SELECT surname FROM drivers WHERE nationality = 'italian';\t----- bird -----\tformula_1",
    "917": "SELECT url FROM drivers WHERE forename = 'Anthony' AND surname = 'Davidson';\t----- bird -----\tformula_1",
    "918": "SELECT driverRef FROM drivers WHERE forename = 'Lewis' AND surname = 'Hamilton';\t----- bird -----\tformula_1",
    "919": "SELECT T1.name FROM circuits AS T1 INNER JOIN races AS T2 ON T1.circuitId = T2.circuitId WHERE T2.name = 'Spanish Grand Prix' AND T2.year = 2009;\t----- bird -----\tformula_1",
    "920": "SELECT DISTINCT year FROM races WHERE circuitId = (SELECT circuitId FROM circuits WHERE name = 'Silverstone Circuit');\t----- bird -----\tformula_1",
    "921": "SELECT * FROM races WHERE circuitId IN (SELECT circuitId FROM circuits WHERE name = 'Silverstone Circuit');\t----- bird -----\tformula_1",
    "922": "SELECT time FROM races WHERE year = 2010 AND circuitId = (SELECT circuitId FROM circuits WHERE name = 'Abu Dhabi');\t----- bird -----\tformula_1",
    "923": "SELECT count(*) FROM races WHERE circuitId IN (SELECT circuitId FROM circuits WHERE country = 'Italy');\t----- bird -----\tformula_1",
    "924": "SELECT date FROM races WHERE circuitId = (SELECT circuitId FROM circuits WHERE name = 'Barcelona-Catalunya');\t----- bird -----\tformula_1",
    "925": "SELECT DISTINCT T1.url FROM circuits AS T1 JOIN races AS T2 ON T1.circuitId = T2.circuitId WHERE T2.name = 'Spanish Grand Prix' AND T2.year = 2009;\t----- bird -----\tformula_1",
    "926": "SELECT min(fastestLapTime) FROM results WHERE driverId = (SELECT driverId FROM drivers WHERE forename = 'Lewis' AND surname = 'Hamilton');\t----- bird -----\tformula_1",
    "927": "SELECT T1.forename, T1.surname FROM drivers AS T1 JOIN results AS T2 ON T1.driverId = T2.driverId ORDER BY T2.fastestLapSpeed DESC LIMIT 1;\t----- bird -----\tformula_1",
    "928": "SELECT T1.driverRef FROM results AS T1 INNER JOIN races AS T2 ON T1.raceId = T2.raceId WHERE T2.name = 'Canadian Grand Prix' AND T2.year = 2007 AND T1.position = 1;\t----- bird -----\tformula_1",
    "929": "SELECT DISTINCT r.raceId FROM races r JOIN results res ON r.raceId = res.raceId JOIN drivers d ON res.driverId = d.driverId WHERE d.forename = 'Lewis' AND d.surname = 'Hamilton';\t----- bird -----\tformula_1",
    "930": "SELECT T1.raceId FROM results AS T1 JOIN drivers AS T2 ON T1.driverId = T2.driverId WHERE T2.forename = 'Lewis' AND T2.surname = 'Hamilton' ORDER BY T1.rank ASC LIMIT 1;\t----- bird -----\tformula_1",
    "931": "SELECT MAX(fastestLapSpeed) FROM results WHERE raceId IN (SELECT raceId FROM races WHERE name = 'Spanish Grand Prix' AND year = 2009);\t----- bird -----\tformula_1",
    "932": "SELECT DISTINCT T1.year FROM seasons AS T1 JOIN races AS T2 ON T1.year = T2.year JOIN results AS T3 ON T2.raceId = T3.raceId JOIN drivers AS T4 ON T3.driverId = T4.driverId WHERE T4.forename = 'Lewis' AND T4.surname = 'Hamilton';\t----- bird -----\tformula_1",
    "933": "SELECT T1.positionOrder FROM results AS T1 JOIN drivers AS T2 ON T1.driverId = T2.driverId JOIN races AS T3 ON T1.raceId = T3.raceId WHERE T2.forename = 'Lewis' AND T2.surname = 'Hamilton' AND T3.name = 'Chinese Grand Prix' AND T3.year = 2008;\t----- bird -----\tformula_1",
    "934": "SELECT T1.forename, T1.surname FROM drivers AS T1 JOIN results AS T2 ON T1.driverId = T2.driverId WHERE T2.grid = 4 AND T2.raceId IN (SELECT raceId FROM races WHERE year = 1989 AND name = 'Australian Grand Prix');\t----- bird -----\tformula_1",
    "935": "SELECT count(driverId) FROM results WHERE raceId = (SELECT raceId FROM races WHERE name = 'Australian Grand Prix' AND year = 2008) AND time IS NOT NULL;\t----- bird -----\tformula_1",
    "936": "SELECT time FROM lapTimes WHERE raceId = (SELECT raceId FROM races WHERE name = 'Australian Grand Prix' AND year = 2008) AND driverId = (SELECT driverId FROM drivers WHERE forename = 'Lewis' AND surname = 'Hamilton') ORDER BY time ASC LIMIT 1;\t----- bird -----\tformula_1",
    "937": "SELECT T1.time FROM results AS T1 JOIN races AS T2 ON T1.raceId = T2.raceId WHERE T2.name = 'AustChineseralian Grand Prix' AND T2.year = 2008 AND T1.rank = 2;\t----- bird -----\tformula_1",
    "938": "SELECT T1.forename, T1.surname, T1.url FROM drivers AS T1 JOIN results AS T2 ON T1.driverId = T2.driverId WHERE T2.raceId = (SELECT raceId FROM races WHERE year = 2008 AND name = 'Australian Grand Prix') AND T2.positionText = '1st';\t----- bird -----\tformula_1",
    "939": "SELECT COUNT(T1.driverId) FROM drivers AS T1 JOIN results AS T2 ON T1.driverId = T2.driverId JOIN races AS T3 ON T2.raceId = T3.raceId WHERE T1.nationality = 'British' AND T3.year = 2008 AND T3.name = 'Australia';\t----- bird -----\tformula_1",
    "940": "SELECT count(DISTINCT driverId) FROM results WHERE raceId = (SELECT raceId FROM races WHERE name = 'Chinese Grand Prix' AND year = 2008) AND time IS NOT NULL;\t----- bird -----\tformula_1",
    "941": "SELECT sum(T1.points) FROM driverStandings AS T1 INNER JOIN drivers AS T2 ON T1.driverId = T2.driverId WHERE T2.forename = 'Lewis' AND T2.surname = 'Hamilton';\t----- bird -----\tformula_1",
    "942": "SELECT AVG(CAST(SUBSTR(fastestLapTime, 1, 2) AS DECIMAL) + CAST(SUBSTR(fastestLapTime, 1, 2) AS DECIMAL) * 60 + CAST(SUBSTR(fastestLapTime, 2, 3) AS DECIMAL) / 1000) FROM results WHERE driverId IN (SELECT driverId FROM drivers WHERE forename = 'Lewis' AND surname = 'Hamilton');\t----- bird -----\tformula_1",
    "943": "SELECT CAST(SUM(CASE WHEN r.time IS NOT NULL THEN 1 ELSE 0 END) AS REAL) / COUNT(r.raceId) FROM races AS r WHERE r.year = 2008 AND r.name = 'Australian Grand Prix';\t----- bird -----\tformula_1",
    "944": "SELECT ( ( CAST(T1.time AS DECIMAL) - CAST(T2.time AS DECIMAL) ) / CAST(T3.time AS DECIMAL) ) * 100 FROM results AS T1 INNER JOIN results AS T2 ON T1.raceId = T2.raceId AND T1.driverId = (SELECT driverId FROM results WHERE raceId = T1.raceId ORDER BY position ASC LIMIT 1) INNER JOIN results AS T3 ON T1.raceId = T3.raceId AND T3.driverId = (SELECT driverId FROM results WHERE raceId = T1.raceId ORDER BY position DESC LIMIT 1) WHERE T1.raceId = (SELECT raceId FROM races WHERE year = 2008 AND name = 'Australia') AND T1.position = 1 AND T2.position = (SELECT COUNT(*) FROM results WHERE raceId = T1.raceId);\t----- bird -----\tformula_1",
    "945": "SELECT count(*) FROM circuits WHERE location = 'Adelaide' AND country = 'Australia';\t----- bird -----\tformula_1",
    "946": "SELECT lat, lng FROM circuits WHERE country = 'USA';\t----- bird -----\tformula_1",
    "947": "SELECT count(*) FROM drivers WHERE nationality = 'British' AND strftime('%Y', dob) > '1980';\t----- bird -----\tformula_1",
    "948": "SELECT MAX(points) FROM constructorStandings WHERE constructorId IN (SELECT constructorId FROM constructors WHERE nationality = 'British');\t----- bird -----\tformula_1",
    "949": "SELECT constructorId FROM constructorResults ORDER BY points DESC LIMIT 1;\t----- bird -----\tformula_1",
    "950": "SELECT T1.name FROM constructors AS T1 INNER JOIN constructorStandings AS T2 ON T1.constructorId = T2.constructorId WHERE T2.raceId = 291 AND T2.points = 0;\t----- bird -----\tformula_1",
    "951": "SELECT COUNT(*) FROM constructors WHERE nationality = 'Japanese' AND constructorId IN (SELECT constructorId FROM constructorResults WHERE points = 0 AND raceId IN (SELECT raceId FROM races LIMIT 2));\t----- bird -----\tformula_1",
    "952": "SELECT DISTINCT T1.name FROM constructors AS T1 JOIN constructorStandings AS T2 ON T1.constructorId = T2.constructorId WHERE T2.position = 1;\t----- bird -----\tformula_1",
    "953": "SELECT COUNT(T1.constructorId) FROM constructors AS T1 JOIN lapTimes AS T2 ON T1.constructorId = T2.constructorId WHERE T1.nationality = 'French' AND T2.lap > 50;\t----- bird -----\tformula_1",
    "954": "SELECT CAST(SUM(CASE WHEN T1.time IS NOT NULL AND T1.year BETWEEN 2007 AND 2009 THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(T1.driverId) FROM results AS T1 INNER JOIN drivers AS T2 ON T1.driverId = T2.driverId WHERE T2.nationality = 'Japanese' AND T1.year BETWEEN 2007 AND 2009;\t----- bird -----\tformula_1",
    "955": "SELECT strftime('%s', AVG(time)) FROM results WHERE statusId = 1 AND raceId IN (SELECT raceId FROM races WHERE year < 1975) AND points > 0;\t----- bird -----\tformula_1",
    "956": "SELECT forename, surname FROM drivers WHERE strftime('%Y', dob) > '1975' AND EXISTS (SELECT 1 FROM results WHERE results.driverId = drivers.driverId AND rank = 2);\t----- bird -----\tformula_1",
    "957": "SELECT count(*) FROM drivers WHERE nationality = 'Italy' AND url IN (SELECT url FROM results WHERE time IS NULL);\t----- bird -----\tformula_1",
    "958": "SELECT DISTINCT T1.forename, T1.surname FROM drivers AS T1 JOIN lapTimes AS T2 ON T1.driverId = T2.driverId ORDER BY T2.time ASC LIMIT 1;\t----- bird -----\tformula_1",
    "959": "SELECT T1.lap FROM lapTimes AS T1 JOIN drivers AS T2 ON T1.driverId = T2.driverId JOIN seasons AS T3 ON T1.raceId IN (SELECT raceId FROM races WHERE year = 2009) WHERE T2.driverId IN (SELECT driverId FROM driverStandings WHERE year = 2009 ORDER BY points DESC LIMIT 1) ORDER BY T1.time ASC LIMIT 1;\t----- bird -----\tformula_1",
    "960": "SELECT avg(fastestLapSpeed) FROM results WHERE raceId IN (SELECT raceId FROM races WHERE name = 'Spanish Grand Prix' AND year = 2009);\t----- bird -----\tformula_1",
    "961": "SELECT T1.name, T1.year FROM races AS T1 JOIN results AS T2 ON T1.raceId = T2.raceId WHERE T2.milliseconds = (SELECT MIN(milliseconds) FROM results WHERE milliseconds IS NOT NULL);\t----- bird -----\tformula_1",
    "962": "SELECT CAST(SUM(CASE WHEN year(dob) < 1985 AND laps > 50 THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(CASE WHEN year(dob) BETWEEN 2000 AND 2005 THEN 1 ELSE 0 END) FROM drivers d JOIN results r ON d.driverId = r.driverId;\t----- bird -----\tformula_1",
    "963": "SELECT count(T1.driverId) FROM drivers AS T1 JOIN lapTimes AS T2 ON T1.driverId = T2.driverId WHERE T1.nationality = 'France' AND T2.time < '02:00.00';\t----- bird -----\tformula_1",
    "964": "SELECT code FROM drivers WHERE nationality = 'America';\t----- bird -----\tformula_1",
    "965": "SELECT raceId FROM races WHERE year = 2009;\t----- bird -----\tformula_1",
    "966": "SELECT count(DISTINCT driverId) FROM results WHERE raceId = 18;\t----- bird -----\tformula_1",
    "967": "SELECT code, COUNT(*) FROM drivers WHERE nationality = 'Netherlands' AND driverId IN (SELECT driverId FROM drivers ORDER BY strftime('%Y', dob) ASC LIMIT 3) GROUP BY code;\t----- bird -----\tformula_1",
    "968": "SELECT driverRef FROM drivers WHERE forename = 'Robert' AND surname = 'Kubica';\t----- bird -----\tformula_1",
    "969": "SELECT count(*) FROM drivers WHERE nationality = 'British' AND YEAR(dob) = 1980;\t----- bird -----\tformula_1",
    "970": "SELECT T1.forename, T1.surname FROM drivers AS T1 JOIN lapTimes AS T2 ON T1.driverId = T2.driverId WHERE T1.nationality = 'German' AND T1.dob BETWEEN '1980-01-01' AND '1990-12-31' ORDER BY T2.time ASC LIMIT 3;\t----- bird -----\tformula_1",
    "971": "SELECT driverRef FROM drivers WHERE nationality = 'German' ORDER BY dob ASC LIMIT 1;\t----- bird -----\tformula_1",
    "972": "SELECT T1.driverId, T1.code FROM drivers AS T1 JOIN results AS T2 ON T1.driverId = T2.driverId WHERE T1.dob = '1971-01-01' AND T2.fastestLapTime IS NOT NULL;\t----- bird -----\tformula_1",
    "973": "SELECT driverId, forename, surname FROM drivers WHERE nationality = 'Spain' AND strftime('%Y', dob) < '1982' AND driverId IN (SELECT driverId FROM lapTimes WHERE raceId IN (SELECT raceId FROM races) GROUP BY driverId ORDER BY MAX(time) DESC LIMIT 10);\t----- bird -----\tformula_1",
    "974": "SELECT DISTINCT T1.year FROM seasons AS T1 JOIN results AS T2 ON T1.url = T2.url WHERE T2.fastestLapTime IS NOT NULL;\t----- bird -----\tformula_1",
    "975": "SELECT T1.year FROM seasons AS T1 JOIN races AS T2 ON T1.year = T2.year JOIN lapTimes AS T3 ON T2.raceId = T3.raceId ORDER BY T3.milliseconds ASC LIMIT 1;\t----- bird -----\tformula_1",
    "976": "SELECT driverId FROM lapTimes WHERE raceId IN (SELECT raceId FROM races WHERE round = 1) ORDER BY time ASC LIMIT 5;\t----- bird -----\tformula_1",
    "977": "SELECT COUNT(T1.driverId) FROM results AS T1 INNER JOIN status AS T2 ON T1.statusId = T2.statusId WHERE T1.raceId BETWEEN 50 AND 100 AND T2.statusId = 2 AND T1.time IS NOT NULL;\t----- bird -----\tformula_1",
    "978": "SELECT count(c.circuitId), c.location, c.lat, c.lng FROM circuits AS c WHERE c.country = 'Austria';\t----- bird -----\tformula_1",
    "979": "SELECT round FROM races WHERE raceId IN (SELECT raceId FROM results WHERE time IS NOT NULL) GROUP BY round ORDER BY COUNT(*) DESC LIMIT 1;\t----- bird -----\tformula_1",
    "980": "SELECT D.driverRef, D.nationality, D.dob FROM drivers D JOIN qualifying Q ON D.driverId = Q.driverId WHERE Q.raceId = 23 AND Q.q2 IS NOT NULL;\t----- bird -----\tformula_1",
    "981": "SELECT T1.year, T2.name, T2.date, T2.time FROM races AS T2 JOIN (SELECT MIN(drivers.dob) AS min_dob FROM drivers) AS T1 ON T1.year = T2.year WHERE T2.raceId IN (SELECT raceId FROM qualifying WHERE driverId IN (SELECT driverId FROM drivers WHERE dob = (SELECT MIN(dob) FROM drivers)));\t----- bird -----\tformula_1",
    "982": "SELECT count(T1.driverId) FROM drivers AS T1 JOIN results AS T2 ON T1.driverId = T2.driverId JOIN status AS T3 ON T2.statusId = T3.statusId WHERE T1.nationality = 'USA' AND T3.status = 'Puncture';\t----- bird -----\tformula_1",
    "983": "SELECT T1.name, T1.url FROM constructors AS T1 JOIN constructorStandings AS T2 ON T1.constructorId = T2.constructorId WHERE T1.nationality = 'Italian' ORDER BY T2.points DESC LIMIT 1;\t----- bird -----\tformula_1",
    "984": "SELECT url FROM constructors ORDER BY (SELECT SUM(wins) FROM constructorStandings WHERE constructorStandings.constructorId = constructors.constructorId) DESC LIMIT 1;\t----- bird -----\tformula_1",
    "985": "SELECT T1.forename, T1.surname FROM drivers AS T1 JOIN results AS T2 ON T1.driverId = T2.driverId JOIN races AS T3 ON T2.raceId = T3.raceId WHERE T3.name = 'French Grand Prix' AND T2.position > 0 AND T2.laps > 2 AND T2.time = (SELECT MAX(time) FROM lapTimes WHERE raceId = T2.raceId AND lap = 3);\t----- bird -----\tformula_1",
    "986": "SELECT T1.milliseconds FROM lapTimes AS T1 JOIN races AS T2 ON T1.raceId = T2.raceId WHERE T1.lap = 1 ORDER BY T1.milliseconds ASC LIMIT 1;\t----- bird -----\tformula_1",
    "987": "SELECT AVG(fastestLapTime) FROM results WHERE raceId = (SELECT raceId FROM races WHERE name = 'United States Grand Prix' AND year = 2006) AND rank < 11;\t----- bird -----\tformula_1",
    "988": "SELECT T1.forename, T1.surname FROM drivers AS T1 JOIN pitStops AS T2 ON T1.driverId = T2.driverId WHERE T1.nationality = 'German' AND STRFTIME('%Y',T1.dob) BETWEEN '1980' AND '1985' GROUP BY T1.driverId ORDER BY AVG(T2.duration) ASC LIMIT 3;\t----- bird -----\tformula_1",
    "989": "SELECT T1.forename, T1.surname, T3.time FROM drivers AS T1 JOIN results AS T2 ON T1.driverId = T2.driverId JOIN races AS T3 ON T2.raceId = T3.raceId WHERE T3.name = 'Canadian Grand Prix' AND T3.year = 2008 AND T2.positionText = '1';\t----- bird -----\tformula_1",
    "990": "SELECT T1.constructorRef, T1.url FROM constructors AS T1 JOIN results AS T2 ON T1.constructorId = T2.constructorId JOIN races AS T3 ON T2.raceId = T3.raceId WHERE T3.name = 'Singapore Grand Prix' AND T3.year = 2009 AND T2.position = 1;\t----- bird -----\tformula_1",
    "991": "SELECT forename, surname, dob FROM drivers WHERE nationality = 'Austrian' AND dob BETWEEN '1981-01-01' AND '1991-12-31';\t----- bird -----\tformula_1",
    "992": "SELECT forename || ' ' || surname AS fullName, url, dob FROM drivers WHERE nationality = 'German' AND dob BETWEEN '1971-01-01' AND '1985-12-31' ORDER BY dob DESC;\t----- bird -----\tformula_1",
    "993": "SELECT location, country, lat, lng FROM circuits WHERE circuitRef = 'Hungaroring';\t----- bird -----\tformula_1",
    "994": "SELECT T1.points, T2.name, T2.nationality FROM constructorResults AS T1 JOIN constructors AS T2 ON T1.constructorId = T2.constructorId JOIN races AS T3 ON T1.raceId = T3.raceId WHERE T3.name = 'Monaco Grand Prix' AND T3.year BETWEEN 1980 AND 2010 ORDER BY T1.points DESC LIMIT 1;\t----- bird -----\tformula_1",
    "995": "SELECT AVG(T1.points) FROM results AS T1 JOIN drivers AS T2 ON T1.driverId = T2.driverId JOIN races AS T3 ON T1.raceId = T3.raceId WHERE T2.forename = 'Lewis' AND T2.surname = 'Hamilton' AND T3.name = 'Turkish Grand Prix';\t----- bird -----\tformula_1",
    "996": "SELECT AVG(race_count) FROM (SELECT COUNT(raceId) AS race_count FROM races WHERE year BETWEEN 2000 AND 2009 GROUP BY year) AS yearly_races;\t----- bird -----\tformula_1",
    "997": "SELECT nationality FROM drivers GROUP BY nationality ORDER BY COUNT(*) DESC LIMIT 1;\t----- bird -----\tformula_1",
    "998": "SELECT T1.wins FROM driverStandings AS T1 WHERE T1.points = 91;\t----- bird -----\tformula_1",
    "999": "SELECT T1.name FROM races AS T1 JOIN results AS T2 ON T1.raceId = T2.raceId ORDER BY T2.fastestLapSpeed LIMIT 1;\t----- bird -----\tformula_1",
    "1000": "SELECT c.location || ' ' || c.country FROM circuits c JOIN races r ON c.circuitId = r.circuitId ORDER BY r.date DESC LIMIT 1;\t----- bird -----\tformula_1",
    "1001": "SELECT T1.forename, T1.surname FROM drivers AS T1 JOIN qualifying AS T2 ON T1.driverId = T2.driverId JOIN races AS T3 ON T2.raceId = T3.raceId WHERE T3.circuitId = (SELECT circuitId FROM circuits WHERE name = 'Marina Bay Street Circuit') AND T3.year = 2008 AND T2.position = 1 AND T2.rank = 1 LIMIT 1;\t----- bird -----\tformula_1",
    "1002": "SELECT d.forename || ' ' || d.surname AS fullName, d.nationality, r.name FROM drivers d JOIN results r ON d.driverId = r.driverId ORDER BY d.dob DESC LIMIT 1;\t----- bird -----\tformula_1",
    "1003": "SELECT COUNT(*) FROM results WHERE driverId IN (SELECT driverId FROM results WHERE raceId IN (SELECT raceId FROM races WHERE name = 'Canadian Grand Prix') AND statusId = 3 ORDER BY statusId DESC LIMIT 1) AND statusId = 3;\t----- bird -----\tformula_1",
    "1004": "SELECT T1.wins, T2.forename, T2.surname FROM driverStandings AS T1 JOIN drivers AS T2 ON T1.driverId = T2.driverId WHERE T2.dob = (SELECT MIN(dob) FROM drivers);\t----- bird -----\tformula_1",
    "1005": "SELECT MAX(duration) FROM pitStops;\t----- bird -----\tformula_1",
    "1006": "SELECT MIN(milliseconds) FROM lapTimes;\t----- bird -----\tformula_1",
    "1007": "SELECT MAX(duration) FROM pitStops WHERE driverId = (SELECT driverId FROM drivers WHERE forename = 'Lewis' AND surname = 'Hamilton');\t----- bird -----\tformula_1",
    "1008": "SELECT lap FROM pitStops WHERE raceId = (SELECT raceId FROM races WHERE name = 'Australian Grand Prix' AND year = 2011) AND driverId = (SELECT driverId FROM drivers WHERE forename = 'Lewis' AND surname = 'Hamilton');\t----- bird -----\tformula_1",
    "1009": "SELECT T1.time, T1.duration FROM pitStops AS T1 JOIN races AS T2 ON T1.raceId = T2.raceId WHERE T2.year = 2011 AND T2.name = 'Australia';\t----- bird -----\tformula_1",
    "1010": "SELECT min(milliseconds) FROM lapTimes WHERE driverId = (SELECT driverId FROM drivers WHERE forename = 'Lewis' AND surname = 'Hamilton');\t----- bird -----\tformula_1",
    "1011": "SELECT DISTINCT T1.forename, T1.surname FROM drivers AS T1 JOIN lapTimes AS T2 ON T1.driverId = T2.driverId ORDER BY T2.time ASC LIMIT 20;\t----- bird -----\tformula_1",
    "1012": "SELECT T1.position FROM results AS T1 INNER JOIN drivers AS T2 ON T1.driverId = T2.driverId INNER JOIN races AS T3 ON T1.raceId = T3.raceId WHERE T2.forename = 'Lewis' AND T2.surname = 'Hamilton' AND T1.fastestLap = (SELECT MIN(time) FROM lapTimes WHERE driverId = T2.driverId);\t----- bird -----\tformula_1",
    "1013": "SELECT MIN(milliseconds) FROM lapTimes WHERE raceId IN (SELECT raceId FROM races WHERE circuitId IN (SELECT circuitId FROM circuits WHERE name = 'Red Bull Ring'));\t----- bird -----\tformula_1",
    "1014": "SELECT T1.raceId, T1.driverId, T1.lap, T1.time, T1.milliseconds FROM lapTimes AS T1 JOIN circuits AS T2 ON T1.raceId IN (SELECT raceId FROM races WHERE circuitId = T2.circuitId) WHERE T2.country = 'Italy' ORDER BY T1.milliseconds ASC LIMIT 1;\t----- bird -----\tformula_1",
    "1015": "SELECT T1.raceId FROM lapTimes AS T1 JOIN races AS T2 ON T1.raceId = T2.raceId WHERE T2.name = 'Austrian Grand Prix' AND T1.milliseconds = (SELECT MIN(milliseconds) FROM lapTimes WHERE raceId IN (SELECT raceId FROM races WHERE name = 'Austrian Grand Prix'));\t----- bird -----\tformula_1",
    "1016": "SELECT T1.duration FROM pitStops AS T1 INNER JOIN lapTimes AS T2 ON T1.raceId = T2.raceId AND T1.driverId = T2.driverId INNER JOIN races AS T3 ON T1.raceId = T3.raceId WHERE T3.circuitId = (SELECT circuitId FROM circuits WHERE name = 'Austrian Grand Prix Circuit') AND T2.time = (SELECT MIN(time) FROM lapTimes WHERE raceId = T1.raceId);\t----- bird -----\tformula_1",
    "1017": "SELECT lat, lng FROM circuits WHERE circuitId IN (SELECT circuitId FROM races WHERE time = '1:29.488');\t----- bird -----\tformula_1",
    "1018": "SELECT AVG(P.milliseconds) FROM pitStops AS P JOIN drivers AS D ON P.driverId = D.driverId WHERE D.forename = 'Lewis' AND D.surname = 'Hamilton';\t----- bird -----\tformula_1",
    "1019": "SELECT AVG(T1.milliseconds) FROM lapTimes AS T1 JOIN races AS T2 ON T1.raceId = T2.raceId JOIN circuits AS T3 ON T2.circuitId = T3.circuitId WHERE T3.country = 'Italy';\t----- bird -----\tformula_1",
    "1020": "SELECT player_api_id FROM Player_Attributes ORDER BY overall_rating DESC LIMIT 1;\t----- bird -----\teuropean_football_2",
    "1021": "SELECT Player.player_name, Player.height FROM Player ORDER BY Player.height DESC LIMIT 1;\t----- bird -----\teuropean_football_2",
    "1022": "SELECT preferred_foot FROM Player_Attributes ORDER BY potential ASC LIMIT 1;\t----- bird -----\teuropean_football_2",
    "1023": "SELECT count(*) FROM Player_Attributes WHERE overall_rating >= 60 AND overall_rating < 65 AND defensive_work_rate = 'low';\t----- bird -----\teuropean_football_2",
    "1024": "SELECT player_fifa_api_id FROM Player_Attributes ORDER BY crossing DESC LIMIT 5;\t----- bird -----\teuropean_football_2",
    "1025": "SELECT T1.name FROM League AS T1 INNER JOIN Match AS T2 ON T1.id = T2.league_id WHERE T2.season = '2015/2016' GROUP BY T1.id ORDER BY SUM(T2.home_team_goal + T2.away_team_goal) DESC LIMIT 1;\t----- bird -----\teuropean_football_2",
    "1026": "SELECT home_team_api_id FROM Match WHERE season = '2015/2016' AND home_team_goal < away_team_goal GROUP BY home_team_api_id ORDER BY COUNT(*) ASC LIMIT 1;\t----- bird -----\teuropean_football_2",
    "1027": "SELECT player_name FROM Player ORDER BY penalties DESC LIMIT 10;\t----- bird -----\teuropean_football_2",
    "1028": "SELECT T1.team_long_name FROM Team AS T1 JOIN Match AS T2 ON T1.team_api_id = T2.away_team_api_id WHERE T2.league_id = (SELECT id FROM League WHERE name = 'Scotland Premier League') AND T2.season = '2009/2010' GROUP BY T1.team_long_name ORDER BY COUNT(CASE WHEN T2.away_team_goal > T2.home_team_goal THEN 1 ELSE 0 END) DESC LIMIT 1;\t----- bird -----\teuropean_football_2",
    "1029": "SELECT buildUpPlaySpeed FROM Team_Attributes ORDER BY buildUpPlaySpeed DESC LIMIT 4;\t----- bird -----\teuropean_football_2",
    "1030": "SELECT T1.name FROM League AS T1 JOIN Match AS T2 ON T1.id = T2.league_id WHERE T2.season = '2015/2016' GROUP BY T1.id ORDER BY SUM(home_team_goal = away_team_goal) DESC LIMIT 1;\t----- bird -----\teuropean_football_2",
    "1031": "SELECT SUBTRACT(DATETIME(), birthday) FROM Player_Attributes WHERE sprint_speed >= 97 AND YEAR(date) >= '2013' AND YEAR(date) <= '2015';\t----- bird -----\teuropean_football_2",
    "1032": "SELECT L.name, COUNT(M.id) FROM Match AS M JOIN League AS L ON M.league_id = L.id GROUP BY L.id ORDER BY COUNT(M.id) DESC LIMIT 1;\t----- bird -----\teuropean_football_2",
    "1033": "SELECT AVG(height) FROM Player WHERE birthday >= '1990-01-01 00:00:00' AND birthday < '1996-01-01 00:00:00';\t----- bird -----\teuropean_football_2",
    "1034": "SELECT player_api_id FROM Player_Attributes WHERE substr(date,1,4) = '2010' ORDER BY overall_rating DESC LIMIT 1;\t----- bird -----\teuropean_football_2",
    "1035": "SELECT team_fifa_api_id FROM Team_Attributes WHERE buildUpPlaySpeed > 50 AND buildUpPlaySpeed < 60;\t----- bird -----\teuropean_football_2",
    "1036": "SELECT team_long_name FROM Team_Attributes WHERE strftime('%Y', date) = '2012' AND buildUpPlayPassing > (SELECT AVG(buildUpPlayPassing) FROM Team_Attributes);\t----- bird -----\teuropean_football_2",
    "1037": "SELECT CAST(SUM(CASE WHEN preferred_foot = 'left' AND YEAR(birthday) BETWEEN 1987 AND 1992 THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(player_fifa_api_id);\t----- bird -----\teuropean_football_2",
    "1038": "SELECT T1.name FROM League AS T1 JOIN Match AS T2 ON T1.id = T2.league_id GROUP BY T1.id ORDER BY SUM(T2.home_team_goal + T2.away_team_goal) ASC LIMIT 5;\t----- bird -----\teuropean_football_2",
    "1039": "SELECT AVG(long_shots) FROM Player_Attributes WHERE player_name = \"Ahmed Samir Farag\";\t----- bird -----\teuropean_football_2",
    "1040": "SELECT T1.player_name FROM Player AS T1 JOIN Player_Attributes AS T2 ON T1.player_fifa_api_id = T2.player_fifa_api_id WHERE T1.height > 180 ORDER BY (SELECT AVG(heading_accuracy) FROM Player_Attributes WHERE player_fifa_api_id = T1.player_fifa_api_id) DESC LIMIT 10;\t----- bird -----\teuropean_football_2",
    "1041": "SELECT T1.team_long_name FROM Team_Attributes AS T1 JOIN Team AS T2 ON T2.team_api_id = T1.team_api_id WHERE T1.buildUpPlayDribblingClass = 'Normal' AND T1.date >= '2014-01-01 00:00:00' AND T1.date < '2014-02-01 00:00:00' AND DIVIDE(SUM(T1.chanceCreationPassing), COUNT(T1.id)) > T1.chanceCreationPassing ORDER BY T1.chanceCreationPassing DESC;\t----- bird -----\teuropean_football_2",
    "1042": "SELECT DISTINCT L.name FROM League AS L JOIN Match AS M ON L.id = M.league_id WHERE M.season = '2009/2010' AND AVG(M.home_team_goal) > AVG(M.away_team_goal);\t----- bird -----\teuropean_football_2",
    "1043": "SELECT team_short_name FROM Team WHERE team_long_name = 'Queens Park Rangers';\t----- bird -----\teuropean_football_2",
    "1044": "SELECT * FROM Player WHERE substr(birthday,1,7) AS 'year-month',WHERE year = '1970' AND month = '10';\t----- bird -----\teuropean_football_2",
    "1045": "SELECT T1.attacking_work_rate FROM Player_Attributes AS T1 JOIN Player AS T2 ON T1.player_fifa_api_id = T2.player_fifa_api_id WHERE T2.player_name = 'Franco Zennaro';\t----- bird -----\teuropean_football_2",
    "1046": "SELECT buildUpPlayPositioningClass FROM Team_Attributes WHERE team_long_name = 'ADO Den Haag' LIMIT 1;\t----- bird -----\teuropean_football_2",
    "1047": "SELECT heading_accuracy FROM Player_Attributes WHERE player_name = 'Francois Affolter' AND date = '2014-09-18 00:00:00';\t----- bird -----\teuropean_football_2",
    "1048": "SELECT T1.overall_rating FROM Player_Attributes AS T1 INNER JOIN Player AS T2 ON T1.player_fifa_api_id = T2.player_fifa_api_id WHERE T2.player_name = 'Gabriel Tamas' AND strftime('%Y', T1.date) = '2011';\t----- bird -----\teuropean_football_2",
    "1049": "SELECT count(*) FROM Match WHERE league_id = (SELECT id FROM League WHERE name = 'Scotland Premier League') AND season = '2015/2016';\t----- bird -----\teuropean_football_2",
    "1050": "SELECT preferred_foot FROM Player_Attributes ORDER BY birthday ASC LIMIT 1;\t----- bird -----\teuropean_football_2",
    "1051": "SELECT player_name FROM Player WHERE potential = (SELECT MAX(potential) FROM Player_Attributes);\t----- bird -----\teuropean_football_2",
    "1052": "SELECT count(*) FROM Player_Attributes WHERE weight < 130 AND preferred_foot = 'left';\t----- bird -----\teuropean_football_2",
    "1053": "SELECT team_short_name FROM Team_Attributes WHERE chanceCreationPassingClass = 'Risky';\t----- bird -----\teuropean_football_2",
    "1054": "SELECT T1.defensive_work_rate FROM Player_Attributes AS T1 INNER JOIN Player AS T2 ON T1.player_fifa_api_id = T2.player_fifa_api_id WHERE T2.player_name = 'David Wilson';\t----- bird -----\teuropean_football_2",
    "1055": "SELECT birthday FROM Player WHERE player_api_id = (SELECT player_fifa_api_id FROM Player_Attributes ORDER BY overall_rating DESC LIMIT 1);\t----- bird -----\teuropean_football_2",
    "1056": "SELECT T1.name FROM League AS T1 JOIN Country AS T2 ON T1.country_id = T2.id WHERE T2.name = 'Netherlands';\t----- bird -----\teuropean_football_2",
    "1057": "SELECT AVG(home_team_goal) FROM Match WHERE country_id IN (SELECT id FROM Country WHERE name = 'Poland') AND season = '2010/2011';\t----- bird -----\teuropean_football_2",
    "1058": "SELECT P.player_name FROM Player P JOIN Player_Attributes PA ON P.player_api_id = PA.player_api_id ORDER BY AVG(PA.finishing) DESC LIMIT 1;\t----- bird -----\teuropean_football_2",
    "1059": "SELECT player_name FROM Player WHERE height > 180;\t----- bird -----\teuropean_football_2",
    "1060": "SELECT COUNT(*) FROM Player WHERE strftime('%Y', birthday) > '1990';\t----- bird -----\teuropean_football_2",
    "1061": "SELECT count(*) FROM Player WHERE player_name LIKE 'Adam%' AND weight > 170;\t----- bird -----\teuropean_football_2",
    "1062": "SELECT p.player_name FROM Player_Attributes AS pa JOIN Player AS p ON pa.player_fifa_api_id = p.player_fifa_api_id WHERE pa.overall_rating > 80 AND strftime('%Y', pa.date) BETWEEN '2008' AND '2010';\t----- bird -----\teuropean_football_2",
    "1063": "SELECT potential FROM Player_Attributes WHERE player_name = 'Aaron Doran' LIMIT 1;\t----- bird -----\teuropean_football_2",
    "1064": "SELECT * FROM Player_Attributes WHERE preferred_foot = 'left';\t----- bird -----\teuropean_football_2",
    "1065": "SELECT team_long_name FROM Team_Attributes WHERE buildUpPlaySpeedClass = 'Fast';\t----- bird -----\teuropean_football_2",
    "1066": "SELECT buildUpPlayPassingClass FROM Team_Attributes WHERE team_short_name = 'CLB' LIMIT 1;\t----- bird -----\teuropean_football_2",
    "1067": "SELECT team_short_name FROM Team_Attributes WHERE buildUpPlayPassing > 70;\t----- bird -----\teuropean_football_2",
    "1068": "SELECT AVG(T1.overall_rating) FROM Player_Attributes AS T1 INNER JOIN Player AS T2 ON T1.player_fifa_api_id = T2.player_fifa_api_id WHERE strftime('%Y', T1.date) >= '2010' AND strftime('%Y', T1.date) <= '2015' AND T2.height > 170;\t----- bird -----\teuropean_football_2",
    "1069": "SELECT player_name FROM Player ORDER BY height ASC LIMIT 1;\t----- bird -----\teuropean_football_2",
    "1070": "SELECT T1.name FROM Country AS T1 JOIN League AS T2 ON T1.id = T2.country_id WHERE T2.name = 'Italy Serie A';\t----- bird -----\teuropean_football_2",
    "1071": "SELECT team_short_name FROM Team_Attributes WHERE buildUpPlaySpeed = 31 AND buildUpPlayDribbling = 53 AND buildUpPlayPassing = 32;\t----- bird -----\teuropean_football_2",
    "1072": "SELECT AVG(overall_rating) FROM Player_Attributes WHERE player_api_id IN (SELECT player_api_id FROM Player WHERE player_name = 'Aaron Doran');\t----- bird -----\teuropean_football_2",
    "1073": "SELECT count(*) FROM Match WHERE league_id IN (SELECT id FROM League WHERE name = 'Germany 1. Bundesliga') AND strftime('%Y-%m', date) BETWEEN '2008-08' AND '2008-10';\t----- bird -----\teuropean_football_2",
    "1074": "SELECT team_short_name FROM Team WHERE team_api_id IN (SELECT home_team_api_id FROM Match WHERE home_team_goal = 10);\t----- bird -----\teuropean_football_2",
    "1075": "SELECT player_name FROM Player WHERE potential = 61 AND balance = (SELECT MAX(balance) FROM Player_Attributes);\t----- bird -----\teuropean_football_2",
    "1076": "SELECT SUBTRACT(AVG(ball_control WHERE player_name = 'Abdou Diallo'), AVG(ball_control WHERE player_name = 'Aaron Appindangoye')) FROM Player_Attributes;\t----- bird -----\teuropean_football_2",
    "1077": "SELECT team_long_name FROM Team WHERE team_short_name = 'GEN';\t----- bird -----\teuropean_football_2",
    "1078": "SELECT player_name FROM Player WHERE player_name IN ('Aaron Lennon', 'Abdelaziz Barrada') ORDER BY birthday DESC LIMIT 1;\t----- bird -----\teuropean_football_2",
    "1079": "SELECT player_name FROM Player ORDER BY height DESC LIMIT 1;\t----- bird -----\teuropean_football_2",
    "1080": "SELECT COUNT(*) FROM Player_Attributes WHERE preferred_foot = 'left' AND attacking_work_rate = 'low';\t----- bird -----\teuropean_football_2",
    "1081": "SELECT T1.name FROM Country AS T1 JOIN League AS T2 ON T1.id = T2.country_id WHERE T2.name = 'Belgium Jupiler League';\t----- bird -----\teuropean_football_2",
    "1082": "SELECT L.name FROM League AS L JOIN Country AS C ON L.country_id = C.id WHERE C.name = 'Germany';\t----- bird -----\teuropean_football_2",
    "1083": "SELECT player_name FROM Player WHERE id = (SELECT id FROM Player_Attributes ORDER BY overall_rating DESC LIMIT 1);\t----- bird -----\teuropean_football_2",
    "1084": "SELECT COUNT(DISTINCT id) FROM Player_Attributes WHERE strftime('%Y', birthday) < '1986' AND defensive_work_rate = 'high';\t----- bird -----\teuropean_football_2",
    "1085": "SELECT player_name FROM Player WHERE player_name IN ('Alexis', 'Ariel Borysiuk', 'Arouna Kone') ORDER BY crossing DESC LIMIT 1;\t----- bird -----\teuropean_football_2",
    "1086": "SELECT heading_accuracy FROM Player_Attributes WHERE player_name = 'Ariel Borysiuk' LIMIT 1;\t----- bird -----\teuropean_football_2",
    "1087": "SELECT COUNT(Player.id) FROM Player WHERE height > 180 AND Player_Attributes.volleys > 70;\t----- bird -----\teuropean_football_2",
    "1088": "SELECT p.player_name FROM Player AS p JOIN Player_Attributes AS pa ON p.player_fifa_api_id = pa.player_fifa_api_id WHERE pa.volleys > 70 AND pa.dribbling > 70;\t----- bird -----\teuropean_football_2",
    "1089": "SELECT count(*) FROM Match WHERE country_id = (SELECT id FROM Country WHERE name = 'Belgium') AND season = '2008/2009';\t----- bird -----\teuropean_football_2",
    "1090": "SELECT T1.long_passing FROM Player_Attributes AS T1 JOIN Player AS T2 ON T1.player_fifa_api_id = T2.player_fifa_api_id ORDER BY T2.birthday ASC LIMIT 1;\t----- bird -----\teuropean_football_2",
    "1091": "SELECT count(*) FROM Match WHERE league_id IN (SELECT id FROM League WHERE name = 'Belgium Jupiler League') AND SUBSTR(date, 1, 7) = '2009-04';\t----- bird -----\teuropean_football_2",
    "1092": "SELECT name FROM League WHERE id IN (SELECT league_id FROM Match WHERE season = '2008/2009' GROUP BY league_id ORDER BY COUNT(*) DESC LIMIT 1);\t----- bird -----\teuropean_football_2",
    "1093": "SELECT AVG(overall_rating) FROM Player_Attributes WHERE player_api_id IN (SELECT player_api_id FROM Player WHERE strftime('%Y', birthday) < '1986');\t----- bird -----\teuropean_football_2",
    "1094": "SELECT (SELECT (overall_rating) FROM Player_Attributes WHERE player_name = 'Ariel Borysiuk') * (DIVIDE(SUBTRACT((SELECT overall_rating FROM Player_Attributes WHERE player_name = 'Ariel Borysiuk'), (SELECT overall_rating FROM Player_Attributes WHERE player_name = 'Paulin Puel')), (SELECT overall_rating FROM Player_Attributes WHERE player_name = 'Paulin Puel'))) * 100;\t----- bird -----\teuropean_football_2",
    "1095": "SELECT AVG(buildUpPlaySpeed) FROM Team_Attributes WHERE team_long_name = 'Heart of Midlothian';\t----- bird -----\teuropean_football_2",
    "1096": "SELECT AVG(T1.overall_rating) FROM Player_Attributes AS T1 INNER JOIN Player AS T2 ON T1.player_fifa_api_id = T2.player_fifa_api_id WHERE T2.player_name = 'Pietro Marino';\t----- bird -----\teuropean_football_2",
    "1097": "SELECT SUM(T1.crossing) FROM Player_Attributes AS T1 INNER JOIN Player AS T2 ON T1.player_fifa_api_id = T2.player_fifa_api_id WHERE T2.player_name = 'Aaron Lennox';\t----- bird -----\teuropean_football_2",
    "1098": "SELECT MAX(chanceCreationPassing), chanceCreationPassingClass FROM Team_Attributes WHERE team_long_name = 'Ajax';\t----- bird -----\teuropean_football_2",
    "1099": "SELECT preferred_foot FROM Player_Attributes WHERE player_name = 'Abdou Diallo' LIMIT 1;\t----- bird -----\teuropean_football_2",
    "1100": "SELECT MAX(overall_rating) FROM Player_Attributes WHERE player_api_id = (SELECT player_api_id FROM Player WHERE player_name = 'Dorlan Pabon');\t----- bird -----\teuropean_football_2",
    "1101": "SELECT AVG(away_team_goal) FROM Match WHERE away_team_api_id IN (SELECT team_api_id FROM Team WHERE team_long_name = 'Parma') AND country_id IN (SELECT id FROM Country WHERE name = 'Italy');\t----- bird -----\teuropean_football_2",
    "1102": "SELECT p.player_name FROM Player_Attributes pa JOIN Player p ON pa.player_fifa_api_id = p.player_fifa_api_id WHERE pa.overall_rating = 77 AND pa.date LIKE '2016-06-23%' ORDER BY p.birthday ASC LIMIT 1;\t----- bird -----\teuropean_football_2",
    "1103": "SELECT overall_rating FROM Player_Attributes WHERE player_name = 'Aaron Mooy' AND date LIKE '2016-02-04%';\t----- bird -----\teuropean_football_2",
    "1104": "SELECT potential FROM Player_Attributes WHERE player_name = 'Francesco Parravicini' AND date = '2010-08-30 00:00:00';\t----- bird -----\teuropean_football_2",
    "1105": "SELECT attacking_work_rate FROM Player_Attributes WHERE player_name = 'Francesco Migliore' AND date LIKE '2015-05-01%';\t----- bird -----\teuropean_football_2",
    "1106": "SELECT defensive_work_rate FROM Player_Attributes WHERE player_name = 'Kevin Berigaud' AND date = '2013-02-22 00:00:00';\t----- bird -----\teuropean_football_2",
    "1107": "SELECT date FROM Player_Attributes WHERE player_name = 'Kevin Constant' ORDER BY crossing DESC LIMIT 1;\t----- bird -----\teuropean_football_2",
    "1108": "SELECT buildUpPlaySpeedClass FROM Team_Attributes WHERE team_long_name = 'Willem II' AND date = '2012-02-22';\t----- bird -----\teuropean_football_2",
    "1109": "SELECT buildUpPlayDribblingClass FROM Team_Attributes WHERE team_short_name = 'LEI' AND date = '2015-09-10 00:00:00';\t----- bird -----\teuropean_football_2",
    "1110": "SELECT buildUpPlayPassingClass FROM Team_Attributes WHERE team_long_name = 'FC Lorient' AND date LIKE '2010-02-22%';\t----- bird -----\teuropean_football_2",
    "1111": "SELECT chanceCreationPassingClass FROM Team_Attributes WHERE team_long_name = 'PEC Zwolle' AND date = '2013-09-20 00:00:00';\t----- bird -----\teuropean_football_2",
    "1112": "SELECT chanceCreationCrossingClass FROM Team_Attributes WHERE team_long_name = 'Hull City' AND date = '2010-02-22 00:00:00';\t----- bird -----\teuropean_football_2",
    "1113": "SELECT defenceAggressionClass FROM Team_Attributes WHERE team_long_name = 'Hannover 96' AND date LIKE '2015-09-10%';\t----- bird -----\teuropean_football_2",
    "1114": "SELECT avg(T1.overall_rating) FROM Player_Attributes AS T1 INNER JOIN Player AS T2 ON T1.player_fifa_api_id = T2.player_fifa_api_id WHERE T2.player_name = 'Marko Arnautovic' AND T1.date BETWEEN '2007-02-22' AND '2016-04-21';\t----- bird -----\teuropean_football_2",
    "1115": "SELECT DIVIDE(SUBTRACT((SELECT overall_rating FROM Player_Attributes WHERE player_name = 'Landon Donovan' AND date = '2013-07-12'), (SELECT overall_rating FROM Player_Attributes WHERE player_name = 'Jordan Bowery' AND date = '2013-07-12')), (SELECT overall_rating FROM Player_Attributes WHERE player_name = 'Landon Donovan' AND date = '2013-07-12')) * 100;\t----- bird -----\teuropean_football_2",
    "1116": "SELECT player_name FROM Player ORDER BY height DESC LIMIT 1;\t----- bird -----\teuropean_football_2",
    "1117": "SELECT player_api_id FROM Player ORDER BY weight DESC LIMIT 10;\t----- bird -----\teuropean_football_2",
    "1118": "SELECT player_name FROM Player WHERE strftime('%Y', 'now') - strftime('%Y', birthday) > 34;\t----- bird -----\teuropean_football_2",
    "1119": "SELECT SUM(T1.home_team_goal) FROM Match AS T1 JOIN Player AS T2 ON T1.home_player_X1 = T2.id WHERE T2.player_name = 'Aaron Lennon';\t----- bird -----\teuropean_football_2",
    "1120": "SELECT SUM(away_team_goal) FROM Match WHERE away_player_X1 IN (SELECT id FROM Player WHERE player_name = 'Daan Smith') OR away_player_X2 IN (SELECT id FROM Player WHERE player_name = 'Daan Smith') OR away_player_X3 IN (SELECT id FROM Player WHERE player_name = 'Daan Smith') OR away_player_X4 IN (SELECT id FROM Player WHERE player_name = 'Daan Smith') OR away_player_X5 IN (SELECT id FROM Player WHERE player_name = 'Daan Smith') OR away_player_X6 IN (SELECT id FROM Player WHERE player_name = 'Daan Smith') OR away_player_X7 IN (SELECT id FROM Player WHERE player_name = 'Daan Smith') OR away_player_X8 IN (SELECT id FROM Player WHERE player_name = 'Daan Smith') OR away_player_X9 IN (SELECT id FROM Player WHERE player_name = 'Daan Smith') OR away_player_X10 IN (SELECT id FROM Player WHERE player_name = 'Daan Smith') OR away_player_X11 IN (SELECT id FROM Player WHERE player_name = 'Daan Smith') OR away_player_Y1 IN (SELECT id FROM Player WHERE player_name = 'Daan Smith') OR away_player_Y2 IN (SELECT id FROM Player WHERE player_name = 'Daan Smith') OR away_player_Y3 IN (SELECT id FROM Player WHERE player_name = 'Daan Smith') OR away_player_Y4 IN (SELECT id FROM Player WHERE player_name = 'Daan Smith') OR away_player_Y5 IN (SELECT id FROM Player WHERE player_name = 'Daan Smith') OR away_player_Y6 IN (SELECT id FROM Player WHERE player_name = 'Daan Smith') OR away_player_Y7 IN (SELECT id FROM Player WHERE player_name = 'Daan Smith') OR away_player_Y8 IN (SELECT id FROM Player WHERE player_name = 'Daan Smith') OR away_player_Y9 IN (SELECT id FROM Player WHERE player_name = 'Daan Smith') OR away_player_Y10 IN (SELECT id FROM Player WHERE player_name = 'Daan Smith') OR away_player_Y11 IN (SELECT id FROM Player WHERE player_name = 'Daan Smith') OR away_player_X1 IN (SELECT id FROM Player WHERE player_name = 'Filipe Ferreira') OR away_player_X2 IN (SELECT id FROM Player WHERE player_name = 'Filipe Ferreira') OR away_player_X3 IN (SELECT id FROM Player WHERE player_name = 'Filipe Ferreira') OR away_player_X4 IN (SELECT id FROM Player WHERE player_name = 'Filipe Ferreira') OR away_player_X5 IN (SELECT id FROM Player WHERE player_name = 'Filipe Ferreira') OR away_player_X6 IN (SELECT id FROM Player WHERE player_name = 'Filipe Ferreira') OR away_player_X7 IN (SELECT id FROM Player WHERE player_name = 'Filipe Ferreira') OR away_player_X8 IN (SELECT id FROM Player WHERE player_name = 'Filipe Ferreira') OR away_player_X9 IN (SELECT id FROM Player WHERE player_name = 'Filipe Ferreira') OR away_player_X10 IN (SELECT id FROM Player WHERE player_name = 'Filipe Ferreira') OR away_player_X11 IN (SELECT id FROM Player WHERE player_name = 'Filipe Ferreira') OR away_player_Y1 IN (SELECT id FROM Player WHERE player_name = 'Filipe Ferreira') OR away_player_Y2 IN (SELECT id FROM Player WHERE player_name = 'Filipe Ferreira') OR away_player_Y3 IN (SELECT id FROM Player WHERE player_name = 'Filipe Ferreira') OR away_player_Y4 IN (SELECT id FROM Player WHERE player_name = 'Filipe Ferreira') OR away_player_Y5 IN (SELECT id FROM Player WHERE player_name = 'Filipe Ferreira') OR away_player_Y6 IN (SELECT id FROM Player WHERE player_name = 'Filipe Ferreira') OR away_player_Y7 IN (SELECT id FROM Player WHERE player_name = 'Filipe Ferreira') OR away_player_Y8 IN (SELECT id FROM Player WHERE player_name = 'Filipe Ferreira') OR away_player_Y9 IN (SELECT id FROM Player WHERE player_name = 'Filipe Ferreira') OR away_player_Y10 IN (SELECT id FROM Player WHERE player_name = 'Filipe Ferreira') OR away_player_Y11 IN (SELECT id FROM Player WHERE player_name = 'Filipe Ferreira') ;\t----- bird -----\teuropean_football_2",
    "1121": "SELECT SUM(T1.home_team_goal) FROM Match AS T1 JOIN Player AS T2 ON T1.home_player_X1 = T2.id WHERE (strftime('%J', 'now') - strftime('%J', T2.birthday) / 365.25) <= 30;\t----- bird -----\teuropean_football_2",
    "1122": "SELECT p.player_name FROM Player AS p JOIN Player_Attributes AS pa ON p.player_api_id = pa.player_api_id ORDER BY pa.overall_rating DESC LIMIT 1;\t----- bird -----\teuropean_football_2",
    "1123": "SELECT player_name FROM Player WHERE id IN (SELECT player_id FROM Player_Attributes WHERE potential = (SELECT MAX(potential) FROM Player_Attributes));\t----- bird -----\teuropean_football_2",
    "1124": "SELECT p.player_name FROM Player_Attributes pa JOIN Player p ON pa.player_fifa_api_id = p.player_fifa_api_id WHERE pa.attacking_work_rate = 'high';\t----- bird -----\teuropean_football_2",
    "1125": "SELECT player_name FROM Player WHERE finishing = 1 ORDER BY birthday ASC LIMIT 1;\t----- bird -----\teuropean_football_2",
    "1126": "SELECT player_name FROM Player WHERE country_id IN (SELECT id FROM Country WHERE name = 'Belgium');\t----- bird -----\teuropean_football_2",
    "1127": "SELECT T1.name FROM Country AS T1 JOIN Player AS T2 ON T1.id = T2.country_id JOIN Player_Attributes AS T3 ON T2.id = T3.player_fifa_api_id WHERE T3.vision >= 90;\t----- bird -----\teuropean_football_2",
    "1128": "SELECT T1.name FROM Country AS T1 JOIN Player AS T2 ON T1.id = T2.country_id GROUP BY T1.id ORDER BY AVG(T2.weight) DESC LIMIT 1;\t----- bird -----\teuropean_football_2",
    "1129": "SELECT team_long_name FROM Team_Attributes WHERE buildUpPlaySpeedClass = 'Slow';\t----- bird -----\teuropean_football_2",
    "1130": "SELECT team_short_name FROM Team_Attributes WHERE chanceCreationPassingClass = 'Safe';\t----- bird -----\teuropean_football_2",
    "1131": "SELECT AVG(height) AS average_height FROM Player WHERE Player.country_id IN (SELECT id FROM Country WHERE name = 'Italy');\t----- bird -----\teuropean_football_2",
    "1132": "SELECT player_name FROM Player WHERE height > 180 ORDER BY player_name ASC LIMIT 3;\t----- bird -----\teuropean_football_2",
    "1133": "SELECT COUNT(*) FROM Player WHERE player_name LIKE 'Aaron%' AND birthday > '1990';\t----- bird -----\teuropean_football_2",
    "1134": "SELECT ABS((SELECT jumping FROM Player_Attributes WHERE id = 6) - (SELECT jumping FROM Player_Attributes WHERE id = 23));\t----- bird -----\teuropean_football_2",
    "1135": "SELECT id FROM Player_Attributes WHERE preferred_foot = 'right' ORDER BY potential ASC LIMIT 5;\t----- bird -----\teuropean_football_2",
    "1136": "SELECT count(*) FROM Player_Attributes WHERE crossing = (SELECT MAX(crossing) FROM Player_Attributes) AND preferred_foot = 'left';\t----- bird -----\teuropean_football_2",
    "1137": "SELECT CAST(COUNT(id) AS REAL) * 100 / (SELECT COUNT(id) FROM Player_Attributes) FROM Player_Attributes WHERE strength > 80 AND stamina > 80;\t----- bird -----\teuropean_football_2",
    "1138": "SELECT T1.name FROM Country AS T1 JOIN League AS T2 ON T1.id = T2.country_id WHERE T2.name = 'Ekstraklasa' AND T1.name = 'Poland';\t----- bird -----\teuropean_football_2",
    "1139": "SELECT home_team_goal, away_team_goal FROM Match WHERE date LIKE '2008-09-24%' AND league_id IN (SELECT id FROM League WHERE name = 'Belgium Jupiler League');\t----- bird -----\teuropean_football_2",
    "1140": "SELECT sprint_speed, agility, acceleration FROM Player_Attributes WHERE player_name = 'Alexis Blin' LIMIT 1;\t----- bird -----\teuropean_football_2",
    "1141": "SELECT buildUpPlaySpeedClass FROM Team_Attributes WHERE team_long_name = 'KSV Cercle Brugge' LIMIT 1;\t----- bird -----\teuropean_football_2",
    "1142": "SELECT COUNT(*) FROM Match WHERE season = '2015/2016' AND league_id IN (SELECT id FROM League WHERE name = 'Serie A' AND country_id IN (SELECT id FROM Country WHERE name = 'Italy'));\t----- bird -----\teuropean_football_2",
    "1143": "SELECT MAX(home_team_goal) FROM Match WHERE league_id IN (SELECT id FROM League WHERE name = 'Eredivisie' AND country_id IN (SELECT id FROM Country WHERE name = 'Netherlands'));\t----- bird -----\teuropean_football_2",
    "1144": "SELECT finishing, curve FROM Player_Attributes WHERE player_api_id = (SELECT player_api_id FROM Player ORDER BY weight DESC LIMIT 1);\t----- bird -----\teuropean_football_2",
    "1145": "SELECT League.name FROM League JOIN Match ON League.id = Match.league_id WHERE Match.season = '2015/2016' GROUP BY League.name ORDER BY COUNT(Match.id) DESC LIMIT 4;\t----- bird -----\teuropean_football_2",
    "1146": "SELECT T1.team_long_name FROM Team AS T1 INNER JOIN Match AS T2 ON T1.team_api_id = T2.away_team_api_id ORDER BY T2.away_team_goal DESC LIMIT 1;\t----- bird -----\teuropean_football_2",
    "1147": "SELECT player_name FROM Player WHERE id = (SELECT id FROM Player_Attributes ORDER BY overall_rating DESC LIMIT 1);\t----- bird -----\teuropean_football_2",
    "1148": "SELECT CAST(SUM(CASE WHEN height < 180 AND overall_rating > 70 THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(id);\t----- bird -----\teuropean_football_2",
    "1149": "SELECT ABS((COUNT(CASE WHEN SEX = 'M' AND Admission = '+' THEN ID ELSE NULL END) - COUNT(CASE WHEN SEX = 'M' AND Admission = '-' THEN ID ELSE NULL END)) / COUNT(CASE WHEN SEX = 'M' THEN ID ELSE NULL END);\t----- bird -----\tthrombosis_prediction",
    "1150": "SELECT CAST(SUM(CASE WHEN SEX = 'F' AND year(Birthday) > '1930' THEN 1 ELSE 0 END) AS REAL) / SUM(CASE WHEN SEX = 'F' THEN 1 ELSE 0 END);\t----- bird -----\tthrombosis_prediction",
    "1151": "SELECT CAST(SUM(CASE WHEN T1.Admission = '+' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(T1.ID) FROM Patient AS T1 WHERE T1.Birthday BETWEEN '1930-01-01' AND '1940-12-31';\t----- bird -----\tthrombosis_prediction",
    "1152": "SELECT DIVIDE(COUNT(T1.ID) WHERE T1.Diagnosis = 'SLE' AND T1.Admission = '-', COUNT(T1.ID) WHERE T1.Diagnosis = 'SLE' AND T1.Admission = '+') FROM Patient AS T1;\t----- bird -----\tthrombosis_prediction",
    "1153": "SELECT T1.Diagnosis, T2.Date FROM Patient AS T1 JOIN Examination AS T1 ON T1.ID = T1.ID WHERE T1.ID = '30609' UNION SELECT T2.Date FROM Laboratory AS T2 WHERE T2.ID = '30609';\t----- bird -----\tthrombosis_prediction",
    "1154": "SELECT P.SEX, P.Birthday, E.`Examination Date`, E.Symptoms FROM Patient AS P JOIN Examination AS E ON P.ID = E.ID WHERE P.ID = '163109';\t----- bird -----\tthrombosis_prediction",
    "1155": "SELECT Patient.ID, Patient.SEX, Patient.Birthday FROM Patient JOIN Laboratory ON Patient.ID = Laboratory.ID WHERE Laboratory.LDH > 500;\t----- bird -----\tthrombosis_prediction",
    "1156": "SELECT P.ID, SUBTRACT(year(current_timestamp), year(P.Birthday)) AS age FROM Patient AS P JOIN Examination AS E ON P.ID = E.ID WHERE E.RVVT = '+';\t----- bird -----\tthrombosis_prediction",
    "1157": "SELECT p.ID, p.SEX, p.Diagnosis FROM Patient p JOIN Examination e ON p.ID = e.ID WHERE e.Thrombosis = 2;\t----- bird -----\tthrombosis_prediction",
    "1158": "SELECT ID FROM Patient WHERE Birthday = '1937' AND EXISTS (SELECT 1 FROM Laboratory WHERE Patient.ID = Laboratory.ID AND `T-CHO` >= 250);\t----- bird -----\tthrombosis_prediction",
    "1159": "SELECT P.ID, P.SEX, P.Diagnosis FROM Patient P JOIN Laboratory L ON P.ID = L.ID WHERE L.ALB < 3.5;\t----- bird -----\tthrombosis_prediction",
    "1160": "SELECT CAST(SUM(CASE WHEN P.SEX = 'F' AND L.TP < '6.0' OR L.TP > '8.5' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(P.ID) FROM Patient AS P JOIN Laboratory AS L ON P.ID = L.ID;\t----- bird -----\tthrombosis_prediction",
    "1161": "SELECT AVG(aCL IgG) FROM Examination WHERE Thrombosis = 'TRUE' AND SUBTRACT(year(current_timestamp), year(Birthday)) >= 50 AND Patient.Admission = '+';\t----- bird -----\tthrombosis_prediction",
    "1162": "SELECT count(*) FROM Patient WHERE SEX = 'F' AND year(Description) = '1997' AND Admission = '-';\t----- bird -----\tthrombosis_prediction",
    "1163": "SELECT MIN(SUBTRACT(YEAR(`First Date`),YEAR(Birthday))) FROM Patient;\t----- bird -----\tthrombosis_prediction",
    "1164": "SELECT COUNT(T1.ID) FROM Patient AS T1 JOIN Examination AS T2 ON T1.ID = T2.ID WHERE T2.Thrombosis = '1' AND T1.SEX = 'F' AND STRFTIME('%Y', T2.`Examination Date`) = '1997';\t----- bird -----\tthrombosis_prediction",
    "1165": "SELECT age_gap FROM (SELECT SUBTRACT(MAX(year(Birthday)) - MIN(year(Birthday))) AS age_gap FROM Patient WHERE ID IN (SELECT ID FROM Laboratory WHERE TG >= 200));\t----- bird -----\tthrombosis_prediction",
    "1166": "SELECT T1.Symptoms, T1.Diagnosis FROM Examination AS T1 JOIN Patient AS T2 ON T1.ID = T2.ID ORDER BY T2.Birthday ASC LIMIT 1;\t----- bird -----\tthrombosis_prediction",
    "1167": "SELECT CAST(DIVIDE(COUNT(Patient.ID), 12) AS REAL) FROM Patient WHERE Patient.Birthday BETWEEN '1998-01-01' AND '1998-12-31' AND SEX = 'M';\t----- bird -----\tthrombosis_prediction",
    "1168": "SELECT L.Date, (SELECT (year(`First Date`)) - year(Birthday) FROM Patient WHERE Diagnosis = 'SJS' ORDER BY Birthday ASC LIMIT 1) FROM Laboratory L JOIN Patient P ON L.ID = P.ID WHERE P.Diagnosis = 'SJS' ORDER BY Birthday ASC LIMIT 1;\t----- bird -----\tthrombosis_prediction",
    "1169": "SELECT CAST(SUM(CASE WHEN SEX = 'M' THEN 1 ELSE 0 END) AS REAL) / CAST(SUM(CASE WHEN SEX = 'F' THEN 1 ELSE 0 END) AS REAL) FROM Patient WHERE UA <= '8.0' AND SEX = 'M' OR UA <= '6.5' AND SEX = 'F';\t----- bird -----\tthrombosis_prediction",
    "1170": "SELECT count(*) FROM Patient WHERE SUBTRACT(year(`Examination Date`), year(`First Date`)) >= 1;\t----- bird -----\tthrombosis_prediction",
    "1171": "SELECT COUNT(T1.ID) FROM Patient AS T1 JOIN Examination AS T2 ON T1.ID = T2.ID WHERE YEAR(T1.Birthday) < 18 AND YEAR(T2.\"Examination Date\") BETWEEN 1990 AND 1993;\t----- bird -----\tthrombosis_prediction",
    "1172": "SELECT COUNT(P.ID) FROM Patient AS P WHERE P.SEX = 'M' AND EXISTS (SELECT 1 FROM Laboratory AS L WHERE L.ID = P.ID AND L.T-BIL >= '2.0');\t----- bird -----\tthrombosis_prediction",
    "1173": "SELECT Diagnosis FROM Examination WHERE `Examination Date` BETWEEN '1985-01-01' AND '1995-12-31' GROUP BY Diagnosis ORDER BY COUNT(*) DESC LIMIT 1;\t----- bird -----\tthrombosis_prediction",
    "1174": "SELECT AVG(SUBTRACT('1999', year(Birthday))) FROM Patient JOIN Laboratory ON Patient.ID = Laboratory.ID WHERE Date BETWEEN '1991-10-01' AND '1991-10-30';\t----- bird -----\tthrombosis_prediction",
    "1175": "SELECT Patient.Diagnosis, SUBTRACT(year(`Examination Date`), year(Birthday)) FROM Examination JOIN Patient ON Examination.ID = Patient.ID WHERE HGB = (SELECT MAX(HGB) FROM Examination);\t----- bird -----\tthrombosis_prediction",
    "1176": "SELECT ANA FROM Examination WHERE ID = 3605340 AND `Examination Date` = '1996-12-02';\t----- bird -----\tthrombosis_prediction",
    "1177": "SELECT T-CHO <= 250 FROM Laboratory WHERE ID = 2927464 AND Date = '1995-09-04';\t----- bird -----\tthrombosis_prediction",
    "1178": "SELECT P.SEX FROM Patient AS P JOIN Examination AS E ON P.ID = E.ID WHERE E.Diagnosis = 'AORTITIS' ORDER BY P.First Date ASC LIMIT 1;\t----- bird -----\tthrombosis_prediction",
    "1179": "SELECT E.aCL_IgM FROM Examination E JOIN Patient P ON E.ID = P.ID WHERE P.Diagnosis = 'SLE' AND P.Description = '1994-02-19' AND E.`Examination Date` = '1993/11/12';\t----- bird -----\tthrombosis_prediction",
    "1180": "SELECT P.SEX FROM Patient AS P JOIN Laboratory AS L ON P.ID = L.ID WHERE L.Date = '1992-06-12' AND L.GPT = 9;\t----- bird -----\tthrombosis_prediction",
    "1181": "SELECT SUBTRACT(year(Date), year(Birthday)) FROM Patient JOIN Laboratory ON Patient.ID = Laboratory.ID WHERE Date = '1991-10-21' AND UA = '8.4';\t----- bird -----\tthrombosis_prediction",
    "1182": "SELECT COUNT(L.ID) FROM Laboratory L JOIN Patient P ON L.ID = P.ID WHERE P.First Date = '1991-06-13' AND P.Diagnosis = 'SJS' AND L.Date = '1995-01-01';\t----- bird -----\tthrombosis_prediction",
    "1183": "SELECT P.Diagnosis FROM Patient AS P JOIN Examination AS E ON P.ID = E.ID WHERE E.`Examination Date` = '1997-01-27' AND E.Diagnosis LIKE '%SLE%';\t----- bird -----\tthrombosis_prediction",
    "1184": "SELECT T1.Symptoms FROM Examination AS T1 JOIN Patient AS T2 ON T1.ID = T2.ID WHERE T2.Birthday = '1959-03-01' AND T1.`Examination Date` = '1993-09-27';\t----- bird -----\tthrombosis_prediction",
    "1185": "SELECT SUBTRACT(SUM(CASE WHEN P.Birthday = '1959-02-18' AND L.Date LIKE '1981-11-%' THEN L.`T-CHO` ELSE 0 END), SUM(CASE WHEN P.Birthday = '1959-02-18' AND L.Date LIKE '1981-12-%' THEN L.`T-CHO` ELSE 0 END)) FROM Patient P JOIN Laboratory L ON P.ID = L.ID WHERE P.Birthday = '1959-02-18';\t----- bird -----\tthrombosis_prediction",
    "1186": "SELECT T1.ID FROM Patient AS T1 JOIN Examination AS T2 ON T1.ID = T2.ID WHERE T1.Diagnosis = 'Behcet' AND YEAR(T2.`Examination Date`) >= 1997 AND YEAR(T2.`Examination Date`) <= 1997;\t----- bird -----\tthrombosis_prediction",
    "1187": "SELECT T1.ID FROM Examination AS T1 JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T1.Examination Date BETWEEN '1987-07-06' AND '1996-01-31' AND T2.GPT > 30 AND T2.ALB < 4;\t----- bird -----\tthrombosis_prediction",
    "1188": "SELECT ID FROM Patient WHERE SEX = 'F' AND YEAR(Birthday) = 1964 AND Admission = '+';\t----- bird -----\tthrombosis_prediction",
    "1189": "SELECT COUNT(T1.ID) FROM Patient AS T1 JOIN Examination AS T2 ON T1.ID = T2.ID WHERE T2.Thrombosis = 2 AND T2.ANA = 'S' AND T2.\"aCL IgM\" > (SELECT AVG(\"aCL IgM\") * 1.2 FROM Examination);\t----- bird -----\tthrombosis_prediction",
    "1190": "SELECT CAST(SUM(CASE WHEN \"UA\" <= 6.5 THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(*) FROM Laboratory;\t----- bird -----\tthrombosis_prediction",
    "1191": "SELECT (SUM(CASE WHEN T1.Diagnosis = 'BEHCET' THEN 1 ELSE 0 END) * 1.0 / COUNT(T1.ID)) * 100 FROM Patient AS T1 WHERE T1.SEX = 'M' AND YEAR(T1.First Date) = 1981;\t----- bird -----\tthrombosis_prediction",
    "1192": "SELECT DISTINCT P.ID FROM Patient AS P JOIN Examination AS E ON P.ID = E.ID JOIN Laboratory AS L ON E.ID = L.ID WHERE P.Admission = '-' AND L.Date LIKE '1991-10%' AND L.T_BIL < 2.0;\t----- bird -----\tthrombosis_prediction",
    "1193": "SELECT COUNT(T1.ID) FROM Patient AS T1 JOIN Examination AS T2 ON T1.ID = T2.ID WHERE T1.SEX = 'F' AND T1.Birthday BETWEEN '1980-01-01' AND '1989-12-31' AND T2.ANA <> 'P';\t----- bird -----\tthrombosis_prediction",
    "1194": "SELECT P.SEX FROM Patient AS P JOIN Examination AS E ON P.ID = E.ID WHERE E.Diagnosis = 'PSS' AND EXISTS (SELECT 1 FROM Laboratory AS L WHERE L.ID = E.ID AND L.CRP > 2 AND L.CRE = 1 AND L.LDH = 123);\t----- bird -----\tthrombosis_prediction",
    "1195": "SELECT AVG(ALB) FROM Laboratory WHERE ID IN (SELECT ID FROM Patient WHERE SEX = 'F' AND ID IN (SELECT ID FROM Examination WHERE Thrombosis = 'SLE' AND PLT > 400));\t----- bird -----\tthrombosis_prediction",
    "1196": "SELECT SUBSTRING(Symptoms, 1, INSTR(Symptoms, ',', 1)) FROM Examination WHERE Diagnosis = 'SLE' GROUP BY Symptoms ORDER BY COUNT(*) DESC LIMIT 1;\t----- bird -----\tthrombosis_prediction",
    "1197": "SELECT P.First Date, P.Diagnosis FROM Patient AS P WHERE P.ID = 48473;\t----- bird -----\tthrombosis_prediction",
    "1198": "SELECT COUNT(P.ID) FROM Patient AS P WHERE P.SEX = 'F' AND P.Diagnosis = 'APS';\t----- bird -----\tthrombosis_prediction",
    "1199": "SELECT count(DISTINCT Patient.ID) FROM Patient JOIN Laboratory ON Patient.ID = Laboratory.ID WHERE YEAR(Laboratory.Date) = 1997 AND Laboratory.TP <= 6 OR Laboratory.TP >= 8.5;\t----- bird -----\tthrombosis_prediction",
    "1200": "SELECT CAST(SUM(CASE WHEN Symptoms LIKE '%thrombocytopenia%' THEN CASE WHEN Diagnosis LIKE '%SLE%' THEN 1 ELSE 0 END ELSE 0 END) AS REAL) / SUM(CASE WHEN Symptoms LIKE '%thrombocytopenia%' THEN 1 ELSE 0 END) * 100;\t----- bird -----\tthrombosis_prediction",
    "1201": "SELECT DIVIDE(SUM(CASE WHEN YEAR(Birthday) = 1980 AND Diagnosis = 'RA' AND SEX = 'F' THEN 1 ELSE 0 END), COUNT(CASE WHEN YEAR(Birthday) = 1980 AND Diagnosis = 'RA' THEN 1 ELSE 0 END)) * 100 FROM Patient;\t----- bird -----\tthrombosis_prediction",
    "1202": "SELECT count(*) FROM Patient WHERE SEX = 'M' AND ID IN (SELECT ID FROM Examination WHERE `Examination Date` BETWEEN '1995' AND '1997' AND Diagnosis = 'Behcet') AND Admission = '-';\t----- bird -----\tthrombosis_prediction",
    "1203": "SELECT COUNT(P.ID) FROM Patient AS P WHERE P.SEX = 'F' AND EXISTS (SELECT 1 FROM Laboratory AS L WHERE L.ID = P.ID AND L.WBC < 3.5);\t----- bird -----\tthrombosis_prediction",
    "1204": "SELECT DATEDIFF(`Examination Date`, `First Date`) FROM Examination JOIN Patient ON Examination.ID = Patient.ID WHERE Patient.ID = 821298 LIMIT 1;\t----- bird -----\tthrombosis_prediction",
    "1205": "SELECT CASE WHEN (6.5 > UA) AND (SEX = 'F') OR (8.0 > UA) AND (SEX = 'M') THEN 'Yes' ELSE 'No' END FROM Patient WHERE ID = 57266;\t----- bird -----\tthrombosis_prediction",
    "1206": "SELECT Date FROM Laboratory WHERE ID = '48473' AND GOT >= 60;\t----- bird -----\tthrombosis_prediction",
    "1207": "SELECT P.ID, P.SEX, P.Birthday FROM Patient P JOIN Laboratory L ON P.ID = L.ID WHERE L.GOT < 60 AND strftime('%Y', L.Date) = '1994';\t----- bird -----\tthrombosis_prediction",
    "1208": "SELECT P.ID FROM Patient AS P JOIN Laboratory AS L ON P.ID = L.ID WHERE P.SEX = 'M' AND L.GPT >= 60;\t----- bird -----\tthrombosis_prediction",
    "1209": "SELECT P.Diagnosis FROM Patient AS P JOIN Laboratory AS L ON P.ID = L.ID WHERE L.GPT > 60 ORDER BY P.Birthday ASC;\t----- bird -----\tthrombosis_prediction",
    "1210": "SELECT AVG(LDH) FROM Laboratory WHERE LDH < 500;\t----- bird -----\tthrombosis_prediction",
    "1211": "SELECT P.ID, SUBTRACT(year(current_timestamp), year(P.Birthday)) AS age FROM Patient P JOIN Laboratory L ON P.ID = L.ID WHERE L.LDH BETWEEN 600 AND 800;\t----- bird -----\tthrombosis_prediction",
    "1212": "SELECT P.Admission FROM Patient AS P JOIN Laboratory AS L ON P.ID = L.ID WHERE L.ALP < 300;\t----- bird -----\tthrombosis_prediction",
    "1213": "SELECT P.ID, L.ALP FROM Patient AS P JOIN Laboratory AS L ON P.ID = L.ID WHERE P.Birthday = '1982-04-01' AND L.ALP < 300;\t----- bird -----\tthrombosis_prediction",
    "1214": "SELECT ID, SEX, Birthday FROM Patient WHERE ID IN (SELECT PatientID FROM Laboratory WHERE TP < 6.0);\t----- bird -----\tthrombosis_prediction",
    "1215": "SELECT SUBTRACT(Laboratory.TP, 8.5) FROM Patient JOIN Laboratory ON Patient.ID = Laboratory.ID WHERE Patient.SEX = 'F' AND Laboratory.TP > 8.5;\t----- bird -----\tthrombosis_prediction",
    "1216": "SELECT P.Birthday FROM Patient AS P WHERE P.SEX = 'M' AND P.ID IN (SELECT ID FROM Laboratory WHERE ALB <= 3.5 OR ALB >= 5.5) ORDER BY P.Birthday DESC;\t----- bird -----\tthrombosis_prediction",
    "1217": "SELECT EXISTS (SELECT 1 FROM Patient WHERE YEAR(Birthday) = 1982 AND EXISTS (SELECT 1 FROM Laboratory WHERE Patient.ID = Laboratory.ID AND ALB BETWEEN 3.5 AND 5.5));\t----- bird -----\tthrombosis_prediction",
    "1218": "SELECT CAST(SUM(CASE WHEN P.SEX = 'F' AND L.UA > 8.0 THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(P.ID) FROM Patient AS P JOIN Laboratory AS L ON P.ID = L.ID;\t----- bird -----\tthrombosis_prediction",
    "1219": "SELECT AVG(L.UA) AS Average_UA_Index FROM Laboratory L JOIN Patient P ON L.ID = P.ID WHERE L.UA < CASE WHEN P.SEX = 'M' THEN 8.0 ELSE 6.5 END;\t----- bird -----\tthrombosis_prediction",
    "1220": "SELECT P.ID, P.SEX, P.Birthday FROM Patient AS P JOIN Laboratory AS L ON P.ID = L.ID WHERE L.UN = 29;\t----- bird -----\tthrombosis_prediction",
    "1221": "SELECT ID, SEX, Birthday FROM Patient WHERE Diagnosis = 'RA' AND ID IN (SELECT ID FROM Laboratory WHERE UN < 30);\t----- bird -----\tthrombosis_prediction",
    "1222": "SELECT count(*) FROM Patient WHERE Sex = 'M' AND ID IN (SELECT ID FROM Laboratory WHERE CRE >= 1.5);\t----- bird -----\tthrombosis_prediction",
    "1223": "SELECT CASE WHEN SUM(CASE WHEN P.SEX = 'M' AND L.CRE >= 1.5 THEN 1 ELSE 0 END) > SUM(CASE WHEN P.SEX = 'F' AND L.CRE >= 1.5 THEN 1 ELSE 0 END) THEN 'True' ELSE 'False' END FROM Patient AS P JOIN Laboratory AS L ON P.ID = L.ID;\t----- bird -----\tthrombosis_prediction",
    "1224": "SELECT P.ID, P.SEX, P.Birthday FROM Patient P JOIN Laboratory L ON P.ID = L.ID WHERE L.\"T-BIL\" = (SELECT MAX(\"T-BIL\") FROM Laboratory);\t----- bird -----\tthrombosis_prediction",
    "1225": "SELECT P.SEX, GROUP_CONCAT(DISTINCT P.ID) FROM Patient AS P JOIN Examination AS E ON P.ID = E.ID WHERE E.T_BIL >= 2.0 GROUP BY P.SEX;\t----- bird -----\tthrombosis_prediction",
    "1226": "SELECT P.ID, L.T-CHO FROM Patient P JOIN Laboratory L ON P.ID = L.ID WHERE P.Birthday = (SELECT MIN(Birthday) FROM Patient) AND L.T-CHO = (SELECT MAX(T-CHO) FROM Laboratory);\t----- bird -----\tthrombosis_prediction",
    "1227": "SELECT avg((YEAR(NOW()) - YEAR(Birthday))) FROM Patient WHERE SEX = 'M' AND `T-CHO` >= 250;\t----- bird -----\tthrombosis_prediction",
    "1228": "SELECT P.ID, P.Diagnosis FROM Patient AS P JOIN Laboratory AS L ON P.ID = L.ID WHERE L.TG > 300;\t----- bird -----\tthrombosis_prediction",
    "1229": "SELECT count(DISTINCT Patient.ID) FROM Patient WHERE Patient.ID IN (SELECT ID FROM Laboratory WHERE TG >= 200) AND SUBTRACT(year(current_timestamp), year(Birthday)) > 50;\t----- bird -----\tthrombosis_prediction",
    "1230": "SELECT DISTINCT P.ID FROM Patient P WHERE P.Admission = '-' AND EXISTS (SELECT 1 FROM Laboratory L WHERE L.ID = P.ID AND L.CPK < 250);\t----- bird -----\tthrombosis_prediction",
    "1231": "SELECT count(DISTINCT Patient.ID) FROM Patient WHERE Patient.Birthday BETWEEN '1936' AND '1956' AND Patient.SEX = 'M' AND EXISTS (SELECT 1 FROM Laboratory WHERE Laboratory.CPK >= 250 AND Laboratory.ID = Patient.ID);\t----- bird -----\tthrombosis_prediction",
    "1232": "SELECT P.ID, P.SEX, age FROM Patient P JOIN Laboratory L ON P.ID = L.ID WHERE L.GLU >= 180 AND L.T_CHO < 250;\t----- bird -----\tthrombosis_prediction",
    "1233": "SELECT P.ID, L.GLU FROM Patient AS P JOIN Laboratory AS L ON P.ID = L.ID WHERE P.Description = '1991' AND L.GLU < 180;\t----- bird -----\tthrombosis_prediction",
    "1234": "SELECT P.ID, P.SEX, P.Birthday FROM Patient P JOIN Laboratory L ON P.ID = L.ID WHERE L.WBC <= 3.5 OR L.WBC >= 9.0 GROUP BY P.SEX ORDER BY CAST(STRFTIME('%Y', 'now') - STRFTIME('%Y', P.Birthday) AS INTEGER) ASC;\t----- bird -----\tthrombosis_prediction",
    "1235": "SELECT P.ID, age FROM Patient AS P WHERE P.Diagnosis IN (SELECT Diagnosis FROM Examination) AND P.ID IN (SELECT ID FROM Examination WHERE RBC < 3.5);\t----- bird -----\tthrombosis_prediction",
    "1236": "SELECT Patient.Admission FROM Patient WHERE Patient.SEX = 'F' AND SUBTRACT(year(current_timestamp), year(Patient.Birthday)) >= 50 AND (Patient.RBC <= 3.5 OR Patient.RBC >= 6.0);\t----- bird -----\tthrombosis_prediction",
    "1237": "SELECT p.ID, p.SEX FROM Patient p WHERE p.Admission = '-' AND p.Birthday IS NOT NULL AND p.ID IN (SELECT ID FROM Patient WHERE HGB < 10);\t----- bird -----\tthrombosis_prediction",
    "1238": "SELECT P.ID, P.SEX FROM Patient P JOIN Examination E ON P.ID = E.ID WHERE P.Diagnosis = 'SLE' AND E.HGB BETWEEN 10 AND 17 ORDER BY P.Birthday ASC LIMIT 1;\t----- bird -----\tthrombosis_prediction",
    "1239": "SELECT P.ID, SUBTRACT(year(current_timestamp), year(P.Birthday)) AS age FROM Patient P JOIN Laboratory L ON P.ID = L.ID WHERE COUNT(P.ID) > 2 AND L.HCT >= 52;\t----- bird -----\tthrombosis_prediction",
    "1240": "SELECT AVG(HCT) FROM Laboratory WHERE Date LIKE '1991%' AND HCT < 29;\t----- bird -----\tthrombosis_prediction",
    "1241": "SELECT SUM(CASE WHEN PLT < 100 THEN 1 ELSE 0 END) - SUM(CASE WHEN PLT > 400 THEN 1 ELSE 0 END) FROM Patient JOIN Laboratory ON Patient.ID = Laboratory.ID;\t----- bird -----\tthrombosis_prediction",
    "1242": "SELECT DISTINCT P.ID FROM Patient AS P JOIN Laboratory AS L WHERE YEAR(L.Date) = 1984 AND SUBTRACT(year(current_timestamp), year(P.Birthday)) < 50 AND L.PLT BETWEEN 100 AND 400;\t----- bird -----\tthrombosis_prediction",
    "1243": "SELECT percentage FROM (SELECT DIVIDE(SUM(CASE WHEN SUBTRACT(year(current_timestamp), year(Birthday)) > 55 AND SEX = 'F' AND PT >= 14 THEN 1 ELSE 0 END), SUM(CASE WHEN SUBTRACT(year(current_timestamp), year(Birthday)) > 55 AND PT >= 14 THEN 1 ELSE 0 END)) * 100 AS percentage) AS subquery;\t----- bird -----\tthrombosis_prediction",
    "1244": "SELECT P.ID FROM Patient AS P JOIN Laboratory AS L ON P.ID = L.ID WHERE YEAR(P.First Date) > 1992 AND L.PT < 14;\t----- bird -----\tthrombosis_prediction",
    "1245": "SELECT COUNT(*) FROM Examination WHERE `Examination Date` > '1997-01-01' AND `APTT` < 45;\t----- bird -----\tthrombosis_prediction",
    "1246": "SELECT COUNT(DISTINCT Patient.ID) FROM Patient JOIN Examination ON Patient.ID = Examination.ID WHERE Examination.APTT > 45 AND Examination.Thrombosis = 0;\t----- bird -----\tthrombosis_prediction",
    "1247": "SELECT COUNT(T1.ID) FROM Patient AS T1 JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T1.SEX = 'M' AND T2.WBC > 3.5 AND T2.WBC < 9.0 AND (T2.FG <= 150 OR T2.FG >= 450);\t----- bird -----\tthrombosis_prediction",
    "1248": "SELECT COUNT(DISTINCT Patient.ID) FROM Patient WHERE Patient.Birthday > '1980-01-01' AND EXISTS (SELECT 1 FROM Laboratory WHERE Laboratory.FG < 150 OR Laboratory.FG > 450 AND Laboratory.Date = Patient.First Date);\t----- bird -----\tthrombosis_prediction",
    "1249": "SELECT DISTINCT T1.Diagnosis FROM Patient AS T1 JOIN Examination AS T2 ON T1.ID = T2.ID WHERE T2.U_PRO >= 30;\t----- bird -----\tthrombosis_prediction",
    "1250": "SELECT ID FROM Patient WHERE ID IN (SELECT PatientID FROM Examination WHERE `U-PRO` > 0 AND `U-PRO` < 30 AND Diagnosis = 'SLE');\t----- bird -----\tthrombosis_prediction",
    "1251": "SELECT COUNT(DISTINCT ID) FROM Patient WHERE ID IN (SELECT ID FROM Laboratory WHERE IGG >= 2000);\t----- bird -----\tthrombosis_prediction",
    "1252": "SELECT COUNT(T1.ID) FROM Examination AS T1 JOIN Patient AS T2 ON T1.ID = T2.ID WHERE T1.IGG > 1000 AND T1.IGG < 2000 AND T1.Symptoms IS NOT NULL;\t----- bird -----\tthrombosis_prediction",
    "1253": "SELECT T1.Diagnosis FROM Patient AS T1 JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T2.IGA = (SELECT MAX(IGA) FROM Laboratory WHERE IGA BETWEEN 80 AND 500);\t----- bird -----\tthrombosis_prediction",
    "1254": "SELECT count(*) FROM Patient WHERE IGA > 80 AND IGA < 500 AND YEAR(First Date) >= 1990;\t----- bird -----\tthrombosis_prediction",
    "1255": "SELECT Diagnosis FROM Laboratory WHERE IGM <= 40 OR IGM >= 400 GROUP BY Diagnosis ORDER BY COUNT(*) DESC LIMIT 1;\t----- bird -----\tthrombosis_prediction",
    "1256": "SELECT COUNT(p.ID) FROM Patient p JOIN Laboratory l ON p.ID = l.ID WHERE l.CRP = '+' AND p.Description IS NULL;\t----- bird -----\tthrombosis_prediction",
    "1257": "SELECT COUNT(DISTINCT Patient.ID) FROM Patient JOIN Laboratory ON Patient.ID = Laboratory.ID WHERE CRE >= 1.5 AND SUBTRACT((YEAR(CURDATE()), YEAR(Birthday))) < 70;\t----- bird -----\tthrombosis_prediction",
    "1258": "SELECT COUNT(DISTINCT T1.ID) FROM Examination AS T1 JOIN Patient AS T2 ON T1.ID = T2.ID WHERE T2.Diagnosis = 'Normal Rheumatoid Factor' AND T1.KCT = '+';\t----- bird -----\tthrombosis_prediction",
    "1259": "SELECT DISTINCT T1.Diagnosis FROM Patient AS T1 JOIN Examination AS T2 ON T1.ID = T2.ID WHERE YEAR(T1.Birthday) >= 1985 AND T2.RA IN ('-', '+-');\t----- bird -----\tthrombosis_prediction",
    "1260": "SELECT ID FROM Patient WHERE RF < 20 AND SUBTRACT(YEAR(CURDATE()), YEAR(Birthday)) > 60;\t----- bird -----\tthrombosis_prediction",
    "1261": "SELECT COUNT(T1.ID) FROM Patient AS T1 JOIN Examination AS T2 ON T1.ID = T2.ID WHERE T2.RF < 20 AND T2.Thrombosis = '0';\t----- bird -----\tthrombosis_prediction",
    "1262": "SELECT COUNT(DISTINCT Patient.ID) FROM Patient JOIN Laboratory ON Patient.ID = Laboratory.ID WHERE Laboratory.C3 > 35 AND Laboratory.ANA_Pattern = 'P';\t----- bird -----\tthrombosis_prediction",
    "1263": "SELECT P.ID FROM Patient P JOIN Examination E ON P.ID = E.ID WHERE E.KCT < 29 OR E.KCT > 52 ORDER BY E.aCL IgA DESC LIMIT 1;\t----- bird -----\tthrombosis_prediction",
    "1264": "SELECT COUNT(DISTINCT Patient.ID) FROM Patient JOIN Examination ON Patient.ID = Examination.ID WHERE Examination.Thrombosis = 'Yes' AND Examination.C4 > 10;\t----- bird -----\tthrombosis_prediction",
    "1265": "SELECT count(DISTINCT Patient.ID) FROM Patient WHERE Patient.Diagnosis LIKE '%normal anti-ribonuclear protein%' AND Patient.Admission = '+';\t----- bird -----\tthrombosis_prediction",
    "1266": "SELECT P.Birthday FROM Patient AS P JOIN Examination AS E ON P.ID = E.ID WHERE E.RNP NOT IN('-', '+-') AND P.Birthday = (SELECT MAX(Birthday) FROM Patient);\t----- bird -----\tthrombosis_prediction",
    "1267": "SELECT count(Patient.ID) FROM Patient JOIN Examination ON Patient.ID = Examination.ID WHERE Examination.SM IN ('-', '+-') AND Examination.Thrombosis = 0;\t----- bird -----\tthrombosis_prediction",
    "1268": "SELECT ID FROM Patient WHERE ID IN (SELECT PatientID FROM Laboratory WHERE SM NOT IN ('negative', '0')) ORDER BY Birthday ASC LIMIT 3;\t----- bird -----\tthrombosis_prediction",
    "1269": "SELECT DISTINCT Patient.ID FROM Patient JOIN Examination ON Patient.ID = Examination.ID WHERE Examination.\"Examination Date\" > '1997-01-01' AND Examination.SC170 IN ('negative','0');\t----- bird -----\tthrombosis_prediction",
    "1270": "SELECT count(DISTINCT P.ID) FROM Patient AS P JOIN Examination AS E ON P.ID = E.ID WHERE E.SC170 IN ('negative', '0') AND P.SEX = 'F' AND E.Symptoms IS NULL;\t----- bird -----\tthrombosis_prediction",
    "1271": "SELECT count(DISTINCT Patient.ID) FROM Patient WHERE YEAR(Patient.First Date) < 2000 AND Patient.ID IN (SELECT ID FROM Laboratory WHERE SSA IN ('-','+-'));\t----- bird -----\tthrombosis_prediction",
    "1272": "SELECT P.ID FROM Patient P JOIN Laboratory L ON P.ID = L.ID WHERE L.SSA IN ('positive', 'high') ORDER BY P.First Date ASC LIMIT 1;\t----- bird -----\tthrombosis_prediction",
    "1273": "SELECT COUNT(DISTINCT T1.ID) FROM Patient AS T1 JOIN Examination AS T2 ON T1.ID = T2.ID WHERE T2.SSB IN ('negative', '0') AND T1.Diagnosis = 'SLE';\t----- bird -----\tthrombosis_prediction",
    "1274": "SELECT COUNT(DISTINCT T1.ID) FROM Examination AS T1 JOIN Patient AS T2 ON T1.ID = T2.ID WHERE T2.ID IN (SELECT ID FROM Patient WHERE ID IN (SELECT ID FROM Examination WHERE SSB IN ('negative', '0'))) AND T1.Symptoms IS NOT NULL;\t----- bird -----\tthrombosis_prediction",
    "1275": "SELECT count(DISTINCT P.ID) FROM Patient AS P JOIN Laboratory AS L ON P.ID = L.ID WHERE L.CENTROMEA IN ('-', '+-') AND L.SSB IN ('-', '+-') AND P.SEX = 'M';\t----- bird -----\tthrombosis_prediction",
    "1276": "SELECT T1.Diagnosis FROM Patient AS T1 JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T2.DNA >= 8;\t----- bird -----\tthrombosis_prediction",
    "1277": "SELECT COUNT(DISTINCT Patient.ID) FROM Patient WHERE Patient.Diagnosis = 'Normal anti-DNA level' AND Patient.Description IS NULL;\t----- bird -----\tthrombosis_prediction",
    "1278": "SELECT COUNT(Patient.ID) FROM Patient JOIN Laboratory ON Patient.ID = Laboratory.ID WHERE Laboratory.IGG > 900 AND Laboratory.IGG < 2000 AND Patient.Admission = '+';\t----- bird -----\tthrombosis_prediction",
    "1279": "SELECT CAST(SUM(CASE WHEN L.GOT >= 60 AND P.Diagnosis = 'SLE' THEN 1 ELSE 0 END) AS REAL) / COUNT(DISTINCT L.ID) FROM Laboratory L JOIN Patient P ON L.ID = P.ID WHERE L.GOT >= 60 AND P.Diagnosis = 'SLE';\t----- bird -----\tthrombosis_prediction",
    "1280": "SELECT count(*) FROM Patient WHERE Sex = 'M' AND ID IN (SELECT PatientID FROM Laboratory WHERE GOT < 60);\t----- bird -----\tthrombosis_prediction",
    "1281": "SELECT MIN(Birthday) FROM Patient WHERE Patient.ID IN (SELECT P.ID FROM Patient P JOIN Laboratory L ON P.ID = L.ID WHERE L.GOT >= 60);\t----- bird -----\tthrombosis_prediction",
    "1282": "SELECT Birthday FROM Patient ORDER BY MAX(Laboratory.GPT) DESC LIMIT 3;\t----- bird -----\tthrombosis_prediction",
    "1283": "SELECT COUNT(T1.ID) FROM Patient AS T1 JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T2.GOT < 60 AND T1.SEX = 'M';\t----- bird -----\tthrombosis_prediction",
    "1284": "SELECT MIN(P.First Date) FROM Patient P JOIN Examination E ON P.ID = E.ID WHERE E.LDH < 500 ORDER BY E.LDH DESC LIMIT 1;\t----- bird -----\tthrombosis_prediction",
    "1285": "SELECT L.Date FROM Laboratory AS L JOIN Patient AS P ON L.ID = P.ID WHERE P.ID = (SELECT ID FROM Patient ORDER BY First Date DESC LIMIT 1) AND L.LDH >= 500;\t----- bird -----\tthrombosis_prediction",
    "1286": "SELECT COUNT(T1.ID) FROM Patient AS T1 JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T2.ALP >= 300 AND T1.Admission = '+';\t----- bird -----\tthrombosis_prediction",
    "1287": "SELECT COUNT(Patient.ID) FROM Patient JOIN Laboratory ON Patient.ID = Laboratory.ID WHERE Patient.Admission = '-' AND Laboratory.ALP < 300;\t----- bird -----\tthrombosis_prediction",
    "1288": "SELECT T1.Diagnosis FROM Patient AS T1 JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T2.TP < 6.0;\t----- bird -----\tthrombosis_prediction",
    "1289": "SELECT COUNT(T1.ID) FROM Patient AS T1 JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T1.Diagnosis = 'SJS' AND T2.TP > 6.0 AND T2.TP < 8.5;\t----- bird -----\tthrombosis_prediction",
    "1290": "SELECT Examination.`Examination Date` FROM Examination JOIN Laboratory ON Examination.`Examination Date` = Laboratory.Date WHERE Laboratory.ALB = (SELECT MAX(ALB) FROM Laboratory WHERE ALB > 3.5 AND ALB < 5.5);\t----- bird -----\tthrombosis_prediction",
    "1291": "SELECT count(ID) FROM Patient WHERE Sex = 'M' AND ID IN (SELECT PatientID FROM Laboratory WHERE ALB > 3.5 AND ALB < 5.5 AND TP BETWEEN 6.0 AND 8.5);\t----- bird -----\tthrombosis_prediction",
    "1292": "SELECT T1.aCL_IgG, T1.aCL_IgM, T1.aCL_IgA FROM Examination AS T1 JOIN Patient AS T2 ON T1.ID = T2.ID WHERE T2.SEX = 'F' AND T1.ID IN (SELECT ID FROM Examination WHERE ID IN (SELECT ID FROM Laboratory WHERE UA > 6.50) ORDER BY UA DESC LIMIT 1);\t----- bird -----\tthrombosis_prediction",
    "1293": "SELECT MAX(L.ANA) FROM Laboratory L JOIN Examination E ON L.ID = E.ID WHERE L.CRE < 1.5;\t----- bird -----\tthrombosis_prediction",
    "1294": "SELECT DISTINCT P.ID FROM Patient AS P JOIN Examination AS E ON P.ID = E.ID WHERE E.CRE < 1.5 AND E.aCL IgA = (SELECT MAX(aCL IgA) FROM Examination);\t----- bird -----\tthrombosis_prediction",
    "1295": "SELECT COUNT(DISTINCT P.ID) FROM Patient AS P JOIN Examination AS E ON P.ID = E.ID WHERE E.T_BIL >= 2.0 AND E.ANA LIKE '%P%';\t----- bird -----\tthrombosis_prediction",
    "1296": "SELECT E.ANA FROM Examination E JOIN Patient P ON E.ID = P.ID WHERE P.ID IN (SELECT P.ID FROM Patient P JOIN Examination E ON P.ID = E.ID WHERE E.T_BIL = (SELECT MAX(T_BIL) FROM Examination WHERE T_BIL < 2.0));\t----- bird -----\tthrombosis_prediction",
    "1297": "SELECT COUNT(T1.ID) FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T2.T_CHO >= 250 AND T2.KCT = '-';\t----- bird -----\tthrombosis_prediction",
    "1298": "SELECT COUNT(T1.ID) FROM Patient AS T1 JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T2.T-CHO < 250 AND T1.ID IN (SELECT ID FROM Examination WHERE ANA Pattern = 'P');\t----- bird -----\tthrombosis_prediction",
    "1299": "SELECT COUNT(T1.ID) FROM Patient AS T1 JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T2.TG < 200 AND T1.ID IN (SELECT ID FROM Examination WHERE Symptoms IS NOT NULL);\t----- bird -----\tthrombosis_prediction",
    "1300": "SELECT T1.Diagnosis FROM Examination AS T1 JOIN Patient AS T2 ON T1.ID = T2.ID WHERE T1.TG = (SELECT MAX(TG) FROM Examination WHERE TG < 200);\t----- bird -----\tthrombosis_prediction",
    "1301": "SELECT DISTINCT Patient.ID FROM Patient JOIN Examination ON Patient.ID = Examination.ID WHERE Examination.Thrombosis = 0 AND Examination.CPK < 250;\t----- bird -----\tthrombosis_prediction",
    "1302": "SELECT COUNT(DISTINCT E.ID) FROM Examination AS E JOIN Patient AS P ON E.ID = P.ID WHERE E.CPK < 250 AND (E.KCT = '+' OR E.RVVT = '+' OR E.LAC = '+');\t----- bird -----\tthrombosis_prediction",
    "1303": "SELECT Birthday FROM Patient WHERE Birthday = (SELECT MIN(Birthday) FROM Patient) AND EXISTS (SELECT 1 FROM Laboratory WHERE Patient.ID = Laboratory.ID AND GLU > 180);\t----- bird -----\tthrombosis_prediction",
    "1304": "SELECT COUNT(Patient.ID) FROM Patient WHERE Patient.ID IN (SELECT ID FROM Examination WHERE GLU < 180) AND Patient.ID IN (SELECT ID FROM Examination WHERE Thrombosis = 0);\t----- bird -----\tthrombosis_prediction",
    "1305": "SELECT COUNT(Patient.ID) FROM Patient WHERE Admission = '+' AND Patient.ID IN (SELECT ID FROM Laboratory WHERE WBC BETWEEN 3.5 AND 9.0);\t----- bird -----\tthrombosis_prediction",
    "1306": "SELECT COUNT(T1.ID) FROM Patient AS T1 JOIN Examination AS T2 ON T1.ID = T2.ID WHERE T1.Diagnosis = 'SLE' AND T2.WBC BETWEEN 3.5 AND 9.0;\t----- bird -----\tthrombosis_prediction",
    "1307": "SELECT P.ID FROM Patient AS P JOIN Laboratory AS L ON P.ID = L.ID WHERE L.RBC < 3.5 OR L.RBC > 6.0 AND P.Admission = '-';\t----- bird -----\tthrombosis_prediction",
    "1308": "SELECT COUNT(T1.ID) FROM Patient AS T1 JOIN Examination AS T2 ON T1.ID = T2.ID WHERE T2.PLT > 100 AND T2.PLT < 400 AND T2.Diagnosis IS NOT NULL;\t----- bird -----\tthrombosis_prediction",
    "1309": "SELECT PLT FROM Laboratory WHERE PLT > 100 AND PLT < 400 AND Patient.Diagnosis = 'MCTD';\t----- bird -----\tthrombosis_prediction",
    "1310": "SELECT AVG(PT) FROM Laboratory WHERE Patient.ID = Laboratory.ID AND Patient.SEX = 'M' AND PT < 14;\t----- bird -----\tthrombosis_prediction",
    "1311": "SELECT COUNT(T1.ID) FROM Patient AS T1 JOIN Examination AS T2 ON T1.ID = T2.ID WHERE T2.Thrombosis IN (1, 2) AND T2.PT < 14;\t----- bird -----\tthrombosis_prediction",
    "1312": "SELECT T1.major_name FROM major AS T1 JOIN member AS T2 ON T1.major_id = T2.link_to_major WHERE T2.first_name = 'Angela' AND T2.last_name = 'Sanders';\t----- bird -----\tstudent_club",
    "1313": "SELECT COUNT(T1.member_id) FROM member AS T1 JOIN major AS T2 ON T1.link_to_major = T2.major_id WHERE T2.college = 'College of Engineering' AND T1.position = 'Student_Club';\t----- bird -----\tstudent_club",
    "1314": "SELECT m.first_name, m.last_name FROM member m JOIN major ma ON m.link_to_major = ma.major_id WHERE ma.department = 'Art and Design';\t----- bird -----\tstudent_club",
    "1315": "SELECT COUNT(DISTINCT M.member_id) FROM member AS M JOIN attendance AS A ON M.member_id = A.link_to_member JOIN event AS E ON A.link_to_event = E.event_id WHERE E.event_name = 'Women\\'s Soccer' AND M.link_to_major IN (SELECT major_id FROM major WHERE major_name = 'Student_Club');\t----- bird -----\tstudent_club",
    "1316": "SELECT T1.phone FROM member AS T1 JOIN attendance AS T2 ON T1.member_id = T2.link_to_member JOIN event AS T3 ON T2.link_to_event = T3.event_id WHERE T3.event_name = 'Women\\'s Soccer' AND T1.link_to_major IN (SELECT major_id FROM major WHERE major_name = 'Student_Club');\t----- bird -----\tstudent_club",
    "1317": "SELECT COUNT(T1.member_id) FROM member AS T1 JOIN attendance AS T2 ON T1.member_id = T2.link_to_member JOIN event AS T3 ON T2.link_to_event = T3.event_id WHERE T3.event_name = 'Women\\'s Soccer' AND T1.t_shirt_size = 'Medium';\t----- bird -----\tstudent_club",
    "1318": "SELECT event_name FROM event WHERE event_id = (SELECT link_to_event FROM attendance GROUP BY link_to_event ORDER BY COUNT(link_to_member) DESC LIMIT 1);\t----- bird -----\tstudent_club",
    "1319": "SELECT T1.college FROM major AS T1 JOIN member AS T2 ON T1.major_id = T2.link_to_major WHERE T2.position = 'Vice President';\t----- bird -----\tstudent_club",
    "1320": "SELECT T1.event_name FROM event AS T1 INNER JOIN attendance AS T2 ON T1.event_id = T2.link_to_event INNER JOIN member AS T3 ON T2.link_to_member = T3.member_id WHERE T3.first_name = 'Maya' AND T3.last_name = 'Mclean';\t----- bird -----\tstudent_club",
    "1321": "SELECT COUNT(A.link_to_event) FROM attendance AS A JOIN event AS E ON A.link_to_event = E.event_id WHERE YEAR(E.event_date) = 2019 AND E.event_name LIKE '%Student_Club%' AND A.link_to_member IN (SELECT member_id FROM member WHERE first_name = 'Sacha' AND last_name = 'Harrison');\t----- bird -----\tstudent_club",
    "1322": "SELECT COUNT(T1.event_id) FROM event AS T1 INNER JOIN attendance AS T2 ON T1.event_id = T2.link_to_event WHERE T1.type = 'Meeting' AND (SELECT COUNT(link_to_event) FROM attendance GROUP BY link_to_event HAVING COUNT(*) > 10) IS NOT NULL;\t----- bird -----\tstudent_club",
    "1323": "SELECT T1.event_name FROM event AS T1 JOIN attendance AS T2 ON T1.event_id = T2.link_to_event WHERE T1.type != 'fundraiser' GROUP BY T1.event_id HAVING COUNT(T2.link_to_member) > 20;\t----- bird -----\tstudent_club",
    "1324": "SELECT AVG(attendance_count) FROM (SELECT COUNT(DISTINCT link_to_member) AS attendance_count FROM attendance JOIN event ON attendance.link_to_event = event.event_id WHERE event.type = 'Meeting' AND STRFTIME('%Y', event.event_date) = '2020');\t----- bird -----\tstudent_club",
    "1325": "SELECT expense_description FROM expense ORDER BY cost DESC LIMIT 1;\t----- bird -----\tstudent_club",
    "1326": "SELECT COUNT(m.member_id) FROM member m JOIN major ma ON m.link_to_major = ma.major_id WHERE ma.major_name = 'Environmental Engineering';\t----- bird -----\tstudent_club",
    "1327": "SELECT m.first_name, m.last_name FROM member m JOIN attendance a ON m.member_id = a.link_to_member JOIN event e ON a.link_to_event = e.event_id WHERE e.event_name = 'Laugh Out Loud';\t----- bird -----\tstudent_club",
    "1328": "SELECT T1.last_name FROM member AS T1 JOIN major AS T2 ON T1.link_to_major = T2.major_id WHERE T2.major_name = 'Law and Constitutional Studies';\t----- bird -----\tstudent_club",
    "1329": "SELECT T1.county FROM zip_code AS T1 JOIN member AS T2 ON T1.zip_code = T2.zip WHERE T2.first_name = 'Sherri' AND T2.last_name = 'Ramsey';\t----- bird -----\tstudent_club",
    "1330": "SELECT T1.college FROM major AS T1 JOIN member AS T2 ON T1.major_id = T2.link_to_major WHERE T2.first_name = 'Tyler' AND T2.last_name = 'Hewitt';\t----- bird -----\tstudent_club",
    "1331": "SELECT SUM(I.amount) FROM income AS I JOIN member AS M ON I.link_to_member = M.member_id WHERE M.position = 'Vice President';\t----- bird -----\tstudent_club",
    "1332": "SELECT SUM(B.spent) FROM budget AS B JOIN event AS E ON B.link_to_event = E.event_id WHERE E.event_name = 'September Meeting' AND B.category = 'Food';\t----- bird -----\tstudent_club",
    "1333": "SELECT T1.city, T1.state FROM zip_code AS T1 JOIN member AS T2 ON T1.zip_code = T2.zip WHERE T2.position = 'President';\t----- bird -----\tstudent_club",
    "1334": "SELECT m.first_name, m.last_name FROM member m JOIN zip_code z ON m.zip = z.zip_code WHERE z.state = 'IL' AND m.position = 'Student_Club';\t----- bird -----\tstudent_club",
    "1335": "SELECT SUM(b.spent) FROM budget AS b JOIN event AS e ON b.link_to_event = e.event_id WHERE e.event_name = 'September Meeting' AND b.category = 'Advertisement';\t----- bird -----\tstudent_club",
    "1336": "SELECT T1.department FROM major AS T1 JOIN member AS T2 ON T1.major_id = T2.link_to_major WHERE T2.first_name = 'Pierce' OR T2.first_name = 'Guidi';\t----- bird -----\tstudent_club",
    "1337": "SELECT SUM(amount) FROM budget WHERE link_to_event IN (SELECT event_id FROM event WHERE event_name = 'October Speaker');\t----- bird -----\tstudent_club",
    "1338": "SELECT T1.approved FROM expense AS T1 JOIN budget AS T2 ON T1.link_to_budget = T2.budget_id JOIN event AS T3 ON T2.link_to_event = T3.event_id WHERE T3.event_name = 'October Meeting' AND T3.event_date = '2019-10-08';\t----- bird -----\tstudent_club",
    "1339": "SELECT SUM(e.cost) FROM expense AS e JOIN member AS m ON e.link_to_member = m.member_id WHERE m.first_name = 'Elijah' AND m.last_name = 'Allen' AND STRFTIME('%m', e.expense_date) IN ('09', '10');\t----- bird -----\tstudent_club",
    "1340": "SELECT SUM(CASE WHEN SUBSTR(event_date, 1, 4) = '2019' THEN budget.spent ELSE 0 END) - SUM(CASE WHEN SUBSTR(event_date, 1, 4) = '2020' THEN budget.spent ELSE 0 END) FROM event JOIN budget ON event.event_id = budget.link_to_event;\t----- bird -----\tstudent_club",
    "1341": "SELECT location FROM event WHERE event_name = \"Spring Budget Review\";\t----- bird -----\tstudent_club",
    "1342": "SELECT T1.cost FROM expense AS T1 INNER JOIN budget AS T2 ON T1.link_to_budget = T2.budget_id INNER JOIN event AS T3 ON T2.link_to_event = T3.event_id WHERE T3.event_name = \"Posters\" AND T3.event_date = \"2019-09-04\";\t----- bird -----\tstudent_club",
    "1343": "SELECT remaining FROM budget WHERE category = 'Food' AND amount = (SELECT MAX(amount) FROM budget WHERE category = 'Food');\t----- bird -----\tstudent_club",
    "1344": "SELECT notes FROM income WHERE date_received = '2019-09-14' AND source = 'Fundraising';\t----- bird -----\tstudent_club",
    "1345": "SELECT count(*) FROM major WHERE college = \"College of Humanities and Social Sciences\";\t----- bird -----\tstudent_club",
    "1346": "SELECT phone FROM member WHERE first_name = 'Carlo' AND last_name = 'Jacobs';\t----- bird -----\tstudent_club",
    "1347": "SELECT T1.county FROM zip_code AS T1 JOIN member AS T2 ON T1.zip_code = T2.zip WHERE T2.first_name = 'Adela' AND T2.last_name = 'O\\'Gallagher';\t----- bird -----\tstudent_club",
    "1348": "SELECT COUNT(*) FROM budget WHERE link_to_event IN (SELECT event_id FROM event WHERE event_name = 'November Meeting') AND remaining < 0;\t----- bird -----\tstudent_club",
    "1349": "SELECT SUM(amount) FROM budget WHERE link_to_event IN (SELECT event_id FROM event WHERE event_name = 'September Speaker');\t----- bird -----\tstudent_club",
    "1350": "SELECT T1.status FROM event AS T1 JOIN budget AS T2 ON T1.event_id = T2.link_to_event JOIN expense AS T3 ON T2.budget_id = T3.link_to_budget WHERE T3.expense_description = 'Post Cards, Posters' AND T3.expense_date = '2019-08-20';\t----- bird -----\tstudent_club",
    "1351": "SELECT T1.major_name FROM major AS T1 INNER JOIN member AS T2 ON T1.major_id = T2.link_to_major WHERE T2.first_name = 'Brent' AND T2.last_name = 'Thomason';\t----- bird -----\tstudent_club",
    "1352": "SELECT COUNT(m.member_id) FROM member AS m JOIN major AS ma ON m.link_to_major = ma.major_id WHERE ma.major_name = 'Business' AND m.t_shirt_size = 'Medium';\t----- bird -----\tstudent_club",
    "1353": "SELECT T1.type FROM zip_code AS T1 JOIN member AS T2 ON T1.zip_code = T2.zip WHERE T2.first_name = 'Christof' AND T2.last_name = 'Nielson';\t----- bird -----\tstudent_club",
    "1354": "SELECT T1.major_name FROM major AS T1 JOIN member AS T2 ON T1.major_id = T2.link_to_major WHERE T2.position = 'Vice President';\t----- bird -----\tstudent_club",
    "1355": "SELECT T1.state FROM zip_code AS T1 INNER JOIN member AS T2 ON T1.zip_code = T2.zip WHERE T2.first_name = 'Sacha' AND T2.last_name = 'Harrison';\t----- bird -----\tstudent_club",
    "1356": "SELECT T1.department FROM major AS T1 INNER JOIN member AS T2 ON T1.major_id = T2.link_to_major WHERE T2.position = 'President';\t----- bird -----\tstudent_club",
    "1357": "SELECT date_received FROM income WHERE link_to_member = (SELECT member_id FROM member WHERE first_name = 'Connor' AND last_name = 'Hilton') AND source = 'Dues';\t----- bird -----\tstudent_club",
    "1358": "SELECT m.first_name, m.last_name FROM member m JOIN income i ON m.member_id = i.link_to_member WHERE i.source = 'Dues' GROUP BY m.member_id HAVING MIN(i.date_received) = (SELECT MIN(date_received) FROM income WHERE source = 'Dues');\t----- bird -----\tstudent_club",
    "1359": "SELECT SUM(CASE WHEN budget.category = 'Advertisement' AND event.event_name = 'Yearly Kickoff' THEN 1 ELSE 0 END) / SUM(CASE WHEN budget.category = 'Advertisement' AND event.event_name = 'October Meeting' THEN 1 ELSE 0 END);\t----- bird -----\tstudent_club",
    "1360": "SELECT (SUM( amount WHERE category = 'Parking' and link_to_event IN (SELECT event_id FROM event WHERE event_name = 'November Speaker')) / COUNT(link_to_event IN (SELECT event_id FROM event WHERE event_name = 'November Speaker'))) * 100 FROM budget WHERE link_to_event IN (SELECT event_id FROM event WHERE event_name = 'November Speaker');\t----- bird -----\tstudent_club",
    "1361": "SELECT SUM(cost) FROM expense WHERE expense_description = 'Pizza';\t----- bird -----\tstudent_club",
    "1362": "SELECT count(city) FROM zip_code WHERE county = 'Orange' AND state = 'Virginia';\t----- bird -----\tstudent_club",
    "1363": "SELECT DISTINCT department FROM major WHERE college = 'Humanities and Social Sciences';\t----- bird -----\tstudent_club",
    "1364": "SELECT T1.city, T1.county, T1.state FROM zip_code AS T1 INNER JOIN member AS T2 ON T1.zip_code = T2.zip WHERE T2.first_name = 'Amy' AND T2.last_name = 'Firth';\t----- bird -----\tstudent_club",
    "1365": "SELECT T1.expense_description FROM expense AS T1 JOIN budget AS T2 ON T1.link_to_budget = T2.budget_id WHERE T2.remaining = (SELECT MIN(remaining) FROM budget);\t----- bird -----\tstudent_club",
    "1366": "SELECT DISTINCT M.first_name, M.last_name FROM member AS M JOIN attendance AS A ON M.member_id = A.link_to_member JOIN event AS E ON A.link_to_event = E.event_id WHERE E.event_name = 'October Meeting';\t----- bird -----\tstudent_club",
    "1367": "SELECT college FROM major GROUP BY college ORDER BY COUNT(*) DESC LIMIT 1;\t----- bird -----\tstudent_club",
    "1368": "SELECT T1.major_name FROM major AS T1 INNER JOIN member AS T2 ON T1.major_id = T2.link_to_major WHERE T2.phone = '809-555-3360';\t----- bird -----\tstudent_club",
    "1369": "SELECT T1.event_name FROM event AS T1 JOIN budget AS T2 ON T1.event_id = T2.link_to_event ORDER BY T2.amount DESC LIMIT 1;\t----- bird -----\tstudent_club",
    "1370": "SELECT E.expense_description FROM expense AS E JOIN member AS M ON E.link_to_member = M.member_id WHERE M.position = 'Vice President';\t----- bird -----\tstudent_club",
    "1371": "SELECT COUNT(DISTINCT link_to_member) FROM attendance WHERE link_to_event IN (SELECT event_id FROM event WHERE event_name = 'Women''s Soccer');\t----- bird -----\tstudent_club",
    "1372": "SELECT date_received FROM income WHERE link_to_member = (SELECT member_id FROM member WHERE first_name = 'Casey' AND last_name = 'Mason');\t----- bird -----\tstudent_club",
    "1373": "SELECT COUNT(member_id) FROM member WHERE zip IN (SELECT zip_code FROM zip_code WHERE state = 'MD');\t----- bird -----\tstudent_club",
    "1374": "SELECT COUNT(DISTINCT T1.link_to_event) FROM attendance AS T1 JOIN member AS T2 ON T1.link_to_member = T2.member_id WHERE T2.phone = \"954-555-6240\";\t----- bird -----\tstudent_club",
    "1375": "SELECT m.first_name, m.last_name FROM member m JOIN major ma ON m.link_to_major = ma.major_id WHERE ma.department = 'School of Applied Sciences, Technology and Education';\t----- bird -----\tstudent_club",
    "1376": "SELECT T1.event_name FROM event AS T1 JOIN budget AS T2 ON T1.event_id = T2.link_to_event WHERE T1.status = 'Closed' ORDER BY DIVIDE(T2.spent, T2.amount) DESC LIMIT 1;\t----- bird -----\tstudent_club",
    "1377": "SELECT count(*) FROM member WHERE position = 'President';\t----- bird -----\tstudent_club",
    "1378": "SELECT MAX(spent) FROM budget;\t----- bird -----\tstudent_club",
    "1379": "SELECT count(*) FROM event WHERE type = 'Meeting' AND YEAR(event_date) = 2020;\t----- bird -----\tstudent_club",
    "1380": "SELECT SUM(spent) FROM budget WHERE category = 'Food';\t----- bird -----\tstudent_club",
    "1381": "SELECT T1.first_name, T1.last_name FROM member AS T1 JOIN attendance AS T2 ON T1.member_id = T2.link_to_member GROUP BY T1.member_id HAVING COUNT(T2.link_to_event) > 7;\t----- bird -----\tstudent_club",
    "1382": "SELECT m.first_name, m.last_name FROM member m JOIN attendance a ON m.member_id = a.link_to_member JOIN major ma ON m.link_to_major = ma.major_id JOIN event e ON a.link_to_event = e.event_id WHERE ma.major_name = 'Interior Design' AND e.event_name = 'Community Theater';\t----- bird -----\tstudent_club",
    "1383": "SELECT m.first_name, m.last_name FROM member m JOIN zip_code z ON m.zip = z.zip_code WHERE z.city = 'Georgetown' AND z.state = 'South Carolina';\t----- bird -----\tstudent_club",
    "1384": "SELECT SUM(income.amount) FROM income WHERE link_to_member = (SELECT member_id FROM member WHERE first_name = 'Grant' AND last_name = 'Gilmour');\t----- bird -----\tstudent_club",
    "1385": "SELECT T1.first_name, T1.last_name FROM member AS T1 JOIN income AS T2 ON T1.member_id = T2.link_to_member WHERE T2.amount > 50;\t----- bird -----\tstudent_club",
    "1386": "SELECT SUM(cost) FROM expense WHERE link_to_event = (SELECT event_id FROM event WHERE event_name = 'Yearly Kickoff');\t----- bird -----\tstudent_club",
    "1387": "SELECT T1.first_name, T1.last_name FROM member AS T1 JOIN budget AS T2 ON T1.member_id = T2.link_to_member JOIN event AS T3 ON T2.link_to_event = T3.event_id WHERE T3.event_name = 'Yearly Kickoff';\t----- bird -----\tstudent_club",
    "1388": "SELECT m.first_name, m.last_name, i.source FROM member m JOIN income i ON m.member_id = i.link_to_member WHERE i.amount = (SELECT MAX(amount) FROM income);\t----- bird -----\tstudent_club",
    "1389": "SELECT event_name FROM event WHERE event_id IN (SELECT link_to_event FROM budget ORDER BY amount ASC LIMIT 1);\t----- bird -----\tstudent_club",
    "1390": "SELECT (SUM(CASE WHEN event_name = 'Yearly Kickoff' THEN cost ELSE 0 END) / SUM(cost)) * 100 FROM event WHERE event_name = 'Yearly Kickoff';\t----- bird -----\tstudent_club",
    "1391": "SELECT CAST(SUM(CASE WHEN major_name = 'Finance' THEN 1 ELSE 0 END) AS REAL) / SUM(CASE WHEN major_name = 'Physics' THEN 1 ELSE 0 END);\t----- bird -----\tstudent_club",
    "1392": "SELECT source FROM income WHERE date_received BETWEEN '2019-09-01' AND '2019-09-30' GROUP BY source ORDER BY SUM(amount) DESC LIMIT 1;\t----- bird -----\tstudent_club",
    "1393": "SELECT first_name, last_name, email FROM member WHERE position = 'Secretary';\t----- bird -----\tstudent_club",
    "1394": "SELECT COUNT(m.member_id) FROM member m JOIN major ma ON m.link_to_major = ma.major_id WHERE ma.major_name = 'Physics Teaching';\t----- bird -----\tstudent_club",
    "1395": "SELECT COUNT(DISTINCT T1.link_to_member) FROM attendance AS T1 JOIN event AS T2 ON T1.link_to_event = T2.event_id WHERE T2.event_name = 'Community Theater' AND YEAR(T2.event_date) = 2019;\t----- bird -----\tstudent_club",
    "1396": "SELECT COUNT(A.link_to_member), M.link_to_major FROM attendance A JOIN member M ON A.link_to_member = M.member_id WHERE M.first_name = 'Luisa' AND M.last_name = 'Guidi';\t----- bird -----\tstudent_club",
    "1397": "SELECT CAST(SUM(b.spent) / COUNT(b.spent) AS DECIMAL(10,2)) FROM budget AS b WHERE b.category = 'Food' AND b.event_status = 'Closed';\t----- bird -----\tstudent_club",
    "1398": "SELECT T1.event_name FROM event AS T1 JOIN budget AS T2 ON T1.event_id = T2.link_to_event WHERE T2.category = 'Advertisement' ORDER BY T2.spent DESC LIMIT 1;\t----- bird -----\tstudent_club",
    "1399": "SELECT EXISTS (SELECT 1 FROM attendance WHERE link_to_member IN (SELECT member_id FROM member WHERE first_name = 'Maya' AND last_name = 'Mclean') AND link_to_event IN (SELECT event_id FROM event WHERE event_name = 'Women''s Soccer'));\t----- bird -----\tstudent_club",
    "1400": "SELECT (SUM(CASE WHEN type = 'Community Service' THEN 1 ELSE 0 END) * 100.0) / COUNT(event_id) FROM event WHERE event_date BETWEEN '2019-01-01' AND '2019-12-31';\t----- bird -----\tstudent_club",
    "1401": "SELECT e.cost FROM expense e JOIN budget b ON e.link_to_budget = b.budget_id JOIN event ev ON b.link_to_event = ev.event_id WHERE ev.event_name = 'September Speaker' AND e.expense_description = 'Posters';\t----- bird -----\tstudent_club",
    "1402": "SELECT t_shirt_size FROM member GROUP BY t_shirt_size ORDER BY COUNT(*) DESC LIMIT 1;\t----- bird -----\tstudent_club",
    "1403": "SELECT T1.event_name FROM event AS T1 JOIN budget AS T2 ON T1.event_id = T2.link_to_event WHERE T1.status = 'Closed' ORDER BY T2.remaining ASC LIMIT 1;\t----- bird -----\tstudent_club",
    "1404": "SELECT T1.expense_description, SUM(T1.cost) FROM expense AS T1 INNER JOIN budget AS T2 ON T1.link_to_budget = T2.budget_id WHERE T2.link_to_event = (SELECT event_id FROM event WHERE event_name = 'October Meeting') AND T1.approved = TRUE GROUP BY T1.expense_description;\t----- bird -----\tstudent_club",
    "1405": "SELECT b.category, SUM(b.amount) AS amount_budgeted FROM budget b JOIN event e ON b.link_to_event = e.event_id WHERE e.event_name = 'April Speaker' GROUP BY b.category ORDER BY SUM(b.amount) ASC;\t----- bird -----\tstudent_club",
    "1406": "SELECT * FROM budget WHERE category = 'Food' ORDER BY amount DESC LIMIT 1;\t----- bird -----\tstudent_club",
    "1407": "SELECT category, amount FROM budget WHERE category = 'Advertisement' ORDER BY amount DESC LIMIT 3;\t----- bird -----\tstudent_club",
    "1408": "SELECT SUM(cost) FROM expense WHERE expense_description = 'Parking';\t----- bird -----\tstudent_club",
    "1409": "SELECT SUM(cost) FROM expense WHERE expense_date = '2019-08-20';\t----- bird -----\tstudent_club",
    "1410": "SELECT m.first_name, m.last_name, SUM(e.cost) AS total_cost FROM member m JOIN expense e ON m.member_id = e.link_to_member WHERE m.member_id = 'rec4BLdZHS2Blfp4v' GROUP BY m.member_id;\t----- bird -----\tstudent_club",
    "1411": "SELECT T1.expense_description FROM expense AS T1 INNER JOIN member AS T2 ON T1.link_to_member = T2.member_id WHERE T2.first_name = 'Sacha' AND T2.last_name = 'Harrison';\t----- bird -----\tstudent_club",
    "1412": "SELECT DISTINCT T1.expense_description FROM expense AS T1 INNER JOIN member AS T2 ON T1.link_to_member = T2.member_id WHERE T2.t_shirt_size = 'X-Large';\t----- bird -----\tstudent_club",
    "1413": "SELECT DISTINCT T1.zip FROM member AS T1 JOIN expense AS T2 ON T1.member_id = T2.link_to_member WHERE T2.cost < 50;\t----- bird -----\tstudent_club",
    "1414": "SELECT T1.major_name FROM major AS T1 JOIN member AS T2 ON T1.major_name = T2.link_to_major WHERE T2.first_name = 'Phillip' AND T2.last_name = 'Cullen';\t----- bird -----\tstudent_club",
    "1415": "SELECT T1.position FROM member AS T1 JOIN major AS T2 ON T1.link_to_major = T2.major_id WHERE T2.major_name = 'Business';\t----- bird -----\tstudent_club",
    "1416": "SELECT COUNT(member_id) FROM member WHERE link_to_major IN (SELECT major_id FROM major WHERE major_name = 'Business') AND t_shirt_size = 'Medium';\t----- bird -----\tstudent_club",
    "1417": "SELECT DISTINCT T1.type FROM event AS T1 INNER JOIN budget AS T2 ON T1.event_id = T2.link_to_event WHERE T2.remaining > 30;\t----- bird -----\tstudent_club",
    "1418": "SELECT T1.category FROM budget AS T1 INNER JOIN event AS T2 ON T1.link_to_event = T2.event_id WHERE T2.location = 'MU 215';\t----- bird -----\tstudent_club",
    "1419": "SELECT T1.category FROM budget AS T1 INNER JOIN event AS T2 ON T1.link_to_event = T2.event_id WHERE T2.event_date = '2020-03-24T12:00:00';\t----- bird -----\tstudent_club",
    "1420": "SELECT T1.major_name FROM major AS T1 JOIN member AS T2 ON T1.major_id = T2.link_to_major WHERE T2.position = 'Vice President';\t----- bird -----\tstudent_club",
    "1421": "SELECT (SUM(CASE WHEN position = 'Member' AND major_name = 'Business' THEN 1 ELSE 0 END) * 100.0) / COUNT(member_id) FROM member m JOIN major j ON m.link_to_major = j.major_id;\t----- bird -----\tstudent_club",
    "1422": "SELECT type FROM event WHERE location = 'MU 215';\t----- bird -----\tstudent_club",
    "1423": "SELECT count(*) FROM income WHERE amount = 50;\t----- bird -----\tstudent_club",
    "1424": "SELECT COUNT(*) FROM member WHERE position = 'Member' AND t_shirt_size = 'X-Large';\t----- bird -----\tstudent_club",
    "1425": "SELECT COUNT(*) FROM major WHERE college = 'College of Agriculture and Applied Sciences' AND department = 'School of Applied Sciences, Technology and Education';\t----- bird -----\tstudent_club",
    "1426": "SELECT m.last_name, ma.department, ma.college FROM member m JOIN major ma ON m.link_to_major = ma.major_id WHERE ma.major_name = 'Environmental Engineering';\t----- bird -----\tstudent_club",
    "1427": "SELECT DISTINCT budget.category FROM budget JOIN event ON budget.link_to_event = event.event_id WHERE event.location = 'MU 215' AND event.type = 'Guest Speaker' AND budget.spent = 0;\t----- bird -----\tstudent_club",
    "1428": "SELECT DISTINCT T1.city, T1.state FROM zip_code AS T1 JOIN member AS T2 ON T1.zip_code = T2.zip JOIN major AS T3 ON T2.link_to_major = T3.major_id WHERE T3.department = 'Electrical and Computer Engineering Department' AND T2.position = 'Member';\t----- bird -----\tstudent_club",
    "1429": "SELECT T1.event_name FROM event AS T1 JOIN attendance AS T2 ON T1.event_id = T2.link_to_event JOIN member AS T3 ON T2.link_to_member = T3.member_id WHERE T3.position = 'Vice President' AND T1.type = 'Social' AND T1.location = '900 E. Washington St.';\t----- bird -----\tstudent_club",
    "1430": "SELECT T1.last_name, T1.position FROM member AS T1 JOIN expense AS T2 ON T1.member_id = T2.link_to_member WHERE T2.expense_description = 'Pizza' AND T2.expense_date = '2019-09-10';\t----- bird -----\tstudent_club",
    "1431": "SELECT T1.last_name FROM member AS T1 JOIN attendance AS T2 ON T1.member_id = T2.link_to_member JOIN event AS T3 ON T2.link_to_event = T3.event_id WHERE T3.event_name = 'Women''s Soccer' AND T1.position = 'Member';\t----- bird -----\tstudent_club",
    "1432": "SELECT CAST(SUM(CASE WHEN I.amount = 50 THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(M.member_id) FROM member AS M JOIN income AS I ON M.member_id = I.link_to_member WHERE M.t_shirt_size = 'Medium';\t----- bird -----\tstudent_club",
    "1433": "SELECT DISTINCT state FROM zip_code WHERE type = 'PO Box';\t----- bird -----\tstudent_club",
    "1434": "SELECT zip_code FROM zip_code WHERE type = 'PO Box' AND city = 'San Juan Municipio' AND state = 'PR';\t----- bird -----\tstudent_club",
    "1435": "SELECT event_name FROM event WHERE type = 'Game' AND status = 'Closed' AND event_date BETWEEN '2019-03-15' AND '2020-03-20';\t----- bird -----\tstudent_club",
    "1436": "SELECT T1.link_to_event FROM expense AS T1 JOIN member AS T2 ON T1.link_to_member = T2.member_id WHERE T1.cost > 50;\t----- bird -----\tstudent_club",
    "1437": "SELECT M.first_name, M.last_name, A.link_to_event FROM member AS M JOIN attendance AS A ON M.member_id = A.link_to_member WHERE M.member_id IN (SELECT link_to_member FROM expense WHERE approved = TRUE AND expense_date BETWEEN '2019-01-10' AND '2019-11-19');\t----- bird -----\tstudent_club",
    "1438": "SELECT T1.college FROM major AS T1 JOIN member AS T2 ON T1.major_id = T2.link_to_major WHERE T2.first_name = 'Katy' AND T2.link_to_major = 'rec1N0upiVLy5esTO';\t----- bird -----\tstudent_club",
    "1439": "SELECT m.phone FROM member m JOIN major ma ON m.link_to_major = ma.major_id WHERE ma.major_name = 'Business' AND ma.college = 'College of Agriculture and Applied Sciences';\t----- bird -----\tstudent_club",
    "1440": "SELECT T1.email FROM member AS T1 JOIN expense AS T2 ON T1.member_id = T2.link_to_member WHERE T2.expense_date BETWEEN '2019-09-10' AND '2019-11-19' AND T2.cost > 20;\t----- bird -----\tstudent_club",
    "1441": "SELECT COUNT(m.member_id) FROM member m JOIN major ma ON m.link_to_major = ma.major_id WHERE ma.major_name = 'education' AND ma.college = 'Education & Human Services' AND m.position = 'Member';\t----- bird -----\tstudent_club",
    "1442": "SELECT CAST(SUM(CASE WHEN budget.remaining < 0 THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(DISTINCT event.event_id) FROM budget JOIN event ON budget.link_to_event = event.event_id;\t----- bird -----\tstudent_club",
    "1443": "SELECT event_id, location, status FROM event WHERE event_date BETWEEN '2019-11-01' AND '2020-03-31';\t----- bird -----\tstudent_club",
    "1444": "SELECT expense_description FROM expense WHERE cost > (SELECT AVG(cost) FROM expense);\t----- bird -----\tstudent_club",
    "1445": "SELECT first_name, last_name FROM member WHERE t_shirt_size = 'X-Large';\t----- bird -----\tstudent_club",
    "1446": "SELECT (SUM(CASE WHEN type = 'PO Box' THEN 1 ELSE 0 END) * 100.0) / COUNT(*) FROM zip_code;\t----- bird -----\tstudent_club",
    "1447": "SELECT T1.event_name, T1.location FROM event AS T1 INNER JOIN budget AS T2 ON T1.event_id = T2.link_to_event WHERE T2.remaining > 0;\t----- bird -----\tstudent_club",
    "1448": "SELECT e.event_name, e.event_date FROM event e JOIN expense x ON e.event_id = x.link_to_event WHERE x.expense_description = 'Pizza' AND x.cost > 50 AND x.cost < 100;\t----- bird -----\tstudent_club",
    "1449": "SELECT m.first_name, m.last_name, maj.major_name FROM member m JOIN major maj ON m.link_to_major = maj.major_id JOIN expense e ON m.member_id = e.link_to_member WHERE e.cost > 100;\t----- bird -----\tstudent_club",
    "1450": "SELECT T1.city, T1.county FROM zip_code AS T1 INNER JOIN event AS T2 ON T1.zip_code = T2.location WHERE T2.event_id IN (SELECT link_to_event FROM attendance WHERE link_to_member IN (SELECT member_id FROM member WHERE member_id IN (SELECT link_to_member FROM income WHERE amount > 40)));\t----- bird -----\tstudent_club",
    "1451": "SELECT M.first_name, M.last_name FROM member AS M JOIN expense AS E ON M.member_id = E.link_to_member WHERE M.member_id IN (SELECT link_to_member FROM expense GROUP BY link_to_member HAVING COUNT(expense_id) > 1) ORDER BY (SELECT MAX(cost) FROM expense WHERE link_to_member = M.member_id) DESC LIMIT 1;\t----- bird -----\tstudent_club",
    "1452": "SELECT AVG(E.cost) FROM expense AS E JOIN member AS M ON E.link_to_member = M.member_id WHERE M.position != 'Member';\t----- bird -----\tstudent_club",
    "1453": "SELECT T1.event_name FROM event AS T1 JOIN budget AS T2 ON T1.event_id = T2.link_to_event WHERE T2.category = 'Parking' AND T2.spent < (SELECT DIVIDE(SUM(spent), COUNT(link_to_event)) FROM budget WHERE category = 'Parking');\t----- bird -----\tstudent_club",
    "1454": "SELECT CAST(SUM(e.cost) / COUNT(e.expense_id) * 100 AS DECIMAL(10,2)) AS percentage_of_cost FROM expense AS e JOIN budget AS b ON e.link_to_budget = b.budget_id JOIN event AS ev ON b.link_to_event = ev.event_id WHERE ev.type = 'Meeting';\t----- bird -----\tstudent_club",
    "1455": "SELECT T1.link_to_budget FROM expense AS T1 INNER JOIN budget AS T2 ON T1.link_to_budget = T2.budget_id WHERE T1.expense_description = 'Water, chips, cookies' ORDER BY T1.cost DESC LIMIT 1;\t----- bird -----\tstudent_club",
    "1456": "SELECT T1.first_name, T1.last_name FROM member AS T1 JOIN expense AS T2 ON T1.member_id = T2.link_to_member ORDER BY T2.cost DESC LIMIT 5;\t----- bird -----\tstudent_club",
    "1457": "SELECT m.first_name, m.last_name, m.phone FROM member m JOIN expense e ON m.member_id = e.link_to_member WHERE e.cost > (SELECT AVG(cost) FROM expense);\t----- bird -----\tstudent_club",
    "1458": "SELECT SUBTRACT( DIVIDE( SUM(CASE WHEN state = 'New Jersey' THEN 1 ELSE 0 END), COUNT(CASE WHEN position = 'Member' THEN 1 ELSE 0 END)), DIVIDE( SUM(CASE WHEN state = 'Vermont' THEN 1 ELSE 0 END), COUNT(CASE WHEN position = 'Member' THEN 1 ELSE 0 END)) ) FROM member;\t----- bird -----\tstudent_club",
    "1459": "SELECT T1.major_name, T1.department FROM major AS T1 JOIN member AS T2 ON T1.major_id = T2.link_to_major WHERE T2.first_name = 'Garrett' AND T2.last_name = 'Gerke';\t----- bird -----\tstudent_club",
    "1460": "SELECT m.first_name, m.last_name, e.cost FROM member m JOIN expense e ON m.member_id = e.link_to_member WHERE e.expense_description = 'Water, Veggie tray, supplies';\t----- bird -----\tstudent_club",
    "1461": "SELECT m.last_name, m.phone FROM member m JOIN major ma ON m.link_to_major = ma.major_id WHERE ma.major_name = 'Elementary Education';\t----- bird -----\tstudent_club",
    "1462": "SELECT category, amount FROM budget WHERE link_to_event = (SELECT event_id FROM event WHERE event_name = 'January Speaker');\t----- bird -----\tstudent_club",
    "1463": "SELECT T1.event_name FROM event AS T1 JOIN budget AS T2 ON T1.event_id = T2.link_to_event WHERE T2.category = 'Food';\t----- bird -----\tstudent_club",
    "1464": "SELECT m.first_name, m.last_name, i.amount FROM member m JOIN income i ON m.member_id = i.link_to_member WHERE i.date_received = '2019-09-09';\t----- bird -----\tstudent_club",
    "1465": "SELECT T1.category FROM budget AS T1 INNER JOIN expense AS T2 ON T1.budget_id = T2.link_to_budget WHERE T2.expense_description = 'Posters';\t----- bird -----\tstudent_club",
    "1466": "SELECT m.first_name, m.last_name, ma.college FROM member m JOIN major ma ON m.link_to_major = ma.major_id WHERE m.position = 'Secretary';\t----- bird -----\tstudent_club",
    "1467": "SELECT e.event_name, SUM(b.spent) AS total_spent FROM budget b JOIN event e ON b.link_to_event = e.event_id WHERE b.category = 'Speaker Gifts' GROUP BY e.event_name;\t----- bird -----\tstudent_club",
    "1468": "SELECT T1.city FROM zip_code AS T1 INNER JOIN member AS T2 ON T1.zip_code = T2.zip WHERE T2.first_name = 'Garrett' AND T2.last_name = 'Gerke';\t----- bird -----\tstudent_club",
    "1469": "SELECT first_name, last_name, position FROM member WHERE city = 'Lincolnton' AND state = 'North Carolina' AND zip = '28092';\t----- bird -----\tstudent_club",
    "1470": "SELECT COUNT(*) FROM gasstations WHERE Country = 'CZE' AND Segment = 'Premium';\t----- bird -----\tdebit_card_specializing",
    "1471": "SELECT CAST(SUM(CASE WHEN Currency = 'EUR' THEN 1 ELSE 0 END) AS REAL) / SUM(CASE WHEN Currency = 'CZK' THEN 1 ELSE 0 END) FROM customers;\t----- bird -----\tdebit_card_specializing",
    "1472": "SELECT CustomerID FROM yearmonth WHERE SUBSTR(Date, 1, 4) = '2012' AND SUBSTR(Currency, 1, 3) = 'LAM' ORDER BY Consumption ASC LIMIT 1;\t----- bird -----\tdebit_card_specializing",
    "1473": "SELECT AVG(Consumption) / 12 FROM yearmonth WHERE CustomerID IN (SELECT CustomerID FROM customers WHERE Segment = 'SME') AND Date BETWEEN '201301' AND '201312';\t----- bird -----\tdebit_card_specializing",
    "1474": "SELECT T1.CustomerID FROM yearmonth AS T1 INNER JOIN customers AS T2 ON T1.CustomerID = T2.CustomerID WHERE T2.Currency = 'CZK' AND T1.Date BETWEEN '201101' AND '201112' GROUP BY T1.CustomerID ORDER BY SUM(T1.Consumption) DESC LIMIT 1;\t----- bird -----\tdebit_card_specializing",
    "1475": "SELECT count(DISTINCT CustomerID) FROM yearmonth WHERE Segment = 'KAM' AND Date BETWEEN 201201 AND 201212 AND Consumption < 30000;\t----- bird -----\tdebit_card_specializing",
    "1476": "SELECT SUM(CASE WHEN T1.Currency = 'CZK' THEN T1.Consumption ELSE 0 END) - SUM(CASE WHEN T1.Currency = 'EUR' THEN T1.Consumption ELSE 0 END) FROM yearmonth AS T1 WHERE T1.Date BETWEEN '201201' AND '201212';\t----- bird -----\tdebit_card_specializing",
    "1477": "SELECT STRFTIME('%Y', Date) FROM transactions_1k WHERE Currency = 'EUR' GROUP BY 1 ORDER BY COUNT(*) DESC LIMIT 1;\t----- bird -----\tdebit_card_specializing",
    "1478": "SELECT Segment FROM yearmonth GROUP BY Segment ORDER BY SUM(Consumption) LIMIT 1;\t----- bird -----\tdebit_card_specializing",
    "1479": "SELECT SUBSTR(Date, 1, 4) FROM yearmonth WHERE Currency = 'CZK' GROUP BY SUBSTR(Date, 1, 4) ORDER BY SUM(Consumption) DESC LIMIT 1;\t----- bird -----\tdebit_card_specializing",
    "1480": "SELECT SUBSTR(Date, 5, 2) FROM yearmonth WHERE CustomerID IN (SELECT CustomerID FROM customers WHERE Segment = 'SME') AND SUBSTR(Date, 1, 2) = '13' GROUP BY SUBSTR(Date, 5, 2) ORDER BY SUM(Consumption) DESC LIMIT 1;\t----- bird -----\tdebit_card_specializing",
    "1481": "SELECT SUM(CASE WHEN T1.Segment = 'SME' THEN T1.Consumption ELSE 0 END) - SUM(CASE WHEN T1.Segment = 'LAM' THEN T1.Consumption ELSE 0 END) AS SME_LAM_Diff, SUM(CASE WHEN T1.Segment = 'LAM' THEN T1.Consumption ELSE 0 END) - SUM(CASE WHEN T1.Segment = 'KAM' THEN T1.Consumption ELSE 0 END) AS LAM_KAM_Diff, SUM(CASE WHEN T1.Segment = 'KAM' THEN T1.Consumption ELSE 0 END) - SUM(CASE WHEN T1.Segment = 'SME' THEN T1.Consumption ELSE 0 END) AS KAM_SME_Diff FROM yearmonth AS T1 WHERE T1.Date BETWEEN '201301' AND '201312' AND T1.Currency = 'CZK';\t----- bird -----\tdebit_card_specializing",
    "1482": "SELECT Segment FROM yearmonth WHERE SUBSTR(Date, 1, 10) BETWEEN '2012-01-01' AND '2013-12-31' AND CustomerID IN (SELECT CustomerID FROM customers WHERE Currency = 'EUR') GROUP BY Segment ORDER BY SUM(Consumption) DESC, SUM(Consumption) ASC LIMIT 3;\t----- bird -----\tdebit_card_specializing",
    "1483": "SELECT SUM(Consumption) FROM yearmonth WHERE CustomerID = 6 AND Date BETWEEN '201308' AND '201311';\t----- bird -----\tdebit_card_specializing",
    "1484": "SELECT SUM(CASE WHEN gs.Country = 'CZE' THEN 1 ELSE 0 END) - SUM(CASE WHEN gs.Country = 'SVK' THEN 1 ELSE 0 END) FROM gasstations gs WHERE gs.Segment = 'discount';\t----- bird -----\tdebit_card_specializing",
    "1485": "SELECT Consumption - (SELECT Consumption FROM yearmonth WHERE CustomerID = 5 AND Date = '201304') FROM yearmonth WHERE CustomerID = 7 AND Date = '201304';\t----- bird -----\tdebit_card_specializing",
    "1486": "SELECT SUM(CASE WHEN T1.Currency = 'CZK' THEN 1 ELSE 0 END) - SUM(CASE WHEN T1.Currency = 'EUR' THEN 1 ELSE 0 END) FROM customers AS C JOIN transactions_1k AS T1 ON C.CustomerID = T1.CustomerID WHERE C.Segment = 'SME';\t----- bird -----\tdebit_card_specializing",
    "1487": "SELECT T1.CustomerID FROM yearmonth AS T1 INNER JOIN customers AS T2 ON T1.CustomerID = T2.CustomerID WHERE T2.Segment = 'LAM' AND T2.Currency = 'EUR' AND T1.Date = '201310' ORDER BY T1.Consumption DESC LIMIT 1;\t----- bird -----\tdebit_card_specializing",
    "1488": "SELECT T1.CustomerID, SUM(T1.Consumption) AS TotalConsumption FROM yearmonth AS T1 WHERE T1.CustomerID IN (SELECT CustomerID FROM customers WHERE Segment = 'KAM') GROUP BY T1.CustomerID ORDER BY TotalConsumption DESC LIMIT 1;\t----- bird -----\tdebit_card_specializing",
    "1489": "SELECT sum(Consumption) FROM yearmonth WHERE CustomerID IN (SELECT CustomerID FROM customers WHERE Segment = 'KAM') AND Date = 201305;\t----- bird -----\tdebit_card_specializing",
    "1490": "SELECT CAST(SUM(CASE WHEN Consumption > 46.73 THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(*) FROM yearmonth WHERE CustomerID IN (SELECT CustomerID FROM customers WHERE Segment = 'LAM');\t----- bird -----\tdebit_card_specializing",
    "1491": "SELECT Country, COUNT(*) AS ValueForMoneyGasStations FROM gasstations WHERE Segment = 'value for money' GROUP BY Country;\t----- bird -----\tdebit_card_specializing",
    "1492": "SELECT CAST(SUM(CASE WHEN c.Currency = 'EUR' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(c.CustomerID) AS Percentage_KAM_Euro FROM customers c JOIN transactions_1k t ON c.CustomerID = t.CustomerID;\t----- bird -----\tdebit_card_specializing",
    "1493": "SELECT CAST(SUM(CASE WHEN Consumption > 528.3 THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(CustomerID) FROM yearmonth WHERE Date = '201202';\t----- bird -----\tdebit_card_specializing",
    "1494": "SELECT CAST(SUM(CASE WHEN gs.Segment = 'Premium' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(gs.GasStationID) FROM gasstations gs WHERE gs.Country = 'Slovakia';\t----- bird -----\tdebit_card_specializing",
    "1495": "SELECT CustomerID FROM yearmonth WHERE Date = '201309' ORDER BY Consumption DESC LIMIT 1;\t----- bird -----\tdebit_card_specializing",
    "1496": "SELECT T1.Segment FROM yearmonth AS T1 WHERE T1.Date = '201309' GROUP BY T1.Segment ORDER BY SUM(T1.Consumption) ASC LIMIT 1;\t----- bird -----\tdebit_card_specializing",
    "1497": "SELECT CustomerID FROM yearmonth WHERE Date = '201206' AND Segment = 'SME' ORDER BY Consumption LIMIT 1;\t----- bird -----\tdebit_card_specializing",
    "1498": "SELECT max(Consumption) FROM yearmonth WHERE substr(Date, 1, 4) = '2012';\t----- bird -----\tdebit_card_specializing",
    "1499": "SELECT MAX(Consumption) FROM yearmonth WHERE CustomerID IN (SELECT CustomerID FROM customers WHERE Currency = 'euro');\t----- bird -----\tdebit_card_specializing",
    "1500": "SELECT T1.Description FROM products AS T1 JOIN transactions_1k AS T2 ON T1.ProductID = T2.ProductID WHERE T2.Date LIKE '201309%';\t----- bird -----\tdebit_card_specializing",
    "1501": "SELECT DISTINCT T1.Country FROM gasstations AS T1 JOIN transactions_1k AS T2 ON T1.GasStationID = T2.GasStationID WHERE T2.Date LIKE '201306%';\t----- bird -----\tdebit_card_specializing",
    "1502": "SELECT DISTINCT g.ChainID FROM gasstations g JOIN transactions_1k t ON g.GasStationID = t.GasStationID WHERE t.Currency = 'EUR';\t----- bird -----\tdebit_card_specializing",
    "1503": "SELECT p.Description FROM products p JOIN transactions_1k t ON p.ProductID = t.ProductID WHERE t.Currency = 'EUR';\t----- bird -----\tdebit_card_specializing",
    "1504": "SELECT AVG(Price * Amount) FROM transactions_1k WHERE Date LIKE '2012-01%';\t----- bird -----\tdebit_card_specializing",
    "1505": "SELECT COUNT(DISTINCT CustomerID) FROM yearmonth WHERE Currency = 'EUR' AND Consumption > 1000;\t----- bird -----\tdebit_card_specializing",
    "1506": "SELECT p.Description FROM transactions_1k t JOIN gasstations g ON t.GasStationID = g.GasStationID JOIN products p ON t.ProductID = p.ProductID WHERE g.Country = 'CZE';\t----- bird -----\tdebit_card_specializing",
    "1507": "SELECT DISTINCT Time FROM transactions_1k WHERE GasStationID IN (SELECT GasStationID FROM gasstations WHERE ChainID = 11);\t----- bird -----\tdebit_card_specializing",
    "1508": "SELECT count(*) FROM transactions_1k WHERE GasStationID IN (SELECT GasStationID FROM gasstations WHERE Country = 'CZE') AND Price > 1000;\t----- bird -----\tdebit_card_specializing",
    "1509": "SELECT COUNT(*) FROM transactions_1k WHERE GasStationID IN (SELECT GasStationID FROM gasstations WHERE Country = 'CZE') AND Date > '2012-01-01';\t----- bird -----\tdebit_card_specializing",
    "1510": "SELECT AVG(Price) FROM transactions_1k WHERE GasStationID IN (SELECT GasStationID FROM gasstations WHERE Country = 'CZE');\t----- bird -----\tdebit_card_specializing",
    "1511": "SELECT AVG(Price) FROM transactions_1k WHERE CustomerID IN (SELECT CustomerID FROM customers WHERE Currency = 'EUR');\t----- bird -----\tdebit_card_specializing",
    "1512": "SELECT CustomerID FROM transactions_1k WHERE Date = '2012/08/25' ORDER BY Amount DESC LIMIT 1;\t----- bird -----\tdebit_card_specializing",
    "1513": "SELECT T1.Country FROM gasstations AS T1 JOIN transactions_1k AS T2 ON T1.GasStationID = T2.GasStationID WHERE T2.Date = '2012-08-25' ORDER BY T2.TransactionID LIMIT 1;\t----- bird -----\tdebit_card_specializing",
    "1514": "SELECT T1.Currency FROM customers AS T1 JOIN transactions_1k AS T2 ON T1.CustomerID = T2.CustomerID WHERE T2.Time = '16:25:00' AND T2.Date = '2012-08-24';\t----- bird -----\tdebit_card_specializing",
    "1515": "SELECT T1.Segment FROM customers AS T1 JOIN transactions_1k AS T2 ON T1.CustomerID = T2.CustomerID WHERE T2.Date = '2012/8/23' AND T2.Time = '21:20:00';\t----- bird -----\tdebit_card_specializing",
    "1516": "SELECT count(*) FROM transactions_1k WHERE Currency = 'CZK' AND Date = '2012-08-26' AND Time < '13:00:00';\t----- bird -----\tdebit_card_specializing",
    "1517": "SELECT T1.Segment FROM customers AS T1 ORDER BY T1.CustomerID ASC LIMIT 1;\t----- bird -----\tdebit_card_specializing",
    "1518": "SELECT T1.Country FROM gasstations AS T1 JOIN transactions_1k AS T2 ON T1.GasStationID = T2.GasStationID WHERE T2.Date = '2012-08-24' AND T2.Time = '12:42:00';\t----- bird -----\tdebit_card_specializing",
    "1519": "SELECT ProductID FROM transactions_1k WHERE Date = '2012-08-23' AND Time = '21:20:00';\t----- bird -----\tdebit_card_specializing",
    "1520": "SELECT SUM(t1.Amount * t1.Price) AS total_spent, '2012-01-01' AS date, SUM(y.Consumption) AS consumption FROM transactions_1k t1 JOIN yearmonth y ON t1.CustomerID = y.CustomerID WHERE t1.CustomerID IN (SELECT CustomerID FROM transactions_1k WHERE Amount = 124.05 AND Date = '2012-08-24') AND y.Date BETWEEN '2012-01-01' AND '2012-01-31';\t----- bird -----\tdebit_card_specializing",
    "1521": "SELECT COUNT(T1.TransactionID) FROM transactions_1k AS T1 JOIN gasstations AS GS ON T1.GasStationID = GS.GasStationID WHERE GS.Country = 'CZE' AND T1.Date = '2012-08-26' AND T1.Time BETWEEN '08:00:00' AND '09:00:00';\t----- bird -----\tdebit_card_specializing",
    "1522": "SELECT DISTINCT T1.Currency FROM customers AS T1 JOIN transactions_1k AS T2 ON T1.CustomerID = T2.CustomerID WHERE T1.CustomerID IN (SELECT CustomerID FROM yearmonth WHERE Date LIKE '201306%' AND Consumption = 214582.17);\t----- bird -----\tdebit_card_specializing",
    "1523": "SELECT T1.Country FROM gasstations AS T1 INNER JOIN transactions_1k AS T2 ON T1.GasStationID = T2.GasStationID WHERE T2.CardID = '667467';\t----- bird -----\tdebit_card_specializing",
    "1524": "SELECT T1.Country FROM gasstations AS T1 INNER JOIN transactions_1k AS T2 ON T1.GasStationID = T2.GasStationID WHERE T2.Date = '2012/08/24' AND T2.Amount = 548.4;\t----- bird -----\tdebit_card_specializing",
    "1525": "SELECT CAST(SUM(CASE WHEN T1.Date = '2012-08-25' AND C.Currency = 'EUR' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(DISTINCT C.CustomerID) FROM transactions_1k AS T1 JOIN customers AS C ON T1.CustomerID = C.CustomerID WHERE T1.Date = '2012-08-25';\t----- bird -----\tdebit_card_specializing",
    "1526": "SELECT T2.ConsumptionDecreaseRate FROM (SELECT CustomerID FROM transactions_1k WHERE Date = '2012-08-25' AND Amount = 634.8) AS T1 INNER JOIN (SELECT CustomerID, (Consumption_2012 - Consumption_2013) / Consumption_2012 AS ConsumptionDecreaseRate FROM yearmonth WHERE Date LIKE '2012%' OR Date LIKE '2013%') AS T2 ON T1.CustomerID = T2.CustomerID;\t----- bird -----\tdebit_card_specializing",
    "1527": "SELECT GasStationID FROM transactions_1k GROUP BY GasStationID ORDER BY SUM(Amount * Price) DESC LIMIT 1;\t----- bird -----\tdebit_card_specializing",
    "1528": "SELECT CAST(SUM(CASE WHEN T1.Segment = 'premium' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(T1.Segment) FROM gasstations AS T1 WHERE T1.Country = 'SVK';\t----- bird -----\tdebit_card_specializing",
    "1529": "SELECT SUM(T1.Amount) FROM transactions_1k AS T1 WHERE T1.CustomerID = '38508' AND T1.Date = '201201';\t----- bird -----\tdebit_card_specializing",
    "1530": "SELECT p.Description FROM transactions_1k t JOIN products p ON t.ProductID = p.ProductID GROUP BY p.ProductID ORDER BY SUM(t.Amount) DESC LIMIT 5;\t----- bird -----\tdebit_card_specializing",
    "1531": "SELECT c.CustomerID, c.Currency, SUM(t.Amount * t.Price) AS TotalSpent, AVG(t.Price) AS AvgPricePerItem FROM customers c JOIN transactions_1k t ON c.CustomerID = t.CustomerID GROUP BY c.CustomerID ORDER BY TotalSpent DESC LIMIT 1;\t----- bird -----\tdebit_card_specializing",
    "1532": "SELECT T1.Country FROM gasstations AS T1 INNER JOIN transactions_1k AS T2 ON T1.GasStationID = T2.GasStationID WHERE T2.ProductID = 2 ORDER BY T2.Price DESC LIMIT 1;\t----- bird -----\tdebit_card_specializing",
    "1533": "SELECT T1.Consumption FROM yearmonth AS T1 WHERE T1.CustomerID IN (SELECT T2.CustomerID FROM transactions_1k AS T2 WHERE T2.ProductID = 5 AND T2.Price / T2.Amount > 29.00 AND T2.Date = '201208');\t----- bird -----\tdebit_card_specializing"
}