{
    "0": "SELECT MAX(`Percent (%) Eligible Free (K-12)`) FROM frpm WHERE `County Name` = 'Alameda';\t----- bird -----\tcalifornia_schools",
    "1": "SELECT `Percent (%) Eligible Free (Ages 5-17)` FROM frpm WHERE `School Type` = 'Continuation' ORDER BY `Percent (%) Eligible Free (Ages 5-17)` ASC LIMIT 3;\t----- bird -----\tcalifornia_schools",
    "2": "SELECT Zip FROM schools WHERE County = 'Fresno County Office of Education' AND Charter = 'Y';\t----- bird -----\tcalifornia_schools",
    "3": "SELECT MailStreet FROM schools WHERE CDSCode = (SELECT `CDSCode` FROM frpm ORDER BY `FRPM Count (K-12)` DESC LIMIT 1);\t----- bird -----\tcalifornia_schools",
    "4": "SELECT Phone FROM schools WHERE Charter = 'Y' AND FundingType = 'Direct Charter' AND OpenDate > '2000-01-01' AND (ClosedDate IS NULL OR ClosedDate > CURRENT_DATE);\t----- bird -----\tcalifornia_schools",
    "5": "SELECT COUNT(*) FROM schools s JOIN satscores sa ON s.CDSCode = sa.cds WHERE sa.AvgScrMath > 400 AND s.Virtual = 'Yes' AND s.StatusType = 'Exclusive';\t----- bird -----\tcalifornia_schools",
    "6": "SELECT s.* FROM schools s JOIN satscores sa ON s.CDSCode = sa.cds WHERE sa.NumTstTakr > 500 AND (s.Magnet = 'Y' OR s.GSoffered LIKE '%Magnet%');\t----- bird -----\tcalifornia_schools",
    "7": "SELECT s.Phone FROM satscores sa JOIN schools s ON sa.cds = s.CDSCode WHERE sa.NumGE1500 = (SELECT MAX(NumGE1500) FROM satscores);\t----- bird -----\tcalifornia_schools",
    "8": "SELECT s.NumTstTakr FROM satscores s JOIN frpm f ON s.cds = f.CDSCode WHERE f.`FRPM Count (K-12)` = (SELECT MAX(`FRPM Count (K-12)`) FROM frpm);\t----- bird -----\tcalifornia_schools",
    "9": "SELECT COUNT(DISTINCT s.CDSCode) FROM satscores sa JOIN schools s ON sa.cds = s.CDSCode WHERE sa.AvgScrMath > 560 AND s.Charter = 'Y' AND s.FundingType = 'Charter';\t----- bird -----\tcalifornia_schools",
    "10": "SELECT frpm.`FRPM Count (Ages 5-17)` FROM frpm JOIN satscores ON frpm.CDSCode = satscores.cds WHERE satscores.AvgScrRead = (SELECT MAX(AvgScrRead) FROM satscores);\t----- bird -----\tcalifornia_schools",
    "11": "SELECT CDSCode FROM frpm WHERE `Enrollment (K-12)` > 500;\t----- bird -----\tcalifornia_schools",
    "12": "SELECT MAX(`Percent (%) Eligible Free (Ages 5-17)`) FROM frpm WHERE CDSCode IN (SELECT cds FROM satscores WHERE NumTstTakr > 0 AND (NumGE1500 * 1.0 / NumTstTakr) > 0.3);\t----- bird -----\tcalifornia_schools",
    "13": "SELECT s.Phone FROM schools s JOIN satscores sa ON s.CDSCode = sa.cds ORDER BY (sa.NumGE1500 * 1.0 / sa.NumTstTakr) DESC LIMIT 3;\t----- bird -----\tcalifornia_schools",
    "14": "SELECT `NCESSchool` FROM frpm ORDER BY `Enrollment (Ages 5-17)` DESC LIMIT 5;\t----- bird -----\tcalifornia_schools",
    "15": "SELECT dname AS District, AVG(AvgScrRead) AS AvgReadingScore FROM satscores WHERE rtype = 'District' GROUP BY dname ORDER BY AvgReadingScore DESC LIMIT 1;\t----- bird -----\tcalifornia_schools",
    "16": "SELECT COUNT(DISTINCT cds) FROM satscores WHERE cname = 'Alameda' AND NumTstTakr < 100;\t----- bird -----\tcalifornia_schools",
    "17": "SELECT cds, CharterNum, AvgScrWrite FROM satscores JOIN schools ON satscores.cds = schools.CDSCode WHERE AvgScrWrite > 499 ORDER BY AvgScrWrite DESC;\t----- bird -----\tcalifornia_schools",
    "18": "SELECT COUNT(*) FROM satscores WHERE cname = 'Fresno' AND rtype = 'S' AND NumTstTakr <= 250;\t----- bird -----\tcalifornia_schools",
    "19": "SELECT Phone FROM schools WHERE CDSCode = (SELECT cds FROM satscores ORDER BY AvgScrMath DESC LIMIT 1) LIMIT 1;\t----- bird -----\tcalifornia_schools",
    "20": "SELECT COUNT(*) FROM frpm WHERE `County Name` = 'Amador' AND `Low Grade` = 9 AND `High Grade` = 12;\t----- bird -----\tcalifornia_schools",
    "21": "SELECT COUNT(*) FROM frpm WHERE `County Name` = 'Los Angeles' AND `Free Meal Count (K-12)` > 500 AND `FRPM Count (K-12)` < 700;\t----- bird -----\tcalifornia_schools",
    "22": "SELECT sname FROM satscores WHERE cname = 'Contra Costa' ORDER BY NumTstTakr DESC LIMIT 1;\t----- bird -----\tcalifornia_schools",
    "23": "SELECT frpm.`School Name`, CONCAT(schools.Street, ' ', schools.StreetAbr, ', ', schools.City, ', ', schools.State, ' ', schools.Zip) AS FullAddress FROM frpm JOIN schools ON frpm.`CDSCode` = schools.CDSCode WHERE ABS(frpm.`Enrollment (K-12)` - frpm.`Enrollment (Ages 5-17)`) > 30;\t----- bird -----\tcalifornia_schools",
    "24": "SELECT frpm.`School Name` FROM frpm JOIN satscores ON frpm.`CDSCode` = satscores.cds WHERE frpm.`Percent (%) Eligible Free (K-12)` > 0.1 AND satscores.NumGE1500 > 0;\t----- bird -----\tcalifornia_schools",
    "25": "SELECT s.School, s.FundingType FROM schools s JOIN satscores sa ON s.CDSCode = sa.cds WHERE s.County = 'Riverside' AND sa.AvgScrMath > 400;\t----- bird -----\tcalifornia_schools",
    "26": "SELECT School, Street || ' ' || StreetAbr || ', ' || City || ', ' || State || ' ' || Zip AS Full_Address FROM schools s JOIN frpm f ON s.CDSCode = f.`CDSCode` WHERE s.County = 'Monterey' AND f.`High Grade` >= 9 AND f.`Low Grade` <= 12 AND (f.`Free Meal Count (Ages 5-17)` + f.`FRPM Count (Ages 5-17)`) > 800;\t----- bird -----\tcalifornia_schools",
    "27": "SELECT schools.School, satscores.AvgScrWrite, schools.Phone FROM schools JOIN satscores ON schools.CDSCode = satscores.cds WHERE (schools.OpenDate > '1991-12-31' OR (schools.ClosedDate IS NOT NULL AND schools.ClosedDate < '2000-01-01')) AND satscores.AvgScrWrite IS NOT NULL;\t----- bird -----\tcalifornia_schools",
    "28": "SELECT School, DOCType FROM schools WHERE FundingType = 'Local' AND (SELECT AVG(CAST(REPLACE(REPLACE(frpm.`Enrollment (K-12)`, ',', ''), ' ', '') AS INT) - CAST(REPLACE(REPLACE(frpm.`Enrollment (Ages 15-17)`, ',', ''), ' ', '') AS INT)) FROM frpm JOIN schools ON frpm.`CDSCode` = schools.CDSCode WHERE schools.FundingType = 'Local') < (CAST(REPLACE(REPLACE(frpm.`Enrollment (K-12)`, ',', ''), ' ', '') AS INT) - CAST(REPLACE(REPLACE(frpm.`Enrollment (Ages 15-17)`, ',', ''), ' ', '') AS INT)) AND frpm.`CDSCode` = schools.CDSCode;\t----- bird -----\tcalifornia_schools",
    "29": "SELECT OpenDate FROM schools WHERE CDSCode = (SELECT `School Code` FROM frpm WHERE `Low Grade` = '1' AND `High Grade` = '12' ORDER BY `Enrollment (K-12)` DESC LIMIT 1) LIMIT 1;\t----- bird -----\tcalifornia_schools",
    "30": "SELECT City FROM schools WHERE GSoffered LIKE '%1%' AND GSoffered LIKE '%12%' ORDER BY (SELECT SUM(CAST(REPLACE(REPLACE(\"Enrollment (K-12)\", ',', '') AS INTEGER)) FROM frpm WHERE frpm.\"School Code\" = schools.NCESSchool) ASC LIMIT 5;\t----- bird -----\tcalifornia_schools",
    "31": "SELECT `School Name`, `Percent (%) Eligible Free (K-12)` FROM frpm WHERE `Low Grade` <= 1 AND `High Grade` >= 12 ORDER BY `Enrollment (K-12)` DESC LIMIT 10 OFFSET 9;\t----- bird -----\tcalifornia_schools",
    "32": "SELECT `School Name`, `Percent (%) Eligible FRPM (K-12)` FROM frpm WHERE `Low Grade` <= 1 AND `High Grade` >= 12 AND IRC = 66 ORDER BY `FRPM Count (K-12)` DESC LIMIT 5;\t----- bird -----\tcalifornia_schools",
    "33": "SELECT frpm.`School Name`, schools.`Website` FROM frpm JOIN schools ON frpm.`CDSCode` = schools.`CDSCode` WHERE frpm.`Free Meal Count (Ages 5-17)` BETWEEN 1900 AND 2000;\t----- bird -----\tcalifornia_schools",
    "34": "SELECT `Percent (%) Eligible Free (Ages 5-17)` FROM frpm WHERE `School Name` IN (SELECT School FROM schools WHERE AdmFName1 = 'Kacey' AND AdmLName1 = 'Gibson') LIMIT 1;\t----- bird -----\tcalifornia_schools",
    "35": "SELECT AdmEmail1 FROM schools WHERE Charter = 'Y' ORDER BY (SELECT SUM(\"Enrollment (K-12)\") FROM frpm WHERE frpm.\"CDSCode\" = schools.CDSCode) ASC LIMIT 1;\t----- bird -----\tcalifornia_schools",
    "36": "SELECT AdmFName1 || ' ' || AdmLName1 AS AdminFullName FROM schools WHERE CDSCode = (SELECT cds FROM satscores ORDER BY NumGE1500 DESC LIMIT 1);\t----- bird -----\tcalifornia_schools",
    "37": "SELECT Street, City, Zip, State FROM schools WHERE CDSCode = (SELECT cds FROM satscores ORDER BY (NumGE1500*1.0/NumTstTakr) ASC LIMIT 1);\t----- bird -----\tcalifornia_schools",
    "38": "SELECT s.Website FROM schools s JOIN satscores sa ON s.CDSCode = sa.cds WHERE s.County = 'Los Angeles' AND sa.NumTstTakr BETWEEN 2000 AND 3000;\t----- bird -----\tcalifornia_schools",
    "39": "SELECT AVG(s.NumTstTakr) FROM satscores s JOIN schools sc ON s.cds = sc.CDSCode WHERE sc.County = 'Fresno' AND sc.OpenDate BETWEEN '1980-01-01' AND '1980-12-31';\t----- bird -----\tcalifornia_schools",
    "40": "SELECT Phone FROM schools WHERE CDSCode = (SELECT cds FROM satscores WHERE dname = 'Fresno Unified' ORDER BY AvgScrRead ASC LIMIT 1) LIMIT 1;\t----- bird -----\tcalifornia_schools",
    "41": "SELECT s.School FROM (SELECT s.CDSCode, s.School, s.County, sa.AvgScrRead, RANK() OVER (PARTITION BY s.County ORDER BY sa.AvgScrRead DESC) as rank_in_county FROM schools s JOIN satscores sa ON s.CDSCode = sa.cds WHERE s.Virtual = 'Y') sub WHERE rank_in_county <= 5;\t----- bird -----\tcalifornia_schools",
    "42": "SELECT frpm.`Educational Option Type` FROM frpm JOIN satscores ON frpm.`CDSCode` = satscores.cds WHERE satscores.AvgScrMath = (SELECT MAX(AvgScrMath) FROM satscores);\t----- bird -----\tcalifornia_schools",
    "43": "SELECT s.cname AS County, ss.AvgScrMath FROM satscores ss JOIN satscores ss2 ON ss.cds = ss2.cds JOIN satscores ss3 ON ss.cds = ss3.cds JOIN satscores ss_all ON ss.cds = ss_all.cds JOIN satscores ss_min ON (ss.AvgScrRead + ss.AvgScrMath + ss.AvgScrWrite) = (SELECT MIN(AvgScrRead + AvgScrMath + AvgScrWrite) FROM satscores) WHERE ss.rtype = 'S' AND ss.cds = (SELECT cds FROM satscores WHERE (AvgScrRead + AvgScrMath + AvgScrWrite) = (SELECT MIN(AvgScrRead + AvgScrMath + AvgScrWrite) FROM satscores) LIMIT 1) LIMIT 1;\t----- bird -----\tcalifornia_schools",
    "44": "SELECT s.City, sc.AvgScrWrite FROM satscores sc JOIN schools s ON sc.cds = s.CDSCode WHERE sc.NumGE1500 = (SELECT MAX(NumGE1500) FROM satscores);\t----- bird -----\tcalifornia_schools",
    "45": "SELECT s.School, AVG(sa.AvgScrWrite) AS AverageWritingScore FROM schools s JOIN satscores sa ON s.CDSCode = sa.cds WHERE (s.AdmFName1 = 'Ricci' AND s.AdmLName1 = 'Ulrich') OR (s.AdmFName2 = 'Ricci' AND s.AdmLName2 = 'Ulrich') OR (s.AdmFName3 = 'Ricci' AND s.AdmLName3 = 'Ulrich') GROUP BY s.School;\t----- bird -----\tcalifornia_schools",
    "46": "SELECT School, MAX(\"Enrollment (K-12)\") AS MaxEnrollment FROM frpm WHERE \"School Type\" = 'State Special School' GROUP BY School ORDER BY MaxEnrollment DESC LIMIT 1;\t----- bird -----\tcalifornia_schools",
    "47": "SELECT AVG(monthly_count) AS monthly_average FROM (SELECT EXTRACT(MONTH FROM OpenDate) AS month, COUNT(*) AS monthly_count FROM schools WHERE County = 'Alameda' AND District = 'Elementary School District' AND EXTRACT(YEAR FROM OpenDate) = 1980 GROUP BY EXTRACT(MONTH FROM OpenDate)) subquery;\t----- bird -----\tcalifornia_schools",
    "48": "SELECT (SELECT COUNT(*) FROM schools WHERE District LIKE '%Unified School District%' AND County = 'Orange') * 1.0 / (SELECT COUNT(*) FROM schools WHERE District LIKE '%Elementary School District%' AND County = 'Orange') AS ratio;\t----- bird -----\tcalifornia_schools",
    "49": "SELECT County, School, ClosedDate FROM schools WHERE StatusType = 'Closed' AND County = (SELECT County FROM schools WHERE StatusType = 'Closed' GROUP BY County ORDER BY COUNT(*) DESC LIMIT 1) ORDER BY ClosedDate DESC;\t----- bird -----\tcalifornia_schools",
    "50": "SELECT School, MailStreet FROM satscores JOIN schools ON satscores.cds = schools.CDSCode WHERE rtype = 'S' ORDER BY AvgScrMath DESC LIMIT 1 OFFSET 6;\t----- bird -----\tcalifornia_schools",
    "51": "SELECT schools.MailStreet, schools.School FROM schools JOIN satscores ON schools.CDSCode = satscores.cds WHERE satscores.AvgScrRead = (SELECT MIN(AvgScrRead) FROM satscores);\t----- bird -----\tcalifornia_schools",
    "52": "SELECT COUNT(DISTINCT s.CDSCode) FROM schools s JOIN satscores sa ON s.CDSCode = sa.cds WHERE sa.NumGE1500 >= 1500 AND s.MailCity = 'Lakeport';\t----- bird -----\tcalifornia_schools",
    "53": "SELECT SUM(s.NumTstTakr) FROM satscores s JOIN schools sc ON s.cds = sc.CDSCode WHERE sc.MailCity = 'Fresno';\t----- bird -----\tcalifornia_schools",
    "54": "SELECT School, MailZip FROM schools WHERE AdmFName1 = 'Avetik' AND AdmLName1 = 'Atoian' OR AdmFName2 = 'Avetik' AND AdmLName2 = 'Atoian' OR AdmFName3 = 'Avetik' AND AdmLName3 = 'Atoian';\t----- bird -----\tcalifornia_schools",
    "55": "SELECT CAST(SUM(CASE WHEN County = 'Colusa' THEN 1 ELSE 0 END) AS FLOAT) / NULLIF(SUM(CASE WHEN County = 'Humboldt' THEN 1 ELSE 0 END), 0) AS Colusa_to_Humboldt_Ratio FROM schools WHERE MailState = 'CA';\t----- bird -----\tcalifornia_schools",
    "56": "SELECT COUNT(*) FROM schools WHERE MailState = 'CA' AND City = 'San Joaquin' AND StatusType = 'Active';\t----- bird -----\tcalifornia_schools",
    "57": "SELECT Phone, Ext FROM schools WHERE CDSCode = (SELECT cds FROM satscores ORDER BY AvgScrWrite DESC LIMIT 1 OFFSET 332);\t----- bird -----\tcalifornia_schools",
    "58": "SELECT School, Phone, Ext FROM schools WHERE Zip = '95203-3704';\t----- bird -----\tcalifornia_schools",
    "59": "SELECT Website FROM schools WHERE (AdmFName1 = 'Mike' AND AdmLName1 = 'Larson') OR (AdmFName1 = 'Dante' AND AdmLName1 = 'Alvarez') OR (AdmFName2 = 'Mike' AND AdmLName2 = 'Larson') OR (AdmFName2 = 'Dante' AND AdmLName2 = 'Alvarez') OR (AdmFName3 = 'Mike' AND AdmLName3 = 'Larson') OR (AdmFName3 = 'Dante' AND AdmLName3 = 'Alvarez');\t----- bird -----\tcalifornia_schools",
    "60": "SELECT Website FROM schools WHERE County = 'San Joaquin' AND Charter = 'Y' AND Virtual = 'Partial' AND Website IS NOT NULL;\t----- bird -----\tcalifornia_schools",
    "61": "SELECT COUNT(*) FROM schools WHERE Charter = 'Y' AND City = 'Hickman' AND District = 'Elementary School District';\t----- bird -----\tcalifornia_schools",
    "62": "SELECT COUNT(*) FROM frpm WHERE `County Name` = 'Los Angeles' AND `Charter School (Y/N)` = 'N' AND `Percent (%) Eligible Free (K-12)` < 0.18;\t----- bird -----\tcalifornia_schools",
    "63": "SELECT School, City, AdmFName1 || ' ' || AdmLName1 AS Admin1, AdmFName2 || ' ' || AdmLName2 AS Admin2, AdmFName3 || ' ' || AdmLName3 AS Admin3 FROM schools WHERE CharterNum = '00D2' AND Charter = 'Y';\t----- bird -----\tcalifornia_schools",
    "64": "SELECT COUNT(*) FROM schools WHERE MailCity = 'Hickman' AND CharterNum = '00D4';\t----- bird -----\tcalifornia_schools",
    "65": "SELECT (SUM(CASE WHEN Charter = 'Y' AND FundingType = 'Local' THEN 1 ELSE 0 END) * 100.0) / NULLIF(SUM(CASE WHEN Charter = 'Y' THEN 1 ELSE 0 END), 0) AS Local_Funded_Percentage FROM schools WHERE County = 'Santa Clara' AND Charter = 'Y';\t----- bird -----\tcalifornia_schools",
    "66": "SELECT COUNT(*) FROM schools WHERE County = 'Stanislaus' AND FundingType = 'Direct' AND OpenDate BETWEEN '2000-01-01' AND '2005-12-31' AND (ClosedDate IS NULL OR ClosedDate > '2005-12-31');\t----- bird -----\tcalifornia_schools",
    "67": "SELECT COUNT(*) AS TotalClosures FROM schools WHERE DOC = 'Community College District' AND ClosedDate LIKE '1989%' AND City = 'San Francisco';\t----- bird -----\tcalifornia_schools",
    "68": "SELECT County, COUNT(*) AS ClosureCount FROM schools WHERE ClosedDate BETWEEN '1980-01-01' AND '1989-12-31' AND SOC = 'CEA' GROUP BY County ORDER BY ClosureCount DESC LIMIT 1;\t----- bird -----\tcalifornia_schools",
    "69": "SELECT NCESDist FROM schools WHERE SOCType = 'State Special Schools' AND SOC IS NOT NULL;\t----- bird -----\tcalifornia_schools",
    "70": "SELECT StatusType, COUNT(*) AS SchoolCount FROM schools WHERE District = 'District Community Day Schools' AND County = 'Alpine' AND StatusType IN ('Active', 'Closed') GROUP BY StatusType;\t----- bird -----\tcalifornia_schools",
    "71": "SELECT DISTINCT \"District Code\" FROM frpm WHERE \"School Name\" IN (SELECT School FROM schools WHERE City = 'Fresno' AND Magnet = 'No');\t----- bird -----\tcalifornia_schools",
    "72": "SELECT SUM(`Enrollment (Ages 5-17)`) FROM frpm WHERE `School Name` = 'State Special School' AND `District Name` = 'Fremont' AND `Academic Year` = '2014-2015';\t----- bird -----\tcalifornia_schools",
    "73": "SELECT `Free Meal Count (Ages 5-17)` FROM frpm WHERE `School Name` = 'Youth Authority School' AND `CDSCode` IN (SELECT `CDSCode` FROM schools WHERE `MailStreet` = 'PO Box 1040');\t----- bird -----\tcalifornia_schools",
    "74": "SELECT \"Low Grade\" FROM frpm WHERE \"District Code\" = '0613360' AND \"School Name\" = 'District Special Education Consortia School' LIMIT 1;\t----- bird -----\tcalifornia_schools",
    "75": "SELECT `EdOpsName`, `School Name` FROM frpm WHERE `NSLP Provision Status` = 'Breakfast Provision 2' AND `County Code` = 37;\t----- bird -----\tcalifornia_schools",
    "76": "SELECT s.City FROM frpm f JOIN schools s ON f.`CDSCode` = s.`CDSCode` WHERE f.`County Name` = 'Merced' AND f.`Low Grade` = 9 AND f.`High Grade` = 12 AND f.`NSLP Provision Status` = 'Lunch Provision 2' AND f.`School Type` = 'High School' LIMIT 1;\t----- bird -----\tcalifornia_schools",
    "77": "SELECT `School Name`, `Percent (%) Eligible FRPM (Ages 5-17)` FROM frpm WHERE `County Name` = 'Los Angeles' AND `Low Grade` = 'K' AND `High Grade` = '9';\t----- bird -----\tcalifornia_schools",
    "78": "SELECT \"Low Grade\" || '-' || \"High Grade\" AS GradeSpan, COUNT(*) AS Count FROM frpm WHERE \"City\" = 'Adelanto' GROUP BY GradeSpan ORDER BY Count DESC LIMIT 1;\t----- bird -----\tcalifornia_schools",
    "79": "SELECT County, COUNT(*) AS NumSchools FROM schools WHERE County IN ('San Diego', 'Santa Barbara') AND (StatusType <> 'Physical Building' OR Virtual = 1) GROUP BY County ORDER BY NumSchools DESC LIMIT 1;\t----- bird -----\tcalifornia_schools",
    "80": "SELECT s.School, s.Latitude, f.`School Type` FROM schools s JOIN frpm f ON s.CDSCode = f.`CDSCode` WHERE s.Latitude = (SELECT MAX(Latitude) FROM schools);\t----- bird -----\tcalifornia_schools",
    "81": "SELECT City, \"Low Grade\", \"School Name\" FROM schools JOIN frpm ON schools.CDSCode = frpm.CDSCode WHERE State = 'CA' ORDER BY Latitude ASC LIMIT 1;\t----- bird -----\tcalifornia_schools",
    "82": "SELECT Low Grade, High Grade FROM frpm WHERE CDSCode = (SELECT CDSCode FROM schools ORDER BY Longitude DESC LIMIT 1);\t----- bird -----\tcalifornia_schools",
    "83": "SELECT COUNT(DISTINCT CASE WHEN FundingType LIKE '%Multiple Provision Types%' THEN CDSCode END) AS SchoolsWithMultipleProvisionTypes, COUNT(DISTINCT City) AS NumberOfCities, City, COUNT(*) AS SchoolsPerCity FROM schools WHERE Magnet = 'Y' AND GSoffered LIKE '%K%' AND GSoffered LIKE '%8%' GROUP BY City;\t----- bird -----\tcalifornia_schools",
    "84": "SELECT AdmFName1 AS FirstName, District, COUNT(*) AS Frequency FROM schools WHERE AdmFName1 IS NOT NULL AND AdmFName1 <> '' GROUP BY AdmFName1, District ORDER BY Frequency DESC LIMIT 2;\t----- bird -----\tcalifornia_schools",
    "85": "SELECT frpm.`District Code`, frpm.`Percent (%) Eligible Free (K-12)` FROM frpm JOIN schools ON frpm.`CDSCode` = schools.`CDSCode` WHERE schools.`AdmFName1` = 'Alusine' OR schools.`AdmFName2` = 'Alusine' OR schools.`AdmFName3` = 'Alusine' LIMIT 1;\t----- bird -----\tcalifornia_schools",
    "86": "SELECT AdmLName1, District, County, School FROM schools WHERE CharterNum = 40;\t----- bird -----\tcalifornia_schools",
    "87": "SELECT AdmEmail1, AdmEmail2, AdmEmail3 FROM schools WHERE County = 'San Bernardino' AND District = 'San Bernardino City Unified' AND OpenDate BETWEEN '2009-01-01' AND '2010-12-31' AND GSoffered IN ('Intermediate/Middle Schools', 'Unified Schools') AND StatusType = 'Public';\t----- bird -----\tcalifornia_schools",
    "88": "SELECT s.School, s.AdmEmail1 FROM satscores sa JOIN schools s ON sa.cds = s.CDSCode WHERE sa.NumGE1500 = (SELECT MAX(NumGE1500) FROM satscores);\t----- bird -----\tcalifornia_schools",
    "89": "SELECT COUNT(DISTINCT a.account_id) FROM account a JOIN district d ON a.district_id = d.district_id JOIN trans t ON a.account_id = t.account_id WHERE t.type = 'issuance after transaction' AND d.A2 = 'East Bohemia';\t----- bird -----\tfinancial",
    "90": "SELECT COUNT(DISTINCT a.account_id) FROM account a JOIN district d ON a.district_id = d.district_id JOIN loan l ON a.account_id = l.account_id WHERE (d.A2 = 'Prague' OR d.A3 = 'Prague' OR d.A4 = 'Prague' OR d.A5 = 'Prague' OR d.A6 = 'Prague' OR d.A7 = 'Prague' OR d.A8 = 'Prague' OR d.A9 = 'Prague' OR d.A10 = 'Prague' OR d.A11 = 'Prague' OR d.A12 = 'Prague' OR d.A13 = 'Prague' OR d.A14 = 'Prague' OR d.A15 = 'Prague' OR d.A16 = 'Prague') AND l.status = 'eligible';\t----- bird -----\tfinancial",
    "91": "SELECT year, avg_ratio FROM (SELECT 1995 AS year, AVG(A15) AS avg_ratio FROM district UNION ALL SELECT 1996 AS year, AVG(A16) AS avg_ratio FROM district) ORDER BY avg_ratio DESC LIMIT 1;\t----- bird -----\tfinancial",
    "92": "SELECT COUNT(DISTINCT a.district_id) FROM account a JOIN disp d ON a.account_id = d.account_id JOIN client c ON d.client_id = c.client_id JOIN trans t ON a.account_id = t.account_id WHERE c.gender = 'F' GROUP BY a.district_id HAVING AVG(t.amount) > 6000 AND AVG(t.amount) < 10000;\t----- bird -----\tfinancial",
    "93": "SELECT COUNT(DISTINCT c.client_id) FROM client c JOIN disp d ON c.client_id = d.client_id JOIN account a ON d.account_id = a.account_id JOIN district dist ON c.district_id = dist.district_id JOIN trans t ON a.account_id = t.account_id WHERE c.gender = 'M' AND dist.A2 = 'North Bohemia' AND t.type = 'salary' GROUP BY c.client_id HAVING AVG(t.amount) > 8000;\t----- bird -----\tfinancial",
    "94": "SELECT a.account_id, (max_avg - min_avg) AS salary_gap FROM account a JOIN disp d ON a.account_id = d.account_id JOIN client c ON d.client_id = c.client_id JOIN (SELECT d2.client_id, AVG(t.amount) AS avg_salary FROM disp d2 JOIN trans t ON d2.account_id = t.account_id WHERE t.type = 'credit' GROUP BY d2.client_id) sal ON c.client_id = sal.client_id CROSS JOIN (SELECT MAX(avg_salary) AS max_avg, MIN(avg_salary) AS min_avg FROM (SELECT d3.client_id, AVG(t2.amount) AS avg_salary FROM disp d3 JOIN trans t2 ON d3.account_id = t2.account_id WHERE t2.type = 'credit' GROUP BY d3.client_id) sub) agg WHERE c.gender = 'F' AND c.birth_date = (SELECT MIN(birth_date) FROM client WHERE gender = 'F') AND sal.avg_salary = (SELECT MIN;\t----- bird -----\tfinancial",
    "95": "SELECT a.account_id FROM account a JOIN disp d ON a.account_id = d.account_id JOIN client c ON d.client_id = c.client_id GROUP BY a.account_id ORDER BY AVG(a.frequency) DESC, c.birth_date DESC LIMIT 1;\t----- bird -----\tfinancial",
    "96": "SELECT COUNT(DISTINCT c.client_id) FROM client c JOIN disp d ON c.client_id = d.client_id JOIN account a ON d.account_id = a.account_id WHERE a.frequency = 'weekly' AND d.type = 'Owner';\t----- bird -----\tfinancial",
    "97": "SELECT DISTINCT c.client_id FROM client c JOIN disp d ON c.client_id = d.client_id JOIN card ca ON d.disp_id = ca.disp_id JOIN trans t ON d.account_id = t.account_id WHERE ca.type = 'statement of issuance' AND d.type = 'Disponent';\t----- bird -----\tfinancial",
    "98": "SELECT a.account_id FROM account a JOIN loan l ON a.account_id = l.account_id WHERE l.status = 'approved' AND YEAR(l.date) = 1997 AND a.frequency = 'weekly' AND l.amount = (SELECT MIN(amount) FROM loan WHERE status = 'approved' AND YEAR(date) = 1997);\t----- bird -----\tfinancial",
    "99": "SELECT a.account_id, MAX(l.amount) AS max_approved_amount FROM account a JOIN loan l ON a.account_id = l.account_id WHERE l.duration > 12 AND l.status = 'approved' AND YEAR(a.date) = 1993 GROUP BY a.account_id HAVING l.amount = (SELECT MAX(amount) FROM loan WHERE duration > 12 AND status = 'approved');\t----- bird -----\tfinancial",
    "100": "SELECT COUNT(DISTINCT a.account_id) FROM account a JOIN disp d ON a.account_id = d.account_id JOIN client c ON d.client_id = c.client_id JOIN district dist ON c.district_id = dist.district_id WHERE c.gender = 'F' AND c.birth_date < '1950-01-01' AND dist.A2 = 'Sokolov';\t----- bird -----\tfinancial",
    "101": "SELECT account_id FROM trans WHERE date >= '1995-01-01' AND date < '1996-01-01' AND date = (SELECT MIN(date) FROM trans WHERE date >= '1995-01-01' AND date < '1996-01-01');\t----- bird -----\tfinancial",
    "102": "SELECT account_id FROM account WHERE date < '1997-01-01' AND account_id IN (SELECT account_id FROM trans WHERE amount > 3000);\t----- bird -----\tfinancial",
    "103": "SELECT DISTINCT c.client_id FROM client c JOIN disp d ON c.client_id = d.client_id JOIN card ca ON d.disp_id = ca.disp_id WHERE ca.issued = '1994-03-03';\t----- bird -----\tfinancial",
    "104": "SELECT MIN(date) AS account_open_date FROM account WHERE account_id = (SELECT account_id FROM trans WHERE amount = 840 AND date = '1998-10-14' LIMIT 1);\t----- bird -----\tfinancial",
    "105": "SELECT a.district_id FROM loan l JOIN account a ON l.account_id = a.account_id WHERE l.date = '1994-08-25';\t----- bird -----\tfinancial",
    "106": "SELECT MAX(t.amount) FROM trans t JOIN account a ON t.account_id = a.account_id JOIN disp d ON a.account_id = d.account_id JOIN card c ON d.disp_id = c.disp_id WHERE c.issued = '1996-10-21';\t----- bird -----\tfinancial",
    "107": "SELECT c.gender FROM client c JOIN disp d ON c.client_id = d.client_id JOIN account a ON d.account_id = a.account_id JOIN district dist ON a.district_id = dist.district_id WHERE a.date = (SELECT MIN(a2.date) FROM client c2 JOIN disp d2 ON c2.client_id = d2.client_id JOIN account a2 ON d2.account_id = a2.account_id WHERE a2.district_id = (SELECT district_id FROM (SELECT district_id, (A2 + A3 + A4 + A5 + A6 + A7 + A8 + A9 + A10 + A11 + A12 + A13 + A14 + A15 + A16)/15 AS avg_salary FROM district) AS avg_salaries ORDER BY avg_salary DESC LIMIT 1) ORDER BY c2.birth_date ASC LIMIT 1) ORDER BY c.birth_date ASC LIMIT 1;\t----- bird -----\tfinancial",
    "108": "SELECT t.amount FROM trans t JOIN account a ON t.account_id = a.account_id JOIN loan l ON a.account_id = l.account_id WHERE l.client_id = (SELECT d.client_id FROM loan lo JOIN account ac ON lo.account_id = ac.account_id JOIN disp d ON ac.account_id = d.account_id ORDER BY lo.amount DESC LIMIT 1) AND t.date = (SELECT MIN(t2.date) FROM trans t2 WHERE t2.account_id = a.account_id AND t2.date >= a.date) LIMIT 1;\t----- bird -----\tfinancial",
    "109": "SELECT COUNT(DISTINCT c.client_id) FROM client c JOIN disp d ON c.client_id = d.client_id JOIN account a ON d.account_id = a.account_id JOIN district dist ON a.district_id = dist.district_id WHERE c.gender = 'F' AND dist.A2 = 'Jesenik';\t----- bird -----\tfinancial",
    "110": "SELECT disp.disp_id FROM disp JOIN trans ON disp.account_id = trans.account_id WHERE trans.amount = 5100 AND trans.date = '1998-09-02';\t----- bird -----\tfinancial",
    "111": "SELECT COUNT(*) FROM account a JOIN district d ON a.district_id = d.district_id WHERE d.A2 = 'Litomerice' AND YEAR(a.date) = 1996;\t----- bird -----\tfinancial",
    "112": "SELECT d.* FROM district d JOIN account a ON d.district_id = a.district_id JOIN disp disp ON a.account_id = disp.account_id JOIN client c ON disp.client_id = c.client_id WHERE c.gender = 'F' AND c.birth_date = '1976-01-29' LIMIT 1;\t----- bird -----\tfinancial",
    "113": "SELECT c.birth_date FROM client c JOIN disp d ON c.client_id = d.client_id JOIN loan l ON d.account_id = l.account_id WHERE l.amount = 98832 AND l.date = '1996-01-03' LIMIT 1;\t----- bird -----\tfinancial",
    "114": "SELECT a.account_id FROM account a JOIN disp d ON a.account_id = d.account_id JOIN client c ON d.client_id = c.client_id WHERE c.district_id = (SELECT district_id FROM district WHERE A2 = 'Prague' LIMIT 1) ORDER BY a.date ASC LIMIT 1;\t----- bird -----\tfinancial",
    "115": "SELECT 100.0 * SUM(CASE WHEN c.gender = 'M' THEN 1 ELSE 0 END) / COUNT(*) AS male_percentage FROM client c JOIN district d ON c.district_id = d.district_id WHERE d.A2 = (SELECT MAX(A2) FROM district);\t----- bird -----\tfinancial",
    "116": "SELECT ((end_balance - start_balance) / start_balance) * 100 AS increase_rate FROM (SELECT a.account_id, MIN(l.date) AS first_loan_date FROM loan l JOIN account a ON l.account_id = a.account_id WHERE l.status = 'approved' AND l.date >= '1993-07-05' AND l.date < '1993-07-06' GROUP BY a.account_id ORDER BY first_loan_date LIMIT 1) AS first_loan JOIN (SELECT account_id, balance AS start_balance FROM trans WHERE date = (SELECT MAX(date) FROM trans WHERE date <= '1993-03-22' AND account_id = first_loan.account_id)) AS start_trans ON first_loan.account_id = start_trans.account_id JOIN (SELECT account_id, balance AS end_balance FROM trans WHERE date = (SELECT MAX(date) FROM trans WHERE date <= '1998-12-27' AND account_id = first_loan.account_id)) AS end;\t----- bird -----\tfinancial",
    "117": "SELECT 100.0 * SUM(CASE WHEN status = 'fully paid' THEN amount ELSE 0 END) / SUM(amount) AS percentage_fully_paid FROM loan WHERE amount > 0;\t----- bird -----\tfinancial",
    "118": "SELECT 100.0 * COUNT(DISTINCT CASE WHEN status = 'running' THEN account_id END) / COUNT(DISTINCT account_id) AS running_percentage FROM loan WHERE amount < 100000;\t----- bird -----\tfinancial",
    "119": "SELECT a.account_id, d.A2 AS district_name, d.A3 AS district_region FROM account a JOIN district d ON a.district_id = d.district_id WHERE YEAR(a.date) = 1993 AND EXISTS (SELECT 1 FROM card c JOIN trans t ON c.disp_id = (SELECT disp_id FROM disp WHERE account_id = a.account_id LIMIT 1) WHERE c.issued > t.date AND t.account_id = a.account_id);\t----- bird -----\tfinancial",
    "120": "SELECT a.account_id, a.frequency FROM account a JOIN disp d ON a.account_id = d.account_id JOIN client c ON d.client_id = c.client_id JOIN district dist ON c.district_id = dist.district_id WHERE a.date BETWEEN '1995-01-01' AND '2000-12-31' AND dist.A2 = 'east Bohemia' AND d.type = 'OWNER' GROUP BY a.account_id, a.frequency;\t----- bird -----\tfinancial",
    "121": "SELECT account.account_id, account.date FROM account JOIN district ON account.district_id = district.district_id WHERE district.A2 = 'Prachatice';\t----- bird -----\tfinancial",
    "122": "SELECT d.district_id, d.A2 FROM loan l JOIN account a ON l.account_id = a.account_id JOIN district d ON a.district_id = d.district_id WHERE l.loan_id = '4990';\t----- bird -----\tfinancial",
    "123": "SELECT loan.account_id, account.district_id, district.A2 FROM loan JOIN account ON loan.account_id = account.account_id JOIN district ON account.district_id = district.district_id WHERE loan.amount > 300000;\t----- bird -----\tfinancial",
    "124": "SELECT loan.loan_id, district.district_id, AVG(trans.amount) AS average_salary FROM loan JOIN account ON loan.account_id = account.account_id JOIN district ON account.district_id = district.district_id JOIN trans ON account.account_id = trans.account_id WHERE loan.duration = 60 AND trans.type = 'salary' GROUP BY loan.loan_id, district.district_id;\t----- bird -----\tfinancial",
    "125": "SELECT d.district_id, ((d.A6 - d.A5) / d.A5) * 100 AS unemployment_rate_increment_percentage FROM district d;\t----- bird -----\tfinancial",
    "126": "SELECT 100.0 * COUNT(CASE WHEN d.A2 = 'Decin' THEN 1 END) / COUNT(*) AS percentage FROM account a JOIN district d ON a.district_id = d.district_id WHERE EXTRACT(YEAR FROM a.date) = 1993;\t----- bird -----\tfinancial",
    "127": "SELECT account_id FROM account WHERE frequency = 'monthly';\t----- bird -----\tfinancial",
    "128": "SELECT c.district_id, COUNT(DISTINCT d.client_id) AS female_account_holders FROM client c JOIN disp d ON c.client_id = d.client_id WHERE c.gender = 'F' GROUP BY c.district_id ORDER BY female_account_holders DESC LIMIT 9;\t----- bird -----\tfinancial",
    "129": "SELECT d.A2 AS district_name, t.amount FROM trans t JOIN account a ON t.account_id = a.account_id JOIN district d ON a.district_id = d.district_id WHERE t.type = 'withdrawal' AND t.date >= '1996-01-01' AND t.date < '1996-02-01' AND t.account_id NOT IN (SELECT a.account_id FROM account a JOIN disp dp ON a.account_id = dp.account_id JOIN card c ON dp.disp_id = c.disp_id WHERE c.type = 'credit') ORDER BY t.amount DESC LIMIT 10;\t----- bird -----\tfinancial",
    "130": "SELECT COUNT(DISTINCT d.client_id) FROM disp d JOIN client c ON d.client_id = c.client_id JOIN district dist ON c.district_id = dist.district_id LEFT JOIN card ca ON d.disp_id = ca.disp_id AND ca.type = 'credit' WHERE dist.A2 = 'South Bohemia' AND ca.card_id IS NULL;\t----- bird -----\tfinancial",
    "131": "SELECT d.district_id FROM district d JOIN account a ON d.district_id = a.district_id JOIN loan l ON a.account_id = l.account_id WHERE l.status = 'active' GROUP BY d.district_id ORDER BY SUM(l.amount) DESC LIMIT 1;\t----- bird -----\tfinancial",
    "132": "SELECT AVG(loan.amount) FROM loan JOIN account ON loan.account_id = account.account_id JOIN disp ON account.account_id = disp.account_id JOIN client ON disp.client_id = client.client_id WHERE client.gender = 'M';\t----- bird -----\tfinancial",
    "133": "SELECT district.A2 AS branch_location, district.A3 AS district_name FROM district ORDER BY district.A15 DESC LIMIT 1;\t----- bird -----\tfinancial",
    "134": "SELECT COUNT(*) FROM account WHERE district_id = (SELECT district_id FROM district ORDER BY A6 DESC LIMIT 1);\t----- bird -----\tfinancial",
    "135": "SELECT COUNT(DISTINCT a.account_id) FROM account a JOIN card c ON c.disp_id IN (SELECT disp_id FROM disp WHERE account_id = a.account_id) JOIN trans t ON t.account_id = a.account_id WHERE c.type = 'credit' AND t.type = 'withdrawal' AND a.frequency = 'monthly' AND t.balance < 0;\t----- bird -----\tfinancial",
    "136": "SELECT COUNT(DISTINCT l.loan_id) FROM loan l JOIN account a ON l.account_id = a.account_id WHERE l.date BETWEEN '1995-01-01' AND '1997-12-31' AND l.amount >= 250000 AND l.status = 'approved' AND a.frequency = 'monthly';\t----- bird -----\tfinancial",
    "137": "SELECT COUNT(DISTINCT account.account_id) FROM account JOIN loan ON account.account_id = loan.account_id WHERE account.district_id = 1 AND loan.status = 'running';\t----- bird -----\tfinancial",
    "138": "SELECT COUNT(*) FROM client WHERE gender = 'M' AND district_id = (SELECT district_id FROM (SELECT district_id, COUNT(*) AS crime_count FROM district WHERE A8 = 1995 GROUP BY district_id ORDER BY crime_count DESC LIMIT 2) AS top2 ORDER BY crime_count ASC LIMIT 1);\t----- bird -----\tfinancial",
    "139": "SELECT COUNT(*) FROM card c JOIN disp d ON c.disp_id = d.disp_id WHERE d.type = 'OWNER' AND c.type = 'high-level';\t----- bird -----\tfinancial",
    "140": "SELECT COUNT(*) FROM account JOIN district ON account.district_id = district.district_id WHERE district.A3 = 'Pisek';\t----- bird -----\tfinancial",
    "141": "SELECT d.district_id FROM district d JOIN account a ON d.district_id = a.district_id JOIN trans t ON a.account_id = t.account_id WHERE t.date BETWEEN '1997-01-01' AND '1997-12-31' GROUP BY d.district_id HAVING SUM(t.amount) > 10000;\t----- bird -----\tfinancial",
    "142": "SELECT DISTINCT o.account_id FROM \"order\" o JOIN account a ON o.account_id = a.account_id JOIN district d ON a.district_id = d.district_id WHERE o.k_symbol = 'household payment' AND d.A2 = 'Pisek';\t----- bird -----\tfinancial",
    "143": "SELECT DISTINCT account.account_id FROM account JOIN disp ON account.account_id = disp.account_id JOIN card ON disp.disp_id = card.disp_id WHERE card.type = 'gold';\t----- bird -----\tfinancial",
    "144": "SELECT AVG(monthly_amount) FROM (SELECT DATE_TRUNC('month', t.date) AS month, SUM(t.amount) AS monthly_amount FROM trans t JOIN card c ON t.account_id = c.disp_id JOIN disp d ON c.disp_id = d.disp_id WHERE c.type = 'credit' AND EXTRACT(YEAR FROM t.date) = 2021 GROUP BY d.account_id, month) subquery;\t----- bird -----\tfinancial",
    "145": "SELECT DISTINCT d.client_id FROM trans t JOIN card c ON t.account_id = (SELECT account_id FROM disp WHERE disp_id = c.disp_id) JOIN disp d ON c.disp_id = d.disp_id WHERE c.type = 'credit' AND YEAR(t.date) = 1998 AND t.amount < (SELECT AVG(amount) FROM trans WHERE YEAR(date) = 1998);\t----- bird -----\tfinancial",
    "146": "SELECT DISTINCT c.client_id FROM client c JOIN disp d ON c.client_id = d.client_id JOIN card ca ON d.disp_id = ca.disp_id JOIN loan l ON d.account_id = l.account_id WHERE c.gender = 'F' AND ca.type = 'credit' AND l.status IS NOT NULL;\t----- bird -----\tfinancial",
    "147": "SELECT COUNT(DISTINCT a.account_id) FROM account a JOIN client c ON a.district_id = c.district_id JOIN district d ON a.district_id = d.district_id WHERE c.gender = 'F' AND d.A3 = 'South Bohemia';\t----- bird -----\tfinancial",
    "148": "SELECT a.account_id FROM account a JOIN district d ON a.district_id = d.district_id WHERE d.A2 = 'Tabor' AND a.account_id IN (SELECT account_id FROM loan WHERE status = 'eligible');\t----- bird -----\tfinancial",
    "149": "SELECT DISTINCT disp.type FROM disp JOIN account ON disp.account_id = account.account_id JOIN district ON account.district_id = district.district_id WHERE disp.account_id NOT IN (SELECT account_id FROM loan) AND district.A10 > 8000 AND district.A10 <= 9000;\t----- bird -----\tfinancial",
    "150": "SELECT COUNT(DISTINCT t.account_id) FROM trans t JOIN account a ON t.account_id = a.account_id JOIN district d ON a.district_id = d.district_id WHERE d.A2 = 'North Bohemia' AND t.bank = 'AB';\t----- bird -----\tfinancial",
    "151": "SELECT DISTINCT d.A2 FROM district d JOIN account a ON d.district_id = a.district_id JOIN trans t ON a.account_id = t.account_id WHERE t.type = 'withdrawal';\t----- bird -----\tfinancial",
    "152": "SELECT AVG(district.A15) FROM district WHERE district.A15 > 4000 AND district.district_id IN (SELECT DISTINCT account.district_id FROM account WHERE YEAR(account.date) >= 1997);\t----- bird -----\tfinancial",
    "153": "SELECT COUNT(DISTINCT card.card_id) FROM card JOIN disp ON card.disp_id = disp.disp_id JOIN loan ON disp.account_id = loan.account_id WHERE card.type = 'classic' AND loan.status = 'eligible';\t----- bird -----\tfinancial",
    "154": "SELECT COUNT(*) FROM client JOIN district ON client.district_id = district.district_id WHERE client.gender = 'M' AND district.A2 = 'Hl.m. Praha';\t----- bird -----\tfinancial",
    "155": "SELECT 100.0 * SUM(CASE WHEN issued < '1998-01-01' THEN 1 ELSE 0 END) / COUNT(*) AS percent_prior_1998 FROM card WHERE type = 'Gold';\t----- bird -----\tfinancial",
    "156": "SELECT c.client_id FROM client c JOIN disp d ON c.client_id = d.client_id JOIN loan l ON d.account_id = l.account_id WHERE l.amount = (SELECT MAX(amount) FROM loan) LIMIT 1;\t----- bird -----\tfinancial",
    "157": "SELECT COUNT(*) FROM trans WHERE account_id = 532 AND date BETWEEN '1995-01-01' AND '1995-12-31' AND k_symbol = 'CRIME' AND operation = 'COMMITTED';\t----- bird -----\tfinancial",
    "158": "SELECT account.district_id FROM account JOIN \"order\" ON account.account_id = \"order\".account_id WHERE \"order\".order_id = 33333;\t----- bird -----\tfinancial",
    "159": "SELECT t.* FROM trans t JOIN account a ON t.account_id = a.account_id JOIN disp d ON a.account_id = d.account_id WHERE d.client_id = 3356 AND t.type = 'withdrawal' AND t.operation = 'cash';\t----- bird -----\tfinancial",
    "160": "SELECT COUNT(DISTINCT a.account_id) FROM account a JOIN loan l ON a.account_id = l.account_id WHERE a.frequency = 'weekly' AND l.amount < 200000;\t----- bird -----\tfinancial",
    "161": "SELECT card.type FROM card JOIN disp ON card.disp_id = disp.disp_id WHERE disp.client_id = 13539 AND card.type LIKE '%credit%';\t----- bird -----\tfinancial",
    "162": "SELECT district.A2 FROM client JOIN district ON client.district_id = district.district_id WHERE client.client_id = 3541;\t----- bird -----\tfinancial",
    "163": "SELECT d.district_id FROM district d JOIN account a ON d.district_id = a.district_id JOIN loan l ON a.account_id = l.account_id WHERE l.status = 'finished' GROUP BY d.district_id ORDER BY COUNT(DISTINCT a.account_id) DESC LIMIT 1;\t----- bird -----\tfinancial",
    "164": "SELECT client.client_id FROM client JOIN disp ON client.client_id = disp.client_id JOIN order ON disp.account_id = order.account_id WHERE order.order_id = 32423;\t----- bird -----\tfinancial",
    "165": "SELECT trans.* FROM trans JOIN account ON trans.account_id = account.account_id WHERE account.district_id = 5;\t----- bird -----\tfinancial",
    "166": "SELECT COUNT(*) FROM account a JOIN district d ON a.district_id = d.district_id WHERE d.A2 = 'Jesenik';\t----- bird -----\tfinancial",
    "167": "SELECT DISTINCT d.client_id FROM card c JOIN disp d ON c.disp_id = d.disp_id WHERE c.type = 'junior' AND c.issued > '1996-12-31';\t----- bird -----\tfinancial",
    "168": "SELECT 100.0 * SUM(CASE WHEN c.gender = 'F' THEN 1 ELSE 0 END) / COUNT(DISTINCT c.client_id) AS percentage_women FROM client c JOIN disp d ON c.client_id = d.client_id JOIN account a ON d.account_id = a.account_id JOIN district dist ON a.district_id = dist.district_id WHERE (dist.A2 + dist.A3 + dist.A4 + dist.A5 + dist.A6 + dist.A7 + dist.A8 + dist.A9 + dist.A10 + dist.A11 + dist.A12 + dist.A13 + dist.A14 + dist.A15 + dist.A16) / 15 > 10000;\t----- bird -----\tfinancial",
    "169": "SELECT ((SUM(CASE WHEN YEAR(l.date) = 1997 THEN l.amount ELSE 0 END) - SUM(CASE WHEN YEAR(l.date) = 1996 THEN l.amount ELSE 0 END)) / NULLIF(SUM(CASE WHEN YEAR(l.date) = 1996 THEN l.amount ELSE 0 END),0)) * 100 AS growth_rate FROM loan l JOIN account a ON l.account_id = a.account_id JOIN disp d ON a.account_id = d.account_id JOIN client c ON d.client_id = c.client_id WHERE c.gender = 'M' AND YEAR(l.date) IN (1996, 1997);\t----- bird -----\tfinancial",
    "170": "SELECT COUNT(*) FROM trans t JOIN card c ON t.account_id = (SELECT d.account_id FROM disp d WHERE d.disp_id = c.disp_id) WHERE c.type = 'credit' AND t.type = 'withdrawal' AND t.date > '1995-12-31';\t----- bird -----\tfinancial",
    "171": "SELECT ABS(East.count - North.count) AS difference FROM (SELECT COUNT(*) AS count FROM district WHERE A2 = 'East Bohemia' AND YEAR(date) = 1996) AS East, (SELECT COUNT(*) AS count FROM district WHERE A2 = 'North Bohemia' AND YEAR(date) = 1996) AS North;\t----- bird -----\tfinancial",
    "172": "SELECT type, COUNT(*) AS count FROM disp WHERE account_id BETWEEN 1 AND 10 GROUP BY type;\t----- bird -----\tfinancial",
    "173": "SELECT COUNT(*) AS statement_requests, k_symbol, SUM(amount) AS total_debit FROM trans WHERE account_id = 3 AND type = 'debit' AND k_symbol IS NOT NULL GROUP BY k_symbol;\t----- bird -----\tfinancial",
    "174": "SELECT EXTRACT(YEAR FROM c.birth_date) AS birth_year FROM client c JOIN disp d ON c.client_id = d.client_id WHERE d.account_id = 130;\t----- bird -----\tfinancial",
    "175": "SELECT COUNT(DISTINCT a.account_id) FROM account a JOIN disp d ON a.account_id = d.account_id WHERE d.type = 'owner' AND EXISTS (SELECT 1 FROM trans t WHERE t.account_id = a.account_id AND t.k_symbol = 'request for a statement');\t----- bird -----\tfinancial",
    "176": "SELECT l.amount AS debt_amount, l.payments, l.status FROM loan l JOIN account a ON l.account_id = a.account_id JOIN disp d ON a.account_id = d.account_id WHERE d.client_id = 992;\t----- bird -----\tfinancial",
    "177": "SELECT t.balance, c.gender FROM trans t JOIN account a ON t.account_id = a.account_id JOIN disp d ON a.account_id = d.account_id JOIN client c ON d.client_id = c.client_id WHERE t.trans_id = 851 AND d.client_id = 4;\t----- bird -----\tfinancial",
    "178": "SELECT card.type FROM card JOIN disp ON card.disp_id = disp.disp_id WHERE disp.client_id = 9;\t----- bird -----\tfinancial",
    "179": "SELECT SUM(t.amount) FROM trans t JOIN account a ON t.account_id = a.account_id JOIN disp d ON a.account_id = d.account_id WHERE d.client_id = 617 AND YEAR(t.date) = 1998 AND t.amount < 0;\t----- bird -----\tfinancial",
    "180": "SELECT client.client_id FROM client JOIN account ON client.client_id = (SELECT disp.client_id FROM disp WHERE disp.account_id = account.account_id LIMIT 1) JOIN district ON account.district_id = district.district_id WHERE client.birth_date BETWEEN '1983-01-01' AND '1987-12-31' AND district.A2 = 'East Bohemia';\t----- bird -----\tfinancial",
    "181": "SELECT c.client_id FROM client c JOIN disp d ON c.client_id = d.client_id JOIN loan l ON d.account_id = l.account_id WHERE c.gender = 'F' ORDER BY l.amount DESC LIMIT 3;\t----- bird -----\tfinancial",
    "182": "SELECT COUNT(DISTINCT c.client_id) FROM client c JOIN disp d ON c.client_id = d.client_id JOIN account a ON d.account_id = a.account_id JOIN trans t ON a.account_id = t.account_id WHERE c.gender = 'M' AND c.birth_date BETWEEN '1974-01-01' AND '1976-12-31' AND t.k_symbol = 'payment' AND t.amount > 4000;\t----- bird -----\tfinancial",
    "183": "SELECT COUNT(*) FROM account a JOIN district d ON a.district_id = d.district_id WHERE d.A3 = 'Beroun' AND a.date > '1996-12-31';\t----- bird -----\tfinancial",
    "184": "SELECT COUNT(DISTINCT c.client_id) FROM client c JOIN disp d ON c.client_id = d.client_id JOIN card ca ON d.disp_id = ca.disp_id WHERE c.gender = 'F' AND ca.type = 'junior credit card';\t----- bird -----\tfinancial",
    "185": "SELECT CAST(SUM(CASE WHEN c.gender = 'F' THEN 1 ELSE 0 END) AS FLOAT) / COUNT(DISTINCT c.client_id) AS female_proportion FROM client c JOIN disp d ON c.client_id = d.client_id JOIN account a ON d.account_id = a.account_id JOIN district dist ON a.district_id = dist.district_id WHERE dist.A2 = 'Prague';\t----- bird -----\tfinancial",
    "186": "SELECT 100.0 * SUM(CASE WHEN a.frequency = 'W' THEN 1 ELSE 0 END) / COUNT(*) AS percentage_weekly_statements FROM account a JOIN disp d ON a.account_id = d.account_id JOIN client c ON d.client_id = c.client_id WHERE c.gender = 'M';\t----- bird -----\tfinancial",
    "187": "SELECT COUNT(DISTINCT c.client_id) FROM client c JOIN disp d ON c.client_id = d.client_id JOIN account a ON d.account_id = a.account_id WHERE a.frequency = 'weekly' AND d.type = 'Owner';\t----- bird -----\tfinancial",
    "188": "SELECT account.account_id, loan.amount FROM account JOIN loan ON account.account_id = loan.account_id WHERE loan.duration > 24 AND loan.status = 'approved' AND account.date < '1997-01-01' AND loan.amount = (SELECT MIN(loan.amount) FROM loan JOIN account ON loan.account_id = account.account_id WHERE loan.duration > 24 AND loan.status = 'approved' AND account.date < '1997-01-01');\t----- bird -----\tfinancial",
    "189": "SELECT a.account_id FROM account a JOIN disp d ON a.account_id = d.account_id JOIN client c ON d.client_id = c.client_id WHERE c.gender = 'F' GROUP BY a.account_id ORDER BY AVG(COALESCE((SELECT AVG(t.amount) FROM trans t WHERE t.account_id = a.account_id),0)) ASC, MIN(c.birth_date) ASC LIMIT 1;\t----- bird -----\tfinancial",
    "190": "SELECT COUNT(*) FROM client JOIN district ON client.district_id = district.district_id WHERE YEAR(client.birth_date) = 1920 AND district.A3 = 'east Bohemia';\t----- bird -----\tfinancial",
    "191": "SELECT COUNT(DISTINCT loan.account_id) FROM loan JOIN account ON loan.account_id = account.account_id WHERE loan.status = 'pre-payment' AND loan.duration = 24 AND account.frequency = 'weekly';\t----- bird -----\tfinancial",
    "192": "SELECT AVG(l.amount) FROM loan l JOIN trans t ON l.account_id = t.account_id WHERE l.status = 'running' AND t.type = 'statement issuance';\t----- bird -----\tfinancial",
    "193": "SELECT DISTINCT c.client_id, c.district_id FROM client c JOIN disp d ON c.client_id = d.client_id GROUP BY c.client_id, c.district_id HAVING BOOL_AND(d.type IN ('OWNER', 'AUTHORIZED')) AND NOT EXISTS (SELECT 1 FROM disp d2 WHERE d2.client_id = c.client_id AND d2.type NOT IN ('OWNER', 'AUTHORIZED'));\t----- bird -----\tfinancial",
    "194": "SELECT c.client_id, FLOOR(DATEDIFF(CURDATE(), c.birth_date)/365.25) AS age FROM client c JOIN disp d ON c.client_id = d.client_id JOIN card ca ON d.disp_id = ca.disp_id WHERE ca.type = 'high level credit card' AND EXISTS (SELECT 1 FROM loan l WHERE l.account_id = d.account_id);\t----- bird -----\tfinancial",
    "195": "SELECT bond_type FROM bond GROUP BY bond_type ORDER BY COUNT(*) DESC LIMIT 1;\t----- bird -----\ttoxicology",
    "196": "SELECT COUNT(DISTINCT a.molecule_id) FROM atom a JOIN molecule m ON a.molecule_id = m.molecule_id WHERE a.element = 'Cl' AND m.label NOT LIKE '%carcinogenic%';\t----- bird -----\ttoxicology",
    "197": "SELECT AVG(oxygen_count) FROM (SELECT a.molecule_id, COUNT(*) AS oxygen_count FROM atom a JOIN connected c ON a.atom_id = c.atom_id JOIN bond b ON c.bond_id = b.bond_id WHERE a.element = 'O' AND b.bond_type = 'single' GROUP BY a.molecule_id) sub;\t----- bird -----\ttoxicology",
    "198": "SELECT AVG(single_bonded_count) FROM (SELECT m.molecule_id, COUNT(DISTINCT m.molecule_id) AS single_bonded_count FROM molecule m JOIN bond b ON m.molecule_id = b.molecule_id WHERE b.bond_type = 'single' AND m.label = 'carcinogenic' GROUP BY m.molecule_id) sub;\t----- bird -----\ttoxicology",
    "199": "SELECT COUNT(*) FROM molecule m JOIN atom a ON m.molecule_id = a.molecule_id WHERE a.element = 'Sodium' AND m.label != 'carcinogenic';\t----- bird -----\ttoxicology",
    "200": "SELECT DISTINCT m.molecule_id, m.label FROM molecule m JOIN bond b ON m.molecule_id = b.molecule_id WHERE b.bond_type = 'triple' AND m.label LIKE '%carcinogenic%';\t----- bird -----\ttoxicology",
    "201": "SELECT 100.0 * SUM(CASE WHEN a.element = 'C' THEN 1 ELSE 0 END) / COUNT(*) AS carbon_percentage FROM atom a JOIN molecule m ON a.molecule_id = m.molecule_id WHERE a.molecule_id IN (SELECT DISTINCT molecule_id FROM bond WHERE bond_type = 'double');\t----- bird -----\ttoxicology",
    "202": "SELECT COUNT(*) FROM bond WHERE bond_type = 'triple';\t----- bird -----\ttoxicology",
    "203": "SELECT COUNT(*) FROM atom WHERE element <> 'Br';\t----- bird -----\ttoxicology",
    "204": "SELECT COUNT(*) FROM (SELECT * FROM molecule ORDER BY molecule_id LIMIT 100) AS first_100 WHERE label = 'carcinogenic';\t----- bird -----\ttoxicology",
    "205": "SELECT DISTINCT molecule_id FROM atom WHERE element = 'carbon';\t----- bird -----\ttoxicology",
    "206": "SELECT DISTINCT a.element FROM atom a JOIN connected c ON a.atom_id = c.atom_id OR a.atom_id = c.atom_id2 JOIN bond b ON c.bond_id = b.bond_id JOIN molecule m ON b.molecule_id = m.molecule_id WHERE b.bond_type = 'TR004_8_9';\t----- bird -----\ttoxicology",
    "207": "SELECT DISTINCT a.element FROM atom a JOIN connected c ON a.atom_id = c.atom_id OR a.atom_id = c.atom_id2 JOIN bond b ON c.bond_id = b.bond_id WHERE b.bond_type = 'double';\t----- bird -----\ttoxicology",
    "208": "SELECT m.label FROM molecule m JOIN atom a ON m.molecule_id = a.molecule_id WHERE a.molecule_id IN (SELECT molecule_id FROM atom WHERE element = 'H') GROUP BY m.label ORDER BY COUNT(*) DESC LIMIT 1;\t----- bird -----\ttoxicology",
    "209": "SELECT DISTINCT b.bond_type FROM bond b JOIN connected c ON b.bond_id = c.bond_id JOIN atom a ON c.atom_id = a.atom_id OR c.atom_id2 = a.atom_id WHERE a.element = 'Chlorine';\t----- bird -----\ttoxicology",
    "210": "SELECT a1.atom_id, a2.atom_id FROM connected c JOIN atom a1 ON c.atom_id = a1.atom_id JOIN atom a2 ON c.atom_id2 = a2.atom_id JOIN bond b ON c.bond_id = b.bond_id WHERE b.bond_type = 'single';\t----- bird -----\ttoxicology",
    "211": "SELECT c.atom_id, c.atom_id2 FROM connected c JOIN bond b ON c.bond_id = b.bond_id JOIN molecule m ON b.molecule_id = m.molecule_id WHERE m.label != 'carcinogenic';\t----- bird -----\ttoxicology",
    "212": "SELECT element FROM atom WHERE molecule_id IN (SELECT molecule_id FROM molecule WHERE label != 'carcinogenic') GROUP BY element ORDER BY COUNT(*) ASC LIMIT 1;\t----- bird -----\ttoxicology",
    "213": "SELECT b.bond_type FROM bond b JOIN connected c ON b.bond_id = c.bond_id JOIN atom a1 ON c.atom_id = a1.atom_id JOIN atom a2 ON c.atom_id2 = a2.atom_id WHERE (a1.atom_id = 'TR004_8' AND a2.atom_id = 'TR004_20') OR (a1.atom_id = 'TR004_20' AND a2.atom_id = 'TR004_8');\t----- bird -----\ttoxicology",
    "214": "SELECT DISTINCT label FROM molecule WHERE molecule_id NOT IN (SELECT DISTINCT molecule_id FROM atom WHERE element = 'Sn');\t----- bird -----\ttoxicology",
    "215": "SELECT COUNT(DISTINCT a1.atom_id) + COUNT(DISTINCT a2.atom_id) FROM atom a1 JOIN connected c ON a1.atom_id = c.atom_id JOIN bond b ON c.bond_id = b.bond_id JOIN atom a2 ON c.atom_id2 = a2.atom_id WHERE b.bond_type = 'single' AND ((a1.element = 'iodine' AND a2.element = 'sulfur') OR (a1.element = 'sulfur' AND a2.element = 'iodine'));\t----- bird -----\ttoxicology",
    "216": "SELECT c.atom_id, c.atom_id2 FROM connected c JOIN bond b ON c.bond_id = b.bond_id WHERE b.bond_type = 'triple';\t----- bird -----\ttoxicology",
    "217": "SELECT DISTINCT c.atom_id2 FROM connected c JOIN atom a ON c.atom_id = a.atom_id JOIN molecule m ON a.molecule_id = m.molecule_id WHERE m.label = 'TR181' UNION SELECT DISTINCT c.atom_id FROM connected c JOIN atom a ON c.atom_id2 = a.atom_id JOIN molecule m ON a.molecule_id = m.molecule_id WHERE m.label = 'TR181';\t----- bird -----\ttoxicology",
    "218": "SELECT 100.0 * SUM(CASE WHEN m.molecule_id NOT IN (SELECT DISTINCT a.molecule_id FROM atom a WHERE a.element = 'F') THEN 1 ELSE 0 END) / COUNT(*) AS percentage_no_fluorine FROM molecule m WHERE m.label = 'carcinogenic';\t----- bird -----\ttoxicology",
    "219": "SELECT 100.0 * COUNT(DISTINCT m.molecule_id) / (SELECT COUNT(DISTINCT molecule_id) FROM bond WHERE bond_type = 'triple') AS percentage_carcinogenic FROM molecule m JOIN bond b ON m.molecule_id = b.molecule_id WHERE b.bond_type = 'triple' AND m.label = 'carcinogenic';\t----- bird -----\ttoxicology",
    "220": "SELECT element FROM atom WHERE molecule_id = (SELECT molecule_id FROM molecule WHERE label = 'TR000') ORDER BY element ASC LIMIT 3;\t----- bird -----\ttoxicology",
    "221": "SELECT a1.atom_id AS atom1, a2.atom_id AS atom2 FROM connected c JOIN atom a1 ON c.atom_id = a1.atom_id JOIN atom a2 ON c.atom_id2 = a2.atom_id JOIN molecule m ON a1.molecule_id = m.molecule_id WHERE m.label = 'TR001' AND c.bond_id = 'TR001_2_6';\t----- bird -----\ttoxicology",
    "222": "SELECT (SELECT COUNT(*) FROM molecule WHERE label = 'carcinogenic') - (SELECT COUNT(*) FROM molecule WHERE label != 'carcinogenic') AS difference;\t----- bird -----\ttoxicology",
    "223": "SELECT atom_id, atom_id2 FROM connected WHERE bond_id = 'TR000_2_5';\t----- bird -----\ttoxicology",
    "224": "SELECT c.bond_id FROM connected c WHERE c.atom_id2 = (SELECT c2.atom_id2 FROM connected c2 JOIN molecule m ON c2.atom_id = (SELECT a.atom_id FROM atom a WHERE a.molecule_id = m.molecule_id AND m.label = 'TR000_2') LIMIT 1) AND c.bond_id <> (SELECT c2.bond_id FROM connected c2 JOIN molecule m ON c2.atom_id = (SELECT a.atom_id FROM atom a WHERE a.molecule_id = m.molecule_id AND m.label = 'TR000_2') LIMIT 1);\t----- bird -----\ttoxicology",
    "225": "SELECT m.label FROM molecule m JOIN bond b ON m.molecule_id = b.molecule_id WHERE b.bond_type = 'double' GROUP BY m.molecule_id, m.label ORDER BY m.label ASC LIMIT 5;\t----- bird -----\ttoxicology",
    "226": "SELECT ROUND(100.0 * SUM(CASE WHEN b.bond_type = 'double' THEN 1 ELSE 0 END) / COUNT(*), 5) AS double_bond_percentage FROM bond b JOIN molecule m ON b.molecule_id = m.molecule_id WHERE m.label = 'TR008';\t----- bird -----\ttoxicology",
    "227": "SELECT ROUND(100.0 * SUM(CASE WHEN label = 'carcinogenic' THEN 1 ELSE 0 END) / COUNT(*), 3) AS percentage_carcinogenic FROM molecule;\t----- bird -----\ttoxicology",
    "228": "SELECT ROUND(100.0 * COUNT(CASE WHEN element = 'H' THEN 1 END) / COUNT(*), 4) AS hydrogen_percentage FROM atom WHERE molecule_id = (SELECT molecule_id FROM molecule WHERE label = 'TR206');\t----- bird -----\ttoxicology",
    "229": "SELECT DISTINCT b.bond_type FROM bond b JOIN molecule m ON b.molecule_id = m.molecule_id WHERE m.label = 'TR000';\t----- bird -----\ttoxicology",
    "230": "SELECT a.element, m.label FROM atom a JOIN molecule m ON a.molecule_id = m.molecule_id WHERE m.label = 'TR060';\t----- bird -----\ttoxicology",
    "231": "SELECT b.bond_type, CASE WHEN m.label LIKE '%carcinogenic%' THEN 'Yes' ELSE 'No' END AS is_carcinogenic FROM bond b JOIN molecule m ON b.molecule_id = m.molecule_id WHERE m.label = 'TR010' GROUP BY b.bond_type, m.label ORDER BY COUNT(*) DESC LIMIT 1;\t----- bird -----\ttoxicology",
    "232": "SELECT m.label FROM molecule m JOIN bond b ON m.molecule_id = b.molecule_id WHERE b.bond_type = 'single' AND m.label NOT LIKE '%carcinogenic%' GROUP BY m.molecule_id, m.label ORDER BY m.label ASC LIMIT 3;\t----- bird -----\ttoxicology",
    "233": "SELECT bond_type FROM bond WHERE molecule_id = (SELECT molecule_id FROM molecule WHERE label = 'TR006') ORDER BY bond_type ASC LIMIT 2;\t----- bird -----\ttoxicology",
    "234": "SELECT COUNT(DISTINCT b.bond_id) FROM bond b JOIN connected c ON b.bond_id = c.bond_id JOIN molecule m ON b.molecule_id = m.molecule_id WHERE m.label = 'TR009' AND (c.atom_id = 12 OR c.atom_id2 = 12);\t----- bird -----\ttoxicology",
    "235": "SELECT COUNT(DISTINCT m.molecule_id) FROM molecule m JOIN atom a ON m.molecule_id = a.molecule_id WHERE m.label = 'carcinogenic' AND a.element = 'bromine';\t----- bird -----\ttoxicology",
    "236": "SELECT b.bond_type, c.atom_id, c.atom_id2 FROM bond b JOIN connected c ON b.bond_id = c.bond_id WHERE b.bond_id = 'TR001_6_9';\t----- bird -----\ttoxicology",
    "237": "SELECT m.label, m.carcinogenic FROM molecule m JOIN atom a ON m.molecule_id = a.molecule_id WHERE a.atom_id = 'TR001_10';\t----- bird -----\ttoxicology",
    "238": "SELECT COUNT(DISTINCT molecule_id) FROM bond WHERE bond_type = 'triple';\t----- bird -----\ttoxicology",
    "239": "SELECT COUNT(*) FROM connected WHERE atom_id = 19 OR atom_id2 = 19;\t----- bird -----\ttoxicology",
    "240": "SELECT a.element FROM atom a JOIN molecule m ON a.molecule_id = m.molecule_id WHERE m.label = 'TR004';\t----- bird -----\ttoxicology",
    "241": "SELECT COUNT(*) FROM molecule WHERE label != 'carcinogenic';\t----- bird -----\ttoxicology",
    "242": "SELECT DISTINCT m.molecule_id, m.label FROM molecule m JOIN atom a ON m.molecule_id = a.molecule_id WHERE a.atom_id BETWEEN 21 AND 25 AND m.label = 'carcinogenic';\t----- bird -----\ttoxicology",
    "243": "SELECT DISTINCT b.bond_id, b.molecule_id, b.bond_type FROM bond b JOIN connected c1 ON b.bond_id = c1.bond_id JOIN connected c2 ON b.bond_id = c2.bond_id JOIN atom a1 ON c1.atom_id = a1.atom_id JOIN atom a2 ON c2.atom_id = a2.atom_id WHERE (a1.element = 'Phosphorus' AND a2.element = 'Nitrogen') OR (a1.element = 'Nitrogen' AND a2.element = 'Phosphorus');\t----- bird -----\ttoxicology",
    "244": "SELECT CASE WHEN EXISTS (SELECT 1 FROM molecule WHERE molecule_id = (SELECT molecule_id FROM bond WHERE bond_type = 'double' GROUP BY molecule_id ORDER BY COUNT(*) DESC LIMIT 1) AND label = 'carcinogenic') THEN 'Yes' ELSE 'No' END AS is_carcinogenic;\t----- bird -----\ttoxicology",
    "245": "SELECT AVG(bond_count) FROM (SELECT a.atom_id, COUNT(c.bond_id) AS bond_count FROM atom a LEFT JOIN connected c ON a.atom_id = c.atom_id OR a.atom_id = c.atom_id2 WHERE a.element = 'iodine' GROUP BY a.atom_id) sub;\t----- bird -----\ttoxicology",
    "246": "SELECT b.bond_type, b.bond_id FROM bond b JOIN connected c ON b.bond_id = c.bond_id WHERE c.atom_id = 45 OR c.atom_id2 = 45;\t----- bird -----\ttoxicology",
    "247": "SELECT element FROM atom WHERE atom_id NOT IN (SELECT atom_id FROM connected) AND atom_id NOT IN (SELECT atom_id2 FROM connected);\t----- bird -----\ttoxicology",
    "248": "SELECT a.atom_id, a.element FROM atom a JOIN connected c ON a.atom_id = c.atom_id OR a.atom_id = c.atom_id2 JOIN bond b ON c.bond_id = b.bond_id JOIN molecule m ON b.molecule_id = m.molecule_id WHERE m.label = 'TR041' AND b.bond_type = 'triple';\t----- bird -----\ttoxicology",
    "249": "SELECT a.element FROM atom a JOIN molecule m ON a.molecule_id = m.molecule_id WHERE m.label = 'TR144_8_19';\t----- bird -----\ttoxicology",
    "250": "SELECT m.label FROM molecule m JOIN bond b ON m.molecule_id = b.molecule_id WHERE m.label = 'carcinogenic' AND b.bond_type = 'double' GROUP BY m.molecule_id, m.label ORDER BY COUNT(b.bond_id) DESC LIMIT 1;\t----- bird -----\ttoxicology",
    "251": "SELECT element FROM atom WHERE molecule_id IN (SELECT molecule_id FROM molecule WHERE label = 'carcinogenic') GROUP BY element ORDER BY COUNT(*) ASC LIMIT 1;\t----- bird -----\ttoxicology",
    "252": "SELECT a2.* FROM atom a1 JOIN connected c ON a1.atom_id = c.atom_id JOIN atom a2 ON c.atom_id2 = a2.atom_id WHERE a1.element = 'lead' UNION SELECT a2.* FROM atom a1 JOIN connected c ON a1.atom_id = c.atom_id2 JOIN atom a2 ON c.atom_id = a2.atom_id WHERE a1.element = 'lead';\t----- bird -----\ttoxicology",
    "253": "SELECT DISTINCT a.element FROM atom a JOIN connected c ON a.atom_id = c.atom_id OR a.atom_id = c.atom_id2 JOIN bond b ON c.bond_id = b.bond_id WHERE b.bond_type = 'triple';\t----- bird -----\ttoxicology",
    "254": "WITH bond_elements AS (SELECT c.bond_id, LEAST(a1.element, a2.element) AS element1, GREATEST(a1.element, a2.element) AS element2 FROM connected c JOIN atom a1 ON c.atom_id = a1.atom_id JOIN atom a2 ON c.atom_id2 = a2.atom_id), element_combinations AS (SELECT element1, element2, COUNT(*) AS count FROM bond_elements GROUP BY element1, element2), max_count AS (SELECT MAX(count) AS max_count FROM element_combinations), total_bonds AS (SELECT COUNT(*) AS total FROM bond) SELECT ROUND(100.0 * max_count / total, 2) AS percentage FROM max_count, total_bonds;\t----- bird -----\ttoxicology",
    "255": "SELECT ROUND(100.0 * SUM(CASE WHEN bond.bond_type = 'single' AND molecule.label = 'carcinogenic' THEN 1 ELSE 0 END) / NULLIF(SUM(CASE WHEN bond.bond_type = 'single' THEN 1 ELSE 0 END), 0), 5) AS proportion_percentage FROM bond JOIN molecule ON bond.molecule_id = molecule.molecule_id;\t----- bird -----\ttoxicology",
    "256": "SELECT COUNT(*) FROM atom WHERE element IN ('carbon', 'hydrogen');\t----- bird -----\ttoxicology",
    "257": "SELECT connected.atom_id2 FROM connected JOIN atom ON connected.atom_id = atom.atom_id WHERE atom.element = 'sulfur';\t----- bird -----\ttoxicology",
    "258": "SELECT DISTINCT b.bond_type FROM bond b JOIN connected c ON b.bond_id = c.bond_id JOIN atom a ON c.atom_id = a.atom_id OR c.atom_id2 = a.atom_id WHERE a.element = 'Tin';\t----- bird -----\ttoxicology",
    "259": "SELECT COUNT(DISTINCT a.element) FROM atom a JOIN molecule m ON a.molecule_id = m.molecule_id WHERE a.molecule_id IN (SELECT b.molecule_id FROM bond b WHERE b.bond_type = 'single');\t----- bird -----\ttoxicology",
    "260": "SELECT COUNT(DISTINCT a.atom_id) FROM atom a JOIN molecule m ON a.molecule_id = m.molecule_id WHERE a.element IN ('P', 'Br') AND a.molecule_id IN (SELECT molecule_id FROM bond WHERE bond_type = 'triple');\t----- bird -----\ttoxicology",
    "261": "SELECT bond.bond_id FROM bond JOIN molecule ON bond.molecule_id = molecule.molecule_id WHERE molecule.label = 'carcinogenic';\t----- bird -----\ttoxicology",
    "262": "SELECT DISTINCT m.molecule_id FROM molecule m WHERE m.molecule_id IN (SELECT b.molecule_id FROM bond b WHERE b.bond_type = 'single') AND m.label != 'carcinogenic' OR m.label IS NULL;\t----- bird -----\ttoxicology",
    "263": "SELECT (COUNT(DISTINCT CASE WHEN a.element = 'Cl' THEN a.atom_id END) * 100.0 / COUNT(DISTINCT a.atom_id)) AS chlorine_percentage FROM atom a JOIN molecule m ON a.molecule_id = m.molecule_id WHERE a.molecule_id IN (SELECT DISTINCT molecule_id FROM bond WHERE bond_type = 'single');\t----- bird -----\ttoxicology",
    "264": "SELECT label FROM molecule WHERE molecule_id IN ('TR000', 'TR001', 'TR002');\t----- bird -----\ttoxicology",
    "265": "SELECT molecule_id FROM molecule WHERE label NOT LIKE '%carcinogenic%';\t----- bird -----\ttoxicology",
    "266": "SELECT COUNT(*) FROM molecule WHERE molecule_id BETWEEN 'TR000' AND 'TR030' AND label = 'carcinogenic';\t----- bird -----\ttoxicology",
    "267": "SELECT DISTINCT b.bond_type FROM bond b WHERE b.molecule_id BETWEEN 'TR000' AND 'TR050';\t----- bird -----\ttoxicology",
    "268": "SELECT a.element FROM atom a JOIN connected c ON a.atom_id = c.atom_id OR a.atom_id = c.atom_id2 WHERE c.bond_id = 'TR001_10_11';\t----- bird -----\ttoxicology",
    "269": "SELECT COUNT(DISTINCT c.bond_id) FROM connected c JOIN atom a ON c.atom_id = a.atom_id OR c.atom_id2 = a.atom_id WHERE a.element = 'iodine';\t----- bird -----\ttoxicology",
    "270": "SELECT m.label, CASE WHEN c.count_carcinogenic > c.count_non_carcinogenic THEN 'carcinogenic' ELSE 'non carcinogenic' END AS majority_status FROM molecule m JOIN (SELECT molecule_id, SUM(CASE WHEN label = 'carcinogenic' THEN 1 ELSE 0 END) AS count_carcinogenic, SUM(CASE WHEN label = 'non carcinogenic' THEN 1 ELSE 0 END) AS count_non_carcinogenic FROM molecule WHERE molecule_id IN (SELECT DISTINCT molecule_id FROM atom WHERE element = 'Calcium') GROUP BY molecule_id) c ON m.molecule_id = c.molecule_id WHERE m.molecule_id IN (SELECT DISTINCT molecule_id FROM atom WHERE element = 'Calcium');\t----- bird -----\ttoxicology",
    "271": "SELECT COUNT(DISTINCT a.element) = 2 AND SUM(CASE WHEN a.element IN ('chlorine', 'carbon') THEN 1 ELSE 0 END) = 2 AS has_chlorine_and_carbon FROM atom a JOIN connected c ON a.atom_id = c.atom_id OR a.atom_id = c.atom_id2 WHERE c.bond_id = 'TR001_1_8';\t----- bird -----\ttoxicology",
    "272": "SELECT DISTINCT m.molecule_id FROM molecule m JOIN bond b ON m.molecule_id = b.molecule_id JOIN connected c ON b.bond_id = c.bond_id JOIN atom a ON c.atom_id = a.atom_id WHERE b.bond_type = 'triple' AND a.element = 'carbon' AND m.label NOT LIKE '%carcinogenic%' LIMIT 2;\t----- bird -----\ttoxicology",
    "273": "SELECT 100.0 * SUM(CASE WHEN a.element = 'Cl' THEN 1 ELSE 0 END) / COUNT(*) AS chlorine_percentage FROM atom a JOIN molecule m ON a.molecule_id = m.molecule_id WHERE m.label = 'carcinogenic';\t----- bird -----\ttoxicology",
    "274": "SELECT DISTINCT a.element FROM atom a JOIN molecule m ON a.molecule_id = m.molecule_id WHERE m.label = 'TR001' AND a.element IN ('toxicology_elements_list_placeholder');\t----- bird -----\ttoxicology",
    "275": "SELECT DISTINCT molecule_id FROM bond WHERE bond_type = 'double';\t----- bird -----\ttoxicology",
    "276": "SELECT c.atom_id, c.atom_id2 FROM connected c JOIN bond b ON c.bond_id = b.bond_id WHERE b.bond_type = 'triple' LIMIT 1;\t----- bird -----\ttoxicology",
    "277": "SELECT DISTINCT a.element FROM atom a JOIN connected c ON a.atom_id = c.atom_id OR a.atom_id = c.atom_id2 WHERE c.bond_id = 'TR000_1_2';\t----- bird -----\ttoxicology",
    "278": "SELECT COUNT(DISTINCT m.molecule_id) FROM molecule m JOIN bond b ON m.molecule_id = b.molecule_id GROUP BY m.molecule_id HAVING COUNT(DISTINCT b.bond_type) = 1 AND MAX(b.bond_type) = 'single' AND m.label != 'carcinogenic';\t----- bird -----\ttoxicology",
    "279": "SELECT m.label FROM molecule m JOIN bond b ON m.molecule_id = b.molecule_id WHERE b.bond_id = 'TR001_10_11';\t----- bird -----\ttoxicology",
    "280": "SELECT b.bond_id, m.label AS carcinogenic FROM bond b JOIN molecule m ON b.molecule_id = m.molecule_id WHERE b.bond_type = 'triple';\t----- bird -----\ttoxicology",
    "281": "SELECT a.element, COUNT(*) AS tally FROM atom a JOIN molecule m ON a.molecule_id = m.molecule_id WHERE m.label = 'carcinogenic' AND a.atom_id IN (SELECT atom_id FROM (SELECT atom_id, ROW_NUMBER() OVER (PARTITION BY molecule_id ORDER BY atom_id) AS rn FROM atom) sub WHERE rn = 4) GROUP BY a.element;\t----- bird -----\ttoxicology",
    "282": "SELECT m.label, CAST(SUM(CASE WHEN a.element = 'Hydrogen' THEN 1 ELSE 0 END) AS FLOAT) / COUNT(*) AS hydrogen_ratio FROM atom a JOIN molecule m ON a.molecule_id = m.molecule_id WHERE a.molecule_id = 'TR006' GROUP BY m.label;\t----- bird -----\ttoxicology",
    "283": "SELECT CASE WHEN EXISTS (SELECT 1 FROM atom a JOIN molecule m ON a.molecule_id = m.molecule_id WHERE a.element = 'Calcium' AND m.label = 'carcinogenic') THEN 'Yes' ELSE 'No' END AS is_carcinogenic;\t----- bird -----\ttoxicology",
    "284": "SELECT DISTINCT b.bond_type FROM bond b JOIN connected c ON b.bond_id = c.bond_id JOIN atom a ON (c.atom_id = a.atom_id OR c.atom_id2 = a.atom_id) WHERE a.element = 'Carbon';\t----- bird -----\ttoxicology",
    "285": "SELECT DISTINCT a.element FROM atom a JOIN connected c ON a.atom_id = c.atom_id OR a.atom_id = c.atom_id2 WHERE c.bond_id = 'TR001_10_11';\t----- bird -----\ttoxicology",
    "286": "SELECT 100.0 * COUNT(DISTINCT molecule_id) / (SELECT COUNT(*) FROM molecule) AS percent_triple_bond FROM bond WHERE bond_type = 'triple';\t----- bird -----\ttoxicology",
    "287": "SELECT 100.0 * COUNT(DISTINCT b.bond_id) / (SELECT COUNT(DISTINCT bond_id) FROM bond WHERE molecule_id = (SELECT molecule_id FROM molecule WHERE label = 'TR047')) AS percent_double_bond FROM bond b WHERE b.molecule_id = (SELECT molecule_id FROM molecule WHERE label = 'TR047') AND b.bond_type = 'double';\t----- bird -----\ttoxicology",
    "288": "SELECT m.label, CASE WHEN m.label LIKE '%carcinogenic%' THEN 'Yes' ELSE 'No' END AS is_carcinogenic FROM molecule m JOIN atom a ON m.molecule_id = a.molecule_id WHERE a.atom_id = 'TR001_1';\t----- bird -----\ttoxicology",
    "289": "SELECT carcinogenic FROM molecule WHERE label = 'TR151';\t----- bird -----\ttoxicology",
    "290": "SELECT DISTINCT a.element FROM atom a JOIN molecule m ON a.molecule_id = m.molecule_id WHERE m.label = 'TR151' AND a.element IN ('As', 'Cd', 'Pb', 'Hg', 'Cr', 'Ni', 'Se', 'Be', 'Sb', 'Tl', 'Ba', 'Br', 'Cl', 'F', 'I', 'Mn', 'Co', 'Cu', 'Zn', 'Ag', 'Au', 'Pt', 'Pd', 'V', 'Mo', 'Sn', 'Bi', 'Te', 'Po', 'At', 'Ra', 'Th', 'U');\t----- bird -----\ttoxicology",
    "291": "SELECT COUNT(*) FROM molecule WHERE label LIKE '%carcinogenic%';\t----- bird -----\ttoxicology",
    "292": "SELECT atom_id FROM atom WHERE molecule_id BETWEEN 'TR010' AND 'TR050' AND element = 'carbon';\t----- bird -----\ttoxicology",
    "293": "SELECT COUNT(*) FROM atom WHERE molecule_id = (SELECT molecule_id FROM molecule WHERE label = 'carcinogenic compounds');\t----- bird -----\ttoxicology",
    "294": "SELECT b.bond_id FROM bond b JOIN molecule m ON b.molecule_id = m.molecule_id WHERE b.bond_type = 'double-bond' AND m.label = 'carcinogenic compound';\t----- bird -----\ttoxicology",
    "295": "SELECT COUNT(*) FROM atom WHERE molecule_id = (SELECT molecule_id FROM molecule WHERE label = 'carcinogenic compound') AND element = 'hydrogen';\t----- bird -----\ttoxicology",
    "296": "SELECT b.molecule_id FROM bond b JOIN connected c ON b.bond_id = c.bond_id JOIN atom a ON c.atom_id = a.atom_id WHERE b.bond_type = 'TR000_1_2' AND a.element = 'TR000_1' LIMIT 1;\t----- bird -----\ttoxicology",
    "297": "SELECT a.atom_id FROM atom a WHERE a.element = 'carbon' AND a.molecule_id NOT IN (SELECT molecule_id FROM molecule WHERE label = 'carcinogenic');\t----- bird -----\ttoxicology",
    "298": "SELECT 100.0 * COUNT(DISTINCT a.molecule_id) / (SELECT COUNT(*) FROM molecule WHERE label LIKE '%carcinogenic%') AS percentage FROM atom a JOIN molecule m ON a.molecule_id = m.molecule_id WHERE m.label LIKE '%carcinogenic%' AND a.element = 'hydrogen';\t----- bird -----\ttoxicology",
    "299": "SELECT CASE WHEN EXISTS (SELECT 1 FROM molecule WHERE label = 'TR124' AND carcinogenic = TRUE) THEN 'Yes' ELSE 'No' END AS is_carcinogenic;\t----- bird -----\ttoxicology",
    "300": "SELECT atom.element FROM atom JOIN molecule ON atom.molecule_id = molecule.molecule_id WHERE molecule.label = 'TR186';\t----- bird -----\ttoxicology",
    "301": "SELECT b.bond_type FROM bond b JOIN molecule m ON b.molecule_id = m.molecule_id WHERE m.label = 'TR007_4_19';\t----- bird -----\ttoxicology",
    "302": "SELECT DISTINCT a.element FROM atom a JOIN connected c ON a.atom_id = c.atom_id OR a.atom_id = c.atom_id2 WHERE c.bond_id = 'TR001_2_4';\t----- bird -----\ttoxicology",
    "303": "SELECT COUNT(b.bond_id) AS double_bond_count, m.carcinogenic FROM bond b JOIN molecule m ON b.molecule_id = m.molecule_id WHERE m.label = 'TR006' AND b.bond_type = 'double' GROUP BY m.carcinogenic;\t----- bird -----\ttoxicology",
    "304": "SELECT DISTINCT m.label, a.element FROM molecule m JOIN atom a ON m.molecule_id = a.molecule_id WHERE m.label LIKE '%carcinogenic%';\t----- bird -----\ttoxicology",
    "305": "SELECT b.bond_id, b.bond_type, a1.element AS atom1_element, a2.element AS atom2_element, b.molecule_id FROM bond b JOIN connected c ON b.bond_id = c.bond_id JOIN atom a1 ON c.atom_id = a1.atom_id JOIN atom a2 ON c.atom_id2 = a2.atom_id WHERE b.bond_type = 'single';\t----- bird -----\ttoxicology",
    "306": "SELECT DISTINCT m.molecule_id, m.label, a.element FROM molecule m JOIN bond b ON m.molecule_id = b.molecule_id JOIN connected c ON b.bond_id = c.bond_id JOIN atom a ON (a.atom_id = c.atom_id OR a.atom_id = c.atom_id2) WHERE b.bond_type = 'triple' ORDER BY m.molecule_id, a.element;\t----- bird -----\ttoxicology",
    "307": "SELECT a.element FROM atom a JOIN connected c ON a.atom_id = c.atom_id WHERE c.bond_id = 'TR000_2_3' UNION SELECT a2.element FROM atom a2 JOIN connected c2 ON a2.atom_id = c2.atom_id2 WHERE c2.bond_id = 'TR000_2_3';\t----- bird -----\ttoxicology",
    "308": "SELECT COUNT(DISTINCT c.bond_id) FROM connected c JOIN atom a ON c.atom_id = a.atom_id WHERE a.element = 'Cl' UNION SELECT COUNT(DISTINCT c.bond_id) FROM connected c JOIN atom a ON c.atom_id2 = a.atom_id WHERE a.element = 'Cl';\t----- bird -----\ttoxicology",
    "309": "SELECT a.atom_id, (SELECT COUNT(DISTINCT bond_type) FROM bond WHERE molecule_id = m.molecule_id) AS bond_type_count FROM atom a JOIN molecule m ON a.molecule_id = m.molecule_id WHERE m.label = 'TR346';\t----- bird -----\ttoxicology",
    "310": "SELECT COUNT(DISTINCT b.molecule_id) AS total_double_bond_molecules, COUNT(DISTINCT CASE WHEN m.label = 'carcinogenic compound' THEN b.molecule_id END) AS carcinogenic_double_bond_molecules FROM bond b JOIN molecule m ON b.molecule_id = m.molecule_id WHERE b.bond_type = 'double';\t----- bird -----\ttoxicology",
    "311": "SELECT COUNT(*) FROM molecule m WHERE m.molecule_id NOT IN (SELECT DISTINCT a.molecule_id FROM atom a WHERE a.element = 'S') AND m.molecule_id NOT IN (SELECT DISTINCT b.molecule_id FROM bond b WHERE b.bond_type = 'double');\t----- bird -----\ttoxicology",
    "312": "SELECT molecule.label FROM molecule JOIN bond ON molecule.molecule_id = bond.molecule_id WHERE bond.bond_id = 'TR001_2_4';\t----- bird -----\ttoxicology",
    "313": "SELECT COUNT(*) FROM atom WHERE molecule_id = 'TR001';\t----- bird -----\ttoxicology",
    "314": "SELECT COUNT(*) FROM bond WHERE bond_type = 'single';\t----- bird -----\ttoxicology",
    "315": "SELECT DISTINCT m.molecule_id, m.label FROM molecule m JOIN atom a ON m.molecule_id = a.molecule_id WHERE LOWER(a.element) = 'cl' AND m.label LIKE '%carcinogenic%';\t----- bird -----\ttoxicology",
    "316": "SELECT DISTINCT m.molecule_id, m.label FROM molecule m JOIN atom a ON m.molecule_id = a.molecule_id WHERE a.element = 'c' AND m.label NOT LIKE '%carcinogenic%';\t----- bird -----\ttoxicology",
    "317": "SELECT 100.0 * COUNT(DISTINCT a.molecule_id) / (SELECT COUNT(*) FROM molecule WHERE label = 'carcinogenic') AS percentage FROM atom a JOIN molecule m ON a.molecule_id = m.molecule_id WHERE m.label = 'carcinogenic' AND a.element = 'Chlorine';\t----- bird -----\ttoxicology",
    "318": "SELECT molecule_id FROM bond WHERE bond_id = 'TR001_1_7';\t----- bird -----\ttoxicology",
    "319": "SELECT COUNT(DISTINCT element) FROM atom WHERE atom_id IN (SELECT atom_id FROM connected WHERE bond_id = 'TR001_3_4' UNION SELECT atom_id2 FROM connected WHERE bond_id = 'TR001_3_4');\t----- bird -----\ttoxicology",
    "320": "SELECT b.bond_type FROM bond b JOIN connected c ON b.bond_id = c.bond_id JOIN atom a1 ON c.atom_id = a1.atom_id JOIN atom a2 ON c.atom_id2 = a2.atom_id WHERE a1.element = 'TR000_1' AND a2.element = 'TR000_2' OR a1.element = 'TR000_2' AND a2.element = 'TR000_1';\t----- bird -----\ttoxicology",
    "321": "SELECT m.* FROM molecule m JOIN atom a1 ON m.molecule_id = a1.molecule_id JOIN atom a2 ON m.molecule_id = a2.molecule_id WHERE a1.atom_id = 'TR000_2' AND a2.atom_id = 'TR000_4';\t----- bird -----\ttoxicology",
    "322": "SELECT element FROM atom WHERE atom_id = 'TR000_1';\t----- bird -----\ttoxicology",
    "323": "SELECT CASE WHEN EXISTS (SELECT 1 FROM molecule WHERE label = 'TR000' AND carcinogenic = TRUE) THEN 'Yes' ELSE 'No' END AS is_carcinogenic FROM molecule WHERE label = 'TR000';\t----- bird -----\ttoxicology",
    "324": "SELECT 100.0 * COUNT(DISTINCT c.atom_id) / (SELECT COUNT(*) FROM atom) AS percentage_single_bond_atoms FROM connected c JOIN bond b ON c.bond_id = b.bond_id WHERE b.bond_type = 'single';\t----- bird -----\ttoxicology",
    "325": "SELECT COUNT(DISTINCT m.molecule_id) FROM molecule m JOIN atom a ON m.molecule_id = a.molecule_id WHERE m.label = 'carcinogenic' AND a.element = 'Nitrogen';\t----- bird -----\ttoxicology",
    "326": "SELECT DISTINCT m.label FROM molecule m JOIN atom a ON m.molecule_id = a.molecule_id JOIN connected c ON a.atom_id = c.atom_id JOIN bond b ON c.bond_id = b.bond_id WHERE a.element = 'Sulphur' AND b.bond_type = 'double';\t----- bird -----\ttoxicology",
    "327": "SELECT m.molecule_id, m.label FROM molecule m JOIN atom a ON m.molecule_id = a.molecule_id WHERE m.label NOT LIKE '%carcinogen%' GROUP BY m.molecule_id, m.label HAVING COUNT(a.atom_id) > 5;\t----- bird -----\ttoxicology",
    "328": "SELECT DISTINCT a.element FROM atom a JOIN connected c ON a.atom_id = c.atom_id JOIN bond b ON c.bond_id = b.bond_id JOIN molecule m ON a.molecule_id = m.molecule_id WHERE b.bond_type = 'double' AND m.label = 'TR024';\t----- bird -----\ttoxicology",
    "329": "SELECT m.label FROM molecule m JOIN atom a ON m.molecule_id = a.molecule_id WHERE m.label LIKE '%carcinogenic%' GROUP BY m.molecule_id, m.label ORDER BY COUNT(a.atom_id) DESC LIMIT 1;\t----- bird -----\ttoxicology",
    "330": "SELECT 100.0 * COUNT(DISTINCT m.molecule_id) / (SELECT COUNT(*) FROM molecule) AS percentage FROM molecule m JOIN atom a1 ON m.molecule_id = a1.molecule_id JOIN connected c ON a1.atom_id = c.atom_id JOIN bond b ON c.bond_id = b.bond_id JOIN atom a2 ON c.atom_id2 = a2.atom_id WHERE m.label = 'carcinogenic' AND b.bond_type = 'triple' AND (a1.element = 'Hydrogen' OR a2.element = 'Hydrogen');\t----- bird -----\ttoxicology",
    "331": "SELECT COUNT(*) FROM molecule WHERE label = 'carcinogenic';\t----- bird -----\ttoxicology",
    "332": "SELECT COUNT(DISTINCT m.molecule_id) FROM molecule m JOIN bond b ON m.molecule_id = b.molecule_id WHERE m.label BETWEEN 'TR004' AND 'TR010' AND b.bond_type = 'single';\t----- bird -----\ttoxicology",
    "333": "SELECT COUNT(*) FROM atom WHERE molecule_id = (SELECT molecule_id FROM molecule WHERE label = 'TR008') AND element = 'C';\t----- bird -----\ttoxicology",
    "334": "SELECT a.element FROM atom a JOIN molecule m ON a.molecule_id = m.molecule_id WHERE a.atom_id = 'TR004_7' AND m.label != 'carcinogenic' LIMIT 1;\t----- bird -----\ttoxicology",
    "335": "SELECT COUNT(DISTINCT m.molecule_id) FROM molecule m JOIN bond b ON m.molecule_id = b.molecule_id JOIN connected c ON b.bond_id = c.bond_id JOIN atom a ON c.atom_id = a.atom_id WHERE b.bond_type = 'double' AND a.element = 'O' OR b.bond_type = 'double' AND a.element = 'O' AND c.atom_id2 = a.atom_id;\t----- bird -----\ttoxicology",
    "336": "SELECT COUNT(DISTINCT m.molecule_id) FROM molecule m JOIN bond b ON m.molecule_id = b.molecule_id WHERE b.bond_type = 'triple' AND m.label != 'carcinogenic';\t----- bird -----\ttoxicology",
    "337": "SELECT DISTINCT a.element, b.bond_type FROM molecule m JOIN atom a ON m.molecule_id = a.molecule_id JOIN bond b ON m.molecule_id = b.molecule_id WHERE m.molecule_id = 'TR002';\t----- bird -----\ttoxicology",
    "338": "SELECT a.atom_id FROM atom a JOIN connected c ON a.atom_id = c.atom_id JOIN bond b ON c.bond_id = b.bond_id JOIN molecule m ON a.molecule_id = m.molecule_id WHERE m.label = 'TR012' AND a.element = 'C' AND b.bond_type = 'double';\t----- bird -----\ttoxicology",
    "339": "SELECT DISTINCT a.atom_id FROM atom a JOIN molecule m ON a.molecule_id = m.molecule_id WHERE m.label = 'carcinogenic' AND a.element = 'oxygen';\t----- bird -----\ttoxicology",
    "340": "SELECT * FROM cards WHERE hasFoil = TRUE AND text LIKE '%incredibly powerful%' OR flavorText LIKE '%incredibly powerful%' OR name LIKE '%incredibly powerful%';\t----- bird -----\tcard_games",
    "341": "SELECT * FROM cards WHERE borderColor = 'borderless' AND hasFoil = FALSE;\t----- bird -----\tcard_games",
    "342": "SELECT name FROM cards WHERE faceConvertedManaCost > convertedManaCost;\t----- bird -----\tcard_games",
    "343": "SELECT name FROM cards WHERE frameVersion = '2015' AND edhrecRank < 100;\t----- bird -----\tcard_games",
    "344": "SELECT c.* FROM cards c JOIN legalities l ON c.uuid = l.uuid WHERE c.rarity = 'mythic' AND l.format = 'gladiator' AND l.status = 'banned' AND c.printings IS NOT NULL;\t----- bird -----\tcard_games",
    "345": "SELECT c.name, l.status FROM cards c JOIN legalities l ON c.uuid = l.uuid WHERE c.types LIKE '%Artifact%' AND (c.otherFaceIds IS NULL OR c.otherFaceIds = '') AND l.format = 'vintage';\t----- bird -----\tcard_games",
    "346": "SELECT cards.id, cards.artist FROM cards JOIN legalities ON cards.uuid = legalities.uuid WHERE (cards.power IS NULL OR cards.power = 'unknown') AND legalities.format = 'commander' AND legalities.status = 'legal';\t----- bird -----\tcard_games",
    "347": "SELECT c.name, r.text AS ruling_text, CASE WHEN c.text IS NULL OR c.text = '' THEN 'Missing text' ELSE 'Text present' END AS text_status, CASE WHEN c.flavorText IS NULL OR c.flavorText = '' THEN 'Missing flavorText' ELSE 'FlavorText present' END AS flavorText_status, CASE WHEN c.power IS NULL OR c.power = '' THEN 'Missing power' ELSE 'Power present' END AS power_status, CASE WHEN c.toughness IS NULL OR c.toughness = '' THEN 'Missing toughness' ELSE 'Toughness present' END AS toughness_status FROM cards c LEFT JOIN rulings r ON c.uuid = r.uuid WHERE c.artist = 'Stephen Daniel';\t----- bird -----\tcard_games",
    "348": "SELECT rulings.* FROM rulings JOIN cards ON rulings.uuid = cards.uuid WHERE cards.name = 'Sublime Epiphany' AND cards.number = '74s';\t----- bird -----\tcard_games",
    "349": "SELECT c.name, c.artist, c.isPromo FROM cards c JOIN rulings r ON c.uuid = r.uuid GROUP BY c.uuid, c.name, c.artist, c.isPromo ORDER BY COUNT(r.id) DESC LIMIT 1;\t----- bird -----\tcard_games",
    "350": "SELECT DISTINCT language FROM foreign_data WHERE name = 'Annul' AND id IN (SELECT id FROM cards WHERE number = '29');\t----- bird -----\tcard_games",
    "351": "SELECT DISTINCT c.name FROM cards c JOIN foreign_data f ON c.uuid = f.uuid WHERE f.language = 'Japanese';\t----- bird -----\tcard_games",
    "352": "SELECT (COUNT(DISTINCT f.uuid) * 100.0 / COUNT(DISTINCT c.uuid)) AS percentage_chinese_simplified FROM cards c LEFT JOIN foreign_data f ON c.uuid = f.uuid AND f.language = 'Chinese Simplified';\t----- bird -----\tcard_games",
    "353": "SELECT s.code, st.translation, COUNT(c.id) AS total_cards FROM sets s JOIN set_translations st ON s.code = st.setCode AND st.language = 'Italian' LEFT JOIN cards c ON c.setCode = s.code GROUP BY s.code, st.translation;\t----- bird -----\tcard_games",
    "354": "SELECT COUNT(DISTINCT type) FROM cards WHERE artist = 'Aaron Boyd' AND type IS NOT NULL;\t----- bird -----\tcard_games",
    "355": "SELECT keywords FROM cards WHERE name = 'Angel of Mercy';\t----- bird -----\tcard_games",
    "356": "SELECT COUNT(*) FROM cards WHERE power = '\u221e' OR power = 'infinite';\t----- bird -----\tcard_games",
    "357": "SELECT promoTypes FROM cards WHERE name = 'Duress';\t----- bird -----\tcard_games",
    "358": "SELECT borderColor FROM cards WHERE name = 'Ancestor''s Chosen';\t----- bird -----\tcard_games",
    "359": "SELECT originalType FROM cards WHERE name = 'Ancestor''s Chosen' ORDER BY originalReleaseDate LIMIT 1;\t----- bird -----\tcard_games",
    "360": "SELECT DISTINCT st.language FROM set_translations st JOIN sets s ON st.setCode = s.code JOIN cards c ON c.setCode = s.code WHERE c.name = 'Angel of Mercy';\t----- bird -----\tcard_games",
    "361": "SELECT COUNT(DISTINCT c.id) FROM cards c JOIN legalities l ON c.uuid = l.uuid WHERE l.status = 'restricted' AND c.text IS NOT NULL AND c.text <> '';\t----- bird -----\tcard_games",
    "362": "SELECT text FROM rulings WHERE uuid = (SELECT uuid FROM cards WHERE name = 'Condemn');\t----- bird -----\tcard_games",
    "363": "SELECT COUNT(DISTINCT c.id) FROM cards c JOIN legalities l ON c.uuid = l.uuid WHERE l.status = 'restricted' AND c.isStarter = TRUE;\t----- bird -----\tcard_games",
    "364": "SELECT legalities.status FROM legalities JOIN cards ON legalities.uuid = cards.uuid WHERE cards.name = 'Cloudchaser Eagle';\t----- bird -----\tcard_games",
    "365": "SELECT type FROM cards WHERE name = 'Benalish Knight';\t----- bird -----\tcard_games",
    "366": "SELECT text FROM rulings WHERE uuid = (SELECT uuid FROM cards WHERE name = 'Benalish Knight') ORDER BY date;\t----- bird -----\tcard_games",
    "367": "SELECT DISTINCT artist FROM cards WHERE name = 'Phyrexian';\t----- bird -----\tcard_games",
    "368": "SELECT 100.0 * SUM(CASE WHEN borderColor = 'borderless' THEN 1 ELSE 0 END) / COUNT(*) AS percentage_borderless_cards FROM cards;\t----- bird -----\tcard_games",
    "369": "SELECT COUNT(*) FROM cards c JOIN foreign_data f ON c.uuid = f.uuid WHERE f.language = 'German' AND c.isReprint = TRUE;\t----- bird -----\tcard_games",
    "370": "SELECT COUNT(*) FROM cards c JOIN foreign_data f ON c.uuid = f.uuid WHERE c.borderColor = 'borderless' AND f.language = 'Russian';\t----- bird -----\tcard_games",
    "371": "SELECT 100.0 * COUNT(DISTINCT f.uuid) / COUNT(DISTINCT c.uuid) AS french_story_spotlight_percentage FROM cards c LEFT JOIN foreign_data f ON c.uuid = f.uuid AND f.language = 'French' WHERE c.isStorySpotlight = TRUE;\t----- bird -----\tcard_games",
    "372": "SELECT COUNT(*) FROM cards WHERE toughness = '99';\t----- bird -----\tcard_games",
    "373": "SELECT name FROM cards WHERE artist = 'Aaron Boyd';\t----- bird -----\tcard_games",
    "374": "SELECT COUNT(*) FROM cards WHERE borderColor = 'black' AND isOnlineOnly = FALSE AND hasFoil = FALSE AND hasNonFoil = FALSE AND mtgoId IS NOT NULL AND (cardKingdomId IS NULL OR cardKingdomId = '') AND (tcgplayerProductId IS NULL OR tcgplayerProductId = '');\t----- bird -----\tcard_games",
    "375": "SELECT id FROM cards WHERE convertedManaCost = 0;\t----- bird -----\tcard_games",
    "376": "SELECT layout FROM cards WHERE keywords LIKE '%flying%';\t----- bird -----\tcard_games",
    "377": "SELECT COUNT(*) FROM cards WHERE originalType = 'Summon - Angel' AND (subtypes IS NULL OR subtypes NOT LIKE '%Angel%');\t----- bird -----\tcard_games",
    "378": "SELECT DISTINCT c1.id FROM cards c1 JOIN cards c2 ON c1.name = c2.name WHERE c1.hasFoil = TRUE AND c2.hasNonFoil = TRUE;\t----- bird -----\tcard_games",
    "379": "SELECT id FROM cards WHERE duelDeck = 'a';\t----- bird -----\tcard_games",
    "380": "SELECT edhrecRank FROM cards WHERE frameVersion = 2015;\t----- bird -----\tcard_games",
    "381": "SELECT DISTINCT cards.artist FROM cards JOIN foreign_data ON cards.uuid = foreign_data.uuid WHERE foreign_data.language = 'Chinese Simplified';\t----- bird -----\tcard_games",
    "382": "SELECT c.* FROM cards c JOIN foreign_data f ON c.uuid = f.uuid WHERE c.availability = 'paper' AND f.language = 'Japanese' AND NOT EXISTS (SELECT 1 FROM foreign_data f2 WHERE f2.uuid = c.uuid AND f2.language <> 'Japanese') AND NOT EXISTS (SELECT 1 FROM cards c2 WHERE c2.uuid = c.uuid AND c2.availability <> 'paper');\t----- bird -----\tcard_games",
    "383": "SELECT COUNT(*) FROM cards c JOIN legalities l ON c.uuid = l.uuid WHERE l.status = 'banned' AND c.borderColor = 'white';\t----- bird -----\tcard_games",
    "384": "SELECT DISTINCT c.uuid, f.language FROM cards c JOIN legalities l ON c.uuid = l.uuid JOIN foreign_data f ON c.uuid = f.uuid WHERE l.format = 'legacy' AND l.status = 'legal';\t----- bird -----\tcard_games",
    "385": "SELECT rulings.text FROM rulings JOIN cards ON rulings.uuid = cards.uuid WHERE cards.name = 'Beacon of Immortality';\t----- bird -----\tcard_games",
    "386": "SELECT cards.frameVersion, legalities.status, COUNT(*) AS card_count FROM cards LEFT JOIN legalities ON cards.uuid = legalities.uuid WHERE cards.frameVersion > (SELECT MAX(frameVersion) FROM cards) GROUP BY cards.frameVersion, legalities.status;\t----- bird -----\tcard_games",
    "387": "SELECT name, colors FROM cards WHERE setCode = 'OGW';\t----- bird -----\tcard_games",
    "388": "SELECT c.name, st.language, st.translation FROM cards c JOIN set_translations st ON c.setCode = st.setCode WHERE c.setCode = '10E' AND c.convertedManaCost = 5;\t----- bird -----\tcard_games",
    "389": "SELECT c.name, r.date FROM cards c JOIN rulings r ON c.uuid = r.uuid WHERE c.originalType = 'Creature - Elf';\t----- bird -----\tcard_games",
    "390": "SELECT id, colors, (SELECT format FROM legalities WHERE legalities.uuid = cards.uuid) AS format FROM cards WHERE id BETWEEN 1 AND 20;\t----- bird -----\tcard_games",
    "391": "SELECT DISTINCT c.* FROM cards c JOIN foreign_data f ON c.uuid = f.uuid WHERE c.types LIKE '%Artifact%' AND c.colors LIKE '%B%' AND f.language <> 'English';\t----- bird -----\tcard_games",
    "392": "SELECT c.name FROM cards c JOIN rulings r ON c.uuid = r.uuid WHERE c.rarity = 'uncommon' ORDER BY r.date ASC LIMIT 3;\t----- bird -----\tcard_games",
    "393": "SELECT COUNT(*) FROM cards WHERE artist = 'John Avon' AND hasFoil = FALSE;\t----- bird -----\tcard_games",
    "394": "SELECT COUNT(*) FROM cards WHERE borderColor = 'white' AND power IS NOT NULL AND power != '' AND power != '0';\t----- bird -----\tcard_games",
    "395": "SELECT COUNT(*) FROM cards WHERE artist = 'UDON' AND availability LIKE '%mtgo%' AND hand = -1;\t----- bird -----\tcard_games",
    "396": "SELECT COUNT(*) FROM cards WHERE frameVersion = '1993' AND availability LIKE '%paper%' AND hasContentWarning = TRUE;\t----- bird -----\tcard_games",
    "397": "SELECT manaCost FROM cards WHERE layout = 'normal' AND frameVersion = 2003 AND borderColor = 'black' AND availability LIKE '%paper%' AND availability LIKE '%mtgo%';\t----- bird -----\tcard_games",
    "398": "SELECT SUM(convertedManaCost) FROM cards WHERE artist = 'Rob Alexander' AND convertedManaCost IS NOT NULL;\t----- bird -----\tcard_games",
    "399": "SELECT DISTINCT types FROM cards WHERE mtgArenaId IS NOT NULL;\t----- bird -----\tcard_games",
    "400": "SELECT DISTINCT setCode FROM set_translations WHERE language = 'Spanish' AND setCode IN (SELECT DISTINCT setCode FROM cards);\t----- bird -----\tcard_games",
    "401": "SELECT 100.0 * COUNT(*) FILTER (WHERE frameEffects LIKE '%legendary%' AND isOnlineOnly = TRUE) / COUNT(*) AS percentage_legendary_online_only FROM cards;\t----- bird -----\tcard_games",
    "402": "SELECT id, (SELECT COUNT(*) FROM cards WHERE isStorySpotlight = TRUE AND (text IS NULL OR text = '')) * 100.0 / (SELECT COUNT(*) FROM cards WHERE isStorySpotlight = TRUE) AS percentage_no_text FROM cards WHERE isStorySpotlight = TRUE AND (text IS NULL OR text = '');\t----- bird -----\tcard_games",
    "403": "SELECT c.name, (COUNT(fd.id) * 100.0 / (SELECT COUNT(*) FROM cards)) AS percentage_spanish FROM cards c LEFT JOIN foreign_data fd ON c.uuid = fd.uuid AND fd.language = 'Spanish' GROUP BY c.name HAVING COUNT(fd.id) > 0;\t----- bird -----\tcard_games",
    "404": "SELECT DISTINCT language FROM set_translations WHERE setCode = (SELECT code FROM sets WHERE baseSetSize = 309);\t----- bird -----\tcard_games",
    "405": "SELECT COUNT(DISTINCT s.code) FROM sets s JOIN set_translations st ON s.code = st.setCode WHERE st.language = 'Brazilian Portuguese' AND s.block = 'Commander';\t----- bird -----\tcard_games",
    "406": "SELECT cards.id FROM cards JOIN legalities ON cards.uuid = legalities.uuid WHERE cards.types LIKE '%Creature%' AND legalities.status = 'legal';\t----- bird -----\tcard_games",
    "407": "SELECT DISTINCT c.types FROM cards c JOIN set_translations st ON c.setCode = st.setCode WHERE st.language = 'German';\t----- bird -----\tcard_games",
    "408": "SELECT COUNT(*) FROM cards WHERE power = 'unknown' AND text LIKE '%triggered ability%';\t----- bird -----\tcard_games",
    "409": "SELECT COUNT(DISTINCT c.id) FROM cards c JOIN legalities l ON c.uuid = l.uuid JOIN rulings r ON c.uuid = r.uuid WHERE l.format = 'pre-modern' AND r.text = 'This is a triggered mana ability.' AND (c.layout IS NULL OR c.layout NOT IN ('modal_dfc', 'transform', 'meld', 'split', 'adventure', 'flip', 'double_faced_token', 'aftermath'));\t----- bird -----\tcard_games",
    "410": "SELECT DISTINCT c.id FROM cards c JOIN legalities l ON c.uuid = l.uuid WHERE c.artist = 'Erica Yang' AND l.format = 'pauper' AND l.status = 'legal' AND c.availability LIKE '%paper%';\t----- bird -----\tcard_games",
    "411": "SELECT artist FROM cards WHERE text = 'Das perfekte Gegenmittel zu einer dichten Formation' LIMIT 1;\t----- bird -----\tcard_games",
    "412": "SELECT foreign_data.name FROM cards JOIN foreign_data ON cards.uuid = foreign_data.uuid WHERE cards.type LIKE '%Creature%' AND cards.layout = 'normal' AND cards.borderColor = 'black' AND cards.artist = 'Matthew D. Wilson' AND foreign_data.language = 'French';\t----- bird -----\tcard_games",
    "413": "SELECT COUNT(DISTINCT c.id) FROM cards c JOIN rulings r ON c.uuid = r.uuid WHERE c.rarity = 'print' AND r.date = '2007-01-02';\t----- bird -----\tcard_games",
    "414": "SELECT DISTINCT st.language FROM sets s JOIN set_translations st ON s.code = st.setCode WHERE s.block = 'Ravnica' AND s.baseSetSize = 180;\t----- bird -----\tcard_games",
    "415": "SELECT 100.0 * SUM(CASE WHEN c.hasContentWarning = false THEN 1 ELSE 0 END) / COUNT(*) AS percentage_without_content_warning FROM cards c JOIN legalities l ON c.uuid = l.uuid WHERE l.format = 'commander' AND l.status = 'legal';\t----- bird -----\tcard_games",
    "416": "SELECT 100.0 * COUNT(DISTINCT f.uuid) / NULLIF(COUNT(DISTINCT c.uuid), 0) AS percentage_french FROM cards c LEFT JOIN foreign_data f ON c.uuid = f.uuid AND f.language = 'French' WHERE c.power IS NULL;\t----- bird -----\tcard_games",
    "417": "SELECT 100.0 * SUM(CASE WHEN s.type = 'expansion' THEN 1 ELSE 0 END) / COUNT(*) AS percentage_expansion FROM sets s JOIN set_translations st ON s.code = st.setCode WHERE st.language = 'Japanese';\t----- bird -----\tcard_games",
    "418": "SELECT printings FROM cards WHERE artist = 'Daren Bader';\t----- bird -----\tcard_games",
    "419": "SELECT COUNT(*) FROM cards WHERE colors IS NOT NULL AND (borderColor = '' OR borderColor IS NULL) AND edhrecRank < 12000;\t----- bird -----\tcard_games",
    "420": "SELECT COUNT(*) FROM cards WHERE isOversized = TRUE AND isReprint = TRUE AND isPromo = TRUE;\t----- bird -----\tcard_games",
    "421": "SELECT name FROM cards WHERE power = 'unknown' AND promoTypes LIKE '%arena league%' ORDER BY name ASC LIMIT 3;\t----- bird -----\tcard_games",
    "422": "SELECT language FROM foreign_data WHERE multiverseid = 149934;\t----- bird -----\tcard_games",
    "423": "SELECT cardKingdomFoilId, cardKingdomId FROM cards WHERE cardKingdomFoilId IS NOT NULL AND cardKingdomId IS NOT NULL ORDER BY cardKingdomFoilId ASC LIMIT 3;\t----- bird -----\tcard_games",
    "424": "SELECT CAST(SUM(CASE WHEN (text IS NULL OR text = '') OR layout <> 'normal' THEN 1 ELSE 0 END) AS FLOAT) / COUNT(*) AS proportion FROM cards;\t----- bird -----\tcard_games",
    "425": "SELECT number FROM cards WHERE otherFaceIds IS NULL AND subtypes LIKE '%Angel%' AND subtypes LIKE '%Wizard%';\t----- bird -----\tcard_games",
    "426": "SELECT code, name FROM sets WHERE mtgoCode IS NULL ORDER BY name ASC LIMIT 3;\t----- bird -----\tcard_games",
    "427": "SELECT DISTINCT language FROM foreign_data WHERE multiverseid IN (SELECT multiverseId FROM cards WHERE setCode = 'ARC') AND EXISTS (SELECT 1 FROM sets WHERE code = 'ARC' AND name = 'Archenemy');\t----- bird -----\tcard_games",
    "428": "SELECT sets.name, set_translations.translation FROM sets JOIN set_translations ON sets.code = set_translations.setCode WHERE sets.id = 5;\t----- bird -----\tcard_games",
    "429": "SELECT st.language, s.type FROM sets s JOIN set_translations st ON s.code = st.setCode WHERE s.baseSetSize = 206;\t----- bird -----\tcard_games",
    "430": "SELECT DISTINCT s.id, s.name FROM sets s JOIN cards c ON s.code = c.setCode JOIN foreign_data f ON c.uuid = f.uuid WHERE f.language = 'Italian' AND s.block = 'Shadowmoor' ORDER BY s.name ASC LIMIT 2;\t----- bird -----\tcard_games",
    "431": "SELECT s.id FROM sets s JOIN cards c ON s.code = c.setCode WHERE s.isForeignOnly = 1 AND c.hasFoil = 1 AND EXISTS (SELECT 1 FROM foreign_data f WHERE f.uuid = c.uuid AND f.language = 'Japanese') GROUP BY s.id;\t----- bird -----\tcard_games",
    "432": "SELECT s.name, COUNT(c.id) AS card_count FROM sets s JOIN cards c ON s.code = c.setCode JOIN set_translations st ON s.code = st.setCode WHERE st.language = 'Russian' GROUP BY s.name ORDER BY card_count DESC LIMIT 1;\t----- bird -----\tcard_games",
    "433": "SELECT 100.0 * COUNT(*) / (SELECT COUNT(*) FROM cards) AS percentage FROM cards WHERE uuid IN (SELECT uuid FROM foreign_data WHERE language = 'Chinese Simplified') AND isOnlineOnly = TRUE;\t----- bird -----\tcard_games",
    "434": "SELECT COUNT(*) FROM sets s WHERE s.isOnlineOnly = FALSE AND NOT EXISTS (SELECT 1 FROM set_translations st WHERE st.setCode = s.code AND st.language <> 'Japanese') AND EXISTS (SELECT 1 FROM set_translations st2 WHERE st2.setCode = s.code AND st2.language = 'Japanese');\t----- bird -----\tcard_games",
    "435": "SELECT id FROM cards WHERE borderColor = 'black';\t----- bird -----\tcard_games",
    "436": "SELECT COUNT(*), GROUP_CONCAT(id) FROM cards WHERE frameEffects LIKE '%extendedart%';\t----- bird -----\tcard_games",
    "437": "SELECT * FROM cards WHERE borderColor = 'black' AND isFullArt = TRUE;\t----- bird -----\tcard_games",
    "438": "SELECT language FROM set_translations WHERE setCode = (SELECT code FROM sets WHERE id = '174');\t----- bird -----\tcard_games",
    "439": "SELECT name FROM sets WHERE code = 'ALL';\t----- bird -----\tcard_games",
    "440": "SELECT DISTINCT language FROM foreign_data WHERE name = 'A Pedra Fellwar';\t----- bird -----\tcard_games",
    "441": "SELECT code FROM sets WHERE releaseDate = '2007-07-13' LIMIT 1;\t----- bird -----\tcard_games",
    "442": "SELECT baseSetSize, code FROM sets WHERE block IN ('Masques', 'Mirage');\t----- bird -----\tcard_games",
    "443": "SELECT code FROM sets WHERE type = 'expansion';\t----- bird -----\tcard_games",
    "444": "SELECT foreign_data.name, cards.type FROM cards JOIN foreign_data ON cards.uuid = foreign_data.uuid WHERE cards.watermark = 'boros';\t----- bird -----\tcard_games",
    "445": "SELECT foreign_data.language, foreign_data.flavorText, cards.type FROM cards JOIN foreign_data ON cards.uuid = foreign_data.uuid WHERE cards.watermark = 'colorpie';\t----- bird -----\tcard_games",
    "446": "SELECT 100.0 * COUNT(*) / (SELECT COUNT(*) FROM cards WHERE setCode = 'Abyssal Horror') AS percentage FROM cards WHERE setCode = 'Abyssal Horror' AND convertedManaCost = 10;\t----- bird -----\tcard_games",
    "447": "SELECT code FROM sets WHERE type = 'expansion commander' OR type LIKE '%expansion commander%' OR type LIKE '%commander%' OR type LIKE '%expansion%';\t----- bird -----\tcard_games",
    "448": "SELECT foreign_data.name, cards.type FROM cards JOIN foreign_data ON cards.uuid = foreign_data.uuid WHERE cards.watermark = 'abzan';\t----- bird -----\tcard_games",
    "449": "SELECT watermark AS language, type FROM cards WHERE watermark = 'azorius';\t----- bird -----\tcard_games",
    "450": "SELECT COUNT(*) FROM cards WHERE artist = 'Aaron Miller' AND (power IS NOT NULL AND power::int >= 8);\t----- bird -----\tcard_games",
    "451": "SELECT COUNT(*) FROM cards WHERE availability LIKE '%paper%' AND hand > 0;\t----- bird -----\tcard_games",
    "452": "SELECT name FROM cards WHERE text IS NOT NULL AND TRIM(text) <> '';\t----- bird -----\tcard_games",
    "453": "SELECT convertedManaCost FROM cards WHERE name = 'Ancestor''s Chosen';\t----- bird -----\tcard_games",
    "454": "SELECT COUNT(*) FROM cards WHERE borderColor = 'white' AND (power IS NULL OR power = 'unknown' OR power = '');\t----- bird -----\tcard_games",
    "455": "SELECT name FROM cards WHERE isPromo = TRUE AND layout IN ('modal_dfc', 'transform', 'flip', 'split', 'adventure', 'meld', 'aftermath', 'reversible');\t----- bird -----\tcard_games",
    "456": "SELECT types FROM cards WHERE name = 'Molimo, Maro-Sorcerer';\t----- bird -----\tcard_games",
    "457": "SELECT purchaseUrls FROM cards WHERE promoTypes LIKE '%bundle%' AND purchaseUrls IS NOT NULL;\t----- bird -----\tcard_games",
    "458": "SELECT COUNT(DISTINCT artist) FROM cards WHERE borderColor = 'black' AND availability LIKE '%arena%' AND availability LIKE '%mtgo%';\t----- bird -----\tcard_games",
    "459": "SELECT name, convertedManaCost FROM cards WHERE name IN ('Serra Angel', 'Shrine Keeper') ORDER BY convertedManaCost DESC LIMIT 1;\t----- bird -----\tcard_games",
    "460": "SELECT artist FROM cards WHERE flavorName = 'Battra, Dark Destroyer' AND isPromo = TRUE;\t----- bird -----\tcard_games",
    "461": "SELECT name FROM cards WHERE frameVersion = 2003 ORDER BY convertedManaCost DESC LIMIT 3;\t----- bird -----\tcard_games",
    "462": "SELECT st.translation FROM set_translations st JOIN cards c ON st.setCode = c.setCode WHERE c.name = 'Ancestor''s Chosen' AND st.language = 'Italian' LIMIT 1;\t----- bird -----\tcard_games",
    "463": "SELECT COUNT(*) FROM set_translations WHERE setCode IN (SELECT DISTINCT setCode FROM cards WHERE name = 'Angel of Mercy');\t----- bird -----\tcard_games",
    "464": "SELECT cards.name FROM cards JOIN sets ON cards.setCode = sets.code JOIN set_translations ON sets.code = set_translations.setCode WHERE set_translations.translation = 'Hauptset Zehnte Edition';\t----- bird -----\tcard_games",
    "465": "SELECT COUNT(*) > 0 AS has_korean_version FROM foreign_data WHERE name = 'Ancestor''s Chosen' AND language = 'Korean';\t----- bird -----\tcard_games",
    "466": "SELECT COUNT(*) FROM cards WHERE artist = 'Adam Rex' AND setCode = (SELECT code FROM sets WHERE name = 'Hauptset Zehnte Edition');\t----- bird -----\tcard_games",
    "467": "SELECT COUNT(*) FROM cards WHERE setCode = (SELECT code FROM sets WHERE name = 'Hauptset Zehnte Edition' AND baseSetSize IS NOT NULL LIMIT 1);\t----- bird -----\tcard_games",
    "468": "SELECT translation FROM set_translations WHERE language = 'Simplified Chinese' AND setCode = (SELECT code FROM sets WHERE name = 'Eighth Edition');\t----- bird -----\tcard_games",
    "469": "SELECT DISTINCT s.name FROM cards c JOIN sets s ON c.setCode = s.code WHERE c.name = 'Angel of Mercy' AND s.isOnlineOnly = TRUE;\t----- bird -----\tcard_games",
    "470": "SELECT sets.releaseDate FROM sets JOIN cards ON sets.code = cards.setCode WHERE cards.name = 'Ancestor''s Chosen' LIMIT 1;\t----- bird -----\tcard_games",
    "471": "SELECT sets.type FROM sets JOIN set_translations ON sets.code = set_translations.setCode WHERE set_translations.translation = 'Hauptset Zehnte Edition';\t----- bird -----\tcard_games",
    "472": "SELECT COUNT(DISTINCT s.code) FROM sets s JOIN set_translations st ON s.code = st.setCode WHERE s.block = 'Ice Age' AND st.language = 'Italian';\t----- bird -----\tcard_games",
    "473": "SELECT CASE WHEN EXISTS (SELECT 1 FROM cards c JOIN sets s ON c.setCode = s.code WHERE c.name = 'Adarkar Valkyrie' AND (s.isForeignOnly = FALSE OR s.isOnlineOnly = TRUE OR s.isNonFoilOnly = TRUE)) THEN 'No' ELSE 'Yes' END AS only_available_outside_us;\t----- bird -----\tcard_games",
    "474": "SELECT COUNT(DISTINCT s.code) FROM sets s JOIN set_translations st ON s.code = st.setCode WHERE st.language = 'Italian' AND s.baseSetSize < 100;\t----- bird -----\tcard_games",
    "475": "SELECT COUNT(*) FROM cards WHERE setCode = 'CSP' AND borderColor = 'black';\t----- bird -----\tcard_games",
    "476": "SELECT name FROM cards WHERE setCode = 'CSP' AND convertedManaCost = (SELECT MAX(convertedManaCost) FROM cards WHERE setCode = 'CSP');\t----- bird -----\tcard_games",
    "477": "SELECT DISTINCT artist FROM cards WHERE setCode = 'CSP' AND artist IN ('Jeremy Jarvis', 'Aaron Miller', 'Chippy');\t----- bird -----\tcard_games",
    "478": "SELECT * FROM cards WHERE number = '4' AND setCode = 'CSP';\t----- bird -----\tcard_games",
    "479": "SELECT COUNT(*) FROM cards WHERE convertedManaCost > 5 AND setCode = 'CSP' AND (power IS NULL OR power = 'unknown' OR power = '');\t----- bird -----\tcard_games",
    "480": "SELECT flavorText FROM foreign_data WHERE name = 'Ancestor''s Chosen' AND language = 'Italian';\t----- bird -----\tcard_games",
    "481": "SELECT DISTINCT language FROM foreign_data WHERE name = 'Ancestor''s Chosen' AND flavorText IS NOT NULL;\t----- bird -----\tcard_games",
    "482": "SELECT type FROM foreign_data WHERE name = 'Ancestor''s Chosen' AND language = 'German';\t----- bird -----\tcard_games",
    "483": "SELECT r.text FROM rulings r JOIN cards c ON r.uuid = c.uuid WHERE c.setCode = 'CSP' AND r.text IS NOT NULL AND EXISTS (SELECT 1 FROM set_translations st WHERE st.setCode = c.setCode AND st.language = 'Italian') AND r.text LIKE '%italian%' OR r.text IN (SELECT fd.text FROM foreign_data fd WHERE fd.language = 'Italian' AND fd.uuid = r.uuid);\t----- bird -----\tcard_games",
    "484": "SELECT cards.name FROM cards JOIN sets ON cards.setCode = sets.code JOIN set_translations ON sets.code = set_translations.setCode WHERE sets.name = 'Coldsnap' AND set_translations.language = 'Italian' AND cards.convertedManaCost = (SELECT MAX(convertedManaCost) FROM cards WHERE setCode = sets.code);\t----- bird -----\tcard_games",
    "485": "SELECT rulings.date FROM rulings JOIN cards ON rulings.uuid = cards.uuid WHERE cards.name = 'Reminisce';\t----- bird -----\tcard_games",
    "486": "SELECT (COUNT(*) * 100.0 / (SELECT COUNT(*) FROM cards WHERE setCode = 'CSP')) AS percentage FROM cards WHERE setCode = 'CSP' AND convertedManaCost = 7;\t----- bird -----\tcard_games",
    "487": "SELECT 100.0 * SUM(CASE WHEN power::int > 5 THEN 1 ELSE 0 END) / COUNT(*) AS percentage_incredibly_powerful FROM cards WHERE setCode = 'CSP';\t----- bird -----\tcard_games",
    "488": "SELECT code FROM sets WHERE releaseDate = '2017-07-14' LIMIT 1;\t----- bird -----\tcard_games",
    "489": "SELECT keyruneCode FROM sets WHERE code = 'PKHC';\t----- bird -----\tcard_games",
    "490": "SELECT mcmId FROM sets WHERE code = 'SS2';\t----- bird -----\tcard_games",
    "491": "SELECT mcmName FROM sets WHERE releaseDate = '2017-06-09' LIMIT 1;\t----- bird -----\tcard_games",
    "492": "SELECT type FROM sets WHERE name = 'From the Vault: Lore';\t----- bird -----\tcard_games",
    "493": "SELECT parentCode FROM sets WHERE name = 'Commander 2014 Oversized';\t----- bird -----\tcard_games",
    "494": "SELECT c.name, r.text AS ruling_text FROM cards c LEFT JOIN rulings r ON c.uuid = r.uuid WHERE c.artist = 'Jim Pavelec';\t----- bird -----\tcard_games",
    "495": "SELECT s.releaseDate FROM sets s JOIN cards c ON s.code = c.setCode WHERE c.name = 'Evacuation' LIMIT 1;\t----- bird -----\tcard_games",
    "496": "SELECT COUNT(*) FROM cards WHERE setCode = (SELECT code FROM sets JOIN set_translations ON sets.code = set_translations.setCode WHERE set_translations.translation = 'Rinascita di Alara' LIMIT 1);\t----- bird -----\tcard_games",
    "497": "SELECT sets.type FROM sets JOIN set_translations ON sets.code = set_translations.setCode WHERE set_translations.translation = 'Huiti\u00e8me \u00e9dition';\t----- bird -----\tcard_games",
    "498": "SELECT st.translation FROM set_translations st JOIN cards c ON st.setCode = c.setCode WHERE c.name = 'Tendo Ice Bridge' AND st.language = 'French' LIMIT 1;\t----- bird -----\tcard_games",
    "499": "SELECT COUNT(*) FROM set_translations WHERE setCode = (SELECT code FROM sets WHERE name = 'Tenth Edition');\t----- bird -----\tcard_games",
    "500": "SELECT st.translation FROM set_translations st JOIN cards c ON st.setCode = c.setCode WHERE c.name = 'Fellwar Stone' AND st.language = 'Japanese';\t----- bird -----\tcard_games",
    "501": "SELECT c.name FROM cards c JOIN sets s ON c.setCode = s.code WHERE s.name = 'Journey into Nyx Hero''s Path' ORDER BY c.convertedManaCost DESC LIMIT 1;\t----- bird -----\tcard_games",
    "502": "SELECT releaseDate FROM sets JOIN set_translations ON sets.code = set_translations.setCode WHERE set_translations.translation = 'Ola de fr\u00edo';\t----- bird -----\tcard_games",
    "503": "SELECT sets.type FROM sets JOIN cards ON sets.code = cards.setCode WHERE cards.name = 'Samite Pilgrim' LIMIT 1;\t----- bird -----\tcard_games",
    "504": "SELECT COUNT(*) FROM cards WHERE setCode = (SELECT code FROM sets WHERE name = 'World Championship Decks 2004') AND convertedManaCost = 3;\t----- bird -----\tcard_games",
    "505": "SELECT translation FROM set_translations WHERE language = 'Simplified Chinese' AND setCode = (SELECT code FROM sets WHERE name = 'Mirrodin');\t----- bird -----\tcard_games",
    "506": "SELECT ROUND(100.0 * SUM(CASE WHEN hasFoil = 0 AND hasNonFoil = 1 THEN 1 ELSE 0 END) / COUNT(*), 2) AS percentage_non_foil_only FROM cards WHERE setCode IN (SELECT setCode FROM set_translations WHERE language = 'Japanese');\t----- bird -----\tcard_games",
    "507": "SELECT (SUM(CASE WHEN s.isOnlineOnly = 1 THEN 1 ELSE 0 END) * 100.0 / COUNT(*)) AS online_only_percentage FROM sets s JOIN set_translations st ON s.code = st.setCode WHERE st.language = 'Brazil Portuguese';\t----- bird -----\tcard_games",
    "508": "SELECT DISTINCT printings FROM cards WHERE text NOT LIKE '%Aleksi Briclot%' OR text IS NULL;\t----- bird -----\tcard_games",
    "509": "SELECT setCode AS id FROM cards GROUP BY setCode ORDER BY COUNT(*) DESC LIMIT 1;\t----- bird -----\tcard_games",
    "510": "SELECT artist FROM cards WHERE (faceName IS NULL OR faceName = '') AND convertedManaCost = (SELECT MAX(convertedManaCost) FROM cards WHERE faceName IS NULL OR faceName = '') LIMIT 1;\t----- bird -----\tcard_games",
    "511": "SELECT frameEffects, COUNT(*) AS count FROM cards WHERE hasFoil = TRUE AND edhrecRank <= 1000 GROUP BY frameEffects ORDER BY count DESC LIMIT 1;\t----- bird -----\tcard_games",
    "512": "SELECT COUNT(*) FROM cards WHERE power = 'unknown' AND hasFoil = FALSE AND duelDeck = 'A';\t----- bird -----\tcard_games",
    "513": "SELECT s.id FROM sets s JOIN cards c ON s.code = c.setCode WHERE s.type = 'Commander' AND c.isReprint = FALSE GROUP BY s.id ORDER BY COUNT(c.id) DESC LIMIT 1;\t----- bird -----\tcard_games",
    "514": "SELECT name, convertedManaCost FROM cards WHERE duelDeck = TRUE ORDER BY convertedManaCost DESC LIMIT 10;\t----- bird -----\tcard_games",
    "515": "SELECT MIN(c.originalReleaseDate) AS oldest_mythic_release_date, l.format FROM cards c JOIN legalities l ON c.uuid = l.uuid WHERE c.rarity = 'mythic' GROUP BY l.format ORDER BY oldest_mythic_release_date ASC LIMIT 1;\t----- bird -----\tcard_games",
    "516": "SELECT COUNT(DISTINCT c.id) FROM cards c JOIN foreign_data f ON c.uuid = f.uuid WHERE c.artist = 'Volkan Ba\u00c7\u00b5a' AND f.language = 'French';\t----- bird -----\tcard_games",
    "517": "SELECT COUNT(DISTINCT c.id) FROM cards c JOIN legalities l ON c.uuid = l.uuid WHERE c.rarity = 'rare' AND c.type LIKE '%Enchantment%' AND c.name = 'Abundance' GROUP BY c.id HAVING COUNT(CASE WHEN l.status != 'legal' THEN 1 END) = 0;\t----- bird -----\tcard_games",
    "518": "SELECT l.format, c.name FROM legalities l JOIN cards c ON l.uuid = c.uuid WHERE l.status = 'banned' AND l.format = (SELECT format FROM legalities WHERE status = 'banned' GROUP BY format ORDER BY COUNT(*) DESC LIMIT 1) ORDER BY l.format, c.name;\t----- bird -----\tcard_games",
    "519": "SELECT language FROM set_translations WHERE setCode = (SELECT code FROM sets WHERE name = 'Battlebond') LIMIT 1;\t----- bird -----\tcard_games",
    "520": "SELECT l.format FROM legalities l JOIN cards c ON l.uuid = c.uuid WHERE c.artist = (SELECT artist FROM cards GROUP BY artist ORDER BY COUNT(*) ASC LIMIT 1) GROUP BY l.format;\t----- bird -----\tcard_games",
    "521": "SELECT legalities.status FROM cards JOIN legalities ON cards.uuid = legalities.id WHERE cards.frameVersion = 1997 AND cards.artist = 'D. Alexander Gregory' AND legalities.format = 'legacy' AND (cards.hasContentWarning = TRUE OR cards.artist = 'Wizards of the Coast');\t----- bird -----\tcard_games",
    "522": "SELECT c.name, l.format FROM cards c JOIN legalities l ON c.uuid = l.id WHERE c.edhrecRank = 1 AND l.status = 'banned';\t----- bird -----\tcard_games",
    "523": "SELECT AVG(sets_per_year.count) AS annual_average_sets FROM (SELECT EXTRACT(YEAR FROM releaseDate) AS year, COUNT(*) AS count FROM sets WHERE releaseDate BETWEEN '2012-01-01' AND '2015-12-31' GROUP BY year) AS sets_per_year;\t----- bird -----\tcard_games",
    "524": "SELECT DISTINCT artist FROM cards WHERE borderColor = 'black' AND isOnlineOnly = TRUE;\t----- bird -----\tcard_games",
    "525": "SELECT uuid FROM legalities WHERE format = 'old school' AND status IN ('restricted', 'banned');\t----- bird -----\tcard_games",
    "526": "SELECT COUNT(*) FROM cards WHERE artist = 'Matthew D. Wilson' AND availability = 'paper';\t----- bird -----\tcard_games",
    "527": "SELECT r.text, r.date FROM rulings r JOIN cards c ON r.uuid = c.uuid WHERE c.name = 'Kev Walker' AND c.artist = 'Kev Walker' ORDER BY r.date DESC;\t----- bird -----\tcard_games",
    "528": "SELECT c.name, l.format FROM cards c JOIN sets s ON c.setCode = s.code JOIN legalities l ON c.uuid = l.uuid WHERE s.name = 'Hour of Devastation' AND l.status = 'legal';\t----- bird -----\tcard_games",
    "529": "SELECT s.name FROM sets s WHERE s.code IN (SELECT setCode FROM set_translations WHERE language = 'ko') AND s.code NOT IN (SELECT setCode FROM set_translations WHERE language = 'ja');\t----- bird -----\tcard_games",
    "530": "SELECT DISTINCT c.frameVersion, c.name, l.status FROM cards c LEFT JOIN legalities l ON c.uuid = l.id WHERE c.artist = 'Allen Williams' AND (l.status = 'banned' OR l.status IS NULL);\t----- bird -----\tcard_games",
    "531": "SELECT DisplayName, Reputation FROM users WHERE DisplayName IN ('Harlan', 'Jarrod Dixon') ORDER BY Reputation DESC LIMIT 1;\t----- bird -----\tcodebase_community",
    "532": "SELECT DisplayName FROM users WHERE CreationDate >= '2011-01-01' AND CreationDate < '2012-01-01';\t----- bird -----\tcodebase_community",
    "533": "SELECT COUNT(*) FROM users WHERE LastAccessDate > '2014-09-01';\t----- bird -----\tcodebase_community",
    "534": "SELECT DisplayName FROM users ORDER BY Views DESC LIMIT 1;\t----- bird -----\tcodebase_community",
    "535": "SELECT COUNT(*) FROM (SELECT Id FROM users WHERE UpVotes > 100 AND DownVotes > 1) AS subquery;\t----- bird -----\tcodebase_community",
    "536": "SELECT COUNT(*) FROM users WHERE Views > 10 AND CreationDate > '2013-12-31';\t----- bird -----\tcodebase_community",
    "537": "SELECT COUNT(*) FROM posts p JOIN users u ON p.OwnerUserId = u.Id WHERE u.DisplayName = 'csgillespie';\t----- bird -----\tcodebase_community",
    "538": "SELECT posts.Title FROM posts JOIN users ON posts.OwnerUserId = users.Id WHERE users.DisplayName = 'csgillespie';\t----- bird -----\tcodebase_community",
    "539": "SELECT OwnerDisplayName FROM posts WHERE Title = 'Eliciting priors from experts' LIMIT 1;\t----- bird -----\tcodebase_community",
    "540": "SELECT Title FROM posts WHERE OwnerDisplayName = 'csgillespie' ORDER BY Score + ViewCount DESC LIMIT 1;\t----- bird -----\tcodebase_community",
    "541": "SELECT u.DisplayName FROM users u JOIN posts p ON u.Id = p.OwnerUserId ORDER BY p.Score DESC LIMIT 1;\t----- bird -----\tcodebase_community",
    "542": "SELECT COUNT(*) FROM comments WHERE PostId IN (SELECT Id FROM posts WHERE OwnerUserId = (SELECT Id FROM users WHERE DisplayName = 'csgillespie'));\t----- bird -----\tcodebase_community",
    "543": "SELECT MAX(AnswerCount) FROM posts WHERE OwnerUserId = (SELECT Id FROM users WHERE DisplayName = 'csgillespie');\t----- bird -----\tcodebase_community",
    "544": "SELECT LastEditorDisplayName FROM posts WHERE Title = 'Examples for teaching: Correlation does not mean causation' ORDER BY LastEditDate DESC LIMIT 1;\t----- bird -----\tcodebase_community",
    "545": "SELECT COUNT(*) FROM posts WHERE OwnerDisplayName = 'csgillespie' AND ParentId IS NULL;\t----- bird -----\tcodebase_community",
    "546": "SELECT DISTINCT u.DisplayName FROM users u JOIN posts p ON u.Id = p.OwnerUserId WHERE p.ClosedDate IS NOT NULL;\t----- bird -----\tcodebase_community",
    "547": "SELECT COUNT(*) FROM posts p JOIN users u ON p.OwnerUserId = u.Id WHERE u.Age >= 65 AND p.Score > 19;\t----- bird -----\tcodebase_community",
    "548": "SELECT u.Location FROM posts p JOIN users u ON p.OwnerUserId = u.Id WHERE p.Title = 'Eliciting priors from experts' LIMIT 1;\t----- bird -----\tcodebase_community",
    "549": "SELECT posts.Body FROM posts JOIN tags ON posts.Id = tags.ExcerptPostId WHERE tags.TagName = 'bayesian';\t----- bird -----\tcodebase_community",
    "550": "SELECT p.Body FROM posts p JOIN tags t ON p.Id = t.ExcerptPostId ORDER BY t.Count DESC LIMIT 1;\t----- bird -----\tcodebase_community",
    "551": "SELECT COUNT(*) FROM badges WHERE UserId = (SELECT Id FROM users WHERE DisplayName = 'csgillespie');\t----- bird -----\tcodebase_community",
    "552": "SELECT Name FROM badges WHERE UserId = (SELECT Id FROM users WHERE DisplayName = 'csgillespie');\t----- bird -----\tcodebase_community",
    "553": "SELECT COUNT(*) FROM badges WHERE UserId = (SELECT Id FROM users WHERE DisplayName = 'csgillespie') AND YEAR(Date) = 2011;\t----- bird -----\tcodebase_community",
    "554": "SELECT u.DisplayName FROM users u JOIN badges b ON u.Id = b.UserId GROUP BY u.Id, u.DisplayName ORDER BY COUNT(b.Id) DESC LIMIT 1;\t----- bird -----\tcodebase_community",
    "555": "SELECT AVG(Score) FROM posts JOIN users ON posts.OwnerUserId = users.Id WHERE users.DisplayName = 'csgillespie';\t----- bird -----\tcodebase_community",
    "556": "SELECT AVG(badge_count) FROM (SELECT COUNT(*) AS badge_count FROM badges b JOIN users u ON b.UserId = u.Id WHERE u.Views > 200 GROUP BY b.UserId) subquery;\t----- bird -----\tcodebase_community",
    "557": "SELECT 100.0 * SUM(CASE WHEN u.Age >= 60 THEN 1 ELSE 0 END) / COUNT(*) AS ElderUserOwnedPercentage FROM posts p JOIN users u ON p.OwnerUserId = u.Id WHERE p.Score > 5;\t----- bird -----\tcodebase_community",
    "558": "SELECT COUNT(*) FROM votes v JOIN users u ON v.UserId = u.Id WHERE u.DisplayName = 'No.58' AND DATE(v.CreationDate) = '2010-07-19';\t----- bird -----\tcodebase_community",
    "559": "SELECT CreationDate FROM votes GROUP BY CreationDate ORDER BY COUNT(*) DESC LIMIT 1;\t----- bird -----\tcodebase_community",
    "560": "SELECT COUNT(*) FROM badges WHERE Name = 'Revival';\t----- bird -----\tcodebase_community",
    "561": "SELECT p.Title FROM posts p JOIN comments c ON p.Id = c.PostId ORDER BY c.Score DESC LIMIT 1;\t----- bird -----\tcodebase_community",
    "562": "SELECT COUNT(*) FROM comments WHERE PostId = (SELECT Id FROM posts WHERE ViewCount = 1910);\t----- bird -----\tcodebase_community",
    "563": "SELECT p.FavoriteCount FROM posts p JOIN comments c ON p.Id = c.PostId WHERE c.UserId = 3025 AND c.CreationDate = '2014-04-23 20:29:39';\t----- bird -----\tcodebase_community",
    "564": "SELECT c.Text FROM comments c JOIN posts p ON c.PostId = p.Id WHERE p.ParentId = 107829 LIMIT 1;\t----- bird -----\tcodebase_community",
    "565": "SELECT CASE WHEN p.AcceptedAnswerId IS NOT NULL THEN 'Yes' ELSE 'No' END AS WellFinished FROM comments c JOIN posts p ON c.PostId = p.Id WHERE c.UserId = 23853 AND c.CreationDate = '2013-07-12 09:08:18';\t----- bird -----\tcodebase_community",
    "566": "SELECT u.Reputation FROM posts p JOIN users u ON p.OwnerUserId = u.Id WHERE p.Id = 65041;\t----- bird -----\tcodebase_community",
    "567": "SELECT COUNT(*) FROM posts p JOIN users u ON p.OwnerUserId = u.Id WHERE u.DisplayName = 'Tiago Pasqualini';\t----- bird -----\tcodebase_community",
    "568": "SELECT u.DisplayName FROM votes v JOIN users u ON v.UserId = u.Id WHERE v.Id = 6347;\t----- bird -----\tcodebase_community",
    "569": "SELECT COUNT(v.Id) FROM votes v JOIN posts p ON v.PostId = p.Id WHERE p.Title LIKE '%data visualization%' OR p.Body LIKE '%data visualization%';\t----- bird -----\tcodebase_community",
    "570": "SELECT badges.Name FROM badges JOIN users ON badges.UserId = users.Id WHERE users.DisplayName = 'DatEpicCoderGuyWhoPrograms';\t----- bird -----\tcodebase_community",
    "571": "SELECT (SELECT COUNT(*) FROM posts WHERE OwnerUserId = 24) / NULLIF((SELECT COUNT(*) FROM votes WHERE UserId = 24), 0) AS PostToVoteRatio;\t----- bird -----\tcodebase_community",
    "572": "SELECT ViewCount FROM posts WHERE Title = 'Integration of Weka and/or RapidMiner into Informatica PowerCenter/Developer';\t----- bird -----\tcodebase_community",
    "573": "SELECT Text FROM comments WHERE Score = 17;\t----- bird -----\tcodebase_community",
    "574": "SELECT * FROM users WHERE WebsiteUrl = 'http://stackoverflow.com';\t----- bird -----\tcodebase_community",
    "575": "SELECT badges.Name FROM badges JOIN users ON badges.UserId = users.Id WHERE users.DisplayName = 'SilentGhost';\t----- bird -----\tcodebase_community",
    "576": "SELECT UserDisplayName FROM comments WHERE Text = 'thank you user93!' LIMIT 1;\t----- bird -----\tcodebase_community",
    "577": "SELECT * FROM comments WHERE UserDisplayName = 'A Lion.';\t----- bird -----\tcodebase_community",
    "578": "SELECT u.DisplayName, u.Reputation FROM posts p JOIN users u ON p.OwnerUserId = u.Id WHERE p.Title = 'Understanding what Dassault iSight is doing?' LIMIT 1;\t----- bird -----\tcodebase_community",
    "579": "SELECT c.* FROM comments c JOIN posts p ON c.PostId = p.Id WHERE p.Title = 'How does gentle boosting differ from AdaBoost?';\t----- bird -----\tcodebase_community",
    "580": "SELECT DISTINCT u.DisplayName FROM users u JOIN badges b ON u.Id = b.UserId WHERE b.Name = 'Necromancer' LIMIT 10;\t----- bird -----\tcodebase_community",
    "581": "SELECT LastEditorDisplayName FROM posts WHERE Title = 'Open source tools for visualizing multi-dimensional data?' LIMIT 1;\t----- bird -----\tcodebase_community",
    "582": "SELECT DISTINCT p.Title FROM posts p JOIN postHistory ph ON p.Id = ph.PostId WHERE ph.UserDisplayName = 'Vebjorn Ljosa' AND ph.PostHistoryTypeId IN (4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50);\t----- bird -----\tcodebase_community",
    "583": "SELECT u.WebsiteUrl, SUM(p.Score) AS TotalScore FROM posts p JOIN postHistory ph ON p.Id = ph.PostId JOIN users u ON ph.UserId = u.Id WHERE u.DisplayName = 'Yevgeny' GROUP BY u.WebsiteUrl;\t----- bird -----\tcodebase_community",
    "584": "SELECT c.* FROM comments c JOIN postHistory ph ON c.UserId = ph.UserId JOIN posts p ON ph.PostId = p.Id WHERE p.Title = 'Why square the difference instead of taking the absolute value in standard deviation?' AND ph.PostHistoryTypeId IN (4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50);\t----- bird -----\tcodebase_community",
    "585": "SELECT SUM(v.BountyAmount) FROM posts p JOIN votes v ON p.Id = v.PostId WHERE p.Title LIKE '%data%' AND v.VoteTypeId = 8;\t----- bird -----\tcodebase_community",
    "586": "SELECT u.DisplayName FROM users u JOIN votes v ON u.Id = v.UserId JOIN posts p ON v.PostId = p.Id WHERE v.BountyAmount = 50 AND p.Title LIKE '%variance%' AND v.VoteTypeId = 8;\t----- bird -----\tcodebase_community",
    "587": "SELECT p.Title, c.Text, AVG(p.ViewCount) OVER () AS AverageViewCount FROM posts p JOIN comments c ON p.Id = c.PostId WHERE p.Tags LIKE '%<humor>%';\t----- bird -----\tcodebase_community",
    "588": "SELECT COUNT(*) FROM comments WHERE UserId = 13;\t----- bird -----\tcodebase_community",
    "589": "SELECT Id FROM users ORDER BY Reputation DESC LIMIT 1;\t----- bird -----\tcodebase_community",
    "590": "SELECT Id FROM users ORDER BY Views ASC LIMIT 1;\t----- bird -----\tcodebase_community",
    "591": "SELECT COUNT(DISTINCT UserId) FROM badges WHERE Name = 'supporter' AND Date >= '2011-01-01' AND Date < '2012-01-01';\t----- bird -----\tcodebase_community",
    "592": "SELECT COUNT(*) FROM (SELECT UserId FROM badges GROUP BY UserId HAVING COUNT(*) > 5) AS subquery;\t----- bird -----\tcodebase_community",
    "593": "SELECT COUNT(DISTINCT u.Id) FROM users u JOIN badges b1 ON u.Id = b1.UserId AND b1.Name = 'teacher' JOIN badges b2 ON u.Id = b2.UserId AND b2.Name = 'supporter' WHERE u.Location LIKE '%New York%';\t----- bird -----\tcodebase_community",
    "594": "SELECT u.DisplayName, u.Reputation FROM posts p JOIN users u ON p.OwnerUserId = u.Id WHERE p.Id = 1;\t----- bird -----\tcodebase_community",
    "595": "SELECT u.Id, u.DisplayName FROM users u JOIN posts p ON u.Id = p.OwnerUserId WHERE p.ViewCount >= 1000 AND NOT EXISTS (SELECT 1 FROM postHistory ph WHERE ph.UserId = u.Id GROUP BY ph.PostId HAVING COUNT(*) > 1) GROUP BY u.Id, u.DisplayName;\t----- bird -----\tcodebase_community",
    "596": "SELECT u.Id, u.DisplayName, b.Name AS BadgeName, COUNT(c.Id) AS CommentCount FROM users u LEFT JOIN comments c ON u.Id = c.UserId LEFT JOIN badges b ON u.Id = b.UserId GROUP BY u.Id, u.DisplayName, b.Name ORDER BY CommentCount DESC;\t----- bird -----\tcodebase_community",
    "597": "SELECT COUNT(DISTINCT u.Id) FROM users u JOIN badges b ON u.Id = b.UserId WHERE u.Location LIKE '%India%' AND b.Name = 'Teacher';\t----- bird -----\tcodebase_community",
    "598": "SELECT CASE WHEN b2010.count = 0 THEN NULL ELSE ((b2011.count - b2010.count) * 100.0 / b2010.count) END AS percentage_difference FROM (SELECT COUNT(*) AS count FROM badges WHERE Name = 'student' AND YEAR(Date) = 2010) b2010, (SELECT COUNT(*) AS count FROM badges WHERE Name = 'student' AND YEAR(Date) = 2011) b2011;\t----- bird -----\tcodebase_community",
    "599": "SELECT ph.PostHistoryTypeId, (SELECT COUNT(DISTINCT UserId) FROM comments WHERE PostId = 3720) AS UniqueUserComments FROM postHistory ph WHERE ph.PostId = 3720;\t----- bird -----\tcodebase_community",
    "600": "SELECT pl.RelatedPostId AS RelatedPost, p.Score + p.ViewCount AS Popularity FROM postLinks pl JOIN posts p ON pl.PostId = p.Id WHERE pl.PostId = 61217;\t----- bird -----\tcodebase_community",
    "601": "SELECT p.Score, pl.LinkTypeId FROM posts p LEFT JOIN postLinks pl ON p.Id = pl.PostId WHERE p.Id = 395;\t----- bird -----\tcodebase_community",
    "602": "SELECT Id AS PostID, OwnerUserId AS UserID FROM posts WHERE Score > 60;\t----- bird -----\tcodebase_community",
    "603": "SELECT SUM(FavoriteCount) FROM posts WHERE OwnerUserId = 686 AND YEAR(CreaionDate) = 2011;\t----- bird -----\tcodebase_community",
    "604": "SELECT AVG(u.UpVotes) AS AvgUpVotes, AVG(u.Age) AS AvgAge FROM users u JOIN (SELECT OwnerUserId, COUNT(*) AS PostCount FROM posts WHERE OwnerUserId IS NOT NULL GROUP BY OwnerUserId HAVING COUNT(*) > 10) p ON u.Id = p.OwnerUserId;\t----- bird -----\tcodebase_community",
    "605": "SELECT COUNT(DISTINCT UserId) FROM badges WHERE Name = 'Announcer';\t----- bird -----\tcodebase_community",
    "606": "SELECT Name FROM badges WHERE Date = '2010-07-19 19:39:08';\t----- bird -----\tcodebase_community",
    "607": "SELECT COUNT(*) FROM comments WHERE Score > 0;\t----- bird -----\tcodebase_community",
    "608": "SELECT Text FROM comments WHERE CreationDate = '2010-07-19 19:25:47' OR CreationDate = '2010-07-19 19:25:47.000' OR CreationDate = '2010-07-19 19:25:47 PM';\t----- bird -----\tcodebase_community",
    "609": "SELECT COUNT(*) FROM posts WHERE Score = 10;\t----- bird -----\tcodebase_community",
    "610": "SELECT DISTINCT b.Name FROM badges b JOIN users u ON b.UserId = u.Id WHERE u.Reputation = (SELECT MAX(Reputation) FROM users);\t----- bird -----\tcodebase_community",
    "611": "SELECT u.Reputation FROM users u JOIN badges b ON u.Id = b.UserId WHERE b.Date = '2010-07-19 19:39:08';\t----- bird -----\tcodebase_community",
    "612": "SELECT badges.Name FROM badges JOIN users ON badges.UserId = users.Id WHERE users.DisplayName = 'Pierre';\t----- bird -----\tcodebase_community",
    "613": "SELECT DISTINCT badges.Date FROM badges JOIN users ON badges.UserId = users.Id WHERE users.Location = 'Rochester, NY';\t----- bird -----\tcodebase_community",
    "614": "SELECT 100.0 * COUNT(DISTINCT UserId) / (SELECT COUNT(*) FROM users) AS Percentage FROM badges WHERE Name = 'Teacher';\t----- bird -----\tcodebase_community",
    "615": "SELECT 100.0 * SUM(CASE WHEN Age BETWEEN 13 AND 19 THEN 1 ELSE 0 END) / COUNT(*) AS TeenagerPercentage FROM users WHERE Id IN (SELECT DISTINCT UserId FROM badges WHERE Name = 'Organizer');\t----- bird -----\tcodebase_community",
    "616": "SELECT c.Score FROM comments c JOIN posts p ON c.PostId = p.Id WHERE p.CreaionDate = '2010-07-19 19:19:56';\t----- bird -----\tcodebase_community",
    "617": "SELECT c.* FROM comments c JOIN posts p ON c.PostId = p.Id WHERE p.CreaionDate = '2010-07-19 19:37:33';\t----- bird -----\tcodebase_community",
    "618": "SELECT DISTINCT u.Age FROM users u JOIN badges b ON u.Id = b.UserId WHERE u.Location LIKE '%Vienna, Austria%' AND u.Age IS NOT NULL;\t----- bird -----\tcodebase_community",
    "619": "SELECT COUNT(DISTINCT u.Id) FROM users u JOIN badges b ON u.Id = b.UserId WHERE b.Name = 'Supporter' AND u.Age >= 18;\t----- bird -----\tcodebase_community",
    "620": "SELECT SUM(u.Views) FROM users u JOIN badges b ON u.Id = b.UserId WHERE b.Date = '2010-07-19 19:39:08';\t----- bird -----\tcodebase_community",
    "621": "SELECT DISTINCT b.Name FROM badges b JOIN users u ON b.UserId = u.Id WHERE u.Reputation = (SELECT MIN(Reputation) FROM users);\t----- bird -----\tcodebase_community",
    "622": "SELECT b.Name FROM badges b JOIN users u ON b.UserId = u.Id WHERE u.DisplayName = 'Sharpie';\t----- bird -----\tcodebase_community",
    "623": "SELECT COUNT(DISTINCT b.UserId) FROM badges b JOIN users u ON b.UserId = u.Id WHERE b.Name = 'Supporter' AND u.Age >= 60;\t----- bird -----\tcodebase_community",
    "624": "SELECT DisplayName FROM users WHERE Id = 30;\t----- bird -----\tcodebase_community",
    "625": "SELECT COUNT(*) FROM users WHERE Location LIKE '%New York%';\t----- bird -----\tcodebase_community",
    "626": "SELECT COUNT(*) FROM votes WHERE YEAR(CreationDate) = 2010;\t----- bird -----\tcodebase_community",
    "627": "SELECT COUNT(*) FROM users WHERE Age >= 18;\t----- bird -----\tcodebase_community",
    "628": "SELECT DisplayName, Views FROM users ORDER BY Views DESC LIMIT 10;\t----- bird -----\tcodebase_community",
    "629": "SELECT (SELECT COUNT(*) FROM votes WHERE YEAR(CreationDate) = 2010) * 1.0 / NULLIF((SELECT COUNT(*) FROM votes WHERE YEAR(CreationDate) = 2011), 0) AS vote_ratio_2010_to_2011;\t----- bird -----\tcodebase_community",
    "630": "SELECT DISTINCT t.TagName FROM tags t JOIN posts p ON p.Tags LIKE CONCAT('%<', t.TagName, '>%') JOIN users u ON u.Id = p.OwnerUserId WHERE u.DisplayName = 'John Salvatier';\t----- bird -----\tcodebase_community",
    "631": "SELECT COUNT(*) FROM posts p JOIN users u ON p.OwnerUserId = u.Id WHERE u.DisplayName = 'Daniel Vassallo';\t----- bird -----\tcodebase_community",
    "632": "SELECT COUNT(*) FROM votes v JOIN users u ON v.UserId = u.Id WHERE u.DisplayName = 'Harlan';\t----- bird -----\tcodebase_community",
    "633": "SELECT Id FROM posts WHERE OwnerUserId = (SELECT Id FROM users WHERE DisplayName = 'slashnick') ORDER BY AnswerCount DESC LIMIT 1;\t----- bird -----\tcodebase_community",
    "634": "SELECT u.DisplayName, SUM(p.Score + p.ViewCount) AS Popularity FROM posts p JOIN users u ON p.OwnerUserId = u.Id WHERE u.DisplayName IN ('Harvey Motulsky', 'Noah Snyder') GROUP BY u.DisplayName ORDER BY Popularity DESC LIMIT 1;\t----- bird -----\tcodebase_community",
    "635": "SELECT COUNT(DISTINCT p.Id) FROM posts p JOIN users u ON p.OwnerUserId = u.Id JOIN votes v ON p.Id = v.PostId WHERE u.DisplayName = 'Matt Parker' GROUP BY p.Id HAVING COUNT(v.Id) > 4;\t----- bird -----\tcodebase_community",
    "636": "SELECT COUNT(*) FROM comments c JOIN posts p ON c.PostId = p.Id JOIN users u ON p.OwnerUserId = u.Id WHERE u.DisplayName = 'Neil McGuigan' AND c.Score < 0;\t----- bird -----\tcodebase_community",
    "637": "SELECT DISTINCT t.TagName FROM posts p JOIN tags t ON p.Tags LIKE CONCAT('%<', t.TagName, '>%') JOIN users u ON p.OwnerUserId = u.Id WHERE u.DisplayName = 'Mark Meckes' AND NOT EXISTS (SELECT 1 FROM comments c WHERE c.PostId = p.Id);\t----- bird -----\tcodebase_community",
    "638": "SELECT DISTINCT u.DisplayName FROM users u JOIN badges b ON u.Id = b.UserId WHERE b.Name = 'Organizer';\t----- bird -----\tcodebase_community",
    "639": "SELECT 100.0 * SUM(CASE WHEN Tags LIKE '%<r>%' THEN 1 ELSE 0 END) / COUNT(*) AS Percentage_R_Language_Posts FROM posts WHERE OwnerUserId IS NULL;\t----- bird -----\tcodebase_community",
    "640": "SELECT (SELECT COALESCE(SUM(ViewCount),0) FROM posts p JOIN users u ON p.OwnerUserId = u.Id WHERE u.DisplayName = 'Mornington') - (SELECT COALESCE(SUM(ViewCount),0) FROM posts p JOIN users u ON p.OwnerUserId = u.Id WHERE u.DisplayName = 'Amos') AS ViewCountDifference;\t----- bird -----\tcodebase_community",
    "641": "SELECT COUNT(DISTINCT UserId) FROM badges WHERE Name = 'Commentator' AND Date >= '2014-01-01' AND Date < '2015-01-01';\t----- bird -----\tcodebase_community",
    "642": "SELECT COUNT(*) FROM posts WHERE DATE(CreaionDate) = '2010-07-21';\t----- bird -----\tcodebase_community",
    "643": "SELECT DisplayName, Age FROM users WHERE Views = (SELECT MAX(Views) FROM users);\t----- bird -----\tcodebase_community",
    "644": "SELECT LastEditDate, LastEditorUserId FROM posts WHERE Title = 'Detecting a given face in a database of facial images';\t----- bird -----\tcodebase_community",
    "645": "SELECT COUNT(*) FROM comments WHERE UserId = 13 AND Score < 0;\t----- bird -----\tcodebase_community",
    "646": "SELECT p.Title, c.UserDisplayName FROM posts p JOIN comments c ON p.Id = c.PostId WHERE c.Score > 0;\t----- bird -----\tcodebase_community",
    "647": "SELECT b.Name FROM badges b JOIN users u ON b.UserId = u.Id WHERE u.Location LIKE '%North Pole%' AND YEAR(b.Date) = 2011;\t----- bird -----\tcodebase_community",
    "648": "SELECT u.DisplayName, u.WebsiteUrl FROM posts p JOIN users u ON p.OwnerUserId = u.Id WHERE p.FavoriteCount > 150;\t----- bird -----\tcodebase_community",
    "649": "SELECT ph.PostId, COUNT(*) AS HistoryCount, MAX(ph.CreationDate) AS LastEditDate FROM postHistory ph JOIN posts p ON ph.PostId = p.Id WHERE p.Title = 'What is the best introductory Bayesian statistics textbook?' GROUP BY ph.PostId;\t----- bird -----\tcodebase_community",
    "650": "SELECT u.LastAccessDate, u.Location FROM users u JOIN badges b ON u.Id = b.UserId WHERE b.Name = 'outliers';\t----- bird -----\tcodebase_community",
    "651": "SELECT p2.Title FROM posts p1 JOIN postLinks pl ON p1.Id = pl.PostId JOIN posts p2 ON pl.RelatedPostId = p2.Id WHERE p1.Title = 'How to tell if something happened in a data set which monitors a value over time';\t----- bird -----\tcodebase_community",
    "652": "SELECT p.Id, b.Name FROM posts p JOIN badges b ON p.OwnerUserId = b.UserId JOIN users u ON u.Id = p.OwnerUserId WHERE u.DisplayName = 'Samuel' AND YEAR(b.Date) = 2013;\t----- bird -----\tcodebase_community",
    "653": "SELECT OwnerDisplayName FROM posts ORDER BY Score DESC LIMIT 1;\t----- bird -----\tcodebase_community",
    "654": "SELECT u.DisplayName, u.Location FROM users u JOIN posts p ON u.Id = p.OwnerUserId JOIN tags t ON p.Id = t.ExcerptPostId WHERE t.TagName = 'hypothesis-testing' LIMIT 1;\t----- bird -----\tcodebase_community",
    "655": "SELECT p2.Title, pl.LinkTypeId FROM posts p1 JOIN postLinks pl ON p1.Id = pl.PostId JOIN posts p2 ON pl.RelatedPostId = p2.Id WHERE p1.Title = 'What are principal component scores?';\t----- bird -----\tcodebase_community",
    "656": "SELECT p2.OwnerDisplayName FROM posts p1 JOIN posts p2 ON p1.ParentId = p2.Id ORDER BY p1.Score DESC LIMIT 1;\t----- bird -----\tcodebase_community",
    "657": "SELECT u.DisplayName, u.WebsiteUrl FROM users u JOIN votes v ON u.Id = v.UserId WHERE v.VoteTypeId = 8 AND v.BountyAmount = (SELECT MAX(BountyAmount) FROM votes WHERE VoteTypeId = 8) LIMIT 1;\t----- bird -----\tcodebase_community",
    "658": "SELECT Title FROM posts ORDER BY Score DESC LIMIT 5;\t----- bird -----\tcodebase_community",
    "659": "SELECT COUNT(*) FROM tags WHERE Count BETWEEN 5000 AND 7000;\t----- bird -----\tcodebase_community",
    "660": "SELECT OwnerUserId FROM posts ORDER BY Score DESC LIMIT 1;\t----- bird -----\tcodebase_community",
    "661": "SELECT Age FROM users ORDER BY Reputation DESC LIMIT 1;\t----- bird -----\tcodebase_community",
    "662": "SELECT COUNT(DISTINCT p.Id) FROM posts p JOIN votes v ON p.Id = v.PostId WHERE YEAR(p.CreaionDate) = 2011 AND v.BountyAmount = 50;\t----- bird -----\tcodebase_community",
    "663": "SELECT Id FROM users ORDER BY Age ASC LIMIT 1;\t----- bird -----\tcodebase_community",
    "664": "SELECT SUM(Score) FROM posts WHERE CAST(CreaionDate AS DATE) = '2010-07-19';\t----- bird -----\tcodebase_community",
    "665": "SELECT AVG(monthly_count) FROM (SELECT DATE_FORMAT(pl.CreationDate, '%Y-%m') AS month, COUNT(*) AS monthly_count FROM postLinks pl JOIN posts p ON pl.PostId = p.Id WHERE YEAR(pl.CreationDate) = 2010 AND p.AnswerCount <= 2 GROUP BY month) AS monthly_counts;\t----- bird -----\tcodebase_community",
    "666": "SELECT PostId FROM votes WHERE UserId = 1465 ORDER BY BountyAmount DESC LIMIT 1;\t----- bird -----\tcodebase_community",
    "667": "SELECT p.Title FROM posts p JOIN postLinks pl ON p.Id = pl.PostId ORDER BY pl.CreationDate ASC LIMIT 1;\t----- bird -----\tcodebase_community",
    "668": "SELECT DisplayName FROM users WHERE Id = (SELECT UserId FROM badges GROUP BY UserId ORDER BY COUNT(*) DESC LIMIT 1);\t----- bird -----\tcodebase_community",
    "669": "SELECT MIN(v.CreationDate) FROM votes v JOIN users u ON v.UserId = u.Id WHERE u.DisplayName = 'chl';\t----- bird -----\tcodebase_community",
    "670": "SELECT MIN(p.CreaionDate) FROM posts p JOIN users u ON p.OwnerUserId = u.Id WHERE u.Age = (SELECT MIN(Age) FROM users WHERE Age IS NOT NULL);\t----- bird -----\tcodebase_community",
    "671": "SELECT u.DisplayName FROM badges b JOIN users u ON b.UserId = u.Id WHERE b.Name = 'Autobiographer' ORDER BY b.Date ASC LIMIT 1;\t----- bird -----\tcodebase_community",
    "672": "SELECT COUNT(DISTINCT u.Id) FROM users u JOIN posts p ON u.Id = p.OwnerUserId WHERE u.Location LIKE '%United Kingdom%' GROUP BY u.Id HAVING SUM(p.FavoriteCount) >= 4;\t----- bird -----\tcodebase_community",
    "673": "SELECT AVG(post_count) FROM (SELECT COUNT(DISTINCT votes.PostId) AS post_count FROM users JOIN votes ON users.Id = votes.UserId WHERE users.CreationDate = (SELECT MIN(CreationDate) FROM users) GROUP BY users.Id) AS subquery;\t----- bird -----\tcodebase_community",
    "674": "SELECT DisplayName FROM users ORDER BY Reputation DESC LIMIT 1;\t----- bird -----\tcodebase_community",
    "675": "SELECT COUNT(*) FROM users WHERE Reputation > 2000 AND Views > 1000;\t----- bird -----\tcodebase_community",
    "676": "SELECT DisplayName FROM users WHERE Age >= 18;\t----- bird -----\tcodebase_community",
    "677": "SELECT COUNT(*) FROM posts p JOIN users u ON p.OwnerUserId = u.Id WHERE u.DisplayName = 'Jay Stevens' AND p.CreaionDate >= '2010-01-01' AND p.CreaionDate < '2011-01-01';\t----- bird -----\tcodebase_community",
    "678": "SELECT Id, Title FROM posts WHERE OwnerUserId = (SELECT Id FROM users WHERE DisplayName = 'Harvey Motulsky') ORDER BY ViewCount DESC LIMIT 1;\t----- bird -----\tcodebase_community",
    "679": "SELECT Id, Title FROM posts ORDER BY Score DESC LIMIT 1;\t----- bird -----\tcodebase_community",
    "680": "SELECT AVG(p.Score) FROM posts p JOIN users u ON p.OwnerUserId = u.Id WHERE u.DisplayName = 'Stephen Turner';\t----- bird -----\tcodebase_community",
    "681": "SELECT DISTINCT u.DisplayName FROM users u JOIN posts p ON u.Id = p.OwnerUserId WHERE p.ViewCount > 20000 AND YEAR(p.CreaionDate) = 2011;\t----- bird -----\tcodebase_community",
    "682": "SELECT p.Id, u.DisplayName FROM posts p JOIN users u ON p.OwnerUserId = u.Id WHERE YEAR(p.CreaionDate) = 2010 ORDER BY p.Score DESC LIMIT 1;\t----- bird -----\tcodebase_community",
    "683": "SELECT 100.0 * SUM(CASE WHEN u.Reputation > 1000 THEN 1 ELSE 0 END) / COUNT(*) AS Percentage FROM posts p JOIN users u ON p.OwnerUserId = u.Id WHERE YEAR(p.CreaionDate) = 2011;\t----- bird -----\tcodebase_community",
    "684": "SELECT 100.0 * COUNT(*) FILTER (WHERE Age BETWEEN 13 AND 19) / COUNT(*) AS PercentageOfTeenageUsers FROM users WHERE Age IS NOT NULL;\t----- bird -----\tcodebase_community",
    "685": "SELECT p.ViewCount, u.DisplayName FROM posts p JOIN users u ON p.LastEditorUserId = u.Id WHERE p.Title = 'Computer Game Datasets' ORDER BY p.LastEditDate DESC LIMIT 1;\t----- bird -----\tcodebase_community",
    "686": "SELECT COUNT(*) FROM posts WHERE ViewCount > (SELECT AVG(ViewCount) FROM posts);\t----- bird -----\tcodebase_community",
    "687": "SELECT COUNT(*) FROM comments WHERE PostId = (SELECT Id FROM posts ORDER BY Score DESC LIMIT 1);\t----- bird -----\tcodebase_community",
    "688": "SELECT COUNT(*) FROM posts p WHERE p.ViewCount > 35000 AND NOT EXISTS (SELECT 1 FROM comments c WHERE c.PostId = p.Id AND c.UserId IS NOT NULL AND c.UserId <> p.OwnerUserId);\t----- bird -----\tcodebase_community",
    "689": "SELECT u.DisplayName, u.Location FROM posts p JOIN users u ON p.LastEditorUserId = u.Id WHERE p.Id = 183;\t----- bird -----\tcodebase_community",
    "690": "SELECT b.* FROM badges b JOIN users u ON b.UserId = u.Id WHERE u.DisplayName = 'Emmett' ORDER BY b.Date DESC LIMIT 1;\t----- bird -----\tcodebase_community",
    "691": "SELECT COUNT(DISTINCT u.Id) FROM users u JOIN votes v ON u.Id = v.UserId WHERE u.Age >= 18 AND v.VoteTypeId = 2 GROUP BY u.Id HAVING COUNT(v.Id) > 5000;\t----- bird -----\tcodebase_community",
    "692": "SELECT DATEDIFF(day, u.CreationDate, b.Date) AS DaysToBadge FROM users u JOIN badges b ON u.Id = b.UserId WHERE u.DisplayName = 'Zolomon' ORDER BY b.Date ASC LIMIT 1;\t----- bird -----\tcodebase_community",
    "693": "SELECT (SELECT COUNT(*) FROM posts WHERE OwnerUserId = u.Id) AS PostCount, (SELECT COUNT(*) FROM comments WHERE UserId = u.Id) AS CommentCount FROM users u ORDER BY u.CreationDate DESC LIMIT 1;\t----- bird -----\tcodebase_community",
    "694": "SELECT c.Text, c.UserDisplayName FROM comments c JOIN posts p ON c.PostId = p.Id WHERE p.Title = 'Analysing wind data with R' ORDER BY c.CreationDate DESC LIMIT 10;\t----- bird -----\tcodebase_community",
    "695": "SELECT COUNT(DISTINCT UserId) FROM badges WHERE Name = 'Citizen Patrol';\t----- bird -----\tcodebase_community",
    "696": "SELECT COUNT(*) FROM posts WHERE Tags LIKE '%<careers>%';\t----- bird -----\tcodebase_community",
    "697": "SELECT Reputation, Views FROM users WHERE DisplayName = 'Jarrod Dixon';\t----- bird -----\tcodebase_community",
    "698": "SELECT (SELECT COUNT(*) FROM comments WHERE UserId IN (SELECT OwnerUserId FROM posts WHERE Title = 'Clustering 1D data')) AS CommentCount, (SELECT COUNT(*) FROM posts WHERE PostTypeId = 2 AND OwnerUserId IN (SELECT OwnerUserId FROM posts WHERE Title = 'Clustering 1D data')) AS AnswerCount;\t----- bird -----\tcodebase_community",
    "699": "SELECT CreationDate FROM users WHERE DisplayName = 'IrishStat';\t----- bird -----\tcodebase_community",
    "700": "SELECT COUNT(DISTINCT PostId) FROM votes WHERE BountyAmount > 30;\t----- bird -----\tcodebase_community",
    "701": "SELECT 100.0 * SUM(CASE WHEN Score > 50 THEN 1 ELSE 0 END) / COUNT(*) AS PercentageAbove50 FROM posts WHERE OwnerUserId = (SELECT Id FROM users ORDER BY Reputation DESC LIMIT 1);\t----- bird -----\tcodebase_community",
    "702": "SELECT COUNT(*) FROM posts WHERE Score < 20;\t----- bird -----\tcodebase_community",
    "703": "SELECT COUNT(*) FROM tags WHERE Id < 15 AND Count <= 20;\t----- bird -----\tcodebase_community",
    "704": "SELECT ExcerptPostId, WikiPostId FROM tags WHERE TagName = 'sample';\t----- bird -----\tcodebase_community",
    "705": "SELECT u.Reputation, u.UpVotes FROM users u JOIN comments c ON u.Id = c.UserId WHERE c.Text = 'fine, you win :)' LIMIT 1;\t----- bird -----\tcodebase_community",
    "706": "SELECT c.Text FROM comments c JOIN posts p ON c.PostId = p.Id WHERE p.Title LIKE '%linear regression%' OR p.Body LIKE '%linear regression%';\t----- bird -----\tcodebase_community",
    "707": "SELECT c.* FROM comments c JOIN posts p ON c.PostId = p.Id WHERE p.ViewCount BETWEEN 100 AND 150 ORDER BY c.Score DESC LIMIT 1;\t----- bird -----\tcodebase_community",
    "708": "SELECT c.CreationDate, u.Age FROM comments c JOIN users u ON c.UserId = u.Id WHERE c.Text LIKE '%webiste%';\t----- bird -----\tcodebase_community",
    "709": "SELECT COUNT(DISTINCT c.PostId) FROM comments c JOIN posts p ON c.PostId = p.Id WHERE c.Score = 0 AND p.ViewCount < 5;\t----- bird -----\tcodebase_community",
    "710": "SELECT COUNT(*) FROM comments WHERE Score = 0 AND PostId IN (SELECT PostId FROM comments GROUP BY PostId HAVING COUNT(*) = 1);\t----- bird -----\tcodebase_community",
    "711": "SELECT COUNT(DISTINCT c.UserId) FROM comments c JOIN posts p ON c.PostId = p.Id JOIN users u ON c.UserId = u.Id WHERE c.Score = 0 AND p.Tags LIKE '%<product>%' AND u.Age = 40;\t----- bird -----\tcodebase_community",
    "712": "SELECT p.Id AS PostId, c.Text AS Comment FROM posts p JOIN comments c ON p.Id = c.PostId WHERE p.Title = 'Group differences on a five point Likert item';\t----- bird -----\tcodebase_community",
    "713": "SELECT u.UpVotes FROM users u JOIN comments c ON u.Id = c.UserId WHERE c.Text = 'R is also lazy evaluated.' LIMIT 1;\t----- bird -----\tcodebase_community",
    "714": "SELECT * FROM comments WHERE UserDisplayName = 'Harvey Motulsky';\t----- bird -----\tcodebase_community",
    "715": "SELECT DISTINCT c.UserDisplayName FROM comments c JOIN users u ON c.UserId = u.Id WHERE c.Score BETWEEN 1 AND 5 AND u.DownVotes = 0;\t----- bird -----\tcodebase_community",
    "716": "SELECT 100.0 * SUM(CASE WHEN u.UpVotes = 0 THEN 1 ELSE 0 END) / COUNT(*) AS PercentageZeroUpVotes FROM comments c JOIN users u ON c.UserId = u.Id WHERE c.Score BETWEEN 5 AND 10;\t----- bird -----\tcodebase_community",
    "717": "SELECT sp.power_name FROM superpower sp JOIN hero_power hp ON sp.id = hp.power_id JOIN superhero sh ON hp.hero_id = sh.id WHERE sh.superhero_name = '3-D Man';\t----- bird -----\tsuperhero",
    "718": "SELECT COUNT(DISTINCT superhero.id) FROM superhero JOIN hero_power ON superhero.id = hero_power.hero_id JOIN superpower ON hero_power.power_id = superpower.id WHERE superpower.power_name = 'Super Strength';\t----- bird -----\tsuperhero",
    "719": "SELECT COUNT(DISTINCT s.id) FROM superhero s JOIN hero_power hp ON s.id = hp.hero_id JOIN superpower sp ON hp.power_id = sp.id WHERE sp.power_name = 'Super Strength' AND s.height_cm > 200;\t----- bird -----\tsuperhero",
    "720": "SELECT superhero.full_name FROM superhero JOIN hero_power ON superhero.id = hero_power.hero_id GROUP BY superhero.id, superhero.full_name HAVING COUNT(hero_power.power_id) > 15;\t----- bird -----\tsuperhero",
    "721": "SELECT COUNT(*) FROM superhero s JOIN colour c ON s.eye_colour_id = c.id WHERE c.colour = 'blue';\t----- bird -----\tsuperhero",
    "722": "SELECT c.colour FROM superhero s JOIN colour c ON s.skin_colour_id = c.id WHERE s.superhero_name = 'Apocalypse';\t----- bird -----\tsuperhero",
    "723": "SELECT COUNT(DISTINCT s.id) FROM superhero s JOIN colour c ON s.eye_colour_id = c.id JOIN hero_power hp ON s.id = hp.hero_id JOIN superpower sp ON hp.power_id = sp.id WHERE c.colour = 'Blue' AND sp.power_name = 'Agility';\t----- bird -----\tsuperhero",
    "724": "SELECT s.superhero_name FROM superhero s JOIN colour c1 ON s.eye_colour_id = c1.id JOIN colour c2 ON s.hair_colour_id = c2.id WHERE c1.colour = 'blue' AND c2.colour = 'blond';\t----- bird -----\tsuperhero",
    "725": "SELECT COUNT(*) FROM superhero s JOIN publisher p ON s.publisher_id = p.id WHERE p.publisher_name = 'Marvel Comics';\t----- bird -----\tsuperhero",
    "726": "SELECT superhero.superhero_name, superhero.height_cm FROM superhero JOIN publisher ON superhero.publisher_id = publisher.id WHERE publisher.publisher_name = 'Marvel Comics' ORDER BY superhero.height_cm DESC;\t----- bird -----\tsuperhero",
    "727": "SELECT publisher.publisher_name FROM superhero JOIN publisher ON superhero.publisher_id = publisher.id WHERE superhero.superhero_name = 'Sauron';\t----- bird -----\tsuperhero",
    "728": "SELECT c.colour, COUNT(*) AS popularity FROM superhero s JOIN publisher p ON s.publisher_id = p.id JOIN colour c ON s.eye_colour_id = c.id WHERE p.publisher_name = 'Marvel Comics' GROUP BY c.colour ORDER BY popularity DESC;\t----- bird -----\tsuperhero",
    "729": "SELECT AVG(height_cm) FROM superhero JOIN publisher ON superhero.publisher_id = publisher.id WHERE publisher.publisher_name = 'Marvel Comics';\t----- bird -----\tsuperhero",
    "730": "SELECT s.superhero_name FROM superhero s JOIN publisher p ON s.publisher_id = p.id JOIN hero_power hp ON s.id = hp.hero_id JOIN superpower sp ON hp.power_id = sp.id WHERE p.publisher_name = 'Marvel Comics' AND sp.power_name = 'Super Strength';\t----- bird -----\tsuperhero",
    "731": "SELECT COUNT(*) FROM superhero s JOIN publisher p ON s.publisher_id = p.id WHERE p.publisher_name = 'DC Comics';\t----- bird -----\tsuperhero",
    "732": "SELECT p.publisher_name FROM publisher p JOIN superhero s ON p.id = s.publisher_id JOIN hero_attribute ha ON s.id = ha.hero_id JOIN attribute a ON ha.attribute_id = a.id WHERE a.attribute_name = 'speed' ORDER BY CAST(ha.attribute_value AS DECIMAL) ASC LIMIT 1;\t----- bird -----\tsuperhero",
    "733": "SELECT COUNT(*) FROM superhero s JOIN colour c ON s.eye_colour_id = c.id JOIN publisher p ON s.publisher_id = p.id WHERE c.colour = 'gold' AND p.publisher_name = 'Marvel Comics';\t----- bird -----\tsuperhero",
    "734": "SELECT publisher.publisher_name FROM superhero JOIN publisher ON superhero.publisher_id = publisher.id WHERE superhero.superhero_name = 'Blue Beetle II';\t----- bird -----\tsuperhero",
    "735": "SELECT COUNT(*) FROM superhero s JOIN colour c ON s.hair_colour_id = c.id WHERE c.colour = 'blonde';\t----- bird -----\tsuperhero",
    "736": "SELECT s.superhero_name FROM superhero s JOIN hero_attribute ha ON s.id = ha.hero_id JOIN attribute a ON ha.attribute_id = a.id WHERE a.attribute_name = 'intelligence' ORDER BY ha.attribute_value ASC LIMIT 1;\t----- bird -----\tsuperhero",
    "737": "SELECT r.race FROM superhero s JOIN race r ON s.race_id = r.id WHERE s.superhero_name = 'Copycat';\t----- bird -----\tsuperhero",
    "738": "SELECT s.superhero_name FROM superhero s JOIN hero_attribute ha ON s.id = ha.hero_id JOIN attribute a ON ha.attribute_id = a.id WHERE a.attribute_name = 'durability' AND ha.attribute_value < 50;\t----- bird -----\tsuperhero",
    "739": "SELECT s.superhero_name FROM superhero s JOIN hero_power hp ON s.id = hp.hero_id JOIN superpower sp ON hp.power_id = sp.id WHERE sp.power_name = 'death touch';\t----- bird -----\tsuperhero",
    "740": "SELECT COUNT(DISTINCT s.id) FROM superhero s JOIN gender g ON s.gender_id = g.id JOIN hero_attribute ha ON s.id = ha.hero_id JOIN attribute a ON ha.attribute_id = a.id WHERE g.gender = 'Female' AND a.attribute_name = 'strength' AND ha.attribute_value = 100;\t----- bird -----\tsuperhero",
    "741": "SELECT superhero_name FROM superhero JOIN hero_power ON superhero.id = hero_power.hero_id GROUP BY superhero.id ORDER BY COUNT(hero_power.power_id) DESC LIMIT 1;\t----- bird -----\tsuperhero",
    "742": "SELECT COUNT(*) FROM superhero WHERE LOWER(full_name) LIKE '%vampire%' OR LOWER(superhero_name) LIKE '%vampire%';\t----- bird -----\tsuperhero",
    "743": "SELECT ROUND(100.0 * SUM(CASE WHEN alignment.alignment IN ('act in their own self-interest', 'make decisions based on their own moral code') THEN 1 ELSE 0 END) / COUNT(superhero.id), 2) AS percentage, SUM(CASE WHEN alignment.alignment IN ('act in their own self-interest', 'make decisions based on their own moral code') AND publisher.publisher_name = 'Marvel Comics' THEN 1 ELSE 0 END) AS marvel_count FROM superhero JOIN alignment ON superhero.alignment_id = alignment.id JOIN publisher ON superhero.publisher_id = publisher.id;\t----- bird -----\tsuperhero",
    "744": "SELECT ABS(dc.count - marvel.count) AS difference FROM (SELECT COUNT(*) AS count FROM superhero s JOIN publisher p ON s.publisher_id = p.id WHERE p.publisher_name = 'DC') dc, (SELECT COUNT(*) AS count FROM superhero s JOIN publisher p ON s.publisher_id = p.id WHERE p.publisher_name = 'Marvel Comics') marvel;\t----- bird -----\tsuperhero",
    "745": "SELECT id FROM publisher WHERE publisher_name = 'Star Trek';\t----- bird -----\tsuperhero",
    "746": "SELECT AVG(attribute_value) FROM hero_attribute;\t----- bird -----\tsuperhero",
    "747": "SELECT COUNT(*) FROM superhero WHERE full_name IS NULL OR full_name = '';\t----- bird -----\tsuperhero",
    "748": "SELECT c.colour FROM superhero s JOIN colour c ON s.eye_colour_id = c.id WHERE s.id = 75;\t----- bird -----\tsuperhero",
    "749": "SELECT sp.power_name FROM superpower sp JOIN hero_power hp ON sp.id = hp.power_id JOIN superhero sh ON hp.hero_id = sh.id WHERE sh.superhero_name = 'Deathlok';\t----- bird -----\tsuperhero",
    "750": "SELECT AVG(s.weight_kg) FROM superhero s JOIN gender g ON s.gender_id = g.id WHERE g.gender = 'Female';\t----- bird -----\tsuperhero",
    "751": "SELECT DISTINCT sp.power_name FROM superhero sh JOIN gender g ON sh.gender_id = g.id JOIN hero_power hp ON sh.id = hp.hero_id JOIN superpower sp ON hp.power_id = sp.id WHERE g.gender = 'Male' LIMIT 5;\t----- bird -----\tsuperhero",
    "752": "SELECT superhero.superhero_name FROM superhero JOIN race ON superhero.race_id = race.id WHERE race.race = 'Alien';\t----- bird -----\tsuperhero",
    "753": "SELECT superhero_name FROM superhero WHERE height_cm BETWEEN 170 AND 190 AND eye_colour_id IS NULL;\t----- bird -----\tsuperhero",
    "754": "SELECT sp.power_name FROM superpower sp JOIN hero_power hp ON sp.id = hp.power_id WHERE hp.hero_id = 56;\t----- bird -----\tsuperhero",
    "755": "SELECT DISTINCT s.full_name FROM superhero s JOIN hero_attribute ha ON s.id = ha.hero_id JOIN attribute a ON ha.attribute_id = a.id WHERE a.attribute_name = 'Demi-God' LIMIT 5;\t----- bird -----\tsuperhero",
    "756": "SELECT COUNT(*) FROM superhero s JOIN alignment a ON s.alignment_id = a.id WHERE a.alignment = 'bad';\t----- bird -----\tsuperhero",
    "757": "SELECT r.race FROM superhero s JOIN race r ON s.race_id = r.id WHERE s.weight_kg = 169;\t----- bird -----\tsuperhero",
    "758": "SELECT c.colour FROM superhero s JOIN race r ON s.race_id = r.id JOIN colour c ON s.hair_colour_id = c.id WHERE r.race = 'Human' AND s.height_cm = 185;\t----- bird -----\tsuperhero",
    "759": "SELECT c.colour FROM superhero s JOIN colour c ON s.eye_colour_id = c.id ORDER BY s.weight_kg DESC LIMIT 1;\t----- bird -----\tsuperhero",
    "760": "SELECT 100.0 * COUNT(CASE WHEN p.publisher_name = 'Marvel Comics' THEN 1 END) / COUNT(*) AS percentage_marvel FROM superhero s JOIN publisher p ON s.publisher_id = p.id WHERE s.height_cm BETWEEN 150 AND 180;\t----- bird -----\tsuperhero",
    "761": "SELECT superhero_name FROM superhero WHERE gender_id = (SELECT id FROM gender WHERE gender = 'Male') AND weight_kg > 0.79 * (SELECT AVG(weight_kg) FROM superhero);\t----- bird -----\tsuperhero",
    "762": "SELECT sp.power_name FROM hero_power hp JOIN superpower sp ON hp.power_id = sp.id GROUP BY sp.power_name ORDER BY COUNT(*) DESC LIMIT 1;\t----- bird -----\tsuperhero",
    "763": "SELECT attribute.attribute_name, hero_attribute.attribute_value FROM superhero JOIN hero_attribute ON superhero.id = hero_attribute.hero_id JOIN attribute ON hero_attribute.attribute_id = attribute.id WHERE superhero.superhero_name = 'Abomination';\t----- bird -----\tsuperhero",
    "764": "SELECT sp.power_name FROM superpower sp JOIN hero_power hp ON sp.id = hp.power_id WHERE hp.hero_id = 1;\t----- bird -----\tsuperhero",
    "765": "SELECT COUNT(DISTINCT superhero.id) FROM superhero JOIN hero_power ON superhero.id = hero_power.hero_id JOIN superpower ON hero_power.power_id = superpower.id WHERE superpower.power_name = 'stealth';\t----- bird -----\tsuperhero",
    "766": "SELECT s.full_name FROM superhero s JOIN hero_attribute ha ON s.id = ha.hero_id JOIN attribute a ON ha.attribute_id = a.id WHERE a.attribute_name = 'strength' ORDER BY ha.attribute_value DESC LIMIT 1;\t----- bird -----\tsuperhero",
    "767": "SELECT AVG(1) FROM superhero WHERE skin_colour_id IS NULL;\t----- bird -----\tsuperhero",
    "768": "SELECT COUNT(*) FROM superhero s JOIN publisher p ON s.publisher_id = p.id WHERE p.publisher_name = 'Dark Horse Comics';\t----- bird -----\tsuperhero",
    "769": "SELECT s.superhero_name FROM superhero s JOIN publisher p ON s.publisher_id = p.id JOIN hero_attribute ha ON s.id = ha.hero_id JOIN attribute a ON ha.attribute_id = a.id WHERE p.publisher_name = 'Dark Horse Comics' AND a.attribute_name = 'durability' ORDER BY CAST(ha.attribute_value AS UNSIGNED) DESC LIMIT 1;\t----- bird -----\tsuperhero",
    "770": "SELECT c.colour FROM superhero s JOIN colour c ON s.eye_colour_id = c.id WHERE s.full_name = 'Abraham Sapien';\t----- bird -----\tsuperhero",
    "771": "SELECT s.superhero_name FROM superhero s JOIN hero_power hp ON s.id = hp.hero_id JOIN superpower sp ON hp.power_id = sp.id WHERE sp.power_name = 'flight';\t----- bird -----\tsuperhero",
    "772": "SELECT ec.colour AS eye_colour, hc.colour AS hair_colour, sc.colour AS skin_colour FROM superhero s JOIN gender g ON s.gender_id = g.id JOIN publisher p ON s.publisher_id = p.id JOIN colour ec ON s.eye_colour_id = ec.id JOIN colour hc ON s.hair_colour_id = hc.id JOIN colour sc ON s.skin_colour_id = sc.id WHERE g.gender = 'Female' AND p.publisher_name = 'Dark Horse Comics';\t----- bird -----\tsuperhero",
    "773": "SELECT s.superhero_name, p.publisher_name FROM superhero s JOIN publisher p ON s.publisher_id = p.id WHERE s.eye_colour_id = s.hair_colour_id AND s.hair_colour_id = s.skin_colour_id;\t----- bird -----\tsuperhero",
    "774": "SELECT publisher.publisher_name FROM superhero JOIN publisher ON superhero.publisher_id = publisher.id WHERE superhero.superhero_name = 'A-Bomb';\t----- bird -----\tsuperhero",
    "775": "SELECT 100.0 * SUM(CASE WHEN ec.colour = 'blue' THEN 1 ELSE 0 END) / COUNT(*) AS blue_female_percentage FROM superhero s JOIN gender g ON s.gender_id = g.id JOIN colour ec ON s.eye_colour_id = ec.id WHERE g.gender = 'female';\t----- bird -----\tsuperhero",
    "776": "SELECT superhero.superhero_name, race.race FROM superhero JOIN race ON superhero.race_id = race.id WHERE superhero.full_name = 'Charles Chandler';\t----- bird -----\tsuperhero",
    "777": "SELECT g.gender FROM superhero s JOIN gender g ON s.gender_id = g.id WHERE s.superhero_name = 'Agent 13';\t----- bird -----\tsuperhero",
    "778": "SELECT s.superhero_name FROM superhero s JOIN hero_power hp ON s.id = hp.hero_id JOIN superpower sp ON hp.power_id = sp.id WHERE sp.power_name = 'adaptation';\t----- bird -----\tsuperhero",
    "779": "SELECT COUNT(*) FROM hero_power hp JOIN superhero sh ON hp.hero_id = sh.id WHERE sh.superhero_name = 'Amazo';\t----- bird -----\tsuperhero",
    "780": "SELECT sp.power_name FROM superpower sp JOIN hero_power hp ON sp.id = hp.power_id JOIN superhero sh ON hp.hero_id = sh.id WHERE sh.superhero_name = 'Hunter Zolomon';\t----- bird -----\tsuperhero",
    "781": "SELECT superhero.height_cm FROM superhero JOIN colour ON superhero.eye_colour_id = colour.id WHERE colour.colour = 'amber';\t----- bird -----\tsuperhero",
    "782": "SELECT s.superhero_name FROM superhero s JOIN colour c1 ON s.eye_colour_id = c1.id JOIN colour c2 ON s.hair_colour_id = c2.id WHERE c1.colour = 'black' AND c2.colour = 'black';\t----- bird -----\tsuperhero",
    "783": "SELECT DISTINCT c.colour FROM superhero s JOIN colour c ON s.eye_colour_id = c.id JOIN colour sc ON s.skin_colour_id = sc.id WHERE sc.colour = 'gold';\t----- bird -----\tsuperhero",
    "784": "SELECT s.full_name FROM superhero s JOIN race r ON s.race_id = r.id WHERE r.race = 'Vampire';\t----- bird -----\tsuperhero",
    "785": "SELECT superhero.superhero_name FROM superhero JOIN alignment ON superhero.alignment_id = alignment.id WHERE alignment.alignment = 'neutral';\t----- bird -----\tsuperhero",
    "786": "SELECT COUNT(DISTINCT ha.hero_id) FROM hero_attribute ha JOIN attribute a ON ha.attribute_id = a.id WHERE a.attribute_name = 'strength' AND ha.attribute_value = (SELECT MAX(attribute_value) FROM hero_attribute ha2 JOIN attribute a2 ON ha2.attribute_id = a2.id WHERE a2.attribute_name = 'strength');\t----- bird -----\tsuperhero",
    "787": "SELECT r.race, a.alignment FROM superhero s JOIN race r ON s.race_id = r.id JOIN alignment a ON s.alignment_id = a.id WHERE s.superhero_name = 'Cameron Hicks' OR s.full_name = 'Cameron Hicks';\t----- bird -----\tsuperhero",
    "788": "SELECT (COUNT(CASE WHEN p.publisher_name = 'Marvel Comics' THEN 1 END) * 100.0 / COUNT(*)) AS percent_female_marvel FROM superhero s JOIN gender g ON s.gender_id = g.id JOIN publisher p ON s.publisher_id = p.id WHERE g.gender = 'Female';\t----- bird -----\tsuperhero",
    "789": "SELECT AVG(s.weight_kg) FROM superhero s JOIN race r ON s.race_id = r.id WHERE r.race = 'Alien';\t----- bird -----\tsuperhero",
    "790": "SELECT ABS((SELECT weight_kg FROM superhero WHERE full_name = 'Emil Blonsky') - (SELECT weight_kg FROM superhero WHERE full_name = 'Charles Chandler')) AS weight_difference;\t----- bird -----\tsuperhero",
    "791": "SELECT superhero_name, AVG(height_cm) AS average_height FROM superhero GROUP BY superhero_name;\t----- bird -----\tsuperhero",
    "792": "SELECT sp.power_name FROM superhero sh JOIN hero_power hp ON sh.id = hp.hero_id JOIN superpower sp ON hp.power_id = sp.id WHERE sh.superhero_name = 'Abomination';\t----- bird -----\tsuperhero",
    "793": "SELECT COUNT(*) FROM superhero s JOIN race r ON s.race_id = r.id JOIN gender g ON s.gender_id = g.id WHERE r.race = 'god/eternal' AND g.gender = 'male';\t----- bird -----\tsuperhero",
    "794": "SELECT s.superhero_name FROM superhero s JOIN hero_attribute ha ON s.id = ha.hero_id JOIN attribute a ON ha.attribute_id = a.id WHERE a.attribute_name = 'speed' ORDER BY CAST(ha.attribute_value AS FLOAT) DESC LIMIT 1;\t----- bird -----\tsuperhero",
    "795": "SELECT COUNT(*) FROM superhero s JOIN alignment a ON s.alignment_id = a.id WHERE a.alignment = 'neutral';\t----- bird -----\tsuperhero",
    "796": "SELECT a.attribute_name, ha.attribute_value FROM superhero s JOIN hero_attribute ha ON s.id = ha.hero_id JOIN attribute a ON ha.attribute_id = a.id WHERE s.superhero_name = '3-D Man';\t----- bird -----\tsuperhero",
    "797": "SELECT s.superhero_name FROM superhero s JOIN colour c_eye ON s.eye_colour_id = c_eye.id JOIN colour c_hair ON s.hair_colour_id = c_hair.id WHERE c_eye.colour = 'blue' AND c_hair.colour = 'brown';\t----- bird -----\tsuperhero",
    "798": "SELECT p.publisher_name FROM superhero s JOIN publisher p ON s.publisher_id = p.id WHERE s.superhero_name IN ('Hawkman', 'Karate Kid', 'Speedy');\t----- bird -----\tsuperhero",
    "799": "SELECT COUNT(*) FROM superhero WHERE publisher_id IS NULL;\t----- bird -----\tsuperhero",
    "800": "SELECT (COUNT(*) * 100.0 / (SELECT COUNT(*) FROM superhero)) AS blue_eyes_percentage FROM superhero JOIN colour ON superhero.eye_colour_id = colour.id WHERE colour.colour = 'blue';\t----- bird -----\tsuperhero",
    "801": "SELECT CAST(SUM(CASE WHEN g.gender = 'Male' THEN 1 ELSE 0 END) AS FLOAT) / NULLIF(SUM(CASE WHEN g.gender = 'Female' THEN 1 ELSE 0 END), 0) AS male_to_female_ratio FROM superhero s JOIN gender g ON s.gender_id = g.id;\t----- bird -----\tsuperhero",
    "802": "SELECT superhero_name FROM superhero ORDER BY height_cm DESC LIMIT 1;\t----- bird -----\tsuperhero",
    "803": "SELECT id FROM superpower WHERE power_name = 'cryokinesis';\t----- bird -----\tsuperhero",
    "804": "SELECT superhero_name FROM superhero WHERE id = 294;\t----- bird -----\tsuperhero",
    "805": "SELECT full_name FROM superhero WHERE weight_kg IS NULL;\t----- bird -----\tsuperhero",
    "806": "SELECT c.colour FROM superhero s JOIN colour c ON s.eye_colour_id = c.id WHERE s.full_name = 'Karen Beecher-Duncan';\t----- bird -----\tsuperhero",
    "807": "SELECT sp.power_name FROM superpower sp JOIN hero_power hp ON sp.id = hp.power_id JOIN superhero sh ON hp.hero_id = sh.id WHERE sh.full_name = 'Helen Parr';\t----- bird -----\tsuperhero",
    "808": "SELECT r.race FROM superhero s JOIN race r ON s.race_id = r.id WHERE s.weight_kg = 108 AND s.height_cm = 188;\t----- bird -----\tsuperhero",
    "809": "SELECT publisher.publisher_name FROM superhero JOIN publisher ON superhero.publisher_id = publisher.id WHERE superhero.id = 38;\t----- bird -----\tsuperhero",
    "810": "SELECT r.race FROM race r JOIN superhero s ON r.id = s.race_id JOIN hero_attribute ha ON s.id = ha.hero_id WHERE ha.attribute_value = (SELECT MAX(attribute_value) FROM hero_attribute) LIMIT 1;\t----- bird -----\tsuperhero",
    "811": "SELECT a.alignment, sp.power_name FROM superhero s JOIN alignment a ON s.alignment_id = a.id JOIN hero_power hp ON s.id = hp.hero_id JOIN superpower sp ON hp.power_id = sp.id WHERE s.superhero_name = 'Atom IV';\t----- bird -----\tsuperhero",
    "812": "SELECT s.full_name FROM superhero s JOIN colour c ON s.eye_colour_id = c.id WHERE c.colour = 'blue' LIMIT 5;\t----- bird -----\tsuperhero",
    "813": "SELECT AVG(hero_attribute.attribute_value) FROM hero_attribute JOIN superhero ON hero_attribute.hero_id = superhero.id JOIN alignment ON superhero.alignment_id = alignment.id WHERE alignment.alignment = 'neutral';\t----- bird -----\tsuperhero",
    "814": "SELECT DISTINCT c.colour FROM superhero s JOIN hero_attribute ha ON s.id = ha.hero_id JOIN colour c ON s.skin_colour_id = c.id WHERE ha.attribute_value = 100;\t----- bird -----\tsuperhero",
    "815": "SELECT COUNT(*) FROM superhero s JOIN gender g ON s.gender_id = g.id JOIN alignment a ON s.alignment_id = a.id WHERE g.gender = 'Female' AND a.alignment = 'Good';\t----- bird -----\tsuperhero",
    "816": "SELECT DISTINCT s.superhero_name FROM superhero s JOIN hero_attribute ha ON s.id = ha.hero_id WHERE ha.attribute_value BETWEEN 75 AND 80;\t----- bird -----\tsuperhero",
    "817": "SELECT r.race FROM superhero s JOIN race r ON s.race_id = r.id JOIN gender g ON s.gender_id = g.id JOIN colour c ON s.hair_colour_id = c.id WHERE g.gender = 'male' AND c.colour = 'blue';\t----- bird -----\tsuperhero",
    "818": "SELECT 100.0 * SUM(CASE WHEN g.gender = 'Female' THEN 1 ELSE 0 END) / COUNT(*) AS female_percentage FROM superhero s JOIN alignment a ON s.alignment_id = a.id JOIN gender g ON s.gender_id = g.id WHERE a.alignment = 'Bad';\t----- bird -----\tsuperhero",
    "819": "SELECT (SELECT COUNT(*) FROM superhero s JOIN colour c ON s.eye_colour_id = c.id WHERE s.weight_kg IS NULL AND c.colour = 'blue') - (SELECT COUNT(*) FROM superhero s JOIN colour c ON s.eye_colour_id = c.id WHERE s.weight_kg IS NULL AND c.colour IS NULL) AS difference;\t----- bird -----\tsuperhero",
    "820": "SELECT ha.attribute_value FROM superhero s JOIN hero_attribute ha ON s.id = ha.hero_id JOIN attribute a ON ha.attribute_id = a.id WHERE s.superhero_name = 'Hulk' AND a.attribute_name = 'strength' LIMIT 1;\t----- bird -----\tsuperhero",
    "821": "SELECT sp.power_name FROM superhero sh JOIN hero_power hp ON sh.id = hp.hero_id JOIN superpower sp ON hp.power_id = sp.id WHERE sh.superhero_name = 'Ajax';\t----- bird -----\tsuperhero",
    "822": "SELECT COUNT(*) FROM superhero s JOIN alignment a ON s.alignment_id = a.id JOIN colour c ON s.skin_colour_id = c.id WHERE a.alignment = 'villain' AND c.colour = 'green';\t----- bird -----\tsuperhero",
    "823": "SELECT COUNT(*) FROM superhero s JOIN gender g ON s.gender_id = g.id JOIN publisher p ON s.publisher_id = p.id WHERE g.gender = 'Female' AND p.publisher_name = 'Marvel Comics';\t----- bird -----\tsuperhero",
    "824": "SELECT s.superhero_name FROM superhero s JOIN hero_power hp ON s.id = hp.hero_id JOIN superpower sp ON hp.power_id = sp.id WHERE sp.power_name = 'control wind' ORDER BY s.superhero_name ASC;\t----- bird -----\tsuperhero",
    "825": "SELECT g.gender FROM superhero s JOIN hero_power hp ON s.id = hp.hero_id JOIN superpower sp ON hp.power_id = sp.id JOIN gender g ON s.gender_id = g.id WHERE sp.power_name = 'Phoenix Force';\t----- bird -----\tsuperhero",
    "826": "SELECT s.superhero_name FROM superhero s JOIN publisher p ON s.publisher_id = p.id WHERE p.publisher_name = 'DC Comics' ORDER BY s.weight_kg DESC LIMIT 1;\t----- bird -----\tsuperhero",
    "827": "SELECT AVG(s.height_cm) FROM superhero s JOIN race r ON s.race_id = r.id JOIN publisher p ON s.publisher_id = p.id WHERE r.race <> 'Human' AND p.publisher_name = 'Dark Horse Comics';\t----- bird -----\tsuperhero",
    "828": "SELECT COUNT(*) FROM superhero WHERE height_cm = (SELECT MAX(height_cm) FROM superhero);\t----- bird -----\tsuperhero",
    "829": "SELECT ABS(COALESCE(dc.count,0) - COALESCE(marvel.count,0)) AS difference FROM (SELECT COUNT(*) AS count FROM superhero s JOIN publisher p ON s.publisher_id = p.id WHERE p.publisher_name = 'DC') dc CROSS JOIN (SELECT COUNT(*) AS count FROM superhero s JOIN publisher p ON s.publisher_id = p.id WHERE p.publisher_name = 'Marvel Comics') marvel;\t----- bird -----\tsuperhero",
    "830": "SELECT a.attribute_name, ha.attribute_value FROM superhero s JOIN hero_attribute ha ON s.id = ha.hero_id JOIN attribute a ON ha.attribute_id = a.id WHERE s.superhero_name = 'Black Panther' ORDER BY ha.attribute_value ASC LIMIT 1;\t----- bird -----\tsuperhero",
    "831": "SELECT c.colour FROM superhero s JOIN colour c ON s.eye_colour_id = c.id WHERE s.superhero_name = 'Abomination';\t----- bird -----\tsuperhero",
    "832": "SELECT superhero_name FROM superhero ORDER BY height_cm DESC LIMIT 1;\t----- bird -----\tsuperhero",
    "833": "SELECT superhero_name FROM superhero WHERE full_name = 'Charles Chandler';\t----- bird -----\tsuperhero",
    "834": "SELECT (COUNT(CASE WHEN g.gender = 'Female' THEN 1 END) * 100.0) / COUNT(*) AS female_percentage FROM superhero s JOIN publisher p ON s.publisher_id = p.id JOIN gender g ON s.gender_id = g.id WHERE p.publisher_name = 'George Lucas';\t----- bird -----\tsuperhero",
    "835": "SELECT 100.0 * SUM(CASE WHEN a.alignment = 'good' THEN 1 ELSE 0 END) / COUNT(*) AS percentage_good FROM superhero s JOIN publisher p ON s.publisher_id = p.id JOIN alignment a ON s.alignment_id = a.id WHERE p.publisher_name = 'Marvel Comics';\t----- bird -----\tsuperhero",
    "836": "SELECT COUNT(*) FROM superhero WHERE full_name LIKE 'John %';\t----- bird -----\tsuperhero",
    "837": "SELECT hero_id FROM hero_attribute WHERE attribute_value = (SELECT MIN(attribute_value) FROM hero_attribute) LIMIT 1;\t----- bird -----\tsuperhero",
    "838": "SELECT full_name FROM superhero WHERE superhero_name = 'Alien';\t----- bird -----\tsuperhero",
    "839": "SELECT full_name FROM superhero JOIN colour ON superhero.eye_colour_id = colour.id WHERE weight_kg < 100 AND colour.colour = 'brown';\t----- bird -----\tsuperhero",
    "840": "SELECT ha.attribute_value FROM hero_attribute ha JOIN superhero s ON ha.hero_id = s.id WHERE s.superhero_name = 'Aquababy';\t----- bird -----\tsuperhero",
    "841": "SELECT superhero.weight_kg, race.race FROM superhero JOIN race ON superhero.race_id = race.id WHERE superhero.id = 40;\t----- bird -----\tsuperhero",
    "842": "SELECT AVG(height_cm) FROM superhero JOIN alignment ON superhero.alignment_id = alignment.id WHERE alignment.alignment = 'neutral';\t----- bird -----\tsuperhero",
    "843": "SELECT DISTINCT hero_id FROM hero_power JOIN superpower ON hero_power.power_id = superpower.id WHERE superpower.power_name = 'intellegence';\t----- bird -----\tsuperhero",
    "844": "SELECT c.colour FROM superhero s JOIN colour c ON s.eye_colour_id = c.id WHERE s.superhero_name = 'Blackwulf';\t----- bird -----\tsuperhero",
    "845": "SELECT sp.power_name FROM superhero sh JOIN hero_power hp ON sh.id = hp.hero_id JOIN superpower sp ON hp.power_id = sp.id WHERE sh.height_cm > 0.8 * (SELECT AVG(height_cm) FROM superhero);\t----- bird -----\tsuperhero",
    "846": "SELECT d.driverRef FROM results r JOIN drivers d ON r.driverId = d.driverId JOIN status s ON r.statusId = s.status WHERE r.raceId = 20 AND s.status LIKE '%eliminated in the first period%';\t----- bird -----\tformula_1",
    "847": "SELECT d.surname FROM qualifying q JOIN drivers d ON q.driverId = d.driverId WHERE q.raceId = 19 AND q.q2 = (SELECT MIN(q2) FROM qualifying WHERE raceId = 19 AND q2 IS NOT NULL);\t----- bird -----\tformula_1",
    "848": "SELECT DISTINCT races.year FROM races JOIN circuits ON races.circuitId = circuits.circuitId WHERE circuits.name LIKE '%Shanghai%' ORDER BY races.year;\t----- bird -----\tformula_1",
    "849": "SELECT url FROM races JOIN circuits ON races.circuitId = circuits.circuitId WHERE circuits.name = 'Circuit de Barcelona-Catalunya' ORDER BY races.date ASC LIMIT 1;\t----- bird -----\tformula_1",
    "850": "SELECT races.name FROM races JOIN circuits ON races.circuitId = circuits.circuitId WHERE circuits.country = 'Germany';\t----- bird -----\tformula_1",
    "851": "SELECT r.position FROM results r JOIN races ra ON r.raceId = ra.raceId JOIN circuits c ON ra.circuitId = c.circuitId JOIN constructors con ON r.constructorId = con.constructorId WHERE con.name = 'Renault';\t----- bird -----\tformula_1",
    "852": "SELECT COUNT(*) FROM races r JOIN circuits c ON r.circuitId = c.circuitId WHERE r.year = 2010 AND c.continent NOT IN ('Asia', 'Europe');\t----- bird -----\tformula_1",
    "853": "SELECT races.name FROM races JOIN circuits ON races.circuitId = circuits.circuitId WHERE circuits.country = 'Spain';\t----- bird -----\tformula_1",
    "854": "SELECT lat, lng FROM circuits WHERE name LIKE '%Australian Grand Prix%';\t----- bird -----\tformula_1",
    "855": "SELECT * FROM races JOIN circuits ON races.circuitId = circuits.circuitId WHERE circuits.name = 'Sepang International Circuit';\t----- bird -----\tformula_1",
    "856": "SELECT time FROM races JOIN circuits ON races.circuitId = circuits.circuitId WHERE circuits.name = 'Sepang International Circuit';\t----- bird -----\tformula_1",
    "857": "SELECT lat, lng FROM circuits WHERE name = 'Abu Dhabi Grand Prix';\t----- bird -----\tformula_1",
    "858": "SELECT c.country FROM constructors c JOIN constructorResults cr ON c.constructorId = cr.constructorId WHERE cr.raceId = 24 AND cr.points = 1;\t----- bird -----\tformula_1",
    "859": "SELECT q1 FROM qualifying WHERE raceId = 354 AND driverId = (SELECT driverId FROM drivers WHERE forename = 'Bruno' AND surname = 'Senna');\t----- bird -----\tformula_1",
    "860": "SELECT d.nationality FROM qualifying q JOIN drivers d ON q.driverId = d.driverId WHERE q.raceId = 355 AND q.q2 = '0:01:40' LIMIT 1;\t----- bird -----\tformula_1",
    "861": "SELECT number FROM qualifying WHERE raceId = 903 AND q3 = '0:01:54';\t----- bird -----\tformula_1",
    "862": "SELECT COUNT(*) FROM results r JOIN races ra ON r.raceId = ra.raceId JOIN status s ON r.statusId = s.statusId WHERE ra.name = 'Bahrain Grand Prix' AND ra.year = 2007 AND s.status NOT LIKE '%Finished%' ;\t----- bird -----\tformula_1",
    "863": "SELECT s.url FROM seasons s JOIN races r ON s.year = r.year WHERE r.raceId = 901;\t----- bird -----\tformula_1",
    "864": "SELECT COUNT(DISTINCT driverId) FROM results JOIN races ON results.raceId = races.raceId WHERE races.date = '2015-11-29' AND results.positionOrder IS NOT NULL AND results.positionOrder > 0;\t----- bird -----\tformula_1",
    "865": "SELECT d.forename, d.surname, d.dob FROM drivers d JOIN results r ON d.driverId = r.driverId WHERE r.raceId = 592 AND r.positionOrder IS NOT NULL ORDER BY d.dob ASC LIMIT 1;\t----- bird -----\tformula_1",
    "866": "SELECT d.url FROM lapTimes lt JOIN drivers d ON lt.driverId = d.driverId WHERE lt.raceId = 161 AND lt.time = '0:01:27' LIMIT 1;\t----- bird -----\tformula_1",
    "867": "SELECT d.nationality FROM results r JOIN drivers d ON r.driverId = d.driverId WHERE r.raceId = 933 ORDER BY r.fastestLapSpeed DESC LIMIT 1;\t----- bird -----\tformula_1",
    "868": "SELECT circuits.lat, circuits.lng FROM races JOIN circuits ON races.circuitId = circuits.circuitId WHERE races.name = 'Malaysian Grand Prix' LIMIT 1;\t----- bird -----\tformula_1",
    "869": "SELECT c.url FROM constructors c JOIN constructorResults cr ON c.constructorId = cr.constructorId JOIN races r ON cr.raceId = r.raceId WHERE r.round = 9 ORDER BY cr.points DESC LIMIT 1;\t----- bird -----\tformula_1",
    "870": "SELECT q1 FROM qualifying WHERE driverId = (SELECT driverId FROM drivers WHERE forename = 'Lucas' AND surname = 'di Grassi') AND raceId = 345;\t----- bird -----\tformula_1",
    "871": "SELECT nationality FROM drivers WHERE driverId = (SELECT driverId FROM qualifying WHERE raceId = 347 AND q2 = '0:01:15');\t----- bird -----\tformula_1",
    "872": "SELECT d.code FROM qualifying q JOIN drivers d ON q.driverId = d.driverId WHERE q.raceId = 45 AND q.q3 = '0:01:33' LIMIT 1;\t----- bird -----\tformula_1",
    "873": "SELECT r.time FROM results r JOIN drivers d ON r.driverId = d.driverId WHERE d.forename = 'Bruce' AND d.surname = 'McLaren' AND r.raceId = 743;\t----- bird -----\tformula_1",
    "874": "SELECT d.forename, d.surname FROM results r JOIN drivers d ON r.driverId = d.driverId JOIN races ra ON r.raceId = ra.raceId WHERE ra.name = 'San Marino Grand Prix' AND ra.year = 2006 AND r.position = 2;\t----- bird -----\tformula_1",
    "875": "SELECT s.url FROM seasons s JOIN races r ON s.year = r.year WHERE r.raceId = 901;\t----- bird -----\tformula_1",
    "876": "SELECT COUNT(*) FROM results r JOIN races ra ON r.raceId = ra.raceId JOIN status s ON r.statusId = s.statusId WHERE ra.date = '2015-11-29' AND s.status NOT LIKE '%Finished%' AND s.status NOT LIKE '%Finished%';\t----- bird -----\tformula_1",
    "877": "SELECT d.forename, d.surname, d.dob FROM drivers d JOIN results r ON d.driverId = r.driverId WHERE r.raceId = 872 AND r.positionOrder IS NOT NULL ORDER BY d.dob DESC LIMIT 1;\t----- bird -----\tformula_1",
    "878": "SELECT d.forename || ' ' || d.surname AS full_name FROM lapTimes lt JOIN drivers d ON lt.driverId = d.driverId WHERE lt.raceId = 348 ORDER BY lt.milliseconds ASC LIMIT 1;\t----- bird -----\tformula_1",
    "879": "SELECT d.nationality FROM drivers d JOIN results r ON d.driverId = r.driverId WHERE r.fastestLapSpeed = (SELECT MAX(fastestLapSpeed) FROM results);\t----- bird -----\tformula_1",
    "880": "WITH race_numbers AS (SELECT raceId, ROW_NUMBER() OVER (ORDER BY raceId) AS rn FROM races), paul_races AS (SELECT r.raceId, r.rn FROM race_numbers r JOIN results res ON r.raceId = res.raceId JOIN drivers d ON res.driverId = d.driverId WHERE d.forename = 'Paul' AND d.surname = 'di Resta' AND r.rn = 853), speeds AS (SELECT res.raceId, res.fastestLapSpeed FROM results res JOIN paul_races pr ON res.raceId = pr.raceId WHERE res.driverId = (SELECT driverId FROM drivers WHERE forename = 'Paul' AND surname = 'di Resta')), next_race AS (SELECT r.raceId FROM race_numbers r JOIN paul_races pr ON r.rn = pr.rn + 1) SELECT ((s1.fastestLapSpeed - s2.fastestLapSpeed) / s2;\t----- bird -----\tformula_1",
    "881": "SELECT d.driverId, d.forename, d.surname, COUNT(r.resultId) AS total_races, SUM(CASE WHEN r.positionOrder <= (SELECT MAX(positionOrder) FROM results WHERE raceId = r.raceId) THEN 1 ELSE 0 END) AS completed_races, ROUND(SUM(CASE WHEN r.positionOrder <= (SELECT MAX(positionOrder) FROM results WHERE raceId = r.raceId) THEN 1 ELSE 0 END)*100.0/COUNT(r.resultId),2) AS completion_rate_percentage FROM drivers d JOIN results r ON d.driverId = r.driverId JOIN races ra ON r.raceId = ra.raceId WHERE ra.date = '1983-07-16' GROUP BY d.driverId, d.forename, d.surname;\t----- bird -----\tformula_1",
    "882": "SELECT MIN(year) FROM races WHERE name = 'Singapore Grand Prix';\t----- bird -----\tformula_1",
    "883": "SELECT COUNT(*) AS total_races, GROUP_CONCAT(name ORDER BY name DESC) AS race_names FROM races WHERE year = 2005;\t----- bird -----\tformula_1",
    "884": "SELECT name FROM races WHERE YEAR(date) = (SELECT MIN(YEAR(date)) FROM races) AND MONTH(date) = (SELECT MIN(MONTH(date)) FROM races WHERE YEAR(date) = (SELECT MIN(YEAR(date)) FROM races));\t----- bird -----\tformula_1",
    "885": "SELECT name, date FROM races WHERE year = 1999 ORDER BY round DESC LIMIT 1;\t----- bird -----\tformula_1",
    "886": "SELECT year FROM races GROUP BY year ORDER BY COUNT(*) DESC LIMIT 1;\t----- bird -----\tformula_1",
    "887": "SELECT name FROM races WHERE year = 2017 AND name NOT IN (SELECT name FROM races WHERE year = 2000);\t----- bird -----\tformula_1",
    "888": "SELECT c.country, c.name, c.location FROM races r JOIN circuits c ON r.circuitId = c.circuitId WHERE r.name = 'European Grand Prix' ORDER BY r.date, r.time LIMIT 1;\t----- bird -----\tformula_1",
    "889": "SELECT MAX(r.year) FROM races r JOIN circuits c ON r.circuitId = c.circuitId WHERE c.name = 'Brands Hatch' AND r.name LIKE '%British Grand Prix%';\t----- bird -----\tformula_1",
    "890": "SELECT COUNT(DISTINCT year) FROM races JOIN circuits ON races.circuitId = circuits.circuitId WHERE circuits.name = 'Silverstone Circuit' AND races.name LIKE '%United Kingdom Grand Prix%';\t----- bird -----\tformula_1",
    "891": "SELECT d.forename, d.surname FROM drivers d JOIN results r ON d.driverId = r.driverId JOIN races ra ON r.raceId = ra.raceId WHERE ra.year = 2010 AND ra.name = 'Singapore Grand Prix' ORDER BY r.positionOrder;\t----- bird -----\tformula_1",
    "892": "SELECT d.forename, d.surname, SUM(r.points) AS total_points FROM drivers d JOIN results r ON d.driverId = r.driverId GROUP BY d.driverId ORDER BY total_points DESC LIMIT 1;\t----- bird -----\tformula_1",
    "893": "SELECT d.forename, d.surname, ds.points FROM driverStandings ds JOIN drivers d ON ds.driverId = d.driverId JOIN races r ON ds.raceId = r.raceId WHERE r.year = 2017 AND r.name = 'Chinese Grand Prix' ORDER BY ds.points DESC LIMIT 3;\t----- bird -----\tformula_1",
    "894": "SELECT d.forename, d.surname, r.name AS race_name, MIN(lt.milliseconds) AS best_lap_time FROM lapTimes lt JOIN drivers d ON lt.driverId = d.driverId JOIN races r ON lt.raceId = r.raceId GROUP BY d.driverId, r.raceId ORDER BY best_lap_time ASC LIMIT 1;\t----- bird -----\tformula_1",
    "895": "SELECT AVG(lapTimes.milliseconds) AS average_lap_time FROM lapTimes JOIN drivers ON lapTimes.driverId = drivers.driverId JOIN races ON lapTimes.raceId = races.raceId WHERE drivers.forename = 'Lewis' AND drivers.surname = 'Hamilton' AND races.year = 2009 AND races.name = 'Malaysian Grand Prix';\t----- bird -----\tformula_1",
    "896": "SELECT 100.0 * SUM(CASE WHEN r.circuitId != (SELECT circuitId FROM circuits ORDER BY circuitId LIMIT 1) THEN 1 ELSE 0 END) / COUNT(*) AS percentage_not_first_circuit FROM results res JOIN races r ON res.raceId = r.raceId JOIN drivers d ON res.driverId = d.driverId WHERE d.forename = 'Lewis' AND d.surname = 'Hamilton' AND r.year >= 2010;\t----- bird -----\tformula_1",
    "897": "SELECT d.forename, d.surname, d.nationality, MAX(ds.points) AS max_points FROM driverStandings ds JOIN drivers d ON ds.driverId = d.driverId WHERE ds.wins = (SELECT MAX(wins) FROM driverStandings) GROUP BY d.driverId ORDER BY max_points DESC LIMIT 1;\t----- bird -----\tformula_1",
    "898": "SELECT forename, surname, FLOOR(DATEDIFF(CURDATE(), dob)/365.25) AS age FROM drivers WHERE nationality = 'Japanese' ORDER BY dob DESC LIMIT 1;\t----- bird -----\tformula_1",
    "899": "SELECT c.name FROM circuits c JOIN races r ON c.circuitId = r.circuitId WHERE r.year BETWEEN 1990 AND 2000 GROUP BY c.circuitId, c.name HAVING COUNT(r.raceId) = 4;\t----- bird -----\tformula_1",
    "900": "SELECT c.name AS circuit_name, c.location, r.name AS race_name FROM circuits c JOIN races r ON c.circuitId = r.circuitId WHERE c.country = 'USA' AND r.year = 2006;\t----- bird -----\tformula_1",
    "901": "SELECT races.name AS race_name, circuits.name AS circuit_name, circuits.location FROM races JOIN circuits ON races.circuitId = circuits.circuitId WHERE YEAR(races.date) = 2005 AND MONTH(races.date) = 9;\t----- bird -----\tformula_1",
    "902": "SELECT r.* FROM races r JOIN results res ON r.raceId = res.raceId JOIN drivers d ON res.driverId = d.driverId WHERE d.forename = 'Alex' AND d.surname = 'Yoong' AND res.number < 20;\t----- bird -----\tformula_1",
    "903": "SELECT COUNT(*) FROM results r JOIN races ra ON r.raceId = ra.raceId JOIN drivers d ON r.driverId = d.driverId JOIN circuits c ON ra.circuitId = c.circuitId WHERE d.forename = 'Michael' AND d.surname = 'Schumacher' AND c.name = 'Sepang International Circuit' AND r.position = 1;\t----- bird -----\tformula_1",
    "904": "SELECT r.name, r.year FROM results res JOIN drivers d ON res.driverId = d.driverId JOIN races r ON res.raceId = r.raceId WHERE d.forename = 'Michael' AND d.surname = 'Schumacher' ORDER BY res.fastestLapTime ASC LIMIT 1;\t----- bird -----\tformula_1",
    "905": "SELECT AVG(r.points) AS average_points FROM results r JOIN drivers d ON r.driverId = d.driverId JOIN races ra ON r.raceId = ra.raceId WHERE d.forename = 'Eddie' AND d.surname = 'Irvine' AND ra.year = 2000;\t----- bird -----\tformula_1",
    "906": "SELECT r.name AS race_name, r.date, res.points FROM drivers d JOIN results res ON d.driverId = res.driverId JOIN races r ON res.raceId = r.raceId WHERE d.forename = 'Lewis' AND d.surname = 'Hamilton' ORDER BY r.date ASC LIMIT 1;\t----- bird -----\tformula_1",
    "907": "SELECT races.name, circuits.country FROM races JOIN circuits ON races.circuitId = circuits.circuitId WHERE races.year = 2017 ORDER BY races.date;\t----- bird -----\tformula_1",
    "908": "SELECT r.name, r.year, c.location FROM races r JOIN circuits c ON r.circuitId = c.circuitId WHERE r.laps = (SELECT MAX(laps) FROM races);\t----- bird -----\tformula_1",
    "909": "SELECT (COUNT(CASE WHEN r.country = 'Germany' THEN 1 END) * 100.0) / COUNT(*) AS percentage FROM races r JOIN circuits c ON r.circuitId = c.circuitId WHERE r.name LIKE '%European Grand Prix%' OR c.name LIKE '%European Grand Prix%' OR c.location LIKE '%European Grand Prix%' OR c.country LIKE '%European Grand Prix%' OR r.name LIKE '%Europe%' OR c.name LIKE '%Europe%' OR c.location LIKE '%Europe%' OR c.country LIKE '%Europe%';\t----- bird -----\tformula_1",
    "910": "SELECT lat, lng FROM circuits WHERE name = 'Silverstone Circuit';\t----- bird -----\tformula_1",
    "911": "SELECT name, lat FROM circuits WHERE name IN ('Silverstone Circuit', 'Hockenheimring', 'Hungaroring') ORDER BY lat DESC;\t----- bird -----\tformula_1",
    "912": "SELECT circuitRef FROM circuits WHERE name = 'Marina Bay Street Circuit';\t----- bird -----\tformula_1",
    "913": "SELECT country FROM circuits ORDER BY alt DESC LIMIT 1;\t----- bird -----\tformula_1",
    "914": "SELECT COUNT(*) FROM drivers WHERE code IS NULL OR code = '';\t----- bird -----\tformula_1",
    "915": "SELECT country FROM drivers JOIN races ON drivers.driverId = races.raceId ORDER BY dob ASC LIMIT 1;\t----- bird -----\tformula_1",
    "916": "SELECT surname FROM drivers WHERE nationality = 'Italian';\t----- bird -----\tformula_1",
    "917": "SELECT url FROM drivers WHERE forename = 'Anthony' AND surname = 'Davidson' LIMIT 1;\t----- bird -----\tformula_1",
    "918": "SELECT driverRef FROM drivers WHERE forename = 'Lewis' AND surname = 'Hamilton';\t----- bird -----\tformula_1",
    "919": "SELECT c.name FROM circuits c JOIN races r ON c.circuitId = r.circuitId WHERE r.year = 2009 AND r.name = 'Spanish Grand Prix';\t----- bird -----\tformula_1",
    "920": "SELECT DISTINCT r.year FROM races r JOIN circuits c ON r.circuitId = c.circuitId WHERE c.name = 'Silverstone Circuit' ORDER BY r.year;\t----- bird -----\tformula_1",
    "921": "SELECT races.* FROM races JOIN circuits ON races.circuitId = circuits.circuitId WHERE circuits.name = 'Silverstone Circuit' OR circuits.circuitRef = 'silverstone';\t----- bird -----\tformula_1",
    "922": "SELECT r.time FROM races r JOIN circuits c ON r.circuitId = c.circuitId WHERE c.name = 'Abu Dhabi Circuit' AND r.year BETWEEN 2010 AND 2019;\t----- bird -----\tformula_1",
    "923": "SELECT COUNT(*) FROM races JOIN circuits ON races.circuitId = circuits.circuitId WHERE circuits.country = 'Italy';\t----- bird -----\tformula_1",
    "924": "SELECT r.date FROM races r JOIN circuits c ON r.circuitId = c.circuitId WHERE c.name = 'Barcelona-Catalunya';\t----- bird -----\tformula_1",
    "925": "SELECT circuits.url FROM circuits JOIN races ON circuits.circuitId = races.circuitId WHERE races.name = 'Spanish Grand Prix' AND races.year = 2009;\t----- bird -----\tformula_1",
    "926": "SELECT MIN(lapTimes.milliseconds) AS fastest_lap_time FROM lapTimes JOIN drivers ON lapTimes.driverId = drivers.driverId WHERE drivers.forename = 'Lewis' AND drivers.surname = 'Hamilton';\t----- bird -----\tformula_1",
    "927": "SELECT d.forename, d.surname FROM results r JOIN drivers d ON r.driverId = d.driverId ORDER BY r.fastestLapSpeed DESC LIMIT 1;\t----- bird -----\tformula_1",
    "928": "SELECT d.driverRef FROM drivers d JOIN results r ON d.driverId = r.driverId JOIN races ra ON r.raceId = ra.raceId WHERE ra.name = 'Canadian Grand Prix' AND ra.year = 2007 AND r.positionOrder = 1;\t----- bird -----\tformula_1",
    "929": "SELECT DISTINCT r.name FROM races r JOIN results res ON r.raceId = res.raceId JOIN drivers d ON res.driverId = d.driverId WHERE d.forename = 'Lewis' AND d.surname = 'Hamilton';\t----- bird -----\tformula_1",
    "930": "SELECT r.name, r.year, r.round FROM results res JOIN drivers d ON res.driverId = d.driverId JOIN races r ON res.raceId = r.raceId WHERE d.forename = 'Lewis' AND d.surname = 'Hamilton' ORDER BY res.positionOrder ASC LIMIT 1;\t----- bird -----\tformula_1",
    "931": "SELECT MAX(r.fastestLapSpeed) FROM results r JOIN races ra ON r.raceId = ra.raceId WHERE ra.year = 2009 AND ra.name = 'Spanish Grand Prix';\t----- bird -----\tformula_1",
    "932": "SELECT DISTINCT r.year FROM races r JOIN results res ON r.raceId = res.raceId JOIN drivers d ON res.driverId = d.driverId WHERE d.forename = 'Lewis' AND d.surname = 'Hamilton' ORDER BY r.year;\t----- bird -----\tformula_1",
    "933": "SELECT r.positionOrder FROM results r JOIN drivers d ON r.driverId = d.driverId JOIN races ra ON r.raceId = ra.raceId WHERE d.forename = 'Lewis' AND d.surname = 'Hamilton' AND ra.year = 2008 AND ra.name = 'Chinese Grand Prix';\t----- bird -----\tformula_1",
    "934": "SELECT d.forename, d.surname FROM results r JOIN drivers d ON r.driverId = d.driverId JOIN races ra ON r.raceId = ra.raceId WHERE ra.year = 1989 AND ra.name = 'Australian Grand Prix' AND r.grid = 4;\t----- bird -----\tformula_1",
    "935": "SELECT COUNT(DISTINCT r.driverId) FROM results r JOIN races ra ON r.raceId = ra.raceId WHERE ra.year = 2008 AND ra.name = 'Australian Grand Prix' AND r.positionOrder IS NOT NULL AND r.positionOrder > 0;\t----- bird -----\tformula_1",
    "936": "SELECT MIN(lapTimes.milliseconds) AS fastest_lap_time FROM lapTimes JOIN drivers ON lapTimes.driverId = drivers.driverId JOIN races ON lapTimes.raceId = races.raceId WHERE drivers.forename = 'Lewis' AND drivers.surname = 'Hamilton' AND races.year = 2008 AND races.name = 'Australian Grand Prix';\t----- bird -----\tformula_1",
    "937": "SELECT r.time FROM results r JOIN races ra ON r.raceId = ra.raceId WHERE ra.year = 2008 AND ra.name = 'AustChineseralian Grand Prix' AND r.positionOrder = 2;\t----- bird -----\tformula_1",
    "938": "SELECT d.forename, d.surname, d.url FROM results r JOIN races ra ON r.raceId = ra.raceId JOIN drivers d ON r.driverId = d.driverId WHERE ra.year = 2008 AND ra.name = 'Australian Grand Prix' AND r.positionOrder = 1;\t----- bird -----\tformula_1",
    "939": "SELECT COUNT(DISTINCT d.driverId) FROM drivers d JOIN results r ON d.driverId = r.driverId JOIN races ra ON r.raceId = ra.raceId WHERE d.nationality = 'UN' AND ra.year = 2008 AND ra.name = 'Australian Grand Prix';\t----- bird -----\tformula_1",
    "940": "SELECT COUNT(DISTINCT r.driverId) FROM results r JOIN races ra ON r.raceId = ra.raceId WHERE ra.year = 2008 AND ra.name = 'Chinese Grand Prix' AND r.positionOrder IS NOT NULL AND r.positionOrder > 0;\t----- bird -----\tformula_1",
    "941": "SELECT SUM(points) FROM results JOIN drivers ON results.driverId = drivers.driverId WHERE drivers.forename = 'Lewis' AND drivers.surname = 'Hamilton';\t----- bird -----\tformula_1",
    "942": "SELECT AVG(CAST(SUBSTRING_INDEX(fastestLapTime, ':', 1) * 60 + SUBSTRING_INDEX(fastestLapTime, ':', -1) AS DECIMAL(10,3))) AS avg_fastest_lap_time_seconds FROM results JOIN drivers ON results.driverId = drivers.driverId WHERE drivers.forename = 'Lewis' AND drivers.surname = 'Hamilton' AND fastestLapTime IS NOT NULL;\t----- bird -----\tformula_1",
    "943": "SELECT CAST(SUM(CASE WHEN r.laps = rs.laps THEN 1 ELSE 0 END) AS FLOAT) / COUNT(*) AS completion_rate FROM results r JOIN races rs ON r.raceId = rs.raceId WHERE rs.year = 2008 AND rs.name = 'Australian Grand Prix';\t----- bird -----\tformula_1",
    "944": "SELECT ROUND(((last.milliseconds - champ.milliseconds) * 100.0 / last.milliseconds), 2) AS percentage_faster FROM results champ JOIN races r ON champ.raceId = r.raceId JOIN results last ON last.raceId = champ.raceId WHERE r.year = 2008 AND r.name = 'Australian Grand Prix' AND champ.positionOrder = 1 AND last.positionOrder = (SELECT MAX(positionOrder) FROM results WHERE raceId = r.raceId);\t----- bird -----\tformula_1",
    "945": "SELECT COUNT(*) FROM circuits WHERE location = 'Adelaide' AND country = 'Australia';\t----- bird -----\tformula_1",
    "946": "SELECT lat, lng FROM circuits WHERE country = 'USA' OR country = 'United States' OR country = 'United States of America';\t----- bird -----\tformula_1",
    "947": "SELECT COUNT(*) FROM drivers WHERE nationality = 'British' AND dob > '1980-12-31';\t----- bird -----\tformula_1",
    "948": "SELECT MAX(points) FROM constructorResults cr JOIN constructors c ON cr.constructorId = c.constructorId WHERE c.nationality = 'British';\t----- bird -----\tformula_1",
    "949": "SELECT constructors.name, SUM(constructorResults.points) AS total_points FROM constructors JOIN constructorResults ON constructors.constructorId = constructorResults.constructorId GROUP BY constructors.constructorId ORDER BY total_points DESC LIMIT 1;\t----- bird -----\tformula_1",
    "950": "SELECT c.name FROM constructors c JOIN constructorResults cr ON c.constructorId = cr.constructorId WHERE cr.raceId = 291 AND cr.points = 0;\t----- bird -----\tformula_1",
    "951": "SELECT COUNT(DISTINCT c.constructorId) FROM constructors c JOIN constructorResults cr ON c.constructorId = cr.constructorId WHERE c.nationality = 'Japanese' AND cr.points = 0 GROUP BY c.constructorId HAVING COUNT(DISTINCT cr.raceId) = 2;\t----- bird -----\tformula_1",
    "952": "SELECT DISTINCT c.name FROM constructors c JOIN constructorStandings cs ON c.constructorId = cs.constructorId WHERE cs.position = 1;\t----- bird -----\tformula_1",
    "953": "SELECT COUNT(DISTINCT c.constructorId) FROM constructors c JOIN lapTimes l ON c.constructorId = l.driverId JOIN drivers d ON l.driverId = d.driverId WHERE c.nationality = 'French' AND l.lap > 50;\t----- bird -----\tformula_1",
    "954": "SELECT ROUND(100.0 * SUM(CASE WHEN r.positionOrder <= r.laps THEN 1 ELSE 0 END) / COUNT(*), 2) AS completion_percentage FROM results r JOIN drivers d ON r.driverId = d.driverId JOIN races ra ON r.raceId = ra.raceId WHERE d.nationality = 'Japanese' AND ra.year BETWEEN 2007 AND 2009;\t----- bird -----\tformula_1",
    "955": "SELECT r.year, AVG(rs.milliseconds)/1000 AS avg_champion_time_seconds FROM results rs JOIN races r ON rs.raceId = r.raceId WHERE rs.position = 1 AND r.year < 1975 GROUP BY r.year ORDER BY r.year;\t----- bird -----\tformula_1",
    "956": "SELECT DISTINCT d.forename, d.surname FROM drivers d JOIN results r ON d.driverId = r.driverId WHERE d.dob > '1975-12-31' AND r.positionOrder = 2;\t----- bird -----\tformula_1",
    "957": "SELECT COUNT(DISTINCT d.driverId) FROM drivers d JOIN results r ON d.driverId = r.driverId JOIN status s ON r.statusId = s.status WHERE d.nationality = 'Italian' AND s.status != 'Finished';\t----- bird -----\tformula_1",
    "958": "SELECT d.forename, d.surname FROM drivers d JOIN lapTimes l ON d.driverId = l.driverId ORDER BY l.milliseconds ASC LIMIT 1;\t----- bird -----\tformula_1",
    "959": "SELECT MIN(lap) FROM lapTimes WHERE driverId = (SELECT driverId FROM driverStandings ds JOIN races r ON ds.raceId = r.raceId WHERE r.year = 2009 AND ds.position = '1' ORDER BY r.round DESC LIMIT 1);\t----- bird -----\tformula_1",
    "960": "SELECT AVG(fastestLapSpeed) FROM results JOIN races ON results.raceId = races.raceId WHERE races.year = 2009 AND races.name = 'Spanish Grand Prix';\t----- bird -----\tformula_1",
    "961": "SELECT r.name, r.year FROM races r JOIN results res ON r.raceId = res.raceId WHERE res.positionOrder = 1 ORDER BY res.milliseconds ASC LIMIT 1;\t----- bird -----\tformula_1",
    "962": "SELECT (COUNT(DISTINCT lt.driverId) * 100.0 / (SELECT COUNT(DISTINCT d.driverId) FROM drivers d WHERE d.dob < '1985-01-01')) AS percentage FROM lapTimes lt JOIN races r ON lt.raceId = r.raceId JOIN drivers d ON lt.driverId = d.driverId WHERE r.year BETWEEN 2000 AND 2005 AND d.dob < '1985-01-01' AND lt.lap > 50;\t----- bird -----\tformula_1",
    "963": "SELECT COUNT(DISTINCT lt.driverId) FROM lapTimes lt JOIN drivers d ON lt.driverId = d.driverId WHERE d.nationality = 'French' AND lt.time < '02:00.00';\t----- bird -----\tformula_1",
    "964": "SELECT code FROM drivers WHERE nationality LIKE '%America%' OR nationality LIKE '%American%' OR nationality LIKE '%USA%' OR nationality LIKE '%United States%' OR nationality LIKE '%US%' OR nationality LIKE '%United States of America%' OR nationality LIKE '%North America%' OR nationality LIKE '%South America%' OR nationality LIKE '%Latin America%';\t----- bird -----\tformula_1",
    "965": "SELECT raceId FROM races WHERE year = 2009;\t----- bird -----\tformula_1",
    "966": "SELECT COUNT(DISTINCT driverId) FROM results WHERE raceId = 18;\t----- bird -----\tformula_1",
    "967": "SELECT COUNT(*) FROM (SELECT code FROM drivers ORDER BY dob DESC LIMIT 3) AS top3 WHERE nationality = 'Dutch';\t----- bird -----\tformula_1",
    "968": "SELECT driverRef FROM drivers WHERE forename = 'Robert' AND surname = 'Kubica';\t----- bird -----\tformula_1",
    "969": "SELECT COUNT(*) FROM drivers WHERE nationality = 'British' AND YEAR(dob) = 1980;\t----- bird -----\tformula_1",
    "970": "SELECT d.forename, d.surname, MIN(lt.milliseconds) AS earliest_lap_time FROM drivers d JOIN lapTimes lt ON d.driverId = lt.driverId WHERE d.nationality = 'German' AND d.dob BETWEEN '1980-01-01' AND '1990-12-31' GROUP BY d.driverId, d.forename, d.surname ORDER BY earliest_lap_time ASC LIMIT 3;\t----- bird -----\tformula_1",
    "971": "SELECT driverRef FROM drivers WHERE nationality = 'German' ORDER BY dob ASC LIMIT 1;\t----- bird -----\tformula_1",
    "972": "SELECT d.driverId, d.code FROM drivers d JOIN results r ON d.driverId = r.driverId WHERE YEAR(d.dob) = 1971 AND r.fastestLapTime = (SELECT MIN(fastestLapTime) FROM results WHERE fastestLapTime IS NOT NULL);\t----- bird -----\tformula_1",
    "973": "SELECT d.driverId, d.forename, d.surname, MAX(lt.milliseconds) AS latest_lap_time FROM drivers d JOIN lapTimes lt ON d.driverId = lt.driverId WHERE d.nationality = 'Spanish' AND d.dob < '1982-01-01' GROUP BY d.driverId, d.forename, d.surname ORDER BY latest_lap_time DESC LIMIT 10;\t----- bird -----\tformula_1",
    "974": "SELECT races.year FROM results JOIN races ON results.raceId = races.raceId ORDER BY results.fastestLapTime LIMIT 1;\t----- bird -----\tformula_1",
    "975": "SELECT r.year FROM lapTimes lt JOIN races r ON lt.raceId = r.raceId ORDER BY lt.milliseconds DESC LIMIT 1;\t----- bird -----\tformula_1",
    "976": "SELECT driverId FROM lapTimes WHERE lap = 1 ORDER BY milliseconds ASC LIMIT 5;\t----- bird -----\tformula_1",
    "977": "SELECT COUNT(*) FROM results WHERE raceId BETWEEN 50 AND 100 AND positionText = 'Disqualified';\t----- bird -----\tformula_1",
    "978": "SELECT location, lat, lng, COUNT(*) AS times_held FROM races JOIN circuits ON races.circuitId = circuits.circuitId WHERE circuits.country = 'Austria' GROUP BY location, lat, lng;\t----- bird -----\tformula_1",
    "979": "SELECT races.round FROM races JOIN results ON races.raceId = results.raceId WHERE results.positionOrder <= (SELECT MAX(positionOrder) FROM results) GROUP BY races.round ORDER BY COUNT(results.resultId) DESC LIMIT 1;\t----- bird -----\tformula_1",
    "980": "SELECT d.driverRef, d.nationality, d.dob FROM qualifying q JOIN drivers d ON q.driverId = d.driverId WHERE q.raceId = 23 AND q.q2 IS NOT NULL;\t----- bird -----\tformula_1",
    "981": "SELECT r.year, r.name, r.date, r.time FROM races r JOIN qualifying q ON r.raceId = q.raceId JOIN drivers d ON q.driverId = d.driverId WHERE d.dob = (SELECT MIN(dob) FROM drivers) ORDER BY r.date, r.time LIMIT 1;\t----- bird -----\tformula_1",
    "982": "SELECT COUNT(DISTINCT d.driverId) FROM drivers d JOIN results r ON d.driverId = r.driverId JOIN status s ON r.statusId = s.status WHERE d.nationality = 'American' AND s.status LIKE '%puncture%';\t----- bird -----\tformula_1",
    "983": "SELECT c.name, c.url FROM constructors c JOIN constructorStandings cs ON c.constructorId = cs.constructorId WHERE c.nationality = 'Italian' ORDER BY cs.points DESC LIMIT 1;\t----- bird -----\tformula_1",
    "984": "SELECT url FROM constructors WHERE constructorId = (SELECT constructorId FROM constructorStandings GROUP BY constructorId ORDER BY SUM(wins) DESC LIMIT 1);\t----- bird -----\tformula_1",
    "985": "SELECT d.forename, d.surname, lt.time FROM lapTimes lt JOIN drivers d ON lt.driverId = d.driverId JOIN races r ON lt.raceId = r.raceId WHERE r.name = 'French Grand Prix' AND lt.lap = 3 ORDER BY lt.milliseconds DESC LIMIT 1;\t----- bird -----\tformula_1",
    "986": "SELECT raceId, MIN(milliseconds) AS fastest_first_lap_time FROM lapTimes WHERE lap = 1 GROUP BY raceId ORDER BY fastest_first_lap_time ASC LIMIT 1;\t----- bird -----\tformula_1",
    "987": "SELECT AVG(STR_TO_DATE(r.fastestLapTime, '%i:%s.%f')) AS avg_fastest_lap_time FROM results r JOIN races ra ON r.raceId = ra.raceId WHERE ra.year = 2006 AND ra.name = 'United States Grand Prix' AND r.positionOrder <= 10;\t----- bird -----\tformula_1",
    "988": "SELECT d.forename, d.surname, AVG(p.milliseconds) AS avg_pit_stop_duration FROM drivers d JOIN pitStops p ON d.driverId = p.driverId WHERE d.nationality = 'German' AND d.dob BETWEEN '1980-01-01' AND '1985-12-31' GROUP BY d.driverId, d.forename, d.surname ORDER BY avg_pit_stop_duration ASC LIMIT 3;\t----- bird -----\tformula_1",
    "989": "SELECT d.forename, d.surname, r.time FROM results r JOIN races ra ON r.raceId = ra.raceId JOIN drivers d ON r.driverId = d.driverId WHERE ra.name = 'Canadian Grand Prix' AND ra.year = 2008 AND r.positionOrder = 1;\t----- bird -----\tformula_1",
    "990": "SELECT c.constructorRef, c.url FROM constructors c JOIN constructorStandings cs ON c.constructorId = cs.constructorId JOIN races r ON cs.raceId = r.raceId WHERE r.year = 2009 AND r.name = 'Singapore Grand Prix' AND cs.position = 1;\t----- bird -----\tformula_1",
    "991": "SELECT CONCAT(forename, ' ', surname) AS full_name, dob FROM drivers WHERE nationality = 'Austrian' AND dob BETWEEN '1981-01-01' AND '1991-12-31';\t----- bird -----\tformula_1",
    "992": "SELECT CONCAT(forename, ' ', surname) AS full_name, url, dob FROM drivers WHERE nationality = 'German' AND dob BETWEEN '1971-01-01' AND '1985-12-31' ORDER BY dob DESC;\t----- bird -----\tformula_1",
    "993": "SELECT location, country, lat, lng FROM circuits WHERE name = 'Hungaroring';\t----- bird -----\tformula_1",
    "994": "SELECT cr.points, c.name, c.nationality FROM constructorResults cr JOIN races r ON cr.raceId = r.raceId JOIN constructors c ON cr.constructorId = c.constructorId WHERE r.name = 'Monaco Grand Prix' AND r.year BETWEEN 1980 AND 2010 ORDER BY cr.points DESC LIMIT 1;\t----- bird -----\tformula_1",
    "995": "SELECT AVG(r.points) FROM results r JOIN drivers d ON r.driverId = d.driverId JOIN races ra ON r.raceId = ra.raceId WHERE d.forename = 'Lewis' AND d.surname = 'Hamilton' AND ra.name = 'Turkish Grand Prix';\t----- bird -----\tformula_1",
    "996": "SELECT AVG(race_count) AS average_races_per_year FROM (SELECT year, COUNT(*) AS race_count FROM races WHERE year BETWEEN 2001 AND 2010 GROUP BY year) subquery;\t----- bird -----\tformula_1",
    "997": "SELECT nationality FROM drivers GROUP BY nationality ORDER BY COUNT(*) DESC LIMIT 1;\t----- bird -----\tformula_1",
    "998": "SELECT COUNT(*) FROM results WHERE driverId = (SELECT driverId FROM driverStandings WHERE position = 91) AND position = 1;\t----- bird -----\tformula_1",
    "999": "SELECT r.name FROM races r JOIN results res ON r.raceId = res.raceId ORDER BY res.fastestLapSpeed DESC LIMIT 1;\t----- bird -----\tformula_1",
    "1000": "SELECT c.location FROM races r JOIN circuits c ON r.circuitId = c.circuitId ORDER BY r.date DESC, r.time DESC LIMIT 1;\t----- bird -----\tformula_1",
    "1001": "SELECT CONCAT(d.forename, ' ', d.surname) AS full_name FROM qualifying q JOIN races r ON q.raceId = r.raceId JOIN circuits c ON r.circuitId = c.circuitId JOIN drivers d ON q.driverId = d.driverId WHERE r.year = 2008 AND r.round = 3 AND c.name = 'Marina Bay Street Circuit' AND q.position = 1;\t----- bird -----\tformula_1",
    "1002": "SELECT CONCAT(d.forename, ' ', d.surname) AS full_name, d.nationality, r.name AS first_race_name FROM drivers d JOIN results res ON d.driverId = res.driverId JOIN races r ON res.raceId = r.raceId WHERE d.dob = (SELECT MAX(dob) FROM drivers) AND r.date = (SELECT MIN(r2.date) FROM results res2 JOIN races r2 ON res2.raceId = r2.raceId WHERE res2.driverId = d.driverId) LIMIT 1;\t----- bird -----\tformula_1",
    "1003": "SELECT MAX(accidents) FROM (SELECT driverId, COUNT(*) AS accidents FROM results JOIN races ON results.raceId = races.raceId WHERE races.name = 'Canadian Grand Prix' AND results.statusId IN (SELECT statusId FROM status WHERE status LIKE '%accident%') GROUP BY driverId) AS accident_counts;\t----- bird -----\tformula_1",
    "1004": "SELECT CONCAT(forename, ' ', surname) AS full_name, COUNT(*) AS wins FROM drivers JOIN results ON drivers.driverId = results.driverId WHERE drivers.dob = (SELECT MIN(dob) FROM drivers) AND results.position = 1 GROUP BY drivers.driverId;\t----- bird -----\tformula_1",
    "1005": "SELECT MAX(duration) FROM pitStops;\t----- bird -----\tformula_1",
    "1006": "SELECT MIN(time) AS fastest_lap_time FROM lapTimes;\t----- bird -----\tformula_1",
    "1007": "SELECT MAX(p.duration) FROM pitStops p JOIN drivers d ON p.driverId = d.driverId WHERE d.forename = 'Lewis' AND d.surname = 'Hamilton';\t----- bird -----\tformula_1",
    "1008": "SELECT pitStops.lap FROM pitStops JOIN races ON pitStops.raceId = races.raceId JOIN drivers ON pitStops.driverId = drivers.driverId WHERE races.year = 2011 AND races.name = 'Australian Grand Prix' AND drivers.forename = 'Lewis' AND drivers.surname = 'Hamilton';\t----- bird -----\tformula_1",
    "1009": "SELECT d.forename, d.surname, p.duration FROM pitStops p JOIN drivers d ON p.driverId = d.driverId JOIN races r ON p.raceId = r.raceId WHERE r.year = 2011 AND r.name = 'Australian Grand Prix';\t----- bird -----\tformula_1",
    "1010": "SELECT MIN(milliseconds) AS lap_record FROM lapTimes JOIN drivers ON lapTimes.driverId = drivers.driverId WHERE drivers.forename = 'Lewis' AND drivers.surname = 'Hamilton';\t----- bird -----\tformula_1",
    "1011": "SELECT d.forename, d.surname FROM lapTimes lt JOIN drivers d ON lt.driverId = d.driverId ORDER BY lt.milliseconds ASC LIMIT 1;\t----- bird -----\tformula_1",
    "1012": "SELECT circuits.name, results.position FROM results JOIN races ON results.raceId = races.raceId JOIN circuits ON races.circuitId = circuits.circuitId JOIN drivers ON results.driverId = drivers.driverId WHERE drivers.forename = 'Lewis' AND drivers.surname = 'Hamilton' AND results.fastestLap = (SELECT MAX(fastestLap) FROM results WHERE driverId = drivers.driverId) ORDER BY races.date;\t----- bird -----\tformula_1",
    "1013": "SELECT MIN(milliseconds) AS lap_record FROM lapTimes WHERE raceId IN (SELECT raceId FROM races WHERE circuitId = (SELECT circuitId FROM circuits WHERE name = 'Austrian Grand Prix Circuit'));\t----- bird -----\tformula_1",
    "1014": "SELECT lt.* FROM lapTimes lt JOIN races r ON lt.raceId = r.raceId JOIN circuits c ON r.circuitId = c.circuitId WHERE c.country = 'Italy';\t----- bird -----\tformula_1",
    "1015": "SELECT r.name, r.year, r.round FROM races r JOIN circuits c ON r.circuitId = c.circuitId JOIN lapTimes lt ON r.raceId = lt.raceId WHERE c.name = 'Austrian Grand Prix Circuit' ORDER BY lt.milliseconds ASC LIMIT 1;\t----- bird -----\tformula_1",
    "1016": "SELECT p.duration FROM pitStops p JOIN lapTimes l ON p.raceId = l.raceId AND p.driverId = l.driverId JOIN races r ON l.raceId = r.raceId JOIN circuits c ON r.circuitId = c.circuitId WHERE c.name = 'Austrian Grand Prix Circuit' AND l.milliseconds = (SELECT MIN(milliseconds) FROM lapTimes WHERE raceId = l.raceId);\t----- bird -----\tformula_1",
    "1017": "SELECT circuits.lat, circuits.lng FROM circuits JOIN races ON circuits.circuitId = races.circuitId JOIN lapTimes ON races.raceId = lapTimes.raceId WHERE lapTimes.time = '1:29.488' GROUP BY circuits.circuitId, circuits.lat, circuits.lng;\t----- bird -----\tformula_1",
    "1018": "SELECT AVG(p.milliseconds) FROM pitStops p JOIN drivers d ON p.driverId = d.driverId WHERE d.forename = 'Lewis' AND d.surname = 'Hamilton';\t----- bird -----\tformula_1",
    "1019": "SELECT AVG(lapTimes.milliseconds) FROM lapTimes JOIN races ON lapTimes.raceId = races.raceId JOIN circuits ON races.circuitId = circuits.circuitId WHERE circuits.country = 'Italy';\t----- bird -----\tformula_1",
    "1020": "SELECT player_api_id FROM Player_Attributes WHERE overall_rating = (SELECT MAX(overall_rating) FROM Player_Attributes) LIMIT 1;\t----- bird -----\teuropean_football_2",
    "1021": "SELECT player_name, height FROM Player WHERE height = (SELECT MAX(height) FROM Player);\t----- bird -----\teuropean_football_2",
    "1022": "SELECT preferred_foot FROM Player_Attributes WHERE potential = (SELECT MIN(potential) FROM Player_Attributes) LIMIT 1;\t----- bird -----\teuropean_football_2",
    "1023": "SELECT COUNT(DISTINCT pa.player_api_id) FROM Player_Attributes pa WHERE pa.overall_rating BETWEEN 60 AND 65 AND pa.attacking_work_rate > pa.defensive_work_rate;\t----- bird -----\teuropean_football_2",
    "1024": "SELECT player_api_id FROM Player_Attributes ORDER BY crossing DESC LIMIT 5;\t----- bird -----\teuropean_football_2",
    "1025": "SELECT l.name FROM League l JOIN Match m ON l.id = m.league_id WHERE m.season = '2016' GROUP BY l.name ORDER BY SUM(m.home_team_goal + m.away_team_goal) DESC LIMIT 1;\t----- bird -----\teuropean_football_2",
    "1026": "SELECT t.team_long_name FROM Match m JOIN Team t ON m.home_team_api_id = t.team_api_id WHERE m.season = '2016' GROUP BY t.team_long_name ORDER BY SUM(CASE WHEN m.home_team_goal < m.away_team_goal THEN 1 ELSE 0 END) ASC LIMIT 1;\t----- bird -----\teuropean_football_2",
    "1027": "SELECT p.player_name FROM Player p JOIN Player_Attributes pa ON p.player_api_id = pa.player_api_id GROUP BY p.player_name ORDER BY SUM(pa.penalties) DESC LIMIT 10;\t----- bird -----\teuropean_football_2",
    "1028": "SELECT t.team_long_name, COUNT(*) AS away_wins FROM Match m JOIN League l ON m.league_id = l.id JOIN Country c ON l.country_id = c.id JOIN Team t ON m.away_team_api_id = t.team_api_id WHERE c.name = 'Scotland' AND l.name = 'Premier League' AND m.season = '2010' AND m.away_team_goal > m.home_team_goal GROUP BY t.team_long_name ORDER BY away_wins DESC LIMIT 1;\t----- bird -----\teuropean_football_2",
    "1029": "SELECT team_long_name, buildUpPlaySpeed FROM Team_Attributes JOIN Team ON Team_Attributes.team_api_id = Team.team_api_id ORDER BY buildUpPlaySpeed DESC LIMIT 4;\t----- bird -----\teuropean_football_2",
    "1030": "SELECT l.name FROM League l JOIN Match m ON l.id = m.league_id WHERE m.season = '2016' AND m.home_team_goal = m.away_team_goal GROUP BY l.name ORDER BY COUNT(*) DESC LIMIT 1;\t----- bird -----\teuropean_football_2",
    "1031": "SELECT DISTINCT p.player_name, FLOOR(DATEDIFF('2015-12-31', p.birthday)/365.25) AS age FROM Player p JOIN Player_Attributes pa ON p.player_api_id = pa.player_api_id WHERE pa.sprint_speed >= 97 AND pa.date BETWEEN '2013-01-01' AND '2015-12-31';\t----- bird -----\teuropean_football_2",
    "1032": "SELECT League.name, COUNT(Match.id) AS match_count FROM Match JOIN League ON Match.league_id = League.id GROUP BY League.id, League.name ORDER BY match_count DESC LIMIT 1;\t----- bird -----\teuropean_football_2",
    "1033": "SELECT AVG(height) FROM Player WHERE birthday BETWEEN '1990-01-01' AND '1995-12-31';\t----- bird -----\teuropean_football_2",
    "1034": "SELECT player_api_id FROM Player_Attributes WHERE YEAR(date) = 2010 GROUP BY player_api_id HAVING AVG(overall_rating) > (SELECT AVG(overall_rating) FROM Player_Attributes WHERE YEAR(date) = 2010) ORDER BY AVG(overall_rating) DESC;\t----- bird -----\teuropean_football_2",
    "1035": "SELECT DISTINCT team_fifa_api_id FROM Team_Attributes WHERE buildUpPlaySpeed > 50 AND buildUpPlaySpeed < 60;\t----- bird -----\teuropean_football_2",
    "1036": "SELECT t.team_long_name FROM Team t JOIN Team_Attributes ta ON t.team_api_id = ta.team_api_id WHERE YEAR(ta.date) = 2012 GROUP BY t.team_long_name HAVING AVG(ta.buildUpPlayPassing) > (SELECT AVG(buildUpPlayPassing) FROM Team_Attributes WHERE YEAR(date) = 2012);\t----- bird -----\teuropean_football_2",
    "1037": "SELECT 100.0 * SUM(CASE WHEN pa.preferred_foot = 'left' THEN 1 ELSE 0 END) / COUNT(*) AS left_foot_percentage FROM Player p JOIN Player_Attributes pa ON p.player_api_id = pa.player_api_id WHERE YEAR(p.birthday) BETWEEN 1987 AND 1992;\t----- bird -----\teuropean_football_2",
    "1038": "SELECT League.name, SUM(Match.home_team_goal + Match.away_team_goal) AS total_goals FROM Match JOIN League ON Match.league_id = League.id GROUP BY League.name ORDER BY total_goals ASC LIMIT 5;\t----- bird -----\teuropean_football_2",
    "1039": "SELECT AVG(pa.long_shots) FROM Player p JOIN Player_Attributes pa ON p.player_api_id = pa.player_api_id WHERE p.player_name = 'Ahmed Samir Farag';\t----- bird -----\teuropean_football_2",
    "1040": "SELECT p.player_name FROM Player p JOIN Player_Attributes pa ON p.player_api_id = pa.player_api_id WHERE p.height > 180 GROUP BY p.player_name ORDER BY AVG(pa.heading_accuracy) DESC LIMIT 10;\t----- bird -----\teuropean_football_2",
    "1041": "SELECT t.team_long_name FROM Team_Attributes ta JOIN Team t ON ta.team_api_id = t.team_api_id WHERE ta.buildUpPlayDribblingClass = 'Normal' AND YEAR(ta.date) = 2014 AND ta.chanceCreationPassing < (SELECT AVG(chanceCreationPassing) FROM Team_Attributes WHERE YEAR(date) = 2014) ORDER BY ta.chanceCreationPassing DESC;\t----- bird -----\teuropean_football_2",
    "1042": "SELECT L.name FROM League L JOIN Match M ON L.id = M.league_id WHERE M.season = '2009/2010' GROUP BY L.name HAVING AVG(M.home_team_goal) > AVG(M.away_team_goal);\t----- bird -----\teuropean_football_2",
    "1043": "SELECT team_short_name FROM Team WHERE team_long_name = 'Queens Park Rangers';\t----- bird -----\teuropean_football_2",
    "1044": "SELECT player_name FROM Player WHERE YEAR(birthday) = 1970 AND MONTH(birthday) = 10;\t----- bird -----\teuropean_football_2",
    "1045": "SELECT pa.attacking_work_rate FROM Player p JOIN Player_Attributes pa ON p.player_api_id = pa.player_api_id WHERE p.player_name = 'Franco Zennaro' ORDER BY pa.date DESC LIMIT 1;\t----- bird -----\teuropean_football_2",
    "1046": "SELECT AVG(defenceTeamWidth) AS avg_freedom_of_movement FROM Team_Attributes WHERE team_api_id = (SELECT team_api_id FROM Team WHERE team_long_name = 'ADO Den Haag') AND date IN (SELECT date FROM Match WHERE (home_team_api_id = (SELECT team_api_id FROM Team WHERE team_long_name = 'ADO Den Haag') OR away_team_api_id = (SELECT team_api_id FROM Team WHERE team_long_name = 'ADO Den Haag'))) AND defenceTeamWidthClass IN ('High', 'Medium');\t----- bird -----\teuropean_football_2",
    "1047": "SELECT pa.finishing FROM Player p JOIN Player_Attributes pa ON p.player_api_id = pa.player_api_id WHERE p.player_name = 'Francois Affolter' AND pa.date = '2014-09-18' LIMIT 1;\t----- bird -----\teuropean_football_2",
    "1048": "SELECT overall_rating FROM Player_Attributes PA JOIN Player P ON PA.player_api_id = P.player_api_id WHERE P.player_name = 'Gabriel Tamas' AND YEAR(PA.date) = 2011 ORDER BY PA.date;\t----- bird -----\teuropean_football_2",
    "1049": "SELECT COUNT(*) FROM Match m JOIN League l ON m.league_id = l.id JOIN Country c ON m.country_id = c.id WHERE m.season = '2015/2016' AND l.name = 'Premier League' AND c.name = 'Scotland';\t----- bird -----\teuropean_football_2",
    "1050": "SELECT preferred_foot FROM Player_Attributes PA JOIN Player P ON PA.player_api_id = P.player_api_id ORDER BY P.birthday DESC LIMIT 1;\t----- bird -----\teuropean_football_2",
    "1051": "SELECT player_name FROM Player JOIN Player_Attributes ON Player.player_api_id = Player_Attributes.player_api_id WHERE potential = (SELECT MAX(potential) FROM Player_Attributes);\t----- bird -----\teuropean_football_2",
    "1052": "SELECT COUNT(DISTINCT p.player_api_id) FROM Player p JOIN Player_Attributes pa ON p.player_api_id = pa.player_api_id WHERE p.weight < 130 AND pa.preferred_foot = 'left' AND pa.attacking_work_rate = 'left';\t----- bird -----\teuropean_football_2",
    "1053": "SELECT DISTINCT Team.team_short_name FROM Team JOIN Team_Attributes ON Team.team_api_id = Team_Attributes.team_api_id WHERE Team_Attributes.chanceCreationPassingClass = 'Risky';\t----- bird -----\teuropean_football_2",
    "1054": "SELECT pa.defensive_work_rate FROM Player p JOIN Player_Attributes pa ON p.player_api_id = pa.player_api_id WHERE p.player_name = 'David Wilson';\t----- bird -----\teuropean_football_2",
    "1055": "SELECT birthday FROM Player WHERE player_api_id = (SELECT player_api_id FROM Player_Attributes ORDER BY overall_rating DESC LIMIT 1) LIMIT 1;\t----- bird -----\teuropean_football_2",
    "1056": "SELECT League.name FROM League JOIN Country ON League.country_id = Country.id WHERE Country.name = 'Netherlands';\t----- bird -----\teuropean_football_2",
    "1057": "SELECT AVG(home_team_goal) FROM Match JOIN Country ON Match.country_id = Country.id WHERE Country.name = 'Poland' AND Match.season = '2010/2011';\t----- bird -----\teuropean_football_2",
    "1058": "SELECT p.player_name, AVG(pa.finishing) AS avg_finishing FROM Player p JOIN Player_Attributes pa ON p.player_api_id = pa.player_api_id WHERE p.height IN (SELECT MAX(height) FROM Player UNION SELECT MIN(height) FROM Player) GROUP BY p.player_name ORDER BY avg_finishing DESC LIMIT 1;\t----- bird -----\teuropean_football_2",
    "1059": "SELECT player_name FROM Player WHERE height > 180;\t----- bird -----\teuropean_football_2",
    "1060": "SELECT COUNT(*) FROM Player WHERE birthday > '1990-12-31';\t----- bird -----\teuropean_football_2",
    "1061": "SELECT COUNT(*) FROM Player WHERE player_name LIKE 'Adam %' AND weight > 170;\t----- bird -----\teuropean_football_2",
    "1062": "SELECT DISTINCT p.player_name FROM Player p JOIN Player_Attributes pa ON p.player_api_id = pa.player_api_id WHERE pa.overall_rating > 80 AND pa.date BETWEEN '2008-01-01' AND '2010-12-31';\t----- bird -----\teuropean_football_2",
    "1063": "SELECT pa.potential FROM Player p JOIN Player_Attributes pa ON p.player_api_id = pa.player_api_id WHERE p.player_name = 'Aaron Doran' ORDER BY pa.date DESC LIMIT 1;\t----- bird -----\teuropean_football_2",
    "1064": "SELECT DISTINCT p.player_name FROM Player p JOIN Player_Attributes pa ON p.player_api_id = pa.player_api_id WHERE pa.preferred_foot = 'left';\t----- bird -----\teuropean_football_2",
    "1065": "SELECT DISTINCT Team.team_long_name FROM Team JOIN Team_Attributes ON Team.team_api_id = Team_Attributes.team_api_id WHERE Team_Attributes.buildUpPlaySpeedClass = 'fast';\t----- bird -----\teuropean_football_2",
    "1066": "SELECT chanceCreationPassingClass FROM Team_Attributes WHERE team_api_id = (SELECT id FROM Team WHERE team_long_name = 'CLB') ORDER BY date DESC LIMIT 1;\t----- bird -----\teuropean_football_2",
    "1067": "SELECT DISTINCT t.team_short_name FROM Team t JOIN Team_Attributes ta ON t.team_api_id = ta.team_api_id WHERE ta.buildUpPlayPassing > 70;\t----- bird -----\teuropean_football_2",
    "1068": "SELECT AVG(pa.overall_rating) FROM Player_Attributes pa JOIN Player p ON pa.player_api_id = p.player_api_id WHERE p.height > 170 AND pa.date BETWEEN '2010-01-01' AND '2015-12-31';\t----- bird -----\teuropean_football_2",
    "1069": "SELECT player_name FROM Player ORDER BY height ASC LIMIT 1;\t----- bird -----\teuropean_football_2",
    "1070": "SELECT Country.name FROM League JOIN Country ON League.country_id = Country.id WHERE League.name = 'Italy Serie A';\t----- bird -----\teuropean_football_2",
    "1071": "SELECT team_short_name FROM Team JOIN Team_Attributes ON Team.team_api_id = Team_Attributes.team_api_id WHERE buildUpPlaySpeed = 31 AND buildUpPlayDribbling = 53 AND buildUpPlayPassing = 32;\t----- bird -----\teuropean_football_2",
    "1072": "SELECT AVG(overall_rating) FROM Player_Attributes PA JOIN Player P ON PA.player_api_id = P.player_api_id WHERE P.player_name = 'Aaron Doran';\t----- bird -----\teuropean_football_2",
    "1073": "SELECT COUNT(*) FROM Match m JOIN League l ON m.league_id = l.id JOIN Country c ON l.country_id = c.id WHERE c.name = 'Germany' AND l.name = '1. Bundesliga' AND m.date >= '2008-08-01' AND m.date < '2008-11-01';\t----- bird -----\teuropean_football_2",
    "1074": "SELECT DISTINCT Team.team_short_name FROM Match JOIN Team ON Match.home_team_api_id = Team.team_api_id WHERE Match.home_team_goal = 10;\t----- bird -----\teuropean_football_2",
    "1075": "SELECT p.player_name FROM Player p JOIN Player_Attributes pa ON p.player_api_id = pa.player_api_id WHERE pa.potential = 61 AND pa.balance = (SELECT MAX(balance) FROM Player_Attributes WHERE potential = 61);\t----- bird -----\teuropean_football_2",
    "1076": "SELECT ABS(AVG(CASE WHEN p.player_name = 'Abdou Diallo' THEN pa.ball_control END) - AVG(CASE WHEN p.player_name = 'Aaron Appindangoye' THEN pa.ball_control END)) AS ball_control_difference FROM Player p JOIN Player_Attributes pa ON p.player_api_id = pa.player_api_id WHERE p.player_name IN ('Abdou Diallo', 'Aaron Appindangoye');\t----- bird -----\teuropean_football_2",
    "1077": "SELECT team_long_name FROM Team WHERE team_short_name = 'GEN';\t----- bird -----\teuropean_football_2",
    "1078": "SELECT player_name, birthday FROM Player WHERE player_name IN ('Aaron Lennon', 'Abdelaziz Barrada') ORDER BY birthday ASC LIMIT 1;\t----- bird -----\teuropean_football_2",
    "1079": "SELECT player_name FROM Player ORDER BY height DESC LIMIT 1;\t----- bird -----\teuropean_football_2",
    "1080": "SELECT COUNT(DISTINCT pa.player_api_id) FROM Player_Attributes pa JOIN Match m ON (pa.player_api_id IN (m.home_player_1, m.home_player_2, m.home_player_3, m.home_player_4, m.home_player_5, m.home_player_6, m.home_player_7, m.home_player_8, m.home_player_9, m.home_player_10, m.home_player_11, m.away_player_1, m.away_player_2, m.away_player_3, m.away_player_4, m.away_player_5, m.away_player_6, m.away_player_7, m.away_player_8, m.away_player_9, m.away_player_10, m.away_player_11)) WHERE pa.preferred_foot = 'left' AND ((m.home_team_goal > m.away_team_goal AND pa.player_api_id IN (m.home;\t----- bird -----\teuropean_football_2",
    "1081": "SELECT Country.name FROM League JOIN Country ON League.country_id = Country.id WHERE League.name = 'Belgium Jupiler League';\t----- bird -----\teuropean_football_2",
    "1082": "SELECT League.name FROM League JOIN Country ON League.country_id = Country.id WHERE Country.name = 'Germany';\t----- bird -----\teuropean_football_2",
    "1083": "SELECT player_name FROM Player JOIN Player_Attributes ON Player.player_api_id = Player_Attributes.player_api_id ORDER BY strength DESC LIMIT 1;\t----- bird -----\teuropean_football_2",
    "1084": "SELECT COUNT(DISTINCT p.player_api_id) FROM Player p JOIN Player_Attributes pa ON p.player_api_id = pa.player_api_id JOIN Match m ON (m.home_player_1 = p.player_api_id OR m.home_player_2 = p.player_api_id OR m.home_player_3 = p.player_api_id OR m.home_player_4 = p.player_api_id OR m.home_player_5 = p.player_api_id OR m.home_player_6 = p.player_api_id OR m.home_player_7 = p.player_api_id OR m.home_player_8 = p.player_api_id OR m.home_player_9 = p.player_api_id OR m.home_player_10 = p.player_api_id OR m.home_player_11 = p.player_api_id OR m.away_player_1 = p.player_api_id OR m.away_player_2 = p.player_api_id OR m.away_player_3 = p.player_api_id OR m.away_player_4 = p.player_api;\t----- bird -----\teuropean_football_2",
    "1085": "SELECT p.player_name, AVG(pa.crossing) AS avg_crossing FROM Player p JOIN Player_Attributes pa ON p.player_api_id = pa.player_api_id WHERE p.player_name IN ('Alexis', 'Ariel Borysiuk', 'Arouna Kone') GROUP BY p.player_name ORDER BY avg_crossing DESC LIMIT 1;\t----- bird -----\teuropean_football_2",
    "1086": "SELECT pa.heading_accuracy FROM Player_Attributes pa JOIN Player p ON pa.player_api_id = p.player_api_id WHERE p.player_name = 'Ariel Borysiuk' ORDER BY pa.date DESC LIMIT 1;\t----- bird -----\teuropean_football_2",
    "1087": "SELECT COUNT(DISTINCT p.player_api_id) FROM Player p JOIN Player_Attributes pa ON p.player_api_id = pa.player_api_id WHERE p.height > 180 AND pa.volleys > 70;\t----- bird -----\teuropean_football_2",
    "1088": "SELECT DISTINCT p.player_name FROM Player p JOIN Player_Attributes pa ON p.player_api_id = pa.player_api_id WHERE pa.volley > 70 AND pa.dribbling > 70;\t----- bird -----\teuropean_football_2",
    "1089": "SELECT COUNT(*) FROM Match m JOIN Country c ON m.country_id = c.id WHERE m.season = '2008/2009' AND c.name = 'Belgium';\t----- bird -----\teuropean_football_2",
    "1090": "SELECT pa.long_passing FROM Player_Attributes pa JOIN Player p ON pa.player_api_id = p.player_api_id ORDER BY p.birthday ASC LIMIT 1;\t----- bird -----\teuropean_football_2",
    "1091": "SELECT COUNT(*) FROM Match m JOIN League l ON m.league_id = l.id JOIN Country c ON l.country_id = c.id WHERE c.name = 'Belgium' AND l.name = 'Jupiler League' AND m.date >= '2009-04-01' AND m.date < '2009-05-01';\t----- bird -----\teuropean_football_2",
    "1092": "SELECT League.name FROM Match JOIN League ON Match.league_id = League.id WHERE Match.season = '2008/2009' GROUP BY League.name ORDER BY COUNT(Match.id) DESC LIMIT 1;\t----- bird -----\teuropean_football_2",
    "1093": "SELECT AVG(pa.overall_rating) FROM Player_Attributes pa JOIN Player p ON pa.player_api_id = p.player_api_id WHERE p.birthday < '1986-01-01';\t----- bird -----\teuropean_football_2",
    "1094": "SELECT ((borysiuk_avg - puel_avg) / puel_avg) * 100 AS percentage_higher FROM (SELECT AVG(pa.overall_rating) AS borysiuk_avg FROM Player p JOIN Player_Attributes pa ON p.player_api_id = pa.player_api_id WHERE p.player_name = 'Ariel Borysiuk') AS borysiuk, (SELECT AVG(pa.overall_rating) AS puel_avg FROM Player p JOIN Player_Attributes pa ON p.player_api_id = pa.player_api_id WHERE p.player_name = 'Paulin Puel') AS puel;\t----- bird -----\teuropean_football_2",
    "1095": "SELECT AVG(buildUpPlaySpeed) FROM Team_Attributes WHERE team_api_id = (SELECT team_api_id FROM Team WHERE team_long_name = 'Heart of Midlothian');\t----- bird -----\teuropean_football_2",
    "1096": "SELECT AVG(pa.overall_rating) FROM Player_Attributes pa JOIN Player p ON pa.player_api_id = p.player_api_id WHERE p.player_name = 'Pietro Marino';\t----- bird -----\teuropean_football_2",
    "1097": "SELECT SUM(crossing) AS total_crossing_score FROM Player_Attributes PA JOIN Player P ON PA.player_api_id = P.player_api_id WHERE P.player_name = 'Aaron Lennox';\t----- bird -----\teuropean_football_2",
    "1098": "SELECT MAX(Team_Attributes.chanceCreationPassing) AS highest_chance_creation_passing, Team_Attributes.chanceCreationPassingClass FROM Team JOIN Team_Attributes ON Team.team_api_id = Team_Attributes.team_api_id WHERE Team.team_long_name = 'Ajax' GROUP BY Team_Attributes.chanceCreationPassingClass ORDER BY highest_chance_creation_passing DESC LIMIT 1;\t----- bird -----\teuropean_football_2",
    "1099": "SELECT preferred_foot FROM Player_Attributes PA JOIN Player P ON PA.player_api_id = P.player_api_id WHERE P.player_name = 'Abdou Diallo' ORDER BY PA.date DESC LIMIT 1;\t----- bird -----\teuropean_football_2",
    "1100": "SELECT MAX(pa.overall_rating) FROM Player_Attributes pa JOIN Player p ON pa.player_api_id = p.player_api_id WHERE p.player_name = 'Dorlan Pabon';\t----- bird -----\teuropean_football_2",
    "1101": "SELECT AVG(away_team_goal) FROM Match JOIN Team ON Match.away_team_api_id = Team.team_api_id JOIN League ON Match.league_id = League.id JOIN Country ON League.country_id = Country.id WHERE Team.team_long_name = 'Parma' AND Country.name = 'Italy';\t----- bird -----\teuropean_football_2",
    "1102": "SELECT p.player_name FROM Player p JOIN Player_Attributes pa ON p.player_api_id = pa.player_api_id WHERE pa.overall_rating = 77 AND pa.date = '2016-06-23' ORDER BY p.birthday ASC LIMIT 1;\t----- bird -----\teuropean_football_2",
    "1103": "SELECT overall_rating FROM Player_Attributes PA JOIN Player P ON PA.player_api_id = P.player_api_id WHERE P.player_name = 'Aaron Mooy' AND PA.date = '2016-02-04';\t----- bird -----\teuropean_football_2",
    "1104": "SELECT pa.potential FROM Player_Attributes pa JOIN Player p ON pa.player_api_id = p.player_api_id WHERE p.player_name = 'Francesco Parravicini' AND pa.date = '2010-08-30';\t----- bird -----\teuropean_football_2",
    "1105": "SELECT attacking_work_rate FROM Player_Attributes PA JOIN Player P ON PA.player_api_id = P.player_api_id WHERE P.player_name = 'Francesco Migliore' AND PA.date = '2015-05-01' LIMIT 1;\t----- bird -----\teuropean_football_2",
    "1106": "SELECT pa.defensive_work_rate FROM Player p JOIN Player_Attributes pa ON p.player_api_id = pa.player_api_id WHERE p.player_name = 'Kevin Berigaud' AND pa.date = '2013-02-22';\t----- bird -----\teuropean_football_2",
    "1107": "SELECT date FROM Player_Attributes WHERE player_api_id = (SELECT player_api_id FROM Player WHERE player_name = 'Kevin Constant') AND crossing = (SELECT MAX(crossing) FROM Player_Attributes WHERE player_api_id = (SELECT player_api_id FROM Player WHERE player_name = 'Kevin Constant')) ORDER BY date ASC LIMIT 1;\t----- bird -----\teuropean_football_2",
    "1108": "SELECT buildUpPlaySpeedClass FROM Team_Attributes JOIN Team ON Team_Attributes.team_api_id = Team.team_api_id WHERE Team.team_long_name = 'Willem II' AND Team_Attributes.date = '2011-02-22' LIMIT 1;\t----- bird -----\teuropean_football_2",
    "1109": "SELECT buildUpPlayDribblingClass FROM Team_Attributes TA JOIN Team T ON TA.team_api_id = T.team_api_id WHERE T.team_short_name = 'LEI' AND TA.date = '2015-09-10' LIMIT 1;\t----- bird -----\teuropean_football_2",
    "1110": "SELECT ta.buildUpPlayPassingClass FROM Team_Attributes ta JOIN Team t ON ta.team_api_id = t.team_api_id WHERE t.team_long_name = 'FC Lorient' AND ta.date = '2010-02-22' LIMIT 1;\t----- bird -----\teuropean_football_2",
    "1111": "SELECT ta.chanceCreationPassingClass FROM Team_Attributes ta JOIN Team t ON ta.team_api_id = t.team_api_id WHERE t.team_long_name = 'PEC Zwolle' AND ta.date = '2013-09-20';\t----- bird -----\teuropean_football_2",
    "1112": "SELECT ta.chanceCreationCrossingClass FROM Team_Attributes ta JOIN Team t ON ta.team_api_id = t.team_api_id WHERE t.team_long_name = 'Hull City' AND ta.date = '2010-02-22' LIMIT 1;\t----- bird -----\teuropean_football_2",
    "1113": "SELECT defenceAggressionClass FROM Team_Attributes WHERE team_api_id = (SELECT team_api_id FROM Team WHERE team_long_name = 'Hannover 96') AND date = '2015-09-10' LIMIT 1;\t----- bird -----\teuropean_football_2",
    "1114": "SELECT AVG(overall_rating) FROM Player_Attributes PA JOIN Player P ON PA.player_api_id = P.player_api_id WHERE P.player_name = 'Marko Arnautovic' AND PA.date BETWEEN '2007-02-22' AND '2016-04-21';\t----- bird -----\teuropean_football_2",
    "1115": "SELECT ((ld.overall_rating - jb.overall_rating) / jb.overall_rating) * 100 AS percentage_higher FROM Player_Attributes ld JOIN Player pld ON ld.player_api_id = pld.player_api_id JOIN Player_Attributes jb ON jb.player_api_id = (SELECT player_api_id FROM Player WHERE player_name = 'Jordan Bowery') JOIN Player pjb ON jb.player_api_id = pjb.player_api_id WHERE pld.player_name = 'Landon Donovan' AND ld.date = '2013-07-12' AND jb.date = '2013-07-12';\t----- bird -----\teuropean_football_2",
    "1116": "SELECT player_name FROM Player WHERE height = (SELECT MAX(height) FROM Player);\t----- bird -----\teuropean_football_2",
    "1117": "SELECT player_api_id FROM Player ORDER BY weight DESC LIMIT 10;\t----- bird -----\teuropean_football_2",
    "1118": "SELECT player_name FROM Player WHERE TIMESTAMPDIFF(YEAR, birthday, CURDATE()) >= 35;\t----- bird -----\teuropean_football_2",
    "1119": "SELECT SUM(m.home_team_goal) FROM Match m JOIN Player p ON p.player_api_id IN (m.home_player_1, m.home_player_2, m.home_player_3, m.home_player_4, m.home_player_5, m.home_player_6, m.home_player_7, m.home_player_8, m.home_player_9, m.home_player_10, m.home_player_11) WHERE p.player_name = 'Aaron Lennon';\t----- bird -----\teuropean_football_2",
    "1120": "SELECT SUM(M.away_team_goal) FROM Match M JOIN Player P1 ON (M.away_player_1 = P1.player_api_id OR M.away_player_2 = P1.player_api_id OR M.away_player_3 = P1.player_api_id OR M.away_player_4 = P1.player_api_id OR M.away_player_5 = P1.player_api_id OR M.away_player_6 = P1.player_api_id OR M.away_player_7 = P1.player_api_id OR M.away_player_8 = P1.player_api_id OR M.away_player_9 = P1.player_api_id OR M.away_player_10 = P1.player_api_id OR M.away_player_11 = P1.player_api_id) JOIN Player P2 ON (M.away_player_1 = P2.player_api_id OR M.away_player_2 = P2.player_api_id OR M.away_player_3 = P;\t----- bird -----\teuropean_football_2",
    "1121": "SELECT SUM(m.home_team_goal) FROM Match m JOIN Player p ON p.player_api_id IN (m.home_player_1, m.home_player_2, m.home_player_3, m.home_player_4, m.home_player_5, m.home_player_6, m.home_player_7, m.home_player_8, m.home_player_9, m.home_player_10, m.home_player_11) WHERE TIMESTAMPDIFF(YEAR, p.birthday, m.date) <= 30;\t----- bird -----\teuropean_football_2",
    "1122": "SELECT player_name FROM Player JOIN Player_Attributes ON Player.player_api_id = Player_Attributes.player_api_id ORDER BY overall_rating DESC LIMIT 1;\t----- bird -----\teuropean_football_2",
    "1123": "SELECT player_name FROM Player WHERE player_api_id IN (SELECT player_api_id FROM Player_Attributes WHERE potential = (SELECT MAX(potential) FROM Player_Attributes));\t----- bird -----\teuropean_football_2",
    "1124": "SELECT DISTINCT p.player_name FROM Player p JOIN Player_Attributes pa ON p.player_api_id = pa.player_api_id JOIN Match m ON (m.home_player_1 = p.player_api_id OR m.home_player_2 = p.player_api_id OR m.home_player_3 = p.player_api_id OR m.home_player_4 = p.player_api_id OR m.home_player_5 = p.player_api_id OR m.home_player_6 = p.player_api_id OR m.home_player_7 = p.player_api_id OR m.home_player_8 = p.player_api_id OR m.home_player_9 = p.player_api_id OR m.home_player_10 = p.player_api_id OR m.home_player_11 = p.player_api_id OR m.away_player_1 = p.player_api_id OR m.away_player_2 = p.player_api_id OR m.away_player_3 = p.player_api_id OR m.away_player_4 = p.player_api_id OR m.away;\t----- bird -----\teuropean_football_2",
    "1125": "SELECT player_name FROM Player JOIN Player_Attributes ON Player.player_api_id = Player_Attributes.player_api_id WHERE finishing = 1 ORDER BY birthday ASC LIMIT 1;\t----- bird -----\teuropean_football_2",
    "1126": "SELECT DISTINCT Player.player_name FROM Player JOIN Country ON Player.player_api_id IN (SELECT player_api_id FROM Player_Attributes) JOIN Match ON (Match.home_player_1 = Player.player_api_id OR Match.home_player_2 = Player.player_api_id OR Match.home_player_3 = Player.player_api_id OR Match.home_player_4 = Player.player_api_id OR Match.home_player_5 = Player.player_api_id OR Match.home_player_6 = Player.player_api_id OR Match.home_player_7 = Player.player_api_id OR Match.home_player_8 = Player.player_api_id OR Match.home_player_9 = Player.player_api_id OR Match.home_player_10 = Player.player_api_id OR Match.home_player_11 = Player.player_api_id OR Match.away_player_1 = Player.player_api_id OR Match.away_player_2 = Player.player_api_id OR Match.away_player_3 = Player.player_api_id OR Match.away_player_4 = Player.player_api_id OR Match.aw;\t----- bird -----\teuropean_football_2",
    "1127": "SELECT DISTINCT p.player_name, c.name AS country FROM Player_Attributes pa JOIN Player p ON pa.player_api_id = p.player_api_id JOIN Country c ON c.id = (SELECT country_id FROM Match m WHERE m.home_player_1 = p.player_api_id OR m.home_player_2 = p.player_api_id OR m.home_player_3 = p.player_api_id OR m.home_player_4 = p.player_api_id OR m.home_player_5 = p.player_api_id OR m.home_player_6 = p.player_api_id OR m.home_player_7 = p.player_api_id OR m.home_player_8 = p.player_api_id OR m.home_player_9 = p.player_api_id OR m.home_player_10 = p.player_api_id OR m.home_player_11 = p.player_api_id OR m.away_player_1 = p.player_api_id OR m.away_player_2 = p.player_api_id OR m.away_player_3 = p.player_api_id OR;\t----- bird -----\teuropean_football_2",
    "1128": "SELECT Country.name, AVG(Player.weight) AS avg_weight FROM Player JOIN Country ON Player.player_api_id IN (SELECT player_api_id FROM Player_Attributes) JOIN League ON League.country_id = Country.id JOIN Match ON Match.league_id = League.id JOIN Team ON Team.team_api_id IN (Match.home_team_api_id, Match.away_team_api_id) WHERE Player.player_api_id IN (SELECT player_api_id FROM Player_Attributes) GROUP BY Country.name ORDER BY avg_weight DESC LIMIT 1;\t----- bird -----\teuropean_football_2",
    "1129": "SELECT DISTINCT Team.team_long_name FROM Team JOIN Team_Attributes ON Team.team_api_id = Team_Attributes.team_api_id WHERE Team_Attributes.buildUpPlaySpeedClass = 'slow';\t----- bird -----\teuropean_football_2",
    "1130": "SELECT DISTINCT t.team_short_name FROM Team t JOIN Team_Attributes ta ON t.team_api_id = ta.team_api_id WHERE ta.chanceCreationPassingClass = 'C' OR ta.chanceCreationPassingClass = 'D' OR ta.chanceCreationPassingClass = 'E' OR ta.chanceCreationPassingClass = 'F' OR ta.chanceCreationPassingClass = 'G' OR ta.chanceCreationPassingClass = 'H' OR ta.chanceCreationPassingClass = 'I' OR ta.chanceCreationPassingClass = 'J' OR ta.chanceCreationPassingClass = 'K' OR ta.chanceCreationPassingClass = 'L' OR ta.chanceCreationPassingClass = 'M' OR ta.chanceCreationPassingClass = 'N' OR ta.chanceCreationPassingClass = 'O' OR ta.chanceCreationPassingClass = 'P' OR ta.chanceCreationPassingClass = 'Q' OR ta.chanceCreationPassingClass = 'R';\t----- bird -----\teuropean_football_2",
    "1131": "SELECT AVG(height) FROM Player JOIN Country ON Country.name = 'Italy' WHERE Player.player_api_id IN (SELECT player_api_id FROM Player_Attributes) AND Country.id = (SELECT country_id FROM League WHERE id IN (SELECT league_id FROM Match WHERE home_team_api_id = Player.player_api_id OR away_team_api_id = Player.player_api_id));\t----- bird -----\teuropean_football_2",
    "1132": "SELECT player_name FROM Player WHERE height > 180 ORDER BY player_name ASC LIMIT 3;\t----- bird -----\teuropean_football_2",
    "1133": "SELECT COUNT(*) FROM Player WHERE player_name LIKE 'Aaron %' AND birthday > '1999-12-31';\t----- bird -----\teuropean_football_2",
    "1134": "SELECT ABS(pa1.jumping - pa2.jumping) AS jumping_difference FROM Player_Attributes pa1 JOIN Player_Attributes pa2 ON 1=1 WHERE pa1.player_api_id = 6 AND pa2.player_api_id = 23 ORDER BY pa1.date DESC, pa2.date DESC LIMIT 1;\t----- bird -----\teuropean_football_2",
    "1135": "SELECT player_api_id FROM Player_Attributes WHERE preferred_foot = 'right' ORDER BY potential ASC LIMIT 5;\t----- bird -----\teuropean_football_2",
    "1136": "SELECT COUNT(DISTINCT pa.player_api_id) FROM Player_Attributes pa JOIN Player p ON pa.player_api_id = p.player_api_id WHERE pa.crossing = (SELECT MAX(crossing) FROM Player_Attributes) AND p.preferred_foot = 'Left' AND pa.attacking_work_rate IS NOT NULL;\t----- bird -----\teuropean_football_2",
    "1137": "SELECT 100.0 * SUM(CASE WHEN strength > 80 AND stamina > 80 THEN 1 ELSE 0 END) / COUNT(*) AS percentage FROM Player_Attributes;\t----- bird -----\teuropean_football_2",
    "1138": "SELECT Country.name FROM League JOIN Country ON League.country_id = Country.id WHERE League.name = 'Poland Ekstraklasa';\t----- bird -----\teuropean_football_2",
    "1139": "SELECT home_team_goal, away_team_goal FROM Match JOIN League ON Match.league_id = League.id WHERE Match.date = '2008-09-24' AND League.name = 'Belgian Jupiler League';\t----- bird -----\teuropean_football_2",
    "1140": "SELECT sprint_speed, agility, acceleration FROM Player_Attributes PA JOIN Player P ON PA.player_api_id = P.player_api_id WHERE P.player_name = 'Alexis Blin' ORDER BY PA.date DESC LIMIT 1;\t----- bird -----\teuropean_football_2",
    "1141": "SELECT buildUpPlaySpeedClass FROM Team_Attributes WHERE team_api_id = (SELECT team_api_id FROM Team WHERE team_long_name = 'KSV Cercle Brugge') ORDER BY date DESC LIMIT 1;\t----- bird -----\teuropean_football_2",
    "1142": "SELECT COUNT(*) FROM Match m JOIN League l ON m.league_id = l.id JOIN Country c ON m.country_id = c.id WHERE m.season = '2015/2016' AND l.name = 'Serie A' AND c.name = 'Italy';\t----- bird -----\teuropean_football_2",
    "1143": "SELECT MAX(home_team_goal) FROM Match m JOIN League l ON m.league_id = l.id JOIN Country c ON m.country_id = c.id WHERE c.name = 'Netherlands' AND l.name = 'Eredivisie';\t----- bird -----\teuropean_football_2",
    "1144": "SELECT pa.finishing, pa.curve FROM Player p JOIN Player_Attributes pa ON p.player_api_id = pa.player_api_id WHERE p.weight = (SELECT MAX(weight) FROM Player) ORDER BY pa.date DESC LIMIT 1;\t----- bird -----\teuropean_football_2",
    "1145": "SELECT League.name, COUNT(Match.id) AS games_count FROM Match JOIN League ON Match.league_id = League.id WHERE Match.season = '2015/2016' GROUP BY League.name ORDER BY games_count DESC LIMIT 4;\t----- bird -----\teuropean_football_2",
    "1146": "SELECT Team.team_long_name FROM Match JOIN Team ON Match.away_team_api_id = Team.team_api_id GROUP BY Match.away_team_api_id, Team.team_long_name ORDER BY SUM(Match.away_team_goal) DESC LIMIT 1;\t----- bird -----\teuropean_football_2",
    "1147": "SELECT player_name FROM Player JOIN Player_Attributes ON Player.player_api_id = Player_Attributes.player_api_id WHERE overall_rating = (SELECT MAX(overall_rating) FROM Player_Attributes) LIMIT 1;\t----- bird -----\teuropean_football_2",
    "1148": "SELECT 100.0 * COUNT(DISTINCT pa.player_api_id) / (SELECT COUNT(DISTINCT player_api_id) FROM Player) AS percentage_under_180_strong FROM Player p JOIN Player_Attributes pa ON p.player_api_id = pa.player_api_id WHERE p.height < 180 AND pa.strength > 70;\t----- bird -----\teuropean_football_2",
    "1149": "SELECT 'In-patient' AS Patient_Type, COUNT(*) AS Male_Count FROM Patient WHERE SEX = 'Male' AND Admission = 'In-patient' UNION ALL SELECT 'Outpatient', COUNT(*) FROM Patient WHERE SEX = 'Male' AND Admission = 'Outpatient';\t----- bird -----\tthrombosis_prediction",
    "1150": "SELECT (COUNT(*) * 100.0 / (SELECT COUNT(*) FROM Patient)) AS percentage_female_born_after_1930 FROM Patient WHERE SEX = 'Female' AND Birthday > '1930-12-31';\t----- bird -----\tthrombosis_prediction",
    "1151": "SELECT (SUM(CASE WHEN Admission = 'inpatient' THEN 1 ELSE 0 END) * 100.0) / COUNT(*) AS inpatient_percentage FROM Patient WHERE Birthday BETWEEN '1930-01-01' AND '1940-12-31';\t----- bird -----\tthrombosis_prediction",
    "1152": "SELECT CAST(SUM(CASE WHEN Description = 'outpatient' THEN 1 ELSE 0 END) AS FLOAT) / NULLIF(SUM(CASE WHEN Description = 'inpatient' THEN 1 ELSE 0 END), 0) AS outpatient_to_inpatient_ratio FROM Patient WHERE Diagnosis = 'SLE';\t----- bird -----\tthrombosis_prediction",
    "1153": "SELECT Patient.Diagnosis, Laboratory.Date FROM Patient JOIN Laboratory ON Patient.ID = Laboratory.ID WHERE Patient.ID = '30609';\t----- bird -----\tthrombosis_prediction",
    "1154": "SELECT Patient.SEX, Patient.Birthday, Examination.`Examination Date`, Examination.Symptoms FROM Patient JOIN Examination ON Patient.ID = Examination.ID WHERE Patient.ID = '163109';\t----- bird -----\tthrombosis_prediction",
    "1155": "SELECT Patient.ID, Patient.SEX, Patient.Birthday FROM Patient JOIN Laboratory ON Patient.ID = Laboratory.ID WHERE Laboratory.LDH NOT BETWEEN 140 AND 280;\t----- bird -----\tthrombosis_prediction",
    "1156": "SELECT Patient.ID, FLOOR(DATEDIFF(CURDATE(), Patient.Birthday)/365.25) AS Age FROM Patient JOIN Examination ON Patient.ID = Examination.ID WHERE Examination.KCT = 'positive' OR Examination.RVVT = 'positive' OR Examination.LAC = 'positive';\t----- bird -----\tthrombosis_prediction",
    "1157": "SELECT Patient.ID, Patient.SEX, Patient.Diagnosis FROM Patient JOIN Examination ON Patient.ID = Examination.ID WHERE Examination.Thrombosis = 'severe';\t----- bird -----\tthrombosis_prediction",
    "1158": "SELECT DISTINCT Patient.* FROM Patient JOIN Laboratory ON Patient.ID = Laboratory.ID WHERE YEAR(Patient.Birthday) = 1937 AND (Laboratory.T-CHO < 125 OR Laboratory.T-CHO > 200);\t----- bird -----\tthrombosis_prediction",
    "1159": "SELECT Patient.ID, Patient.SEX, Patient.Diagnosis FROM Patient JOIN Laboratory ON Patient.ID = Laboratory.ID WHERE Laboratory.ALB < 3.5;\t----- bird -----\tthrombosis_prediction",
    "1160": "SELECT (COUNT(DISTINCT CASE WHEN (Laboratory.TP < 6.0 OR Laboratory.TP > 8.3) THEN Patient.ID END) * 100.0) / COUNT(DISTINCT Patient.ID) AS Percentage FROM Patient JOIN Laboratory ON Patient.ID = Laboratory.ID WHERE Patient.SEX = 'Female';\t----- bird -----\tthrombosis_prediction",
    "1161": "SELECT AVG(`aCL IgG`) FROM Examination E JOIN Patient P ON E.ID = P.ID WHERE P.Admission = 'in-patient' AND TIMESTAMPDIFF(YEAR, P.Birthday, CURDATE()) >= 50;\t----- bird -----\tthrombosis_prediction",
    "1162": "SELECT COUNT(*) FROM Patient WHERE SEX = 'Female' AND YEAR(Admission) = 1997 AND Description LIKE '%outpatient clinic%';\t----- bird -----\tthrombosis_prediction",
    "1163": "SELECT MIN(DATEDIFF(year, Birthday, Admission)) AS AgeAtAdmission FROM Patient WHERE Admission IS NOT NULL AND Birthday IS NOT NULL;\t----- bird -----\tthrombosis_prediction",
    "1164": "SELECT COUNT(DISTINCT p.ID) FROM Patient p JOIN Examination e ON p.ID = e.ID WHERE YEAR(e.`Examination Date`) = 1997 AND e.Thrombosis = (SELECT MAX(Thrombosis) FROM Examination WHERE YEAR(`Examination Date`) = 1997) AND p.SEX = 'F';\t----- bird -----\tthrombosis_prediction",
    "1165": "SELECT MAX(YEAR(CURDATE()) - YEAR(Birthday)) - MIN(YEAR(CURDATE()) - YEAR(Birthday)) AS AgeGap FROM Patient WHERE ID IN (SELECT ID FROM Laboratory WHERE TG BETWEEN 50 AND 150);\t----- bird -----\tthrombosis_prediction",
    "1166": "SELECT e.Symptoms, e.Diagnosis FROM Examination e JOIN Patient p ON e.ID = p.ID ORDER BY p.Birthday DESC LIMIT 1;\t----- bird -----\tthrombosis_prediction",
    "1167": "SELECT AVG(monthly_count) FROM (SELECT COUNT(DISTINCT Laboratory.ID) AS monthly_count FROM Laboratory JOIN Patient ON Laboratory.ID = Patient.ID WHERE Patient.SEX = 'M' AND Laboratory.Date BETWEEN '1998-01-01' AND '1998-12-31' GROUP BY EXTRACT(YEAR FROM Laboratory.Date), EXTRACT(MONTH FROM Laboratory.Date)) AS monthly_counts;\t----- bird -----\tthrombosis_prediction",
    "1168": "SELECT Laboratory.Date, TIMESTAMPDIFF(YEAR, Patient.Birthday, Patient.`First Date`) AS AgeAtAdmission FROM Patient JOIN Laboratory ON Patient.ID = Laboratory.ID WHERE Patient.Diagnosis = 'SJS' ORDER BY Patient.Birthday ASC LIMIT 1;\t----- bird -----\tthrombosis_prediction",
    "1169": "SELECT (SELECT COUNT(*) FROM Patient p JOIN Laboratory l ON p.ID = l.ID WHERE l.UA NOT BETWEEN 3.5 AND 7.2 AND p.SEX = 'Male') * 1.0 / NULLIF((SELECT COUNT(*) FROM Patient p JOIN Laboratory l ON p.ID = l.ID WHERE l.UA NOT BETWEEN 3.5 AND 7.2 AND p.SEX = 'Female'), 0) AS Male_to_Female_Ratio;\t----- bird -----\tthrombosis_prediction",
    "1170": "SELECT COUNT(*) FROM Patient p WHERE NOT EXISTS (SELECT 1 FROM Examination e WHERE e.ID = p.ID AND e.`Examination Date` <= DATE_ADD(p.`First Date`, INTERVAL 1 YEAR));\t----- bird -----\tthrombosis_prediction",
    "1171": "SELECT COUNT(DISTINCT Examination.ID) FROM Examination JOIN Patient ON Examination.ID = Patient.ID WHERE Patient.Birthday > DATE('1990-01-01', '-18 years') AND Examination.`Examination Date` BETWEEN '1990-01-01' AND '1993-12-31';\t----- bird -----\tthrombosis_prediction",
    "1172": "SELECT COUNT(DISTINCT Patient.ID) FROM Patient JOIN Laboratory ON Patient.ID = Laboratory.ID WHERE Patient.SEX = 'M' AND Laboratory.`T-BIL` > (SELECT AVG(`T-BIL`) FROM Laboratory);\t----- bird -----\tthrombosis_prediction",
    "1173": "SELECT Diagnosis, COUNT(*) AS count FROM Patient WHERE ID IN (SELECT ID FROM Laboratory WHERE Date BETWEEN '1985-01-01' AND '1995-12-31') GROUP BY Diagnosis ORDER BY count DESC LIMIT 1;\t----- bird -----\tthrombosis_prediction",
    "1174": "SELECT AVG(1999 - YEAR(P.Birthday)) AS Average_Age FROM Patient P JOIN Laboratory L ON P.ID = L.ID WHERE YEAR(L.Date) = 1991 AND MONTH(L.Date) = 10;\t----- bird -----\tthrombosis_prediction",
    "1175": "SELECT FLOOR(DATEDIFF(Laboratory.Date, Patient.Birthday)/365.25) AS Age, Patient.Diagnosis FROM Laboratory JOIN Patient ON Laboratory.ID = Patient.ID WHERE Laboratory.HGB = (SELECT MAX(HGB) FROM Laboratory) LIMIT 1;\t----- bird -----\tthrombosis_prediction",
    "1176": "SELECT ANA FROM Examination WHERE ID = 3605340 AND `Examination Date` = '1996-12-02';\t----- bird -----\tthrombosis_prediction",
    "1177": "SELECT T-CHO FROM Laboratory WHERE ID = 2927464 AND Date = '1995-09-04';\t----- bird -----\tthrombosis_prediction",
    "1178": "SELECT SEX FROM Patient WHERE Diagnosis = 'AORTITIS' ORDER BY \"First Date\" ASC LIMIT 1;\t----- bird -----\tthrombosis_prediction",
    "1179": "SELECT e.`aCL IgG`, e.`aCL IgM`, e.`aCL IgA` FROM Examination e JOIN Patient p ON e.ID = p.ID WHERE p.Diagnosis = 'SLE' AND p.`First Date` = '1994-02-19' AND e.`Examination Date` = '1993-11-12';\t----- bird -----\tthrombosis_prediction",
    "1180": "SELECT SEX FROM Patient JOIN Laboratory ON Patient.ID = Laboratory.ID WHERE Laboratory.GPT = 9 AND Laboratory.Date = '1992-06-12';\t----- bird -----\tthrombosis_prediction",
    "1181": "SELECT TIMESTAMPDIFF(YEAR, Patient.Birthday, '1991-10-21') AS AgeAtTest FROM Patient JOIN Laboratory ON Patient.ID = Laboratory.ID WHERE Laboratory.Date = '1991-10-21' AND Laboratory.UA = 8.4;\t----- bird -----\tthrombosis_prediction",
    "1182": "SELECT COUNT(*) FROM Laboratory WHERE ID = (SELECT ID FROM Patient WHERE `First Date` = '1991-06-13' AND Diagnosis = 'SJS') AND Date BETWEEN '1995-01-01' AND '1995-12-31';\t----- bird -----\tthrombosis_prediction",
    "1183": "SELECT Diagnosis FROM Patient WHERE ID = (SELECT ID FROM Examination WHERE Diagnosis = 'SLE' AND `Examination Date` = '1997-01-27') ORDER BY `First Date` ASC LIMIT 1;\t----- bird -----\tthrombosis_prediction",
    "1184": "SELECT Examination.Symptoms FROM Examination JOIN Patient ON Examination.ID = Patient.ID WHERE Patient.Birthday = '1959-03-01' AND Examination.`Examination Date` = '1993-09-27';\t----- bird -----\tthrombosis_prediction",
    "1185": "SELECT ((nov.T_CHO - dec.T_CHO) / nov.T_CHO) * 100 AS decrease_rate FROM Patient p JOIN Laboratory nov ON p.ID = nov.ID AND nov.Date BETWEEN '1981-11-01' AND '1981-11-30' JOIN Laboratory dec ON p.ID = dec.ID AND dec.Date BETWEEN '1981-12-01' AND '1981-12-31' WHERE p.Birthday = '1959-02-18';\t----- bird -----\tthrombosis_prediction",
    "1186": "SELECT DISTINCT Patient.ID FROM Patient JOIN Examination ON Patient.ID = Examination.ID WHERE Patient.Diagnosis = 'Behcet''s' AND Examination.`Examination Date` BETWEEN '1970-01-01' AND '1997-12-31';\t----- bird -----\tthrombosis_prediction",
    "1187": "SELECT DISTINCT Patient.ID FROM Patient JOIN Examination ON Patient.ID = Examination.ID JOIN Laboratory ON Patient.ID = Laboratory.ID WHERE Examination.`Examination Date` BETWEEN '1987-07-06' AND '1996-01-31' AND Laboratory.GPT > 30 AND Laboratory.ALB < 4;\t----- bird -----\tthrombosis_prediction",
    "1188": "SELECT ID FROM Patient WHERE SEX = 'Female' AND YEAR(Birthday) = 1964 AND Admission IS NOT NULL;\t----- bird -----\tthrombosis_prediction",
    "1189": "SELECT COUNT(DISTINCT p.ID) FROM Patient p JOIN Examination e ON p.ID = e.ID WHERE e.Thrombosis = 2 AND e.`ANA Pattern` = 'S' AND e.`aCL IgM` > (SELECT AVG(`aCL IgM`) FROM Examination) * 1.2;\t----- bird -----\tthrombosis_prediction",
    "1190": "SELECT 100.0 * SUM(CASE WHEN UA < normal_range_lower THEN 1 ELSE 0 END) / COUNT(*) AS percentage_below_normal_uric_acid FROM Laboratory WHERE U_PRO BETWEEN normal_range_lower AND normal_range_upper;\t----- bird -----\tthrombosis_prediction",
    "1191": "SELECT 100.0 * SUM(CASE WHEN Diagnosis = 'BEHCET' THEN 1 ELSE 0 END) / COUNT(*) AS Percentage_BEHCET FROM Patient WHERE SEX = 'M' AND YEAR(`First Date`) = 1981;\t----- bird -----\tthrombosis_prediction",
    "1192": "SELECT DISTINCT Patient.* FROM Patient JOIN Laboratory ON Patient.ID = Laboratory.ID WHERE Patient.Description LIKE '%outpatient%' AND Laboratory.Date BETWEEN '1991-10-01' AND '1991-10-31' AND Laboratory.`T-BIL` BETWEEN 0.3 AND 1.2;\t----- bird -----\tthrombosis_prediction",
    "1193": "SELECT COUNT(DISTINCT p.ID) FROM Patient p JOIN Examination e ON p.ID = e.ID WHERE (e.`ANA Pattern` IS NULL OR e.`ANA Pattern` NOT LIKE 'P%') AND p.SEX = 'F' AND p.Birthday BETWEEN '1980-01-01' AND '1989-12-31';\t----- bird -----\tthrombosis_prediction",
    "1194": "SELECT p.SEX FROM Patient p JOIN Examination e ON p.ID = e.ID JOIN Laboratory l ON p.ID = l.ID WHERE e.Diagnosis = 'PSS' AND l.CRP = '2+' AND l.CRE = 1 AND l.LDH = 123;\t----- bird -----\tthrombosis_prediction",
    "1195": "SELECT AVG(L.ALB) FROM Patient P JOIN Laboratory L ON P.ID = L.ID WHERE P.SEX = 'Female' AND L.PLT > 400 AND P.Diagnosis = 'SLE';\t----- bird -----\tthrombosis_prediction",
    "1196": "SELECT Symptoms, COUNT(*) AS Frequency FROM Examination WHERE Diagnosis = 'SLE' GROUP BY Symptoms ORDER BY Frequency DESC LIMIT 1;\t----- bird -----\tthrombosis_prediction",
    "1197": "SELECT MIN(`Examination Date`) AS First_Documented_Date, Diagnosis FROM Examination WHERE ID = 48473 GROUP BY Diagnosis;\t----- bird -----\tthrombosis_prediction",
    "1198": "SELECT COUNT(*) FROM Patient WHERE SEX = 'Female' AND Diagnosis = 'APS';\t----- bird -----\tthrombosis_prediction",
    "1199": "SELECT COUNT(DISTINCT Patient.ID) FROM Patient JOIN Laboratory ON Patient.ID = Laboratory.ID WHERE YEAR(Laboratory.Date) = 1997 AND (Laboratory.TP < normal_lower_bound OR Laboratory.TP > normal_upper_bound);\t----- bird -----\tthrombosis_prediction",
    "1200": "SELECT CAST(SUM(CASE WHEN Diagnosis = 'SLE' THEN 1 ELSE 0 END) AS FLOAT) / COUNT(*) AS Proportion_SLE FROM Examination WHERE Symptoms LIKE '%thrombocytopenia%' OR Diagnosis LIKE '%thrombocytopenia%';\t----- bird -----\tthrombosis_prediction",
    "1201": "SELECT 100.0 * SUM(CASE WHEN SEX = 'F' THEN 1 ELSE 0 END) / COUNT(*) AS percentage_women FROM Patient WHERE YEAR(Birthday) = 1980 AND Diagnosis = 'RA';\t----- bird -----\tthrombosis_prediction",
    "1202": "SELECT COUNT(DISTINCT p.ID) FROM Patient p JOIN Examination e ON p.ID = e.ID WHERE p.SEX = 'Male' AND e.`Examination Date` BETWEEN '1995-01-01' AND '1997-12-31' AND p.Diagnosis = 'Behcet disease' AND (p.Admission IS NULL OR p.Admission = 0);\t----- bird -----\tthrombosis_prediction",
    "1203": "SELECT COUNT(DISTINCT Patient.ID) FROM Patient JOIN Laboratory ON Patient.ID = Laboratory.ID WHERE Patient.SEX = 'female' AND Laboratory.WBC < 3.5;\t----- bird -----\tthrombosis_prediction",
    "1204": "SELECT DATEDIFF(day, p.Admission, MIN(e.`Examination Date`)) AS DaysToFirstEvaluation FROM Patient p JOIN Examination e ON p.ID = e.ID WHERE p.ID = 821298;\t----- bird -----\tthrombosis_prediction",
    "1205": "SELECT UA FROM Laboratory WHERE ID = 57266 ORDER BY Date DESC LIMIT 1;\t----- bird -----\tthrombosis_prediction",
    "1206": "SELECT Date FROM Laboratory WHERE ID = '48473' AND GOT > (SELECT MAX(GOT) FROM Laboratory WHERE ID = '48473');\t----- bird -----\tthrombosis_prediction",
    "1207": "SELECT Patient.ID, Patient.SEX, Patient.Birthday FROM Patient JOIN Laboratory ON Patient.ID = Laboratory.ID WHERE Laboratory.Date BETWEEN '1994-01-01' AND '1994-12-31' AND Laboratory.GOT BETWEEN 10 AND 40;\t----- bird -----\tthrombosis_prediction",
    "1208": "SELECT DISTINCT Patient.ID FROM Patient JOIN Laboratory ON Patient.ID = Laboratory.ID WHERE Patient.SEX = 'M' AND Laboratory.GPT > (SELECT MAX(GPT) FROM Laboratory);\t----- bird -----\tthrombosis_prediction",
    "1209": "SELECT Patient.Diagnosis FROM Patient JOIN Laboratory ON Patient.ID = Laboratory.ID WHERE Laboratory.GPT NOT BETWEEN 7 AND 56 ORDER BY Patient.Birthday ASC;\t----- bird -----\tthrombosis_prediction",
    "1210": "SELECT AVG(LDH) FROM Laboratory WHERE LDH BETWEEN 140 AND 280;\t----- bird -----\tthrombosis_prediction",
    "1211": "SELECT ID, FLOOR(DATEDIFF(CURDATE(), Birthday)/365.25) AS age FROM Patient JOIN Laboratory ON Patient.ID = Laboratory.ID WHERE LDH BETWEEN 100 AND 300;\t----- bird -----\tthrombosis_prediction",
    "1212": "SELECT Patient.ID, Patient.Admission FROM Patient JOIN Laboratory ON Patient.ID = Laboratory.ID WHERE Laboratory.ALP BETWEEN 44 AND 147;\t----- bird -----\tthrombosis_prediction",
    "1213": "SELECT Patient.ID, Laboratory.ALP, CASE WHEN Laboratory.ALP BETWEEN 44 AND 147 THEN 'Within normal range' ELSE 'Out of normal range' END AS ALP_Status FROM Patient LEFT JOIN Laboratory ON Patient.ID = Laboratory.ID WHERE Patient.Birthday = '1982-04-01' ORDER BY Laboratory.Date DESC LIMIT 1;\t----- bird -----\tthrombosis_prediction",
    "1214": "SELECT DISTINCT Patient.ID, Patient.SEX, Patient.Birthday FROM Patient JOIN Laboratory ON Patient.ID = Laboratory.ID WHERE Laboratory.TP < (SELECT MIN(TP) FROM Laboratory WHERE TP IS NOT NULL);\t----- bird -----\tthrombosis_prediction",
    "1215": "SELECT Patient.ID, Laboratory.TP, Laboratory.TP - <normal_upper_limit> AS TP_Deviation FROM Patient JOIN Laboratory ON Patient.ID = Laboratory.ID WHERE Patient.SEX = 'F' AND Laboratory.TP > <normal_upper_limit>;\t----- bird -----\tthrombosis_prediction",
    "1216": "SELECT Patient.* FROM Patient JOIN Laboratory ON Patient.ID = Laboratory.ID WHERE Patient.SEX = 'male' AND (Laboratory.ALB < [lower_bound] OR Laboratory.ALB > [upper_bound]) ORDER BY Patient.Birthday DESC;\t----- bird -----\tthrombosis_prediction",
    "1217": "SELECT Patient.ID, Laboratory.ALB, CASE WHEN Laboratory.ALB BETWEEN 3.5 AND 5.0 THEN 'Within Normal Range' ELSE 'Out of Normal Range' END AS Albumin_Status FROM Patient JOIN Laboratory ON Patient.ID = Laboratory.ID WHERE YEAR(Patient.Birthday) = 1982;\t----- bird -----\tthrombosis_prediction",
    "1218": "SELECT (COUNT(DISTINCT Laboratory.ID) * 100.0 / (SELECT COUNT(DISTINCT Patient.ID) FROM Patient WHERE SEX = 'Female')) AS Percentage_Female_Patients_With_High_UA FROM Laboratory JOIN Patient ON Laboratory.ID = Patient.ID WHERE Patient.SEX = 'Female' AND Laboratory.UA > (SELECT MAX_Normal_UA FROM Normal_Range WHERE Test = 'UA');\t----- bird -----\tthrombosis_prediction",
    "1219": "SELECT AVG(L.UA) AS Average_UA FROM Laboratory L JOIN (SELECT ID, MAX(Date) AS LatestDate FROM Laboratory GROUP BY ID) Latest ON L.ID = Latest.ID AND L.Date = Latest.LatestDate WHERE L.UA BETWEEN 3.5 AND 7.2;\t----- bird -----\tthrombosis_prediction",
    "1220": "SELECT Patient.ID, Patient.SEX, Patient.Birthday FROM Patient JOIN Laboratory ON Patient.ID = Laboratory.ID WHERE Laboratory.UN BETWEEN (SELECT MIN(UN) FROM Laboratory) AND (SELECT MAX(UN) FROM Laboratory) ORDER BY Laboratory.Date DESC LIMIT 1;\t----- bird -----\tthrombosis_prediction",
    "1221": "SELECT Patient.ID, Patient.SEX, Patient.Birthday FROM Patient JOIN Laboratory ON Patient.ID = Laboratory.ID WHERE Patient.Diagnosis = 'RA' AND Laboratory.UN BETWEEN (SELECT MIN_UN FROM NormalRanges WHERE Test = 'UN') AND (SELECT MAX_UN FROM NormalRanges WHERE Test = 'UN');\t----- bird -----\tthrombosis_prediction",
    "1222": "SELECT COUNT(DISTINCT Patient.ID) FROM Patient JOIN Laboratory ON Patient.ID = Laboratory.ID WHERE Patient.SEX = 'M' AND (Laboratory.CRE < 0.6 OR Laboratory.CRE > 1.3);\t----- bird -----\tthrombosis_prediction",
    "1223": "SELECT CASE WHEN (SELECT COUNT(*) FROM Patient p JOIN Laboratory l ON p.ID = l.ID WHERE p.SEX = 'M' AND (l.CRE < 0.6 OR l.CRE > 1.2)) > (SELECT COUNT(*) FROM Patient p JOIN Laboratory l ON p.ID = l.ID WHERE p.SEX = 'F' AND (l.CRE < 0.6 OR l.CRE > 1.2)) THEN 'True' ELSE 'False' END AS Result;\t----- bird -----\tthrombosis_prediction",
    "1224": "SELECT p.ID, p.SEX, p.Birthday FROM Patient p JOIN Laboratory l ON p.ID = l.ID WHERE l.T-BIL = (SELECT MAX(T-BIL) FROM Laboratory);\t----- bird -----\tthrombosis_prediction",
    "1225": "SELECT Patient.SEX, COUNT(*) AS PatientCount FROM Patient JOIN Laboratory ON Patient.ID = Laboratory.ID WHERE Laboratory.`T-BIL` NOT BETWEEN 0.3 AND 1.2 GROUP BY Patient.SEX;\t----- bird -----\tthrombosis_prediction",
    "1226": "SELECT p.ID, l.\"T-CHO\" FROM Patient p JOIN Laboratory l ON p.ID = l.ID ORDER BY l.\"T-CHO\" DESC, p.Birthday ASC LIMIT 1;\t----- bird -----\tthrombosis_prediction",
    "1227": "SELECT AVG(DATEDIFF(year, Birthday, GETDATE())) AS AverageAge FROM Patient WHERE SEX = 'Male' AND ID IN (SELECT ID FROM Laboratory WHERE T-CHO > (SELECT AVG(T-CHO) FROM Laboratory));\t----- bird -----\tthrombosis_prediction",
    "1228": "SELECT Patient.ID, Patient.Diagnosis FROM Patient JOIN Laboratory ON Patient.ID = Laboratory.ID WHERE Laboratory.TG > 100;\t----- bird -----\tthrombosis_prediction",
    "1229": "SELECT COUNT(DISTINCT Patient.ID) FROM Patient JOIN Laboratory ON Patient.ID = Laboratory.ID WHERE Laboratory.TG NOT BETWEEN 50 AND 150 AND (strftime('%Y', 'now') - strftime('%Y', Patient.Birthday)) > 50;\t----- bird -----\tthrombosis_prediction",
    "1230": "SELECT DISTINCT Patient.ID FROM Patient JOIN Laboratory ON Patient.ID = Laboratory.ID WHERE Patient.Description = 'outpatient' AND Laboratory.CPK BETWEEN 30 AND 200;\t----- bird -----\tthrombosis_prediction",
    "1231": "SELECT COUNT(DISTINCT Patient.ID) FROM Patient JOIN Laboratory ON Patient.ID = Laboratory.ID WHERE Patient.SEX = 'M' AND Patient.Birthday BETWEEN '1936-01-01' AND '1956-12-31' AND Laboratory.CPK > (SELECT MAX_NORMAL FROM NormalRanges WHERE Test = 'CPK');\t----- bird -----\tthrombosis_prediction",
    "1232": "SELECT Patient.ID, Patient.SEX, FLOOR(DATEDIFF(CURDATE(), Patient.Birthday)/365.25) AS age FROM Patient JOIN Laboratory ON Patient.ID = Laboratory.ID WHERE (Laboratory.GLU < 70 OR Laboratory.GLU > 110) AND Laboratory.`T-CHO` BETWEEN 125 AND 200;\t----- bird -----\tthrombosis_prediction",
    "1233": "SELECT Patient.ID, Laboratory.GLU FROM Patient JOIN Laboratory ON Patient.ID = Laboratory.ID WHERE Patient.`First Date` LIKE '1991%' AND Laboratory.GLU BETWEEN 70 AND 99;\t----- bird -----\tthrombosis_prediction",
    "1234": "SELECT p.ID, p.SEX, p.Birthday FROM Patient p JOIN Laboratory l ON p.ID = l.ID WHERE l.WBC NOT BETWEEN 4000 AND 11000 GROUP BY p.SEX, p.ID, p.Birthday ORDER BY TIMESTAMPDIFF(YEAR, p.Birthday, CURDATE()) ASC;\t----- bird -----\tthrombosis_prediction",
    "1235": "SELECT Patient.ID, FLOOR(DATEDIFF(CURDATE(), Patient.Birthday)/365) AS Age, Patient.Diagnosis FROM Patient JOIN Laboratory ON Patient.ID = Laboratory.ID WHERE Laboratory.RBC < (SELECT AVG(RBC) FROM Laboratory);\t----- bird -----\tthrombosis_prediction",
    "1236": "SELECT Patient.ID, Patient.Admission FROM Patient JOIN Laboratory ON Patient.ID = Laboratory.ID WHERE Patient.SEX = 'F' AND (strftime('%Y', 'now') - strftime('%Y', Patient.Birthday)) >= 50 AND (Laboratory.RBC < normal_lower_limit OR Laboratory.RBC > normal_upper_limit) GROUP BY Patient.ID;\t----- bird -----\tthrombosis_prediction",
    "1237": "SELECT Patient.ID, Patient.SEX FROM Patient JOIN Laboratory ON Patient.ID = Laboratory.ID WHERE Patient.Description LIKE '%outpatient%' AND Laboratory.HGB < (SELECT AVG(HGB) FROM Laboratory) GROUP BY Patient.ID, Patient.SEX;\t----- bird -----\tthrombosis_prediction",
    "1238": "SELECT ID, SEX FROM Patient WHERE Diagnosis = 'SLE' AND ID IN (SELECT ID FROM Laboratory WHERE HGB BETWEEN 12 AND 16) ORDER BY Birthday ASC LIMIT 1;\t----- bird -----\tthrombosis_prediction",
    "1239": "SELECT Patient.ID, FLOOR(DATEDIFF(CURDATE(), Patient.Birthday)/365.25) AS Age FROM Patient JOIN Laboratory ON Patient.ID = Laboratory.ID WHERE Laboratory.HCT > (SELECT MAX(NormalRange) FROM NormalRanges WHERE Test='HCT') GROUP BY Patient.ID HAVING COUNT(Laboratory.ID) >= 2;\t----- bird -----\tthrombosis_prediction",
    "1240": "SELECT AVG(HCT) FROM Laboratory WHERE Date BETWEEN '1991-01-01' AND '1991-12-31' AND HCT < (SELECT MIN(HCT) FROM Laboratory);\t----- bird -----\tthrombosis_prediction",
    "1241": "SELECT SUM(CASE WHEN PLT < 150 THEN 1 ELSE 0 END) AS LowerThanNormal, SUM(CASE WHEN PLT > 450 THEN 1 ELSE 0 END) AS HigherThanNormal FROM (SELECT DISTINCT ID, PLT FROM Laboratory WHERE PLT IS NOT NULL) AS PatientPlatelets;\t----- bird -----\tthrombosis_prediction",
    "1242": "SELECT Patient.ID, Patient.SEX, Patient.Birthday, Patient.Description, Patient.`First Date`, Patient.Admission, Patient.Diagnosis FROM Patient JOIN Laboratory ON Patient.ID = Laboratory.ID WHERE YEAR(Laboratory.Date) = 1984 AND TIMESTAMPDIFF(YEAR, Patient.Birthday, Laboratory.Date) < 50 AND Laboratory.PLT BETWEEN 150 AND 450;\t----- bird -----\tthrombosis_prediction",
    "1243": "SELECT 100.0 * SUM(CASE WHEN p.SEX = 'F' AND l.PT NOT BETWEEN 11 AND 13.5 THEN 1 ELSE 0 END) / NULLIF(SUM(CASE WHEN p.SEX = 'F' THEN 1 ELSE 0 END),0) AS percentage_abnormal_PT_female_over_55 FROM Patient p JOIN Laboratory l ON p.ID = l.ID WHERE DATE_PART('year', AGE(CURRENT_DATE, p.Birthday)) > 55;\t----- bird -----\tthrombosis_prediction",
    "1244": "SELECT DISTINCT Patient.* FROM Patient JOIN Laboratory ON Patient.ID = Laboratory.ID WHERE Patient.`First Date` > '1992-12-31' AND Laboratory.PT BETWEEN 11 AND 13.5;\t----- bird -----\tthrombosis_prediction",
    "1245": "SELECT COUNT(*) FROM Examination WHERE `Examination Date` > '1997-01-01' AND `KCT` = 'inactivated partial prothrombin time';\t----- bird -----\tthrombosis_prediction",
    "1246": "SELECT COUNT(DISTINCT Examination.ID) FROM Examination JOIN Laboratory ON Examination.ID = Laboratory.ID WHERE Laboratory.APTT NOT BETWEEN 25 AND 35 AND Examination.Thrombosis = 'No';\t----- bird -----\tthrombosis_prediction",
    "1247": "SELECT COUNT(DISTINCT Patient.ID) FROM Patient JOIN Laboratory ON Patient.ID = Laboratory.ID WHERE Patient.SEX = 'M' AND Laboratory.WBC BETWEEN 4000 AND 11000 AND (Laboratory.FG < 200 OR Laboratory.FG > 400);\t----- bird -----\tthrombosis_prediction",
    "1248": "SELECT COUNT(DISTINCT Patient.ID) FROM Patient JOIN Laboratory ON Patient.ID = Laboratory.ID WHERE Patient.Birthday > '1980-01-01' AND (Laboratory.FG < normal_lower_limit OR Laboratory.FG > normal_upper_limit);\t----- bird -----\tthrombosis_prediction",
    "1249": "SELECT DISTINCT Examination.Diagnosis FROM Examination JOIN Laboratory ON Examination.ID = Laboratory.ID WHERE Laboratory.`U-PRO` > (SELECT MAX(`U-PRO`) FROM Laboratory WHERE `U-PRO` IS NOT NULL);\t----- bird -----\tthrombosis_prediction",
    "1250": "SELECT Patient.ID FROM Patient JOIN Laboratory ON Patient.ID = Laboratory.ID WHERE Laboratory.`U-PRO` = 'normal' AND Patient.Diagnosis = 'SLE';\t----- bird -----\tthrombosis_prediction",
    "1251": "SELECT COUNT(DISTINCT Patient.ID) FROM Patient JOIN Laboratory ON Patient.ID = Laboratory.ID WHERE Laboratory.IGG > (SELECT MAX(IGG) FROM Laboratory WHERE IGG IS NOT NULL);\t----- bird -----\tthrombosis_prediction",
    "1252": "SELECT COUNT(DISTINCT Examination.ID) FROM Examination JOIN Laboratory ON Examination.ID = Laboratory.ID WHERE Laboratory.IGG BETWEEN 700 AND 1600 AND Examination.Symptoms IS NOT NULL AND Examination.Symptoms <> '';\t----- bird -----\tthrombosis_prediction",
    "1253": "SELECT p.Diagnosis FROM Patient p JOIN Laboratory l ON p.ID = l.ID WHERE l.IGA = (SELECT MAX(IGA) FROM Laboratory WHERE IGA BETWEEN normal_lower_bound AND normal_upper_bound) LIMIT 1;\t----- bird -----\tthrombosis_prediction",
    "1254": "SELECT COUNT(DISTINCT Patient.ID) FROM Patient JOIN Laboratory ON Patient.ID = Laboratory.ID WHERE Laboratory.IGA = 'normal' AND Patient.Admission > '1990-01-01';\t----- bird -----\tthrombosis_prediction",
    "1255": "SELECT Diagnosis, COUNT(*) AS count FROM Examination WHERE `aCL IgM` NOT BETWEEN 0 AND 1 GROUP BY Diagnosis ORDER BY count DESC LIMIT 1;\t----- bird -----\tthrombosis_prediction",
    "1256": "SELECT COUNT(*) FROM Patient p WHERE NOT EXISTS (SELECT 1 FROM Laboratory l WHERE l.ID = p.ID AND l.CRP IS NOT NULL AND l.CRP <> 'normal') AND EXISTS (SELECT 1 FROM Laboratory l2 WHERE l2.ID = p.ID);\t----- bird -----\tthrombosis_prediction",
    "1257": "SELECT COUNT(DISTINCT Patient.ID) FROM Patient JOIN Laboratory ON Patient.ID = Laboratory.ID WHERE (Laboratory.CRE < 0.6 OR Laboratory.CRE > 1.3) AND (strftime('%Y', 'now') - strftime('%Y', Patient.Birthday) - (strftime('%m-%d', 'now') < strftime('%m-%d', Patient.Birthday))) < 70;\t----- bird -----\tthrombosis_prediction",
    "1258": "SELECT COUNT(DISTINCT Patient.ID) FROM Patient JOIN Laboratory ON Patient.ID = Laboratory.ID WHERE Laboratory.RF = 'normal' AND (Laboratory.PT > normal_upper_limit OR Laboratory.APTT > normal_upper_limit OR Laboratory.FG > normal_upper_limit);\t----- bird -----\tthrombosis_prediction",
    "1259": "SELECT DISTINCT Patient.Diagnosis FROM Patient JOIN Laboratory ON Patient.ID = Laboratory.ID WHERE Patient.Birthday > '1985-01-01' AND Laboratory.RF = 'normal';\t----- bird -----\tthrombosis_prediction",
    "1260": "SELECT Patient.ID FROM Patient JOIN Laboratory ON Patient.ID = Laboratory.ID WHERE Laboratory.RF = 'normal' AND (strftime('%Y', 'now') - strftime('%Y', Patient.Birthday)) > 60;\t----- bird -----\tthrombosis_prediction",
    "1261": "SELECT COUNT(DISTINCT Patient.ID) FROM Patient JOIN Laboratory ON Patient.ID = Laboratory.ID JOIN Examination ON Patient.ID = Examination.ID WHERE Laboratory.RF = 'normal' AND (Examination.Thrombosis IS NULL OR Examination.Thrombosis = 'no');\t----- bird -----\tthrombosis_prediction",
    "1262": "SELECT COUNT(DISTINCT p.ID) FROM Patient p JOIN Examination e ON p.ID = e.ID JOIN Laboratory l ON p.ID = l.ID WHERE l.C3 = 'normal' AND e.`ANA Pattern` = 'P';\t----- bird -----\tthrombosis_prediction",
    "1263": "SELECT Patient.ID FROM Patient JOIN Laboratory ON Patient.ID = Laboratory.ID JOIN Examination ON Patient.ID = Examination.ID WHERE Laboratory.HCT NOT BETWEEN normal_lower_bound AND normal_upper_bound ORDER BY GREATEST(Examination.`aCL IgG`, Examination.`aCL IgM`, Examination.`aCL IgA`) DESC LIMIT 1;\t----- bird -----\tthrombosis_prediction",
    "1264": "SELECT COUNT(DISTINCT Patient.ID) FROM Patient JOIN Examination ON Patient.ID = Examination.ID JOIN Laboratory ON Patient.ID = Laboratory.ID WHERE Examination.Thrombosis = 'vein' AND Laboratory.C4 BETWEEN 10 AND 40;\t----- bird -----\tthrombosis_prediction",
    "1265": "SELECT COUNT(DISTINCT Patient.ID) FROM Patient JOIN Laboratory ON Patient.ID = Laboratory.ID WHERE Laboratory.RNP = 'normal' AND Patient.Admission IS NOT NULL;\t----- bird -----\tthrombosis_prediction",
    "1266": "SELECT Birthday FROM Patient WHERE ID = (SELECT ID FROM Laboratory WHERE RNP <> 'normal' ORDER BY Birthday DESC LIMIT 1);\t----- bird -----\tthrombosis_prediction",
    "1267": "SELECT COUNT(DISTINCT Examination.ID) FROM Examination WHERE SM = 'normal' AND (Thrombosis IS NULL OR Thrombosis = 'no' OR Thrombosis = 0);\t----- bird -----\tthrombosis_prediction",
    "1268": "SELECT ID FROM Patient WHERE ID IN (SELECT ID FROM Laboratory WHERE SM <> 'normal') ORDER BY Birthday DESC LIMIT 3;\t----- bird -----\tthrombosis_prediction",
    "1269": "SELECT DISTINCT Patient.ID FROM Patient JOIN Examination ON Patient.ID = Examination.ID WHERE Examination.`Examination Date` > '1997-01-01' AND Examination.`SC170` = 'normal';\t----- bird -----\tthrombosis_prediction",
    "1270": "SELECT COUNT(DISTINCT p.ID) FROM Patient p JOIN Examination e ON p.ID = e.ID WHERE e.`SC170` = 'normal' AND p.SEX = 'female' AND (e.Symptoms IS NULL OR e.Symptoms = '');\t----- bird -----\tthrombosis_prediction",
    "1271": "SELECT COUNT(DISTINCT Patient.ID) FROM Patient JOIN Laboratory ON Patient.ID = Laboratory.ID WHERE Laboratory.SSA = 'normal' AND Patient.Admission < '2000-01-01';\t----- bird -----\tthrombosis_prediction",
    "1272": "SELECT Patient.ID FROM Patient JOIN Laboratory ON Patient.ID = Laboratory.ID WHERE Laboratory.SSA <> 'normal' ORDER BY Patient.\"First Date\" ASC LIMIT 1;\t----- bird -----\tthrombosis_prediction",
    "1273": "SELECT COUNT(DISTINCT Patient.ID) FROM Patient JOIN Examination ON Patient.ID = Examination.ID WHERE Examination.SSB = 'normal' AND Examination.Diagnosis = 'SLE';\t----- bird -----\tthrombosis_prediction",
    "1274": "SELECT COUNT(DISTINCT p.ID) FROM Patient p JOIN Laboratory l ON p.ID = l.ID JOIN Examination e ON p.ID = e.ID WHERE l.SSB = 'normal' AND e.Symptoms IS NOT NULL AND e.Symptoms <> '';\t----- bird -----\tthrombosis_prediction",
    "1275": "SELECT COUNT(DISTINCT p.ID) FROM Patient p JOIN Laboratory l ON p.ID = l.ID WHERE l.CENTROMEA = 'normal' AND l.SSB = 'normal' AND p.SEX = 'male';\t----- bird -----\tthrombosis_prediction",
    "1276": "SELECT DISTINCT Patient.Diagnosis FROM Patient JOIN Laboratory ON Patient.ID = Laboratory.ID WHERE Laboratory.DNA <> 'normal' OR Laboratory.DNA IS NULL;\t----- bird -----\tthrombosis_prediction",
    "1277": "SELECT COUNT(*) FROM Patient WHERE ID NOT IN (SELECT ID FROM Laboratory WHERE DNA IS NOT NULL AND DNA = 'normal') AND ID NOT IN (SELECT ID FROM Laboratory WHERE DNA IS NOT NULL);\t----- bird -----\tthrombosis_prediction",
    "1278": "SELECT COUNT(DISTINCT Patient.ID) FROM Patient JOIN Laboratory ON Patient.ID = Laboratory.ID WHERE Laboratory.IGG = 'normal' AND Patient.Admission IS NOT NULL;\t----- bird -----\tthrombosis_prediction",
    "1279": "SELECT 100.0 * COUNT(DISTINCT p.ID) / (SELECT COUNT(*) FROM Patient) AS percentage FROM Patient p JOIN Laboratory l ON p.ID = l.ID WHERE l.GOT > (SELECT AVG(GOT) + 2 * STDDEV(GOT) FROM Laboratory) AND p.Diagnosis = 'SLE';\t----- bird -----\tthrombosis_prediction",
    "1280": "SELECT COUNT(DISTINCT Patient.ID) FROM Patient JOIN Laboratory ON Patient.ID = Laboratory.ID WHERE Patient.SEX = 'M' AND Laboratory.GOT BETWEEN 10 AND 40;\t----- bird -----\tthrombosis_prediction",
    "1281": "SELECT MIN(Birthday) FROM Patient WHERE ID IN (SELECT ID FROM Laboratory WHERE GOT NOT BETWEEN normal_lower_bound AND normal_upper_bound);\t----- bird -----\tthrombosis_prediction",
    "1282": "SELECT Patient.Birthday FROM Patient JOIN Laboratory ON Patient.ID = Laboratory.ID WHERE Laboratory.GPT BETWEEN 7 AND 56 ORDER BY Laboratory.GPT DESC LIMIT 3;\t----- bird -----\tthrombosis_prediction",
    "1283": "SELECT COUNT(DISTINCT Patient.ID) FROM Patient JOIN Laboratory ON Patient.ID = Laboratory.ID WHERE Laboratory.GPT BETWEEN 7 AND 56 AND Patient.SEX = 'Male';\t----- bird -----\tthrombosis_prediction",
    "1284": "SELECT MIN(L.Date) FROM Laboratory L JOIN Patient P ON L.ID = P.ID WHERE L.LDH BETWEEN 140 AND 280 ORDER BY L.LDH DESC LIMIT 1;\t----- bird -----\tthrombosis_prediction",
    "1285": "SELECT MAX(Laboratory.Date) FROM Laboratory JOIN Patient ON Laboratory.ID = Patient.ID WHERE Laboratory.LDH NOT BETWEEN 140 AND 280;\t----- bird -----\tthrombosis_prediction",
    "1286": "SELECT COUNT(DISTINCT Patient.ID) FROM Patient JOIN Laboratory ON Patient.ID = Laboratory.ID WHERE Laboratory.ALP > (SELECT AVG(ALP) FROM Laboratory);\t----- bird -----\tthrombosis_prediction",
    "1287": "SELECT COUNT(DISTINCT Patient.ID) FROM Patient JOIN Laboratory ON Patient.ID = Laboratory.ID WHERE Laboratory.ALP BETWEEN 44 AND 147;\t----- bird -----\tthrombosis_prediction",
    "1288": "SELECT DISTINCT Patient.Diagnosis FROM Patient JOIN Laboratory ON Patient.ID = Laboratory.ID WHERE Laboratory.TP < (SELECT MIN(TP) FROM Laboratory WHERE TP IS NOT NULL) OR Laboratory.TP IS NULL;\t----- bird -----\tthrombosis_prediction",
    "1289": "SELECT COUNT(DISTINCT p.ID) FROM Patient p JOIN Laboratory l ON p.ID = l.ID WHERE p.Diagnosis = 'SJS' AND l.TP BETWEEN 6.0 AND 8.3;\t----- bird -----\tthrombosis_prediction",
    "1290": "SELECT Examination.`Examination Date` FROM Examination JOIN Laboratory ON Examination.ID = Laboratory.ID WHERE Laboratory.ALB = (SELECT MAX(ALB) FROM Laboratory WHERE ALB BETWEEN 3.5 AND 5.0);\t----- bird -----\tthrombosis_prediction",
    "1291": "SELECT COUNT(DISTINCT Patient.ID) FROM Patient JOIN Laboratory ON Patient.ID = Laboratory.ID WHERE Patient.SEX = 'Male' AND Laboratory.ALB BETWEEN 3.5 AND 5.0 AND Laboratory.TP BETWEEN 6.0 AND 8.3;\t----- bird -----\tthrombosis_prediction",
    "1292": "SELECT e.`aCL IgG`, e.`aCL IgM`, e.`aCL IgA` FROM Examination e JOIN Patient p ON e.ID = p.ID JOIN Laboratory l ON p.ID = l.ID WHERE p.SEX = 'F' AND l.UA BETWEEN 3.5 AND 7.2 ORDER BY l.UA DESC LIMIT 1;\t----- bird -----\tthrombosis_prediction",
    "1293": "SELECT MAX(ANA) FROM Examination JOIN Laboratory ON Examination.ID = Laboratory.ID WHERE CRE BETWEEN 0.6 AND 1.3;\t----- bird -----\tthrombosis_prediction",
    "1294": "SELECT p.ID FROM Patient p JOIN Laboratory l ON p.ID = l.ID JOIN Examination e ON p.ID = e.ID WHERE l.CRE BETWEEN 0.6 AND 1.2 ORDER BY (e.`aCL IgG` + e.`aCL IgM` + e.`aCL IgA`) DESC LIMIT 1;\t----- bird -----\tthrombosis_prediction",
    "1295": "SELECT COUNT(DISTINCT p.ID) FROM Patient p JOIN Laboratory l ON p.ID = l.ID JOIN Examination e ON p.ID = e.ID WHERE l.`T-BIL` > (SELECT MAX(`T-BIL`) FROM Laboratory) AND e.`ANA Pattern` = 'peripheral';\t----- bird -----\tthrombosis_prediction",
    "1296": "SELECT e.ANA FROM Examination e JOIN Laboratory l ON e.ID = l.ID WHERE l.T_BIL = (SELECT MAX(T_BIL) FROM Laboratory WHERE T_BIL BETWEEN 0.3 AND 1.2);\t----- bird -----\tthrombosis_prediction",
    "1297": "SELECT COUNT(DISTINCT p.ID) FROM Patient p JOIN Laboratory l ON p.ID = l.ID JOIN Examination e ON p.ID = e.ID WHERE l.T-CHO > (SELECT AVG(T-CHO) FROM Laboratory) AND e.KCT = 'negative' AND e.RVVT = 'negative' AND e.LAC = 'negative';\t----- bird -----\tthrombosis_prediction",
    "1298": "SELECT COUNT(DISTINCT p.ID) FROM Patient p JOIN Laboratory l ON p.ID = l.ID JOIN Examination e ON p.ID = e.ID WHERE l.T-CHO BETWEEN 125 AND 200 AND e.`ANA Pattern` = 'P';\t----- bird -----\tthrombosis_prediction",
    "1299": "SELECT COUNT(DISTINCT Patient.ID) FROM Patient JOIN Laboratory ON Patient.ID = Laboratory.ID WHERE Laboratory.TG BETWEEN 50 AND 150 AND EXISTS (SELECT 1 FROM Examination WHERE Examination.ID = Patient.ID AND Examination.Symptoms IS NOT NULL AND Examination.Symptoms <> '');\t----- bird -----\tthrombosis_prediction",
    "1300": "SELECT p.Diagnosis FROM Patient p JOIN Laboratory l ON p.ID = l.ID WHERE l.TG = (SELECT MAX(TG) FROM Laboratory WHERE TG <= (SELECT MAX(TG) FROM Laboratory WHERE TG <= 150)) LIMIT 1;\t----- bird -----\tthrombosis_prediction",
    "1301": "SELECT DISTINCT Patient.ID FROM Patient JOIN Laboratory ON Patient.ID = Laboratory.ID WHERE Laboratory.CPK NOT BETWEEN 26 AND 192 AND Patient.ID NOT IN (SELECT ID FROM Examination WHERE Thrombosis = 'Yes');\t----- bird -----\tthrombosis_prediction",
    "1302": "SELECT COUNT(DISTINCT p.ID) FROM Patient p JOIN Laboratory l ON p.ID = l.ID WHERE l.CPK BETWEEN 30 AND 200 AND (l.PT > normal_upper_limit OR l.APTT > normal_upper_limit OR l.FG > normal_upper_limit);\t----- bird -----\tthrombosis_prediction",
    "1303": "SELECT Birthday FROM Patient WHERE ID = (SELECT ID FROM Laboratory WHERE GLU NOT BETWEEN 70 AND 110 ORDER BY Date LIMIT 1) ORDER BY Birthday ASC LIMIT 1;\t----- bird -----\tthrombosis_prediction",
    "1304": "SELECT COUNT(DISTINCT p.ID) FROM Patient p JOIN Laboratory l ON p.ID = l.ID JOIN Examination e ON p.ID = e.ID WHERE l.GLU BETWEEN 70 AND 99 AND (e.Thrombosis IS NULL OR e.Thrombosis = 0);\t----- bird -----\tthrombosis_prediction",
    "1305": "SELECT COUNT(DISTINCT Patient.ID) FROM Patient JOIN Laboratory ON Patient.ID = Laboratory.ID WHERE Patient.Admission IS NOT NULL AND Laboratory.WBC BETWEEN 4000 AND 11000;\t----- bird -----\tthrombosis_prediction",
    "1306": "SELECT COUNT(DISTINCT Patient.ID) FROM Patient JOIN Laboratory ON Patient.ID = Laboratory.ID WHERE Patient.Diagnosis = 'SLE' AND Laboratory.WBC BETWEEN 4000 AND 11000;\t----- bird -----\tthrombosis_prediction",
    "1307": "SELECT DISTINCT Patient.ID FROM Patient JOIN Laboratory ON Patient.ID = Laboratory.ID WHERE Laboratory.RBC NOT BETWEEN 4.2 AND 5.9 AND Patient.Description LIKE '%outpatient%';\t----- bird -----\tthrombosis_prediction",
    "1308": "SELECT COUNT(DISTINCT p.ID) FROM Patient p JOIN Laboratory l ON p.ID = l.ID JOIN Examination e ON p.ID = e.ID WHERE l.PLT BETWEEN 150 AND 450 AND e.Symptoms IS NOT NULL AND e.Symptoms <> '';\t----- bird -----\tthrombosis_prediction",
    "1309": "SELECT Laboratory.PLT FROM Laboratory JOIN Patient ON Laboratory.ID = Patient.ID WHERE Patient.Diagnosis = 'MCTD' AND Laboratory.PLT BETWEEN 150 AND 450;\t----- bird -----\tthrombosis_prediction",
    "1310": "SELECT AVG(Laboratory.PT) FROM Patient JOIN Laboratory ON Patient.ID = Laboratory.ID WHERE Patient.SEX = 'male' AND Laboratory.PT BETWEEN 10 AND 14;\t----- bird -----\tthrombosis_prediction",
    "1311": "SELECT COUNT(DISTINCT Patient.ID) FROM Patient JOIN Examination ON Patient.ID = Examination.ID JOIN Laboratory ON Patient.ID = Laboratory.ID WHERE Examination.Thrombosis = 'severe' AND Laboratory.PT BETWEEN 10 AND 14;\t----- bird -----\tthrombosis_prediction",
    "1312": "SELECT major.major_name FROM member JOIN major ON member.link_to_major = major.major_id WHERE member.first_name = 'Angela' AND member.last_name = 'Sanders';\t----- bird -----\tstudent_club",
    "1313": "SELECT COUNT(DISTINCT m.member_id) FROM member m JOIN major mj ON m.link_to_major = mj.major_id WHERE mj.college = 'College of Engineering' AND m.position = 'Student_Club';\t----- bird -----\tstudent_club",
    "1314": "SELECT m.first_name || ' ' || m.last_name AS full_name FROM member m JOIN major ma ON m.link_to_major = ma.major_id WHERE ma.department = 'Art and Design' AND m.position = 'Student_Club';\t----- bird -----\tstudent_club",
    "1315": "SELECT COUNT(DISTINCT a.link_to_member) FROM attendance a JOIN event e ON a.link_to_event = e.event_id JOIN member m ON a.link_to_member = m.member_id WHERE e.event_name = 'Women''s Soccer' AND m.position = 'Student_Club';\t----- bird -----\tstudent_club",
    "1316": "SELECT DISTINCT m.phone FROM member m JOIN attendance a ON m.member_id = a.link_to_member JOIN event e ON a.link_to_event = e.event_id WHERE e.event_name = 'Women''s Soccer' AND m.position = 'Student_Club';\t----- bird -----\tstudent_club",
    "1317": "SELECT COUNT(DISTINCT m.member_id) FROM member m JOIN attendance a ON m.member_id = a.link_to_member JOIN event e ON a.link_to_event = e.event_id WHERE e.event_name = 'Women''s Soccer' AND m.position = 'Student_Club' AND m.t_shirt_size = 'medium';\t----- bird -----\tstudent_club",
    "1318": "SELECT e.event_name FROM event e JOIN attendance a ON e.event_id = a.link_to_event JOIN member m ON a.link_to_member = m.member_id WHERE m.position = 'Student_Club' GROUP BY e.event_id, e.event_name ORDER BY COUNT(m.member_id) DESC LIMIT 1;\t----- bird -----\tstudent_club",
    "1319": "SELECT major.college FROM member JOIN major ON member.link_to_major = major.major_id WHERE member.position = 'vice president' AND major.college = 'Student_Club';\t----- bird -----\tstudent_club",
    "1320": "SELECT e.event_name FROM event e JOIN attendance a ON e.event_id = a.link_to_event JOIN member m ON a.link_to_member = m.member_id WHERE m.first_name = 'Maya' AND m.last_name = 'Mclean';\t----- bird -----\tstudent_club",
    "1321": "SELECT COUNT(DISTINCT e.event_id) FROM event e JOIN attendance a ON e.event_id = a.link_to_event JOIN member m ON a.link_to_member = m.member_id WHERE e.type = 'Student_Club' AND m.first_name = 'Sacha' AND m.last_name = 'Harrison' AND YEAR(e.event_date) = 2019;\t----- bird -----\tstudent_club",
    "1322": "SELECT COUNT(*) FROM event e JOIN attendance a ON e.event_id = a.link_to_event JOIN member m ON a.link_to_member = m.member_id WHERE m.position = 'Student_Club' GROUP BY e.event_id HAVING COUNT(DISTINCT m.member_id) > 10 AND e.type = 'meeting';\t----- bird -----\tstudent_club",
    "1323": "SELECT e.event_name FROM event e JOIN attendance a ON e.event_id = a.link_to_event WHERE e.type <> 'fundraiser' GROUP BY e.event_id, e.event_name HAVING COUNT(a.link_to_member) > 20;\t----- bird -----\tstudent_club",
    "1324": "SELECT AVG(attendance_count) FROM (SELECT e.event_id, COUNT(a.link_to_member) AS attendance_count FROM event e LEFT JOIN attendance a ON e.event_id = a.link_to_event WHERE e.type = 'meeting' AND YEAR(e.event_date) = 2020 GROUP BY e.event_id) subquery;\t----- bird -----\tstudent_club",
    "1325": "SELECT expense_description, cost FROM expense ORDER BY cost DESC LIMIT 1;\t----- bird -----\tstudent_club",
    "1326": "SELECT COUNT(*) FROM member m JOIN major ma ON m.link_to_major = ma.major_id WHERE ma.major_name = 'Environmental Engineering' AND m.position = 'Student_Club';\t----- bird -----\tstudent_club",
    "1327": "SELECT m.first_name || ' ' || m.last_name AS full_name FROM member m JOIN attendance a ON m.member_id = a.link_to_member JOIN event e ON a.link_to_event = e.event_id WHERE e.event_name = 'Laugh Out Loud' AND m.position = 'Student_Club';\t----- bird -----\tstudent_club",
    "1328": "SELECT last_name FROM member JOIN major ON member.link_to_major = major.major_id WHERE major.major_name = 'Law and Constitutional Studies';\t----- bird -----\tstudent_club",
    "1329": "SELECT z.county FROM member m JOIN zip_code z ON m.zip = z.zip_code WHERE m.first_name = 'Sherri' AND m.last_name = 'Ramsey';\t----- bird -----\tstudent_club",
    "1330": "SELECT major.college FROM major JOIN member ON major.major_id = member.link_to_major WHERE member.first_name = 'Tyler' AND member.last_name = 'Hewitt' LIMIT 1;\t----- bird -----\tstudent_club",
    "1331": "SELECT SUM(income.amount) AS total_funds FROM income JOIN member ON income.link_to_member = member.member_id WHERE member.position = 'Vice President';\t----- bird -----\tstudent_club",
    "1332": "SELECT SUM(e.cost) FROM expense e JOIN budget b ON e.link_to_budget = b.budget_id JOIN event ev ON b.link_to_event = ev.event_id JOIN member m ON e.link_to_member = m.member_id WHERE ev.event_name = 'September Meeting' AND b.category = 'food' AND m.position = 'Student_Club';\t----- bird -----\tstudent_club",
    "1333": "SELECT z.city, z.state FROM member m JOIN zip_code z ON m.zip = z.zip_code WHERE m.position = 'President' AND m.email LIKE '%Student_Club%' LIMIT 1;\t----- bird -----\tstudent_club",
    "1334": "SELECT CONCAT(m.first_name, ' ', m.last_name) AS full_name FROM member m JOIN zip_code z ON m.zip = z.zip_code WHERE z.state = 'Illinois';\t----- bird -----\tstudent_club",
    "1335": "SELECT SUM(e.cost) FROM expense e JOIN budget b ON e.link_to_budget = b.budget_id JOIN event ev ON b.link_to_event = ev.event_id JOIN member m ON e.link_to_member = m.member_id WHERE ev.event_name = 'September Meeting' AND b.category = 'advertisement' AND m.position = 'Student_Club';\t----- bird -----\tstudent_club",
    "1336": "SELECT m.department FROM major m JOIN member mb ON m.major_id = mb.link_to_major WHERE mb.first_name IN ('Pierce', 'Guidi');\t----- bird -----\tstudent_club",
    "1337": "SELECT SUM(b.amount) FROM budget b JOIN event e ON b.link_to_event = e.event_id WHERE e.event_name = 'October Speaker';\t----- bird -----\tstudent_club",
    "1338": "SELECT expense.expense_id, expense.approved FROM expense JOIN budget ON expense.link_to_budget = budget.budget_id JOIN event ON budget.link_to_event = event.event_id WHERE event.event_name = 'October Meeting' AND event.event_date = '2019-10-08';\t----- bird -----\tstudent_club",
    "1339": "SELECT AVG(e.cost) AS average_cost FROM expense e JOIN member m ON e.link_to_member = m.member_id JOIN budget b ON e.link_to_budget = b.budget_id JOIN event ev ON b.link_to_event = ev.event_id WHERE m.first_name = 'Elijah' AND m.last_name = 'Allen' AND ev.event_date BETWEEN '2023-09-01' AND '2023-10-31';\t----- bird -----\tstudent_club",
    "1340": "SELECT ABS(SUM(CASE WHEN YEAR(e.event_date) = 2019 THEN b.spent ELSE 0 END) - SUM(CASE WHEN YEAR(e.event_date) = 2020 THEN b.spent ELSE 0 END)) AS difference FROM event e JOIN budget b ON e.event_id = b.link_to_event WHERE e.type = 'Student_Club' AND YEAR(e.event_date) IN (2019, 2020);\t----- bird -----\tstudent_club",
    "1341": "SELECT location FROM event WHERE event_name = 'Spring Budget Review';\t----- bird -----\tstudent_club",
    "1342": "SELECT cost FROM expense WHERE expense_description = 'Posters' AND expense_date = '2019-09-04';\t----- bird -----\tstudent_club",
    "1343": "SELECT remaining FROM budget WHERE category = 'Food' ORDER BY amount DESC LIMIT 1;\t----- bird -----\tstudent_club",
    "1344": "SELECT notes FROM event WHERE event_name = 'fundraising' AND event_date = '2019-09-14';\t----- bird -----\tstudent_club",
    "1345": "SELECT COUNT(*) FROM major WHERE college = 'College of Humanities and Social Sciences';\t----- bird -----\tstudent_club",
    "1346": "SELECT phone FROM member WHERE first_name = 'Carlo' AND last_name = 'Jacobs';\t----- bird -----\tstudent_club",
    "1347": "SELECT z.county FROM member m JOIN zip_code z ON m.zip = z.zip_code WHERE m.first_name = 'Adela' AND m.last_name = 'O''Gallagher';\t----- bird -----\tstudent_club",
    "1348": "SELECT COUNT(*) FROM budget b JOIN event e ON b.link_to_event = e.event_id WHERE e.event_name = 'November Meeting' AND b.spent > b.amount;\t----- bird -----\tstudent_club",
    "1349": "SELECT SUM(b.amount) FROM budget b JOIN event e ON b.link_to_event = e.event_id WHERE e.event_name = 'September Speaker';\t----- bird -----\tstudent_club",
    "1350": "SELECT e.status FROM event e JOIN budget b ON e.event_id = b.link_to_event WHERE b.category = 'Post Cards, Posters' AND b.event_status = '2019-08-20';\t----- bird -----\tstudent_club",
    "1351": "SELECT major.major_name FROM member JOIN major ON member.link_to_major = major.major_id WHERE member.first_name = 'Brent' AND member.last_name = 'Thomason';\t----- bird -----\tstudent_club",
    "1352": "SELECT COUNT(*) FROM member m JOIN major mj ON m.link_to_major = mj.major_id WHERE mj.major_name = 'Business' AND m.t_shirt_size = 'Medium';\t----- bird -----\tstudent_club",
    "1353": "SELECT z.type FROM member m JOIN zip_code z ON m.zip = z.zip_code WHERE m.first_name = 'Christof' AND m.last_name = 'Nielson';\t----- bird -----\tstudent_club",
    "1354": "SELECT major.major_name FROM member JOIN major ON member.link_to_major = major.major_id WHERE member.position = 'Vice President';\t----- bird -----\tstudent_club",
    "1355": "SELECT z.state FROM member m JOIN zip_code z ON m.zip = z.zip_code WHERE m.first_name = 'Sacha' AND m.last_name = 'Harrison';\t----- bird -----\tstudent_club",
    "1356": "SELECT major.department FROM member JOIN major ON member.link_to_major = major.major_id WHERE member.position = 'President';\t----- bird -----\tstudent_club",
    "1357": "SELECT income.date_received FROM income JOIN member ON income.link_to_member = member.member_id WHERE member.first_name = 'Connor' AND member.last_name = 'Hilton';\t----- bird -----\tstudent_club",
    "1358": "SELECT CONCAT(first_name, ' ', last_name) AS full_name FROM member WHERE member_id = (SELECT link_to_member FROM income ORDER BY date_received ASC LIMIT 1);\t----- bird -----\tstudent_club",
    "1359": "SELECT CASE WHEN b1.amount > b2.amount THEN 1 ELSE 0 END AS times_more FROM budget b1 JOIN event e1 ON b1.link_to_event = e1.event_id JOIN budget b2 ON b2.category = b1.category JOIN event e2 ON b2.link_to_event = e2.event_id WHERE b1.category = 'Advertisement' AND e1.event_name = 'Yearly Kickoff' AND e2.event_name = 'October Meeting';\t----- bird -----\tstudent_club",
    "1360": "SELECT (SUM(CASE WHEN category = 'Parking' THEN amount ELSE 0 END) / SUM(amount)) * 100 AS parking_budget_percentage FROM budget WHERE link_to_event = (SELECT event_id FROM event WHERE event_name = 'November Speaker');\t----- bird -----\tstudent_club",
    "1361": "SELECT SUM(cost) FROM expense WHERE expense_description LIKE '%pizza%' OR expense_description LIKE '%Pizza%';\t----- bird -----\tstudent_club",
    "1362": "SELECT COUNT(DISTINCT city) FROM zip_code WHERE county = 'Orange' AND state = 'Virginia';\t----- bird -----\tstudent_club",
    "1363": "SELECT DISTINCT department FROM major WHERE college = 'College of Humanities and Social Sciences';\t----- bird -----\tstudent_club",
    "1364": "SELECT z.city FROM member m JOIN zip_code z ON m.zip = z.zip_code WHERE m.first_name = 'Amy' AND m.last_name = 'Firth';\t----- bird -----\tstudent_club",
    "1365": "SELECT * FROM expense WHERE link_to_budget = (SELECT budget_id FROM budget ORDER BY remaining ASC LIMIT 1);\t----- bird -----\tstudent_club",
    "1366": "SELECT m.* FROM member m JOIN attendance a ON m.member_id = a.link_to_member JOIN event e ON a.link_to_event = e.event_id WHERE e.event_name = 'October Meeting';\t----- bird -----\tstudent_club",
    "1367": "SELECT major.college FROM member JOIN major ON member.link_to_major = major.major_id GROUP BY major.college ORDER BY COUNT(member.member_id) DESC LIMIT 1;\t----- bird -----\tstudent_club",
    "1368": "SELECT major.major_name FROM member JOIN major ON member.link_to_major = major.major_id WHERE member.phone = '809-555-3360';\t----- bird -----\tstudent_club",
    "1369": "SELECT event.event_name FROM event JOIN budget ON event.event_id = budget.link_to_event ORDER BY budget.amount DESC LIMIT 1;\t----- bird -----\tstudent_club",
    "1370": "SELECT e.* FROM expense e JOIN member m ON e.link_to_member = m.member_id WHERE m.position = 'vice president';\t----- bird -----\tstudent_club",
    "1371": "SELECT COUNT(DISTINCT attendance.link_to_member) FROM attendance JOIN event ON attendance.link_to_event = event.event_id WHERE event.event_name = 'Women''s Soccer';\t----- bird -----\tstudent_club",
    "1372": "SELECT income.date_received FROM income JOIN member ON income.link_to_member = member.member_id WHERE member.first_name = 'Casey' AND member.last_name = 'Mason';\t----- bird -----\tstudent_club",
    "1373": "SELECT COUNT(DISTINCT m.member_id) FROM member m JOIN zip_code z ON m.zip = z.zip_code WHERE z.state = 'Maryland';\t----- bird -----\tstudent_club",
    "1374": "SELECT COUNT(DISTINCT a.link_to_event) FROM attendance a JOIN member m ON a.link_to_member = m.member_id WHERE m.phone = '954-555-6240';\t----- bird -----\tstudent_club",
    "1375": "SELECT m.* FROM member m JOIN major ma ON m.link_to_major = ma.major_id WHERE ma.department = 'School of Applied Sciences, Technology and Education';\t----- bird -----\tstudent_club",
    "1376": "SELECT e.event_id, e.event_name, b.spent / b.amount AS spend_to_budget_ratio FROM event e JOIN budget b ON e.event_id = b.link_to_event WHERE e.status = 'closed' ORDER BY spend_to_budget_ratio DESC LIMIT 1;\t----- bird -----\tstudent_club",
    "1377": "SELECT COUNT(*) FROM member WHERE position = 'president';\t----- bird -----\tstudent_club",
    "1378": "SELECT MAX(spent) FROM budget;\t----- bird -----\tstudent_club",
    "1379": "SELECT COUNT(*) FROM event WHERE type = 'meeting' AND event_date BETWEEN '2020-01-01' AND '2020-12-31';\t----- bird -----\tstudent_club",
    "1380": "SELECT SUM(cost) AS total_food_spent FROM expense WHERE expense_description LIKE '%food%';\t----- bird -----\tstudent_club",
    "1381": "SELECT m.first_name, m.last_name FROM member m JOIN attendance a ON m.member_id = a.link_to_member GROUP BY m.member_id, m.first_name, m.last_name HAVING COUNT(a.link_to_event) > 7;\t----- bird -----\tstudent_club",
    "1382": "SELECT DISTINCT m.first_name, m.last_name FROM member m JOIN major mj ON m.link_to_major = mj.major_id JOIN attendance a ON m.member_id = a.link_to_member JOIN event e ON a.link_to_event = e.event_id WHERE mj.major_name = 'interior design' AND e.event_name = 'Community Theater' AND m.position = 'student';\t----- bird -----\tstudent_club",
    "1383": "SELECT first_name, last_name FROM member JOIN zip_code ON member.zip = zip_code.zip_code WHERE zip_code.city = 'Georgetown' AND zip_code.state = 'South Carolina';\t----- bird -----\tstudent_club",
    "1384": "SELECT COUNT(*) FROM income JOIN member ON income.link_to_member = member.member_id WHERE member.first_name = 'Grant' AND member.last_name = 'Gilmour';\t----- bird -----\tstudent_club",
    "1385": "SELECT m.member_id, m.first_name, m.last_name FROM member m JOIN income i ON m.member_id = i.link_to_member WHERE i.amount > 40;\t----- bird -----\tstudent_club",
    "1386": "SELECT SUM(e.cost) FROM expense e JOIN budget b ON e.link_to_budget = b.budget_id JOIN event ev ON b.link_to_event = ev.event_id WHERE ev.event_name = 'Yearly Kickoff';\t----- bird -----\tstudent_club",
    "1387": "SELECT m.first_name, m.last_name FROM member m JOIN budget b ON m.member_id = b.link_to_event JOIN event e ON b.link_to_event = e.event_id WHERE e.event_name = 'Yearly Kickoff';\t----- bird -----\tstudent_club",
    "1388": "SELECT m.first_name, m.last_name, i.source FROM member m JOIN income i ON m.member_id = i.link_to_member ORDER BY i.amount DESC LIMIT 1;\t----- bird -----\tstudent_club",
    "1389": "SELECT e.event_name FROM event e JOIN budget b ON e.event_id = b.link_to_event ORDER BY b.spent ASC LIMIT 1;\t----- bird -----\tstudent_club",
    "1390": "SELECT (SUM(e.cost) * 100.0 / (SELECT SUM(cost) FROM expense)) AS percentage_cost FROM expense e JOIN budget b ON e.link_to_budget = b.budget_id JOIN event ev ON b.link_to_event = ev.event_id WHERE ev.event_name = 'Yearly Kickoff';\t----- bird -----\tstudent_club",
    "1391": "SELECT (SELECT COUNT(*) FROM member m JOIN major ma ON m.link_to_major = ma.major_id WHERE ma.major_name = 'finance') * 1.0 / NULLIF((SELECT COUNT(*) FROM member m JOIN major ma ON m.link_to_major = ma.major_id WHERE ma.major_name = 'physics'), 0) AS finance_to_physics_ratio;\t----- bird -----\tstudent_club",
    "1392": "SELECT source FROM income WHERE date_received >= '2019-09-01' AND date_received < '2019-10-01' GROUP BY source ORDER BY SUM(amount) DESC LIMIT 1;\t----- bird -----\tstudent_club",
    "1393": "SELECT CONCAT(first_name, ' ', last_name) AS full_name, email FROM member WHERE position = 'Secretary' AND member_id IN (SELECT link_to_member FROM attendance WHERE link_to_event IN (SELECT event_id FROM event WHERE event_name = 'Student_Club'));\t----- bird -----\tstudent_club",
    "1394": "SELECT COUNT(*) FROM member JOIN major ON member.link_to_major = major.major_id WHERE major.major_name = 'Physics Teaching';\t----- bird -----\tstudent_club",
    "1395": "SELECT COUNT(DISTINCT attendance.link_to_member) FROM attendance JOIN event ON attendance.link_to_event = event.event_id WHERE event.event_name = 'Community Theater' AND YEAR(event.event_date) = 2019;\t----- bird -----\tstudent_club",
    "1396": "SELECT COUNT(a.link_to_event) AS events_attended, m2.major_name FROM member m1 JOIN attendance a ON m1.member_id = a.link_to_member JOIN member m ON m1.member_id = m.member_id JOIN major m2 ON m.link_to_major = m2.major_id WHERE m1.first_name = 'Luisa' AND m1.last_name = 'Guidi' GROUP BY m2.major_name;\t----- bird -----\tstudent_club",
    "1397": "SELECT AVG(b.spent) FROM budget b JOIN event e ON b.link_to_event = e.event_id WHERE e.event_name = 'Student_Club' AND b.category = 'food' AND e.event_date < CURRENT_DATE;\t----- bird -----\tstudent_club",
    "1398": "SELECT e.event_name FROM event e JOIN budget b ON e.event_id = b.link_to_event WHERE b.category = 'advertisement' ORDER BY b.spent DESC LIMIT 1;\t----- bird -----\tstudent_club",
    "1399": "SELECT CASE WHEN COUNT(*) > 0 THEN 'Yes' ELSE 'No' END AS attended FROM attendance a JOIN member m ON a.link_to_member = m.member_id JOIN event e ON a.link_to_event = e.event_id WHERE m.first_name = 'Maya' AND m.last_name = 'Mclean' AND e.event_name = 'Women''s Soccer';\t----- bird -----\tstudent_club",
    "1400": "SELECT (COUNT(CASE WHEN type = 'Community Service' THEN 1 END) * 100.0 / COUNT(*)) AS percentage_share FROM event WHERE event_name = 'Student_Club' AND YEAR(event_date) = 2019;\t----- bird -----\tstudent_club",
    "1401": "SELECT SUM(e.cost) AS total_poster_cost FROM expense e JOIN budget b ON e.link_to_budget = b.budget_id JOIN event ev ON b.link_to_event = ev.event_id WHERE ev.event_name = 'September Speaker' AND e.expense_description LIKE '%poster%';\t----- bird -----\tstudent_club",
    "1402": "SELECT t_shirt_size FROM member GROUP BY t_shirt_size ORDER BY COUNT(*) DESC LIMIT 1;\t----- bird -----\tstudent_club",
    "1403": "SELECT e.event_name FROM event e JOIN budget b ON e.event_id = b.link_to_event JOIN expense ex ON b.budget_id = ex.link_to_budget WHERE e.status = 'closed' GROUP BY e.event_id, e.event_name, b.amount HAVING SUM(ex.cost) > b.amount ORDER BY SUM(ex.cost) - b.amount DESC LIMIT 1;\t----- bird -----\tstudent_club",
    "1404": "SELECT e.expense_description AS expense_type, SUM(e.cost) AS total_value FROM expense e JOIN budget b ON e.link_to_budget = b.budget_id JOIN event ev ON b.link_to_event = ev.event_id WHERE ev.event_name = 'October Meeting' AND e.approved = TRUE GROUP BY e.expense_description;\t----- bird -----\tstudent_club",
    "1405": "SELECT category, amount FROM budget WHERE link_to_event = (SELECT event_id FROM event WHERE event_name = 'April Speaker') ORDER BY amount ASC;\t----- bird -----\tstudent_club",
    "1406": "SELECT * FROM budget WHERE category = 'Food' ORDER BY amount DESC LIMIT 1;\t----- bird -----\tstudent_club",
    "1407": "SELECT * FROM budget WHERE category = 'Advertising' ORDER BY amount DESC LIMIT 3;\t----- bird -----\tstudent_club",
    "1408": "SELECT SUM(cost) FROM expense WHERE expense_description LIKE '%Parking%';\t----- bird -----\tstudent_club",
    "1409": "SELECT SUM(cost) AS total_expense FROM expense WHERE expense_date = '2019-08-20';\t----- bird -----\tstudent_club",
    "1410": "SELECT CONCAT(first_name, ' ', last_name) AS full_name, SUM(cost) AS total_cost FROM member JOIN expense ON member.member_id = expense.link_to_member WHERE member.member_id = 'rec4BLdZHS2Blfp4v' GROUP BY member.member_id;\t----- bird -----\tstudent_club",
    "1411": "SELECT expense.expense_description FROM expense JOIN member ON expense.link_to_member = member.member_id WHERE member.first_name = 'Sacha' AND member.last_name = 'Harrison';\t----- bird -----\tstudent_club",
    "1412": "SELECT expense.expense_description FROM expense JOIN member ON expense.link_to_member = member.member_id WHERE member.t_shirt_size = 'X-Large';\t----- bird -----\tstudent_club",
    "1413": "SELECT DISTINCT m.zip FROM member m JOIN expense e ON m.member_id = e.link_to_member WHERE e.cost < 50;\t----- bird -----\tstudent_club",
    "1414": "SELECT major.major_name FROM member JOIN major ON member.link_to_major = major.major_id WHERE member.first_name = 'Phillip' AND member.last_name = 'Cullen';\t----- bird -----\tstudent_club",
    "1415": "SELECT DISTINCT m.position FROM member m JOIN major mj ON m.link_to_major = mj.major_id WHERE mj.major_name = 'Business';\t----- bird -----\tstudent_club",
    "1416": "SELECT COUNT(*) FROM member m JOIN major mj ON m.link_to_major = mj.major_id WHERE mj.major_name = 'Business' AND m.t_shirt_size = 'Medium';\t----- bird -----\tstudent_club",
    "1417": "SELECT DISTINCT e.type FROM event e JOIN budget b ON e.event_id = b.link_to_event WHERE b.remaining > 30;\t----- bird -----\tstudent_club",
    "1418": "SELECT DISTINCT b.category FROM event e JOIN budget b ON e.event_id = b.link_to_event WHERE e.location = 'MU 215';\t----- bird -----\tstudent_club",
    "1419": "SELECT b.category FROM event e JOIN budget b ON e.event_id = b.link_to_event WHERE e.event_date = '2020-03-24T12:00:00';\t----- bird -----\tstudent_club",
    "1420": "SELECT major.major_name FROM member JOIN major ON member.link_to_major = major.major_id WHERE member.position = 'Vice President';\t----- bird -----\tstudent_club",
    "1421": "SELECT (COUNT(DISTINCT m.member_id) * 100.0 / (SELECT COUNT(*) FROM member)) AS business_major_percentage FROM member m JOIN major ma ON m.link_to_major = ma.major_id WHERE ma.major_name = 'Business';\t----- bird -----\tstudent_club",
    "1422": "SELECT DISTINCT b.category FROM event e JOIN budget b ON e.event_id = b.link_to_event WHERE e.location = 'MU 215';\t----- bird -----\tstudent_club",
    "1423": "SELECT COUNT(*) FROM income WHERE amount = 50;\t----- bird -----\tstudent_club",
    "1424": "SELECT COUNT(*) FROM member WHERE t_shirt_size = 'XL';\t----- bird -----\tstudent_club",
    "1425": "SELECT COUNT(*) FROM major WHERE college = 'College of Agriculture and Applied Sciences' AND department = 'School of Applied Sciences, Technology and Education';\t----- bird -----\tstudent_club",
    "1426": "SELECT m.last_name, maj.department, maj.college FROM member m JOIN major maj ON m.link_to_major = maj.major_id WHERE maj.major_name = 'environmental engineering';\t----- bird -----\tstudent_club",
    "1427": "SELECT b.category FROM budget b JOIN event e ON b.link_to_event = e.event_id WHERE e.location = 'MU 215' AND e.type = 'guest speaker' AND b.spent = 0;\t----- bird -----\tstudent_club",
    "1428": "SELECT DISTINCT z.city, z.state FROM member m JOIN major ma ON m.link_to_major = ma.major_id JOIN zip_code z ON m.zip = z.zip_code WHERE ma.department = 'electrical and computer engineering';\t----- bird -----\tstudent_club",
    "1429": "SELECT e.event_name FROM event e JOIN attendance a ON e.event_id = a.link_to_event JOIN member m ON a.link_to_member = m.member_id WHERE e.type = 'social' AND m.position = 'vice president' AND e.location = '900 E. Washington St.';\t----- bird -----\tstudent_club",
    "1430": "SELECT m.last_name, m.position FROM member m JOIN expense e ON m.member_id = e.link_to_member WHERE e.expense_description = 'pizza' AND e.expense_date = '2019-09-10';\t----- bird -----\tstudent_club",
    "1431": "SELECT m.last_name FROM member m JOIN attendance a ON m.member_id = a.link_to_member JOIN event e ON a.link_to_event = e.event_id WHERE e.event_name = 'women''s soccer';\t----- bird -----\tstudent_club",
    "1432": "SELECT (SUM(CASE WHEN amount = 50 AND source = 'Student_Club' THEN amount ELSE 0 END) * 100.0 / NULLIF(SUM(amount), 0)) AS percentage FROM income JOIN member ON income.link_to_member = member.member_id WHERE member.t_shirt_size = 'medium';\t----- bird -----\tstudent_club",
    "1433": "SELECT DISTINCT state FROM zip_code WHERE type LIKE '%post office box%' OR type LIKE '%PO box%' OR type LIKE '%P.O. box%' OR type LIKE '%postoffice box%' OR type LIKE '%POBox%' OR type LIKE '%P.O.Box%' OR type LIKE '%post box%' OR type LIKE '%postofficebox%';\t----- bird -----\tstudent_club",
    "1434": "SELECT DISTINCT z.zip_code FROM zip_code z WHERE z.type = 'Post Office Box' AND z.state = 'Puerto Rico' AND z.county = 'San Juan Municipio';\t----- bird -----\tstudent_club",
    "1435": "SELECT event_name FROM event WHERE status = 'closed' AND type = 'game' AND event_date BETWEEN '2019-03-15' AND '2020-03-20';\t----- bird -----\tstudent_club",
    "1436": "SELECT DISTINCT attendance.link_to_event FROM attendance JOIN income ON attendance.link_to_member = income.link_to_member WHERE income.amount > 50;\t----- bird -----\tstudent_club",
    "1437": "SELECT DISTINCT m.member_id, m.first_name, m.last_name, a.link_to_event FROM member m JOIN expense e ON m.member_id = e.link_to_member JOIN attendance a ON m.member_id = a.link_to_member WHERE e.approved = TRUE AND e.expense_date BETWEEN '2019-01-10' AND '2019-11-19';\t----- bird -----\tstudent_club",
    "1438": "SELECT major.college FROM member JOIN major ON member.link_to_major = major.major_id WHERE member.first_name = 'Katy' AND member.link_to_major = 'rec1N0upiVLy5esTO';\t----- bird -----\tstudent_club",
    "1439": "SELECT member.phone FROM member JOIN major ON member.link_to_major = major.major_id WHERE major.major_name = 'business' AND major.college = 'College of Agriculture and Applied Sciences';\t----- bird -----\tstudent_club",
    "1440": "SELECT DISTINCT m.email FROM member m JOIN expense e ON m.member_id = e.link_to_member WHERE e.cost > 20 AND e.expense_date BETWEEN '2019-09-10' AND '2019-11-19';\t----- bird -----\tstudent_club",
    "1441": "SELECT COUNT(*) FROM member m JOIN major ma ON m.link_to_major = ma.major_id WHERE ma.college = 'College of Education & Human Services';\t----- bird -----\tstudent_club",
    "1442": "SELECT 100.0 * SUM(CASE WHEN spent > amount THEN 1 ELSE 0 END) / COUNT(*) AS percentage_over_budget FROM budget;\t----- bird -----\tstudent_club",
    "1443": "SELECT event_id, location, status FROM event WHERE event_date BETWEEN '2019-11-01' AND '2020-03-31';\t----- bird -----\tstudent_club",
    "1444": "SELECT * FROM expense WHERE cost > (SELECT AVG(cost) FROM expense) AND cost > 50;\t----- bird -----\tstudent_club",
    "1445": "SELECT CONCAT(first_name, ' ', last_name) AS full_name FROM member WHERE t_shirt_size = 'extra large';\t----- bird -----\tstudent_club",
    "1446": "SELECT 100.0 * SUM(CASE WHEN type = 'PO Box' THEN 1 ELSE 0 END) / COUNT(*) AS percentage_po_boxes FROM zip_code;\t----- bird -----\tstudent_club",
    "1447": "SELECT e.event_name, e.location FROM event e JOIN budget b ON e.event_id = b.link_to_event WHERE b.remaining > 0;\t----- bird -----\tstudent_club",
    "1448": "SELECT e.event_name, e.event_date FROM event e JOIN budget b ON e.event_id = b.link_to_event JOIN expense ex ON b.budget_id = ex.link_to_budget WHERE ex.expense_description LIKE '%pizza%' AND ex.cost > 50 AND ex.cost < 100;\t----- bird -----\tstudent_club",
    "1449": "SELECT m.first_name, m.last_name, maj.major_name FROM member m JOIN expense e ON m.member_id = e.link_to_member JOIN major maj ON m.link_to_major = maj.major_id WHERE e.cost > 100;\t----- bird -----\tstudent_club",
    "1450": "SELECT e.location, z.city, z.state FROM event e JOIN zip_code z ON e.location = z.zip_code WHERE e.event_id IN (SELECT link_to_event FROM income GROUP BY link_to_event HAVING COUNT(income_id) > 40);\t----- bird -----\tstudent_club",
    "1451": "SELECT m.member_id, m.first_name, m.last_name, SUM(e.cost) AS total_cost FROM member m JOIN expense e ON m.member_id = e.link_to_member JOIN budget b ON e.link_to_budget = b.budget_id GROUP BY m.member_id, m.first_name, m.last_name HAVING COUNT(DISTINCT b.link_to_event) > 1 ORDER BY total_cost DESC LIMIT 1;\t----- bird -----\tstudent_club",
    "1452": "SELECT AVG(e.cost) FROM expense e JOIN member m ON e.link_to_member = m.member_id WHERE m.position <> 'member';\t----- bird -----\tstudent_club",
    "1453": "SELECT e.event_name FROM event e JOIN budget b ON e.event_id = b.link_to_event WHERE b.category = 'parking' GROUP BY e.event_id, e.event_name HAVING AVG(b.spent) < (SELECT AVG(spent) FROM budget WHERE category = 'parking');\t----- bird -----\tstudent_club",
    "1454": "SELECT (SUM(e.cost) * 100.0 / (SELECT SUM(cost) FROM expense)) AS percentage_cost_for_meeting_events FROM expense e JOIN budget b ON e.link_to_budget = b.budget_id JOIN event ev ON b.link_to_event = ev.event_id WHERE ev.type = 'meeting';\t----- bird -----\tstudent_club",
    "1455": "SELECT budget_id FROM budget WHERE category IN ('water', 'chips', 'cookies') ORDER BY amount DESC LIMIT 1;\t----- bird -----\tstudent_club",
    "1456": "SELECT CONCAT(m.first_name, ' ', m.last_name) AS full_name FROM member m JOIN expense e ON m.member_id = e.link_to_member GROUP BY m.member_id ORDER BY SUM(e.cost) DESC LIMIT 5;\t----- bird -----\tstudent_club",
    "1457": "SELECT CONCAT(m.first_name, ' ', m.last_name) AS full_name, m.phone FROM member m JOIN expense e ON m.member_id = e.link_to_member GROUP BY m.member_id, m.first_name, m.last_name, m.phone HAVING AVG(e.cost) > (SELECT AVG(cost) FROM expense);\t----- bird -----\tstudent_club",
    "1458": "SELECT ABS((SELECT COUNT(*)*100.0/(SELECT COUNT(*) FROM member) FROM member WHERE zip IN (SELECT zip_code FROM zip_code WHERE state = 'NJ')) - (SELECT COUNT(*)*100.0/(SELECT COUNT(*) FROM member) FROM member WHERE zip IN (SELECT zip_code FROM zip_code WHERE state = 'VT'))) AS percentage_difference;\t----- bird -----\tstudent_club",
    "1459": "SELECT major.major_name, major.department FROM member JOIN major ON member.link_to_major = major.major_id WHERE member.first_name = 'Garrett' AND member.last_name = 'Gerke';\t----- bird -----\tstudent_club",
    "1460": "SELECT CONCAT(m.first_name, ' ', m.last_name) AS full_name, e.cost FROM expense e JOIN member m ON e.link_to_member = m.member_id WHERE e.expense_description IN ('water', 'veggie tray', 'supplies');\t----- bird -----\tstudent_club",
    "1461": "SELECT m.last_name, m.phone FROM member m JOIN major ma ON m.link_to_major = ma.major_id WHERE ma.major_name = 'Elementary Education';\t----- bird -----\tstudent_club",
    "1462": "SELECT b.category, b.amount FROM budget b JOIN event e ON b.link_to_event = e.event_id WHERE e.event_name = 'January Speaker';\t----- bird -----\tstudent_club",
    "1463": "SELECT DISTINCT e.event_name FROM event e JOIN budget b ON e.event_id = b.link_to_event WHERE b.category = 'food';\t----- bird -----\tstudent_club",
    "1464": "SELECT CONCAT(m.first_name, ' ', m.last_name) AS full_name, i.amount FROM income i JOIN member m ON i.link_to_member = m.member_id WHERE i.date_received = '2019-09-09';\t----- bird -----\tstudent_club",
    "1465": "SELECT b.category FROM budget b JOIN expense e ON b.budget_id = e.link_to_budget WHERE e.expense_description = 'Posters';\t----- bird -----\tstudent_club",
    "1466": "SELECT CONCAT(m.first_name, ' ', m.last_name) AS full_name, maj.college FROM member m JOIN major maj ON m.link_to_major = maj.major_id WHERE m.position = 'Secretary';\t----- bird -----\tstudent_club",
    "1467": "SELECT e.event_name, SUM(ex.cost) AS total_spent FROM expense ex JOIN budget b ON ex.link_to_budget = b.budget_id JOIN event e ON b.link_to_event = e.event_id WHERE ex.expense_description LIKE '%speaker gift%' GROUP BY e.event_name;\t----- bird -----\tstudent_club",
    "1468": "SELECT z.city, z.state FROM member m JOIN zip_code z ON m.zip = z.zip_code WHERE m.first_name = 'Garrett' AND m.last_name = 'Gerke';\t----- bird -----\tstudent_club",
    "1469": "SELECT CONCAT(m.first_name, ' ', m.last_name) AS full_name, m.position FROM member m JOIN zip_code z ON m.zip = z.zip_code WHERE z.city = 'Lincolnton' AND z.state = 'North Carolina' AND z.zip_code = '28092';\t----- bird -----\tstudent_club",
    "1470": "SELECT COUNT(DISTINCT g.GasStationID) FROM gasstations g JOIN transactions_1k t ON g.GasStationID = t.GasStationID JOIN products p ON t.ProductID = p.ProductID WHERE g.Country = 'CZE' AND p.Description LIKE '%Premium%';\t----- bird -----\tdebit_card_specializing",
    "1471": "SELECT CAST(SUM(CASE WHEN Currency = 'EUR' THEN 1 ELSE 0 END) AS FLOAT) / NULLIF(SUM(CASE WHEN Currency = 'CZK' THEN 1 ELSE 0 END), 0) AS EUR_to_CZK_ratio FROM customers;\t----- bird -----\tdebit_card_specializing",
    "1472": "SELECT CustomerID FROM yearmonth WHERE Date BETWEEN '2012-01-01' AND '2012-12-31' AND CustomerID IN (SELECT CustomerID FROM customers WHERE Segment = 'LAM') GROUP BY CustomerID ORDER BY SUM(Consumption) ASC LIMIT 1;\t----- bird -----\tdebit_card_specializing",
    "1473": "SELECT AVG(Consumption) AS AvgMonthlyConsumption FROM yearmonth ym JOIN customers c ON ym.CustomerID = c.CustomerID WHERE c.Segment = 'SME' AND YEAR(ym.Date) = 2013;\t----- bird -----\tdebit_card_specializing",
    "1474": "SELECT c.CustomerID, SUM(y.Consumption) AS TotalConsumption FROM customers c JOIN yearmonth y ON c.CustomerID = y.CustomerID WHERE c.Currency = 'CZK' AND y.Date BETWEEN '2011-01-01' AND '2011-12-31' GROUP BY c.CustomerID ORDER BY TotalConsumption DESC LIMIT 1;\t----- bird -----\tdebit_card_specializing",
    "1475": "SELECT COUNT(DISTINCT ym.CustomerID) FROM yearmonth ym JOIN customers c ON ym.CustomerID = c.CustomerID WHERE c.Segment = 'KAM' AND ym.Date BETWEEN '2012-01-01' AND '2012-12-31' GROUP BY ym.CustomerID HAVING SUM(ym.Consumption) < 30000;\t----- bird -----\tdebit_card_specializing",
    "1476": "SELECT c.Currency, SUM(y.Consumption) AS TotalConsumption FROM yearmonth y JOIN customers c ON y.CustomerID = c.CustomerID WHERE YEAR(y.Date) = 2012 AND c.Currency IN ('CZK', 'EUR') GROUP BY c.Currency;\t----- bird -----\tdebit_card_specializing",
    "1477": "SELECT EXTRACT(YEAR FROM t.Date) AS Year, SUM(t.Amount) AS TotalAmount FROM transactions_1k t JOIN customers c ON t.CustomerID = c.CustomerID WHERE c.Currency = 'EUR' GROUP BY Year ORDER BY TotalAmount DESC LIMIT 1;\t----- bird -----\tdebit_card_specializing",
    "1478": "SELECT Segment FROM customers JOIN yearmonth ON customers.CustomerID = yearmonth.CustomerID GROUP BY Segment ORDER BY SUM(Consumption) ASC LIMIT 1;\t----- bird -----\tdebit_card_specializing",
    "1479": "SELECT EXTRACT(YEAR FROM y.Date) AS Year, SUM(y.Consumption) AS TotalConsumption FROM yearmonth y JOIN customers c ON y.CustomerID = c.CustomerID WHERE c.Currency = 'CZK' GROUP BY Year ORDER BY TotalConsumption DESC LIMIT 1;\t----- bird -----\tdebit_card_specializing",
    "1480": "SELECT Date, SUM(Consumption) AS TotalConsumption FROM yearmonth WHERE CustomerID IN (SELECT CustomerID FROM customers WHERE Segment = 'SME') AND Date LIKE '2013%' GROUP BY Date ORDER BY TotalConsumption DESC LIMIT 1;\t----- bird -----\tdebit_card_specializing",
    "1481": "WITH annual_avg AS (SELECT c.Segment, AVG(y.Consumption) AS avg_consumption FROM yearmonth y JOIN customers c ON y.CustomerID = c.CustomerID WHERE EXTRACT(YEAR FROM y.Date) = 2013 AND c.Currency = 'CZK' GROUP BY c.CustomerID, c.Segment), min_consumption AS (SELECT Segment, MIN(avg_consumption) AS min_avg_consumption FROM annual_avg GROUP BY Segment) SELECT 'SME vs LAM' AS comparison, (SELECT min_avg_consumption FROM min_consumption WHERE Segment = 'SME') - (SELECT min_avg_consumption FROM min_consumption WHERE Segment = 'LAM') AS difference UNION ALL SELECT 'LAM vs KAM', (SELECT min_avg_consumption FROM min_consumption WHERE Segment = 'LAM') - (SELECT min_avg_consumption FROM min_consumption WHERE Segment = 'KAM') UNION ALL SELECT 'KAM vs SME', (SELECT min_avg_consumption FROM min_consumption WHERE;\t----- bird -----\tdebit_card_specializing",
    "1482": "SELECT Segment, ((consumption_2013 - consumption_2012) / NULLIF(consumption_2012,0)) * 100 AS pct_increase FROM (SELECT c.Segment, SUM(CASE WHEN ym.Date BETWEEN '2012-01-01' AND '2012-12-31' THEN ym.Consumption ELSE 0 END) AS consumption_2012, SUM(CASE WHEN ym.Date BETWEEN '2013-01-01' AND '2013-12-31' THEN ym.Consumption ELSE 0 END) AS consumption_2013 FROM yearmonth ym JOIN customers c ON ym.CustomerID = c.CustomerID WHERE c.Currency = 'EUR' AND c.Segment IN ('SME', 'LAM', 'KAM') GROUP BY c.Segment) sub ORDER BY pct_increase DESC;\t----- bird -----\tdebit_card_specializing",
    "1483": "SELECT SUM(Consumption) FROM yearmonth WHERE CustomerID = 6 AND Date BETWEEN '2013-08-01' AND '2013-11-30';\t----- bird -----\tdebit_card_specializing",
    "1484": "SELECT (SELECT COUNT(*) FROM gasstations WHERE Country = 'Czech Republic' AND Segment = 'discount') - (SELECT COUNT(*) FROM gasstations WHERE Country = 'Slovakia' AND Segment = 'discount') AS Difference;\t----- bird -----\tdebit_card_specializing",
    "1485": "SELECT (SELECT SUM(Consumption) FROM yearmonth WHERE CustomerID = 7 AND Date >= '2013-04-01' AND Date < '2013-05-01') - (SELECT SUM(Consumption) FROM yearmonth WHERE CustomerID = 5 AND Date >= '2013-04-01' AND Date < '2013-05-01') AS ConsumptionDifference;\t----- bird -----\tdebit_card_specializing",
    "1486": "SELECT ABS(COALESCE(czk_count,0) - COALESCE(eur_count,0)) AS difference FROM (SELECT COUNT(DISTINCT CustomerID) AS czk_count FROM customers WHERE Segment = 'SME' AND Currency = 'CZK') AS czk CROSS JOIN (SELECT COUNT(DISTINCT CustomerID) AS eur_count FROM customers WHERE Segment = 'SME' AND Currency = 'EUR') AS eur WHERE (SELECT COUNT(DISTINCT CustomerID) FROM customers WHERE Segment = 'SME' AND Currency = 'CZK') > (SELECT COUNT(DISTINCT CustomerID) FROM customers WHERE Segment = 'SME' AND Currency = 'EUR');\t----- bird -----\tdebit_card_specializing",
    "1487": "SELECT CustomerID, MAX(Consumption) AS MaxConsumption FROM yearmonth WHERE CustomerID IN (SELECT CustomerID FROM customers WHERE Segment = 'LAM' AND Currency = 'Euro') AND Date BETWEEN '2013-10-01' AND '2013-10-31' GROUP BY CustomerID ORDER BY MaxConsumption DESC LIMIT 1;\t----- bird -----\tdebit_card_specializing",
    "1488": "SELECT CustomerID, SUM(Consumption) AS TotalConsumption FROM yearmonth WHERE CustomerID IN (SELECT CustomerID FROM customers WHERE Segment = 'KAM') GROUP BY CustomerID ORDER BY TotalConsumption DESC LIMIT 1;\t----- bird -----\tdebit_card_specializing",
    "1489": "SELECT SUM(Consumption) FROM yearmonth WHERE CustomerID IN (SELECT CustomerID FROM customers WHERE Segment = 'KAM') AND Date >= '2013-05-01' AND Date < '2013-06-01';\t----- bird -----\tdebit_card_specializing",
    "1490": "SELECT 100.0 * COUNT(DISTINCT ym.CustomerID) / (SELECT COUNT(DISTINCT CustomerID) FROM customers WHERE Segment = 'LAM') AS Percent FROM yearmonth ym JOIN customers c ON ym.CustomerID = c.CustomerID WHERE c.Segment = 'LAM' AND ym.Consumption > 46.73;\t----- bird -----\tdebit_card_specializing",
    "1491": "SELECT Country, COUNT(*) AS ValueForMoneyGasStations FROM gasstations WHERE Segment = 'value for money' GROUP BY Country;\t----- bird -----\tdebit_card_specializing",
    "1492": "SELECT 100.0 * COUNT(CASE WHEN Currency = 'EUR' THEN 1 END) / COUNT(*) AS Percentage_Euro_Payers FROM customers WHERE Segment = 'KAM';\t----- bird -----\tdebit_card_specializing",
    "1493": "SELECT 100.0 * COUNT(DISTINCT CustomerID) / (SELECT COUNT(DISTINCT CustomerID) FROM yearmonth WHERE Date LIKE '2012-02%') AS Percentage FROM yearmonth WHERE Date LIKE '2012-02%' AND Consumption > 528.3;\t----- bird -----\tdebit_card_specializing",
    "1494": "SELECT 100.0 * COUNT(*) FILTER (WHERE Segment = 'premium') / COUNT(*) AS premium_percentage FROM gasstations WHERE Country = 'Slovakia';\t----- bird -----\tdebit_card_specializing",
    "1495": "SELECT CustomerID FROM yearmonth WHERE Date >= '2013-09-01' AND Date < '2013-10-01' GROUP BY CustomerID ORDER BY SUM(Consumption) DESC LIMIT 1;\t----- bird -----\tdebit_card_specializing",
    "1496": "SELECT c.Segment FROM yearmonth y JOIN customers c ON y.CustomerID = c.CustomerID WHERE y.Date BETWEEN '2013-09-01' AND '2013-09-30' GROUP BY c.Segment ORDER BY SUM(y.Consumption) ASC LIMIT 1;\t----- bird -----\tdebit_card_specializing",
    "1497": "SELECT CustomerID, MIN(Consumption) AS MinConsumption FROM yearmonth WHERE Date >= '2012-06-01' AND Date < '2012-07-01' AND CustomerID IN (SELECT CustomerID FROM customers WHERE Segment = 'SME') GROUP BY CustomerID ORDER BY MinConsumption ASC LIMIT 1;\t----- bird -----\tdebit_card_specializing",
    "1498": "SELECT MAX(Consumption) FROM yearmonth WHERE Date LIKE '2012%';\t----- bird -----\tdebit_card_specializing",
    "1499": "SELECT MAX(Consumption) FROM yearmonth WHERE CustomerID IN (SELECT CustomerID FROM customers WHERE Currency = 'euro');\t----- bird -----\tdebit_card_specializing",
    "1500": "SELECT DISTINCT p.Description FROM products p JOIN transactions_1k t ON p.ProductID = t.ProductID WHERE t.Date >= '2013-09-01' AND t.Date < '2013-10-01';\t----- bird -----\tdebit_card_specializing",
    "1501": "SELECT DISTINCT g.Country FROM gasstations g JOIN transactions_1k t ON g.GasStationID = t.GasStationID WHERE t.Date >= '2013-06-01' AND t.Date < '2013-07-01';\t----- bird -----\tdebit_card_specializing",
    "1502": "SELECT DISTINCT g.ChainID FROM gasstations g JOIN transactions_1k t ON g.GasStationID = t.GasStationID JOIN customers c ON t.CustomerID = c.CustomerID WHERE c.Currency = 'euro';\t----- bird -----\tdebit_card_specializing",
    "1503": "SELECT DISTINCT p.Description FROM transactions_1k t JOIN products p ON t.ProductID = p.ProductID JOIN customers c ON t.CustomerID = c.CustomerID WHERE c.Currency = 'euro';\t----- bird -----\tdebit_card_specializing",
    "1504": "SELECT AVG(total_price) FROM (SELECT TransactionID, SUM(Price) AS total_price FROM transactions_1k WHERE Date >= '2012-01-01' AND Date < '2012-02-01' GROUP BY TransactionID) AS subquery;\t----- bird -----\tdebit_card_specializing",
    "1505": "SELECT COUNT(DISTINCT ym.CustomerID) FROM yearmonth ym JOIN customers c ON ym.CustomerID = c.CustomerID WHERE c.Currency = 'euro' AND ym.Consumption > 1000;\t----- bird -----\tdebit_card_specializing",
    "1506": "SELECT DISTINCT p.Description FROM transactions_1k t JOIN gasstations g ON t.GasStationID = g.GasStationID JOIN products p ON t.ProductID = p.ProductID WHERE g.Country = 'Czech Republic';\t----- bird -----\tdebit_card_specializing",
    "1507": "SELECT DISTINCT Time FROM transactions_1k t JOIN gasstations g ON t.GasStationID = g.GasStationID WHERE g.ChainID = 11;\t----- bird -----\tdebit_card_specializing",
    "1508": "SELECT COUNT(*) FROM transactions_1k t JOIN gasstations g ON t.GasStationID = g.GasStationID WHERE g.Country = 'Czech Republic' AND t.Price > 1000;\t----- bird -----\tdebit_card_specializing",
    "1509": "SELECT COUNT(*) FROM transactions_1k t JOIN gasstations g ON t.GasStationID = g.GasStationID WHERE g.Country = 'Czech Republic' AND t.Date > '2012-01-01';\t----- bird -----\tdebit_card_specializing",
    "1510": "SELECT AVG(total_price) FROM (SELECT SUM(Price) AS total_price FROM transactions_1k t JOIN gasstations g ON t.GasStationID = g.GasStationID WHERE g.Country = 'Czech Republic' GROUP BY t.TransactionID) sub;\t----- bird -----\tdebit_card_specializing",
    "1511": "SELECT AVG(total_price) FROM (SELECT t.CustomerID, SUM(t.Price) AS total_price FROM transactions_1k t JOIN customers c ON t.CustomerID = c.CustomerID WHERE c.Currency = 'euro' GROUP BY t.CustomerID) subquery;\t----- bird -----\tdebit_card_specializing",
    "1512": "SELECT CustomerID FROM transactions_1k WHERE Date = '2012-08-25' GROUP BY CustomerID ORDER BY SUM(Price) DESC LIMIT 1;\t----- bird -----\tdebit_card_specializing",
    "1513": "SELECT g.Country FROM transactions_1k t JOIN gasstations g ON t.GasStationID = g.GasStationID WHERE t.Date = '2012-08-25' ORDER BY t.Time ASC LIMIT 1;\t----- bird -----\tdebit_card_specializing",
    "1514": "SELECT c.Currency FROM transactions_1k t JOIN customers c ON t.CustomerID = c.CustomerID WHERE t.Date = '2012-08-24' AND t.Time = '16:25:00';\t----- bird -----\tdebit_card_specializing",
    "1515": "SELECT Segment FROM customers WHERE CustomerID = (SELECT CustomerID FROM transactions_1k WHERE Date = '2012-08-23' AND Time = '21:20:00');\t----- bird -----\tdebit_card_specializing",
    "1516": "SELECT COUNT(*) FROM transactions_1k t JOIN customers c ON t.CustomerID = c.CustomerID WHERE c.Currency = 'CZK' AND t.Date = '2012-08-26' AND t.Time < '12:00:00';\t----- bird -----\tdebit_card_specializing",
    "1517": "SELECT Segment FROM customers WHERE CustomerID = (SELECT MIN(CustomerID) FROM customers);\t----- bird -----\tdebit_card_specializing",
    "1518": "SELECT g.Country FROM transactions_1k t JOIN gasstations g ON t.GasStationID = g.GasStationID WHERE t.Date = '2012-08-24' AND t.Time = '12:42:00';\t----- bird -----\tdebit_card_specializing",
    "1519": "SELECT ProductID FROM transactions_1k WHERE Date = '2012-08-23' AND Time = '21:20:00';\t----- bird -----\tdebit_card_specializing",
    "1520": "SELECT ym.Date, ym.Consumption FROM yearmonth ym WHERE ym.CustomerID = (SELECT t.CustomerID FROM transactions_1k t WHERE t.Price = 124.05 AND t.Date = '2012-08-24' LIMIT 1) AND ym.Date BETWEEN '2012-01-01' AND '2012-01-31';\t----- bird -----\tdebit_card_specializing",
    "1521": "SELECT COUNT(*) FROM transactions_1k t JOIN gasstations g ON t.GasStationID = g.GasStationID WHERE t.Date = '2012-08-26' AND t.Time >= '08:00:00' AND t.Time < '09:00:00' AND g.Country = 'CZE';\t----- bird -----\tdebit_card_specializing",
    "1522": "SELECT c.Currency FROM customers c JOIN (SELECT CustomerID, SUM(Price) AS TotalSpent FROM transactions_1k WHERE Date >= '2013-06-01' AND Date < '2013-07-01' GROUP BY CustomerID HAVING SUM(Price) = 214582.17) t ON c.CustomerID = t.CustomerID;\t----- bird -----\tdebit_card_specializing",
    "1523": "SELECT g.Country FROM transactions_1k t JOIN gasstations g ON t.GasStationID = g.GasStationID WHERE t.CardID = 667467 LIMIT 1;\t----- bird -----\tdebit_card_specializing",
    "1524": "SELECT c.Currency FROM customers c JOIN transactions_1k t ON c.CustomerID = t.CustomerID WHERE t.Date = '2012-08-24' AND t.Price = 548.4;\t----- bird -----\tdebit_card_specializing",
    "1525": "SELECT 100.0 * COUNT(DISTINCT c.CustomerID) / (SELECT COUNT(DISTINCT CustomerID) FROM customers) AS Percentage FROM customers c JOIN transactions_1k t ON c.CustomerID = t.CustomerID WHERE c.Currency = 'EUR' AND t.Date = '2012-08-25';\t----- bird -----\tdebit_card_specializing",
    "1526": "SELECT ((ym2012.Consumption - ym2013.Consumption) / ym2012.Consumption) * 100 AS ConsumptionDecreaseRate FROM (SELECT CustomerID FROM transactions_1k WHERE Date = '2012-08-25' AND Price = 634.8 LIMIT 1) AS cust JOIN yearmonth ym2012 ON cust.CustomerID = ym2012.CustomerID AND ym2012.Date LIKE '2012%' JOIN yearmonth ym2013 ON cust.CustomerID = ym2013.CustomerID AND ym2013.Date LIKE '2013%' LIMIT 1;\t----- bird -----\tdebit_card_specializing",
    "1527": "SELECT GasStationID FROM transactions_1k GROUP BY GasStationID ORDER BY SUM(Price * Amount) DESC LIMIT 1;\t----- bird -----\tdebit_card_specializing",
    "1528": "SELECT 100.0 * SUM(CASE WHEN g.Segment = 'premium' THEN 1 ELSE 0 END) / COUNT(*) AS premium_percentage FROM gasstations g WHERE g.Country = 'SVK';\t----- bird -----\tdebit_card_specializing",
    "1529": "SELECT SUM(Amount * Price) AS TotalSpent, SUM(CASE WHEN Date >= '2012-01-01' AND Date < '2012-02-01' THEN Amount * Price ELSE 0 END) AS SpentInJan2012 FROM transactions_1k WHERE CustomerID = '38508';\t----- bird -----\tdebit_card_specializing",
    "1530": "SELECT p.Description FROM products p JOIN transactions_1k t ON p.ProductID = t.ProductID GROUP BY p.Description ORDER BY SUM(t.Amount) DESC LIMIT 5;\t----- bird -----\tdebit_card_specializing",
    "1531": "SELECT t.CustomerID, AVG(t.Price) AS AvgPricePerItem, c.Currency FROM transactions_1k t JOIN customers c ON t.CustomerID = c.CustomerID GROUP BY t.CustomerID, c.Currency ORDER BY SUM(t.Price * t.Amount) DESC LIMIT 1;\t----- bird -----\tdebit_card_specializing",
    "1532": "SELECT g.Country FROM transactions_1k t JOIN gasstations g ON t.GasStationID = g.GasStationID WHERE t.ProductID = 2 ORDER BY t.Price DESC LIMIT 1;\t----- bird -----\tdebit_card_specializing",
    "1533": "SELECT y.CustomerID, y.Consumption FROM yearmonth y JOIN (SELECT DISTINCT CustomerID FROM transactions_1k WHERE ProductID = 5 AND Price > 29.00) t ON y.CustomerID = t.CustomerID WHERE y.Date BETWEEN '2012-08-01' AND '2012-08-31';\t----- bird -----\tdebit_card_specializing"
}