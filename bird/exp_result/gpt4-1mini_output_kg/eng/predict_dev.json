{
    "0": "SELECT MAX(CAST(REPLACE(`Percent (%) Eligible Free (K-12)`, '%', '') AS DECIMAL)/100) AS Highest_Eligible_Free_Rate FROM frpm WHERE `County Name` = 'Alameda' AND `Enrollment (K-12)` > 0;\t----- bird -----\tcalifornia_schools",
    "1": "SELECT `School Name`, (`Free Meal Count (Ages 5-17)` / NULLIF(`Enrollment (Ages 5-17)`,0)) AS EligibleFreeRate FROM frpm WHERE `School Type` = 'Continuation' ORDER BY EligibleFreeRate ASC LIMIT 3;\t----- bird -----\tcalifornia_schools",
    "2": "SELECT DISTINCT Zip FROM schools WHERE Charter = 1 AND County = 'Fresno County Office of Education';\t----- bird -----\tcalifornia_schools",
    "3": "SELECT MailStreet FROM schools WHERE CDSCode = (SELECT `CDSCode` FROM frpm ORDER BY `FRPM Count (K-12)` DESC LIMIT 1);\t----- bird -----\tcalifornia_schools",
    "4": "SELECT Phone FROM schools WHERE Charter = 1 AND FundingType = 'Direct' AND OpenDate > '2000-01-01';\t----- bird -----\tcalifornia_schools",
    "5": "SELECT COUNT(DISTINCT s.CDSCode) FROM schools s JOIN satscores sa ON s.CDSCode = sa.cds WHERE sa.AvgScrMath > 400 AND s.Virtual = 'F';\t----- bird -----\tcalifornia_schools",
    "6": "SELECT s.CDSCode, s.School FROM schools s JOIN satscores sa ON s.CDSCode = sa.cds WHERE sa.NumTstTakr > 500 AND s.Magnet = 1;\t----- bird -----\tcalifornia_schools",
    "7": "SELECT s.Phone FROM satscores sa JOIN schools s ON sa.cds = s.CDSCode WHERE sa.NumGE1500 = (SELECT MAX(NumGE1500) FROM satscores);\t----- bird -----\tcalifornia_schools",
    "8": "SELECT s.NumTstTakr FROM satscores s JOIN frpm f ON s.cds = f.CDSCode WHERE f.`FRPM Count (K-12)` = (SELECT MAX(`FRPM Count (K-12)`) FROM frpm);\t----- bird -----\tcalifornia_schools",
    "9": "SELECT COUNT(DISTINCT s.CDSCode) FROM satscores sa JOIN schools s ON sa.cds = s.CDSCode WHERE sa.AvgScrMath > 560 AND s.Charter = 'Y' AND s.FundingType = 'Direct Charter';\t----- bird -----\tcalifornia_schools",
    "10": "SELECT frpm.`FRPM Count (Ages 5-17)` FROM frpm JOIN satscores ON frpm.CDSCode = satscores.cds WHERE satscores.AvgScrRead = (SELECT MAX(AvgScrRead) FROM satscores);\t----- bird -----\tcalifornia_schools",
    "11": "SELECT `CDSCode` FROM frpm WHERE (`Enrollment (K-12)` + `Enrollment (Ages 5-17)`) > 500;\t----- bird -----\tcalifornia_schools",
    "12": "SELECT MAX(CAST(`Free Meal Count (Ages 5-17)` AS FLOAT) / NULLIF(CAST(`Enrollment (Ages 5-17)` AS FLOAT), 0)) AS Highest_Eligible_Free_Rate FROM frpm JOIN satscores ON frpm.`CDSCode` = satscores.cds WHERE satscores.NumTstTakr > 0 AND (satscores.NumGE1500 * 1.0 / satscores.NumTstTakr) > 0.3;\t----- bird -----\tcalifornia_schools",
    "13": "SELECT s.Phone FROM schools s JOIN satscores sa ON s.CDSCode = sa.cds ORDER BY (sa.NumGE1500 * 1.0 / sa.NumTstTakr) DESC LIMIT 3;\t----- bird -----\tcalifornia_schools",
    "14": "SELECT `NCESSchool` FROM frpm ORDER BY `Enrollment (Ages 5-17)` DESC LIMIT 5;\t----- bird -----\tcalifornia_schools",
    "15": "SELECT dname AS District, AVG(AvgScrRead) AS AvgReadingScore FROM satscores WHERE rtype = 'D' GROUP BY dname ORDER BY AvgReadingScore DESC LIMIT 1;\t----- bird -----\tcalifornia_schools",
    "16": "SELECT COUNT(DISTINCT cds) FROM satscores WHERE cname = 'merged Alameda' AND NumTstTakr < 100;\t----- bird -----\tcalifornia_schools",
    "17": "SELECT s.CharterNum, sa.AvgScrWrite FROM satscores sa JOIN schools s ON sa.cds = s.CDSCode WHERE sa.AvgScrWrite > 499 ORDER BY sa.AvgScrWrite DESC;\t----- bird -----\tcalifornia_schools",
    "18": "SELECT COUNT(*) FROM satscores WHERE cname = 'Fresno' AND rtype = 'Direct' AND NumTstTakr <= 250;\t----- bird -----\tcalifornia_schools",
    "19": "SELECT Phone FROM schools WHERE CDSCode = (SELECT cds FROM satscores ORDER BY AvgScrMath DESC LIMIT 1) LIMIT 1;\t----- bird -----\tcalifornia_schools",
    "20": "SELECT COUNT(*) FROM frpm WHERE `County Name` = 'Amador' AND `Low Grade` = 9 AND `High Grade` = 12;\t----- bird -----\tcalifornia_schools",
    "21": "SELECT COUNT(*) FROM frpm WHERE `County Name` = 'Los Angeles' AND `Free Meal Count (K-12)` > 500 AND `FRPM Count (K-12)` < 700;\t----- bird -----\tcalifornia_schools",
    "22": "SELECT s.School FROM satscores sc JOIN schools s ON sc.cds = s.CDSCode WHERE s.County = 'Contra Costa' ORDER BY sc.NumTstTakr DESC LIMIT 1;\t----- bird -----\tcalifornia_schools",
    "23": "SELECT frpm.`School Name`, CONCAT(schools.`Street`, ' ', schools.`StreetAbr`, ', ', schools.`City`, ', ', schools.`State`, ' ', schools.`Zip`) AS Full_Address FROM frpm JOIN schools ON frpm.`CDSCode` = schools.`CDSCode` WHERE ABS(frpm.`Enrollment (K-12)` - frpm.`Enrollment (Ages 5-17)`) > 30;\t----- bird -----\tcalifornia_schools",
    "24": "SELECT f.`School Name` FROM frpm f JOIN satscores s ON f.`CDSCode` = s.cds WHERE (f.`Free Meal Count (K-12)` / NULLIF(f.`Enrollment (K-12)`, 0)) > 0.1 AND s.`NumGE1500` > 0;\t----- bird -----\tcalifornia_schools",
    "25": "SELECT s.School, s.FundingType FROM schools s JOIN satscores sa ON s.CDSCode = sa.cds WHERE s.County = 'Riverside' GROUP BY s.School, s.FundingType HAVING AVG(sa.AvgScrMath) > 400;\t----- bird -----\tcalifornia_schools",
    "26": "SELECT School, CONCAT(Street, ', ', City, ', ', State, ' ', Zip) AS Full_Address FROM schools WHERE County = 'Monterey' AND GSoffered LIKE '%12%' AND CDSCode IN (SELECT `School Code` FROM frpm WHERE `County Name` = 'Monterey' AND `FRPM Count (Ages 5-17)` > 800) AND GSoffered LIKE '%9%' AND GSoffered LIKE '%10%' AND GSoffered LIKE '%11%' AND GSoffered LIKE '%12%';\t----- bird -----\tcalifornia_schools",
    "27": "SELECT schools.School, satscores.AvgScrWrite, schools.Phone FROM schools JOIN satscores ON schools.CDSCode = satscores.cds WHERE (schools.OpenDate > '1991-12-31' OR (schools.ClosedDate IS NOT NULL AND schools.ClosedDate < '2000-01-01')) AND satscores.AvgScrWrite IS NOT NULL;\t----- bird -----\tcalifornia_schools",
    "28": "SELECT School, DOCType FROM schools WHERE FundingType = 'Local' AND (SELECT AVG(CAST(REPLACE(REPLACE(frpm.`Enrollment (K-12)`, ',', ''), ' ', '') AS INT) - CAST(REPLACE(REPLACE(frpm.`Enrollment (Ages 5-17)`, ',', ''), ' ', '') AS INT)) FROM frpm JOIN schools ON frpm.`CDSCode` = schools.CDSCode WHERE schools.FundingType = 'Local') < (CAST(REPLACE(REPLACE((SELECT `Enrollment (K-12)` FROM frpm WHERE frpm.`CDSCode` = schools.CDSCode), ',', ''), ' ', '') AS INT) - CAST(REPLACE(REPLACE((SELECT `Enrollment (Ages 5-17)` FROM frpm WHERE frpm.`CDSCode` = schools.CDSCode), ',', ''), ' ', '') AS INT)) AND schools.CDSCode IN (SELECT CDSCode FROM frpm);\t----- bird -----\tcalifornia_schools",
    "29": "SELECT OpenDate FROM schools WHERE GSoffered LIKE '%K-12%' ORDER BY GSserved DESC LIMIT 1;\t----- bird -----\tcalifornia_schools",
    "30": "SELECT City FROM schools ORDER BY (SELECT SUM(`Enrollment (K-12)`) FROM frpm WHERE frpm.`School Code` = schools.School AND frpm.`District Code` = schools.District AND frpm.`County Code` = schools.County) ASC LIMIT 5;\t----- bird -----\tcalifornia_schools",
    "31": "SELECT `School Name`, `Enrollment (K-12)`, (`Free Meal Count (K-12)` / `Enrollment (K-12)`) AS Eligible_Free_Rate FROM frpm WHERE `Enrollment (K-12)` IS NOT NULL ORDER BY `Enrollment (K-12)` DESC LIMIT 2 OFFSET 9;\t----- bird -----\tcalifornia_schools",
    "32": "SELECT `School Name`, `FRPM Count (K-12)`, `Enrollment (K-12)`, (`FRPM Count (K-12)` * 1.0 / `Enrollment (K-12)`) AS Eligible_FRPM_Rate FROM frpm WHERE `Low Grade` <= 1 AND `High Grade` >= 12 AND `IRC` = 66 ORDER BY `FRPM Count (K-12)` DESC LIMIT 5;\t----- bird -----\tcalifornia_schools",
    "33": "SELECT frpm.`School Name`, schools.`Website` FROM frpm JOIN schools ON frpm.`CDSCode` = schools.`CDSCode` WHERE frpm.`Free Meal Count (Ages 5-17)` BETWEEN 1900 AND 2000;\t----- bird -----\tcalifornia_schools",
    "34": "SELECT `Free Meal Count (Ages 5-17)` / `Enrollment (Ages 5-17)` AS Free_Rate FROM frpm WHERE `School Name` IN (SELECT School FROM schools WHERE AdmFName1 = 'Kacey' AND AdmLName1 = 'Gibson') LIMIT 1;\t----- bird -----\tcalifornia_schools",
    "35": "SELECT AdmEmail1 FROM schools WHERE CDSCode = (SELECT `CDSCode` FROM frpm WHERE `Charter School (Y/N)` = 1 ORDER BY `Enrollment (K-12)` ASC LIMIT 1) LIMIT 1;\t----- bird -----\tcalifornia_schools",
    "36": "SELECT CONCAT(AdmFName1, ' ', AdmLName1) AS Admin1, CONCAT(AdmFName2, ' ', AdmLName2) AS Admin2, CONCAT(AdmFName3, ' ', AdmLName3) AS Admin3 FROM schools WHERE CDSCode = (SELECT cds FROM satscores WHERE NumGE1500 = (SELECT MAX(NumGE1500) FROM satscores));\t----- bird -----\tcalifornia_schools",
    "37": "SELECT Street, City, Zip, State FROM schools WHERE CDSCode = (SELECT cds FROM satscores WHERE NumTstTakr > 0 ORDER BY (NumGE1500 * 1.0 / NumTstTakr) ASC LIMIT 1);\t----- bird -----\tcalifornia_schools",
    "38": "SELECT s.Website FROM satscores sa JOIN schools s ON sa.cds = s.CDSCode WHERE sa.cname = 'Los Angeles' AND sa.NumTstTakr BETWEEN 2000 AND 3000;\t----- bird -----\tcalifornia_schools",
    "39": "SELECT AVG(s.NumTstTakr) FROM satscores s JOIN schools sc ON s.cds = sc.CDSCode WHERE sc.County = 'Fresno' AND sc.OpenDate BETWEEN '1980-01-01' AND '1980-12-31';\t----- bird -----\tcalifornia_schools",
    "40": "SELECT s.Phone FROM satscores sa JOIN schools s ON sa.cds = s.CDSCode WHERE sa.dname = 'Fresno Unified' ORDER BY sa.AvgScrRead ASC LIMIT 1;\t----- bird -----\tcalifornia_schools",
    "41": "SELECT s.School FROM (SELECT s.School, s.County, ss.AvgScrRead, ROW_NUMBER() OVER (PARTITION BY s.County ORDER BY ss.AvgScrRead DESC) as rn FROM schools s JOIN satscores ss ON s.CDSCode = ss.cds WHERE s.Virtual = 'T') sub WHERE rn <= 5;\t----- bird -----\tcalifornia_schools",
    "42": "SELECT frpm.`Educational Option Type` FROM frpm JOIN satscores ON frpm.`CDSCode` = satscores.cds WHERE satscores.AvgScrMath = (SELECT MAX(AvgScrMath) FROM satscores);\t----- bird -----\tcalifornia_schools",
    "43": "SELECT s.cname AS County, ss.AvgScrMath FROM satscores ss JOIN satscores ss2 ON ss.cds = ss2.cds WHERE (ss.AvgScrMath + ss.AvgScrRead + ss.AvgScrWrite) = (SELECT MIN(AvgScrMath + AvgScrRead + AvgScrWrite) FROM satscores) LIMIT 1;\t----- bird -----\tcalifornia_schools",
    "44": "SELECT s.City, ss.AvgScrWrite FROM satscores ss JOIN schools s ON ss.cds = s.CDSCode WHERE ss.NumTstTakr = (SELECT MAX(NumTstTakr) FROM satscores WHERE NumGE1500 >= 1500) AND ss.NumGE1500 >= 1500 LIMIT 1;\t----- bird -----\tcalifornia_schools",
    "45": "SELECT s.School, AVG(sa.AvgScrWrite) AS AverageWritingScore FROM schools s JOIN satscores sa ON s.CDSCode = sa.cds WHERE (s.AdmFName1 = 'Ricci' AND s.AdmLName1 = 'Ulrich') OR (s.AdmFName2 = 'Ricci' AND s.AdmLName2 = 'Ulrich') OR (s.AdmFName3 = 'Ricci' AND s.AdmLName3 = 'Ulrich') GROUP BY s.School;\t----- bird -----\tcalifornia_schools",
    "46": "SELECT School, Enrollment (K-12) FROM frpm WHERE `CDSCode` IN (SELECT CDSCode FROM schools WHERE DOC = 31) ORDER BY `Enrollment (K-12)` DESC LIMIT 1;\t----- bird -----\tcalifornia_schools",
    "47": "SELECT COUNT(*) / 12.0 AS MonthlyAverage FROM schools WHERE County = 'Alameda' AND DOC = 52 AND YEAR(OpenDate) = 1980;\t----- bird -----\tcalifornia_schools",
    "48": "SELECT CAST(SUM(CASE WHEN DOC = 54 THEN 1 ELSE 0 END) AS FLOAT) / NULLIF(SUM(CASE WHEN DOC = 52 THEN 1 ELSE 0 END), 0) AS ratio FROM schools WHERE County = 'Orange' AND StatusType = 'Merged';\t----- bird -----\tcalifornia_schools",
    "49": "SELECT s.County, s.School, s.ClosedDate FROM schools s JOIN (SELECT County, COUNT(*) AS closed_count FROM schools WHERE StatusType = 'Closed' GROUP BY County ORDER BY closed_count DESC LIMIT 1) c ON s.County = c.County WHERE s.StatusType = 'Closed';\t----- bird -----\tcalifornia_schools",
    "50": "SELECT s.School, s.Street FROM satscores sa JOIN schools s ON sa.cds = s.CDSCode WHERE sa.rtype = 'S' ORDER BY sa.AvgScrMath DESC LIMIT 1 OFFSET 6;\t----- bird -----\tcalifornia_schools",
    "51": "SELECT s.MailStreet, s.School FROM satscores sa JOIN schools s ON sa.cds = s.CDSCode WHERE sa.AvgScrRead = (SELECT MIN(AvgScrRead) FROM satscores);\t----- bird -----\tcalifornia_schools",
    "52": "SELECT COUNT(*) FROM satscores s JOIN schools sc ON s.cds = sc.CDSCode WHERE (s.AvgScrRead + s.AvgScrMath + s.AvgScrWrite) >= 1500 AND sc.MailCity = 'Lakeport';\t----- bird -----\tcalifornia_schools",
    "53": "SELECT SUM(NumTstTakr) FROM satscores s JOIN schools sch ON s.cds = sch.CDSCode WHERE sch.MailCity = 'Fresno';\t----- bird -----\tcalifornia_schools",
    "54": "SELECT School, MailZip FROM schools WHERE AdmFName1 = 'Avetik' AND AdmLName1 = 'Atoian' OR AdmFName2 = 'Avetik' AND AdmLName2 = 'Atoian' OR AdmFName3 = 'Avetik' AND AdmLName3 = 'Atoian';\t----- bird -----\tcalifornia_schools",
    "55": "SELECT CAST(SUM(CASE WHEN County = 'Colusa' THEN 1 ELSE 0 END) AS FLOAT) / NULLIF(SUM(CASE WHEN County = 'Humboldt' THEN 1 ELSE 0 END), 0) AS Ratio FROM schools WHERE MailState = 'CA';\t----- bird -----\tcalifornia_schools",
    "56": "SELECT COUNT(*) FROM schools WHERE MailState = 'CA' AND City = 'San Joaquin' AND StatusType = 'Active';\t----- bird -----\tcalifornia_schools",
    "57": "SELECT Phone, Ext FROM schools WHERE CDSCode = (SELECT cds FROM satscores ORDER BY AvgScrWrite DESC LIMIT 1 OFFSET 332);\t----- bird -----\tcalifornia_schools",
    "58": "SELECT School, Phone, Ext FROM schools WHERE Zip = '95203-3704';\t----- bird -----\tcalifornia_schools",
    "59": "SELECT Website FROM schools WHERE (AdmFName1 = 'Mike' AND AdmLName1 = 'Larson') OR (AdmFName1 = 'Dante' AND AdmLName1 = 'Alvarez') OR (AdmFName2 = 'Mike' AND AdmLName2 = 'Larson') OR (AdmFName2 = 'Dante' AND AdmLName2 = 'Alvarez') OR (AdmFName3 = 'Mike' AND AdmLName3 = 'Larson') OR (AdmFName3 = 'Dante' AND AdmLName3 = 'Alvarez');\t----- bird -----\tcalifornia_schools",
    "60": "SELECT Website FROM schools WHERE Virtual = 'P' AND Charter = 1 AND County = 'San Joaquin';\t----- bird -----\tcalifornia_schools",
    "61": "SELECT COUNT(*) FROM schools WHERE Charter = 1 AND City = 'Hickman' AND DOC = 52;\t----- bird -----\tcalifornia_schools",
    "62": "SELECT COUNT(*) FROM frpm WHERE [County Name] = 'Los Angeles' AND [Charter School (Y/N)] = 'N' AND ([Free Meal Count (K-12)] * 100.0 / NULLIF([Enrollment (K-12)],0)) < 0.18;\t----- bird -----\tcalifornia_schools",
    "63": "SELECT School, City, CONCAT(AdmFName1, ' ', AdmLName1) AS Admin1, CONCAT(AdmFName2, ' ', AdmLName2) AS Admin2, CONCAT(AdmFName3, ' ', AdmLName3) AS Admin3 FROM schools WHERE Charter = 1 AND CharterNum = '00D2';\t----- bird -----\tcalifornia_schools",
    "64": "SELECT COUNT(*) FROM schools WHERE MailCity = 'Hickman' AND CharterNum = '00D4';\t----- bird -----\tcalifornia_schools",
    "65": "SELECT (COUNT(CASE WHEN FundingType = 'Local' THEN 1 END) * 100.0) / COUNT(*) AS RatioPercentage FROM schools WHERE County = 'Santa Clara' AND Charter = 'Y';\t----- bird -----\tcalifornia_schools",
    "66": "SELECT COUNT(*) FROM schools WHERE FundingType = 'Directly Funded' AND County = 'Stanislaus' AND OpenDate BETWEEN '2000-01-01' AND '2005-12-31';\t----- bird -----\tcalifornia_schools",
    "67": "SELECT COUNT(*) AS TotalClosures FROM schools WHERE District = 'Community College District' AND ClosedDate LIKE '1989%' AND City = 'San Francisco';\t----- bird -----\tcalifornia_schools",
    "68": "SELECT County, COUNT(*) AS ClosureCount FROM schools WHERE SOC = 11 AND ClosedDate BETWEEN '1980-01-01' AND '1989-12-31' GROUP BY County ORDER BY ClosureCount DESC LIMIT 1;\t----- bird -----\tcalifornia_schools",
    "69": "SELECT DISTINCT NCESDist FROM schools WHERE SOC = 31 AND SOC IS NOT NULL;\t----- bird -----\tcalifornia_schools",
    "70": "SELECT StatusType, COUNT(*) AS SchoolCount FROM schools WHERE District = 'Alpine' AND School LIKE '%Community Day%' GROUP BY StatusType;\t----- bird -----\tcalifornia_schools",
    "71": "SELECT District FROM schools WHERE City = 'Fresno' AND Magnet = 0;\t----- bird -----\tcalifornia_schools",
    "72": "SELECT SUM(`Enrollment (Ages 5-17)`) FROM frpm WHERE `Academic Year` = '2014-2015' AND `County Name` = 'Fremont' AND `CDSCode` IN (SELECT `CDSCode` FROM schools WHERE `EdOpsCode` = 'SSS');\t----- bird -----\tcalifornia_schools",
    "73": "SELECT `Free Meal Count (Ages 5-17)` FROM frpm WHERE `School Name` = 'Youth Authority School' AND `2013-14 CALPADS Fall 1 Certification Status` IS NOT NULL AND EXISTS (SELECT 1 FROM schools WHERE schools.CDSCode = frpm.CDSCode AND schools.MailStreet = 'PO Box 1040');\t----- bird -----\tcalifornia_schools",
    "74": "SELECT `Low Grade` FROM frpm WHERE `EdOpsCode` = 'SPECON' AND `District Code` = '0613360' LIMIT 1;\t----- bird -----\tcalifornia_schools",
    "75": "SELECT `School Name`, `Educational Option Type` FROM frpm WHERE `County Code` = 37 AND `NSLP Provision Status` = 'Breakfast Provision 2';\t----- bird -----\tcalifornia_schools",
    "76": "SELECT City FROM schools s JOIN frpm f ON s.CDSCode = f.CDSCode WHERE f.`County Name` = 'Merced' AND f.`Low Grade` = 9 AND f.`High Grade` = 12 AND f.`NSLP Provision Status` = '2' AND s.EILCode = 'HS' LIMIT 1;\t----- bird -----\tcalifornia_schools",
    "77": "SELECT `School Name`, (`FRPM Count (Ages 5-17)` / `Enrollment (Ages 5-17)`) * 100 AS `Percent Eligible FRPM (Ages 5-17)` FROM frpm WHERE `County Name` = 'Los Angeles' AND `Low Grade` = 'K' AND `High Grade` = '9' AND `Enrollment (Ages 5-17)` > 0;\t----- bird -----\tcalifornia_schools",
    "78": "SELECT \"Low Grade\" || '-' || \"High Grade\" AS GradeSpan, COUNT(*) AS Count FROM frpm WHERE \"City\" = 'Adelanto' GROUP BY GradeSpan ORDER BY Count DESC LIMIT 1;\t----- bird -----\tcalifornia_schools",
    "79": "SELECT County, COUNT(*) AS NumSchools FROM schools WHERE County IN ('San Diego', 'Santa Barbara') AND Virtual = 'F' GROUP BY County ORDER BY NumSchools DESC LIMIT 1;\t----- bird -----\tcalifornia_schools",
    "80": "SELECT s.School, f.`School Type`, s.Latitude FROM schools s JOIN frpm f ON s.CDSCode = f.CDSCode WHERE s.Latitude = (SELECT MAX(Latitude) FROM schools);\t----- bird -----\tcalifornia_schools",
    "81": "SELECT School, City, \"Low Grade\" FROM schools JOIN frpm ON schools.CDSCode = frpm.CDSCode WHERE State = 'CA' ORDER BY Latitude ASC LIMIT 1;\t----- bird -----\tcalifornia_schools",
    "82": "SELECT GSoffered FROM schools ORDER BY ABS(Longitude) DESC LIMIT 1;\t----- bird -----\tcalifornia_schools",
    "83": "SELECT COUNT(CASE WHEN frpm.`NSLP Provision Status` = 'Multiple Provision Types' THEN 1 END) AS Schools_Multiple_Provision_Types, COUNT(DISTINCT frpm.`School Name`) AS Total_Schools_K_8, COUNT(DISTINCT frpm.`City`) AS Number_of_Cities, frpm.`City`, COUNT(frpm.`School Name`) AS Schools_Per_City FROM frpm JOIN schools ON frpm.`CDSCode` = schools.`CDSCode` WHERE schools.`Magnet` = 1 AND frpm.`Low Grade` = 'Kindergarten' AND frpm.`High Grade` = '8' GROUP BY frpm.`City` ORDER BY frpm.`City`;\t----- bird -----\tcalifornia_schools",
    "84": "SELECT AdmFName1 AS FirstName, District, COUNT(*) AS Count FROM schools WHERE AdmFName1 IS NOT NULL AND AdmFName1 <> '' GROUP BY AdmFName1, District ORDER BY Count DESC LIMIT 2;\t----- bird -----\tcalifornia_schools",
    "85": "SELECT frpm.`Percent (%) Eligible Free (K-12)`, frpm.`District Code` FROM frpm JOIN schools ON frpm.`CDSCode` = schools.`CDSCode` WHERE schools.`AdmFName1` = 'Alusine' OR schools.`AdmFName2` = 'Alusine' OR schools.`AdmFName3` = 'Alusine' LIMIT 1;\t----- bird -----\tcalifornia_schools",
    "86": "SELECT AdmLName1, District, County, School FROM schools WHERE CharterNum = 40;\t----- bird -----\tcalifornia_schools",
    "87": "SELECT AdmEmail1, AdmEmail2, AdmEmail3 FROM schools WHERE County = 'San Bernardino' AND City = 'San Bernardino City' AND District = 'San Bernardino City Unified' AND OpenDate BETWEEN '2009-01-01' AND '2010-12-31' AND SOC = 62 AND DOC = 54 AND StatusType = 'Public';\t----- bird -----\tcalifornia_schools",
    "88": "SELECT s.School, s.AdmEmail1 FROM satscores sa JOIN schools s ON sa.cds = s.CDSCode WHERE sa.NumGE1500 = (SELECT MAX(NumGE1500) FROM satscores);\t----- bird -----\tcalifornia_schools",
    "89": "SELECT COUNT(DISTINCT a.account_id) FROM account a JOIN disp d ON a.account_id = d.account_id JOIN card c ON d.disp_id = c.disp_id JOIN district dist ON a.district_id = dist.district_id WHERE c.type = 'POPLATEK PO OBRATU' AND dist.A3 = 'East Bohemia';\t----- bird -----\tfinancial",
    "90": "SELECT COUNT(DISTINCT a.account_id) FROM account a JOIN district d ON a.district_id = d.district_id JOIN loan l ON a.account_id = l.account_id WHERE d.A3 = 'Prague' AND l.status = 'eligible';\t----- bird -----\tfinancial",
    "91": "SELECT CASE WHEN AVG(A12) > AVG(A13) THEN '1995' WHEN AVG(A12) < AVG(A13) THEN '1996' ELSE 'Equal' END AS Year_With_Higher_Unemployment, AVG(A12) AS Avg_Unemployment_1995, AVG(A13) AS Avg_Unemployment_1996 FROM district;\t----- bird -----\tfinancial",
    "92": "SELECT COUNT(*) FROM district WHERE A11 > 6000 AND A11 < 10000;\t----- bird -----\tfinancial",
    "93": "SELECT COUNT(DISTINCT c.client_id) FROM client c JOIN district d ON c.district_id = d.district_id WHERE c.gender = 'M' AND d.A3 = 'North Bohemia' AND d.A11 > 8000;\t----- bird -----\tfinancial",
    "94": "WITH FemaleOldestLowest AS (SELECT a.account_id, d.A11 FROM account a JOIN disp dp ON a.account_id = dp.account_id JOIN client c ON dp.client_id = c.client_id JOIN district d ON a.district_id = d.district_id WHERE c.gender = 'F' AND c.birth_date = (SELECT MIN(c2.birth_date) FROM client c2 WHERE c2.gender = 'F')), SalaryStats AS (SELECT MAX(A11) AS max_salary, MIN(A11) AS min_salary FROM district) SELECT f.account_id, s.max_salary - s.min_salary AS salary_gap FROM FemaleOldestLowest f CROSS JOIN SalaryStats s WHERE f.A11 = s.min_salary;\t----- bird -----\tfinancial",
    "95": "SELECT a.account_id FROM account a JOIN disp d ON a.account_id = d.account_id JOIN client c ON d.client_id = c.client_id JOIN district dist ON a.district_id = dist.district_id WHERE c.birth_date = (SELECT MAX(birth_date) FROM client) AND dist.A11 = (SELECT MAX(A11) FROM district);\t----- bird -----\tfinancial",
    "96": "SELECT COUNT(DISTINCT c.client_id) FROM client c JOIN disp d ON c.client_id = d.client_id JOIN account a ON d.account_id = a.account_id WHERE a.frequency = 'POPLATEK TYDNE' AND d.type = 'Owner';\t----- bird -----\tfinancial",
    "97": "SELECT DISTINCT c.client_id FROM client c JOIN disp d ON c.client_id = d.client_id JOIN card ca ON d.disp_id = ca.disp_id WHERE ca.type = 'POPLATEK PO OBRATU';\t----- bird -----\tfinancial",
    "98": "SELECT a.account_id FROM account a JOIN loan l ON a.account_id = l.account_id WHERE l.status = 'approved' AND YEAR(l.date) = 1997 AND a.frequency = 'POPLATEK TYDNE' AND l.amount = (SELECT MIN(amount) FROM loan WHERE status = 'approved' AND YEAR(date) = 1997);\t----- bird -----\tfinancial",
    "99": "SELECT a.account_id, MAX(l.amount) AS max_amount FROM account a JOIN loan l ON a.account_id = l.account_id WHERE l.duration > 12 AND l.status = 'approved' AND YEAR(a.date) = 1993 GROUP BY a.account_id HAVING MAX(l.amount) = (SELECT MAX(amount) FROM loan WHERE duration > 12 AND status = 'approved');\t----- bird -----\tfinancial",
    "100": "SELECT COUNT(DISTINCT a.account_id) FROM account a JOIN disp d ON a.account_id = d.account_id JOIN client c ON d.client_id = c.client_id JOIN district dist ON c.district_id = dist.district_id WHERE c.gender = 'F' AND c.birth_date < '1950-01-01' AND dist.A2 = 'Sokolov';\t----- bird -----\tfinancial",
    "101": "SELECT account_id FROM trans WHERE date >= '1995-01-01' AND date < '1996-01-01' AND date = (SELECT MIN(date) FROM trans WHERE date >= '1995-01-01' AND date < '1996-01-01');\t----- bird -----\tfinancial",
    "102": "SELECT account_id FROM account WHERE date < '1997-01-01' AND frequency > 3000;\t----- bird -----\tfinancial",
    "103": "SELECT DISTINCT c.client_id FROM client c JOIN disp d ON c.client_id = d.client_id JOIN card ca ON d.disp_id = ca.disp_id WHERE ca.issued = '1994-03-03';\t----- bird -----\tfinancial",
    "104": "SELECT a.date FROM account a JOIN trans t ON a.account_id = t.account_id WHERE t.amount = 840 AND t.date = '1998-10-14' LIMIT 1;\t----- bird -----\tfinancial",
    "105": "SELECT a.district_id FROM loan l JOIN account a ON l.account_id = a.account_id WHERE l.date = '1994-08-25';\t----- bird -----\tfinancial",
    "106": "SELECT MAX(t.amount) FROM trans t JOIN account a ON t.account_id = a.account_id JOIN disp d ON a.account_id = d.account_id JOIN card c ON d.disp_id = c.disp_id WHERE c.issued = '1996-10-21';\t----- bird -----\tfinancial",
    "107": "SELECT c.gender FROM client c JOIN disp d ON c.client_id = d.client_id JOIN account a ON d.account_id = a.account_id JOIN district dist ON a.district_id = dist.district_id WHERE dist.A11 = (SELECT MAX(A11) FROM district) ORDER BY c.birth_date ASC LIMIT 1;\t----- bird -----\tfinancial",
    "108": "SELECT t.amount FROM trans t JOIN account a ON t.account_id = a.account_id JOIN loan l ON l.account_id = a.account_id WHERE l.loan_id = (SELECT loan_id FROM loan ORDER BY amount DESC LIMIT 1) AND t.date = (SELECT MIN(t2.date) FROM trans t2 WHERE t2.account_id = a.account_id AND t2.date >= a.date) LIMIT 1;\t----- bird -----\tfinancial",
    "109": "SELECT COUNT(DISTINCT c.client_id) FROM client c JOIN disp d ON c.client_id = d.client_id JOIN account a ON d.account_id = a.account_id JOIN district dist ON a.district_id = dist.district_id WHERE dist.A2 = 'Jesenik' AND c.gender = 'F';\t----- bird -----\tfinancial",
    "110": "SELECT disp.disp_id FROM disp JOIN trans ON disp.account_id = trans.account_id WHERE trans.amount = 5100 AND trans.date = '1998-09-02';\t----- bird -----\tfinancial",
    "111": "SELECT COUNT(*) FROM account a JOIN district d ON a.district_id = d.district_id WHERE d.A2 = 'Litomerice' AND YEAR(a.date) = 1996;\t----- bird -----\tfinancial",
    "112": "SELECT d.A2 FROM client c JOIN disp dp ON c.client_id = dp.client_id JOIN account a ON dp.account_id = a.account_id JOIN district d ON a.district_id = d.district_id WHERE c.gender = 'F' AND c.birth_date = '1976-01-29' LIMIT 1;\t----- bird -----\tfinancial",
    "113": "SELECT c.birth_date FROM client c JOIN disp d ON c.client_id = d.client_id JOIN loan l ON d.account_id = l.account_id WHERE l.amount = 98832 AND l.date = '1996-01-03' LIMIT 1;\t----- bird -----\tfinancial",
    "114": "SELECT a.account_id FROM account a JOIN client c ON a.account_id = (SELECT d.account_id FROM disp d WHERE d.client_id = c.client_id LIMIT 1) JOIN district dist ON a.district_id = dist.district_id WHERE dist.A3 = 'Prague' ORDER BY a.date ASC LIMIT 1;\t----- bird -----\tfinancial",
    "115": "SELECT (COUNT(CASE WHEN c.gender = 'M' THEN 1 END) * 100.0) / COUNT(*) AS male_percentage FROM client c JOIN district d ON c.district_id = d.district_id WHERE d.A3 = 'south Bohemia' AND d.A4 = (SELECT MAX(A4) FROM district WHERE A3 = 'south Bohemia');\t----- bird -----\tfinancial",
    "116": "SELECT ((b.balance - a.balance) / a.balance) * 100 AS increase_rate FROM (SELECT t.account_id, t.balance FROM trans t WHERE t.date = '1993-03-22') a JOIN (SELECT t.account_id, t.balance FROM trans t WHERE t.date = '1998-12-27') b ON a.account_id = b.account_id JOIN loan l ON l.account_id = a.account_id WHERE l.date = (SELECT MIN(date) FROM loan WHERE date >= '1993-07-05' AND status = 'approved') AND l.status = 'approved';\t----- bird -----\tfinancial",
    "117": "SELECT (SUM(CASE WHEN status = 'A' THEN amount ELSE 0 END) / SUM(amount)) * 100 AS percentage_fully_paid FROM loan;\t----- bird -----\tfinancial",
    "118": "SELECT (COUNT(DISTINCT CASE WHEN amount < 100000 AND status = 'C' THEN account_id END) * 100.0) / COUNT(DISTINCT account_id) AS percentage_running_loans_under_100k FROM loan;\t----- bird -----\tfinancial",
    "119": "SELECT a.account_id, d.A2 AS district_name, d.A3 AS district_region FROM account a JOIN district d ON a.district_id = d.district_id WHERE YEAR(a.date) = 1993 AND a.frequency = 'POPLATEK PO OBRATU';\t----- bird -----\tfinancial",
    "120": "SELECT DISTINCT a.account_id, a.frequency FROM account a JOIN disp d ON a.account_id = d.account_id JOIN client c ON d.client_id = c.client_id JOIN district dist ON c.district_id = dist.district_id WHERE a.date BETWEEN '1995-01-01' AND '2000-12-31' AND dist.A2 = 'east Bohemia';\t----- bird -----\tfinancial",
    "121": "SELECT account.account_id, account.date FROM account JOIN district ON account.district_id = district.district_id WHERE district.A2 = 'Prachatice';\t----- bird -----\tfinancial",
    "122": "SELECT d.A2 AS district, d.A3 AS region FROM loan l JOIN account a ON l.account_id = a.account_id JOIN district d ON a.district_id = d.district_id WHERE l.loan_id = '4990';\t----- bird -----\tfinancial",
    "123": "SELECT loan.account_id, district.A2 AS district, district.A3 AS region FROM loan JOIN account ON loan.account_id = account.account_id JOIN district ON account.district_id = district.district_id WHERE loan.amount > 300000;\t----- bird -----\tfinancial",
    "124": "SELECT loan.loan_id, district.A3 AS district, district.A11 AS average_salary FROM loan JOIN account ON loan.account_id = account.account_id JOIN district ON account.district_id = district.district_id WHERE loan.duration = 60;\t----- bird -----\tfinancial",
    "125": "SELECT d.district_id, ((d.A13 - d.A12) / d.A12) * 100 AS unemployment_rate_increment FROM loan l JOIN account a ON l.account_id = a.account_id JOIN disp dp ON a.account_id = dp.account_id JOIN client c ON dp.client_id = c.client_id JOIN district d ON c.district_id = d.district_id WHERE l.status = 'D' AND l.date BETWEEN '1995-01-01' AND '1996-12-31' GROUP BY d.district_id, d.A12, d.A13;\t----- bird -----\tfinancial",
    "126": "SELECT 100.0 * COUNT(a.account_id) / (SELECT COUNT(*) FROM account WHERE YEAR(date) = 1993) AS percentage FROM account a JOIN district d ON a.district_id = d.district_id WHERE d.A2 = 'Decin' AND YEAR(a.date) = 1993;\t----- bird -----\tfinancial",
    "127": "SELECT DISTINCT account_id FROM account WHERE frequency = 'POPLATEK MESICNE';\t----- bird -----\tfinancial",
    "128": "SELECT d.district_id, COUNT(DISTINCT c.client_id) AS female_account_holders FROM client c JOIN disp dp ON c.client_id = dp.client_id JOIN account a ON dp.account_id = a.account_id JOIN district d ON a.district_id = d.district_id WHERE c.gender = 'F' GROUP BY d.district_id ORDER BY female_account_holders DESC LIMIT 9;\t----- bird -----\tfinancial",
    "129": "SELECT d.A2 AS district_name, SUM(t.amount) AS total_withdrawals FROM trans t JOIN account a ON t.account_id = a.account_id JOIN district d ON a.district_id = d.district_id WHERE t.type = 'VYDAJ' AND t.date LIKE '1996-01%' GROUP BY d.A2 ORDER BY total_withdrawals DESC LIMIT 10;\t----- bird -----\tfinancial",
    "130": "SELECT COUNT(DISTINCT d.client_id) FROM disp d JOIN account a ON d.account_id = a.account_id JOIN district dist ON a.district_id = dist.district_id LEFT JOIN card c ON d.disp_id = c.disp_id AND c.type = 'credit' WHERE dist.A3 = 'South Bohemia' AND c.card_id IS NULL;\t----- bird -----\tfinancial",
    "131": "SELECT d.A3 AS district_name, SUM(l.amount) AS total_active_loan FROM loan l JOIN account a ON l.account_id = a.account_id JOIN district d ON a.district_id = d.district_id WHERE l.status IN ('C', 'D') GROUP BY d.A3 ORDER BY total_active_loan DESC LIMIT 1;\t----- bird -----\tfinancial",
    "132": "SELECT AVG(loan.amount) FROM loan JOIN account ON loan.account_id = account.account_id JOIN disp ON account.account_id = disp.account_id JOIN client ON disp.client_id = client.client_id WHERE client.gender = 'M';\t----- bird -----\tfinancial",
    "133": "SELECT district.A2 AS district_name, district.A16 AS branch_location FROM district WHERE district.A13 = (SELECT MAX(A13) FROM district) AND district.A13 IS NOT NULL;\t----- bird -----\tfinancial",
    "134": "SELECT COUNT(*) FROM account WHERE district_id = (SELECT district_id FROM district ORDER BY A16 DESC LIMIT 1);\t----- bird -----\tfinancial",
    "135": "SELECT COUNT(DISTINCT t.account_id) FROM trans t JOIN card c ON t.account_id = c.account_id JOIN account a ON t.account_id = a.account_id WHERE t.operation = 'VYBER KARTOU' AND a.frequency = 'POPLATEK MESICNE' AND t.balance < 0;\t----- bird -----\tfinancial",
    "136": "SELECT COUNT(DISTINCT l.loan_id) FROM loan l JOIN account a ON l.account_id = a.account_id WHERE l.date BETWEEN '1995-01-01' AND '1997-12-31' AND l.amount >= 250000 AND a.frequency = 'POPLATEK MESICNE' AND l.status = 'approved';\t----- bird -----\tfinancial",
    "137": "SELECT COUNT(DISTINCT account.account_id) FROM account JOIN loan ON account.account_id = loan.account_id WHERE loan.status IN ('C', 'D') AND account.district_id = 1;\t----- bird -----\tfinancial",
    "138": "SELECT COUNT(*) FROM client WHERE gender = 'M' AND district_id = (SELECT district_id FROM (SELECT district_id, A15, DENSE_RANK() OVER (ORDER BY A15 DESC) AS rank FROM district) sub WHERE rank = 2);\t----- bird -----\tfinancial",
    "139": "SELECT COUNT(*) FROM card c JOIN disp d ON c.disp_id = d.disp_id WHERE c.type = 'gold' AND d.type = 'OWNER';\t----- bird -----\tfinancial",
    "140": "SELECT COUNT(*) FROM account a JOIN district d ON a.district_id = d.district_id WHERE d.A2 = 'Pisek';\t----- bird -----\tfinancial",
    "141": "SELECT d.district_id FROM district d JOIN account a ON d.district_id = a.district_id JOIN trans t ON a.account_id = t.account_id WHERE t.date BETWEEN '1997-01-01' AND '1997-12-31' GROUP BY d.district_id HAVING SUM(t.amount) > 10000;\t----- bird -----\tfinancial",
    "142": "SELECT DISTINCT o.account_id FROM \"order\" o JOIN account a ON o.account_id = a.account_id JOIN district d ON a.district_id = d.district_id WHERE o.k_symbol = 'SIPO' AND d.A3 = 'Pisek';\t----- bird -----\tfinancial",
    "143": "SELECT DISTINCT account.account_id FROM account JOIN disp ON account.account_id = disp.account_id JOIN card ON disp.disp_id = card.disp_id WHERE card.type = 'gold';\t----- bird -----\tfinancial",
    "144": "SELECT AVG(monthly_amount) FROM (SELECT DATE_TRUNC('month', t.date) AS month, t.account_id, SUM(t.amount) AS monthly_amount FROM trans t JOIN card c ON t.account_id = (SELECT d.account_id FROM disp d WHERE d.disp_id = c.disp_id LIMIT 1) WHERE t.operation = 'VYBER KARTOU' AND EXTRACT(YEAR FROM t.date) = 2021 GROUP BY month, t.account_id) subquery;\t----- bird -----\tfinancial",
    "145": "SELECT DISTINCT d.client_id FROM trans t JOIN card c ON t.account_id = (SELECT d2.account_id FROM disp d2 WHERE d2.disp_id = c.disp_id) JOIN disp d ON c.disp_id = d.disp_id WHERE t.operation = 'VYBER KARTOU' AND YEAR(t.date) = 1998 AND t.amount < (SELECT AVG(amount) FROM trans t2 JOIN card c2 ON t2.account_id = (SELECT d3.account_id FROM disp d3 WHERE d3.disp_id = c2.disp_id) WHERE t2.operation = 'VYBER KARTOU' AND YEAR(t2.date) = 1998);\t----- bird -----\tfinancial",
    "146": "SELECT DISTINCT c.client_id FROM client c JOIN disp d ON c.client_id = d.client_id JOIN card ca ON d.disp_id = ca.disp_id AND ca.type = 'credit' JOIN loan l ON d.account_id = l.account_id WHERE c.gender = 'F';\t----- bird -----\tfinancial",
    "147": "SELECT COUNT(DISTINCT a.account_id) FROM account a JOIN client c ON a.district_id = c.district_id AND c.gender = 'F' JOIN district d ON a.district_id = d.district_id WHERE d.A3 LIKE '%south Bohemia%';\t----- bird -----\tfinancial",
    "148": "SELECT a.account_id FROM account a JOIN district d ON a.district_id = d.district_id JOIN disp dp ON a.account_id = dp.account_id WHERE d.A2 = 'Tabor' AND dp.type = 'OWNER' AND EXISTS (SELECT 1 FROM loan l WHERE l.account_id = a.account_id);\t----- bird -----\tfinancial",
    "149": "SELECT DISTINCT d.A2 AS account_type FROM disp d JOIN account a ON d.account_id = a.account_id JOIN district dist ON a.district_id = dist.district_id WHERE d.type <> 'OWNER' AND dist.A11 > 8000 AND dist.A11 <= 9000;\t----- bird -----\tfinancial",
    "150": "SELECT COUNT(DISTINCT a.account_id) FROM account a JOIN district d ON a.district_id = d.district_id JOIN trans t ON a.account_id = t.account_id WHERE d.A3 = 'North Bohemia' AND t.bank = 'AB';\t----- bird -----\tfinancial",
    "151": "SELECT DISTINCT d.A2 FROM district d JOIN account a ON d.district_id = a.district_id JOIN trans t ON a.account_id = t.account_id WHERE t.type = 'VYDAJ';\t----- bird -----\tfinancial",
    "152": "SELECT AVG(d.A15) FROM district d WHERE d.A15 > 4000 AND EXISTS (SELECT 1 FROM account a WHERE a.district_id = d.district_id AND YEAR(a.date) >= 1997);\t----- bird -----\tfinancial",
    "153": "SELECT COUNT(DISTINCT card.card_id) FROM card JOIN disp ON card.disp_id = disp.disp_id JOIN account ON disp.account_id = account.account_id WHERE card.type = 'classic' AND disp.type = 'OWNER' AND EXISTS (SELECT 1 FROM loan WHERE loan.account_id = account.account_id);\t----- bird -----\tfinancial",
    "154": "SELECT COUNT(*) FROM client JOIN district ON client.district_id = district.district_id WHERE client.gender = 'M' AND district.A2 = 'Hl.m. Praha';\t----- bird -----\tfinancial",
    "155": "SELECT 100.0 * COUNT(CASE WHEN type = 'gold' AND issued < '1998-01-01' THEN 1 END) / COUNT(*) AS percent_gold_before_1998 FROM card;\t----- bird -----\tfinancial",
    "156": "SELECT c.client_id FROM client c JOIN disp d ON c.client_id = d.client_id JOIN loan l ON d.account_id = l.account_id WHERE l.amount = (SELECT MAX(amount) FROM loan) LIMIT 1;\t----- bird -----\tfinancial",
    "157": "SELECT d.A15 FROM district d JOIN account a ON d.district_id = a.district_id WHERE a.account_id = 532;\t----- bird -----\tfinancial",
    "158": "SELECT district_id FROM account WHERE account_id = (SELECT account_id FROM \"order\" WHERE order_id = 33333);\t----- bird -----\tfinancial",
    "159": "SELECT t.* FROM trans t JOIN account a ON t.account_id = a.account_id JOIN disp d ON a.account_id = d.account_id WHERE d.client_id = 3356 AND t.operation = 'VYBER' AND t.type = 'cash';\t----- bird -----\tfinancial",
    "160": "SELECT COUNT(DISTINCT a.account_id) FROM account a JOIN loan l ON a.account_id = l.account_id WHERE a.frequency = 'POPLATEK TYDNE' AND l.amount < 200000;\t----- bird -----\tfinancial",
    "161": "SELECT card.type FROM card JOIN disp ON card.disp_id = disp.disp_id WHERE disp.client_id = 13539 AND card.type LIKE '%credit%';\t----- bird -----\tfinancial",
    "162": "SELECT district.A3 FROM client JOIN district ON client.district_id = district.district_id WHERE client.client_id = 3541;\t----- bird -----\tfinancial",
    "163": "SELECT a.district_id, COUNT(DISTINCT a.account_id) AS finished_loans_count FROM account a JOIN loan l ON a.account_id = l.account_id WHERE l.status = 'A' GROUP BY a.district_id ORDER BY finished_loans_count DESC LIMIT 1;\t----- bird -----\tfinancial",
    "164": "SELECT client.client_id FROM client JOIN disp ON client.client_id = disp.client_id JOIN \"order\" ON disp.account_id = \"order\".account_id WHERE \"order\".order_id = 32423;\t----- bird -----\tfinancial",
    "165": "SELECT trans.* FROM trans JOIN account ON trans.account_id = account.account_id WHERE account.district_id = 5;\t----- bird -----\tfinancial",
    "166": "SELECT COUNT(*) FROM account a JOIN district d ON a.district_id = d.district_id WHERE d.A2 = 'Jesenik';\t----- bird -----\tfinancial",
    "167": "SELECT DISTINCT c.client_id FROM client c JOIN disp d ON c.client_id = d.client_id JOIN card ca ON d.disp_id = ca.disp_id WHERE ca.type = 'junior' AND ca.issued >= '1997-01-01';\t----- bird -----\tfinancial",
    "168": "SELECT 100.0 * SUM(CASE WHEN c.gender = 'F' THEN 1 ELSE 0 END) / COUNT(*) AS percentage_women FROM client c JOIN disp d ON c.client_id = d.client_id JOIN account a ON d.account_id = a.account_id JOIN district dist ON a.district_id = dist.district_id WHERE dist.A11 > 10000;\t----- bird -----\tfinancial",
    "169": "SELECT ((SUM(CASE WHEN YEAR(l.date) = 1997 THEN l.amount ELSE 0 END) - SUM(CASE WHEN YEAR(l.date) = 1996 THEN l.amount ELSE 0 END)) / NULLIF(SUM(CASE WHEN YEAR(l.date) = 1996 THEN l.amount ELSE 0 END),0)) * 100 AS growth_rate FROM loan l JOIN account a ON l.account_id = a.account_id JOIN disp d ON a.account_id = d.account_id JOIN client c ON d.client_id = c.client_id WHERE c.gender = 'M';\t----- bird -----\tfinancial",
    "170": "SELECT COUNT(*) FROM trans t JOIN card c ON t.account_id = (SELECT d.account_id FROM disp d WHERE d.disp_id = c.disp_id) WHERE t.operation = 'VYBER KARTOU' AND t.date > '1995-12-31';\t----- bird -----\tfinancial",
    "171": "SELECT (SELECT A16 FROM district WHERE A3 = 'North Bohemia') - (SELECT A16 FROM district WHERE A3 = 'East Bohemia') AS crime_difference;\t----- bird -----\tfinancial",
    "172": "SELECT COUNT(*) FROM disp WHERE account_id BETWEEN 1 AND 10 AND type IN ('OWNER', 'DISPONENT');\t----- bird -----\tfinancial",
    "173": "SELECT (SELECT COUNT(*) FROM trans WHERE account_id = 3 AND k_symbol = 'account statement') AS statement_requests, (SELECT k_symbol FROM trans WHERE account_id = 3539 AND amount < 0 GROUP BY k_symbol ORDER BY SUM(amount) ASC LIMIT 1) AS aim_of_debit_3539;\t----- bird -----\tfinancial",
    "174": "SELECT EXTRACT(YEAR FROM c.birth_date) FROM client c JOIN disp d ON c.client_id = d.client_id WHERE d.account_id = 130;\t----- bird -----\tfinancial",
    "175": "SELECT COUNT(DISTINCT a.account_id) FROM account a JOIN disp d ON a.account_id = d.account_id WHERE d.type = 'owner' AND a.frequency = 'POPLATEK PO OBRATU';\t----- bird -----\tfinancial",
    "176": "SELECT SUM(l.amount) AS total_debt, SUM(l.payments) AS total_payments, l.status FROM loan l JOIN account a ON l.account_id = a.account_id JOIN disp d ON a.account_id = d.account_id WHERE d.client_id = 992 GROUP BY l.status;\t----- bird -----\tfinancial",
    "177": "SELECT t.balance, c.gender FROM trans t JOIN account a ON t.account_id = a.account_id JOIN disp d ON a.account_id = d.account_id JOIN client c ON d.client_id = c.client_id WHERE t.trans_id = 851 AND c.client_id = 4;\t----- bird -----\tfinancial",
    "178": "SELECT card.type FROM card JOIN disp ON card.disp_id = disp.disp_id WHERE disp.client_id = 9;\t----- bird -----\tfinancial",
    "179": "SELECT SUM(t.amount) FROM trans t JOIN account a ON t.account_id = a.account_id JOIN disp d ON a.account_id = d.account_id WHERE d.client_id = 617 AND YEAR(t.date) = 1998 AND t.amount < 0;\t----- bird -----\tfinancial",
    "180": "SELECT DISTINCT c.client_id FROM client c JOIN disp d ON c.client_id = d.client_id JOIN account a ON d.account_id = a.account_id JOIN district dist ON a.district_id = dist.district_id WHERE c.birth_date BETWEEN '1983-01-01' AND '1987-12-31' AND dist.A2 = 'East Bohemia';\t----- bird -----\tfinancial",
    "181": "SELECT client.client_id FROM client JOIN disp ON client.client_id = disp.client_id JOIN loan ON disp.account_id = loan.account_id WHERE client.gender = 'F' GROUP BY client.client_id ORDER BY SUM(loan.amount) DESC LIMIT 3;\t----- bird -----\tfinancial",
    "182": "SELECT COUNT(DISTINCT c.client_id) FROM client c JOIN disp d ON c.client_id = d.client_id JOIN account a ON d.account_id = a.account_id JOIN trans t ON a.account_id = t.account_id WHERE c.gender = 'M' AND c.birth_date BETWEEN '1974-01-01' AND '1976-12-31' AND t.k_symbol = 'SIPO' AND t.amount > 4000;\t----- bird -----\tfinancial",
    "183": "SELECT COUNT(*) FROM account a JOIN district d ON a.district_id = d.district_id WHERE d.A2 = 'Beroun' AND a.date > '1996-12-31';\t----- bird -----\tfinancial",
    "184": "SELECT COUNT(DISTINCT c.client_id) FROM client c JOIN disp d ON c.client_id = d.client_id JOIN card ca ON d.disp_id = ca.disp_id WHERE c.gender = 'F' AND ca.type = 'junior';\t----- bird -----\tfinancial",
    "185": "SELECT 100.0 * COUNT(DISTINCT c.client_id) FILTER (WHERE c.gender = 'F') / COUNT(DISTINCT c.client_id) AS female_percentage FROM client c JOIN disp d ON c.client_id = d.client_id JOIN account a ON d.account_id = a.account_id JOIN district dist ON a.district_id = dist.district_id WHERE dist.A3 LIKE '%Prague%' AND d.type IN ('OWNER', 'PRIMARY');\t----- bird -----\tfinancial",
    "186": "SELECT 100.0 * COUNT(DISTINCT c.client_id) / (SELECT COUNT(DISTINCT c2.client_id) FROM client c2 JOIN disp d2 ON c2.client_id = d2.client_id JOIN card ca2 ON d2.disp_id = ca2.disp_id WHERE ca2.type = 'POPLATEK TYDNE') AS percentage_male_weekly FROM client c JOIN disp d ON c.client_id = d.client_id JOIN card ca ON d.disp_id = ca.disp_id WHERE ca.type = 'POPLATEK TYDNE' AND c.gender = 'M';\t----- bird -----\tfinancial",
    "187": "SELECT COUNT(DISTINCT c.client_id) FROM client c JOIN disp d ON c.client_id = d.client_id JOIN account a ON d.account_id = a.account_id WHERE a.frequency = 'POPLATEK TYDNE' AND d.type = 'Owner';\t----- bird -----\tfinancial",
    "188": "SELECT account.account_id FROM account JOIN loan ON account.account_id = loan.account_id WHERE loan.duration > 24 AND loan.status = 'approved' AND account.date < '1997-01-01' AND loan.amount = (SELECT MIN(amount) FROM loan WHERE duration > 24 AND status = 'approved');\t----- bird -----\tfinancial",
    "189": "SELECT DISTINCT a.account_id FROM account a JOIN disp d ON a.account_id = d.account_id JOIN client c ON d.client_id = c.client_id JOIN district dist ON a.district_id = dist.district_id WHERE c.gender = 'F' AND c.birth_date = (SELECT MIN(c2.birth_date) FROM client c2 WHERE c2.gender = 'F') AND dist.A11 = (SELECT MIN(dist2.A11) FROM district dist2);\t----- bird -----\tfinancial",
    "190": "SELECT COUNT(*) FROM client JOIN district ON client.district_id = district.district_id WHERE YEAR(client.birth_date) = 1920 AND district.A3 = 'East Bohemia';\t----- bird -----\tfinancial",
    "191": "SELECT COUNT(DISTINCT loan.account_id) FROM loan JOIN account ON loan.account_id = account.account_id WHERE loan.duration = 24 AND loan.status = 'pre-payment' AND account.frequency = 'POPLATEK TYDNE';\t----- bird -----\tfinancial",
    "192": "SELECT AVG(loan.amount) FROM loan JOIN account ON loan.account_id = account.account_id JOIN trans ON account.account_id = trans.account_id WHERE loan.status IN ('C', 'D') AND trans.k_symbol = 'POPLATEK PO OBRATU';\t----- bird -----\tfinancial",
    "193": "SELECT DISTINCT c.client_id, c.district_id FROM client c JOIN disp d ON c.client_id = d.client_id JOIN account a ON d.account_id = a.account_id WHERE d.type = 'owner';\t----- bird -----\tfinancial",
    "194": "SELECT c.client_id, FLOOR(DATEDIFF(CURDATE(), c.birth_date) / 365.25) AS age FROM client c JOIN disp d ON c.client_id = d.client_id AND d.type = 'OWNER' JOIN card ca ON d.disp_id = ca.disp_id WHERE ca.type = 'gold';\t----- bird -----\tfinancial",
    "195": "SELECT bond_type FROM bond GROUP BY bond_type ORDER BY COUNT(*) DESC LIMIT 1;\t----- bird -----\ttoxicology",
    "196": "SELECT COUNT(DISTINCT a.molecule_id) FROM atom a JOIN molecule m ON a.molecule_id = m.molecule_id WHERE m.label = '-' AND a.element = 'cl';\t----- bird -----\ttoxicology",
    "197": "SELECT AVG(oxygen_count) FROM (SELECT a.molecule_id, COUNT(*) AS oxygen_count FROM atom a JOIN bond b ON a.molecule_id = b.molecule_id WHERE a.element = 'o' AND b.bond_type = '-' GROUP BY a.molecule_id) sub;\t----- bird -----\ttoxicology",
    "198": "SELECT AVG(single_bond_count) FROM (SELECT m.molecule_id, COUNT(DISTINCT c.bond_id) AS single_bond_count FROM molecule m JOIN bond b ON m.molecule_id = b.molecule_id JOIN connected c ON b.bond_id = c.bond_id WHERE m.label = '+' AND b.bond_type = '-' GROUP BY m.molecule_id) sub;\t----- bird -----\ttoxicology",
    "199": "SELECT COUNT(DISTINCT m.molecule_id) FROM molecule m JOIN atom a ON m.molecule_id = a.molecule_id WHERE a.element = 'na' AND m.label = '-';\t----- bird -----\ttoxicology",
    "200": "SELECT DISTINCT m.molecule_id, m.label FROM molecule m JOIN bond b ON m.molecule_id = b.molecule_id WHERE b.bond_type = '#' AND m.label = '+';\t----- bird -----\ttoxicology",
    "201": "SELECT 100.0 * SUM(CASE WHEN a.element = 'c' THEN 1 ELSE 0 END) / COUNT(a.atom_id) AS percentage_carbon FROM atom a JOIN molecule m ON a.molecule_id = m.molecule_id WHERE m.molecule_id IN (SELECT DISTINCT molecule_id FROM bond WHERE bond_type = '=');\t----- bird -----\ttoxicology",
    "202": "SELECT COUNT(*) FROM bond WHERE bond_type = '#';\t----- bird -----\ttoxicology",
    "203": "SELECT COUNT(*) FROM atom WHERE element != 'br';\t----- bird -----\ttoxicology",
    "204": "SELECT COUNT(*) FROM molecule WHERE molecule_id BETWEEN 'TR000' AND 'TR099' AND label = '+';\t----- bird -----\ttoxicology",
    "205": "SELECT DISTINCT molecule_id FROM atom WHERE element = 'c';\t----- bird -----\ttoxicology",
    "206": "SELECT DISTINCT a.element FROM atom a JOIN connected c ON a.atom_id = c.atom_id OR a.atom_id = c.atom_id2 WHERE c.bond_id = 'TR004_8_9';\t----- bird -----\ttoxicology",
    "207": "SELECT DISTINCT a.element FROM atom a JOIN connected c ON a.atom_id = c.atom_id OR a.atom_id = c.atom_id2 JOIN bond b ON c.bond_id = b.bond_id WHERE b.bond_type = '=';\t----- bird -----\ttoxicology",
    "208": "SELECT m.label FROM molecule m JOIN atom a ON m.molecule_id = a.molecule_id WHERE a.element = 'h' GROUP BY m.label ORDER BY COUNT(*) DESC LIMIT 1;\t----- bird -----\ttoxicology",
    "209": "SELECT DISTINCT b.bond_type FROM bond b JOIN connected c ON b.bond_id = c.bond_id JOIN atom a ON c.atom_id = a.atom_id OR c.atom_id2 = a.atom_id WHERE a.element = 'cl';\t----- bird -----\ttoxicology",
    "210": "SELECT a1.atom_id, a1.element, a2.atom_id, a2.element FROM connected c JOIN bond b ON c.bond_id = b.bond_id JOIN atom a1 ON c.atom_id = a1.atom_id JOIN atom a2 ON c.atom_id2 = a2.atom_id WHERE b.bond_type = '-';\t----- bird -----\ttoxicology",
    "211": "SELECT c.atom_id, c.atom_id2 FROM connected c JOIN bond b ON c.bond_id = b.bond_id JOIN molecule m ON b.molecule_id = m.molecule_id WHERE m.label = '-';\t----- bird -----\ttoxicology",
    "212": "SELECT element FROM atom WHERE molecule_id IN (SELECT molecule_id FROM molecule WHERE label = '-') GROUP BY element ORDER BY COUNT(*) ASC LIMIT 1;\t----- bird -----\ttoxicology",
    "213": "SELECT b.bond_type FROM bond b JOIN connected c ON b.bond_id = c.bond_id WHERE (c.atom_id = 'TR004_8' AND c.atom_id2 = 'TR004_20') OR (c.atom_id = 'TR004_20' AND c.atom_id2 = 'TR004_8');\t----- bird -----\ttoxicology",
    "214": "SELECT DISTINCT label FROM molecule WHERE molecule_id NOT IN (SELECT DISTINCT molecule_id FROM atom WHERE element = 'sn');\t----- bird -----\ttoxicology",
    "215": "SELECT COUNT(DISTINCT a.atom_id) FROM atom a JOIN connected c ON a.atom_id = c.atom_id JOIN bond b ON c.bond_id = b.bond_id WHERE b.bond_type = '-' AND a.element IN ('i', 's');\t----- bird -----\ttoxicology",
    "216": "SELECT c.atom_id, c.atom_id2 FROM connected c JOIN bond b ON c.bond_id = b.bond_id WHERE b.bond_type = '#';\t----- bird -----\ttoxicology",
    "217": "SELECT DISTINCT a2.* FROM atom a1 JOIN connected c ON a1.atom_id = c.atom_id JOIN atom a2 ON c.atom_id2 = a2.atom_id WHERE a1.molecule_id = 'TR181' UNION SELECT DISTINCT a1.* FROM atom a2 JOIN connected c ON a2.atom_id = c.atom_id2 JOIN atom a1 ON c.atom_id = a1.atom_id WHERE a2.molecule_id = 'TR181';\t----- bird -----\ttoxicology",
    "218": "SELECT 100.0 * COUNT(DISTINCT m.molecule_id) FILTER (WHERE m.molecule_id NOT IN (SELECT DISTINCT molecule_id FROM atom WHERE LOWER(element) = 'f')) / COUNT(DISTINCT m.molecule_id) FROM molecule m WHERE m.label = '+';\t----- bird -----\ttoxicology",
    "219": "SELECT (SUM(CASE WHEN b.bond_type = '#' THEN 1 ELSE 0 END) * 100.0) / COUNT(b.bond_id) AS percent FROM bond b JOIN molecule m ON b.molecule_id = m.molecule_id WHERE m.label = '+';\t----- bird -----\ttoxicology",
    "220": "SELECT element FROM atom WHERE molecule_id = 'TR000' ORDER BY element ASC LIMIT 3;\t----- bird -----\ttoxicology",
    "221": "SELECT c.atom_id, c.atom_id2 FROM connected c WHERE c.bond_id = 'TR001_2_6' AND c.atom_id IN (SELECT atom_id FROM atom WHERE molecule_id = 'TR001') AND c.atom_id2 IN (SELECT atom_id FROM atom WHERE molecule_id = 'TR001');\t----- bird -----\ttoxicology",
    "222": "SELECT SUM(CASE WHEN label = '+' THEN 1 ELSE 0 END) - SUM(CASE WHEN label = '-' THEN 1 ELSE 0 END) AS difference FROM molecule;\t----- bird -----\ttoxicology",
    "223": "SELECT atom_id, atom_id2 FROM connected WHERE bond_id = 'TR000_2_5';\t----- bird -----\ttoxicology",
    "224": "SELECT bond_id FROM connected WHERE atom_id2 = (SELECT atom_id2 FROM connected WHERE atom_id = 'TR000_2');\t----- bird -----\ttoxicology",
    "225": "SELECT DISTINCT m.label FROM molecule m JOIN bond b ON m.molecule_id = b.molecule_id WHERE b.bond_type = ' = ' ORDER BY m.label ASC LIMIT 5;\t----- bird -----\ttoxicology",
    "226": "SELECT ROUND(100.0 * SUM(CASE WHEN bond_type = '=' THEN 1 ELSE 0 END) / COUNT(bond_id), 5) AS percentage FROM bond WHERE molecule_id = 'TR008';\t----- bird -----\ttoxicology",
    "227": "SELECT ROUND(100.0 * SUM(CASE WHEN label = '+' THEN 1 ELSE 0 END) / COUNT(molecule_id), 3) AS percentage FROM molecule;\t----- bird -----\ttoxicology",
    "228": "SELECT ROUND(100.0 * SUM(CASE WHEN element = 'h' THEN 1 ELSE 0 END) / COUNT(atom_id), 4) AS percent FROM atom WHERE molecule_id = 'TR206';\t----- bird -----\ttoxicology",
    "229": "SELECT DISTINCT bond_type FROM bond WHERE molecule_id = 'TR000';\t----- bird -----\ttoxicology",
    "230": "SELECT a.element, m.label FROM atom a JOIN molecule m ON a.molecule_id = m.molecule_id WHERE m.molecule_id = 'TR060';\t----- bird -----\ttoxicology",
    "231": "SELECT b.bond_type, CASE WHEN m.label = 'carcinogenic' THEN 'Yes' ELSE 'No' END AS is_carcinogenic FROM bond b JOIN molecule m ON b.molecule_id = m.molecule_id WHERE b.molecule_id = 'TR010' GROUP BY b.bond_type, m.label ORDER BY COUNT(b.bond_type) DESC LIMIT 1;\t----- bird -----\ttoxicology",
    "232": "SELECT DISTINCT m.molecule_id FROM molecule m JOIN bond b ON m.molecule_id = b.molecule_id JOIN connected c ON b.bond_id = c.bond_id WHERE b.bond_type = '-' AND m.label = '-' ORDER BY m.molecule_id ASC LIMIT 3;\t----- bird -----\ttoxicology",
    "233": "SELECT bond_type FROM bond WHERE molecule_id = 'TR006' ORDER BY bond_type ASC LIMIT 2;\t----- bird -----\ttoxicology",
    "234": "SELECT COUNT(DISTINCT c.bond_id) FROM connected c JOIN bond b ON c.bond_id = b.bond_id WHERE b.molecule_id = 'TR009' AND ('TR009_12' IN (c.atom_id, c.atom_id2));\t----- bird -----\ttoxicology",
    "235": "SELECT COUNT(DISTINCT m.molecule_id) FROM molecule m JOIN atom a ON m.molecule_id = a.molecule_id WHERE m.label = '+' AND a.element = 'br';\t----- bird -----\ttoxicology",
    "236": "SELECT b.bond_type, c.atom_id, c.atom_id2 FROM bond b JOIN connected c ON b.bond_id = c.bond_id WHERE b.bond_id = 'TR001_6_9';\t----- bird -----\ttoxicology",
    "237": "SELECT m.molecule_id, m.label, CASE WHEN m.label = '+' THEN 'carcinogenic' ELSE 'not carcinogenic' END AS carcinogenic_status FROM atom a JOIN molecule m ON a.molecule_id = m.molecule_id WHERE a.atom_id = 'TR001_10';\t----- bird -----\ttoxicology",
    "238": "SELECT COUNT(DISTINCT molecule_id) FROM bond WHERE bond_type = '#';\t----- bird -----\ttoxicology",
    "239": "SELECT COUNT(*) FROM connected WHERE atom_id = 19 OR atom_id2 = 19;\t----- bird -----\ttoxicology",
    "240": "SELECT element FROM atom WHERE molecule_id = 'TR004';\t----- bird -----\ttoxicology",
    "241": "SELECT COUNT(*) FROM molecule WHERE label = '-';\t----- bird -----\ttoxicology",
    "242": "SELECT DISTINCT m.molecule_id, m.label FROM molecule m JOIN atom a ON m.molecule_id = a.molecule_id WHERE m.label = '+' AND SUBSTR(a.atom_id, 7, 2) BETWEEN '21' AND '25';\t----- bird -----\ttoxicology",
    "243": "SELECT DISTINCT b.bond_id, b.molecule_id, b.bond_type FROM bond b JOIN connected c1 ON b.bond_id = c1.bond_id JOIN connected c2 ON b.bond_id = c2.bond_id JOIN atom a1 ON c1.atom_id = a1.atom_id JOIN atom a2 ON c2.atom_id = a2.atom_id WHERE (a1.element = 'p' AND a2.element = 'n') OR (a1.element = 'n' AND a2.element = 'p');\t----- bird -----\ttoxicology",
    "244": "SELECT CASE WHEN m.label = '+' THEN 'Yes' ELSE 'No' END AS is_carcinogenic FROM molecule m JOIN (SELECT molecule_id, COUNT(*) AS double_bond_count FROM bond WHERE bond_type = ' = ' GROUP BY molecule_id ORDER BY double_bond_count DESC LIMIT 1) b ON m.molecule_id = b.molecule_id;\t----- bird -----\ttoxicology",
    "245": "SELECT COUNT(c.bond_id)*1.0/COUNT(DISTINCT a.atom_id) AS average_bonds FROM atom a LEFT JOIN connected c ON a.atom_id = c.atom_id WHERE a.element = 'i';\t----- bird -----\ttoxicology",
    "246": "SELECT b.bond_type, b.bond_id FROM bond b JOIN connected c ON b.bond_id = c.bond_id WHERE c.atom_id = 45 OR c.atom_id2 = 45;\t----- bird -----\ttoxicology",
    "247": "SELECT element FROM atom WHERE atom_id NOT IN (SELECT atom_id FROM connected UNION SELECT atom_id2 FROM connected);\t----- bird -----\ttoxicology",
    "248": "SELECT a1.element AS atom1, a2.element AS atom2 FROM bond b JOIN connected c ON b.bond_id = c.bond_id JOIN atom a1 ON c.atom_id = a1.atom_id JOIN atom a2 ON c.atom_id2 = a2.atom_id WHERE b.molecule_id = 'TR041' AND b.bond_type = '#';\t----- bird -----\ttoxicology",
    "249": "SELECT a.element FROM atom a JOIN connected c ON a.atom_id = c.atom_id OR a.atom_id = c.atom_id2 WHERE c.bond_id = 'TR144_8_19';\t----- bird -----\ttoxicology",
    "250": "SELECT m.label FROM molecule m JOIN bond b ON m.molecule_id = b.molecule_id WHERE m.label = '+' AND b.bond_type = ' = ' GROUP BY m.molecule_id, m.label ORDER BY COUNT(b.bond_id) DESC LIMIT 1;\t----- bird -----\ttoxicology",
    "251": "SELECT element FROM atom WHERE molecule_id IN (SELECT molecule_id FROM molecule WHERE label = '+') GROUP BY element ORDER BY COUNT(*) ASC LIMIT 1;\t----- bird -----\ttoxicology",
    "252": "SELECT a2.* FROM atom a1 JOIN connected c ON a1.atom_id = c.atom_id JOIN atom a2 ON c.atom_id2 = a2.atom_id WHERE a1.element = 'pb' UNION SELECT a2.* FROM atom a1 JOIN connected c ON a1.atom_id = c.atom_id2 JOIN atom a2 ON c.atom_id = a2.atom_id WHERE a1.element = 'pb';\t----- bird -----\ttoxicology",
    "253": "SELECT DISTINCT a.element FROM atom a JOIN connected c ON a.atom_id = c.atom_id OR a.atom_id = c.atom_id2 JOIN bond b ON c.bond_id = b.bond_id WHERE b.bond_type = '#';\t----- bird -----\ttoxicology",
    "254": "SELECT 100.0 * MAX(bond_count) / total_bonds AS percentage FROM (SELECT bond_id, COUNT(*) AS bond_count FROM connected GROUP BY bond_id) AS bond_counts, (SELECT COUNT(bond_id) AS total_bonds FROM bond) AS total;\t----- bird -----\ttoxicology",
    "255": "SELECT ROUND(100.0 * SUM(CASE WHEN m.label = '+' THEN 1 ELSE 0 END) / COUNT(b.bond_id), 5) AS proportion FROM bond b JOIN molecule m ON b.molecule_id = m.molecule_id WHERE b.bond_type = '-';\t----- bird -----\ttoxicology",
    "256": "SELECT COUNT(*) FROM atom WHERE element IN ('c', 'h');\t----- bird -----\ttoxicology",
    "257": "SELECT atom_id2 FROM connected WHERE atom_id IN (SELECT atom_id FROM atom WHERE element = 's');\t----- bird -----\ttoxicology",
    "258": "SELECT DISTINCT b.bond_type FROM bond b JOIN connected c ON b.bond_id = c.bond_id JOIN atom a ON c.atom_id = a.atom_id WHERE a.element = 'sn' UNION SELECT DISTINCT b.bond_type FROM bond b JOIN connected c ON b.bond_id = c.bond_id JOIN atom a ON c.atom_id2 = a.atom_id WHERE a.element = 'sn';\t----- bird -----\ttoxicology",
    "259": "SELECT COUNT(DISTINCT a.element) FROM atom a JOIN molecule m ON a.molecule_id = m.molecule_id WHERE a.molecule_id IN (SELECT molecule_id FROM bond WHERE bond_type = '-');\t----- bird -----\ttoxicology",
    "260": "SELECT COUNT(DISTINCT a.atom_id) FROM atom a JOIN molecule m ON a.molecule_id = m.molecule_id WHERE a.molecule_id IN (SELECT molecule_id FROM bond WHERE bond_type = '#') AND a.element IN ('p', 'br');\t----- bird -----\ttoxicology",
    "261": "SELECT bond.bond_id FROM bond JOIN molecule ON bond.molecule_id = molecule.molecule_id WHERE molecule.label = '+';\t----- bird -----\ttoxicology",
    "262": "SELECT DISTINCT molecule_id FROM bond WHERE bond_type = '-' AND molecule_id IN (SELECT molecule_id FROM molecule WHERE label = '-');\t----- bird -----\ttoxicology",
    "263": "SELECT m.molecule_id, m.label, 100.0 * SUM(CASE WHEN a.element = 'cl' THEN 1 ELSE 0 END) / COUNT(a.atom_id) AS percent FROM molecule m JOIN atom a ON m.molecule_id = a.molecule_id WHERE m.molecule_id IN (SELECT DISTINCT molecule_id FROM bond WHERE bond_type = '-') GROUP BY m.molecule_id, m.label;\t----- bird -----\ttoxicology",
    "264": "SELECT molecule_id, label FROM molecule WHERE molecule_id IN ('TR000', 'TR001', 'TR002');\t----- bird -----\ttoxicology",
    "265": "SELECT molecule_id FROM molecule WHERE label = '-';\t----- bird -----\ttoxicology",
    "266": "SELECT COUNT(*) FROM molecule WHERE label = '+' AND molecule_id BETWEEN 'TR000' AND 'TR030';\t----- bird -----\ttoxicology",
    "267": "SELECT DISTINCT b.bond_type FROM bond b WHERE b.molecule_id BETWEEN 'TR000' AND 'TR050';\t----- bird -----\ttoxicology",
    "268": "SELECT a.element FROM atom a JOIN connected c ON a.atom_id = c.atom_id OR a.atom_id = c.atom_id2 WHERE c.bond_id = 'TR001_10_11';\t----- bird -----\ttoxicology",
    "269": "SELECT COUNT(DISTINCT c.bond_id) FROM connected c JOIN atom a ON c.atom_id = a.atom_id OR c.atom_id2 = a.atom_id WHERE a.element = 'i';\t----- bird -----\ttoxicology",
    "270": "SELECT label, COUNT(*) AS count FROM molecule WHERE molecule_id IN (SELECT DISTINCT molecule_id FROM atom WHERE element = 'ca') GROUP BY label ORDER BY count DESC LIMIT 1;\t----- bird -----\ttoxicology",
    "271": "SELECT CASE WHEN COUNT(DISTINCT a.element) = 2 AND SUM(CASE WHEN a.element = 'cl' THEN 1 ELSE 0 END) > 0 AND SUM(CASE WHEN a.element = 'c' THEN 1 ELSE 0 END) > 0 THEN 'Yes' ELSE 'No' END AS result FROM connected c JOIN atom a ON c.atom_id = a.atom_id WHERE c.bond_id = 'TR001_1_8';\t----- bird -----\ttoxicology",
    "272": "SELECT DISTINCT m.molecule_id FROM molecule m JOIN atom a ON m.molecule_id = a.molecule_id JOIN connected c ON a.atom_id = c.atom_id JOIN bond b ON c.bond_id = b.bond_id WHERE b.bond_type = '#' AND a.element = 'c' AND m.label = '-' LIMIT 2;\t----- bird -----\ttoxicology",
    "273": "SELECT 100.0 * SUM(CASE WHEN a.element = 'cl' THEN 1 ELSE 0 END) / COUNT(a.atom_id) AS percentage FROM atom a JOIN molecule m ON a.molecule_id = m.molecule_id WHERE m.label = '+';\t----- bird -----\ttoxicology",
    "274": "SELECT DISTINCT element FROM atom WHERE molecule_id = 'TR001';\t----- bird -----\ttoxicology",
    "275": "SELECT DISTINCT molecule_id FROM bond WHERE bond_type = ' = ';\t----- bird -----\ttoxicology",
    "276": "SELECT c.atom_id, c.atom_id2 FROM connected c JOIN bond b ON c.bond_id = b.bond_id WHERE b.bond_type = '#';\t----- bird -----\ttoxicology",
    "277": "SELECT DISTINCT a.element FROM atom a JOIN connected c ON a.atom_id = c.atom_id OR a.atom_id = c.atom_id2 WHERE c.bond_id = 'TR000_1_2';\t----- bird -----\ttoxicology",
    "278": "SELECT COUNT(*) FROM molecule WHERE molecule_id IN (SELECT molecule_id FROM bond WHERE bond_type = '-') AND label = '-';\t----- bird -----\ttoxicology",
    "279": "SELECT m.label FROM molecule m JOIN bond b ON m.molecule_id = b.molecule_id WHERE b.bond_id = 'TR001_10_11';\t----- bird -----\ttoxicology",
    "280": "SELECT b.bond_id, m.label FROM bond b JOIN molecule m ON b.molecule_id = m.molecule_id WHERE b.bond_type = '#';\t----- bird -----\ttoxicology",
    "281": "SELECT a.element, COUNT(*) AS tally FROM atom a JOIN molecule m ON a.molecule_id = m.molecule_id WHERE m.label = '+' AND SUBSTR(a.atom_id, 7, 1) = '4' GROUP BY a.element;\t----- bird -----\ttoxicology",
    "282": "SELECT (SUM(CASE WHEN element = 'h' THEN 1 ELSE 0 END) * 1.0 / COUNT(*)) AS ratio, m.label FROM atom a JOIN molecule m ON a.molecule_id = m.molecule_id WHERE a.molecule_id = 'TR006' GROUP BY m.label;\t----- bird -----\ttoxicology",
    "283": "SELECT m.label FROM molecule m JOIN atom a ON m.molecule_id = a.molecule_id WHERE a.element = 'ca' LIMIT 1;\t----- bird -----\ttoxicology",
    "284": "SELECT DISTINCT b.bond_type FROM bond b JOIN connected c ON b.bond_id = c.bond_id JOIN atom a ON (c.atom_id = a.atom_id OR c.atom_id2 = a.atom_id) WHERE a.element = 'c';\t----- bird -----\ttoxicology",
    "285": "SELECT a1.element AS element1, a2.element AS element2 FROM connected c JOIN atom a1 ON c.atom_id = a1.atom_id JOIN atom a2 ON c.atom_id2 = a2.atom_id WHERE c.bond_id = 'TR001_10_11';\t----- bird -----\ttoxicology",
    "286": "SELECT 100.0 * COUNT(DISTINCT molecule_id) FILTER (WHERE molecule_id IN (SELECT molecule_id FROM bond WHERE bond_type = '#')) / COUNT(DISTINCT molecule_id) AS percent_triple_bond_compounds FROM molecule;\t----- bird -----\ttoxicology",
    "287": "SELECT 100.0 * SUM(CASE WHEN bond_type = ' = ' THEN 1 ELSE 0 END) / COUNT(bond_id) AS percent FROM bond WHERE molecule_id = 'TR047';\t----- bird -----\ttoxicology",
    "288": "SELECT CASE WHEN m.label = '+' THEN 'Yes' ELSE 'No' END AS is_carcinogenic FROM molecule m JOIN atom a ON m.molecule_id = a.molecule_id WHERE a.atom_id = 'TR001_1';\t----- bird -----\ttoxicology",
    "289": "SELECT label = '+' AS is_carcinogenic FROM molecule WHERE label = 'TR151';\t----- bird -----\ttoxicology",
    "290": "SELECT DISTINCT a.element FROM atom a JOIN molecule m ON a.molecule_id = m.molecule_id WHERE m.label = 'TR151' AND a.element IN ('cl', 'br', 'f', 'i', 'pb', 'te', 'sn');\t----- bird -----\ttoxicology",
    "291": "SELECT COUNT(*) FROM molecule WHERE label = '+';\t----- bird -----\ttoxicology",
    "292": "SELECT atom_id FROM atom WHERE element = 'c' AND CAST(SUBSTR(molecule_id, 3, 3) AS UNSIGNED) BETWEEN 10 AND 50;\t----- bird -----\ttoxicology",
    "293": "SELECT COUNT(*) FROM atom WHERE molecule_id IN (SELECT molecule_id FROM molecule WHERE label = '+');\t----- bird -----\ttoxicology",
    "294": "SELECT b.bond_id FROM bond b JOIN molecule m ON b.molecule_id = m.molecule_id WHERE b.bond_type = ' = ' AND m.label = '+';\t----- bird -----\ttoxicology",
    "295": "SELECT COUNT(*) FROM atom WHERE molecule_id IN (SELECT molecule_id FROM molecule WHERE label = '+') AND element = 'h';\t----- bird -----\ttoxicology",
    "296": "SELECT b.molecule_id FROM bond b JOIN connected c ON b.bond_id = c.bond_id JOIN atom a ON c.atom_id = a.atom_id WHERE b.bond_type = 'TR000_1_2' AND a.element = 'TR000_1' LIMIT 1;\t----- bird -----\ttoxicology",
    "297": "SELECT atom_id FROM atom WHERE element = 'c' AND molecule_id IN (SELECT molecule_id FROM molecule WHERE label = '-');\t----- bird -----\ttoxicology",
    "298": "SELECT (COUNT(DISTINCT a.molecule_id) * 100.0) / (SELECT COUNT(*) FROM molecule WHERE label = '+') AS percentage FROM atom a JOIN molecule m ON a.molecule_id = m.molecule_id WHERE m.label = '+' AND a.element = 'h';\t----- bird -----\ttoxicology",
    "299": "SELECT label = '+' AS is_carcinogenic FROM molecule WHERE label = 'TR124';\t----- bird -----\ttoxicology",
    "300": "SELECT atom_id, element FROM atom WHERE molecule_id = 'TR186';\t----- bird -----\ttoxicology",
    "301": "SELECT b.bond_type FROM bond b JOIN molecule m ON b.molecule_id = m.molecule_id WHERE m.label = 'TR007_4_19';\t----- bird -----\ttoxicology",
    "302": "SELECT DISTINCT a.element FROM atom a JOIN connected c ON a.atom_id = c.atom_id OR a.atom_id = c.atom_id2 JOIN bond b ON c.bond_id = b.bond_id WHERE b.bond_type = 'TR001_2_4';\t----- bird -----\ttoxicology",
    "303": "SELECT COUNT(b.bond_id) AS double_bond_count, m.label AS carcinogenic_status FROM molecule m JOIN bond b ON m.molecule_id = b.molecule_id WHERE m.label = 'TR006' AND b.bond_type = ' = ' GROUP BY m.label;\t----- bird -----\ttoxicology",
    "304": "SELECT DISTINCT m.molecule_id, m.label, a.element FROM molecule m JOIN atom a ON m.molecule_id = a.molecule_id WHERE m.label = '+';\t----- bird -----\ttoxicology",
    "305": "SELECT b.bond_id, b.bond_type, a1.atom_id AS atom1_id, a1.element AS atom1_element, a2.atom_id AS atom2_id, a2.element AS atom2_element, b.molecule_id FROM bond b JOIN connected c ON b.bond_id = c.bond_id JOIN atom a1 ON c.atom_id = a1.atom_id JOIN atom a2 ON c.atom_id2 = a2.atom_id WHERE b.bond_type = '-';\t----- bird -----\ttoxicology",
    "306": "SELECT DISTINCT m.molecule_id, m.label, a.element FROM molecule m JOIN bond b ON m.molecule_id = b.molecule_id JOIN connected c ON b.bond_id = c.bond_id JOIN atom a ON (c.atom_id = a.atom_id OR c.atom_id2 = a.atom_id) WHERE b.bond_type = '#' ORDER BY m.molecule_id, a.element;\t----- bird -----\ttoxicology",
    "307": "SELECT DISTINCT a.element FROM atom a JOIN connected c ON a.atom_id = c.atom_id OR a.atom_id = c.atom_id2 WHERE c.bond_id = 'TR000_2_3';\t----- bird -----\ttoxicology",
    "308": "SELECT COUNT(DISTINCT c.bond_id) FROM connected c JOIN atom a1 ON c.atom_id = a1.atom_id JOIN atom a2 ON c.atom_id2 = a2.atom_id WHERE a1.element = 'cl' OR a2.element = 'cl';\t----- bird -----\ttoxicology",
    "309": "SELECT a.atom_id, (SELECT COUNT(DISTINCT bond_type) FROM bond WHERE molecule_id = m.molecule_id) AS bond_type_count FROM atom a JOIN molecule m ON a.molecule_id = m.molecule_id WHERE m.label = 'TR346';\t----- bird -----\ttoxicology",
    "310": "SELECT COUNT(DISTINCT b.molecule_id) AS total_double_bond_molecules, COUNT(DISTINCT CASE WHEN m.label = '+' THEN b.molecule_id END) AS carcinogenic_double_bond_molecules FROM bond b JOIN molecule m ON b.molecule_id = m.molecule_id WHERE b.bond_type = ' = ';\t----- bird -----\ttoxicology",
    "311": "SELECT COUNT(*) FROM molecule m WHERE m.molecule_id NOT IN (SELECT DISTINCT a.molecule_id FROM atom a WHERE a.element = 's') AND m.molecule_id NOT IN (SELECT DISTINCT b.molecule_id FROM bond b WHERE b.bond_type = ' = ');\t----- bird -----\ttoxicology",
    "312": "SELECT m.label FROM bond b JOIN molecule m ON b.molecule_id = m.molecule_id WHERE b.bond_id = 'TR001_2_4';\t----- bird -----\ttoxicology",
    "313": "SELECT COUNT(*) FROM atom WHERE molecule_id = 'TR001';\t----- bird -----\ttoxicology",
    "314": "SELECT COUNT(*) FROM bond WHERE bond_type = '-';\t----- bird -----\ttoxicology",
    "315": "SELECT DISTINCT m.molecule_id, m.label FROM molecule m JOIN atom a ON m.molecule_id = a.molecule_id WHERE a.element = 'cl' AND m.label = '+';\t----- bird -----\ttoxicology",
    "316": "SELECT DISTINCT m.molecule_id, m.label FROM molecule m JOIN atom a ON m.molecule_id = a.molecule_id WHERE a.element = 'c' AND m.label = '-';\t----- bird -----\ttoxicology",
    "317": "SELECT 100.0 * COUNT(DISTINCT m.molecule_id) / (SELECT COUNT(*) FROM molecule WHERE label = '+') AS percentage FROM molecule m JOIN atom a ON m.molecule_id = a.molecule_id WHERE m.label = '+' AND a.element = 'cl';\t----- bird -----\ttoxicology",
    "318": "SELECT molecule_id FROM bond WHERE bond_id = 'TR001_1_7';\t----- bird -----\ttoxicology",
    "319": "SELECT COUNT(DISTINCT a.element) FROM connected c JOIN atom a ON (c.atom_id = a.atom_id OR c.atom_id2 = a.atom_id) WHERE c.bond_id = 'TR001_3_4';\t----- bird -----\ttoxicology",
    "320": "SELECT b.bond_type FROM bond b JOIN connected c ON b.bond_id = c.bond_id JOIN atom a1 ON c.atom_id = a1.atom_id JOIN atom a2 ON c.atom_id2 = a2.atom_id WHERE a1.element = 'TR000_1' AND a2.element = 'TR000_2' OR a1.element = 'TR000_2' AND a2.element = 'TR000_1';\t----- bird -----\ttoxicology",
    "321": "SELECT m.* FROM molecule m JOIN atom a1 ON m.molecule_id = a1.molecule_id JOIN atom a2 ON m.molecule_id = a2.molecule_id WHERE a1.atom_id = 'TR000_2' AND a2.atom_id = 'TR000_4';\t----- bird -----\ttoxicology",
    "322": "SELECT element FROM atom WHERE atom_id = 'TR000_1';\t----- bird -----\ttoxicology",
    "323": "SELECT label FROM molecule WHERE molecule_id = 'TR000';\t----- bird -----\ttoxicology",
    "324": "SELECT 100.0 * COUNT(DISTINCT c.atom_id) / (SELECT COUNT(*) FROM atom) AS percentage FROM connected c JOIN bond b ON c.bond_id = b.bond_id WHERE b.bond_type = '-';\t----- bird -----\ttoxicology",
    "325": "SELECT COUNT(DISTINCT m.molecule_id) FROM molecule m JOIN atom a ON m.molecule_id = a.molecule_id WHERE m.label = '+' AND a.element = 'n';\t----- bird -----\ttoxicology",
    "326": "SELECT DISTINCT m.label FROM molecule m JOIN atom a ON m.molecule_id = a.molecule_id JOIN connected c ON a.atom_id = c.atom_id JOIN bond b ON c.bond_id = b.bond_id WHERE a.element = 's' AND b.bond_type = ' = ';\t----- bird -----\ttoxicology",
    "327": "SELECT m.molecule_id, m.label FROM molecule m JOIN atom a ON m.molecule_id = a.molecule_id WHERE m.label = '-' GROUP BY m.molecule_id, m.label HAVING COUNT(a.atom_id) > 5;\t----- bird -----\ttoxicology",
    "328": "SELECT DISTINCT a.element FROM atom a JOIN connected c ON a.atom_id = c.atom_id OR a.atom_id = c.atom_id2 JOIN bond b ON c.bond_id = b.bond_id JOIN molecule m ON a.molecule_id = m.molecule_id WHERE b.bond_type = '=' AND m.label = 'TR024';\t----- bird -----\ttoxicology",
    "329": "SELECT m.label, COUNT(a.atom_id) AS atom_count FROM molecule m JOIN atom a ON m.molecule_id = a.molecule_id WHERE m.label = '+' GROUP BY m.molecule_id, m.label ORDER BY atom_count DESC LIMIT 1;\t----- bird -----\ttoxicology",
    "330": "SELECT (COUNT(DISTINCT m.molecule_id) * 100.0 / (SELECT COUNT(*) FROM molecule)) AS percentage FROM molecule m JOIN atom a ON m.molecule_id = a.molecule_id JOIN connected c ON a.atom_id = c.atom_id JOIN bond b ON c.bond_id = b.bond_id WHERE a.element = 'h' AND b.bond_type = '#' AND m.label = '+';\t----- bird -----\ttoxicology",
    "331": "SELECT COUNT(*) FROM molecule WHERE label = '+';\t----- bird -----\ttoxicology",
    "332": "SELECT COUNT(DISTINCT molecule_id) FROM bond WHERE bond_type = '-' AND molecule_id BETWEEN 'TR004' AND 'TR010';\t----- bird -----\ttoxicology",
    "333": "SELECT COUNT(*) FROM atom WHERE molecule_id = (SELECT molecule_id FROM molecule WHERE label = 'TR008') AND element = 'c';\t----- bird -----\ttoxicology",
    "334": "SELECT element FROM atom WHERE atom_id = 'TR004_7' AND molecule_id IN (SELECT molecule_id FROM molecule WHERE label = '-');\t----- bird -----\ttoxicology",
    "335": "SELECT COUNT(DISTINCT m.molecule_id) FROM molecule m JOIN bond b ON m.molecule_id = b.molecule_id JOIN connected c ON b.bond_id = c.bond_id JOIN atom a ON c.atom_id = a.atom_id WHERE b.bond_type = '=' AND a.element = 'o' OR b.bond_type = '=' AND a.element = 'o';\t----- bird -----\ttoxicology",
    "336": "SELECT COUNT(DISTINCT m.molecule_id) FROM molecule m JOIN bond b ON m.molecule_id = b.molecule_id WHERE b.bond_type = '#' AND m.label = '-';\t----- bird -----\ttoxicology",
    "337": "SELECT DISTINCT a.element, b.bond_type FROM atom a JOIN connected c ON a.atom_id = c.atom_id JOIN bond b ON c.bond_id = b.bond_id WHERE a.molecule_id = 'TR002';\t----- bird -----\ttoxicology",
    "338": "SELECT DISTINCT a.atom_id FROM atom a JOIN connected c ON a.atom_id = c.atom_id JOIN bond b ON c.bond_id = b.bond_id JOIN molecule m ON a.molecule_id = m.molecule_id WHERE a.element = 'c' AND b.bond_type = '=' AND m.label = 'TR012';\t----- bird -----\ttoxicology",
    "339": "SELECT DISTINCT a.atom_id FROM atom a JOIN molecule m ON a.molecule_id = m.molecule_id WHERE m.label = '+' AND a.element = 'o';\t----- bird -----\ttoxicology",
    "340": "SELECT * FROM cards WHERE cardKingdomFoilId IS NOT NULL AND cardKingdomId IS NOT NULL;\t----- bird -----\tcard_games",
    "341": "SELECT * FROM cards WHERE borderColor = 'borderless' AND (cardKingdomId IS NULL OR cardKingdomFoilId IS NULL);\t----- bird -----\tcard_games",
    "342": "SELECT name FROM cards WHERE convertedManaCost < faceConvertedManaCost;\t----- bird -----\tcard_games",
    "343": "SELECT name FROM cards WHERE frameVersion = 2015 AND edhrecRank < 100;\t----- bird -----\tcard_games",
    "344": "SELECT c.* FROM cards c JOIN legalities l ON c.uuid = l.uuid WHERE c.rarity = 'mythic' AND l.format = 'gladiator' AND l.status = 'Banned';\t----- bird -----\tcard_games",
    "345": "SELECT c.name, l.status FROM cards c JOIN legalities l ON c.uuid = l.uuid WHERE c.types = 'Artifact' AND c.side IS NULL AND l.format = 'vintage';\t----- bird -----\tcard_games",
    "346": "SELECT c.id, c.artist FROM cards c JOIN legalities l ON c.uuid = l.uuid WHERE (c.power = '*' OR c.power IS NULL) AND l.format = 'commander' AND l.status = 'Legal';\t----- bird -----\tcard_games",
    "347": "SELECT c.id, r.text AS ruling_text, c.hasContentWarning FROM cards c LEFT JOIN rulings r ON c.uuid = r.uuid WHERE c.artist = 'Stephen Daniele';\t----- bird -----\tcard_games",
    "348": "SELECT rulings.* FROM rulings JOIN cards ON rulings.uuid = cards.uuid WHERE cards.name = 'Sublime Epiphany' AND cards.number = '74s';\t----- bird -----\tcard_games",
    "349": "SELECT c.name, c.artist, c.isPromo FROM cards c JOIN rulings r ON c.uuid = r.uuid GROUP BY c.uuid, c.name, c.artist, c.isPromo ORDER BY COUNT(r.uuid) DESC LIMIT 1;\t----- bird -----\tcard_games",
    "350": "SELECT DISTINCT language FROM foreign_data WHERE name = 'Annul' AND multiverseid IN (SELECT multiverseId FROM cards WHERE name = 'Annul' AND number = '29');\t----- bird -----\tcard_games",
    "351": "SELECT DISTINCT c.name FROM cards c JOIN foreign_data f ON c.uuid = f.uuid WHERE f.language = 'Japanese';\t----- bird -----\tcard_games",
    "352": "SELECT (COUNT(CASE WHEN language = 'Chinese Simplified' THEN 1 END) * 100.0) / COUNT(*) AS percentage FROM foreign_data;\t----- bird -----\tcard_games",
    "353": "SELECT s.name, s.totalSetSize FROM sets s JOIN set_translations st ON s.code = st.setCode WHERE st.language = 'Italian';\t----- bird -----\tcard_games",
    "354": "SELECT COUNT(DISTINCT type) FROM cards WHERE artist = 'Aaron Boyd';\t----- bird -----\tcard_games",
    "355": "SELECT keywords FROM cards WHERE name = 'Angel of Mercy';\t----- bird -----\tcard_games",
    "356": "SELECT COUNT(*) FROM cards WHERE power = '*';\t----- bird -----\tcard_games",
    "357": "SELECT promoTypes FROM cards WHERE name = 'Duress';\t----- bird -----\tcard_games",
    "358": "SELECT borderColor FROM cards WHERE name = 'Ancestor''s Chosen';\t----- bird -----\tcard_games",
    "359": "SELECT originalType FROM cards WHERE name = 'Ancestor''s Chosen';\t----- bird -----\tcard_games",
    "360": "SELECT DISTINCT st.language FROM set_translations st JOIN sets s ON st.setCode = s.code JOIN cards c ON c.setCode = s.code WHERE c.name = 'Angel of Mercy';\t----- bird -----\tcard_games",
    "361": "SELECT COUNT(DISTINCT c.id) FROM cards c JOIN legalities l ON c.uuid = l.uuid WHERE l.status = 'restricted' AND c.isTextless = 0;\t----- bird -----\tcard_games",
    "362": "SELECT r.text FROM rulings r JOIN cards c ON r.uuid = c.uuid WHERE c.name = 'Condemn';\t----- bird -----\tcard_games",
    "363": "SELECT COUNT(DISTINCT c.id) FROM cards c JOIN legalities l ON c.uuid = l.uuid WHERE l.status = 'restricted' AND c.isStarter = 1;\t----- bird -----\tcard_games",
    "364": "SELECT legalities.status FROM legalities JOIN cards ON legalities.uuid = cards.uuid WHERE cards.name = 'Cloudchaser Eagle';\t----- bird -----\tcard_games",
    "365": "SELECT type FROM cards WHERE name = 'Benalish Knight';\t----- bird -----\tcard_games",
    "366": "SELECT r.text FROM rulings r JOIN cards c ON r.uuid = c.uuid WHERE c.name = 'Benalish Knight' ORDER BY r.date;\t----- bird -----\tcard_games",
    "367": "SELECT DISTINCT artist FROM cards WHERE asciiName IN (SELECT name FROM foreign_data WHERE language = 'Phyrexian');\t----- bird -----\tcard_games",
    "368": "SELECT (COUNT(CASE WHEN borderColor = 'borderless' THEN 1 END) * 100.0) / COUNT(id) AS percentage_borderless FROM cards;\t----- bird -----\tcard_games",
    "369": "SELECT COUNT(DISTINCT c.id) FROM cards c JOIN foreign_data f ON c.uuid = f.uuid WHERE f.language = 'German' AND c.isReprint = 1;\t----- bird -----\tcard_games",
    "370": "SELECT COUNT(DISTINCT c.id) FROM cards c JOIN foreign_data f ON c.uuid = f.uuid WHERE c.borderColor = 'borderless' AND f.language = 'Russian';\t----- bird -----\tcard_games",
    "371": "SELECT (COUNT(CASE WHEN language = 'French' THEN 1 END) * 100.0) / COUNT(*) AS percentage FROM cards WHERE isStorySpotlight = 1;\t----- bird -----\tcard_games",
    "372": "SELECT COUNT(*) FROM cards WHERE toughness = '99';\t----- bird -----\tcard_games",
    "373": "SELECT name FROM cards WHERE artist = 'Aaron Boyd';\t----- bird -----\tcard_games",
    "374": "SELECT COUNT(*) FROM cards WHERE borderColor = 'black' AND availability = 'mtgo';\t----- bird -----\tcard_games",
    "375": "SELECT id FROM cards WHERE convertedManaCost = 0;\t----- bird -----\tcard_games",
    "376": "SELECT layout FROM cards WHERE keywords LIKE '%flying%';\t----- bird -----\tcard_games",
    "377": "SELECT COUNT(*) FROM cards WHERE originalType = 'Summon - Angel' AND (subtypes IS NULL OR subtypes NOT LIKE '%Angel%');\t----- bird -----\tcard_games",
    "378": "SELECT id FROM cards WHERE cardKingdomFoilId IS NOT NULL AND cardKingdomId IS NOT NULL AND hasFoil = TRUE AND hasNonFoil = TRUE;\t----- bird -----\tcard_games",
    "379": "SELECT id FROM cards WHERE duelDeck = 'a';\t----- bird -----\tcard_games",
    "380": "SELECT edhrecRank FROM cards WHERE frameVersion = 2015;\t----- bird -----\tcard_games",
    "381": "SELECT DISTINCT cards.artist FROM cards JOIN foreign_data ON cards.uuid = foreign_data.uuid WHERE foreign_data.language = 'Chinese Simplified' AND cards.artist IS NOT NULL;\t----- bird -----\tcard_games",
    "382": "SELECT c.* FROM cards c JOIN foreign_data f ON c.uuid = f.uuid WHERE c.availability = 'paper' AND f.language = 'Japanese' AND NOT EXISTS (SELECT 1 FROM cards c2 WHERE c2.uuid = c.uuid AND c2.availability <> 'paper') AND NOT EXISTS (SELECT 1 FROM foreign_data f2 WHERE f2.uuid = c.uuid AND f2.language <> 'Japanese');\t----- bird -----\tcard_games",
    "383": "SELECT COUNT(*) FROM cards c JOIN legalities l ON c.uuid = l.uuid WHERE l.status = 'Banned' AND c.borderColor = 'white';\t----- bird -----\tcard_games",
    "384": "SELECT DISTINCT c.uuid, fd.language FROM cards c JOIN legalities l ON c.uuid = l.uuid JOIN foreign_data fd ON c.uuid = fd.uuid WHERE l.format = 'legacy';\t----- bird -----\tcard_games",
    "385": "SELECT rulings.text FROM rulings JOIN cards ON rulings.uuid = cards.uuid WHERE cards.name = 'Beacon of Immortality';\t----- bird -----\tcard_games",
    "386": "SELECT c.frameVersion, l.status, COUNT(*) AS card_count FROM cards c LEFT JOIN legalities l ON c.uuid = l.uuid WHERE c.frameVersion = 'future' GROUP BY c.frameVersion, l.status;\t----- bird -----\tcard_games",
    "387": "SELECT name, colors FROM cards WHERE setCode = 'OGW';\t----- bird -----\tcard_games",
    "388": "SELECT c.name, st.language, st.translation FROM cards c JOIN set_translations st ON c.setCode = st.setCode WHERE c.setCode = '10E' AND c.convertedManaCost = 5 AND st.translation IS NOT NULL;\t----- bird -----\tcard_games",
    "389": "SELECT c.name, r.date FROM cards c JOIN rulings r ON c.uuid = r.uuid WHERE c.originalType = 'Creature - Elf';\t----- bird -----\tcard_games",
    "390": "SELECT cards.id, cards.colors, legalities.format FROM cards LEFT JOIN legalities ON cards.uuid = legalities.uuid WHERE cards.id BETWEEN 1 AND 20;\t----- bird -----\tcard_games",
    "391": "SELECT DISTINCT c.* FROM cards c JOIN foreign_data f ON c.uuid = f.uuid WHERE c.originalType = 'Artifact' AND c.colors LIKE '%B%' AND f.language <> 'English';\t----- bird -----\tcard_games",
    "392": "SELECT c.name FROM cards c JOIN rulings r ON c.uuid = r.uuid WHERE c.rarity = 'uncommon' ORDER BY r.date ASC LIMIT 3;\t----- bird -----\tcard_games",
    "393": "SELECT COUNT(*) FROM cards WHERE artist = 'John Avon' AND cardKingdomFoilId IS NOT NULL AND cardKingdomId IS NOT NULL AND cardKingdomFoilId NOT IN (SELECT cardKingdomFoilId FROM cards WHERE artist = 'John Avon' AND cardKingdomFoilId IS NOT NULL AND convertedManaCost > 4);\t----- bird -----\tcard_games",
    "394": "SELECT COUNT(*) FROM cards WHERE borderColor = 'white' AND cardKingdomFoilId IS NOT NULL AND cardKingdomId IS NOT NULL;\t----- bird -----\tcard_games",
    "395": "SELECT COUNT(*) FROM cards WHERE artist = 'UDON' AND availability = 'mtgo' AND hand = -1;\t----- bird -----\tcard_games",
    "396": "SELECT COUNT(*) FROM cards WHERE frameVersion = '1993' AND availability = 'paper' AND hasContentWarning = 1;\t----- bird -----\tcard_games",
    "397": "SELECT manaCost FROM cards WHERE layout = 'normal' AND frameVersion = 2003 AND borderColor = 'black' AND availability = 'mtgo,paper';\t----- bird -----\tcard_games",
    "398": "SELECT SUM(convertedManaCost) FROM cards WHERE artist = 'Rob Alexander';\t----- bird -----\tcard_games",
    "399": "SELECT DISTINCT types FROM cards WHERE availability = 'arena' AND types IS NOT NULL;\t----- bird -----\tcard_games",
    "400": "SELECT DISTINCT cards.setCode FROM cards JOIN foreign_data ON cards.uuid = foreign_data.uuid WHERE foreign_data.language = 'Spanish';\t----- bird -----\tcard_games",
    "401": "SELECT 100.0 * COUNT(CASE WHEN isOnlineOnly = 1 THEN 1 END) / COUNT(*) AS percentage FROM cards WHERE frameEffects = 'legendary';\t----- bird -----\tcard_games",
    "402": "SELECT id FROM cards WHERE isStorySpotlight = 1 AND isTextless = 0; SELECT (COUNT(CASE WHEN isStorySpotlight = 1 AND isTextless = 0 THEN 1 END) * 100.0) / COUNT(*) AS percentage_story_spotlight_no_textbox FROM cards;\t----- bird -----\tcard_games",
    "403": "SELECT name, (COUNT(CASE WHEN language = 'Spanish' THEN 1 END) * 100.0 / COUNT(*)) AS percentage_spanish FROM foreign_data GROUP BY name;\t----- bird -----\tcard_games",
    "404": "SELECT DISTINCT language FROM set_translations WHERE setCode IN (SELECT code FROM sets WHERE baseSetSize = 309);\t----- bird -----\tcard_games",
    "405": "SELECT COUNT(*) FROM sets s JOIN set_translations st ON s.code = st.setCode WHERE s.block = 'Commander' AND st.language = 'Portuguese (Brasil)';\t----- bird -----\tcard_games",
    "406": "SELECT cards.id FROM cards JOIN legalities ON cards.uuid = legalities.uuid WHERE cards.types = 'Creature' AND legalities.status = 'legal';\t----- bird -----\tcard_games",
    "407": "SELECT DISTINCT cards.types FROM cards JOIN foreign_data ON cards.uuid = foreign_data.uuid WHERE foreign_data.language = 'German' AND cards.subtypes IS NOT NULL AND cards.supertypes IS NOT NULL;\t----- bird -----\tcard_games",
    "408": "SELECT COUNT(*) FROM cards WHERE (power IS NULL OR power = '*') AND text LIKE '%triggered ability%';\t----- bird -----\tcard_games",
    "409": "SELECT COUNT(DISTINCT c.id) FROM cards c JOIN legalities l ON c.uuid = l.uuid JOIN rulings r ON c.uuid = r.uuid WHERE l.format = 'premodern' AND r.text = 'This is a triggered mana ability.' AND c.side IS NULL;\t----- bird -----\tcard_games",
    "410": "SELECT c.id FROM cards c JOIN legalities l ON c.uuid = l.uuid WHERE c.artist = 'Erica Yang' AND l.format = 'pauper' AND l.status = 'legal' AND c.availability = 'paper' LIMIT 1;\t----- bird -----\tcard_games",
    "411": "SELECT artist FROM cards WHERE text = 'Das perfekte Gegenmittel zu einer dichten Formation';\t----- bird -----\tcard_games",
    "412": "SELECT fd.name FROM cards c JOIN foreign_data fd ON c.uuid = fd.uuid WHERE fd.language = 'French' AND c.type LIKE '%Creature%' AND c.layout = 'normal' AND c.borderColor = 'black' AND c.artist = 'Matthew D. Wilson' LIMIT 1;\t----- bird -----\tcard_games",
    "413": "SELECT COUNT(DISTINCT c.id) FROM cards c JOIN rulings r ON c.uuid = r.uuid WHERE c.rarity = 'rare' AND r.date = '2007-02-01' AND r.text IS NOT NULL;\t----- bird -----\tcard_games",
    "414": "SELECT DISTINCT st.language FROM sets s JOIN set_translations st ON s.code = st.setCode WHERE s.baseSetSize = 180 AND s.block = 'Ravnica';\t----- bird -----\tcard_games",
    "415": "SELECT (COUNT(CASE WHEN c.hasContentWarning = 0 THEN 1 END) * 100.0) / COUNT(*) AS percentage_no_content_warning FROM cards c JOIN legalities l ON c.uuid = l.uuid WHERE l.format = 'commander' AND l.status = 'legal';\t----- bird -----\tcard_games",
    "416": "SELECT 100.0 * SUM(CASE WHEN language = 'French' THEN 1 ELSE 0 END) / COUNT(*) AS percentage FROM foreign_data WHERE power IS NULL OR power = '*';\t----- bird -----\tcard_games",
    "417": "SELECT (COUNT(DISTINCT CASE WHEN s.type = 'expansion' THEN st.setCode END) * 100.0 / COUNT(DISTINCT st.setCode)) AS percentage FROM set_translations st JOIN sets s ON st.setCode = s.code WHERE st.language = 'Japanese';\t----- bird -----\tcard_games",
    "418": "SELECT DISTINCT availability FROM cards WHERE artist = 'Daren Bader';\t----- bird -----\tcard_games",
    "419": "SELECT COUNT(*) FROM cards WHERE borderColor = 'borderless' AND colors IS NOT NULL AND colors <> '' AND edhrecRank > 12000;\t----- bird -----\tcard_games",
    "420": "SELECT COUNT(*) FROM cards WHERE isOversized = 1 AND isReprint = 1 AND isPromo = 1;\t----- bird -----\tcard_games",
    "421": "SELECT name FROM cards WHERE (power IS NULL OR power = '*') AND promoTypes = 'arenaleague' ORDER BY name ASC LIMIT 3;\t----- bird -----\tcard_games",
    "422": "SELECT language FROM foreign_data WHERE multiverseid = 149934;\t----- bird -----\tcard_games",
    "423": "SELECT cardKingdomFoilId, cardKingdomId FROM cards WHERE cardKingdomFoilId IS NOT NULL AND cardKingdomId IS NOT NULL ORDER BY cardKingdomFoilId ASC LIMIT 3;\t----- bird -----\tcard_games",
    "424": "SELECT (COUNT(CASE WHEN isTextless = 1 AND layout = 'normal' THEN 1 END) * 100.0) / COUNT(*) AS proportion FROM cards;\t----- bird -----\tcard_games",
    "425": "SELECT number FROM cards WHERE otherFaceIds IS NULL AND subtypes LIKE '%Angel%' AND subtypes LIKE '%Wizard%';\t----- bird -----\tcard_games",
    "426": "SELECT code, name FROM sets WHERE mtgoCode IS NULL OR mtgoCode = '' ORDER BY name ASC LIMIT 3;\t----- bird -----\tcard_games",
    "427": "SELECT DISTINCT language FROM set_translations WHERE setCode = 'ARC' AND setCode IN (SELECT code FROM sets WHERE mcmName = 'Archenemy');\t----- bird -----\tcard_games",
    "428": "SELECT sets.name, set_translations.translation FROM sets LEFT JOIN set_translations ON sets.code = set_translations.setCode WHERE sets.id = 5;\t----- bird -----\tcard_games",
    "429": "SELECT st.language, s.type FROM set_translations st JOIN sets s ON st.setCode = s.code WHERE s.id = 206;\t----- bird -----\tcard_games",
    "430": "SELECT DISTINCT s.id, s.name FROM sets s JOIN cards c ON s.code = c.setCode JOIN foreign_data f ON c.uuid = f.uuid WHERE f.language = 'Italian' AND s.block = 'Shadowmoor' ORDER BY s.name ASC LIMIT 2;\t----- bird -----\tcard_games",
    "431": "SELECT s.id FROM sets s JOIN cards c ON s.code = c.setCode JOIN foreign_data f ON c.uuid = f.uuid WHERE s.isForeignOnly = 0 AND s.isFoilOnly = 1 AND f.language = 'Japanese' GROUP BY s.id;\t----- bird -----\tcard_games",
    "432": "SELECT s.name FROM sets s JOIN set_translations st ON s.code = st.setCode WHERE st.language = 'Russian' AND s.baseSetSize = (SELECT MAX(baseSetSize) FROM sets);\t----- bird -----\tcard_games",
    "433": "SELECT (COUNT(CASE WHEN c.isOnlineOnly = 1 THEN 1 END) * 100.0) / COUNT(*) AS percentage FROM cards c JOIN foreign_data f ON c.uuid = f.uuid WHERE f.language = 'Chinese Simplified';\t----- bird -----\tcard_games",
    "434": "SELECT COUNT(DISTINCT s.code) FROM sets s JOIN set_translations st ON s.code = st.setCode WHERE st.language = 'Japanese' AND (s.mtgoCode IS NULL OR s.mtgoCode = '') AND NOT EXISTS (SELECT 1 FROM set_translations st2 WHERE st2.setCode = s.code AND st2.language <> 'Japanese');\t----- bird -----\tcard_games",
    "435": "SELECT id FROM cards WHERE borderColor = 'black';\t----- bird -----\tcard_games",
    "436": "SELECT COUNT(*) AS count, GROUP_CONCAT(id) AS ids FROM cards WHERE frameEffects = 'extendedart';\t----- bird -----\tcard_games",
    "437": "SELECT name FROM cards WHERE borderColor = 'black' AND isFullArt = 1;\t----- bird -----\tcard_games",
    "438": "SELECT language FROM set_translations WHERE setCode = (SELECT code FROM sets WHERE id = '174');\t----- bird -----\tcard_games",
    "439": "SELECT name FROM sets WHERE code = 'ALL';\t----- bird -----\tcard_games",
    "440": "SELECT DISTINCT language FROM foreign_data WHERE name = 'A Pedra Fellwar';\t----- bird -----\tcard_games",
    "441": "SELECT code FROM sets WHERE releaseDate = '2007-07-13' LIMIT 1;\t----- bird -----\tcard_games",
    "442": "SELECT baseSetSize, code FROM sets WHERE block IN ('Masques', 'Mirage');\t----- bird -----\tcard_games",
    "443": "SELECT code FROM sets WHERE type = 'expansion';\t----- bird -----\tcard_games",
    "444": "SELECT foreign_data.name, cards.type FROM cards JOIN foreign_data ON cards.uuid = foreign_data.uuid WHERE cards.watermark = 'boros';\t----- bird -----\tcard_games",
    "445": "SELECT foreign_data.language, foreign_data.flavorText, cards.type FROM cards JOIN foreign_data ON cards.uuid = foreign_data.uuid WHERE cards.watermark = 'colorpie';\t----- bird -----\tcard_games",
    "446": "SELECT (COUNT(CASE WHEN convertedManaCost = 10 THEN 1 END) * 100.0) / COUNT(*) AS percentage FROM cards WHERE setCode = (SELECT code FROM sets WHERE name = 'Abyssal Horror');\t----- bird -----\tcard_games",
    "447": "SELECT code FROM sets WHERE type = 'expansion commander' OR type LIKE '%expansion commander%' OR LOWER(type) LIKE '%expansion commander%' OR type LIKE '%commander%' OR LOWER(type) LIKE '%commander%' OR type LIKE '%expansion%' OR LOWER(type) LIKE '%expansion%' OR type = 'commander' OR type = 'expansion';\t----- bird -----\tcard_games",
    "448": "SELECT foreign_data.name, cards.type FROM cards JOIN foreign_data ON cards.uuid = foreign_data.uuid WHERE cards.watermark = 'abzan';\t----- bird -----\tcard_games",
    "449": "SELECT DISTINCT foreign_data.language, cards.type FROM cards JOIN foreign_data ON cards.uuid = foreign_data.uuid WHERE cards.watermark = 'azorius';\t----- bird -----\tcard_games",
    "450": "SELECT COUNT(*) FROM cards WHERE artist = 'Aaron Miller' AND cardKingdomFoilId IS NOT NULL AND cardKingdomId IS NOT NULL;\t----- bird -----\tcard_games",
    "451": "SELECT COUNT(*) FROM cards WHERE availability LIKE '%paper%' AND hand = '3' AND hand > '0';\t----- bird -----\tcard_games",
    "452": "SELECT name FROM cards WHERE isTextless = 0;\t----- bird -----\tcard_games",
    "453": "SELECT convertedManaCost FROM cards WHERE name = 'Ancestor`s Chosen';\t----- bird -----\tcard_games",
    "454": "SELECT COUNT(*) FROM cards WHERE borderColor = 'white' AND (power = '*' OR power IS NULL);\t----- bird -----\tcard_games",
    "455": "SELECT name FROM cards WHERE isPromo = 1 AND side IS NOT NULL;\t----- bird -----\tcard_games",
    "456": "SELECT subtypes, supertypes FROM cards WHERE name = 'Molimo, Maro-Sorcerer';\t----- bird -----\tcard_games",
    "457": "SELECT purchaseUrls FROM cards WHERE promoTypes = 'bundle';\t----- bird -----\tcard_games",
    "458": "SELECT COUNT(DISTINCT artist) FROM cards WHERE borderColor = 'black' AND availability LIKE '%arena%' AND availability LIKE '%mtgo%';\t----- bird -----\tcard_games",
    "459": "SELECT name, convertedManaCost FROM cards WHERE name IN ('Serra Angel', 'Shrine Keeper') ORDER BY convertedManaCost DESC LIMIT 1;\t----- bird -----\tcard_games",
    "460": "SELECT artist FROM cards WHERE flavorName = 'Battra, Dark Destroyer' LIMIT 1;\t----- bird -----\tcard_games",
    "461": "SELECT name FROM cards WHERE frameVersion = '2003' ORDER BY convertedManaCost DESC LIMIT 3;\t----- bird -----\tcard_games",
    "462": "SELECT st.translation FROM set_translations st JOIN cards c ON st.setCode = c.setCode WHERE c.name = 'Ancestor''s Chosen' AND st.language = 'Italian' LIMIT 1;\t----- bird -----\tcard_games",
    "463": "SELECT COUNT(*) FROM set_translations WHERE setCode IN (SELECT DISTINCT setCode FROM cards WHERE name = 'Angel of Mercy');\t----- bird -----\tcard_games",
    "464": "SELECT c.name FROM cards c JOIN sets s ON c.setCode = s.code JOIN set_translations st ON s.code = st.setCode WHERE st.translation = 'Hauptset Zehnte Edition';\t----- bird -----\tcard_games",
    "465": "SELECT COUNT(*) > 0 AS has_korean_version FROM foreign_data WHERE name = 'Ancestor''s Chosen' AND language = 'Korean';\t----- bird -----\tcard_games",
    "466": "SELECT COUNT(*) FROM cards c JOIN sets s ON c.setCode = s.code JOIN set_translations st ON s.code = st.setCode WHERE st.translation = 'Hauptset Zehnte Edition' AND c.artist = 'Adam Rex';\t----- bird -----\tcard_games",
    "467": "SELECT s.baseSetSize FROM sets s JOIN set_translations st ON s.code = st.setCode WHERE st.translation = 'Hauptset Zehnte Edition' LIMIT 1;\t----- bird -----\tcard_games",
    "468": "SELECT st.translation FROM sets s JOIN set_translations st ON s.code = st.setCode WHERE s.name = 'Eighth Edition' AND st.language = 'Chinese Simplified' LIMIT 1;\t----- bird -----\tcard_games",
    "469": "SELECT CASE WHEN EXISTS (SELECT 1 FROM cards c JOIN sets s ON c.setCode = s.code WHERE c.name = 'Angel of Mercy' AND s.mtgoCode IS NOT NULL) THEN 'Yes' ELSE 'No' END AS appeared_on_mtgo;\t----- bird -----\tcard_games",
    "470": "SELECT releaseDate FROM sets WHERE name = 'Ancestor''s Chosen';\t----- bird -----\tcard_games",
    "471": "SELECT s.type FROM sets s JOIN set_translations st ON s.code = st.setCode WHERE st.translation = 'Hauptset Zehnte Edition';\t----- bird -----\tcard_games",
    "472": "SELECT COUNT(DISTINCT s.code) FROM sets s JOIN set_translations st ON s.code = st.setCode WHERE s.block = 'Ice Age' AND st.language = 'Italian' AND st.translation IS NOT NULL;\t----- bird -----\tcard_games",
    "473": "SELECT s.isForeignOnly FROM cards c JOIN sets s ON c.setCode = s.code WHERE c.name = 'Adarkar Valkyrie' LIMIT 1;\t----- bird -----\tcard_games",
    "474": "SELECT COUNT(DISTINCT s.code) FROM sets s JOIN set_translations st ON s.code = st.setCode WHERE st.language = 'Italian' AND st.translation IS NOT NULL AND s.baseSetSize < 100;\t----- bird -----\tcard_games",
    "475": "SELECT COUNT(*) FROM cards WHERE setCode = (SELECT code FROM sets WHERE name = 'Coldsnap') AND borderColor = 'black';\t----- bird -----\tcard_games",
    "476": "SELECT name FROM cards WHERE setCode = (SELECT code FROM sets WHERE name = 'Coldsnap') AND convertedManaCost = (SELECT MAX(convertedManaCost) FROM cards WHERE setCode = (SELECT code FROM sets WHERE name = 'Coldsnap'));\t----- bird -----\tcard_games",
    "477": "SELECT DISTINCT artist FROM cards WHERE artist IN ('Jeremy Jarvis', 'Aaron Miller', 'Chippy') AND setCode = (SELECT code FROM sets WHERE name = 'Coldsnap');\t----- bird -----\tcard_games",
    "478": "SELECT * FROM cards WHERE number = '4' AND setCode = (SELECT code FROM sets WHERE name = 'Coldsnap' LIMIT 1);\t----- bird -----\tcard_games",
    "479": "SELECT COUNT(*) FROM cards WHERE convertedManaCost > 5 AND setCode = (SELECT code FROM sets WHERE name = 'Coldsnap') AND (power = '*' OR power IS NULL);\t----- bird -----\tcard_games",
    "480": "SELECT flavorText FROM foreign_data WHERE language = 'Italian' AND name = 'Ancestor''s Chosen' LIMIT 1;\t----- bird -----\tcard_games",
    "481": "SELECT DISTINCT language FROM foreign_data WHERE name = 'Ancestor''s Chosen' AND flavorText IS NOT NULL;\t----- bird -----\tcard_games",
    "482": "SELECT fd.type FROM foreign_data fd JOIN cards c ON fd.uuid = c.uuid WHERE fd.language = 'German' AND c.name = 'Ancestor''s Chosen' LIMIT 1;\t----- bird -----\tcard_games",
    "483": "SELECT r.text FROM rulings r JOIN cards c ON r.uuid = c.uuid JOIN sets s ON c.setCode = s.code WHERE s.name = 'Coldsnap' AND r.id IN (SELECT id FROM rulings WHERE id = r.id) AND EXISTS (SELECT 1 FROM set_translations st WHERE st.setCode = s.code AND st.language = 'Italian') AND r.text IS NOT NULL;\t----- bird -----\tcard_games",
    "484": "SELECT foreign_data.name FROM foreign_data JOIN cards ON foreign_data.uuid = cards.uuid WHERE foreign_data.language = 'Italian' AND cards.setCode = (SELECT code FROM sets WHERE name = 'Coldsnap') AND cards.convertedManaCost = (SELECT MAX(convertedManaCost) FROM cards WHERE setCode = (SELECT code FROM sets WHERE name = 'Coldsnap'));\t----- bird -----\tcard_games",
    "485": "SELECT rulings.date FROM rulings JOIN cards ON rulings.uuid = cards.uuid WHERE cards.name = 'Reminisce';\t----- bird -----\tcard_games",
    "486": "SELECT (SUM(CASE WHEN c.convertedManaCost = 7 THEN 1 ELSE 0 END) * 100.0) / COUNT(*) AS percentage FROM cards c JOIN sets s ON c.setCode = s.code WHERE s.name = 'Coldsnap';\t----- bird -----\tcard_games",
    "487": "SELECT (SUM(CASE WHEN cardKingdomFoilId IS NOT NULL AND cardKingdomId IS NOT NULL THEN 1 ELSE 0 END) * 100.0) / COUNT(*) AS percentage_incredibly_powerful FROM cards WHERE setCode = (SELECT code FROM sets WHERE name = 'Coldsnap');\t----- bird -----\tcard_games",
    "488": "SELECT code FROM sets WHERE releaseDate = '2017-07-14' LIMIT 1;\t----- bird -----\tcard_games",
    "489": "SELECT keyruneCode FROM sets WHERE code = 'PKHC';\t----- bird -----\tcard_games",
    "490": "SELECT mcmId FROM sets WHERE code = 'SS2';\t----- bird -----\tcard_games",
    "491": "SELECT mcmName FROM sets WHERE releaseDate = '2017-06-09' LIMIT 1;\t----- bird -----\tcard_games",
    "492": "SELECT type FROM sets WHERE name = 'From the Vault: Lore';\t----- bird -----\tcard_games",
    "493": "SELECT parentCode FROM sets WHERE name = 'Commander 2014 Oversized';\t----- bird -----\tcard_games",
    "494": "SELECT c.name, r.text AS ruling_text, c.hasContentWarning FROM cards c LEFT JOIN rulings r ON c.uuid = r.uuid WHERE c.artist = 'Jim Pavelec';\t----- bird -----\tcard_games",
    "495": "SELECT s.releaseDate FROM cards c JOIN sets s ON c.setCode = s.code WHERE c.name = 'Evacuation' LIMIT 1;\t----- bird -----\tcard_games",
    "496": "SELECT s.baseSetSize FROM sets s JOIN set_translations st ON s.code = st.setCode WHERE st.translation = 'Rinascita di Alara';\t----- bird -----\tcard_games",
    "497": "SELECT s.type FROM sets s JOIN set_translations st ON s.code = st.setCode WHERE st.translation = 'Huiti\u00e8me \u00e9dition';\t----- bird -----\tcard_games",
    "498": "SELECT st.translation FROM set_translations st JOIN cards c ON st.setCode = c.setCode WHERE st.language = 'French' AND c.name = 'Tendo Ice Bridge' LIMIT 1;\t----- bird -----\tcard_games",
    "499": "SELECT COUNT(*) FROM set_translations WHERE setCode = (SELECT code FROM sets WHERE name = 'Tenth Edition') AND translation IS NOT NULL;\t----- bird -----\tcard_games",
    "500": "SELECT st.translation FROM set_translations st JOIN cards c ON st.setCode = c.setCode WHERE c.name = 'Fellwar Stone' AND st.language = 'Japanese' LIMIT 1;\t----- bird -----\tcard_games",
    "501": "SELECT name FROM cards WHERE setCode = (SELECT code FROM sets WHERE name = 'Journey into Nyx Hero''s Path') ORDER BY convertedManaCost DESC LIMIT 1;\t----- bird -----\tcard_games",
    "502": "SELECT s.releaseDate FROM sets s JOIN set_translations st ON s.code = st.setCode WHERE st.translation = 'Ola de fr\u00edo' LIMIT 1;\t----- bird -----\tcard_games",
    "503": "SELECT s.type FROM sets s JOIN cards c ON s.code = c.setCode WHERE c.name = 'Samite Pilgrim' LIMIT 1;\t----- bird -----\tcard_games",
    "504": "SELECT COUNT(*) FROM cards WHERE setCode = (SELECT code FROM sets WHERE name = 'World Championship Decks 2004') AND convertedManaCost = 3;\t----- bird -----\tcard_games",
    "505": "SELECT translation FROM set_translations JOIN sets ON set_translations.setCode = sets.code WHERE sets.name = 'Mirrodin' AND set_translations.language = 'Chinese Simplified' LIMIT 1;\t----- bird -----\tcard_games",
    "506": "SELECT (SUM(CASE WHEN s.isNonFoilOnly = 1 THEN 1 ELSE 0 END) * 100.0) / COUNT(*) AS percentage_non_foil_only FROM sets s JOIN set_translations st ON s.code = st.setCode WHERE st.language = 'Japanese';\t----- bird -----\tcard_games",
    "507": "SELECT (SUM(CASE WHEN c.isOnlineOnly = 1 THEN 1 ELSE 0 END) * 100.0) / COUNT(*) AS percentage_online_only FROM cards c JOIN set_translations st ON c.setCode = st.setCode WHERE st.language = 'Portuguese (Brazil)';\t----- bird -----\tcard_games",
    "508": "SELECT DISTINCT availability FROM cards WHERE artist = 'Aleksi Briclot' AND isTextless = 1;\t----- bird -----\tcard_games",
    "509": "SELECT id FROM sets WHERE baseSetSize = (SELECT MAX(baseSetSize) FROM sets) LIMIT 1;\t----- bird -----\tcard_games",
    "510": "SELECT artist FROM cards WHERE side IS NULL ORDER BY convertedManaCost DESC LIMIT 1;\t----- bird -----\tcard_games",
    "511": "SELECT frameEffects, COUNT(*) AS count FROM cards WHERE cardKingdomFoilId IS NOT NULL AND cardKingdomId IS NOT NULL GROUP BY frameEffects ORDER BY count DESC LIMIT 1;\t----- bird -----\tcard_games",
    "512": "SELECT COUNT(*) FROM cards WHERE (power IS NULL OR power = '*') AND hasFoil = 0 AND duelDeck = 'a';\t----- bird -----\tcard_games",
    "513": "SELECT id FROM sets WHERE type = 'commander' ORDER BY totalSetSize DESC LIMIT 1;\t----- bird -----\tcard_games",
    "514": "SELECT c.name, c.manaCost FROM cards c JOIN legalities l ON c.uuid = l.uuid WHERE l.format = 'duel' AND l.status = 'legal' ORDER BY c.manaCost DESC LIMIT 10;\t----- bird -----\tcard_games",
    "515": "SELECT c.originalReleaseDate, l.format FROM cards c JOIN legalities l ON c.uuid = l.uuid WHERE c.rarity = 'mythic' AND c.originalReleaseDate = (SELECT MIN(originalReleaseDate) FROM cards WHERE rarity = 'mythic') AND l.status = 'legal';\t----- bird -----\tcard_games",
    "516": "SELECT COUNT(DISTINCT c.id) FROM cards c JOIN foreign_data f ON c.uuid = f.uuid WHERE c.artist = 'Volkan Ba\u01f5a' AND f.language = 'French';\t----- bird -----\tcard_games",
    "517": "SELECT COUNT(DISTINCT c.id) FROM cards c JOIN legalities l ON c.uuid = l.uuid WHERE c.rarity = 'rare' AND c.types = 'Enchantment' AND c.name = 'Abundance' AND l.status = 'Legal';\t----- bird -----\tcard_games",
    "518": "WITH banned_counts AS (SELECT format, COUNT(*) AS banned_count FROM legalities WHERE status = 'Banned' GROUP BY format), max_banned AS (SELECT MAX(banned_count) AS max_count FROM banned_counts), top_formats AS (SELECT format FROM banned_counts WHERE banned_count = (SELECT max_count FROM max_banned)) SELECT l.format, c.name FROM legalities l JOIN cards c ON l.uuid = c.uuid WHERE l.status = 'Banned' AND l.format IN (SELECT format FROM top_formats) ORDER BY l.format, c.name;\t----- bird -----\tcard_games",
    "519": "SELECT DISTINCT st.language FROM sets s JOIN set_translations st ON s.code = st.setCode WHERE s.name = 'Battlebond' LIMIT 1;\t----- bird -----\tcard_games",
    "520": "SELECT l.format FROM legalities l JOIN cards c ON l.uuid = c.uuid WHERE c.artist = (SELECT artist FROM cards GROUP BY artist ORDER BY COUNT(*) ASC LIMIT 1) GROUP BY l.format;\t----- bird -----\tcard_games",
    "521": "SELECT legalities.status FROM cards JOIN legalities ON cards.uuid = legalities.uuid WHERE cards.frameVersion = '1997' AND cards.artist = 'D. Alexander Gregory' AND legalities.format = 'legacy' AND (cards.hasContentWarning = 1 OR cards.artist = 'Wizards of the Coast');\t----- bird -----\tcard_games",
    "522": "SELECT c.name, l.format FROM cards c LEFT JOIN legalities l ON c.uuid = l.uuid WHERE c.edhrecRank = 1 AND l.status = 'Banned';\t----- bird -----\tcard_games",
    "523": "SELECT AVG(sets_per_year.count) AS annual_average_sets, common_language.language FROM (SELECT EXTRACT(YEAR FROM releaseDate) AS year, COUNT(*) AS count FROM sets WHERE releaseDate BETWEEN '2012-01-01' AND '2015-12-31' GROUP BY year) AS sets_per_year CROSS JOIN (SELECT language FROM cards GROUP BY language ORDER BY COUNT(language) DESC LIMIT 1) AS common_language;\t----- bird -----\tcard_games",
    "524": "SELECT DISTINCT artist FROM cards WHERE borderColor = 'black' AND availability = 'arena';\t----- bird -----\tcard_games",
    "525": "SELECT c.uuid FROM cards c JOIN legalities l ON c.uuid = l.uuid WHERE l.format = 'oldschool' AND (l.status = 'banned' OR l.status = 'restricted');\t----- bird -----\tcard_games",
    "526": "SELECT COUNT(*) FROM cards WHERE artist = 'Matthew D. Wilson' AND availability = 'paper';\t----- bird -----\tcard_games",
    "527": "SELECT r.text, r.date FROM rulings r JOIN cards c ON r.uuid = c.uuid WHERE c.artist = 'Kev Walker' ORDER BY r.date DESC;\t----- bird -----\tcard_games",
    "528": "SELECT DISTINCT c.name, l.format FROM cards c JOIN sets s ON c.setCode = s.code JOIN legalities l ON c.uuid = l.uuid WHERE s.name = 'Hour of Devastation' AND l.status = 'Legal' ORDER BY c.name, l.format;\t----- bird -----\tcard_games",
    "529": "SELECT s.name FROM sets s WHERE NOT EXISTS (SELECT 1 FROM set_translations st WHERE st.setCode = s.code AND st.language LIKE '%Japanese%') AND EXISTS (SELECT 1 FROM set_translations st WHERE st.setCode = s.code AND st.language = 'Korean');\t----- bird -----\tcard_games",
    "530": "SELECT DISTINCT c.frameVersion AS frame_style, c.name AS card_name, l.status FROM cards c LEFT JOIN legalities l ON c.uuid = l.uuid AND l.status = 'Banned' WHERE c.artist = 'Allen Williams';\t----- bird -----\tcard_games",
    "531": "SELECT DisplayName, Reputation FROM users WHERE DisplayName IN ('Harlan', 'Jarrod Dixon') ORDER BY Reputation DESC LIMIT 1;\t----- bird -----\tcodebase_community",
    "532": "SELECT DisplayName FROM users WHERE YEAR(CreationDate) = 2011;\t----- bird -----\tcodebase_community",
    "533": "SELECT COUNT(*) FROM users WHERE LastAccessDate > '2014-09-01';\t----- bird -----\tcodebase_community",
    "534": "SELECT DisplayName FROM users ORDER BY Views DESC LIMIT 1;\t----- bird -----\tcodebase_community",
    "535": "SELECT COUNT(*) FROM users WHERE UpVotes > 100 AND DownVotes > 1;\t----- bird -----\tcodebase_community",
    "536": "SELECT COUNT(*) FROM users WHERE Views > 10 AND YEAR(CreationDate) > 2013;\t----- bird -----\tcodebase_community",
    "537": "SELECT COUNT(*) FROM posts p JOIN users u ON p.OwnerUserId = u.Id WHERE u.DisplayName = 'csgillespie';\t----- bird -----\tcodebase_community",
    "538": "SELECT posts.Title FROM posts JOIN users ON posts.OwnerUserId = users.Id WHERE users.DisplayName = 'csgillespie';\t----- bird -----\tcodebase_community",
    "539": "SELECT OwnerDisplayName FROM posts WHERE Title = 'Eliciting priors from experts';\t----- bird -----\tcodebase_community",
    "540": "SELECT Title FROM posts WHERE OwnerUserId = (SELECT Id FROM users WHERE DisplayName = 'csgillespie') ORDER BY ViewCount DESC LIMIT 1;\t----- bird -----\tcodebase_community",
    "541": "SELECT u.DisplayName FROM users u JOIN posts p ON u.Id = p.OwnerUserId ORDER BY p.FavoriteCount DESC LIMIT 1;\t----- bird -----\tcodebase_community",
    "542": "SELECT SUM(p.CommentCount) FROM posts p JOIN users u ON p.OwnerUserId = u.Id WHERE u.DisplayName = 'csgillespie';\t----- bird -----\tcodebase_community",
    "543": "SELECT MAX(AnswerCount) FROM posts WHERE OwnerUserId = (SELECT Id FROM users WHERE DisplayName = 'csgillespie') AND PostTypeId = 1;\t----- bird -----\tcodebase_community",
    "544": "SELECT u.DisplayName FROM posts p JOIN users u ON p.LastEditorUserId = u.Id WHERE p.Title = 'Examples for teaching: Correlation does not mean causation' LIMIT 1;\t----- bird -----\tcodebase_community",
    "545": "SELECT COUNT(*) FROM posts p JOIN users u ON p.OwnerUserId = u.Id WHERE u.DisplayName = 'csgillespie' AND p.ParentId IS NULL;\t----- bird -----\tcodebase_community",
    "546": "SELECT DISTINCT u.DisplayName FROM users u JOIN posts p ON u.Id = p.OwnerUserId WHERE p.ClosedDate IS NOT NULL;\t----- bird -----\tcodebase_community",
    "547": "SELECT COUNT(*) FROM posts p JOIN users u ON p.OwnerUserId = u.Id WHERE u.Age > 65 AND p.Score >= 20;\t----- bird -----\tcodebase_community",
    "548": "SELECT u.Location FROM posts p JOIN users u ON p.OwnerUserId = u.Id WHERE p.Title = 'Eliciting priors from experts' LIMIT 1;\t----- bird -----\tcodebase_community",
    "549": "SELECT posts.Body FROM posts JOIN tags ON posts.Id = tags.ExcerptPostId WHERE tags.TagName = 'bayesian';\t----- bird -----\tcodebase_community",
    "550": "SELECT p.Body FROM posts p JOIN tags t ON p.Id = t.ExcerptPostId WHERE t.Count = (SELECT MAX(Count) FROM tags) LIMIT 1;\t----- bird -----\tcodebase_community",
    "551": "SELECT COUNT(*) FROM badges WHERE UserId = (SELECT Id FROM users WHERE DisplayName = 'csgillespie');\t----- bird -----\tcodebase_community",
    "552": "SELECT b.Name FROM badges b JOIN users u ON b.UserId = u.Id WHERE u.DisplayName = 'csgillespie';\t----- bird -----\tcodebase_community",
    "553": "SELECT COUNT(*) FROM badges b JOIN users u ON b.UserId = u.Id WHERE u.DisplayName = 'csgillespie' AND YEAR(b.Date) = 2011;\t----- bird -----\tcodebase_community",
    "554": "SELECT u.DisplayName FROM users u JOIN (SELECT UserId, COUNT(Id) AS BadgeCount FROM badges GROUP BY UserId ORDER BY BadgeCount DESC LIMIT 1) b ON u.Id = b.UserId;\t----- bird -----\tcodebase_community",
    "555": "SELECT AVG(p.Score) FROM posts p JOIN users u ON p.OwnerUserId = u.Id WHERE u.DisplayName = 'csgillespie';\t----- bird -----\tcodebase_community",
    "556": "SELECT AVG(badge_count) FROM (SELECT COUNT(b.Id) AS badge_count FROM users u LEFT JOIN badges b ON u.Id = b.UserId WHERE u.Views > 200 GROUP BY u.Id) subquery;\t----- bird -----\tcodebase_community",
    "557": "SELECT 100.0 * COUNT(*) / (SELECT COUNT(*) FROM posts WHERE Score > 5) AS Percentage FROM posts p JOIN users u ON p.OwnerUserId = u.Id WHERE p.Score > 5 AND u.Age > 65;\t----- bird -----\tcodebase_community",
    "558": "SELECT COUNT(*) FROM votes WHERE UserId = 58 AND CreationDate = '2010-07-19';\t----- bird -----\tcodebase_community",
    "559": "SELECT CreationDate FROM votes GROUP BY CreationDate ORDER BY COUNT(Id) DESC LIMIT 1;\t----- bird -----\tcodebase_community",
    "560": "SELECT COUNT(*) FROM badges WHERE Name = 'Revival';\t----- bird -----\tcodebase_community",
    "561": "SELECT p.Title FROM posts p JOIN comments c ON p.Id = c.PostId WHERE c.Score = (SELECT MAX(Score) FROM comments) LIMIT 1;\t----- bird -----\tcodebase_community",
    "562": "SELECT COUNT(*) FROM comments WHERE PostId = (SELECT Id FROM posts WHERE ViewCount = 1910);\t----- bird -----\tcodebase_community",
    "563": "SELECT posts.FavoriteCount FROM posts JOIN comments ON posts.Id = comments.PostId WHERE comments.UserId = 3025 AND comments.CreationDate = '2014-04-23 20:29:39' LIMIT 1;\t----- bird -----\tcodebase_community",
    "564": "SELECT c.Text FROM comments c JOIN posts p ON c.PostId = p.Id WHERE p.ParentId = 107829;\t----- bird -----\tcodebase_community",
    "565": "SELECT CASE WHEN p.ClosedDate IS NULL THEN 'Yes' ELSE 'No' END AS WellFinished FROM comments c JOIN posts p ON c.PostId = p.Id WHERE c.UserId = 23853 AND c.CreationDate = '2013-07-12 09:08:18.0' LIMIT 1;\t----- bird -----\tcodebase_community",
    "566": "SELECT u.Reputation FROM users u JOIN posts p ON u.Id = p.OwnerUserId WHERE p.Id = 65041;\t----- bird -----\tcodebase_community",
    "567": "SELECT COUNT(*) FROM posts WHERE OwnerUserId = (SELECT Id FROM users WHERE DisplayName = 'Tiago Pasqualini');\t----- bird -----\tcodebase_community",
    "568": "SELECT users.DisplayName FROM votes JOIN users ON votes.UserId = users.Id WHERE votes.Id = 6347;\t----- bird -----\tcodebase_community",
    "569": "SELECT COUNT(*) FROM votes v JOIN posts p ON v.PostId = p.Id WHERE p.Title LIKE '%data visualization%';\t----- bird -----\tcodebase_community",
    "570": "SELECT badges.Name FROM badges JOIN users ON badges.UserId = users.Id WHERE users.DisplayName = 'DatEpicCoderGuyWhoPrograms';\t----- bird -----\tcodebase_community",
    "571": "SELECT CAST(COUNT(posts.Id) AS FLOAT) / NULLIF(COUNT(votes.Id), 0) AS PostToVoteRatio FROM posts LEFT JOIN votes ON posts.Id = votes.PostId WHERE posts.OwnerUserId = 24;\t----- bird -----\tcodebase_community",
    "572": "SELECT ViewCount FROM posts WHERE Title = 'Integration of Weka and/or RapidMiner into Informatica PowerCenter/Developer';\t----- bird -----\tcodebase_community",
    "573": "SELECT Text FROM comments WHERE Score = 17;\t----- bird -----\tcodebase_community",
    "574": "SELECT * FROM users WHERE WebsiteUrl = 'http://stackoverflow.com';\t----- bird -----\tcodebase_community",
    "575": "SELECT b.Name FROM badges b JOIN users u ON b.UserId = u.Id WHERE u.DisplayName = 'SilentGhost';\t----- bird -----\tcodebase_community",
    "576": "SELECT UserDisplayName FROM comments WHERE Text = 'thank you user93!' LIMIT 1;\t----- bird -----\tcodebase_community",
    "577": "SELECT * FROM comments WHERE UserDisplayName = 'A Lion';\t----- bird -----\tcodebase_community",
    "578": "SELECT u.DisplayName, u.Reputation FROM posts p JOIN users u ON p.OwnerUserId = u.Id WHERE p.Title = 'Understanding what Dassault iSight is doing?' LIMIT 1;\t----- bird -----\tcodebase_community",
    "579": "SELECT c.* FROM comments c JOIN posts p ON c.PostId = p.Id WHERE p.Title = 'How does gentle boosting differ from AdaBoost?';\t----- bird -----\tcodebase_community",
    "580": "SELECT DISTINCT u.DisplayName FROM users u JOIN badges b ON u.Id = b.UserId WHERE b.Name = 'Necromancer' LIMIT 10;\t----- bird -----\tcodebase_community",
    "581": "SELECT LastEditorDisplayName FROM posts WHERE Title = 'Open source tools for visualizing multi-dimensional data' LIMIT 1;\t----- bird -----\tcodebase_community",
    "582": "SELECT Title FROM posts p JOIN users u ON p.LastEditorUserId = u.Id WHERE u.DisplayName = 'Vebjorn Ljosa' AND p.LastEditorUserId IS NOT NULL;\t----- bird -----\tcodebase_community",
    "583": "SELECT SUM(p.Score) AS TotalScore, u.WebsiteUrl FROM posts p JOIN users u ON p.LastEditorUserId = u.Id WHERE u.DisplayName = 'Yevgeny' GROUP BY u.WebsiteUrl;\t----- bird -----\tcodebase_community",
    "584": "SELECT c.* FROM comments c JOIN posts p ON c.PostId = p.Id JOIN postHistory ph ON ph.PostId = p.Id WHERE p.Title = 'Why square the difference instead of taking the absolute value in standard deviation?' AND ph.UserId = c.UserId AND ph.PostId = c.PostId;\t----- bird -----\tcodebase_community",
    "585": "SELECT SUM(v.BountyAmount) FROM posts p JOIN votes v ON p.Id = v.PostId WHERE p.Title LIKE '%data%' AND v.VoteTypeId = 8;\t----- bird -----\tcodebase_community",
    "586": "SELECT u.DisplayName FROM votes v JOIN posts p ON v.PostId = p.Id JOIN users u ON v.UserId = u.Id WHERE v.BountyAmount = 50 AND p.Title LIKE '%variance%' AND v.VoteTypeId = 8;\t----- bird -----\tcodebase_community",
    "587": "SELECT p.Title, c.Text, AVG(p.ViewCount) OVER () AS AverageViewCount FROM posts p JOIN tags t ON p.Tags LIKE CONCAT('%<', t.TagName, '>%') JOIN comments c ON p.Id = c.PostId WHERE t.TagName = 'humor';\t----- bird -----\tcodebase_community",
    "588": "SELECT COUNT(*) FROM comments WHERE UserId = 13;\t----- bird -----\tcodebase_community",
    "589": "SELECT Id FROM users ORDER BY Reputation DESC LIMIT 1;\t----- bird -----\tcodebase_community",
    "590": "SELECT Id FROM users WHERE Views = (SELECT MIN(Views) FROM users) LIMIT 1;\t----- bird -----\tcodebase_community",
    "591": "SELECT COUNT(DISTINCT UserId) FROM badges WHERE Name = 'Supporter' AND YEAR(Date) = 2011;\t----- bird -----\tcodebase_community",
    "592": "SELECT COUNT(*) FROM (SELECT UserId FROM badges GROUP BY UserId HAVING COUNT(Name) > 5) AS subquery;\t----- bird -----\tcodebase_community",
    "593": "SELECT COUNT(DISTINCT u.Id) FROM users u JOIN badges b1 ON u.Id = b1.UserId AND b1.Name = 'Teacher' JOIN badges b2 ON u.Id = b2.UserId AND b2.Name = 'Supporter' WHERE u.Location = 'New York';\t----- bird -----\tcodebase_community",
    "594": "SELECT u.DisplayName, u.Reputation FROM posts p JOIN users u ON p.OwnerUserId = u.Id WHERE p.Id = 1;\t----- bird -----\tcodebase_community",
    "595": "SELECT ph.UserId FROM postHistory ph JOIN posts p ON ph.PostId = p.Id GROUP BY ph.UserId, ph.PostId HAVING COUNT(ph.Id) = 1 AND MAX(p.ViewCount) >= 1000;\t----- bird -----\tcodebase_community",
    "596": "SELECT u.Id, u.DisplayName, b.Name AS BadgeName, COUNT(c.Id) AS CommentCount FROM users u LEFT JOIN comments c ON u.Id = c.UserId LEFT JOIN badges b ON u.Id = b.UserId GROUP BY u.Id, u.DisplayName, b.Name ORDER BY CommentCount DESC;\t----- bird -----\tcodebase_community",
    "597": "SELECT COUNT(DISTINCT b.UserId) FROM badges b JOIN users u ON b.UserId = u.Id WHERE u.Location = 'India' AND b.Name = 'Teacher';\t----- bird -----\tcodebase_community",
    "598": "SELECT ((COUNT(CASE WHEN YEAR(Date) = 2010 THEN 1 END) * 1.0 / COUNT(*) * 100) - (COUNT(CASE WHEN YEAR(Date) = 2011 THEN 1 END) * 1.0 / COUNT(*) * 100)) AS PercentageDifference FROM badges WHERE Name = 'Student' AND YEAR(Date) IN (2010, 2011);\t----- bird -----\tcodebase_community",
    "599": "SELECT ph.PostHistoryTypeId, (SELECT COUNT(DISTINCT UserId) FROM comments WHERE PostId = 3720) AS UniqueUserComments FROM postHistory ph WHERE ph.PostId = 3720;\t----- bird -----\tcodebase_community",
    "600": "SELECT p.Id, p.ViewCount AS Popularity FROM postLinks pl JOIN posts p ON pl.PostId = p.Id WHERE pl.RelatedPostId = 61217;\t----- bird -----\tcodebase_community",
    "601": "SELECT p.Score, pl.LinkTypeId FROM posts p LEFT JOIN postLinks pl ON p.Id = pl.PostId WHERE p.Id = 395;\t----- bird -----\tcodebase_community",
    "602": "SELECT Id AS PostID, OwnerUserId AS UserID FROM posts WHERE Score > 60;\t----- bird -----\tcodebase_community",
    "603": "SELECT SUM(FavoriteCount) FROM posts WHERE OwnerUserId = 686 AND YEAR(CreaionDate) = 2011;\t----- bird -----\tcodebase_community",
    "604": "SELECT AVG(UpVotes) AS AverageUpVotes, AVG(Age) AS AverageAge FROM users WHERE Id IN (SELECT OwnerUserId FROM posts GROUP BY OwnerUserId HAVING COUNT(*) > 10) AND UpVotes IS NOT NULL AND Age IS NOT NULL;\t----- bird -----\tcodebase_community",
    "605": "SELECT COUNT(DISTINCT UserId) FROM badges WHERE Name = 'Announcer';\t----- bird -----\tcodebase_community",
    "606": "SELECT Name FROM badges WHERE Date = '2010-07-19 19:39:08.0';\t----- bird -----\tcodebase_community",
    "607": "SELECT COUNT(*) FROM comments WHERE Score > 60;\t----- bird -----\tcodebase_community",
    "608": "SELECT Text FROM comments WHERE CreationDate = '2010-07-19 19:25:47';\t----- bird -----\tcodebase_community",
    "609": "SELECT COUNT(*) FROM posts WHERE Score = 10;\t----- bird -----\tcodebase_community",
    "610": "SELECT DISTINCT b.Name FROM badges b JOIN users u ON b.UserId = u.Id WHERE u.Reputation = (SELECT MAX(Reputation) FROM users);\t----- bird -----\tcodebase_community",
    "611": "SELECT u.Reputation FROM users u JOIN badges b ON u.Id = b.UserId WHERE b.Date = '2010-07-19 19:39:08.0';\t----- bird -----\tcodebase_community",
    "612": "SELECT badges.Name FROM badges JOIN users ON badges.UserId = users.Id WHERE users.DisplayName = 'Pierre';\t----- bird -----\tcodebase_community",
    "613": "SELECT badges.Date FROM badges JOIN users ON badges.UserId = users.Id WHERE users.Location = 'Rochester, NY';\t----- bird -----\tcodebase_community",
    "614": "SELECT (COUNT(DISTINCT UserId) * 100.0) / (SELECT COUNT(DISTINCT Id) FROM users) AS percentage FROM badges WHERE Name = 'Teacher';\t----- bird -----\tcodebase_community",
    "615": "SELECT (COUNT(DISTINCT CASE WHEN u.Age BETWEEN 13 AND 18 THEN u.Id END) * 100.0) / COUNT(DISTINCT u.Id) AS percentage FROM users u JOIN badges b ON u.Id = b.UserId WHERE b.Name = 'Organizer';\t----- bird -----\tcodebase_community",
    "616": "SELECT c.Score FROM comments c JOIN posts p ON c.PostId = p.Id WHERE p.CreaionDate = '2010-07-19 19:19:56.0';\t----- bird -----\tcodebase_community",
    "617": "SELECT comments.Text FROM comments JOIN posts ON comments.PostId = posts.Id WHERE posts.CreaionDate = '2010-07-19 19:37:33';\t----- bird -----\tcodebase_community",
    "618": "SELECT DISTINCT u.Age FROM users u JOIN badges b ON u.Id = b.UserId WHERE u.Location = 'Vienna, Austria' AND u.Age IS NOT NULL;\t----- bird -----\tcodebase_community",
    "619": "SELECT COUNT(DISTINCT b.UserId) FROM badges b JOIN users u ON b.UserId = u.Id WHERE b.Name = 'Supporter' AND u.Age BETWEEN 19 AND 65;\t----- bird -----\tcodebase_community",
    "620": "SELECT SUM(u.Views) FROM users u JOIN badges b ON u.Id = b.UserId WHERE b.Date = '2010-07-19 19:39:08.0';\t----- bird -----\tcodebase_community",
    "621": "SELECT DISTINCT b.Name FROM badges b JOIN users u ON b.UserId = u.Id WHERE u.Reputation = (SELECT MIN(Reputation) FROM users);\t----- bird -----\tcodebase_community",
    "622": "SELECT b.Name FROM badges b JOIN users u ON b.UserId = u.Id WHERE u.DisplayName = 'Sharpie';\t----- bird -----\tcodebase_community",
    "623": "SELECT COUNT(DISTINCT b.UserId) FROM badges b JOIN users u ON b.UserId = u.Id WHERE b.Name = 'Supporter' AND u.Age > 65;\t----- bird -----\tcodebase_community",
    "624": "SELECT DisplayName FROM users WHERE Id = 30;\t----- bird -----\tcodebase_community",
    "625": "SELECT COUNT(*) FROM users WHERE Location LIKE '%New York%';\t----- bird -----\tcodebase_community",
    "626": "SELECT COUNT(*) FROM votes WHERE YEAR(CreationDate) = 2010;\t----- bird -----\tcodebase_community",
    "627": "SELECT COUNT(*) FROM users WHERE Age BETWEEN 19 AND 65;\t----- bird -----\tcodebase_community",
    "628": "SELECT DisplayName FROM users WHERE Views = (SELECT MAX(Views) FROM users);\t----- bird -----\tcodebase_community",
    "629": "SELECT CAST(SUM(CASE WHEN YEAR(CreationDate) = 2010 THEN 1 ELSE 0 END) AS FLOAT) / NULLIF(SUM(CASE WHEN YEAR(CreationDate) = 2011 THEN 1 ELSE 0 END), 0) AS VoteRatio FROM votes;\t----- bird -----\tcodebase_community",
    "630": "SELECT DISTINCT TRIM(BOTH '<>' FROM SUBSTRING_INDEX(SUBSTRING_INDEX(p.Tags, '>', n.n), '<', -1)) AS TagName FROM posts p JOIN users u ON p.OwnerUserId = u.Id JOIN (SELECT 1 n UNION ALL SELECT 2 UNION ALL SELECT 3 UNION ALL SELECT 4 UNION ALL SELECT 5 UNION ALL SELECT 6 UNION ALL SELECT 7 UNION ALL SELECT 8 UNION ALL SELECT 9 UNION ALL SELECT 10) n WHERE u.DisplayName = 'John Salvatier' AND n.n <= 1 + LENGTH(p.Tags) - LENGTH(REPLACE(p.Tags, '><', ''));\t----- bird -----\tcodebase_community",
    "631": "SELECT COUNT(*) FROM posts p JOIN users u ON p.OwnerUserId = u.Id WHERE u.DisplayName = 'Daniel Vassallo';\t----- bird -----\tcodebase_community",
    "632": "SELECT COUNT(*) FROM votes v JOIN users u ON v.UserId = u.Id WHERE u.DisplayName = 'Harlan';\t----- bird -----\tcodebase_community",
    "633": "SELECT Id FROM posts WHERE OwnerUserId = (SELECT Id FROM users WHERE DisplayName = 'slashnick') ORDER BY AnswerCount DESC LIMIT 1;\t----- bird -----\tcodebase_community",
    "634": "SELECT u.DisplayName, SUM(p.ViewCount) AS TotalViewCount FROM posts p JOIN users u ON p.OwnerUserId = u.Id WHERE u.DisplayName IN ('Harvey Motulsky', 'Noah Snyder') GROUP BY u.DisplayName ORDER BY TotalViewCount DESC LIMIT 1;\t----- bird -----\tcodebase_community",
    "635": "SELECT COUNT(DISTINCT p.Id) FROM posts p JOIN users u ON p.OwnerUserId = u.Id JOIN votes v ON p.Id = v.PostId WHERE u.DisplayName = 'Matt Parker' GROUP BY p.Id HAVING COUNT(v.Id) > 4;\t----- bird -----\tcodebase_community",
    "636": "SELECT COUNT(*) FROM comments c JOIN posts p ON c.PostId = p.Id WHERE p.OwnerUserId = (SELECT Id FROM users WHERE DisplayName = 'Neil McGuigan') AND c.Score < 60;\t----- bird -----\tcodebase_community",
    "637": "SELECT DISTINCT TRIM(BOTH '<>' FROM SUBSTRING_INDEX(SUBSTRING_INDEX(p.Tags, '><', numbers.n), '><', -1)) AS Tag FROM posts p JOIN users u ON p.OwnerUserId = u.Id JOIN (SELECT 1 n UNION ALL SELECT 2 UNION ALL SELECT 3 UNION ALL SELECT 4 UNION ALL SELECT 5 UNION ALL SELECT 6 UNION ALL SELECT 7 UNION ALL SELECT 8 UNION ALL SELECT 9 UNION ALL SELECT 10) numbers ON CHAR_LENGTH(p.Tags) - CHAR_LENGTH(REPLACE(p.Tags, '><', '')) >= numbers.n - 1 WHERE u.DisplayName = 'Mark Meckes' AND p.CommentCount = 0;\t----- bird -----\tcodebase_community",
    "638": "SELECT DISTINCT u.DisplayName FROM users u JOIN badges b ON u.Id = b.UserId WHERE b.Name = 'Organizer';\t----- bird -----\tcodebase_community",
    "639": "SELECT 100.0 * SUM(CASE WHEN p.Tags LIKE '%<r>%' THEN 1 ELSE 0 END) / COUNT(*) AS percentage FROM posts p JOIN users u ON p.OwnerUserId = u.Id WHERE u.DisplayName = 'Community';\t----- bird -----\tcodebase_community",
    "640": "SELECT (SELECT COALESCE(SUM(ViewCount),0) FROM posts p JOIN users u ON p.OwnerUserId = u.Id WHERE u.DisplayName = 'Mornington') - (SELECT COALESCE(SUM(ViewCount),0) FROM posts p JOIN users u ON p.OwnerUserId = u.Id WHERE u.DisplayName = 'Amos') AS ViewCountDifference;\t----- bird -----\tcodebase_community",
    "641": "SELECT COUNT(DISTINCT UserId) FROM badges WHERE Name = 'Commentator' AND YEAR(Date) = 2014;\t----- bird -----\tcodebase_community",
    "642": "SELECT COUNT(*) FROM posts WHERE CreaionDate BETWEEN '2010-07-21 00:00:00' AND '2010-07-21 23:59:59';\t----- bird -----\tcodebase_community",
    "643": "SELECT DisplayName, Age FROM users WHERE Id IN (SELECT OwnerUserId FROM posts WHERE ViewCount = (SELECT MAX(ViewCount) FROM posts));\t----- bird -----\tcodebase_community",
    "644": "SELECT LastEditDate, LastEditorUserId FROM posts WHERE Title = 'Detecting a given face in a database of facial images';\t----- bird -----\tcodebase_community",
    "645": "SELECT COUNT(*) FROM comments WHERE UserId = 13 AND Score < 60;\t----- bird -----\tcodebase_community",
    "646": "SELECT p.Title, c.UserDisplayName FROM posts p JOIN comments c ON p.Id = c.PostId WHERE c.Score > 60;\t----- bird -----\tcodebase_community",
    "647": "SELECT DISTINCT b.Name FROM badges b JOIN users u ON b.UserId = u.Id WHERE YEAR(b.Date) = 2011 AND u.Location LIKE '%North Pole%';\t----- bird -----\tcodebase_community",
    "648": "SELECT DISTINCT u.DisplayName, u.WebsiteUrl FROM posts p JOIN users u ON p.OwnerUserId = u.Id WHERE p.FavoriteCount > 150;\t----- bird -----\tcodebase_community",
    "649": "SELECT ph.PostId, COUNT(*) AS HistoryCount, MAX(ph.CreationDate) AS LastEditDate FROM postHistory ph JOIN posts p ON ph.PostId = p.Id WHERE p.Title = 'What is the best introductory Bayesian statistics textbook?' GROUP BY ph.PostId;\t----- bird -----\tcodebase_community",
    "650": "SELECT u.LastAccessDate, u.Location FROM users u JOIN badges b ON u.Id = b.UserId WHERE b.Name = 'Outliers';\t----- bird -----\tcodebase_community",
    "651": "SELECT p2.Title FROM posts p1 JOIN postLinks pl ON p1.Id = pl.PostId JOIN posts p2 ON pl.RelatedPostId = p2.Id WHERE p1.Title = 'How to tell if something happened in a data set which monitors a value over time';\t----- bird -----\tcodebase_community",
    "652": "SELECT p.Id, b.Name FROM posts p JOIN badges b ON p.OwnerUserId = b.UserId WHERE b.Name IS NOT NULL AND b.UserId = (SELECT Id FROM users WHERE DisplayName = 'Samuel') AND YEAR(b.Date) = 2013 AND p.OwnerUserId = b.UserId;\t----- bird -----\tcodebase_community",
    "653": "SELECT OwnerDisplayName FROM posts WHERE ViewCount = (SELECT MAX(ViewCount) FROM posts) LIMIT 1;\t----- bird -----\tcodebase_community",
    "654": "SELECT u.DisplayName, u.Location FROM users u JOIN posts p ON u.Id = p.OwnerUserId JOIN tags t ON p.Id = t.ExcerptPostId WHERE t.TagName = 'hypothesis-testing';\t----- bird -----\tcodebase_community",
    "655": "SELECT p2.Title, pl.LinkTypeId FROM posts p1 JOIN postLinks pl ON p1.Id = pl.PostId JOIN posts p2 ON pl.RelatedPostId = p2.Id WHERE p1.Title = 'What are principal component scores?';\t----- bird -----\tcodebase_community",
    "656": "SELECT u.DisplayName FROM posts p JOIN posts parent ON p.ParentId = parent.Id JOIN users u ON parent.OwnerUserId = u.Id WHERE p.ParentId IS NOT NULL ORDER BY p.Score DESC LIMIT 1;\t----- bird -----\tcodebase_community",
    "657": "SELECT u.DisplayName, u.WebsiteUrl FROM users u JOIN votes v ON u.Id = v.UserId WHERE v.VoteTypeId = 8 AND v.BountyAmount = (SELECT MAX(BountyAmount) FROM votes WHERE VoteTypeId = 8) LIMIT 1;\t----- bird -----\tcodebase_community",
    "658": "SELECT Title FROM posts ORDER BY ViewCount DESC LIMIT 5;\t----- bird -----\tcodebase_community",
    "659": "SELECT COUNT(*) FROM tags WHERE Count BETWEEN 5000 AND 7000;\t----- bird -----\tcodebase_community",
    "660": "SELECT OwnerUserId FROM posts ORDER BY FavoriteCount DESC LIMIT 1;\t----- bird -----\tcodebase_community",
    "661": "SELECT Age FROM users WHERE Reputation = (SELECT MAX(Reputation) FROM users) LIMIT 1;\t----- bird -----\tcodebase_community",
    "662": "SELECT COUNT(DISTINCT p.Id) FROM posts p JOIN votes v ON p.Id = v.PostId WHERE YEAR(p.CreaionDate) = 2011 AND v.BountyAmount = 50;\t----- bird -----\tcodebase_community",
    "663": "SELECT Id FROM users WHERE Age = (SELECT MIN(Age) FROM users);\t----- bird -----\tcodebase_community",
    "664": "SELECT SUM(Score) FROM posts WHERE LasActivityDate LIKE '2010-07-19%';\t----- bird -----\tcodebase_community",
    "665": "SELECT COUNT(pl.Id) / 12.0 AS AverageMonthlyLinks FROM postLinks pl JOIN posts p ON pl.PostId = p.Id WHERE YEAR(pl.CreationDate) = 2010 AND p.AnswerCount <= 2;\t----- bird -----\tcodebase_community",
    "666": "SELECT p.Id FROM posts p JOIN votes v ON p.Id = v.PostId WHERE v.UserId = 1465 ORDER BY p.FavoriteCount DESC LIMIT 1;\t----- bird -----\tcodebase_community",
    "667": "SELECT p.Title FROM posts p JOIN postLinks pl ON p.Id = pl.PostId WHERE pl.CreationDate = (SELECT MIN(CreationDate) FROM postLinks) LIMIT 1;\t----- bird -----\tcodebase_community",
    "668": "SELECT DisplayName FROM users WHERE Id = (SELECT UserId FROM badges GROUP BY UserId ORDER BY COUNT(Name) DESC LIMIT 1);\t----- bird -----\tcodebase_community",
    "669": "SELECT MIN(v.CreationDate) FROM votes v JOIN users u ON v.UserId = u.Id WHERE u.DisplayName = 'chl';\t----- bird -----\tcodebase_community",
    "670": "SELECT MIN(p.CreaionDate) FROM posts p JOIN users u ON p.OwnerUserId = u.Id WHERE u.Age = (SELECT MIN(Age) FROM users WHERE Age IS NOT NULL) AND p.CreaionDate IS NOT NULL;\t----- bird -----\tcodebase_community",
    "671": "SELECT u.DisplayName FROM users u JOIN badges b ON u.Id = b.UserId WHERE b.Name = 'Autobiographer' AND b.Date = (SELECT MIN(Date) FROM badges WHERE Name = 'Autobiographer') LIMIT 1;\t----- bird -----\tcodebase_community",
    "672": "SELECT COUNT(DISTINCT u.Id) FROM users u JOIN posts p ON u.Id = p.OwnerUserId WHERE u.Location = 'United Kingdom' AND p.FavoriteCount >= 4;\t----- bird -----\tcodebase_community",
    "673": "SELECT AVG(voted_posts) FROM (SELECT UserId, COUNT(DISTINCT PostId) AS voted_posts FROM votes WHERE UserId IN (SELECT Id FROM users WHERE Age = (SELECT MAX(Age) FROM users)) GROUP BY UserId) AS subquery;\t----- bird -----\tcodebase_community",
    "674": "SELECT DisplayName FROM users WHERE Reputation = (SELECT MAX(Reputation) FROM users) LIMIT 1;\t----- bird -----\tcodebase_community",
    "675": "SELECT COUNT(*) FROM users WHERE Reputation > 2000 AND Views > 1000;\t----- bird -----\tcodebase_community",
    "676": "SELECT DisplayName FROM users WHERE Age BETWEEN 19 AND 65;\t----- bird -----\tcodebase_community",
    "677": "SELECT COUNT(*) FROM posts WHERE OwnerUserId = (SELECT Id FROM users WHERE DisplayName = 'Jay Stevens') AND YEAR(CreaionDate) = 2010;\t----- bird -----\tcodebase_community",
    "678": "SELECT Id, Title FROM posts WHERE OwnerUserId = (SELECT Id FROM users WHERE DisplayName = 'Harvey Motulsky') ORDER BY ViewCount DESC LIMIT 1;\t----- bird -----\tcodebase_community",
    "679": "SELECT Id, Title FROM posts WHERE Score = (SELECT MAX(Score) FROM posts) LIMIT 1;\t----- bird -----\tcodebase_community",
    "680": "SELECT AVG(Score) FROM posts WHERE OwnerUserId = (SELECT Id FROM users WHERE DisplayName = 'Stephen Turner');\t----- bird -----\tcodebase_community",
    "681": "SELECT DISTINCT u.DisplayName FROM users u JOIN posts p ON u.Id = p.OwnerUserId WHERE p.ViewCount > 20000 AND YEAR(p.CreaionDate) = 2011;\t----- bird -----\tcodebase_community",
    "682": "SELECT p.Id, u.DisplayName FROM posts p JOIN users u ON p.OwnerUserId = u.Id WHERE YEAR(p.CreaionDate) = 2010 ORDER BY p.FavoriteCount DESC LIMIT 1;\t----- bird -----\tcodebase_community",
    "683": "SELECT 100.0 * COUNT(CASE WHEN YEAR(p.CreaionDate) = 2011 AND u.Reputation > 1000 THEN 1 END) / COUNT(*) AS percentage FROM posts p JOIN users u ON p.OwnerUserId = u.Id WHERE YEAR(p.CreaionDate) = 2011;\t----- bird -----\tcodebase_community",
    "684": "SELECT CAST(COUNT(CASE WHEN Age BETWEEN 13 AND 18 THEN 1 END) AS FLOAT) / COUNT(*) AS percentage FROM users;\t----- bird -----\tcodebase_community",
    "685": "SELECT p.ViewCount, u.DisplayName FROM posts p LEFT JOIN users u ON p.LastEditorUserId = u.Id WHERE p.Body = 'Computer Game Datasets' ORDER BY p.LastEditDate DESC LIMIT 1;\t----- bird -----\tcodebase_community",
    "686": "SELECT COUNT(*) FROM posts WHERE ViewCount > (SELECT AVG(ViewCount) FROM posts);\t----- bird -----\tcodebase_community",
    "687": "SELECT COUNT(*) FROM comments WHERE PostId = (SELECT Id FROM posts WHERE Score = (SELECT MAX(Score) FROM posts) LIMIT 1);\t----- bird -----\tcodebase_community",
    "688": "SELECT COUNT(*) FROM posts WHERE ViewCount > 35000 AND CommentCount = 0;\t----- bird -----\tcodebase_community",
    "689": "SELECT u.DisplayName, u.Location FROM posts p JOIN users u ON p.LastEditorUserId = u.Id WHERE p.Id = 183;\t----- bird -----\tcodebase_community",
    "690": "SELECT Name FROM badges WHERE UserId = (SELECT Id FROM users WHERE DisplayName = 'Emmett') ORDER BY Date DESC LIMIT 1;\t----- bird -----\tcodebase_community",
    "691": "SELECT COUNT(*) FROM users WHERE Age BETWEEN 19 AND 65 AND UpVotes > 5000;\t----- bird -----\tcodebase_community",
    "692": "SELECT DATEDIFF(day, u.CreationDate, b.Date) AS DaysToBadge FROM users u JOIN badges b ON u.Id = b.UserId WHERE u.DisplayName = 'Zolomon' ORDER BY b.Date ASC LIMIT 1;\t----- bird -----\tcodebase_community",
    "693": "SELECT (SELECT COUNT(*) FROM posts WHERE OwnerUserId = u.Id) AS PostCount, (SELECT COUNT(*) FROM comments WHERE UserId = u.Id) AS CommentCount FROM users u WHERE u.CreationDate = (SELECT MAX(CreationDate) FROM users);\t----- bird -----\tcodebase_community",
    "694": "SELECT c.Text, c.UserDisplayName FROM comments c JOIN posts p ON c.PostId = p.Id WHERE p.Title = 'Analysing wind data with R' ORDER BY c.CreationDate DESC LIMIT 10;\t----- bird -----\tcodebase_community",
    "695": "SELECT COUNT(DISTINCT UserId) FROM badges WHERE Name = 'Citizen Patrol';\t----- bird -----\tcodebase_community",
    "696": "SELECT COUNT(*) FROM posts WHERE Tags LIKE '%<careers>%';\t----- bird -----\tcodebase_community",
    "697": "SELECT Reputation, Views FROM users WHERE DisplayName = 'Jarrod Dixon';\t----- bird -----\tcodebase_community",
    "698": "SELECT (SELECT COUNT(*) FROM comments WHERE UserId IN (SELECT OwnerUserId FROM posts WHERE Title = 'Clustering 1D data')) AS CommentCount, (SELECT COUNT(*) FROM posts WHERE PostTypeId = 2 AND OwnerUserId IN (SELECT OwnerUserId FROM posts WHERE Title = 'Clustering 1D data')) AS AnswerCount;\t----- bird -----\tcodebase_community",
    "699": "SELECT CreationDate FROM users WHERE DisplayName = 'IrishStat';\t----- bird -----\tcodebase_community",
    "700": "SELECT COUNT(DISTINCT PostId) FROM votes WHERE BountyAmount >= 30;\t----- bird -----\tcodebase_community",
    "701": "SELECT 100.0 * SUM(CASE WHEN Score > 50 THEN 1 ELSE 0 END) / COUNT(*) AS Percentage FROM posts WHERE OwnerUserId = (SELECT Id FROM users ORDER BY Reputation DESC LIMIT 1) AND OwnerUserId IS NOT NULL;\t----- bird -----\tcodebase_community",
    "702": "SELECT COUNT(*) FROM posts WHERE Score < 20;\t----- bird -----\tcodebase_community",
    "703": "SELECT COUNT(*) FROM tags WHERE Id < 15 AND Count <= 20;\t----- bird -----\tcodebase_community",
    "704": "SELECT ExcerptPostId, WikiPostId FROM tags WHERE TagName = 'sample';\t----- bird -----\tcodebase_community",
    "705": "SELECT u.Reputation, u.UpVotes FROM users u JOIN comments c ON u.Id = c.UserId WHERE c.Text = 'fine, you win :)';\t----- bird -----\tcodebase_community",
    "706": "SELECT c.Text FROM comments c JOIN posts p ON c.PostId = p.Id WHERE p.Title LIKE '%linear regression%';\t----- bird -----\tcodebase_community",
    "707": "SELECT c.* FROM comments c JOIN posts p ON c.PostId = p.Id WHERE p.ViewCount BETWEEN 100 AND 150 ORDER BY c.Score DESC LIMIT 1;\t----- bird -----\tcodebase_community",
    "708": "SELECT DISTINCT c.CreationDate, u.Age FROM comments c JOIN users u ON c.UserId = u.Id WHERE c.Text LIKE '%http://%' OR c.Text LIKE '%https://%';\t----- bird -----\tcodebase_community",
    "709": "SELECT COUNT(DISTINCT c.PostId) FROM comments c JOIN posts p ON c.PostId = p.Id WHERE c.Score = 0 AND p.ViewCount < 5;\t----- bird -----\tcodebase_community",
    "710": "SELECT COUNT(*) FROM comments WHERE Score = 0 AND PostId IN (SELECT Id FROM posts WHERE CommentCount = 1);\t----- bird -----\tcodebase_community",
    "711": "SELECT COUNT(DISTINCT c.UserId) FROM comments c JOIN posts p ON c.PostId = p.Id WHERE c.Score = 0 AND p.Tags LIKE '%<product>%' AND EXISTS (SELECT 1 FROM users u WHERE u.Id = c.UserId AND u.Age = 40) AND c.UserId IS NOT NULL;\t----- bird -----\tcodebase_community",
    "712": "SELECT p.Id, c.Text FROM posts p JOIN comments c ON p.Id = c.PostId WHERE p.Title = 'Group differences on a five point Likert item';\t----- bird -----\tcodebase_community",
    "713": "SELECT u.UpVotes FROM users u JOIN comments c ON u.Id = c.UserId WHERE c.Text = 'R is also lazy evaluated.' LIMIT 1;\t----- bird -----\tcodebase_community",
    "714": "SELECT * FROM comments WHERE UserDisplayName = 'Harvey Motulsky';\t----- bird -----\tcodebase_community",
    "715": "SELECT DISTINCT c.UserDisplayName FROM comments c JOIN users u ON c.UserId = u.Id WHERE c.Score BETWEEN 1 AND 5 AND u.DownVotes = 0;\t----- bird -----\tcodebase_community",
    "716": "SELECT 100.0 * COUNT(DISTINCT c.UserId) FILTER (WHERE u.UpVotes = 0) / COUNT(DISTINCT c.UserId) AS percentage FROM comments c JOIN users u ON c.UserId = u.Id WHERE c.Score BETWEEN 5 AND 10 AND c.UserId IS NOT NULL;\t----- bird -----\tcodebase_community",
    "717": "SELECT sp.power_name FROM superpower sp JOIN hero_power hp ON sp.id = hp.power_id JOIN superhero sh ON hp.hero_id = sh.id WHERE sh.superhero_name = '3-D Man';\t----- bird -----\tsuperhero",
    "718": "SELECT COUNT(DISTINCT hero_id) FROM hero_power JOIN superpower ON hero_power.power_id = superpower.id WHERE superpower.power_name = 'Super Strength';\t----- bird -----\tsuperhero",
    "719": "SELECT COUNT(DISTINCT s.id) FROM superhero s JOIN hero_power hp ON s.id = hp.hero_id JOIN superpower sp ON hp.power_id = sp.id WHERE sp.power_name = 'Super Strength' AND s.height_cm > 200;\t----- bird -----\tsuperhero",
    "720": "SELECT full_name FROM superhero s JOIN hero_power hp ON s.id = hp.hero_id GROUP BY s.id, full_name HAVING COUNT(hp.power_id) > 15;\t----- bird -----\tsuperhero",
    "721": "SELECT COUNT(*) FROM superhero s JOIN colour c ON s.eye_colour_id = c.id WHERE c.colour = 'Blue';\t----- bird -----\tsuperhero",
    "722": "SELECT c.colour FROM superhero s JOIN colour c ON s.skin_colour_id = c.id WHERE s.superhero_name = 'Apocalypse';\t----- bird -----\tsuperhero",
    "723": "SELECT COUNT(DISTINCT s.id) FROM superhero s JOIN colour c ON s.eye_colour_id = c.id JOIN hero_power hp ON s.id = hp.hero_id JOIN superpower sp ON hp.power_id = sp.id WHERE c.colour = 'Blue' AND sp.power_name = 'Agility';\t----- bird -----\tsuperhero",
    "724": "SELECT s.superhero_name FROM superhero s JOIN colour c1 ON s.eye_colour_id = c1.id JOIN colour c2 ON s.hair_colour_id = c2.id WHERE c1.colour = 'Blue' AND c2.colour = 'Blond';\t----- bird -----\tsuperhero",
    "725": "SELECT COUNT(*) FROM superhero s JOIN publisher p ON s.publisher_id = p.id WHERE p.publisher_name = 'Marvel Comics';\t----- bird -----\tsuperhero",
    "726": "SELECT superhero_name, height_cm FROM superhero JOIN publisher ON superhero.publisher_id = publisher.id WHERE publisher_name = 'Marvel Comics' ORDER BY height_cm DESC;\t----- bird -----\tsuperhero",
    "727": "SELECT publisher.publisher_name FROM superhero JOIN publisher ON superhero.publisher_id = publisher.id WHERE superhero.superhero_name = 'Sauron';\t----- bird -----\tsuperhero",
    "728": "SELECT s.superhero_name, c.colour AS eye_colour, COUNT(s.id) AS colour_count FROM superhero s JOIN colour c ON s.eye_colour_id = c.id JOIN publisher p ON s.publisher_id = p.id WHERE p.publisher_name = 'Marvel Comics' GROUP BY s.superhero_name, c.colour ORDER BY colour_count DESC;\t----- bird -----\tsuperhero",
    "729": "SELECT AVG(height_cm) FROM superhero JOIN publisher ON superhero.publisher_id = publisher.id WHERE publisher.publisher_name = 'Marvel Comics';\t----- bird -----\tsuperhero",
    "730": "SELECT s.superhero_name FROM superhero s JOIN publisher p ON s.publisher_id = p.id JOIN hero_power hp ON s.id = hp.hero_id JOIN superpower sp ON hp.power_id = sp.id WHERE p.publisher_name = 'Marvel Comics' AND sp.power_name = 'Super Strength';\t----- bird -----\tsuperhero",
    "731": "SELECT COUNT(*) FROM superhero s JOIN publisher p ON s.publisher_id = p.id WHERE p.publisher_name = 'DC Comics';\t----- bird -----\tsuperhero",
    "732": "SELECT p.publisher_name FROM publisher p JOIN superhero s ON p.id = s.publisher_id JOIN hero_attribute ha ON s.id = ha.hero_id JOIN attribute a ON ha.attribute_id = a.id WHERE a.attribute_name = 'Speed' AND ha.attribute_value = (SELECT MIN(ha2.attribute_value) FROM hero_attribute ha2 JOIN attribute a2 ON ha2.attribute_id = a2.id WHERE a2.attribute_name = 'Speed') LIMIT 1;\t----- bird -----\tsuperhero",
    "733": "SELECT COUNT(*) FROM superhero s JOIN colour c ON s.eye_colour_id = c.id JOIN publisher p ON s.publisher_id = p.id WHERE c.colour = 'Gold' AND p.publisher_name = 'Marvel Comics';\t----- bird -----\tsuperhero",
    "734": "SELECT publisher.publisher_name FROM superhero JOIN publisher ON superhero.publisher_id = publisher.id WHERE superhero.superhero_name = 'Blue Beetle II';\t----- bird -----\tsuperhero",
    "735": "SELECT COUNT(*) FROM superhero s JOIN colour c ON s.hair_colour_id = c.id WHERE c.colour = 'Blond';\t----- bird -----\tsuperhero",
    "736": "SELECT s.superhero_name FROM superhero s JOIN hero_attribute ha ON s.id = ha.hero_id JOIN attribute a ON ha.attribute_id = a.id WHERE a.attribute_name = 'Intelligence' ORDER BY ha.attribute_value ASC LIMIT 1;\t----- bird -----\tsuperhero",
    "737": "SELECT r.race FROM superhero s JOIN race r ON s.race_id = r.id WHERE s.superhero_name = 'Copycat';\t----- bird -----\tsuperhero",
    "738": "SELECT s.superhero_name FROM superhero s JOIN hero_attribute ha ON s.id = ha.hero_id JOIN attribute a ON ha.attribute_id = a.id WHERE a.attribute_name = 'Durability' AND ha.attribute_value < 50;\t----- bird -----\tsuperhero",
    "739": "SELECT s.superhero_name FROM superhero s JOIN hero_power hp ON s.id = hp.hero_id JOIN superpower sp ON hp.power_id = sp.id WHERE sp.power_name = 'Death Touch';\t----- bird -----\tsuperhero",
    "740": "SELECT COUNT(DISTINCT s.id) FROM superhero s JOIN gender g ON s.gender_id = g.id JOIN hero_attribute ha ON s.id = ha.hero_id JOIN attribute a ON ha.attribute_id = a.id WHERE g.gender = 'Female' AND a.attribute_name = 'Strength' AND ha.attribute_value = 100;\t----- bird -----\tsuperhero",
    "741": "SELECT s.superhero_name FROM superhero s JOIN hero_power hp ON s.id = hp.hero_id GROUP BY s.id, s.superhero_name ORDER BY COUNT(hp.power_id) DESC LIMIT 1;\t----- bird -----\tsuperhero",
    "742": "SELECT COUNT(*) FROM superhero s JOIN race r ON s.race_id = r.id WHERE r.race = 'Vampire';\t----- bird -----\tsuperhero",
    "743": "SELECT (COUNT(CASE WHEN a.alignment = 'Bad' THEN 1 END) * 100.0 / COUNT(s.id)) AS percentage_bad_alignment, COUNT(CASE WHEN a.alignment = 'Bad' AND p.publisher_name = 'Marvel Comics' THEN 1 END) AS marvel_bad_heroes FROM superhero s JOIN alignment a ON s.alignment_id = a.id JOIN publisher p ON s.publisher_id = p.id;\t----- bird -----\tsuperhero",
    "744": "SELECT (SELECT COUNT(*) FROM superhero s JOIN publisher p ON s.publisher_id = p.id WHERE p.publisher_name = 'Marvel Comics') - (SELECT COUNT(*) FROM superhero s JOIN publisher p ON s.publisher_id = p.id WHERE p.publisher_name = 'DC Comics') AS difference;\t----- bird -----\tsuperhero",
    "745": "SELECT id FROM publisher WHERE publisher_name = 'Star Trek';\t----- bird -----\tsuperhero",
    "746": "SELECT AVG(attribute_value) FROM hero_attribute;\t----- bird -----\tsuperhero",
    "747": "SELECT COUNT(*) FROM superhero WHERE full_name IS NULL;\t----- bird -----\tsuperhero",
    "748": "SELECT colour.colour FROM superhero JOIN colour ON superhero.eye_colour_id = colour.id WHERE superhero.id = 75;\t----- bird -----\tsuperhero",
    "749": "SELECT sp.power_name FROM superpower sp JOIN hero_power hp ON sp.id = hp.power_id JOIN superhero sh ON hp.hero_id = sh.id WHERE sh.superhero_name = 'Deathlok';\t----- bird -----\tsuperhero",
    "750": "SELECT AVG(s.weight_kg) FROM superhero s JOIN gender g ON s.gender_id = g.id WHERE g.gender = 'Female';\t----- bird -----\tsuperhero",
    "751": "SELECT DISTINCT sp.power_name FROM superpower sp JOIN hero_power hp ON sp.id = hp.power_id JOIN superhero sh ON hp.hero_id = sh.id JOIN gender g ON sh.gender_id = g.id WHERE g.gender = 'Male' LIMIT 5;\t----- bird -----\tsuperhero",
    "752": "SELECT superhero_name FROM superhero JOIN race ON superhero.race_id = race.id WHERE race.race = 'Alien';\t----- bird -----\tsuperhero",
    "753": "SELECT superhero.superhero_name FROM superhero JOIN colour ON superhero.eye_colour_id = colour.id WHERE superhero.height_cm BETWEEN 170 AND 190 AND colour.colour = 'No Colour';\t----- bird -----\tsuperhero",
    "754": "SELECT sp.power_name FROM superpower sp JOIN hero_power hp ON sp.id = hp.power_id WHERE hp.hero_id = 56;\t----- bird -----\tsuperhero",
    "755": "SELECT full_name FROM superhero JOIN race ON superhero.race_id = race.id WHERE race.race = 'Demi-God' LIMIT 5;\t----- bird -----\tsuperhero",
    "756": "SELECT COUNT(*) FROM superhero WHERE alignment_id = (SELECT id FROM alignment WHERE alignment = 'Bad');\t----- bird -----\tsuperhero",
    "757": "SELECT race.race FROM superhero JOIN race ON superhero.race_id = race.id WHERE superhero.weight_kg = 169;\t----- bird -----\tsuperhero",
    "758": "SELECT c.colour FROM superhero s JOIN race r ON s.race_id = r.id JOIN colour c ON s.hair_colour_id = c.id WHERE r.race = 'human' AND s.height_cm = 185;\t----- bird -----\tsuperhero",
    "759": "SELECT c.colour FROM superhero s JOIN colour c ON s.eye_colour_id = c.id WHERE s.weight_kg = (SELECT MAX(weight_kg) FROM superhero);\t----- bird -----\tsuperhero",
    "760": "SELECT 100.0 * SUM(CASE WHEN publisher.publisher_name = 'Marvel Comics' THEN 1 ELSE 0 END) / COUNT(superhero.id) AS percentage_marvel FROM superhero JOIN publisher ON superhero.publisher_id = publisher.id WHERE superhero.height_cm BETWEEN 150 AND 180;\t----- bird -----\tsuperhero",
    "761": "SELECT s.superhero_name FROM superhero s JOIN gender g ON s.gender_id = g.id WHERE g.gender = 'Male' AND s.weight_kg > (SELECT AVG(weight_kg)*0.79 FROM superhero);\t----- bird -----\tsuperhero",
    "762": "SELECT sp.power_name FROM hero_power hp JOIN superpower sp ON hp.power_id = sp.id GROUP BY sp.power_name ORDER BY COUNT(*) DESC LIMIT 1;\t----- bird -----\tsuperhero",
    "763": "SELECT ha.attribute_value FROM hero_attribute ha JOIN superhero s ON ha.hero_id = s.id WHERE s.superhero_name = 'Abomination';\t----- bird -----\tsuperhero",
    "764": "SELECT sp.power_name FROM superpower sp JOIN hero_power hp ON sp.id = hp.power_id WHERE hp.hero_id = 1;\t----- bird -----\tsuperhero",
    "765": "SELECT COUNT(DISTINCT hero_id) FROM hero_power JOIN superpower ON hero_power.power_id = superpower.id WHERE superpower.power_name = 'stealth';\t----- bird -----\tsuperhero",
    "766": "SELECT s.full_name FROM superhero s JOIN hero_attribute ha ON s.id = ha.hero_id JOIN attribute a ON ha.attribute_id = a.id WHERE a.attribute_name = 'strength' ORDER BY ha.attribute_value DESC LIMIT 1;\t----- bird -----\tsuperhero",
    "767": "SELECT COUNT(id) / NULLIF(SUM(CASE WHEN skin_colour_id = 1 THEN 1 ELSE 0 END), 0) AS average_no_skin_colour FROM superhero;\t----- bird -----\tsuperhero",
    "768": "SELECT COUNT(*) FROM superhero s JOIN publisher p ON s.publisher_id = p.id WHERE p.publisher_name = 'Dark Horse Comics';\t----- bird -----\tsuperhero",
    "769": "SELECT s.superhero_name FROM superhero s JOIN publisher p ON s.publisher_id = p.id JOIN hero_attribute ha ON s.id = ha.hero_id JOIN attribute a ON ha.attribute_id = a.id WHERE a.attribute_name = 'durability' AND p.publisher_name = 'Dark Horse Comics' ORDER BY ha.attribute_value DESC LIMIT 1;\t----- bird -----\tsuperhero",
    "770": "SELECT c.colour FROM superhero s JOIN colour c ON s.eye_colour_id = c.id WHERE s.full_name = 'Abraham Sapien';\t----- bird -----\tsuperhero",
    "771": "SELECT s.superhero_name FROM superhero s JOIN hero_power hp ON s.id = hp.hero_id JOIN superpower sp ON hp.power_id = sp.id WHERE sp.power_name = 'Flight';\t----- bird -----\tsuperhero",
    "772": "SELECT ec.colour AS eye_colour, hc.colour AS hair_colour, sc.colour AS skin_colour FROM superhero s JOIN gender g ON s.gender_id = g.id JOIN publisher p ON s.publisher_id = p.id JOIN colour ec ON s.eye_colour_id = ec.id JOIN colour hc ON s.hair_colour_id = hc.id JOIN colour sc ON s.skin_colour_id = sc.id WHERE g.gender = 'Female' AND p.publisher_name = 'Dark Horse Comics';\t----- bird -----\tsuperhero",
    "773": "SELECT s.superhero_name, p.publisher_name FROM superhero s JOIN publisher p ON s.publisher_id = p.id WHERE s.eye_colour_id = s.hair_colour_id AND s.hair_colour_id = s.skin_colour_id;\t----- bird -----\tsuperhero",
    "774": "SELECT r.race FROM superhero s JOIN race r ON s.race_id = r.id WHERE s.superhero_name = 'A-Bomb';\t----- bird -----\tsuperhero",
    "775": "SELECT (COUNT(CASE WHEN c.colour = 'Blue' THEN 1 END) * 100.0) / COUNT(*) AS percentage FROM superhero s JOIN gender g ON s.gender_id = g.id JOIN colour c ON s.skin_colour_id = c.id WHERE g.gender = 'Female';\t----- bird -----\tsuperhero",
    "776": "SELECT superhero.superhero_name, race.race FROM superhero JOIN race ON superhero.race_id = race.id WHERE superhero.full_name = 'Charles Chandler';\t----- bird -----\tsuperhero",
    "777": "SELECT g.gender FROM superhero s JOIN gender g ON s.gender_id = g.id WHERE s.superhero_name = 'Agent 13';\t----- bird -----\tsuperhero",
    "778": "SELECT s.superhero_name FROM superhero s JOIN hero_power hp ON s.id = hp.hero_id JOIN superpower sp ON hp.power_id = sp.id WHERE sp.power_name = 'Adaptation';\t----- bird -----\tsuperhero",
    "779": "SELECT COUNT(*) FROM hero_power hp JOIN superhero s ON hp.hero_id = s.id WHERE s.superhero_name = 'Amazo';\t----- bird -----\tsuperhero",
    "780": "SELECT sp.power_name FROM superhero sh JOIN hero_power hp ON sh.id = hp.hero_id JOIN superpower sp ON hp.power_id = sp.id WHERE sh.full_name = 'Hunter Zolomon';\t----- bird -----\tsuperhero",
    "781": "SELECT superhero.superhero_name, superhero.height_cm FROM superhero JOIN colour ON superhero.eye_colour_id = colour.id WHERE colour.colour = 'Amber';\t----- bird -----\tsuperhero",
    "782": "SELECT s.superhero_name FROM superhero s JOIN colour c_eye ON s.eye_colour_id = c_eye.id JOIN colour c_hair ON s.hair_colour_id = c_hair.id WHERE c_eye.colour = 'Black' AND c_hair.colour = 'Black';\t----- bird -----\tsuperhero",
    "783": "SELECT DISTINCT c_eye.colour FROM superhero s JOIN colour c_skin ON s.skin_colour_id = c_skin.id JOIN colour c_eye ON s.eye_colour_id = c_eye.id WHERE c_skin.colour = 'Gold';\t----- bird -----\tsuperhero",
    "784": "SELECT superhero.full_name FROM superhero JOIN race ON superhero.race_id = race.id WHERE race.race = 'Vampire';\t----- bird -----\tsuperhero",
    "785": "SELECT superhero_name FROM superhero JOIN alignment ON superhero.alignment_id = alignment.id WHERE alignment.alignment = 'Neutral';\t----- bird -----\tsuperhero",
    "786": "SELECT COUNT(DISTINCT ha.hero_id) FROM hero_attribute ha JOIN attribute a ON ha.attribute_id = a.id WHERE a.attribute_name = 'Strength' AND ha.attribute_value = (SELECT MAX(attribute_value) FROM hero_attribute ha2 JOIN attribute a2 ON ha2.attribute_id = a2.id WHERE a2.attribute_name = 'Strength');\t----- bird -----\tsuperhero",
    "787": "SELECT r.race, a.alignment FROM superhero s JOIN race r ON s.race_id = r.id JOIN alignment a ON s.alignment_id = a.id WHERE s.superhero_name = 'Cameron Hicks';\t----- bird -----\tsuperhero",
    "788": "SELECT 100.0 * COUNT(CASE WHEN g.gender = 'Female' THEN 1 END) / COUNT(*) AS percent_female_heroes FROM superhero s JOIN gender g ON s.gender_id = g.id JOIN publisher p ON s.publisher_id = p.id WHERE p.publisher_name = 'Marvel Comics';\t----- bird -----\tsuperhero",
    "789": "SELECT AVG(s.weight_kg) FROM superhero s JOIN race r ON s.race_id = r.id WHERE r.race = 'Alien';\t----- bird -----\tsuperhero",
    "790": "SELECT (SELECT weight_kg FROM superhero WHERE full_name = 'Emil Blonsky') - (SELECT weight_kg FROM superhero WHERE full_name = 'Charles Chandler') AS difference;\t----- bird -----\tsuperhero",
    "791": "SELECT superhero_name, height_cm FROM superhero;\t----- bird -----\tsuperhero",
    "792": "SELECT sp.power_name FROM superhero sh JOIN hero_power hp ON sh.id = hp.hero_id JOIN superpower sp ON hp.power_id = sp.id WHERE sh.superhero_name = 'Abomination';\t----- bird -----\tsuperhero",
    "793": "SELECT COUNT(*) FROM superhero WHERE race_id = 21 AND gender_id = 1;\t----- bird -----\tsuperhero",
    "794": "SELECT s.superhero_name FROM superhero s JOIN hero_attribute ha ON s.id = ha.hero_id JOIN attribute a ON ha.attribute_id = a.id WHERE a.attribute_name = 'Speed' ORDER BY ha.attribute_value DESC LIMIT 1;\t----- bird -----\tsuperhero",
    "795": "SELECT COUNT(*) FROM superhero WHERE alignment_id = 3;\t----- bird -----\tsuperhero",
    "796": "SELECT a.attribute_name, ha.attribute_value FROM superhero s JOIN hero_attribute ha ON s.id = ha.hero_id JOIN attribute a ON ha.attribute_id = a.id WHERE s.superhero_name = '3-D Man';\t----- bird -----\tsuperhero",
    "797": "SELECT s.superhero_name FROM superhero s JOIN colour c_eye ON s.eye_colour_id = c_eye.id JOIN colour c_hair ON s.hair_colour_id = c_hair.id WHERE c_eye.colour = 'Blue' AND c_hair.colour = 'Brown';\t----- bird -----\tsuperhero",
    "798": "SELECT s.superhero_name, p.publisher_name FROM superhero s JOIN publisher p ON s.publisher_id = p.id WHERE s.superhero_name IN ('Hawkman', 'Karate Kid', 'Speedy');\t----- bird -----\tsuperhero",
    "799": "SELECT COUNT(*) FROM superhero WHERE publisher_id = 1;\t----- bird -----\tsuperhero",
    "800": "SELECT (COUNT(CASE WHEN eye_colour_id = 7 THEN 1 END) * 100.0) / COUNT(*) AS percentage_blue_eyed_superheroes FROM superhero;\t----- bird -----\tsuperhero",
    "801": "SELECT CAST(SUM(CASE WHEN g.gender = 'Male' THEN 1 ELSE 0 END) AS FLOAT) / NULLIF(SUM(CASE WHEN g.gender = 'Female' THEN 1 ELSE 0 END), 0) AS ratio FROM superhero s JOIN gender g ON s.gender_id = g.id;\t----- bird -----\tsuperhero",
    "802": "SELECT superhero_name FROM superhero WHERE height_cm = (SELECT MAX(height_cm) FROM superhero);\t----- bird -----\tsuperhero",
    "803": "SELECT id FROM superpower WHERE power_name = 'cryokinesis';\t----- bird -----\tsuperhero",
    "804": "SELECT superhero_name FROM superhero WHERE id = 294;\t----- bird -----\tsuperhero",
    "805": "SELECT full_name FROM superhero WHERE weight_kg = 0 OR weight_kg IS NULL;\t----- bird -----\tsuperhero",
    "806": "SELECT c.colour FROM superhero s JOIN colour c ON s.eye_colour_id = c.id WHERE s.full_name = 'Karen Beecher-Duncan';\t----- bird -----\tsuperhero",
    "807": "SELECT sp.power_name FROM superhero sh JOIN hero_power hp ON sh.id = hp.hero_id JOIN superpower sp ON hp.power_id = sp.id WHERE sh.full_name = 'Helen Parr';\t----- bird -----\tsuperhero",
    "808": "SELECT r.race FROM superhero s JOIN race r ON s.race_id = r.id WHERE s.weight_kg = 108 AND s.height_cm = 188;\t----- bird -----\tsuperhero",
    "809": "SELECT publisher.publisher_name FROM superhero JOIN publisher ON superhero.publisher_id = publisher.id WHERE superhero.id = 38;\t----- bird -----\tsuperhero",
    "810": "SELECT r.race FROM race r JOIN superhero s ON r.id = s.race_id JOIN hero_attribute ha ON s.id = ha.hero_id WHERE ha.attribute_value = (SELECT MAX(attribute_value) FROM hero_attribute) LIMIT 1;\t----- bird -----\tsuperhero",
    "811": "SELECT a.alignment, sp.power_name FROM superhero s JOIN alignment a ON s.alignment_id = a.id JOIN hero_power hp ON s.id = hp.hero_id JOIN superpower sp ON hp.power_id = sp.id WHERE s.superhero_name = 'Atom IV';\t----- bird -----\tsuperhero",
    "812": "SELECT full_name FROM superhero JOIN colour ON superhero.eye_colour_id = colour.id WHERE colour.colour = 'Blue' LIMIT 5;\t----- bird -----\tsuperhero",
    "813": "SELECT AVG(hero_attribute.attribute_value) FROM hero_attribute JOIN superhero ON hero_attribute.hero_id = superhero.id WHERE superhero.alignment_id = 3;\t----- bird -----\tsuperhero",
    "814": "SELECT DISTINCT c.colour FROM superhero s JOIN hero_attribute ha ON s.id = ha.hero_id JOIN colour c ON s.skin_colour_id = c.id WHERE ha.attribute_value = 100;\t----- bird -----\tsuperhero",
    "815": "SELECT COUNT(*) FROM superhero WHERE alignment_id = 1 AND gender_id = 2;\t----- bird -----\tsuperhero",
    "816": "SELECT DISTINCT s.superhero_name FROM superhero s JOIN hero_attribute ha ON s.id = ha.hero_id WHERE ha.attribute_value BETWEEN 75 AND 80;\t----- bird -----\tsuperhero",
    "817": "SELECT race.race FROM superhero JOIN colour ON superhero.hair_colour_id = colour.id JOIN gender ON superhero.gender_id = gender.id JOIN race ON superhero.race_id = race.id WHERE colour.colour = 'blue' AND gender.gender = 'male';\t----- bird -----\tsuperhero",
    "818": "SELECT (SUM(CASE WHEN g.id = 2 THEN 1 ELSE 0 END) * 100.0) / COUNT(*) AS female_percentage FROM superhero s JOIN alignment a ON s.alignment_id = a.id JOIN gender g ON s.gender_id = g.id WHERE a.id = 2;\t----- bird -----\tsuperhero",
    "819": "SELECT SUM(CASE WHEN s.eye_colour_id = 7 THEN 1 ELSE 0 END) - SUM(CASE WHEN s.eye_colour_id = 1 THEN 1 ELSE 0 END) AS difference FROM superhero s WHERE s.weight_kg = 0 OR s.weight_kg IS NULL;\t----- bird -----\tsuperhero",
    "820": "SELECT ha.attribute_value FROM hero_attribute ha JOIN attribute a ON ha.attribute_id = a.id JOIN superhero s ON ha.hero_id = s.id WHERE s.superhero_name = 'Hulk' AND a.attribute_name = 'Strength';\t----- bird -----\tsuperhero",
    "821": "SELECT sp.power_name FROM superhero sh JOIN hero_power hp ON sh.id = hp.hero_id JOIN superpower sp ON hp.power_id = sp.id WHERE sh.superhero_name = 'Ajax';\t----- bird -----\tsuperhero",
    "822": "SELECT COUNT(*) FROM superhero s JOIN colour c ON s.skin_colour_id = c.id JOIN alignment a ON s.alignment_id = a.id WHERE c.colour = 'Green' AND a.alignment = 'Bad';\t----- bird -----\tsuperhero",
    "823": "SELECT COUNT(*) FROM superhero s JOIN gender g ON s.gender_id = g.id JOIN publisher p ON s.publisher_id = p.id WHERE g.gender = 'Female' AND p.publisher_name = 'Marvel Comics';\t----- bird -----\tsuperhero",
    "824": "SELECT s.superhero_name FROM superhero s JOIN hero_power hp ON s.id = hp.hero_id JOIN superpower sp ON hp.power_id = sp.id WHERE sp.power_name = 'Wind Control' ORDER BY s.superhero_name ASC;\t----- bird -----\tsuperhero",
    "825": "SELECT g.gender FROM superhero s JOIN gender g ON s.gender_id = g.id JOIN hero_power hp ON s.id = hp.hero_id JOIN superpower sp ON hp.power_id = sp.id WHERE sp.power_name = 'Phoenix Force';\t----- bird -----\tsuperhero",
    "826": "SELECT s.superhero_name FROM superhero s JOIN publisher p ON s.publisher_id = p.id WHERE p.publisher_name = 'DC Comics' ORDER BY s.weight_kg DESC LIMIT 1;\t----- bird -----\tsuperhero",
    "827": "SELECT AVG(s.height_cm) FROM superhero s JOIN race r ON s.race_id = r.id JOIN publisher p ON s.publisher_id = p.id WHERE r.race <> 'Human' AND p.publisher_name = 'Dark Horse Comics';\t----- bird -----\tsuperhero",
    "828": "SELECT COUNT(DISTINCT ha.hero_id) FROM hero_attribute ha JOIN attribute a ON ha.attribute_id = a.id WHERE a.attribute_name = 'Speed' AND ha.attribute_value = 100;\t----- bird -----\tsuperhero",
    "829": "SELECT (SELECT COUNT(*) FROM superhero s JOIN publisher p ON s.publisher_id = p.id WHERE p.publisher_name = 'DC Comics') - (SELECT COUNT(*) FROM superhero s JOIN publisher p ON s.publisher_id = p.id WHERE p.publisher_name = 'Marvel Comics') AS difference;\t----- bird -----\tsuperhero",
    "830": "SELECT a.attribute_name FROM hero_attribute ha JOIN attribute a ON ha.attribute_id = a.id JOIN superhero s ON ha.hero_id = s.id WHERE s.superhero_name = 'Black Panther' ORDER BY ha.attribute_value ASC LIMIT 1;\t----- bird -----\tsuperhero",
    "831": "SELECT c.colour FROM superhero s JOIN colour c ON s.eye_colour_id = c.id WHERE s.superhero_name = 'Abomination';\t----- bird -----\tsuperhero",
    "832": "SELECT superhero_name FROM superhero WHERE height_cm = (SELECT MAX(height_cm) FROM superhero);\t----- bird -----\tsuperhero",
    "833": "SELECT superhero_name FROM superhero WHERE full_name = 'Charles Chandler';\t----- bird -----\tsuperhero",
    "834": "SELECT (SUM(CASE WHEN g.gender = 'Female' THEN 1 ELSE 0 END) * 100.0) / COUNT(*) AS percentage_female FROM superhero s JOIN publisher p ON s.publisher_id = p.id JOIN gender g ON s.gender_id = g.id WHERE p.publisher_name = 'George Lucas';\t----- bird -----\tsuperhero",
    "835": "SELECT 100.0 * SUM(CASE WHEN a.alignment = 'Good' THEN 1 ELSE 0 END) / COUNT(*) AS percentage_good_superheroes FROM superhero s JOIN publisher p ON s.publisher_id = p.id JOIN alignment a ON s.alignment_id = a.id WHERE p.publisher_name = 'Marvel Comics';\t----- bird -----\tsuperhero",
    "836": "SELECT COUNT(*) FROM superhero WHERE full_name LIKE 'John%';\t----- bird -----\tsuperhero",
    "837": "SELECT hero_id FROM hero_attribute WHERE attribute_value = (SELECT MIN(attribute_value) FROM hero_attribute) LIMIT 1;\t----- bird -----\tsuperhero",
    "838": "SELECT full_name FROM superhero WHERE superhero_name = 'Alien';\t----- bird -----\tsuperhero",
    "839": "SELECT full_name FROM superhero JOIN colour ON superhero.eye_colour_id = colour.id WHERE weight_kg < 100 AND colour.colour = 'brown';\t----- bird -----\tsuperhero",
    "840": "SELECT ha.attribute_value FROM hero_attribute ha JOIN superhero s ON ha.hero_id = s.id WHERE s.superhero_name = 'Aquababy';\t----- bird -----\tsuperhero",
    "841": "SELECT weight_kg, race.race FROM superhero JOIN race ON superhero.race_id = race.id WHERE superhero.id = 40;\t----- bird -----\tsuperhero",
    "842": "SELECT AVG(height_cm) FROM superhero JOIN alignment ON superhero.alignment_id = alignment.id WHERE alignment.alignment = 'neutral';\t----- bird -----\tsuperhero",
    "843": "SELECT hero_id FROM hero_power hp JOIN superpower sp ON hp.power_id = sp.id WHERE sp.power_name = 'Intelligence';\t----- bird -----\tsuperhero",
    "844": "SELECT c.colour FROM superhero s JOIN colour c ON s.eye_colour_id = c.id WHERE s.superhero_name = 'Blackwulf';\t----- bird -----\tsuperhero",
    "845": "SELECT DISTINCT sp.power_name FROM superhero sh JOIN hero_power hp ON sh.id = hp.hero_id JOIN superpower sp ON hp.power_id = sp.id WHERE sh.height_cm > (SELECT AVG(height_cm) * 0.8 FROM superhero);\t----- bird -----\tsuperhero",
    "846": "SELECT d.driverRef FROM qualifying q JOIN drivers d ON q.driverId = d.driverId WHERE q.raceId = 20 AND q.q1 IS NOT NULL ORDER BY q.q1 DESC LIMIT 5;\t----- bird -----\tformula_1",
    "847": "SELECT d.surname FROM qualifying q JOIN drivers d ON q.driverId = d.driverId WHERE q.raceId = 19 ORDER BY q.q2 LIMIT 1;\t----- bird -----\tformula_1",
    "848": "SELECT DISTINCT r.year FROM races r JOIN circuits c ON r.circuitId = c.circuitId WHERE c.location = 'Shanghai';\t----- bird -----\tformula_1",
    "849": "SELECT races.url FROM races JOIN circuits ON races.circuitId = circuits.circuitId WHERE circuits.name = 'Circuit de Barcelona-Catalunya';\t----- bird -----\tformula_1",
    "850": "SELECT races.name FROM races JOIN circuits ON races.circuitId = circuits.circuitId WHERE circuits.country = 'Germany';\t----- bird -----\tformula_1",
    "851": "SELECT r.position FROM results r JOIN races ra ON r.raceId = ra.raceId JOIN constructors c ON r.constructorId = c.constructorId JOIN circuits ci ON ra.circuitId = ci.circuitId WHERE c.name = 'Renault';\t----- bird -----\tformula_1",
    "852": "SELECT COUNT(*) FROM races r JOIN circuits c ON r.circuitId = c.circuitId WHERE r.year = 2010 AND c.continent NOT IN ('Asia', 'Europe');\t----- bird -----\tformula_1",
    "853": "SELECT races.name FROM races JOIN circuits ON races.circuitId = circuits.circuitId WHERE circuits.country = 'Spain';\t----- bird -----\tformula_1",
    "854": "SELECT lat, lng FROM circuits WHERE circuitId IN (SELECT circuitId FROM races WHERE name = 'Australian Grand Prix');\t----- bird -----\tformula_1",
    "855": "SELECT * FROM races WHERE circuitId = (SELECT circuitId FROM circuits WHERE name = 'Sepang International Circuit');\t----- bird -----\tformula_1",
    "856": "SELECT time FROM races JOIN circuits ON races.circuitId = circuits.circuitId WHERE circuits.name = 'Sepang International Circuit';\t----- bird -----\tformula_1",
    "857": "SELECT lat, lng FROM circuits WHERE circuitId = (SELECT circuitId FROM races WHERE name = 'Abu Dhabi Grand Prix' LIMIT 1);\t----- bird -----\tformula_1",
    "858": "SELECT c.country FROM constructors c JOIN constructorResults cr ON c.constructorId = cr.constructorId WHERE cr.raceId = 24 AND cr.points = 1;\t----- bird -----\tformula_1",
    "859": "SELECT q.q1 FROM qualifying q JOIN drivers d ON q.driverId = d.driverId WHERE d.forename = 'Bruno' AND d.surname = 'Senna' AND q.raceId = 354;\t----- bird -----\tformula_1",
    "860": "SELECT d.nationality FROM qualifying q JOIN drivers d ON q.driverId = d.driverId WHERE q.raceId = 355 AND q.q2 = '0:01:40' LIMIT 1;\t----- bird -----\tformula_1",
    "861": "SELECT number FROM qualifying WHERE raceId = 903 AND q3 = '0:01:54';\t----- bird -----\tformula_1",
    "862": "SELECT COUNT(*) FROM results r JOIN races ra ON r.raceId = ra.raceId WHERE ra.name = 'Bahrain Grand Prix' AND ra.year = 2007 AND r.time IS NULL;\t----- bird -----\tformula_1",
    "863": "SELECT s.url FROM seasons s JOIN races r ON s.year = r.year WHERE r.raceId = 901;\t----- bird -----\tformula_1",
    "864": "SELECT COUNT(DISTINCT driverId) FROM results WHERE raceId = (SELECT raceId FROM races WHERE date = '2015-11-29') AND time IS NOT NULL;\t----- bird -----\tformula_1",
    "865": "SELECT d.driverId, d.forename, d.surname, d.dob FROM drivers d JOIN results r ON d.driverId = r.driverId WHERE r.raceId = 592 AND r.time IS NOT NULL ORDER BY d.dob ASC LIMIT 1;\t----- bird -----\tformula_1",
    "866": "SELECT d.url FROM lapTimes lt JOIN drivers d ON lt.driverId = d.driverId WHERE lt.raceId = 161 AND lt.time = '0:01:27' LIMIT 1;\t----- bird -----\tformula_1",
    "867": "SELECT d.nationality FROM results r JOIN drivers d ON r.driverId = d.driverId WHERE r.raceId = 933 ORDER BY r.fastestLapSpeed DESC LIMIT 1;\t----- bird -----\tformula_1",
    "868": "SELECT circuits.lat, circuits.lng FROM races JOIN circuits ON races.circuitId = circuits.circuitId WHERE races.name = 'Malaysian Grand Prix' LIMIT 1;\t----- bird -----\tformula_1",
    "869": "SELECT c.url FROM constructors c JOIN constructorResults cr ON c.constructorId = cr.constructorId WHERE cr.raceId = 9 AND cr.points = (SELECT MAX(points) FROM constructorResults WHERE raceId = 9) LIMIT 1;\t----- bird -----\tformula_1",
    "870": "SELECT q1 FROM qualifying JOIN drivers ON qualifying.driverId = drivers.driverId WHERE drivers.forename = 'Lucas' AND drivers.surname = 'di Grassi' AND qualifying.raceId = 345;\t----- bird -----\tformula_1",
    "871": "SELECT d.nationality FROM qualifying q JOIN drivers d ON q.driverId = d.driverId WHERE q.raceId = 347 AND q.q2 = '0:01:15' LIMIT 1;\t----- bird -----\tformula_1",
    "872": "SELECT d.code FROM qualifying q JOIN drivers d ON q.driverId = d.driverId WHERE q.raceId = 45 AND q.q3 = '0:01:33' LIMIT 1;\t----- bird -----\tformula_1",
    "873": "SELECT time FROM results JOIN drivers ON results.driverId = drivers.driverId WHERE results.raceId = 743 AND drivers.forename = 'Bruce' AND drivers.surname = 'McLaren';\t----- bird -----\tformula_1",
    "874": "SELECT d.forename, d.surname FROM results r JOIN races ra ON r.raceId = ra.raceId JOIN drivers d ON r.driverId = d.driverId WHERE ra.name = 'San Marino Grand Prix' AND ra.year = 2006 AND r.position = 2;\t----- bird -----\tformula_1",
    "875": "SELECT s.url FROM seasons s JOIN races r ON s.year = r.year WHERE r.raceId = 901;\t----- bird -----\tformula_1",
    "876": "SELECT COUNT(*) FROM results r JOIN races ra ON r.raceId = ra.raceId WHERE ra.date = '2015-11-29' AND r.positionText != 'Finished';\t----- bird -----\tformula_1",
    "877": "SELECT d.driverId, d.forename, d.surname, d.dob FROM drivers d JOIN results r ON d.driverId = r.driverId WHERE r.raceId = 872 AND r.time IS NOT NULL ORDER BY d.dob DESC LIMIT 1;\t----- bird -----\tformula_1",
    "878": "SELECT CONCAT(forename, ' ', surname) AS full_name FROM drivers WHERE driverId = (SELECT driverId FROM lapTimes WHERE raceId = 348 ORDER BY milliseconds ASC LIMIT 1);\t----- bird -----\tformula_1",
    "879": "SELECT d.nationality FROM drivers d JOIN results r ON d.driverId = r.driverId WHERE r.fastestLapSpeed = (SELECT MAX(fastestLapSpeed) FROM results);\t----- bird -----\tformula_1",
    "880": "SELECT ((r1.fastestLapSpeed - r2.fastestLapSpeed) * 100.0 / r1.fastestLapSpeed) AS percent_faster FROM results r1 JOIN drivers d ON r1.driverId = d.driverId JOIN results r2 ON r2.driverId = d.driverId WHERE d.forename = 'Paul' AND d.surname = 'di Resta' AND r1.raceId = 853 AND r2.raceId = 854;\t----- bird -----\tformula_1",
    "881": "SELECT CAST(SUM(CASE WHEN time IS NOT NULL THEN 1 ELSE 0 END) AS FLOAT) / COUNT(driverId) AS completion_rate FROM results JOIN races ON results.raceId = races.raceId WHERE races.date = '1983-07-16';\t----- bird -----\tformula_1",
    "882": "SELECT MIN(year) FROM races WHERE name = 'Singapore Grand Prix';\t----- bird -----\tformula_1",
    "883": "SELECT COUNT(*) AS total_races, GROUP_CONCAT(name ORDER BY name DESC) AS race_names FROM races WHERE year = 2005;\t----- bird -----\tformula_1",
    "884": "SELECT name FROM races WHERE YEAR(date) = (SELECT YEAR(MIN(date)) FROM races) AND MONTH(date) = (SELECT MONTH(MIN(date)) FROM races);\t----- bird -----\tformula_1",
    "885": "SELECT name, date FROM races WHERE year = 1999 AND round = (SELECT MAX(round) FROM races WHERE year = 1999);\t----- bird -----\tformula_1",
    "886": "SELECT year FROM races GROUP BY year ORDER BY COUNT(round) DESC LIMIT 1;\t----- bird -----\tformula_1",
    "887": "SELECT name FROM races WHERE year = 2017 AND name NOT IN (SELECT name FROM races WHERE year = 2000);\t----- bird -----\tformula_1",
    "888": "SELECT circuits.country, circuits.name, circuits.location FROM races JOIN circuits ON races.circuitId = circuits.circuitId WHERE races.name = 'European Grand Prix' ORDER BY races.year ASC LIMIT 1;\t----- bird -----\tformula_1",
    "889": "SELECT MAX(r.year) FROM races r JOIN circuits c ON r.circuitId = c.circuitId WHERE c.name = 'Brands Hatch' AND r.name = 'British Grand Prix';\t----- bird -----\tformula_1",
    "890": "SELECT COUNT(DISTINCT r.year) FROM races r JOIN circuits c ON r.circuitId = c.circuitId WHERE c.name = 'Silverstone Circuit' AND r.name = 'British Grand Prix';\t----- bird -----\tformula_1",
    "891": "SELECT d.forename, d.surname FROM results r JOIN drivers d ON r.driverId = d.driverId JOIN races ra ON r.raceId = ra.raceId WHERE ra.year = 2010 AND ra.name = 'Singapore Grand Prix' ORDER BY r.positionOrder;\t----- bird -----\tformula_1",
    "892": "SELECT CONCAT(d.forename, ' ', d.surname) AS full_name, MAX(ds.points) AS max_points FROM driverStandings ds JOIN drivers d ON ds.driverId = d.driverId GROUP BY d.driverId ORDER BY max_points DESC LIMIT 1;\t----- bird -----\tformula_1",
    "893": "SELECT d.forename, d.surname, ds.points FROM driverStandings ds JOIN drivers d ON ds.driverId = d.driverId JOIN races r ON ds.raceId = r.raceId WHERE r.year = 2017 AND r.name = 'Chinese Grand Prix' ORDER BY ds.position ASC LIMIT 3;\t----- bird -----\tformula_1",
    "894": "SELECT d.forename, d.surname, r.name AS race_name, MIN(lt.milliseconds) AS best_lap_time FROM lapTimes lt JOIN drivers d ON lt.driverId = d.driverId JOIN races r ON lt.raceId = r.raceId GROUP BY d.forename, d.surname, r.name ORDER BY best_lap_time ASC LIMIT 1;\t----- bird -----\tformula_1",
    "895": "SELECT AVG(lapTimes.milliseconds) AS average_lap_time FROM lapTimes JOIN drivers ON lapTimes.driverId = drivers.driverId JOIN races ON lapTimes.raceId = races.raceId WHERE drivers.forename = 'Lewis' AND drivers.surname = 'Hamilton' AND races.year = 2009 AND races.name = 'Malaysian Grand Prix';\t----- bird -----\tformula_1",
    "896": "SELECT 100.0 * SUM(CASE WHEN r.position > 1 THEN 1 ELSE 0 END) / COUNT(*) AS percentage_not_first FROM results r JOIN drivers d ON r.driverId = d.driverId JOIN races ra ON r.raceId = ra.raceId WHERE d.surname = 'Hamilton' AND ra.year >= 2010;\t----- bird -----\tformula_1",
    "897": "SELECT d.forename || ' ' || d.surname AS full_name, d.nationality, MAX(ds.points) AS max_points FROM driverStandings ds JOIN drivers d ON ds.driverId = d.driverId GROUP BY d.driverId, d.forename, d.surname, d.nationality ORDER BY COUNT(ds.wins) DESC LIMIT 1;\t----- bird -----\tformula_1",
    "898": "SELECT forename, surname, YEAR(CURRENT_TIMESTAMP) - YEAR(dob) AS age FROM drivers WHERE nationality = 'Japanese' ORDER BY dob DESC LIMIT 1;\t----- bird -----\tformula_1",
    "899": "SELECT c.name FROM circuits c JOIN races r ON c.circuitId = r.circuitId WHERE YEAR(r.date) BETWEEN 1990 AND 2000 GROUP BY c.circuitId, c.name HAVING COUNT(r.raceId) = 4;\t----- bird -----\tformula_1",
    "900": "SELECT circuits.name, circuits.location, races.name FROM circuits JOIN races ON circuits.circuitId = races.circuitId WHERE circuits.country = 'USA' AND races.year = 2006;\t----- bird -----\tformula_1",
    "901": "SELECT races.name AS race_name, circuits.name AS circuit_name, circuits.location FROM races JOIN circuits ON races.circuitId = circuits.circuitId WHERE YEAR(races.date) = 2005 AND MONTH(races.date) = 9;\t----- bird -----\tformula_1",
    "902": "SELECT r.* FROM races r JOIN lapTimes l ON r.raceId = l.raceId JOIN drivers d ON l.driverId = d.driverId WHERE d.forename = 'Alex' AND d.surname = 'Yoong' AND l.position < 20;\t----- bird -----\tformula_1",
    "903": "SELECT COUNT(*) FROM results r JOIN races ra ON r.raceId = ra.raceId JOIN drivers d ON r.driverId = d.driverId JOIN circuits c ON ra.circuitId = c.circuitId WHERE d.forename = 'Michael' AND d.surname = 'Schumacher' AND c.name = 'Sepang International Circuit' AND r.positionOrder = 1;\t----- bird -----\tformula_1",
    "904": "SELECT r.name, r.year FROM results res JOIN drivers d ON res.driverId = d.driverId JOIN races r ON res.raceId = r.raceId WHERE d.forename = 'Michael' AND d.surname = 'Schumacher' ORDER BY res.milliseconds ASC LIMIT 1;\t----- bird -----\tformula_1",
    "905": "SELECT AVG(r.points) FROM results r JOIN drivers d ON r.driverId = d.driverId JOIN races ra ON r.raceId = ra.raceId WHERE d.forename = 'Eddie' AND d.surname = 'Irvine' AND ra.year = 2000;\t----- bird -----\tformula_1",
    "906": "SELECT r.name AS race_name, r.year, res.points FROM results res JOIN races r ON res.raceId = r.raceId JOIN drivers d ON res.driverId = d.driverId WHERE d.forename = 'Lewis' AND d.surname = 'Hamilton' ORDER BY r.year, r.round LIMIT 1;\t----- bird -----\tformula_1",
    "907": "SELECT races.name, circuits.country FROM races JOIN circuits ON races.circuitId = circuits.circuitId WHERE races.year = 2017 ORDER BY races.date;\t----- bird -----\tformula_1",
    "908": "SELECT r.name, r.year, c.location FROM races r JOIN circuits c ON r.circuitId = c.circuitId WHERE r.laps = (SELECT MAX(laps) FROM races);\t----- bird -----\tformula_1",
    "909": "SELECT (COUNT(CASE WHEN country = 'Germany' THEN 1 END) * 100.0) / COUNT(*) AS percentage FROM races WHERE name = 'European Grand Prix';\t----- bird -----\tformula_1",
    "910": "SELECT lat, lng FROM circuits WHERE name = 'Silverstone Circuit';\t----- bird -----\tformula_1",
    "911": "SELECT name, lat FROM circuits WHERE name IN ('Silverstone Circuit', 'Hockenheimring', 'Hungaroring') ORDER BY lat DESC LIMIT 1;\t----- bird -----\tformula_1",
    "912": "SELECT circuitRef FROM circuits WHERE name = 'Marina Bay Street Circuit';\t----- bird -----\tformula_1",
    "913": "SELECT country FROM circuits WHERE alt = (SELECT MAX(alt) FROM circuits);\t----- bird -----\tformula_1",
    "914": "SELECT COUNT(*) FROM drivers WHERE code IS NULL;\t----- bird -----\tformula_1",
    "915": "SELECT country FROM circuits WHERE circuitId = (SELECT circuitId FROM races WHERE raceId = (SELECT raceId FROM results WHERE driverId = (SELECT driverId FROM drivers ORDER BY dob ASC LIMIT 1) LIMIT 1) LIMIT 1);\t----- bird -----\tformula_1",
    "916": "SELECT surname FROM drivers WHERE nationality = 'italian';\t----- bird -----\tformula_1",
    "917": "SELECT url FROM drivers WHERE forename = 'Anthony' AND surname = 'Davidson';\t----- bird -----\tformula_1",
    "918": "SELECT driverRef FROM drivers WHERE forename = 'Lewis' AND surname = 'Hamilton';\t----- bird -----\tformula_1",
    "919": "SELECT circuits.name FROM races JOIN circuits ON races.circuitId = circuits.circuitId WHERE races.year = 2009 AND races.name = 'Spanish Grand Prix';\t----- bird -----\tformula_1",
    "920": "SELECT DISTINCT r.year FROM races r JOIN circuits c ON r.circuitId = c.circuitId WHERE c.name = 'Silverstone Circuit' ORDER BY r.year;\t----- bird -----\tformula_1",
    "921": "SELECT races.* FROM races JOIN circuits ON races.circuitId = circuits.circuitId WHERE circuits.name = 'Silverstone Circuit' AND races.name LIKE '%Formula 1%' OR races.name LIKE '%F1%' OR races.name LIKE '%Grand Prix%' OR races.name LIKE '%GP%' OR races.name LIKE '%Formula_1%' OR races.name LIKE '%Formula1%' OR races.name LIKE '%F_1%' OR races.name LIKE '%F_1%' OR races.name LIKE '%Formula One%' OR races.name LIKE '%Formula_One%' OR races.name LIKE '%FormulaOne%' OR races.name LIKE '%Formula_1%' OR races.name LIKE '%Formula_1%' OR races.name LIKE '%Formula_1%' OR races.name LIKE '%Formula_1%' OR races.name LIKE '%Formula_1%' OR races.name LIKE '%Formula_1%' OR races.name LIKE '%Formula_1%' OR races.name LIKE '%Formula_1%' OR races.name LIKE '%Formula_1%' OR;\t----- bird -----\tformula_1",
    "922": "SELECT r.time FROM races r JOIN circuits c ON r.circuitId = c.circuitId WHERE c.name = 'Abu Dhabi Circuit' AND r.year BETWEEN 2010 AND 2019;\t----- bird -----\tformula_1",
    "923": "SELECT COUNT(*) FROM races JOIN circuits ON races.circuitId = circuits.circuitId WHERE circuits.country = 'Italy';\t----- bird -----\tformula_1",
    "924": "SELECT DISTINCT r.date FROM races r JOIN circuits c ON r.circuitId = c.circuitId WHERE c.name = 'Barcelona-Catalunya';\t----- bird -----\tformula_1",
    "925": "SELECT DISTINCT c.url FROM circuits c JOIN races r ON c.circuitId = r.circuitId WHERE r.name = 'Spanish Grand Prix' AND r.year = 2009;\t----- bird -----\tformula_1",
    "926": "SELECT MIN(r.fastestLapTime) AS fastest_lap_time_ever FROM results r JOIN drivers d ON r.driverId = d.driverId WHERE d.forename = 'Lewis' AND d.surname = 'Hamilton' AND r.fastestLapTime IS NOT NULL;\t----- bird -----\tformula_1",
    "927": "SELECT d.forename, d.surname FROM results r JOIN drivers d ON r.driverId = d.driverId ORDER BY r.fastestLapSpeed DESC LIMIT 1;\t----- bird -----\tformula_1",
    "928": "SELECT d.driverRef FROM results r JOIN drivers d ON r.driverId = d.driverId JOIN races ra ON r.raceId = ra.raceId WHERE ra.name = 'Canadian Grand Prix' AND ra.year = 2007 AND r.positionOrder = 1;\t----- bird -----\tformula_1",
    "929": "SELECT DISTINCT r.name FROM races r JOIN results res ON r.raceId = res.raceId JOIN drivers d ON res.driverId = d.driverId WHERE d.forename = 'Lewis' AND d.surname = 'Hamilton' ORDER BY r.date;\t----- bird -----\tformula_1",
    "930": "SELECT races.name, races.year FROM results JOIN drivers ON results.driverId = drivers.driverId JOIN races ON results.raceId = races.raceId WHERE drivers.forename = 'Lewis' AND drivers.surname = 'Hamilton' ORDER BY results.rank ASC LIMIT 1;\t----- bird -----\tformula_1",
    "931": "SELECT MAX(fastestLapSpeed) FROM results JOIN races ON results.raceId = races.raceId WHERE races.year = 2009 AND races.name = 'Spanish Grand Prix';\t----- bird -----\tformula_1",
    "932": "SELECT DISTINCT r.year FROM races r JOIN results res ON r.raceId = res.raceId JOIN drivers d ON res.driverId = d.driverId WHERE d.forename = 'Lewis' AND d.surname = 'Hamilton' ORDER BY r.year;\t----- bird -----\tformula_1",
    "933": "SELECT r.positionOrder FROM results r JOIN drivers d ON r.driverId = d.driverId JOIN races ra ON r.raceId = ra.raceId WHERE d.forename = 'Lewis' AND d.surname = 'Hamilton' AND ra.year = 2008 AND ra.name = 'Chinese Grand Prix';\t----- bird -----\tformula_1",
    "934": "SELECT d.forename, d.surname FROM results r JOIN drivers d ON r.driverId = d.driverId JOIN races ra ON r.raceId = ra.raceId WHERE ra.year = 1989 AND ra.name = 'Australian Grand Prix' AND r.grid = 4;\t----- bird -----\tformula_1",
    "935": "SELECT COUNT(DISTINCT r.driverId) FROM results r JOIN races ra ON r.raceId = ra.raceId WHERE ra.year = 2008 AND ra.name = 'Australian Grand Prix' AND r.time IS NOT NULL;\t----- bird -----\tformula_1",
    "936": "SELECT MIN(lapTimes.milliseconds) AS fastest_lap_time FROM lapTimes JOIN drivers ON lapTimes.driverId = drivers.driverId JOIN races ON lapTimes.raceId = races.raceId WHERE drivers.forename = 'Lewis' AND drivers.surname = 'Hamilton' AND races.year = 2008 AND races.name = 'Australian Grand Prix';\t----- bird -----\tformula_1",
    "937": "SELECT r.time FROM results r JOIN races ra ON r.raceId = ra.raceId WHERE ra.year = 2008 AND ra.name = 'Chinese Grand Prix' AND r.positionOrder = 2;\t----- bird -----\tformula_1",
    "938": "SELECT d.forename, d.surname, d.url FROM results r JOIN races ra ON r.raceId = ra.raceId JOIN drivers d ON r.driverId = d.driverId WHERE ra.year = 2008 AND ra.name = 'Australian Grand Prix' AND r.positionOrder = 1;\t----- bird -----\tformula_1",
    "939": "SELECT COUNT(DISTINCT r.driverId) FROM results r JOIN drivers d ON r.driverId = d.driverId JOIN races ra ON r.raceId = ra.raceId WHERE d.nationality = 'British' AND ra.year = 2008 AND ra.name = 'Australian Grand Prix';\t----- bird -----\tformula_1",
    "940": "SELECT COUNT(DISTINCT r.driverId) FROM results r JOIN races ra ON r.raceId = ra.raceId WHERE ra.year = 2008 AND ra.name = 'Chinese Grand Prix' AND r.time IS NOT NULL AND r.driverId IN (SELECT driverId FROM results);\t----- bird -----\tformula_1",
    "941": "SELECT SUM(points) FROM results JOIN drivers ON results.driverId = drivers.driverId WHERE drivers.forename = 'Lewis' AND drivers.surname = 'Hamilton';\t----- bird -----\tformula_1",
    "942": "SELECT AVG((SUBSTRING(fastestLapTime,1,2)::int * 60) + (SUBSTRING(fastestLapTime,4,2)::int) + (SUBSTRING(fastestLapTime,7,3)::float / 1000)) AS average_fastest_lap_time_seconds FROM results JOIN drivers ON results.driverId = drivers.driverId WHERE drivers.forename = 'Lewis' AND drivers.surname = 'Hamilton' AND results.fastestLapTime IS NOT NULL;\t----- bird -----\tformula_1",
    "943": "SELECT CAST(SUM(CASE WHEN r.time IS NOT NULL THEN 1 ELSE 0 END) AS FLOAT) / COUNT(*) AS completion_rate FROM results r JOIN races ra ON r.raceId = ra.raceId WHERE ra.year = 2008 AND ra.name = 'Australian Grand Prix';\t----- bird -----\tformula_1",
    "944": "SELECT ((last_driver_time - champion_time) / last_driver_time) * 100 AS percentage_faster FROM (SELECT r.raceId FROM races r JOIN circuits c ON r.circuitId = c.circuitId WHERE r.year = 2008 AND c.name = 'Albert Park Grand Prix Circuit' AND r.name LIKE '%Australian Grand Prix%') AS race JOIN (SELECT resultId, time, milliseconds FROM results WHERE raceId = race.raceId AND time IS NOT NULL) AS finished_results ON finished_results.raceId = race.raceId JOIN (SELECT MIN(positionOrder) AS champion_position FROM results WHERE raceId = race.raceId) AS champion_pos ON champion_pos.champion_position = finished_results.positionOrder JOIN (SELECT MAX(positionOrder) AS last_position FROM results WHERE raceId = race.raceId AND time IS NOT NULL) AS last_pos ON last_pos.last_position = finished_results.positionOrder CROSS JOIN (SELECT time AS champion_time FROM results WHERE raceId;\t----- bird -----\tformula_1",
    "945": "SELECT COUNT(*) FROM circuits WHERE location = 'Adelaide' AND country = 'Australia';\t----- bird -----\tformula_1",
    "946": "SELECT lat, lng FROM circuits WHERE country = 'USA';\t----- bird -----\tformula_1",
    "947": "SELECT COUNT(*) FROM drivers WHERE nationality = 'British' AND YEAR(dob) > 1980;\t----- bird -----\tformula_1",
    "948": "SELECT MAX(points) FROM constructorResults cr JOIN constructors c ON cr.constructorId = c.constructorId WHERE c.nationality = 'British';\t----- bird -----\tformula_1",
    "949": "SELECT c.name FROM constructors c JOIN constructorStandings cs ON c.constructorId = cs.constructorId GROUP BY c.constructorId ORDER BY SUM(cs.points) DESC LIMIT 1;\t----- bird -----\tformula_1",
    "950": "SELECT c.name FROM constructors c JOIN constructorResults cr ON c.constructorId = cr.constructorId WHERE cr.raceId = 291 AND cr.points = 0;\t----- bird -----\tformula_1",
    "951": "SELECT COUNT(DISTINCT cr.constructorId) FROM constructorResults cr JOIN constructors c ON cr.constructorId = c.constructorId WHERE c.nationality = 'Japanese' GROUP BY cr.constructorId HAVING COUNT(DISTINCT cr.raceId) = 2 AND SUM(cr.points) = 0;\t----- bird -----\tformula_1",
    "952": "SELECT DISTINCT c.name FROM constructors c JOIN constructorStandings cs ON c.constructorId = cs.constructorId WHERE cs.position = 1;\t----- bird -----\tformula_1",
    "953": "SELECT COUNT(DISTINCT c.constructorId) FROM constructors c JOIN lapTimes l ON c.constructorId = l.driverId JOIN drivers d ON l.driverId = d.driverId WHERE c.nationality = 'French' AND l.lap > 50;\t----- bird -----\tformula_1",
    "954": "SELECT (COUNT(CASE WHEN r.time IS NOT NULL THEN 1 END)*100.0)/COUNT(*) AS completion_percentage FROM results r JOIN drivers d ON r.driverId = d.driverId JOIN races ra ON r.raceId = ra.raceId WHERE d.nationality = 'Japanese' AND ra.year BETWEEN 2007 AND 2009;\t----- bird -----\tformula_1",
    "955": "SELECT r.year, AVG(rsl.milliseconds / 1000.0) AS avg_champion_time_seconds FROM results rsl JOIN races r ON rsl.raceId = r.raceId WHERE r.year < 1975 AND rsl.positionOrder = 1 AND rsl.time IS NOT NULL GROUP BY r.year ORDER BY r.year;\t----- bird -----\tformula_1",
    "956": "SELECT DISTINCT d.forename, d.surname FROM drivers d JOIN results r ON d.driverId = r.driverId WHERE YEAR(d.dob) > 1975 AND r.positionOrder = 2;\t----- bird -----\tformula_1",
    "957": "SELECT COUNT(DISTINCT d.driverId) FROM drivers d JOIN results r ON d.driverId = r.driverId WHERE d.nationality = 'Italian' AND r.time IS NULL;\t----- bird -----\tformula_1",
    "958": "SELECT d.forename, d.surname FROM drivers d JOIN lapTimes l ON d.driverId = l.driverId ORDER BY l.milliseconds ASC LIMIT 1;\t----- bird -----\tformula_1",
    "959": "SELECT MIN(lapTimes.lap) FROM lapTimes JOIN results ON lapTimes.raceId = results.raceId AND lapTimes.driverId = results.driverId JOIN races ON lapTimes.raceId = races.raceId WHERE races.year = 2009 AND results.position = 1;\t----- bird -----\tformula_1",
    "960": "SELECT AVG(fastestLapSpeed) FROM results JOIN races ON results.raceId = races.raceId WHERE races.year = 2009 AND races.name = 'Spanish Grand Prix';\t----- bird -----\tformula_1",
    "961": "SELECT r.name, r.year FROM races r JOIN results res ON r.raceId = res.raceId WHERE res.milliseconds = (SELECT MIN(milliseconds) FROM results WHERE milliseconds IS NOT NULL) LIMIT 1;\t----- bird -----\tformula_1",
    "962": "SELECT (COUNT(DISTINCT CASE WHEN YEAR(d.dob) < 1985 AND r.laps > 50 THEN d.driverId END) * 100.0) / COUNT(DISTINCT CASE WHEN YEAR(d.dob) BETWEEN 2000 AND 2005 THEN d.driverId END) AS percentage FROM drivers d JOIN results r ON d.driverId = r.driverId WHERE r.raceId IN (SELECT raceId FROM races WHERE year BETWEEN 2000 AND 2005);\t----- bird -----\tformula_1",
    "963": "SELECT COUNT(DISTINCT lt.driverId) FROM lapTimes lt JOIN drivers d ON lt.driverId = d.driverId WHERE d.nationality = 'French' AND lt.milliseconds < 120000;\t----- bird -----\tformula_1",
    "964": "SELECT code FROM drivers WHERE nationality = 'America';\t----- bird -----\tformula_1",
    "965": "SELECT raceId FROM races WHERE year = 2009;\t----- bird -----\tformula_1",
    "966": "SELECT COUNT(DISTINCT driverId) FROM results WHERE raceId = 18;\t----- bird -----\tformula_1",
    "967": "SELECT d.code, (SELECT COUNT(*) FROM (SELECT driverId FROM drivers ORDER BY dob DESC LIMIT 3) AS top3 JOIN drivers AS d2 ON top3.driverId = d2.driverId WHERE d2.nationality IN ('Dutch', 'Netherlandic')) AS netherlandic_count FROM drivers d ORDER BY d.dob DESC LIMIT 3;\t----- bird -----\tformula_1",
    "968": "SELECT driverRef FROM drivers WHERE forename = 'Robert' AND surname = 'Kubica';\t----- bird -----\tformula_1",
    "969": "SELECT COUNT(*) FROM drivers WHERE nationality = 'British' AND YEAR(dob) = 1980;\t----- bird -----\tformula_1",
    "970": "SELECT d.driverId, d.forename, d.surname, MIN(lt.time) AS earliest_lap_time FROM drivers d JOIN lapTimes lt ON d.driverId = lt.driverId WHERE d.nationality = 'German' AND YEAR(d.dob) BETWEEN 1980 AND 1990 GROUP BY d.driverId, d.forename, d.surname ORDER BY earliest_lap_time ASC LIMIT 3;\t----- bird -----\tformula_1",
    "971": "SELECT driverRef FROM drivers WHERE nationality = 'German' ORDER BY dob ASC LIMIT 1;\t----- bird -----\tformula_1",
    "972": "SELECT DISTINCT d.driverId, d.code FROM drivers d JOIN results r ON d.driverId = r.driverId WHERE YEAR(d.dob) = 1971 AND r.fastestLapTime IS NOT NULL;\t----- bird -----\tformula_1",
    "973": "SELECT d.driverId, d.forename, d.surname, MAX(lt.time) AS latest_lap_time FROM drivers d JOIN lapTimes lt ON d.driverId = lt.driverId WHERE d.nationality = 'Spanish' AND YEAR(d.dob) < 1982 GROUP BY d.driverId, d.forename, d.surname ORDER BY latest_lap_time DESC LIMIT 10;\t----- bird -----\tformula_1",
    "974": "SELECT races.year FROM results JOIN races ON results.raceId = races.raceId WHERE results.fastestLapTime IS NOT NULL ORDER BY CAST(REPLACE(results.fastestLapTime, ':', '') AS TIME) LIMIT 1;\t----- bird -----\tformula_1",
    "975": "SELECT r.year FROM lapTimes lt JOIN races r ON lt.raceId = r.raceId ORDER BY lt.milliseconds DESC LIMIT 1;\t----- bird -----\tformula_1",
    "976": "SELECT driverId FROM lapTimes WHERE lap = 1 ORDER BY milliseconds ASC LIMIT 5;\t----- bird -----\tformula_1",
    "977": "SELECT COUNT(*) FROM results WHERE raceId > 50 AND raceId < 100 AND statusId = 2 AND time IS NOT NULL;\t----- bird -----\tformula_1",
    "978": "SELECT name, location, lat, lng, COUNT(*) AS times_held FROM circuits WHERE country = 'Austria' GROUP BY circuitId, name, location, lat, lng;\t----- bird -----\tformula_1",
    "979": "SELECT races.round AS race_number FROM races JOIN results ON races.raceId = results.raceId WHERE results.time IS NOT NULL GROUP BY races.raceId, races.round ORDER BY COUNT(results.resultId) DESC LIMIT 1;\t----- bird -----\tformula_1",
    "980": "SELECT d.driverRef, d.nationality, d.dob FROM qualifying q JOIN drivers d ON q.driverId = d.driverId WHERE q.raceId = 23 AND q.q2 IS NOT NULL;\t----- bird -----\tformula_1",
    "981": "SELECT r.year, r.name, r.date, r.time FROM races r JOIN qualifying q ON r.raceId = q.raceId WHERE q.driverId = (SELECT driverId FROM drivers ORDER BY dob DESC LIMIT 1) AND r.date = (SELECT MIN(r2.date) FROM races r2 JOIN qualifying q2 ON r2.raceId = q2.raceId WHERE q2.driverId = q.driverId) LIMIT 1;\t----- bird -----\tformula_1",
    "982": "SELECT COUNT(DISTINCT d.driverId) FROM drivers d JOIN results r ON d.driverId = r.driverId JOIN status s ON r.statusId = s.statusId WHERE d.nationality = 'American' AND s.status = 'Puncture';\t----- bird -----\tformula_1",
    "983": "SELECT c.name, c.url FROM constructors c JOIN constructorResults cr ON c.constructorId = cr.constructorId WHERE c.nationality = 'Italian' GROUP BY c.constructorId ORDER BY SUM(cr.points) DESC LIMIT 1;\t----- bird -----\tformula_1",
    "984": "SELECT url FROM constructors WHERE constructorId = (SELECT constructorId FROM constructorStandings GROUP BY constructorId ORDER BY SUM(wins) DESC LIMIT 1);\t----- bird -----\tformula_1",
    "985": "SELECT d.forename, d.surname, lt.time FROM lapTimes lt JOIN drivers d ON lt.driverId = d.driverId JOIN races r ON lt.raceId = r.raceId WHERE r.name = 'French Grand Prix' AND lt.lap = 3 ORDER BY lt.milliseconds DESC LIMIT 1;\t----- bird -----\tformula_1",
    "986": "SELECT raceId, MIN(milliseconds) AS fastest_first_lap_time FROM lapTimes WHERE lap = 1 GROUP BY raceId ORDER BY fastest_first_lap_time ASC LIMIT 1;\t----- bird -----\tformula_1",
    "987": "SELECT AVG(fastestLapTime) FROM results r JOIN races ra ON r.raceId = ra.raceId WHERE ra.year = 2006 AND ra.name = 'United States Grand Prix' AND r.rank < 11;\t----- bird -----\tformula_1",
    "988": "SELECT d.forename, d.surname, AVG(p.duration) AS avg_pitstop_duration FROM drivers d JOIN pitStops p ON d.driverId = p.driverId WHERE d.nationality = 'German' AND YEAR(d.dob) BETWEEN 1981 AND 1984 GROUP BY d.driverId ORDER BY avg_pitstop_duration ASC LIMIT 3;\t----- bird -----\tformula_1",
    "989": "SELECT d.forename, d.surname, r.time FROM results r JOIN races ra ON r.raceId = ra.raceId JOIN drivers d ON r.driverId = d.driverId WHERE ra.name = 'Canadian Grand Prix' AND ra.year = 2008 AND r.positionOrder = 1;\t----- bird -----\tformula_1",
    "990": "SELECT c.constructorRef, c.url FROM results r JOIN races ra ON r.raceId = ra.raceId JOIN constructors c ON r.constructorId = c.constructorId WHERE ra.year = 2009 AND ra.name = 'Singapore Grand Prix' AND r.positionOrder = 1;\t----- bird -----\tformula_1",
    "991": "SELECT CONCAT(forename, ' ', surname) AS full_name, dob FROM drivers WHERE nationality = 'Austrian' AND YEAR(dob) BETWEEN 1981 AND 1991;\t----- bird -----\tformula_1",
    "992": "SELECT CONCAT(forename, ' ', surname) AS full_name, url, dob FROM drivers WHERE nationality = 'German' AND YEAR(dob) BETWEEN 1971 AND 1985 ORDER BY dob DESC;\t----- bird -----\tformula_1",
    "993": "SELECT location, country, lat, lng FROM circuits WHERE name = 'Hungaroring';\t----- bird -----\tformula_1",
    "994": "SELECT cr.name, cr.nationality, SUM(cs.points) AS total_points FROM constructorStandings cs JOIN races r ON cs.raceId = r.raceId JOIN constructors cr ON cs.constructorId = cr.constructorId WHERE r.name = 'Monaco Grand Prix' AND r.year BETWEEN 1980 AND 2010 GROUP BY cr.constructorId, cr.name, cr.nationality ORDER BY total_points DESC LIMIT 1;\t----- bird -----\tformula_1",
    "995": "SELECT AVG(r.points) FROM results r JOIN drivers d ON r.driverId = d.driverId JOIN races ra ON r.raceId = ra.raceId WHERE d.forename = 'Lewis' AND d.surname = 'Hamilton' AND ra.name = 'Turkish Grand Prix';\t----- bird -----\tformula_1",
    "996": "SELECT AVG(race_count) AS average_races_per_year FROM (SELECT YEAR(date) AS year, COUNT(*) AS race_count FROM races WHERE date BETWEEN '2000-01-01' AND '2010-12-31' GROUP BY YEAR(date)) AS yearly_races;\t----- bird -----\tformula_1",
    "997": "SELECT nationality FROM drivers GROUP BY nationality ORDER BY COUNT(*) DESC LIMIT 1;\t----- bird -----\tformula_1",
    "998": "SELECT COUNT(*) FROM results WHERE driverId = (SELECT driverId FROM (SELECT driverId, SUM(points) AS total_points, RANK() OVER (ORDER BY SUM(points) DESC) AS rank FROM results GROUP BY driverId) sub WHERE rank = 91) AND position = 1;\t----- bird -----\tformula_1",
    "999": "SELECT r.name FROM races r JOIN results res ON r.raceId = res.raceId WHERE res.fastestLapTime = (SELECT MIN(fastestLapTime) FROM results WHERE fastestLapTime IS NOT NULL) LIMIT 1;\t----- bird -----\tformula_1",
    "1000": "SELECT CONCAT(location, ', ', country) AS full_location FROM circuits WHERE circuitId = (SELECT circuitId FROM races WHERE date = (SELECT MAX(date) FROM races) LIMIT 1);\t----- bird -----\tformula_1",
    "1001": "SELECT CONCAT(d.forename, ' ', d.surname) AS full_name FROM qualifying q JOIN races r ON q.raceId = r.raceId JOIN circuits c ON r.circuitId = c.circuitId JOIN drivers d ON q.driverId = d.driverId WHERE r.year = 2008 AND r.round = 3 AND c.name = 'Marina Bay Street Circuit' AND q.position = 1;\t----- bird -----\tformula_1",
    "1002": "SELECT CONCAT(d.forename, ' ', d.surname) AS full_name, d.nationality, r.name AS first_race_name FROM drivers d JOIN results res ON d.driverId = res.driverId JOIN races r ON res.raceId = r.raceId WHERE d.dob = (SELECT MAX(dob) FROM drivers) ORDER BY r.date ASC LIMIT 1;\t----- bird -----\tformula_1",
    "1003": "SELECT MAX(accidents) FROM (SELECT driverId, COUNT(*) AS accidents FROM results JOIN races ON results.raceId = races.raceId WHERE races.name = 'Canadian Grand Prix' AND results.statusId = 3 GROUP BY driverId) AS accident_counts;\t----- bird -----\tformula_1",
    "1004": "SELECT CONCAT(d.forename, ' ', d.surname) AS full_name, COUNT(r.resultId) AS wins FROM drivers d JOIN results r ON d.driverId = r.driverId WHERE d.dob = (SELECT MIN(dob) FROM drivers) AND r.position = 1 GROUP BY d.driverId;\t----- bird -----\tformula_1",
    "1005": "SELECT MAX(duration) AS longest_pit_stop_time FROM pitStops;\t----- bird -----\tformula_1",
    "1006": "SELECT MIN(milliseconds) AS fastest_lap_time FROM lapTimes;\t----- bird -----\tformula_1",
    "1007": "SELECT MAX(p.milliseconds) FROM pitStops p JOIN drivers d ON p.driverId = d.driverId WHERE d.forename = 'Lewis' AND d.surname = 'Hamilton';\t----- bird -----\tformula_1",
    "1008": "SELECT pitStops.lap FROM pitStops JOIN drivers ON pitStops.driverId = drivers.driverId JOIN races ON pitStops.raceId = races.raceId WHERE drivers.forename = 'Lewis' AND drivers.surname = 'Hamilton' AND races.year = 2011 AND races.name = 'Australian Grand Prix';\t----- bird -----\tformula_1",
    "1009": "SELECT d.forename, d.surname, p.duration FROM pitStops p JOIN drivers d ON p.driverId = d.driverId JOIN races r ON p.raceId = r.raceId WHERE r.year = 2011 AND r.name = 'Australian Grand Prix';\t----- bird -----\tformula_1",
    "1010": "SELECT MIN(lapTimes.time) AS lap_record FROM lapTimes JOIN drivers ON lapTimes.driverId = drivers.driverId WHERE drivers.forename = 'Lewis' AND drivers.surname = 'Hamilton';\t----- bird -----\tformula_1",
    "1011": "SELECT d.forename, d.surname FROM lapTimes lt JOIN drivers d ON lt.driverId = d.driverId WHERE lt.milliseconds = (SELECT MIN(milliseconds) FROM lapTimes) AND lt.driverId IN (SELECT driverId FROM (SELECT driverId, SUM(points) as total_points FROM driverStandings GROUP BY driverId ORDER BY total_points DESC LIMIT 20) AS top20) LIMIT 1;\t----- bird -----\tformula_1",
    "1012": "SELECT r.name AS circuit_name, res.position FROM results res JOIN races r ON res.raceId = r.raceId JOIN drivers d ON res.driverId = d.driverId WHERE d.forename = 'Lewis' AND d.surname = 'Hamilton' AND res.fastestLapTime = (SELECT MIN(fastestLapTime) FROM results WHERE driverId = d.driverId AND fastestLapTime IS NOT NULL) ORDER BY r.name;\t----- bird -----\tformula_1",
    "1013": "SELECT MIN(lapTimes.time) AS lap_record FROM lapTimes JOIN races ON lapTimes.raceId = races.raceId JOIN circuits ON races.circuitId = circuits.circuitId WHERE circuits.name = 'Austrian Grand Prix Circuit';\t----- bird -----\tformula_1",
    "1014": "SELECT c.name AS circuit_name, MIN(lt.milliseconds) AS lap_record_time FROM circuits c JOIN races r ON c.circuitId = r.circuitId JOIN lapTimes lt ON r.raceId = lt.raceId WHERE c.country = 'Italy' GROUP BY c.name;\t----- bird -----\tformula_1",
    "1015": "SELECT r.name, r.year, r.round FROM races r JOIN lapTimes lt ON r.raceId = lt.raceId JOIN circuits c ON r.circuitId = c.circuitId WHERE c.name = 'Austrian Grand Prix Circuit' AND lt.milliseconds = (SELECT MIN(milliseconds) FROM lapTimes WHERE raceId IN (SELECT raceId FROM races WHERE circuitId = c.circuitId)) LIMIT 1;\t----- bird -----\tformula_1",
    "1016": "SELECT p.duration FROM lapTimes l JOIN races r ON l.raceId = r.raceId JOIN circuits c ON r.circuitId = c.circuitId JOIN pitStops p ON l.raceId = p.raceId AND l.driverId = p.driverId WHERE c.name = 'Austrian Grand Prix Circuit' AND l.milliseconds = (SELECT MIN(milliseconds) FROM lapTimes WHERE raceId = r.raceId) LIMIT 1;\t----- bird -----\tformula_1",
    "1017": "SELECT c.lat, c.lng FROM circuits c JOIN races r ON c.circuitId = r.circuitId JOIN lapTimes l ON r.raceId = l.raceId WHERE l.time = '1:29.488' LIMIT 1;\t----- bird -----\tformula_1",
    "1018": "SELECT AVG(p.milliseconds) FROM pitStops p JOIN drivers d ON p.driverId = d.driverId WHERE d.forename = 'Lewis' AND d.surname = 'Hamilton';\t----- bird -----\tformula_1",
    "1019": "SELECT AVG(lapTimes.milliseconds) FROM lapTimes JOIN races ON lapTimes.raceId = races.raceId JOIN circuits ON races.circuitId = circuits.circuitId WHERE circuits.country = 'Italy';\t----- bird -----\tformula_1",
    "1020": "SELECT player_api_id FROM Player_Attributes WHERE overall_rating = (SELECT MAX(overall_rating) FROM Player_Attributes) LIMIT 1;\t----- bird -----\teuropean_football_2",
    "1021": "SELECT player_name, height FROM Player WHERE height = (SELECT MAX(height) FROM Player);\t----- bird -----\teuropean_football_2",
    "1022": "SELECT preferred_foot FROM Player_Attributes WHERE potential = (SELECT MIN(potential) FROM Player_Attributes) LIMIT 1;\t----- bird -----\teuropean_football_2",
    "1023": "SELECT COUNT(DISTINCT player_api_id) FROM Player_Attributes WHERE overall_rating >= 60 AND overall_rating < 65 AND defensive_work_rate = 'low';\t----- bird -----\teuropean_football_2",
    "1024": "SELECT player_api_id FROM Player_Attributes GROUP BY player_api_id ORDER BY MAX(crossing) DESC LIMIT 5;\t----- bird -----\teuropean_football_2",
    "1025": "SELECT l.name FROM Match m JOIN League l ON m.league_id = l.id WHERE m.season = '2015/2016' GROUP BY l.id, l.name ORDER BY SUM(m.home_team_goal + m.away_team_goal) DESC LIMIT 1;\t----- bird -----\teuropean_football_2",
    "1026": "SELECT t.team_long_name FROM Team t JOIN Match m ON t.team_api_id = m.home_team_api_id WHERE m.season = '2015/2016' AND (m.home_team_goal - m.away_team_goal) < 0 GROUP BY t.team_long_name ORDER BY COUNT(*) ASC LIMIT 1;\t----- bird -----\teuropean_football_2",
    "1027": "SELECT p.player_name FROM Player p JOIN Player_Attributes pa ON p.player_api_id = pa.player_api_id ORDER BY pa.penalties DESC LIMIT 10;\t----- bird -----\teuropean_football_2",
    "1028": "SELECT t.team_long_name FROM Match m JOIN League l ON m.league_id = l.id JOIN Team t ON m.away_team_api_id = t.team_api_id WHERE l.name = 'Scotland Premier League' AND m.season = '2009/2010' AND m.away_team_goal > m.home_team_goal GROUP BY t.team_long_name ORDER BY COUNT(*) DESC LIMIT 1;\t----- bird -----\teuropean_football_2",
    "1029": "SELECT team_long_name, MAX(buildUpPlaySpeed) AS max_buildUpPlaySpeed FROM Team_Attributes JOIN Team ON Team_Attributes.team_api_id = Team.team_api_id GROUP BY team_long_name ORDER BY max_buildUpPlaySpeed DESC LIMIT 4;\t----- bird -----\teuropean_football_2",
    "1030": "SELECT l.name FROM League l JOIN Match m ON l.id = m.league_id WHERE m.season = '2015/2016' GROUP BY l.id, l.name ORDER BY SUM(CASE WHEN m.home_team_goal = m.away_team_goal THEN 1 ELSE 0 END) DESC LIMIT 1;\t----- bird -----\teuropean_football_2",
    "1031": "SELECT p.player_name, TIMESTAMPDIFF(YEAR, p.birthday, CURDATE()) AS age FROM Player p JOIN Player_Attributes pa ON p.player_api_id = pa.player_api_id WHERE pa.sprint_speed >= 97 AND YEAR(pa.date) BETWEEN 2013 AND 2015;\t----- bird -----\teuropean_football_2",
    "1032": "SELECT League.name, COUNT(Match.id) AS match_count FROM Match JOIN League ON Match.league_id = League.id GROUP BY League.id, League.name ORDER BY match_count DESC LIMIT 1;\t----- bird -----\teuropean_football_2",
    "1033": "SELECT AVG(height) FROM Player WHERE birthday >= '1990-01-01 00:00:00' AND birthday < '1996-01-01 00:00:00';\t----- bird -----\teuropean_football_2",
    "1034": "SELECT player_api_id FROM Player_Attributes WHERE substr(date,1,4) = '2010' AND overall_rating = (SELECT MAX(overall_rating) FROM Player_Attributes WHERE substr(date,1,4) = '2010');\t----- bird -----\teuropean_football_2",
    "1035": "SELECT DISTINCT team_fifa_api_id FROM Team_Attributes WHERE buildUpPlaySpeed > 50 AND buildUpPlaySpeed < 60;\t----- bird -----\teuropean_football_2",
    "1036": "SELECT team_long_name FROM Team JOIN Team_Attributes ON Team.team_api_id = Team_Attributes.team_api_id WHERE strftime('%Y', Team_Attributes.date) = '2012' AND buildUpPlayPassing > (SELECT AVG(buildUpPlayPassing) FROM Team_Attributes WHERE strftime('%Y', date) = '2012' AND buildUpPlayPassing IS NOT NULL) GROUP BY team_long_name;\t----- bird -----\teuropean_football_2",
    "1037": "SELECT 100.0 * SUM(CASE WHEN preferred_foot = 'left' THEN 1 ELSE 0 END) / COUNT(*) AS left_foot_percentage FROM Player WHERE YEAR(birthday) BETWEEN 1987 AND 1992;\t----- bird -----\teuropean_football_2",
    "1038": "SELECT League.name, SUM(Match.home_team_goal + Match.away_team_goal) AS total_goals FROM Match JOIN League ON Match.league_id = League.id GROUP BY League.name ORDER BY total_goals ASC LIMIT 5;\t----- bird -----\teuropean_football_2",
    "1039": "SELECT AVG(pa.long_shots) AS average_long_shots FROM Player p JOIN Player_Attributes pa ON p.player_fifa_api_id = pa.player_fifa_api_id WHERE p.player_name = 'Ahmed Samir Farag';\t----- bird -----\teuropean_football_2",
    "1040": "SELECT p.player_name FROM Player p JOIN Player_Attributes pa ON p.player_fifa_api_id = pa.player_fifa_api_id WHERE p.height > 180 GROUP BY p.player_name ORDER BY AVG(pa.heading_accuracy) DESC LIMIT 10;\t----- bird -----\teuropean_football_2",
    "1041": "SELECT t.team_long_name FROM Team_Attributes ta JOIN Team t ON ta.team_api_id = t.team_api_id WHERE ta.buildUpPlayDribblingClass = 'Normal' AND ta.date >= '2014-01-01 00:00:00' AND ta.date <= '2014-12-31 23:59:59' GROUP BY t.team_long_name HAVING AVG(ta.chanceCreationPassing) < (SELECT AVG(chanceCreationPassing) FROM Team_Attributes WHERE date >= '2014-01-01 00:00:00' AND date <= '2014-12-31 23:59:59') ORDER BY AVG(ta.chanceCreationPassing) DESC;\t----- bird -----\teuropean_football_2",
    "1042": "SELECT League.name FROM Match JOIN League ON Match.league_id = League.id WHERE Match.season = '2009/2010' GROUP BY League.name HAVING AVG(home_team_goal) > AVG(away_team_goal);\t----- bird -----\teuropean_football_2",
    "1043": "SELECT team_short_name FROM Team WHERE team_long_name = 'Queens Park Rangers';\t----- bird -----\teuropean_football_2",
    "1044": "SELECT player_name FROM Player WHERE SUBSTR(birthday,1,7) = '1970-10';\t----- bird -----\teuropean_football_2",
    "1045": "SELECT pa.attacking_work_rate FROM Player p JOIN Player_Attributes pa ON p.player_api_id = pa.player_api_id WHERE p.player_name = 'Franco Zennaro' ORDER BY pa.date DESC LIMIT 1;\t----- bird -----\teuropean_football_2",
    "1046": "SELECT buildUpPlayPositioningClass FROM Team_Attributes WHERE team_api_id = (SELECT team_api_id FROM Team WHERE team_long_name = 'ADO Den Haag') ORDER BY date DESC LIMIT 1;\t----- bird -----\teuropean_football_2",
    "1047": "SELECT pa.heading_accuracy FROM Player p JOIN Player_Attributes pa ON p.player_api_id = pa.player_api_id WHERE p.player_name = 'Francois Affolter' AND pa.date = '2014-09-18 00:00:00' LIMIT 1;\t----- bird -----\teuropean_football_2",
    "1048": "SELECT AVG(pa.overall_rating) AS overall_rating FROM Player p JOIN Player_Attributes pa ON p.player_api_id = pa.player_api_id WHERE p.player_name = 'Gabriel Tamas' AND strftime('%Y', pa.date) = '2011';\t----- bird -----\teuropean_football_2",
    "1049": "SELECT COUNT(*) FROM Match m JOIN League l ON m.league_id = l.id JOIN Country c ON m.country_id = c.id WHERE l.name = 'Scotland Premier League' AND m.season = '2015/2016';\t----- bird -----\teuropean_football_2",
    "1050": "SELECT pa.preferred_foot FROM Player p JOIN Player_Attributes pa ON p.player_api_id = pa.player_api_id WHERE p.birthday = (SELECT MAX(birthday) FROM Player) ORDER BY pa.date DESC LIMIT 1;\t----- bird -----\teuropean_football_2",
    "1051": "SELECT p.player_name FROM Player p JOIN Player_Attributes pa ON p.player_api_id = pa.player_api_id WHERE pa.potential = (SELECT MAX(potential) FROM Player_Attributes);\t----- bird -----\teuropean_football_2",
    "1052": "SELECT COUNT(DISTINCT p.id) FROM Player p JOIN Player_Attributes pa ON p.player_api_id = pa.player_api_id WHERE p.weight < 130 AND pa.preferred_foot = 'left';\t----- bird -----\teuropean_football_2",
    "1053": "SELECT DISTINCT t.team_short_name FROM Team t JOIN Team_Attributes ta ON t.team_api_id = ta.team_api_id WHERE ta.chanceCreationPassingClass = 'Risky';\t----- bird -----\teuropean_football_2",
    "1054": "SELECT pa.defensive_work_rate FROM Player p JOIN Player_Attributes pa ON p.player_api_id = pa.player_api_id WHERE p.player_name = 'David Wilson' ORDER BY pa.date DESC LIMIT 1;\t----- bird -----\teuropean_football_2",
    "1055": "SELECT p.birthday FROM Player p JOIN Player_Attributes pa ON p.player_api_id = pa.player_api_id WHERE pa.overall_rating = (SELECT MAX(overall_rating) FROM Player_Attributes) LIMIT 1;\t----- bird -----\teuropean_football_2",
    "1056": "SELECT name FROM League WHERE country_id = (SELECT id FROM Country WHERE name = 'Netherlands');\t----- bird -----\teuropean_football_2",
    "1057": "SELECT AVG(home_team_goal) FROM Match JOIN Country ON Match.country_id = Country.id WHERE Country.name = 'Poland' AND Match.season = '2010/2011';\t----- bird -----\teuropean_football_2",
    "1058": "SELECT p.player_name, AVG(pa.finishing) AS avg_finishing FROM Player p JOIN Player_Attributes pa ON p.player_api_id = pa.player_api_id WHERE p.height IN (SELECT MAX(height) FROM Player UNION SELECT MIN(height) FROM Player) GROUP BY p.player_name ORDER BY avg_finishing DESC LIMIT 1;\t----- bird -----\teuropean_football_2",
    "1059": "SELECT player_name FROM Player WHERE height > 180;\t----- bird -----\teuropean_football_2",
    "1060": "SELECT COUNT(*) FROM Player WHERE strftime('%Y', birthday) > '1990';\t----- bird -----\teuropean_football_2",
    "1061": "SELECT COUNT(*) FROM Player WHERE player_name LIKE 'Adam %' AND weight > 170;\t----- bird -----\teuropean_football_2",
    "1062": "SELECT DISTINCT p.player_name FROM Player p JOIN Player_Attributes pa ON p.player_api_id = pa.player_api_id WHERE pa.overall_rating > 80 AND strftime('%Y', pa.date) BETWEEN '2008' AND '2010';\t----- bird -----\teuropean_football_2",
    "1063": "SELECT pa.potential FROM Player p JOIN Player_Attributes pa ON p.player_api_id = pa.player_api_id WHERE p.player_name = 'Aaron Doran' ORDER BY pa.date DESC LIMIT 1;\t----- bird -----\teuropean_football_2",
    "1064": "SELECT player_name FROM Player JOIN Player_Attributes ON Player.player_api_id = Player_Attributes.player_api_id WHERE Player_Attributes.preferred_foot = 'left';\t----- bird -----\teuropean_football_2",
    "1065": "SELECT DISTINCT Team.team_long_name FROM Team JOIN Team_Attributes ON Team.team_api_id = Team_Attributes.team_api_id WHERE Team_Attributes.buildUpPlaySpeedClass = 'Fast';\t----- bird -----\teuropean_football_2",
    "1066": "SELECT buildUpPlayPassingClass FROM Team_Attributes WHERE team_api_id = (SELECT team_api_id FROM Team WHERE team_short_name = 'CLB') ORDER BY date DESC LIMIT 1;\t----- bird -----\teuropean_football_2",
    "1067": "SELECT DISTINCT t.team_short_name FROM Team_Attributes ta JOIN Team t ON ta.team_api_id = t.team_api_id WHERE ta.buildUpPlayPassing > 70;\t----- bird -----\teuropean_football_2",
    "1068": "SELECT AVG(t2.overall_rating) FROM Player_Attributes t2 JOIN Player t1 ON t2.player_api_id = t1.player_api_id WHERE strftime('%Y', t2.date) BETWEEN '2010' AND '2015' AND t1.height > 170;\t----- bird -----\teuropean_football_2",
    "1069": "SELECT player_name FROM Player WHERE height = (SELECT MIN(height) FROM Player);\t----- bird -----\teuropean_football_2",
    "1070": "SELECT Country.name FROM League JOIN Country ON League.country_id = Country.id WHERE League.name = 'Italy Serie A';\t----- bird -----\teuropean_football_2",
    "1071": "SELECT team_short_name FROM Team JOIN Team_Attributes ON Team.team_api_id = Team_Attributes.team_api_id WHERE buildUpPlaySpeed = 31 AND buildUpPlayDribbling = 53 AND buildUpPlayPassing = 32;\t----- bird -----\teuropean_football_2",
    "1072": "SELECT AVG(pa.overall_rating) AS average_overall_rating FROM Player p JOIN Player_Attributes pa ON p.player_api_id = pa.player_api_id WHERE p.player_name = 'Aaron Doran';\t----- bird -----\teuropean_football_2",
    "1073": "SELECT COUNT(*) FROM Match m JOIN League l ON m.league_id = l.id WHERE l.name = 'Germany 1. Bundesliga' AND strftime('%Y-%m', m.date) BETWEEN '2008-08' AND '2008-10';\t----- bird -----\teuropean_football_2",
    "1074": "SELECT DISTINCT Team.team_short_name FROM Match JOIN Team ON Match.home_team_api_id = Team.team_api_id WHERE Match.home_team_goal = 10;\t----- bird -----\teuropean_football_2",
    "1075": "SELECT p.player_name FROM Player p JOIN Player_Attributes pa ON p.player_api_id = pa.player_api_id WHERE pa.potential = 61 AND pa.balance = (SELECT MAX(balance) FROM Player_Attributes WHERE potential = 61);\t----- bird -----\teuropean_football_2",
    "1076": "SELECT (AVG(CASE WHEN p.player_name = 'Abdou Diallo' THEN pa.ball_control END) - AVG(CASE WHEN p.player_name = 'Aaron Appindangoye' THEN pa.ball_control END)) AS difference_avg_ball_control FROM Player p JOIN Player_Attributes pa ON p.player_api_id = pa.player_api_id WHERE p.player_name IN ('Abdou Diallo', 'Aaron Appindangoye');\t----- bird -----\teuropean_football_2",
    "1077": "SELECT team_long_name FROM Team WHERE team_short_name = 'GEN';\t----- bird -----\teuropean_football_2",
    "1078": "SELECT player_name, birthday FROM Player WHERE player_name IN ('Aaron Lennon', 'Abdelaziz Barrada') ORDER BY birthday ASC LIMIT 1;\t----- bird -----\teuropean_football_2",
    "1079": "SELECT player_name FROM Player WHERE height = (SELECT MAX(height) FROM Player);\t----- bird -----\teuropean_football_2",
    "1080": "SELECT COUNT(DISTINCT player_api_id) FROM Player_Attributes WHERE preferred_foot = 'left' AND attacking_work_rate = 'low';\t----- bird -----\teuropean_football_2",
    "1081": "SELECT Country.name FROM League JOIN Country ON League.country_id = Country.id WHERE League.name = 'Belgium Jupiler League';\t----- bird -----\teuropean_football_2",
    "1082": "SELECT name FROM League WHERE country_id = (SELECT id FROM Country WHERE name = 'Germany');\t----- bird -----\teuropean_football_2",
    "1083": "SELECT p.player_name, pa.overall_rating FROM Player p JOIN Player_Attributes pa ON p.player_api_id = pa.player_api_id WHERE pa.overall_rating = (SELECT MAX(overall_rating) FROM Player_Attributes) LIMIT 1;\t----- bird -----\teuropean_football_2",
    "1084": "SELECT COUNT(DISTINCT p.id) FROM Player p JOIN Player_Attributes pa ON p.player_api_id = pa.player_api_id WHERE strftime('%Y', p.birthday) < '1986' AND pa.defensive_work_rate = 'high';\t----- bird -----\teuropean_football_2",
    "1085": "SELECT p.player_name, MAX(pa.crossing) AS max_crossing FROM Player p JOIN Player_Attributes pa ON p.player_api_id = pa.player_api_id WHERE p.player_name IN ('Alexis', 'Ariel Borysiuk', 'Arouna Kone') GROUP BY p.player_name ORDER BY max_crossing DESC LIMIT 1;\t----- bird -----\teuropean_football_2",
    "1086": "SELECT pa.heading_accuracy FROM Player_Attributes pa JOIN Player p ON pa.player_api_id = p.player_api_id WHERE p.player_name = 'Ariel Borysiuk' ORDER BY pa.date DESC LIMIT 1;\t----- bird -----\teuropean_football_2",
    "1087": "SELECT COUNT(DISTINCT pa.player_api_id) FROM Player_Attributes pa JOIN Player p ON pa.player_api_id = p.player_api_id WHERE p.height > 180 AND pa.volleys > 70;\t----- bird -----\teuropean_football_2",
    "1088": "SELECT DISTINCT p.player_name FROM Player p JOIN Player_Attributes pa ON p.player_api_id = pa.player_api_id WHERE pa.volleys > 70 AND pa.dribbling > 70;\t----- bird -----\teuropean_football_2",
    "1089": "SELECT COUNT(*) FROM Match m JOIN Country c ON m.country_id = c.id WHERE m.season = '2008/2009' AND c.name = 'Belgium';\t----- bird -----\teuropean_football_2",
    "1090": "SELECT pa.long_passing FROM Player p JOIN Player_Attributes pa ON p.player_api_id = pa.player_api_id WHERE p.birthday = (SELECT MIN(birthday) FROM Player) ORDER BY pa.date DESC LIMIT 1;\t----- bird -----\teuropean_football_2",
    "1091": "SELECT COUNT(*) FROM Match m JOIN League l ON m.league_id = l.id WHERE l.name = 'Belgium Jupiler League' AND SUBSTR(m.date, 1, 7) = '2009-04';\t----- bird -----\teuropean_football_2",
    "1092": "SELECT League.name FROM Match JOIN League ON Match.league_id = League.id WHERE Match.season = '2008/2009' GROUP BY League.name ORDER BY COUNT(Match.id) DESC LIMIT 1;\t----- bird -----\teuropean_football_2",
    "1093": "SELECT AVG(pa.overall_rating) FROM Player_Attributes pa JOIN Player p ON pa.player_api_id = p.player_api_id WHERE strftime('%Y', p.birthday) < '1986';\t----- bird -----\teuropean_football_2",
    "1094": "SELECT ((a.overall_rating - b.overall_rating) / b.overall_rating) * 100 AS percentage_higher FROM Player p1 JOIN Player_Attributes a ON p1.player_api_id = a.player_api_id AND p1.player_name = 'Ariel Borysiuk' JOIN Player p2 JOIN Player_Attributes b ON p2.player_api_id = b.player_api_id AND p2.player_name = 'Paulin Puel' LIMIT 1;\t----- bird -----\teuropean_football_2",
    "1095": "SELECT AVG(buildUpPlaySpeed) FROM Team_Attributes WHERE team_api_id = (SELECT team_api_id FROM Team WHERE team_long_name = 'Heart of Midlothian');\t----- bird -----\teuropean_football_2",
    "1096": "SELECT AVG(PA.overall_rating) FROM Player_Attributes PA JOIN Player P ON PA.player_api_id = P.player_api_id WHERE P.player_name = 'Pietro Marino';\t----- bird -----\teuropean_football_2",
    "1097": "SELECT SUM(pa.crossing) AS total_crossing_score FROM Player p JOIN Player_Attributes pa ON p.player_api_id = pa.player_api_id WHERE p.player_name = 'Aaron Lennox';\t----- bird -----\teuropean_football_2",
    "1098": "SELECT MAX(ta.chanceCreationPassing) AS highest_chance_creation_passing, ta.chanceCreationPassingClass FROM Team_Attributes ta JOIN Team t ON ta.team_api_id = t.team_api_id WHERE t.team_long_name = 'Ajax' GROUP BY ta.chanceCreationPassingClass ORDER BY highest_chance_creation_passing DESC LIMIT 1;\t----- bird -----\teuropean_football_2",
    "1099": "SELECT preferred_foot FROM Player_Attributes PA JOIN Player P ON PA.player_api_id = P.player_api_id WHERE P.player_name = 'Abdou Diallo' ORDER BY PA.date DESC LIMIT 1;\t----- bird -----\teuropean_football_2",
    "1100": "SELECT MAX(PA.overall_rating) FROM Player_Attributes PA JOIN Player P ON PA.player_api_id = P.player_api_id WHERE P.player_name = 'Dorlan Pabon';\t----- bird -----\teuropean_football_2",
    "1101": "SELECT AVG(M.away_team_goal) FROM Match M JOIN Team T ON M.away_team_api_id = T.team_api_id JOIN League L ON M.league_id = L.id JOIN Country C ON L.country_id = C.id WHERE T.team_long_name = 'Parma' AND C.name = 'Italy';\t----- bird -----\teuropean_football_2",
    "1102": "SELECT p.player_name FROM Player p JOIN Player_Attributes pa ON p.player_api_id = pa.player_api_id WHERE pa.overall_rating = 77 AND pa.date LIKE '2016-06-23%' ORDER BY p.birthday ASC LIMIT 1;\t----- bird -----\teuropean_football_2",
    "1103": "SELECT pa.overall_rating FROM Player_Attributes pa JOIN Player p ON pa.player_api_id = p.player_api_id WHERE p.player_name = 'Aaron Mooy' AND pa.date LIKE '2016-02-04%' LIMIT 1;\t----- bird -----\teuropean_football_2",
    "1104": "SELECT potential FROM Player_Attributes PA JOIN Player P ON PA.player_api_id = P.player_api_id WHERE P.player_name = 'Francesco Parravicini' AND PA.date = '2010-08-30 00:00:00' LIMIT 1;\t----- bird -----\teuropean_football_2",
    "1105": "SELECT attacking_work_rate FROM Player_Attributes PA JOIN Player P ON PA.player_api_id = P.player_api_id WHERE P.player_name = 'Francesco Migliore' AND PA.date LIKE '2015-05-01%' LIMIT 1;\t----- bird -----\teuropean_football_2",
    "1106": "SELECT pa.defensive_work_rate FROM Player_Attributes pa JOIN Player p ON pa.player_api_id = p.player_api_id WHERE p.player_name = 'Kevin Berigaud' AND pa.date = '2013-02-22 00:00:00';\t----- bird -----\teuropean_football_2",
    "1107": "SELECT MIN(pa.date) FROM Player_Attributes pa JOIN Player p ON pa.player_api_id = p.player_api_id WHERE p.player_name = 'Kevin Constant' AND pa.crossing = (SELECT MAX(crossing) FROM Player_Attributes WHERE player_api_id = p.player_api_id);\t----- bird -----\teuropean_football_2",
    "1108": "SELECT buildUpPlaySpeedClass FROM Team_Attributes WHERE team_api_id = (SELECT team_api_id FROM Team WHERE team_long_name = 'Willem II') AND date = '2012-02-22' LIMIT 1;\t----- bird -----\teuropean_football_2",
    "1109": "SELECT buildUpPlayDribblingClass FROM Team_Attributes WHERE team_fifa_api_id = (SELECT team_fifa_api_id FROM Team WHERE team_short_name = 'LEI') AND date = '2015-09-10 00:00:00' LIMIT 1;\t----- bird -----\teuropean_football_2",
    "1110": "SELECT buildUpPlayPassingClass FROM Team_Attributes WHERE team_api_id = (SELECT team_api_id FROM Team WHERE team_long_name = 'FC Lorient') AND date LIKE '2010-02-22%' LIMIT 1;\t----- bird -----\teuropean_football_2",
    "1111": "SELECT ta.chanceCreationPassingClass FROM Team_Attributes ta JOIN Team t ON ta.team_api_id = t.team_api_id WHERE t.team_long_name = 'PEC Zwolle' AND ta.date = '2013-09-20 00:00:00' LIMIT 1;\t----- bird -----\teuropean_football_2",
    "1112": "SELECT chanceCreationCrossingClass FROM Team_Attributes WHERE team_api_id = (SELECT team_api_id FROM Team WHERE team_long_name = 'Hull City') AND date = '2010-02-22 00:00:00' LIMIT 1;\t----- bird -----\teuropean_football_2",
    "1113": "SELECT defenceAggressionClass FROM Team_Attributes WHERE team_api_id = (SELECT team_api_id FROM Team WHERE team_long_name = 'Hannover 96') AND date LIKE '2015-09-10%' LIMIT 1;\t----- bird -----\teuropean_football_2",
    "1114": "SELECT AVG(overall_rating) FROM Player_Attributes PA JOIN Player P ON PA.player_api_id = P.player_api_id WHERE P.player_name = 'Marko Arnautovic' AND LEFT(PA.date, 10) BETWEEN '2007-02-22' AND '2016-04-21';\t----- bird -----\teuropean_football_2",
    "1115": "SELECT ((ld.overall_rating - jb.overall_rating) / ld.overall_rating) * 100 AS percentage_higher FROM Player_Attributes ld_attr JOIN Player ld ON ld_attr.player_api_id = ld.player_api_id AND ld.player_name = 'Landon Donovan' JOIN Player_Attributes jb_attr ON jb_attr.date = ld_attr.date JOIN Player jb ON jb_attr.player_api_id = jb.player_api_id AND jb.player_name = 'Jordan Bowery' WHERE ld_attr.date = '2013-07-12' AND jb_attr.date = '2013-07-12' AND ld_attr.date = jb_attr.date LIMIT 1;\t----- bird -----\teuropean_football_2",
    "1116": "SELECT player_name FROM Player WHERE height = (SELECT MAX(height) FROM Player);\t----- bird -----\teuropean_football_2",
    "1117": "SELECT player_api_id FROM Player ORDER BY weight DESC LIMIT 10;\t----- bird -----\teuropean_football_2",
    "1118": "SELECT player_name FROM Player WHERE (julianday('now') - julianday(birthday))/365.25 >= 35;\t----- bird -----\teuropean_football_2",
    "1119": "SELECT SUM(M.home_team_goal) FROM Match M JOIN Player P ON P.player_api_id IN (M.home_player_1, M.home_player_2, M.home_player_3, M.home_player_4, M.home_player_5, M.home_player_6, M.home_player_7, M.home_player_8, M.home_player_9, M.home_player_10, M.home_player_11) WHERE P.player_name = 'Aaron Lennon';\t----- bird -----\teuropean_football_2",
    "1120": "SELECT SUM(m.away_team_goal) FROM Match m JOIN Player p ON (p.player_api_id IN (m.away_player_1, m.away_player_2, m.away_player_3, m.away_player_4, m.away_player_5, m.away_player_6, m.away_player_7, m.away_player_8, m.away_player_9, m.away_player_10, m.away_player_11)) WHERE p.player_name IN ('Daan Smith', 'Filipe Ferreira');\t----- bird -----\teuropean_football_2",
    "1121": "SELECT SUM(m.home_team_goal) FROM Match m JOIN Player p ON (p.player_api_id IN (m.home_player_1, m.home_player_2, m.home_player_3, m.home_player_4, m.home_player_5, m.home_player_6, m.home_player_7, m.home_player_8, m.home_player_9, m.home_player_10, m.home_player_11)) WHERE (strftime('%Y', 'now') - strftime('%Y', p.birthday) - (strftime('%m-%d', 'now') < strftime('%m-%d', p.birthday))) <= 30;\t----- bird -----\teuropean_football_2",
    "1122": "SELECT player_name FROM Player WHERE player_api_id = (SELECT player_api_id FROM Player_Attributes WHERE overall_rating = (SELECT MAX(overall_rating) FROM Player_Attributes) LIMIT 1) LIMIT 1;\t----- bird -----\teuropean_football_2",
    "1123": "SELECT player_name FROM Player JOIN Player_Attributes ON Player.player_api_id = Player_Attributes.player_api_id WHERE potential = (SELECT MAX(potential) FROM Player_Attributes);\t----- bird -----\teuropean_football_2",
    "1124": "SELECT DISTINCT p.player_name FROM Player p JOIN Player_Attributes pa ON p.player_api_id = pa.player_api_id WHERE pa.attacking_work_rate = 'high';\t----- bird -----\teuropean_football_2",
    "1125": "SELECT player_name FROM Player WHERE player_api_id = (SELECT player_api_id FROM Player_Attributes WHERE finishing = 1 ORDER BY birthday ASC LIMIT 1);\t----- bird -----\teuropean_football_2",
    "1126": "SELECT DISTINCT p.player_name FROM Player p JOIN Country c ON c.name = 'Belgium' JOIN Match m ON (m.home_player_1 = p.player_api_id OR m.home_player_2 = p.player_api_id OR m.home_player_3 = p.player_api_id OR m.home_player_4 = p.player_api_id OR m.home_player_5 = p.player_api_id OR m.home_player_6 = p.player_api_id OR m.home_player_7 = p.player_api_id OR m.home_player_8 = p.player_api_id OR m.home_player_9 = p.player_api_id OR m.home_player_10 = p.player_api_id OR m.home_player_11 = p.player_api_id OR m.away_player_1 = p.player_api_id OR m.away_player_2 = p.player_api_id OR m.away_player_3 = p.player_api_id OR m.away_player_4 = p.player_api_id OR m.away_player_5 =;\t----- bird -----\teuropean_football_2",
    "1127": "SELECT DISTINCT p.player_name, c.name AS country FROM Player_Attributes pa JOIN Player p ON pa.player_api_id = p.player_api_id JOIN Country c ON p.player_api_id IN (SELECT player_api_id FROM Player) WHERE pa.vision > 89;\t----- bird -----\teuropean_football_2",
    "1128": "SELECT c.name FROM Player p JOIN Country c ON c.id = (SELECT m.country_id FROM Match m WHERE m.home_team_api_id IN (SELECT t.team_api_id FROM Team t WHERE t.team_api_id = p.player_api_id) OR m.away_team_api_id IN (SELECT t.team_api_id FROM Team t WHERE t.team_api_id = p.player_api_id) LIMIT 1) GROUP BY c.name ORDER BY AVG(p.weight) DESC LIMIT 1;\t----- bird -----\teuropean_football_2",
    "1129": "SELECT DISTINCT t.team_long_name FROM Team t JOIN Team_Attributes ta ON t.team_api_id = ta.team_api_id WHERE ta.buildUpPlaySpeedClass = 'Slow';\t----- bird -----\teuropean_football_2",
    "1130": "SELECT DISTINCT t.team_short_name FROM Team t JOIN Team_Attributes ta ON t.team_api_id = ta.team_api_id WHERE ta.chanceCreationPassingClass = 'Safe';\t----- bird -----\teuropean_football_2",
    "1131": "SELECT AVG(height) FROM Player WHERE id IN (SELECT p.id FROM Player p JOIN Country c ON c.name = 'Italy' JOIN Match m ON (m.home_team_api_id = p.player_api_id OR m.away_team_api_id = p.player_api_id));\t----- bird -----\teuropean_football_2",
    "1132": "SELECT player_name FROM Player WHERE height > 180 ORDER BY player_name ASC LIMIT 3;\t----- bird -----\teuropean_football_2",
    "1133": "SELECT COUNT(*) FROM Player WHERE player_name LIKE 'Aaron%' AND birthday > '1990-12-31';\t----- bird -----\teuropean_football_2",
    "1134": "SELECT (SELECT jumping FROM Player_Attributes WHERE id = 6) - (SELECT jumping FROM Player_Attributes WHERE id = 23) AS jumping_difference;\t----- bird -----\teuropean_football_2",
    "1135": "SELECT player_api_id FROM Player_Attributes WHERE preferred_foot = 'right' AND potential = (SELECT MIN(potential) FROM Player_Attributes) LIMIT 5;\t----- bird -----\teuropean_football_2",
    "1136": "SELECT COUNT(DISTINCT player_api_id) FROM Player_Attributes WHERE crossing = (SELECT MAX(crossing) FROM Player_Attributes) AND preferred_foot = 'left';\t----- bird -----\teuropean_football_2",
    "1137": "SELECT 100.0 * COUNT(DISTINCT CASE WHEN strength > 80 AND stamina > 80 THEN player_api_id END) / COUNT(DISTINCT player_api_id) AS percentage FROM Player_Attributes;\t----- bird -----\teuropean_football_2",
    "1138": "SELECT Country.name FROM League JOIN Country ON League.country_id = Country.id WHERE League.name = 'Poland Ekstraklasa';\t----- bird -----\teuropean_football_2",
    "1139": "SELECT home_team_goal, away_team_goal FROM Match JOIN League ON Match.league_id = League.id WHERE League.name = 'Belgium Jupiler League' AND Match.date LIKE '2008-09-24%';\t----- bird -----\teuropean_football_2",
    "1140": "SELECT sprint_speed, agility, acceleration FROM Player_Attributes WHERE player_api_id = (SELECT player_api_id FROM Player WHERE player_name = 'Alexis Blin') ORDER BY date DESC LIMIT 1;\t----- bird -----\teuropean_football_2",
    "1141": "SELECT DISTINCT buildUpPlaySpeedClass FROM Team_Attributes TA JOIN Team T ON TA.team_api_id = T.team_api_id WHERE T.team_long_name = 'KSV Cercle Brugge';\t----- bird -----\teuropean_football_2",
    "1142": "SELECT COUNT(*) FROM Match m JOIN League l ON m.league_id = l.id JOIN Country c ON l.country_id = c.id WHERE m.season = '2015/2016' AND l.name = 'Serie A' AND c.name = 'Italy';\t----- bird -----\teuropean_football_2",
    "1143": "SELECT MAX(m.home_team_goal) FROM Match m JOIN League l ON m.league_id = l.id JOIN Country c ON m.country_id = c.id WHERE c.name = 'Netherlands' AND l.name = 'Eredivisie';\t----- bird -----\teuropean_football_2",
    "1144": "SELECT pa.finishing, pa.curve FROM Player_Attributes pa JOIN Player p ON pa.player_api_id = p.player_api_id WHERE p.weight = (SELECT MAX(weight) FROM Player) ORDER BY pa.date DESC LIMIT 1;\t----- bird -----\teuropean_football_2",
    "1145": "SELECT League.name, COUNT(Match.id) AS games_count FROM Match JOIN League ON Match.league_id = League.id WHERE Match.season = '2015/2016' GROUP BY League.name ORDER BY games_count DESC LIMIT 4;\t----- bird -----\teuropean_football_2",
    "1146": "SELECT t.team_long_name FROM Match m JOIN Team t ON m.away_team_api_id = t.team_api_id WHERE m.away_team_goal = (SELECT MAX(away_team_goal) FROM Match) LIMIT 1;\t----- bird -----\teuropean_football_2",
    "1147": "SELECT p.player_name FROM Player p JOIN Player_Attributes pa ON p.player_api_id = pa.player_api_id WHERE pa.overall_rating = (SELECT MAX(overall_rating) FROM Player_Attributes) LIMIT 1;\t----- bird -----\teuropean_football_2",
    "1148": "SELECT (COUNT(DISTINCT p.id) FILTER (WHERE p.height < 180 AND pa.overall_rating > 70) * 100.0) / COUNT(DISTINCT p.id) AS percentage FROM Player p JOIN Player_Attributes pa ON p.player_api_id = pa.player_api_id;\t----- bird -----\teuropean_football_2",
    "1149": "SELECT 'In-patient' AS Patient_Type, COUNT(ID) AS Count FROM Patient WHERE SEX = 'M' AND Admission = '+' UNION ALL SELECT 'Outpatient', COUNT(ID) FROM Patient WHERE SEX = 'M' AND Admission = '-' UNION ALL SELECT 'Percentage Deviation', (CAST((SELECT COUNT(ID) FROM Patient WHERE SEX = 'M' AND Admission = '+') AS FLOAT) - CAST((SELECT COUNT(ID) FROM Patient WHERE SEX = 'M' AND Admission = '-') AS FLOAT)) / NULLIF(CAST((SELECT COUNT(ID) FROM Patient WHERE SEX = 'M' AND Admission = '-') AS FLOAT), 0) * 100 AS Count;\t----- bird -----\tthrombosis_prediction",
    "1150": "SELECT 100.0 * COUNT(CASE WHEN YEAR(Birthday) > 1930 THEN 1 END) / COUNT(*) AS percentage FROM Patient WHERE SEX = 'F';\t----- bird -----\tthrombosis_prediction",
    "1151": "SELECT 100.0 * SUM(CASE WHEN Admission = '+' THEN 1 ELSE 0 END) / COUNT(*) AS inpatient_percentage FROM Patient WHERE Birthday BETWEEN '1930-01-01' AND '1940-12-31';\t----- bird -----\tthrombosis_prediction",
    "1152": "SELECT CAST(SUM(CASE WHEN Admission = '-' THEN 1 ELSE 0 END) AS FLOAT) / NULLIF(SUM(CASE WHEN Admission = '+' THEN 1 ELSE 0 END), 0) AS OutpatientToInpatientRatio FROM Patient WHERE Diagnosis = 'SLE';\t----- bird -----\tthrombosis_prediction",
    "1153": "SELECT Patient.Diagnosis, Laboratory.Date FROM Patient LEFT JOIN Laboratory ON Patient.ID = Laboratory.ID WHERE Patient.ID = '30609';\t----- bird -----\tthrombosis_prediction",
    "1154": "SELECT Patient.SEX, Patient.Birthday, Examination.`Examination Date`, Examination.Symptoms FROM Patient JOIN Examination ON Patient.ID = Examination.ID WHERE Patient.ID = '163109';\t----- bird -----\tthrombosis_prediction",
    "1155": "SELECT DISTINCT Patient.ID, Patient.SEX, Patient.Birthday FROM Patient JOIN Laboratory ON Patient.ID = Laboratory.ID WHERE Laboratory.LDH > 500;\t----- bird -----\tthrombosis_prediction",
    "1156": "SELECT Patient.ID, YEAR(CURRENT_TIMESTAMP) - YEAR(Patient.Birthday) AS age FROM Patient JOIN Examination ON Patient.ID = Examination.ID WHERE Examination.RVVT = '+';\t----- bird -----\tthrombosis_prediction",
    "1157": "SELECT Patient.ID, Patient.SEX, Patient.Diagnosis FROM Patient JOIN Examination ON Patient.ID = Examination.ID WHERE Examination.Thrombosis = 2;\t----- bird -----\tthrombosis_prediction",
    "1158": "SELECT DISTINCT Patient.* FROM Patient JOIN Laboratory ON Patient.ID = Laboratory.ID WHERE YEAR(Patient.Birthday) = 1937 AND Laboratory.`T-CHO` >= 250;\t----- bird -----\tthrombosis_prediction",
    "1159": "SELECT DISTINCT Patient.ID, Patient.SEX, Patient.Diagnosis FROM Patient JOIN Laboratory ON Patient.ID = Laboratory.ID WHERE Laboratory.ALB < 3.5;\t----- bird -----\tthrombosis_prediction",
    "1160": "SELECT (COUNT(DISTINCT CASE WHEN L.TP < 6.0 OR L.TP > 8.5 THEN P.ID END) * 100.0) / COUNT(DISTINCT P.ID) AS percentage FROM Patient P LEFT JOIN Laboratory L ON P.ID = L.ID WHERE P.SEX = 'F';\t----- bird -----\tthrombosis_prediction",
    "1161": "SELECT AVG(e.`aCL IgG`) FROM Examination e JOIN Patient p ON e.ID = p.ID WHERE p.Admission = '+' AND TIMESTAMPDIFF(YEAR, p.Birthday, CURDATE()) >= 50;\t----- bird -----\tthrombosis_prediction",
    "1162": "SELECT COUNT(*) FROM Patient WHERE SEX = 'F' AND YEAR(Description) = 1997 AND Admission = '-';\t----- bird -----\tthrombosis_prediction",
    "1163": "SELECT MIN(YEAR(`First Date`) - YEAR(Birthday)) AS youngest_age FROM Patient;\t----- bird -----\tthrombosis_prediction",
    "1164": "SELECT COUNT(DISTINCT Patient.ID) FROM Patient JOIN Examination ON Patient.ID = Examination.ID WHERE Examination.Thrombosis = '1' AND EXTRACT(YEAR FROM Examination.`Examination Date`) = 1997 AND Patient.SEX = 'F';\t----- bird -----\tthrombosis_prediction",
    "1165": "SELECT MAX(YEAR(P.Birthday)) - MIN(YEAR(P.Birthday)) AS age_gap FROM Patient P JOIN Laboratory L ON P.ID = L.ID WHERE L.TG >= 200;\t----- bird -----\tthrombosis_prediction",
    "1166": "SELECT e.Symptoms, e.Diagnosis FROM Examination e JOIN Patient p ON e.ID = p.ID WHERE e.Symptoms IS NOT NULL AND p.Birthday = (SELECT MAX(Birthday) FROM Patient WHERE ID IN (SELECT ID FROM Examination WHERE Symptoms IS NOT NULL)) LIMIT 1;\t----- bird -----\tthrombosis_prediction",
    "1167": "SELECT COUNT(DISTINCT Laboratory.ID)/12 AS average_male_patients_per_month FROM Laboratory JOIN Patient ON Laboratory.ID = Patient.ID WHERE Laboratory.Date BETWEEN '1998-01-01' AND '1998-12-31' AND Patient.SEX = 'M';\t----- bird -----\tthrombosis_prediction",
    "1168": "SELECT Laboratory.Date, YEAR(Patient.`First Date`) - YEAR(Patient.Birthday) AS AgeAtFirstAdmission FROM Patient JOIN Examination ON Patient.ID = Examination.ID JOIN Laboratory ON Patient.ID = Laboratory.ID WHERE Patient.Diagnosis = 'SJS' ORDER BY Patient.Birthday ASC LIMIT 1;\t----- bird -----\tthrombosis_prediction",
    "1169": "SELECT CAST(SUM(CASE WHEN p.SEX = 'M' AND l.UA > 8.0 THEN 1 ELSE 0 END) AS FLOAT) / NULLIF(SUM(CASE WHEN p.SEX = 'F' AND l.UA > 6.5 THEN 1 ELSE 0 END), 0) AS male_to_female_ratio FROM Patient p JOIN Laboratory l ON p.ID = l.ID WHERE (p.SEX = 'M' AND l.UA > 8.0) OR (p.SEX = 'F' AND l.UA > 6.5);\t----- bird -----\tthrombosis_prediction",
    "1170": "SELECT COUNT(*) FROM Patient p WHERE NOT EXISTS (SELECT 1 FROM Examination e WHERE e.ID = p.ID AND YEAR(e.`Examination Date`) - YEAR(p.`First Date`) < 1);\t----- bird -----\tthrombosis_prediction",
    "1171": "SELECT COUNT(DISTINCT Patient.ID) FROM Patient JOIN Examination ON Patient.ID = Examination.ID WHERE (strftime('%Y', 'now') - strftime('%Y', Patient.Birthday)) < 18 AND strftime('%Y', Examination.`Examination Date`) BETWEEN '1990' AND '1993';\t----- bird -----\tthrombosis_prediction",
    "1172": "SELECT COUNT(DISTINCT Laboratory.ID) FROM Laboratory JOIN Patient ON Laboratory.ID = Patient.ID WHERE Patient.SEX = 'M' AND Laboratory.`T-BIL` >= 2.0;\t----- bird -----\tthrombosis_prediction",
    "1173": "SELECT Diagnosis FROM Examination WHERE `Examination Date` BETWEEN '1985-01-01' AND '1995-12-31' GROUP BY Diagnosis ORDER BY COUNT(Diagnosis) DESC LIMIT 1;\t----- bird -----\tthrombosis_prediction",
    "1174": "SELECT AVG(1999 - YEAR(P.Birthday)) AS AverageAge FROM Patient P JOIN Laboratory L ON P.ID = L.ID WHERE L.Date BETWEEN '1991-10-01' AND '1991-10-30';\t----- bird -----\tthrombosis_prediction",
    "1175": "SELECT SUBTRACT(YEAR(Examination.`Examination Date`), YEAR(Patient.Birthday)) AS Age, Patient.Diagnosis FROM Laboratory JOIN Examination ON Laboratory.ID = Examination.ID JOIN Patient ON Examination.ID = Patient.ID WHERE Laboratory.HGB = (SELECT MAX(HGB) FROM Laboratory) LIMIT 1;\t----- bird -----\tthrombosis_prediction",
    "1176": "SELECT ANA FROM Examination WHERE ID = 3605340 AND `Examination Date` = '1996-12-02';\t----- bird -----\tthrombosis_prediction",
    "1177": "SELECT CASE WHEN T-CHO < 250 THEN 'Normal' ELSE 'Abnormal' END AS Cholesterol_Status FROM Laboratory WHERE ID = 2927464 AND Date = '1995-09-04';\t----- bird -----\tthrombosis_prediction",
    "1178": "SELECT SEX FROM Patient WHERE Diagnosis = 'AORTITIS' ORDER BY \"First Date\" ASC LIMIT 1;\t----- bird -----\tthrombosis_prediction",
    "1179": "SELECT e.`aCL IgM` FROM Examination e JOIN Patient p ON e.ID = p.ID WHERE p.Diagnosis = 'SLE' AND p.Description = '1994-02-19' AND e.`Examination Date` = '1993/11/12';\t----- bird -----\tthrombosis_prediction",
    "1180": "SELECT SEX FROM Patient p JOIN Laboratory l ON p.ID = l.ID WHERE l.GPT = 9 AND l.Date = '1992-06-12' LIMIT 1;\t----- bird -----\tthrombosis_prediction",
    "1181": "SELECT YEAR(L.Date) - YEAR(P.Birthday) AS AgeAtTest FROM Laboratory L JOIN Patient P ON L.ID = P.ID WHERE L.UA = '8.4' AND L.Date = '1991-10-21' LIMIT 1;\t----- bird -----\tthrombosis_prediction",
    "1182": "SELECT COUNT(L.ID) FROM Laboratory L JOIN Patient P ON L.ID = P.ID WHERE P.`First Date` = '1991-06-13' AND P.Diagnosis = 'SJS' AND YEAR(L.Date) = 1995;\t----- bird -----\tthrombosis_prediction",
    "1183": "SELECT Patient.Diagnosis FROM Patient JOIN Examination ON Patient.ID = Examination.ID WHERE Examination.Diagnosis = 'SLE' AND Examination.`Examination Date` = '1997-01-27' LIMIT 1;\t----- bird -----\tthrombosis_prediction",
    "1184": "SELECT Examination.Symptoms FROM Examination JOIN Patient ON Examination.ID = Patient.ID WHERE Patient.Birthday = '1959-03-01' AND Examination.`Examination Date` = '1993-09-27';\t----- bird -----\tthrombosis_prediction",
    "1185": "SELECT (SUM(CASE WHEN l.Date LIKE '1981-11-%' THEN l.`T-CHO` ELSE 0 END) - SUM(CASE WHEN l.Date LIKE '1981-12-%' THEN l.`T-CHO` ELSE 0 END)) / NULLIF(SUM(CASE WHEN l.Date LIKE '1981-11-%' THEN l.`T-CHO` ELSE 0 END),0) AS decrease_rate FROM Patient p JOIN Laboratory l ON p.ID = l.ID WHERE p.Birthday = '1959-02-18';\t----- bird -----\tthrombosis_prediction",
    "1186": "SELECT DISTINCT Patient.ID FROM Patient JOIN Examination ON Patient.ID = Examination.ID WHERE Patient.Diagnosis LIKE '%Behcet%' AND Examination.`Examination Date` >= '1997-01-01' AND Examination.`Examination Date` <= '1997-12-31';\t----- bird -----\tthrombosis_prediction",
    "1187": "SELECT DISTINCT Patient.ID FROM Patient JOIN Examination ON Patient.ID = Examination.ID JOIN Laboratory ON Patient.ID = Laboratory.ID WHERE Examination.`Examination Date` BETWEEN '1987-07-06' AND '1996-01-31' AND Laboratory.GPT > 30 AND Laboratory.ALB < 4;\t----- bird -----\tthrombosis_prediction",
    "1188": "SELECT ID FROM Patient WHERE SEX = 'F' AND YEAR(Birthday) = 1964 AND Admission = '+';\t----- bird -----\tthrombosis_prediction",
    "1189": "SELECT COUNT(DISTINCT p.ID) FROM Patient p JOIN Examination e ON p.ID = e.ID WHERE e.Thrombosis = 2 AND e.ANA = 'S' AND e.`aCL IgM` > (SELECT AVG(`aCL IgM`) * 1.2 FROM Examination);\t----- bird -----\tthrombosis_prediction",
    "1190": "SELECT 100.0 * SUM(CASE WHEN UA <= 6.5 THEN 1 ELSE 0 END) / COUNT(*) AS percentage FROM Laboratory WHERE U-PRO > 0 AND U-PRO < 30;\t----- bird -----\tthrombosis_prediction",
    "1191": "SELECT 100.0 * SUM(CASE WHEN Diagnosis = 'BEHCET' THEN 1 ELSE 0 END) / COUNT(*) AS Percentage FROM Patient WHERE SEX = 'M' AND YEAR(`First Date`) = 1981;\t----- bird -----\tthrombosis_prediction",
    "1192": "SELECT DISTINCT Patient.* FROM Patient JOIN Laboratory ON Patient.ID = Laboratory.ID WHERE Patient.Admission = '-' AND Laboratory.Date LIKE '1991-10%' AND Laboratory.`T-BIL` < 2.0;\t----- bird -----\tthrombosis_prediction",
    "1193": "SELECT COUNT(DISTINCT Patient.ID) FROM Patient JOIN Examination ON Patient.ID = Examination.ID WHERE Examination.`ANA Pattern` != 'P' AND Patient.SEX = 'F' AND Patient.Birthday BETWEEN '1980-01-01' AND '1989-12-31';\t----- bird -----\tthrombosis_prediction",
    "1194": "SELECT p.SEX FROM Patient p JOIN Examination e ON p.ID = e.ID JOIN Laboratory l ON p.ID = l.ID WHERE e.Diagnosis = 'PSS' AND l.CRP > 2 AND l.CRE = 1 AND l.LDH = 123;\t----- bird -----\tthrombosis_prediction",
    "1195": "SELECT AVG(L.ALB) FROM Patient P JOIN Laboratory L ON P.ID = L.ID WHERE P.SEX = 'F' AND L.PLT > 400 AND P.Diagnosis = 'SLE';\t----- bird -----\tthrombosis_prediction",
    "1196": "SELECT Symptoms, COUNT(*) AS count FROM Examination WHERE Diagnosis = 'SLE' GROUP BY Symptoms ORDER BY count DESC LIMIT 1;\t----- bird -----\tthrombosis_prediction",
    "1197": "SELECT `First Date`, `Diagnosis` FROM Patient WHERE `ID` = 48473 AND `SEX` = 'F';\t----- bird -----\tthrombosis_prediction",
    "1198": "SELECT COUNT(*) FROM Patient WHERE SEX = 'F' AND Diagnosis = 'APS';\t----- bird -----\tthrombosis_prediction",
    "1199": "SELECT COUNT(DISTINCT Patient.ID) FROM Patient JOIN Laboratory ON Patient.ID = Laboratory.ID WHERE YEAR(Laboratory.Date) = 1997 AND (Laboratory.TP <= 6 OR Laboratory.TP >= 8.5);\t----- bird -----\tthrombosis_prediction",
    "1200": "SELECT 100.0 * SUM(CASE WHEN Diagnosis LIKE '%SLE%' THEN 1 ELSE 0 END) / COUNT(*) AS Proportion FROM Examination WHERE Symptoms LIKE '%thrombocytopenia%';\t----- bird -----\tthrombosis_prediction",
    "1201": "SELECT (SUM(CASE WHEN SEX = 'F' THEN 1 ELSE 0 END) * 100.0) / COUNT(*) AS percentage_women FROM Patient WHERE YEAR(Birthday) = 1980 AND Diagnosis = 'RA';\t----- bird -----\tthrombosis_prediction",
    "1202": "SELECT COUNT(DISTINCT Patient.ID) FROM Patient JOIN Examination ON Patient.ID = Examination.ID WHERE Patient.SEX = 'M' AND Examination.`Examination Date` BETWEEN '1995-01-01' AND '1997-12-31' AND Examination.Diagnosis = 'Behcet' AND Patient.Admission = '-';\t----- bird -----\tthrombosis_prediction",
    "1203": "SELECT COUNT(DISTINCT Patient.ID) FROM Patient JOIN Laboratory ON Patient.ID = Laboratory.ID WHERE Patient.SEX = 'F' AND Laboratory.WBC < 3.5;\t----- bird -----\tthrombosis_prediction",
    "1204": "SELECT DATEDIFF(E.`Examination Date`, P.`First Date`) AS Days_To_Evaluation FROM Patient P JOIN Examination E ON P.ID = E.ID WHERE P.ID = 821298 ORDER BY E.`Examination Date` ASC LIMIT 1;\t----- bird -----\tthrombosis_prediction",
    "1205": "SELECT CASE WHEN (p.SEX = 'M' AND l.UA <= 8.0) OR (p.SEX = 'F' AND l.UA <= 6.5) THEN 'Yes' ELSE 'No' END AS UricAcidWithinNormalRange FROM Patient p JOIN Laboratory l ON p.ID = l.ID WHERE p.ID = 57266 ORDER BY l.Date DESC LIMIT 1;\t----- bird -----\tthrombosis_prediction",
    "1206": "SELECT Date FROM Laboratory WHERE ID = '48473' AND GOT >= 60;\t----- bird -----\tthrombosis_prediction",
    "1207": "SELECT DISTINCT Patient.ID, Patient.SEX, Patient.Birthday FROM Patient JOIN Laboratory ON Patient.ID = Laboratory.ID WHERE Laboratory.GOT < 60 AND YEAR(Laboratory.Date) = 1994;\t----- bird -----\tthrombosis_prediction",
    "1208": "SELECT DISTINCT Patient.ID FROM Patient JOIN Laboratory ON Patient.ID = Laboratory.ID WHERE Patient.SEX = 'M' AND Laboratory.GPT >= 60;\t----- bird -----\tthrombosis_prediction",
    "1209": "SELECT Patient.Diagnosis FROM Patient JOIN Laboratory ON Patient.ID = Laboratory.ID WHERE Laboratory.GPT > 60 ORDER BY Patient.Birthday ASC;\t----- bird -----\tthrombosis_prediction",
    "1210": "SELECT AVG(LDH) FROM Laboratory WHERE LDH < 500;\t----- bird -----\tthrombosis_prediction",
    "1211": "SELECT Patient.ID, YEAR(CURRENT_TIMESTAMP) - YEAR(Patient.Birthday) AS age FROM Patient JOIN Laboratory ON Patient.ID = Laboratory.ID WHERE Laboratory.LDH BETWEEN 600 AND 800;\t----- bird -----\tthrombosis_prediction",
    "1212": "SELECT Patient.Admission, COUNT(*) AS PatientCount FROM Patient JOIN Laboratory ON Patient.ID = Laboratory.ID WHERE Laboratory.ALP < 300 GROUP BY Patient.Admission;\t----- bird -----\tthrombosis_prediction",
    "1213": "SELECT Patient.ID, CASE WHEN Laboratory.ALP < 300 THEN 'Within normal range' ELSE 'Not within normal range' END AS ALP_Status FROM Patient LEFT JOIN Laboratory ON Patient.ID = Laboratory.ID WHERE Patient.Birthday = '1982-04-01';\t----- bird -----\tthrombosis_prediction",
    "1214": "SELECT DISTINCT Patient.ID, Patient.SEX, Patient.Birthday FROM Patient JOIN Laboratory ON Patient.ID = Laboratory.ID WHERE Laboratory.TP < 6.0;\t----- bird -----\tthrombosis_prediction",
    "1215": "SELECT Patient.ID, Laboratory.TP - 8.5 AS TP_Deviation FROM Patient JOIN Laboratory ON Patient.ID = Laboratory.ID WHERE Patient.SEX = 'F' AND Laboratory.TP > 8.5;\t----- bird -----\tthrombosis_prediction",
    "1216": "SELECT Patient.* FROM Patient JOIN Laboratory ON Patient.ID = Laboratory.ID WHERE Patient.SEX = 'M' AND (Laboratory.ALB <= 3.5 OR Laboratory.ALB >= 5.5) ORDER BY Patient.Birthday DESC;\t----- bird -----\tthrombosis_prediction",
    "1217": "SELECT Patient.ID, CASE WHEN Laboratory.ALB BETWEEN 3.5 AND 5.5 THEN 'Within Normal Range' ELSE 'Out of Normal Range' END AS Albumin_Status FROM Patient JOIN Laboratory ON Patient.ID = Laboratory.ID WHERE YEAR(Patient.Birthday) = 1982;\t----- bird -----\tthrombosis_prediction",
    "1218": "SELECT 100.0 * COUNT(DISTINCT p.ID) / (SELECT COUNT(*) FROM Patient WHERE SEX = 'F') AS percentage_female_with_high_UA FROM Patient p JOIN Laboratory l ON p.ID = l.ID WHERE p.SEX = 'F' AND l.UA > 6.5;\t----- bird -----\tthrombosis_prediction",
    "1219": "SELECT AVG(L.UA) FROM Laboratory L JOIN Patient P ON L.ID = P.ID WHERE (P.SEX = 'M' AND L.UA < 8.0) OR (P.SEX = 'F' AND L.UA < 6.5) AND L.Date = (SELECT MAX(Date) FROM Laboratory WHERE ID = L.ID);\t----- bird -----\tthrombosis_prediction",
    "1220": "SELECT Patient.ID, Patient.SEX, Patient.Birthday FROM Patient JOIN Laboratory ON Patient.ID = Laboratory.ID WHERE Laboratory.UN = 29;\t----- bird -----\tthrombosis_prediction",
    "1221": "SELECT Patient.ID, Patient.SEX, Patient.Birthday FROM Patient JOIN Laboratory ON Patient.ID = Laboratory.ID WHERE Patient.Diagnosis = 'RA' AND Laboratory.UN < 30;\t----- bird -----\tthrombosis_prediction",
    "1222": "SELECT COUNT(DISTINCT Patient.ID) FROM Patient JOIN Laboratory ON Patient.ID = Laboratory.ID WHERE Patient.SEX = 'M' AND Laboratory.CRE >= 1.5;\t----- bird -----\tthrombosis_prediction",
    "1223": "SELECT CASE WHEN (SELECT COUNT(DISTINCT Patient.ID) FROM Patient JOIN Laboratory ON Patient.ID = Laboratory.ID WHERE Laboratory.CRE >= 1.5 AND Patient.SEX = 'M') > (SELECT COUNT(DISTINCT Patient.ID) FROM Patient JOIN Laboratory ON Patient.ID = Laboratory.ID WHERE Laboratory.CRE >= 1.5 AND Patient.SEX = 'F') THEN 'True' ELSE 'False' END AS Result;\t----- bird -----\tthrombosis_prediction",
    "1224": "SELECT Patient.ID, Patient.SEX, Patient.Birthday FROM Patient JOIN Laboratory ON Patient.ID = Laboratory.ID WHERE Laboratory.T-BIL = (SELECT MAX(T-BIL) FROM Laboratory);\t----- bird -----\tthrombosis_prediction",
    "1225": "SELECT Patient.SEX, GROUP_CONCAT(DISTINCT Patient.ID) AS Patient_IDs FROM Patient JOIN Laboratory ON Patient.ID = Laboratory.ID WHERE Laboratory.`T-BIL` >= 2.0 GROUP BY Patient.SEX;\t----- bird -----\tthrombosis_prediction",
    "1226": "SELECT Patient.ID, Laboratory.T-CHO FROM Patient JOIN Laboratory ON Patient.ID = Laboratory.ID WHERE Patient.Birthday = (SELECT MIN(Birthday) FROM Patient) AND Laboratory.T-CHO = (SELECT MAX(T-CHO) FROM Laboratory);\t----- bird -----\tthrombosis_prediction",
    "1227": "SELECT AVG(YEAR(CURDATE()) - YEAR(P.Birthday)) AS average_age FROM Patient P JOIN Laboratory L ON P.ID = L.ID WHERE P.SEX = 'M' AND L.`T-CHO` >= 250;\t----- bird -----\tthrombosis_prediction",
    "1228": "SELECT Patient.ID, Patient.Diagnosis FROM Patient JOIN Laboratory ON Patient.ID = Laboratory.ID WHERE Laboratory.TG > 300;\t----- bird -----\tthrombosis_prediction",
    "1229": "SELECT COUNT(DISTINCT Patient.ID) FROM Patient JOIN Laboratory ON Patient.ID = Laboratory.ID WHERE Laboratory.TG >= 200 AND (YEAR(CURRENT_DATE) - YEAR(Patient.Birthday)) > 50;\t----- bird -----\tthrombosis_prediction",
    "1230": "SELECT DISTINCT Patient.ID FROM Patient JOIN Laboratory ON Patient.ID = Laboratory.ID WHERE Patient.Admission = '-' AND Laboratory.CPK < 250;\t----- bird -----\tthrombosis_prediction",
    "1231": "SELECT COUNT(DISTINCT Patient.ID) FROM Patient JOIN Laboratory ON Patient.ID = Laboratory.ID WHERE Patient.SEX = 'M' AND Patient.Birthday BETWEEN '1936' AND '1956' AND Laboratory.CPK >= 250;\t----- bird -----\tthrombosis_prediction",
    "1232": "SELECT Patient.ID, Patient.SEX, YEAR(CURRENT_TIMESTAMP) - YEAR(Patient.Birthday) AS age FROM Patient JOIN Laboratory ON Patient.ID = Laboratory.ID WHERE Laboratory.GLU >= 180 AND Laboratory.`T-CHO` < 250;\t----- bird -----\tthrombosis_prediction",
    "1233": "SELECT Patient.ID, Laboratory.GLU FROM Patient JOIN Laboratory ON Patient.ID = Laboratory.ID WHERE Patient.Description = '1991' AND Laboratory.GLU < 180;\t----- bird -----\tthrombosis_prediction",
    "1234": "SELECT Patient.ID, Patient.SEX, Patient.Birthday FROM Patient JOIN Laboratory ON Patient.ID = Laboratory.ID WHERE Laboratory.WBC <= 3.5 OR Laboratory.WBC >= 9.0 GROUP BY Patient.SEX, Patient.ID, Patient.Birthday ORDER BY Patient.SEX, Patient.Birthday ASC;\t----- bird -----\tthrombosis_prediction",
    "1235": "SELECT Patient.ID, SUBTRACT(YEAR(CURRENT_TIMESTAMP), YEAR(Patient.Birthday)) AS age, Patient.Diagnosis FROM Patient JOIN Laboratory ON Patient.ID = Laboratory.ID WHERE Laboratory.RBC < 3.5;\t----- bird -----\tthrombosis_prediction",
    "1236": "SELECT Patient.ID, Patient.Admission FROM Patient JOIN Laboratory ON Patient.ID = Laboratory.ID WHERE Patient.SEX = 'F' AND TIMESTAMPDIFF(YEAR, Patient.Birthday, CURDATE()) >= 50 AND (Laboratory.RBC <= 3.5 OR Laboratory.RBC >= 6.0);\t----- bird -----\tthrombosis_prediction",
    "1237": "SELECT DISTINCT Patient.ID, Patient.SEX FROM Patient JOIN Laboratory ON Patient.ID = Laboratory.ID WHERE Patient.Admission = '-' AND Laboratory.HGB < 10;\t----- bird -----\tthrombosis_prediction",
    "1238": "SELECT p.ID, p.SEX FROM Patient p JOIN Laboratory l ON p.ID = l.ID WHERE p.Diagnosis = 'SLE' AND l.HGB > 10 AND l.HGB < 17 ORDER BY p.Birthday ASC LIMIT 1;\t----- bird -----\tthrombosis_prediction",
    "1239": "SELECT Patient.ID, YEAR(CURRENT_TIMESTAMP) - YEAR(Patient.Birthday) AS age FROM Patient JOIN Laboratory ON Patient.ID = Laboratory.ID WHERE Laboratory.HCT >= 52 GROUP BY Patient.ID, Patient.Birthday HAVING COUNT(Laboratory.ID) >= 2;\t----- bird -----\tthrombosis_prediction",
    "1240": "SELECT AVG(HCT) FROM Laboratory WHERE Date LIKE '1991%' AND HCT < 29;\t----- bird -----\tthrombosis_prediction",
    "1241": "SELECT SUM(CASE WHEN PLT < 100 THEN 1 ELSE 0 END) AS LowerThanNormal, SUM(CASE WHEN PLT > 400 THEN 1 ELSE 0 END) AS HigherThanNormal FROM (SELECT ID, MAX(PLT) AS PLT FROM Laboratory WHERE PLT <= 100 OR PLT >= 400 GROUP BY ID) AS AbnormalPlatelets;\t----- bird -----\tthrombosis_prediction",
    "1242": "SELECT DISTINCT Patient.* FROM Patient JOIN Laboratory ON Patient.ID = Laboratory.ID WHERE YEAR(Laboratory.Date) = 1984 AND (YEAR(CURRENT_DATE) - YEAR(Patient.Birthday)) < 50 AND Laboratory.PLT BETWEEN 100 AND 400;\t----- bird -----\tthrombosis_prediction",
    "1243": "SELECT (SUM(CASE WHEN SEX = 'F' AND PT >= 14 THEN 1 ELSE 0 END) * 100.0) / NULLIF(SUM(CASE WHEN PT >= 14 THEN 1 ELSE 0 END), 0) AS percentage_female_abnormal_PT FROM Patient p JOIN Laboratory l ON p.ID = l.ID WHERE SUBTRACT(YEAR(CURRENT_TIMESTAMP), YEAR(p.Birthday)) > 55;\t----- bird -----\tthrombosis_prediction",
    "1244": "SELECT DISTINCT Patient.* FROM Patient JOIN Laboratory ON Patient.ID = Laboratory.ID WHERE YEAR(Patient.`First Date`) > 1992 AND Laboratory.PT < 14;\t----- bird -----\tthrombosis_prediction",
    "1245": "SELECT COUNT(*) FROM Laboratory WHERE Date > '1997-01-01' AND APTT >= 45;\t----- bird -----\tthrombosis_prediction",
    "1246": "SELECT COUNT(DISTINCT Laboratory.ID) FROM Laboratory JOIN Examination ON Laboratory.ID = Examination.ID WHERE Laboratory.APTT > 45 AND Examination.Thrombosis = 0;\t----- bird -----\tthrombosis_prediction",
    "1247": "SELECT COUNT(DISTINCT Patient.ID) FROM Patient JOIN Laboratory ON Patient.ID = Laboratory.ID WHERE Patient.SEX = 'M' AND Laboratory.WBC > 3.5 AND Laboratory.WBC < 9.0 AND (Laboratory.FG <= 150 OR Laboratory.FG >= 450);\t----- bird -----\tthrombosis_prediction",
    "1248": "SELECT COUNT(DISTINCT Patient.ID) FROM Patient JOIN Laboratory ON Patient.ID = Laboratory.ID WHERE Patient.Birthday > '1980-01-01' AND (Laboratory.FG < 150 OR Laboratory.FG > 450);\t----- bird -----\tthrombosis_prediction",
    "1249": "SELECT DISTINCT Patient.Diagnosis FROM Patient JOIN Laboratory ON Patient.ID = Laboratory.ID WHERE Laboratory.`U-PRO` >= 30;\t----- bird -----\tthrombosis_prediction",
    "1250": "SELECT DISTINCT Patient.ID FROM Patient JOIN Laboratory ON Patient.ID = Laboratory.ID WHERE Laboratory.`U-PRO` > 0 AND Laboratory.`U-PRO` < 30 AND Patient.Diagnosis = 'SLE';\t----- bird -----\tthrombosis_prediction",
    "1251": "SELECT COUNT(DISTINCT Patient.ID) FROM Patient JOIN Laboratory ON Patient.ID = Laboratory.ID WHERE Laboratory.IGG >= 2000;\t----- bird -----\tthrombosis_prediction",
    "1252": "SELECT COUNT(DISTINCT Laboratory.ID) FROM Laboratory JOIN Examination ON Laboratory.ID = Examination.ID WHERE Laboratory.IGG > 900 AND Laboratory.IGG < 2000 AND Examination.Symptoms IS NOT NULL;\t----- bird -----\tthrombosis_prediction",
    "1253": "SELECT p.Diagnosis FROM Patient p JOIN Laboratory l ON p.ID = l.ID WHERE l.IGA = (SELECT MAX(IGA) FROM Laboratory WHERE IGA BETWEEN 80 AND 500) LIMIT 1;\t----- bird -----\tthrombosis_prediction",
    "1254": "SELECT COUNT(DISTINCT Patient.ID) FROM Patient JOIN Laboratory ON Patient.ID = Laboratory.ID WHERE Laboratory.IGA > 80 AND Laboratory.IGA < 500 AND YEAR(Patient.`First Date`) >= 1990;\t----- bird -----\tthrombosis_prediction",
    "1255": "SELECT Diagnosis FROM Patient WHERE ID IN (SELECT ID FROM Laboratory WHERE IGM <= 40 OR IGM >= 400) GROUP BY Diagnosis ORDER BY COUNT(Diagnosis) DESC LIMIT 1;\t----- bird -----\tthrombosis_prediction",
    "1256": "SELECT COUNT(DISTINCT Patient.ID) FROM Patient JOIN Laboratory ON Patient.ID = Laboratory.ID WHERE Laboratory.CRP = '+' AND Patient.Description IS NULL;\t----- bird -----\tthrombosis_prediction",
    "1257": "SELECT COUNT(DISTINCT Patient.ID) FROM Patient JOIN Laboratory ON Patient.ID = Laboratory.ID WHERE Laboratory.CRE >= 1.5 AND (YEAR(CURDATE()) - YEAR(Patient.Birthday)) < 70;\t----- bird -----\tthrombosis_prediction",
    "1258": "SELECT COUNT(DISTINCT p.ID) FROM Patient p JOIN Examination e ON p.ID = e.ID JOIN Laboratory l ON p.ID = l.ID WHERE (l.RA = '-' OR l.RA = '+-') AND e.KCT = '+';\t----- bird -----\tthrombosis_prediction",
    "1259": "SELECT DISTINCT p.Diagnosis FROM Patient p JOIN Laboratory l ON p.ID = l.ID WHERE YEAR(p.Birthday) >= 1985 AND l.RA IN ('-', '+-');\t----- bird -----\tthrombosis_prediction",
    "1260": "SELECT DISTINCT Patient.ID FROM Patient JOIN Laboratory ON Patient.ID = Laboratory.ID WHERE Laboratory.RF < 20 AND (YEAR(CURDATE()) - YEAR(Patient.Birthday)) > 60;\t----- bird -----\tthrombosis_prediction",
    "1261": "SELECT COUNT(DISTINCT Patient.ID) FROM Patient JOIN Laboratory ON Patient.ID = Laboratory.ID JOIN Examination ON Patient.ID = Examination.ID WHERE Laboratory.RF < 20 AND Examination.Thrombosis = '0';\t----- bird -----\tthrombosis_prediction",
    "1262": "SELECT COUNT(DISTINCT Patient.ID) FROM Patient JOIN Laboratory ON Patient.ID = Laboratory.ID JOIN Examination ON Patient.ID = Examination.ID WHERE Laboratory.C3 > 35 AND Examination.`ANA Pattern` = 'P';\t----- bird -----\tthrombosis_prediction",
    "1263": "SELECT p.ID FROM Patient p JOIN Laboratory l ON p.ID = l.ID WHERE (l.HCT <= 29 OR l.HCT >= 52) ORDER BY (SELECT MAX(e.`aCL IgA`) FROM Examination e WHERE e.ID = p.ID) DESC LIMIT 1;\t----- bird -----\tthrombosis_prediction",
    "1264": "SELECT COUNT(DISTINCT p.ID) FROM Patient p JOIN Examination e ON p.ID = e.ID JOIN Laboratory l ON p.ID = l.ID WHERE e.Thrombosis = 'Blood Clots in veins' AND l.C4 > 10;\t----- bird -----\tthrombosis_prediction",
    "1265": "SELECT COUNT(DISTINCT Patient.ID) FROM Patient JOIN Laboratory ON Patient.ID = Laboratory.ID WHERE (Laboratory.RNP = '-' OR Laboratory.RNP = '+-') AND Patient.Admission = '+';\t----- bird -----\tthrombosis_prediction",
    "1266": "SELECT Birthday FROM Patient WHERE ID IN (SELECT ID FROM Laboratory WHERE RNP NOT IN ('-', '+-')) ORDER BY Birthday DESC LIMIT 1;\t----- bird -----\tthrombosis_prediction",
    "1267": "SELECT COUNT(DISTINCT Examination.ID) FROM Examination WHERE (SM = '-' OR SM = '+-') AND Thrombosis = 0;\t----- bird -----\tthrombosis_prediction",
    "1268": "SELECT ID FROM Patient WHERE ID IN (SELECT ID FROM Laboratory WHERE SM NOT IN ('negative', '0')) ORDER BY Birthday DESC LIMIT 3;\t----- bird -----\tthrombosis_prediction",
    "1269": "SELECT DISTINCT Examination.ID FROM Examination JOIN Laboratory ON Examination.ID = Laboratory.ID WHERE Examination.`Examination Date` > '1997-01-01' AND Laboratory.SC170 IN ('negative', '0');\t----- bird -----\tthrombosis_prediction",
    "1270": "SELECT COUNT(DISTINCT p.ID) FROM Patient p JOIN Examination e ON p.ID = e.ID JOIN Laboratory l ON p.ID = l.ID WHERE (l.SC170 IN ('negative', '0')) AND p.SEX = 'F' AND e.Symptoms IS NULL;\t----- bird -----\tthrombosis_prediction",
    "1271": "SELECT COUNT(DISTINCT Patient.ID) FROM Patient JOIN Laboratory ON Patient.ID = Laboratory.ID WHERE Laboratory.SSA IN ('-','+-') AND YEAR(Patient.`First Date`) < 2000;\t----- bird -----\tthrombosis_prediction",
    "1272": "SELECT Patient.ID FROM Patient JOIN Laboratory ON Patient.ID = Laboratory.ID WHERE Laboratory.SSA NOT IN ('negative', '0') ORDER BY Patient.`First Date` ASC LIMIT 1;\t----- bird -----\tthrombosis_prediction",
    "1273": "SELECT COUNT(DISTINCT Examination.ID) FROM Examination WHERE (SSB = '-' OR SSB = '+-') AND Diagnosis = 'SLE';\t----- bird -----\tthrombosis_prediction",
    "1274": "SELECT COUNT(DISTINCT Examination.ID) FROM Examination WHERE SSB IN ('negative', '0') AND Symptoms IS NOT NULL;\t----- bird -----\tthrombosis_prediction",
    "1275": "SELECT COUNT(DISTINCT Patient.ID) FROM Patient JOIN Laboratory ON Patient.ID = Laboratory.ID WHERE Laboratory.CENTROMEA IN ('-', '+-') AND Laboratory.SSB IN ('-', '+-') AND Patient.SEX = 'M';\t----- bird -----\tthrombosis_prediction",
    "1276": "SELECT DISTINCT p.Diagnosis FROM Patient p JOIN Laboratory l ON p.ID = l.ID WHERE l.DNA >= 8;\t----- bird -----\tthrombosis_prediction",
    "1277": "SELECT COUNT(DISTINCT Patient.ID) FROM Patient JOIN Laboratory ON Patient.ID = Laboratory.ID WHERE Laboratory.DNA < 8 AND Patient.Description IS NULL;\t----- bird -----\tthrombosis_prediction",
    "1278": "SELECT COUNT(DISTINCT Patient.ID) FROM Patient JOIN Laboratory ON Patient.ID = Laboratory.ID WHERE Laboratory.IGG > 900 AND Laboratory.IGG < 2000 AND Patient.Admission = '+';\t----- bird -----\tthrombosis_prediction",
    "1279": "SELECT (COUNT(DISTINCT CASE WHEN l.GOT >= 60 AND p.Diagnosis = 'SLE' THEN p.ID END) * 1.0 / COUNT(DISTINCT CASE WHEN l.GOT >= 60 THEN p.ID END)) * 100 AS percentage FROM Laboratory l JOIN Patient p ON l.ID = p.ID WHERE l.GOT >= 60;\t----- bird -----\tthrombosis_prediction",
    "1280": "SELECT COUNT(DISTINCT Patient.ID) FROM Patient JOIN Laboratory ON Patient.ID = Laboratory.ID WHERE Patient.SEX = 'M' AND Laboratory.GOT < 60;\t----- bird -----\tthrombosis_prediction",
    "1281": "SELECT MAX(P.Birthday) FROM Patient P JOIN Laboratory L ON P.ID = L.ID WHERE L.GOT >= 60;\t----- bird -----\tthrombosis_prediction",
    "1282": "SELECT Patient.Birthday FROM Patient JOIN Laboratory ON Patient.ID = Laboratory.ID WHERE Laboratory.GPT < 60 ORDER BY Laboratory.GPT DESC LIMIT 3;\t----- bird -----\tthrombosis_prediction",
    "1283": "SELECT COUNT(DISTINCT Patient.ID) FROM Patient JOIN Laboratory ON Patient.ID = Laboratory.ID WHERE Laboratory.GOT < 60 AND Patient.SEX = 'M';\t----- bird -----\tthrombosis_prediction",
    "1284": "SELECT MIN(p.`First Date`) FROM Patient p JOIN Laboratory l ON p.ID = l.ID WHERE l.LDH = (SELECT MAX(LDH) FROM Laboratory WHERE LDH < 500);\t----- bird -----\tthrombosis_prediction",
    "1285": "SELECT MAX(L.Date) FROM Laboratory L JOIN Patient P ON L.ID = P.ID WHERE P.ID = (SELECT ID FROM Patient WHERE \"First Date\" = (SELECT MAX(\"First Date\") FROM Patient)) AND L.LDH >= 500;\t----- bird -----\tthrombosis_prediction",
    "1286": "SELECT COUNT(DISTINCT Patient.ID) FROM Patient JOIN Laboratory ON Patient.ID = Laboratory.ID WHERE Laboratory.ALP >= 300 AND Patient.Admission = '+';\t----- bird -----\tthrombosis_prediction",
    "1287": "SELECT COUNT(DISTINCT Patient.ID) FROM Patient JOIN Laboratory ON Patient.ID = Laboratory.ID WHERE Patient.Admission = '-' AND Laboratory.ALP < 300;\t----- bird -----\tthrombosis_prediction",
    "1288": "SELECT DISTINCT Patient.Diagnosis FROM Patient JOIN Laboratory ON Patient.ID = Laboratory.ID WHERE Laboratory.TP < 6.0;\t----- bird -----\tthrombosis_prediction",
    "1289": "SELECT COUNT(DISTINCT Patient.ID) FROM Patient JOIN Laboratory ON Patient.ID = Laboratory.ID WHERE Patient.Diagnosis = 'SJS' AND Laboratory.TP > 6.0 AND Laboratory.TP < 8.5;\t----- bird -----\tthrombosis_prediction",
    "1290": "SELECT Examination.`Examination Date` FROM Examination JOIN Laboratory ON Examination.ID = Laboratory.ID WHERE Laboratory.ALB = (SELECT MAX(ALB) FROM Laboratory WHERE ALB > 3.5 AND ALB < 5.5) LIMIT 1;\t----- bird -----\tthrombosis_prediction",
    "1291": "SELECT COUNT(DISTINCT Patient.ID) FROM Patient JOIN Laboratory ON Patient.ID = Laboratory.ID WHERE Patient.SEX = 'M' AND Laboratory.ALB > 3.5 AND Laboratory.ALB < 5.5 AND Laboratory.TP BETWEEN 6.0 AND 8.5;\t----- bird -----\tthrombosis_prediction",
    "1292": "SELECT e.`aCL IgG`, e.`aCL IgM`, e.`aCL IgA` FROM Examination e JOIN Patient p ON e.ID = p.ID JOIN Laboratory l ON p.ID = l.ID WHERE p.SEX = 'F' AND l.UA = (SELECT MAX(UA) FROM Laboratory WHERE UA <= 6.50) LIMIT 1;\t----- bird -----\tthrombosis_prediction",
    "1293": "SELECT MAX(E.ANA) FROM Examination E JOIN Laboratory L ON E.ID = L.ID WHERE L.CRE < 1.5;\t----- bird -----\tthrombosis_prediction",
    "1294": "SELECT Patient.ID FROM Patient JOIN Laboratory ON Patient.ID = Laboratory.ID JOIN Examination ON Patient.ID = Examination.ID WHERE Laboratory.CRE < 1.5 AND Examination.`aCL IgA` = (SELECT MAX(`aCL IgA`) FROM Examination);\t----- bird -----\tthrombosis_prediction",
    "1295": "SELECT COUNT(DISTINCT p.ID) FROM Patient p JOIN Laboratory l ON p.ID = l.ID JOIN Examination e ON p.ID = e.ID WHERE l.`T-BIL` >= 2.0 AND e.`ANA Pattern` LIKE '%P%';\t----- bird -----\tthrombosis_prediction",
    "1296": "SELECT Examination.ANA FROM Examination JOIN Laboratory ON Examination.ID = Laboratory.ID WHERE Laboratory.`T-BIL` < 2.0 ORDER BY Laboratory.`T-BIL` DESC LIMIT 1;\t----- bird -----\tthrombosis_prediction",
    "1297": "SELECT COUNT(DISTINCT p.ID) FROM Patient p JOIN Laboratory l ON p.ID = l.ID JOIN Examination e ON p.ID = e.ID WHERE l.`T-CHO` >= 250 AND e.KCT = '-';\t----- bird -----\tthrombosis_prediction",
    "1298": "SELECT COUNT(DISTINCT p.ID) FROM Patient p JOIN Laboratory l ON p.ID = l.ID JOIN Examination e ON p.ID = e.ID WHERE l.`T-CHO` < 250 AND e.`ANA Pattern` = 'P';\t----- bird -----\tthrombosis_prediction",
    "1299": "SELECT COUNT(DISTINCT p.ID) FROM Patient p JOIN Laboratory l ON p.ID = l.ID JOIN Examination e ON p.ID = e.ID WHERE l.TG < 200 AND e.Symptoms IS NOT NULL;\t----- bird -----\tthrombosis_prediction",
    "1300": "SELECT p.Diagnosis FROM Patient p JOIN Laboratory l ON p.ID = l.ID WHERE l.TG = (SELECT MAX(TG) FROM Laboratory WHERE TG < 200) LIMIT 1;\t----- bird -----\tthrombosis_prediction",
    "1301": "SELECT DISTINCT Patient.ID FROM Patient JOIN Examination ON Patient.ID = Examination.ID JOIN Laboratory ON Patient.ID = Laboratory.ID WHERE Examination.Thrombosis = 0 AND Laboratory.CPK < 250;\t----- bird -----\tthrombosis_prediction",
    "1302": "SELECT COUNT(DISTINCT Examination.ID) FROM Examination JOIN Laboratory ON Examination.ID = Laboratory.ID WHERE Laboratory.CPK < 250 AND (Examination.KCT = '+' OR Examination.RVVT = '+' OR Examination.LAC = '+');\t----- bird -----\tthrombosis_prediction",
    "1303": "SELECT Birthday FROM Patient WHERE Birthday = (SELECT MIN(Birthday) FROM Patient WHERE ID IN (SELECT ID FROM Laboratory WHERE GLU > 180));\t----- bird -----\tthrombosis_prediction",
    "1304": "SELECT COUNT(DISTINCT Patient.ID) FROM Patient JOIN Laboratory ON Patient.ID = Laboratory.ID JOIN Examination ON Patient.ID = Examination.ID WHERE Laboratory.GLU < 180 AND Examination.Thrombosis = 0;\t----- bird -----\tthrombosis_prediction",
    "1305": "SELECT COUNT(DISTINCT Patient.ID) FROM Patient JOIN Laboratory ON Patient.ID = Laboratory.ID WHERE Patient.Admission = '+' AND Laboratory.WBC BETWEEN 3.5 AND 9.0;\t----- bird -----\tthrombosis_prediction",
    "1306": "SELECT COUNT(DISTINCT Patient.ID) FROM Patient JOIN Laboratory ON Patient.ID = Laboratory.ID WHERE Patient.Diagnosis = 'SLE' AND Laboratory.WBC BETWEEN 3.5 AND 9.0;\t----- bird -----\tthrombosis_prediction",
    "1307": "SELECT DISTINCT Patient.ID FROM Patient JOIN Laboratory ON Patient.ID = Laboratory.ID WHERE (Laboratory.RBC <= 3.5 OR Laboratory.RBC >= 6.0) AND Patient.Admission = '-';\t----- bird -----\tthrombosis_prediction",
    "1308": "SELECT COUNT(DISTINCT Laboratory.ID) FROM Laboratory JOIN Patient ON Laboratory.ID = Patient.ID WHERE Laboratory.PLT > 100 AND Laboratory.PLT < 400 AND Patient.Diagnosis IS NOT NULL;\t----- bird -----\tthrombosis_prediction",
    "1309": "SELECT Laboratory.PLT FROM Laboratory JOIN Patient ON Laboratory.ID = Patient.ID WHERE Patient.Diagnosis = 'MCTD' AND Laboratory.PLT > 100 AND Laboratory.PLT < 400;\t----- bird -----\tthrombosis_prediction",
    "1310": "SELECT AVG(L.PT) FROM Patient P JOIN Laboratory L ON P.ID = L.ID WHERE P.SEX = 'M' AND L.PT < 14;\t----- bird -----\tthrombosis_prediction",
    "1311": "SELECT COUNT(DISTINCT p.ID) FROM Patient p JOIN Examination e ON p.ID = e.ID JOIN Laboratory l ON p.ID = l.ID WHERE e.Thrombosis IN (1, 2) AND l.PT < 14;\t----- bird -----\tthrombosis_prediction",
    "1312": "SELECT m.major_name FROM member mem JOIN major m ON mem.link_to_major = m.major_id WHERE mem.first_name = 'Angela' AND mem.last_name = 'Sanders';\t----- bird -----\tstudent_club",
    "1313": "SELECT COUNT(DISTINCT m.member_id) FROM member m JOIN major mj ON m.link_to_major = mj.major_id WHERE mj.college = 'College of Engineering' AND m.position = 'Student_Club';\t----- bird -----\tstudent_club",
    "1314": "SELECT CONCAT(m.first_name, ' ', m.last_name) AS full_name FROM member m JOIN major mj ON m.link_to_major = mj.major_id WHERE mj.department = 'Art and Design' AND m.position = 'Student_Club';\t----- bird -----\tstudent_club",
    "1315": "SELECT COUNT(DISTINCT a.link_to_member) FROM attendance a JOIN event e ON a.link_to_event = e.event_id JOIN member m ON a.link_to_member = m.member_id WHERE e.event_name = 'Women''s Soccer' AND m.position = 'Student_Club';\t----- bird -----\tstudent_club",
    "1316": "SELECT DISTINCT m.phone FROM member m JOIN attendance a ON m.member_id = a.link_to_member JOIN event e ON a.link_to_event = e.event_id WHERE e.event_name = 'Women''s Soccer' AND m.position = 'Student_Club';\t----- bird -----\tstudent_club",
    "1317": "SELECT COUNT(DISTINCT m.member_id) FROM member m JOIN attendance a ON m.member_id = a.link_to_member JOIN event e ON a.link_to_event = e.event_id WHERE e.event_name = 'Women''s Soccer' AND m.position = 'Student_Club' AND m.t_shirt_size = 'Medium';\t----- bird -----\tstudent_club",
    "1318": "SELECT e.event_name FROM event e JOIN attendance a ON e.event_id = a.link_to_event JOIN member m ON a.link_to_member = m.member_id WHERE m.position = 'Student_Club' GROUP BY e.event_id, e.event_name ORDER BY COUNT(a.link_to_member) DESC LIMIT 1;\t----- bird -----\tstudent_club",
    "1319": "SELECT m2.college FROM member m1 JOIN major m2 ON m1.link_to_major = m2.major_id WHERE m1.position = 'Vice President' AND m1.email LIKE '%Student_Club%' LIMIT 1;\t----- bird -----\tstudent_club",
    "1320": "SELECT e.event_name FROM event e JOIN attendance a ON e.event_id = a.link_to_event JOIN member m ON a.link_to_member = m.member_id WHERE m.first_name = 'Maya' AND m.last_name = 'Mclean';\t----- bird -----\tstudent_club",
    "1321": "SELECT COUNT(DISTINCT e.event_id) FROM event e JOIN attendance a ON e.event_id = a.link_to_event JOIN member m ON a.link_to_member = m.member_id WHERE e.type = 'Student_Club' AND m.first_name = 'Sacha' AND m.last_name = 'Harrison' AND YEAR(e.event_date) = 2019;\t----- bird -----\tstudent_club",
    "1322": "SELECT COUNT(*) FROM (SELECT e.event_id FROM event e JOIN attendance a ON e.event_id = a.link_to_event GROUP BY e.event_id HAVING COUNT(a.link_to_member) > 10 AND e.type = 'Meeting') subquery;\t----- bird -----\tstudent_club",
    "1323": "SELECT event_name FROM event WHERE event_id IN (SELECT link_to_event FROM attendance GROUP BY link_to_event HAVING COUNT(link_to_member) > 20) AND type <> 'fundraiser';\t----- bird -----\tstudent_club",
    "1324": "SELECT COUNT(a.link_to_member)*1.0/COUNT(DISTINCT e.event_id) AS average_attendance FROM event e LEFT JOIN attendance a ON e.event_id = a.link_to_event WHERE e.type = 'Meeting' AND YEAR(e.event_date) = 2020;\t----- bird -----\tstudent_club",
    "1325": "SELECT expense_description, MAX(cost) AS max_cost FROM expense;\t----- bird -----\tstudent_club",
    "1326": "SELECT COUNT(*) FROM member JOIN major ON member.link_to_major = major.major_id WHERE major.major_name = 'Environmental Engineering';\t----- bird -----\tstudent_club",
    "1327": "SELECT CONCAT(m.first_name, ' ', m.last_name) AS full_name FROM member m JOIN attendance a ON m.member_id = a.link_to_member JOIN event e ON a.link_to_event = e.event_id WHERE e.event_name = 'Laugh Out Loud' AND m.position = 'Student_Club';\t----- bird -----\tstudent_club",
    "1328": "SELECT last_name FROM member JOIN major ON member.link_to_major = major.major_id WHERE major.major_name = 'Law and Constitutional Studies';\t----- bird -----\tstudent_club",
    "1329": "SELECT z.county FROM member m JOIN zip_code z ON m.zip = z.zip_code WHERE m.first_name = 'Sherri' AND m.last_name = 'Ramsey';\t----- bird -----\tstudent_club",
    "1330": "SELECT major.college FROM major JOIN member ON major.major_id = member.link_to_major WHERE member.first_name = 'Tyler' AND member.last_name = 'Hewitt' LIMIT 1;\t----- bird -----\tstudent_club",
    "1331": "SELECT SUM(income.amount) FROM income JOIN member ON income.link_to_member = member.member_id WHERE member.position = 'Vice President';\t----- bird -----\tstudent_club",
    "1332": "SELECT SUM(e.cost) FROM expense e JOIN budget b ON e.link_to_budget = b.budget_id JOIN event ev ON b.link_to_event = ev.event_id JOIN member m ON e.link_to_member = m.member_id WHERE b.category = 'Food' AND ev.event_name = 'September Meeting' AND m.position = 'Student_Club';\t----- bird -----\tstudent_club",
    "1333": "SELECT z.city, z.state FROM member m JOIN zip_code z ON m.zip = z.zip_code WHERE m.position = 'President';\t----- bird -----\tstudent_club",
    "1334": "SELECT CONCAT(m.first_name, ' ', m.last_name) AS full_name FROM member m JOIN zip_code z ON m.zip = z.zip_code WHERE z.state = 'Illinois';\t----- bird -----\tstudent_club",
    "1335": "SELECT SUM(e.cost) FROM expense e JOIN budget b ON e.link_to_budget = b.budget_id JOIN event ev ON b.link_to_event = ev.event_id JOIN member m ON e.link_to_member = m.member_id WHERE b.category = 'Advertisement' AND ev.event_name = 'September Meeting' AND m.position = 'Student_Club';\t----- bird -----\tstudent_club",
    "1336": "SELECT m.department FROM major m JOIN member mb ON m.major_id = mb.link_to_major WHERE mb.first_name IN ('Pierce', 'Guidi');\t----- bird -----\tstudent_club",
    "1337": "SELECT SUM(b.amount) FROM budget b JOIN event e ON b.link_to_event = e.event_id WHERE e.event_name = 'October Speaker';\t----- bird -----\tstudent_club",
    "1338": "SELECT e.expense_id, e.approved FROM expense e JOIN budget b ON e.link_to_budget = b.budget_id JOIN event ev ON b.link_to_event = ev.event_id WHERE ev.event_name = 'October Meeting' AND ev.event_date = '2019-10-08';\t----- bird -----\tstudent_club",
    "1339": "SELECT AVG(e.cost) AS average_cost FROM expense e JOIN member m ON e.link_to_member = m.member_id JOIN budget b ON e.link_to_budget = b.budget_id JOIN event ev ON b.link_to_event = ev.event_id WHERE m.first_name = 'Elijah' AND m.last_name = 'Allen' AND (MONTH(ev.event_date) = 9 OR MONTH(ev.event_date) = 10);\t----- bird -----\tstudent_club",
    "1340": "SELECT (SELECT COALESCE(SUM(spent),0) FROM budget b JOIN event e ON b.link_to_event = e.event_id WHERE e.type = 'Student_Club' AND LEFT(e.event_date,4) = '2019') - (SELECT COALESCE(SUM(spent),0) FROM budget b JOIN event e ON b.link_to_event = e.event_id WHERE e.type = 'Student_Club' AND LEFT(e.event_date,4) = '2020') AS difference;\t----- bird -----\tstudent_club",
    "1341": "SELECT location FROM event WHERE event_name = 'Spring Budget Review';\t----- bird -----\tstudent_club",
    "1342": "SELECT SUM(e.cost) FROM expense e JOIN budget b ON e.link_to_budget = b.budget_id JOIN event ev ON b.link_to_event = ev.event_id WHERE ev.event_name = 'Poster' AND ev.event_date = '2019-09-04';\t----- bird -----\tstudent_club",
    "1343": "SELECT remaining FROM budget WHERE category = 'Food' AND amount = (SELECT MAX(amount) FROM budget WHERE category = 'Food') LIMIT 1;\t----- bird -----\tstudent_club",
    "1344": "SELECT notes FROM income WHERE source = 'Fundraising' AND date_received = '2019-09-14';\t----- bird -----\tstudent_club",
    "1345": "SELECT COUNT(*) FROM major WHERE college = 'College of Humanities and Social Sciences';\t----- bird -----\tstudent_club",
    "1346": "SELECT phone FROM member WHERE first_name = 'Carlo' AND last_name = 'Jacobs';\t----- bird -----\tstudent_club",
    "1347": "SELECT z.county FROM member m JOIN zip_code z ON m.zip = z.zip_code WHERE m.first_name = 'Adela' AND m.last_name = 'O''Gallagher';\t----- bird -----\tstudent_club",
    "1348": "SELECT COUNT(*) FROM budget b JOIN event e ON b.link_to_event = e.event_id WHERE e.event_name = 'November Meeting' AND b.remaining < 0;\t----- bird -----\tstudent_club",
    "1349": "SELECT SUM(b.amount) FROM budget b JOIN event e ON b.link_to_event = e.event_id WHERE e.event_name = 'September Speaker';\t----- bird -----\tstudent_club",
    "1350": "SELECT e.status FROM event e JOIN budget b ON e.event_id = b.link_to_event JOIN expense ex ON b.budget_id = ex.link_to_budget WHERE ex.expense_description = 'Post Cards, Posters' AND ex.expense_date = '2019-08-20' LIMIT 1;\t----- bird -----\tstudent_club",
    "1351": "SELECT m.major_name FROM member mem JOIN major m ON mem.link_to_major = m.major_id WHERE mem.first_name = 'Brent' AND mem.last_name = 'Thomason';\t----- bird -----\tstudent_club",
    "1352": "SELECT COUNT(*) FROM member m JOIN major mj ON m.link_to_major = mj.major_id WHERE mj.major_name = 'Business' AND m.t_shirt_size = 'Medium';\t----- bird -----\tstudent_club",
    "1353": "SELECT z.type FROM member m JOIN zip_code z ON m.zip = z.zip_code WHERE m.first_name = 'Christof' AND m.last_name = 'Nielson';\t----- bird -----\tstudent_club",
    "1354": "SELECT mjr.major_name FROM member mem JOIN major mjr ON mem.link_to_major = mjr.major_id WHERE mem.position = 'Vice President' LIMIT 1;\t----- bird -----\tstudent_club",
    "1355": "SELECT z.state FROM member m JOIN zip_code z ON m.zip = z.zip_code WHERE m.first_name = 'Sacha' AND m.last_name = 'Harrison';\t----- bird -----\tstudent_club",
    "1356": "SELECT m.department FROM member mem JOIN major m ON mem.link_to_major = m.major_id WHERE mem.position = 'President' LIMIT 1;\t----- bird -----\tstudent_club",
    "1357": "SELECT i.date_received FROM income i JOIN member m ON i.link_to_member = m.member_id WHERE m.first_name = 'Connor' AND m.last_name = 'Hilton' AND i.source = 'Dues';\t----- bird -----\tstudent_club",
    "1358": "SELECT CONCAT(m.first_name, ' ', m.last_name) AS full_name FROM member m JOIN income i ON m.member_id = i.link_to_member WHERE i.source = 'Dues' ORDER BY i.date_received ASC LIMIT 1;\t----- bird -----\tstudent_club",
    "1359": "SELECT COUNT(*) FROM (SELECT b1.link_to_event FROM budget b1 JOIN event e1 ON b1.link_to_event = e1.event_id JOIN budget b2 ON b1.category = b2.category AND b1.category = 'Advertisement' JOIN event e2 ON b2.link_to_event = e2.event_id WHERE e1.event_name = 'Yearly Kickoff' AND e2.event_name = 'October Meeting' GROUP BY b1.link_to_event HAVING SUM(b1.amount) > SUM(b2.amount)) AS subquery;\t----- bird -----\tstudent_club",
    "1360": "SELECT (SUM(CASE WHEN b.category = 'Parking' THEN b.amount ELSE 0 END) / SUM(b.amount)) * 100 AS parking_budget_percentage FROM budget b JOIN event e ON b.link_to_event = e.event_id WHERE e.event_name = 'November Speaker';\t----- bird -----\tstudent_club",
    "1361": "SELECT SUM(e.cost) AS total_pizza_cost FROM expense e WHERE e.expense_description = 'Pizza';\t----- bird -----\tstudent_club",
    "1362": "SELECT COUNT(DISTINCT city) FROM zip_code WHERE county = 'Orange County' AND state = 'Virginia';\t----- bird -----\tstudent_club",
    "1363": "SELECT DISTINCT department FROM major WHERE college = 'College of Humanities and Social Sciences';\t----- bird -----\tstudent_club",
    "1364": "SELECT z.city, z.county, z.state FROM member m JOIN zip_code z ON m.zip = z.zip_code WHERE m.first_name = 'Amy' AND m.last_name = 'Firth' LIMIT 1;\t----- bird -----\tstudent_club",
    "1365": "SELECT e.expense_description FROM expense e JOIN budget b ON e.link_to_budget = b.budget_id WHERE b.remaining = (SELECT MIN(remaining) FROM budget);\t----- bird -----\tstudent_club",
    "1366": "SELECT m.* FROM member m JOIN attendance a ON m.member_id = a.link_to_member JOIN event e ON a.link_to_event = e.event_id WHERE e.event_name = 'October Meeting';\t----- bird -----\tstudent_club",
    "1367": "SELECT major.college FROM member JOIN major ON member.link_to_major = major.major_id GROUP BY major.college ORDER BY COUNT(member.member_id) DESC LIMIT 1;\t----- bird -----\tstudent_club",
    "1368": "SELECT major.major_name FROM member JOIN major ON member.link_to_major = major.major_id WHERE member.phone = '809-555-3360';\t----- bird -----\tstudent_club",
    "1369": "SELECT event.event_name FROM event JOIN budget ON event.event_id = budget.link_to_event WHERE budget.amount = (SELECT MAX(amount) FROM budget) LIMIT 1;\t----- bird -----\tstudent_club",
    "1370": "SELECT e.expense_id, e.expense_description, e.expense_date, e.cost, e.approved, e.link_to_member, e.link_to_budget FROM expense e JOIN member m ON e.link_to_member = m.member_id WHERE m.position = 'Vice President';\t----- bird -----\tstudent_club",
    "1371": "SELECT COUNT(DISTINCT attendance.link_to_member) FROM attendance JOIN event ON attendance.link_to_event = event.event_id WHERE event.event_name = 'Women''s Soccer';\t----- bird -----\tstudent_club",
    "1372": "SELECT income.date_received FROM income JOIN member ON income.link_to_member = member.member_id WHERE member.first_name = 'Casey' AND member.last_name = 'Mason';\t----- bird -----\tstudent_club",
    "1373": "SELECT COUNT(DISTINCT m.member_id) FROM member m JOIN zip_code z ON m.zip = z.zip_code WHERE z.state = 'Maryland';\t----- bird -----\tstudent_club",
    "1374": "SELECT COUNT(DISTINCT attendance.link_to_event) FROM attendance JOIN member ON attendance.link_to_member = member.member_id WHERE member.phone = '954-555-6240';\t----- bird -----\tstudent_club",
    "1375": "SELECT m.first_name, m.last_name FROM member m JOIN major mj ON m.link_to_major = mj.major_id WHERE mj.department = 'School of Applied Sciences, Technology and Education';\t----- bird -----\tstudent_club",
    "1376": "SELECT e.event_name FROM event e JOIN budget b ON e.event_id = b.link_to_event WHERE e.status = 'Closed' ORDER BY (b.spent / b.amount) DESC LIMIT 1;\t----- bird -----\tstudent_club",
    "1377": "SELECT COUNT(*) FROM member WHERE position = 'President';\t----- bird -----\tstudent_club",
    "1378": "SELECT MAX(spent) AS highest_budget_spent FROM budget;\t----- bird -----\tstudent_club",
    "1379": "SELECT COUNT(*) FROM event WHERE type = 'Meeting' AND YEAR(event_date) = 2020;\t----- bird -----\tstudent_club",
    "1380": "SELECT SUM(spent) FROM budget WHERE category = 'Food';\t----- bird -----\tstudent_club",
    "1381": "SELECT CONCAT(m.first_name, ' ', m.last_name) AS name FROM member m JOIN attendance a ON m.member_id = a.link_to_member GROUP BY m.member_id, m.first_name, m.last_name HAVING COUNT(a.link_to_event) > 7;\t----- bird -----\tstudent_club",
    "1382": "SELECT m.member_id, m.first_name, m.last_name FROM member m JOIN major ma ON m.link_to_major = ma.major_id JOIN attendance a ON m.member_id = a.link_to_member JOIN event e ON a.link_to_event = e.event_id WHERE ma.major_name = 'Interior Design' AND e.event_name = 'Community Theater';\t----- bird -----\tstudent_club",
    "1383": "SELECT CONCAT(first_name, ' ', last_name) AS full_name FROM member JOIN zip_code ON member.zip = zip_code.zip_code WHERE zip_code.city = 'Georgetown' AND zip_code.state = 'South Carolina';\t----- bird -----\tstudent_club",
    "1384": "SELECT COUNT(income.income_id) FROM income JOIN member ON income.link_to_member = member.member_id WHERE member.first_name = 'Grant' AND member.last_name = 'Gilmour';\t----- bird -----\tstudent_club",
    "1385": "SELECT DISTINCT CONCAT(m.first_name, ' ', m.last_name) AS student_name FROM member m JOIN income i ON m.member_id = i.link_to_member WHERE i.amount > 40;\t----- bird -----\tstudent_club",
    "1386": "SELECT SUM(e.cost) AS total_expense FROM expense e JOIN budget b ON e.link_to_budget = b.budget_id JOIN event ev ON b.link_to_event = ev.event_id WHERE ev.event_name = 'Yearly Kickoff';\t----- bird -----\tstudent_club",
    "1387": "SELECT m.first_name, m.last_name FROM member m JOIN budget b ON m.member_id = b.link_to_event JOIN event e ON b.link_to_event = e.event_id WHERE e.event_name = 'Yearly Kickoff' LIMIT 1;\t----- bird -----\tstudent_club",
    "1388": "SELECT CONCAT(m.first_name, ' ', m.last_name) AS full_name, i.source FROM income i JOIN member m ON i.link_to_member = m.member_id WHERE i.amount = (SELECT MAX(amount) FROM income);\t----- bird -----\tstudent_club",
    "1389": "SELECT e.event_name FROM event e JOIN budget b ON e.event_id = b.link_to_event JOIN expense ex ON b.budget_id = ex.link_to_budget WHERE ex.cost = (SELECT MIN(cost) FROM expense);\t----- bird -----\tstudent_club",
    "1390": "SELECT (SUM(e.cost) FILTER (WHERE ev.event_name = 'Yearly Kickoff') * 100.0) / SUM(e.cost) AS percentage FROM expense e JOIN budget b ON e.link_to_budget = b.budget_id JOIN event ev ON b.link_to_event = ev.event_id;\t----- bird -----\tstudent_club",
    "1391": "SELECT CAST(SUM(CASE WHEN m.major_name = 'Finance' THEN 1 ELSE 0 END) AS FLOAT) / NULLIF(SUM(CASE WHEN m.major_name = 'Physics' THEN 1 ELSE 0 END), 0) AS finance_to_physics_ratio FROM member mem JOIN major m ON mem.link_to_major = m.major_id;\t----- bird -----\tstudent_club",
    "1392": "SELECT source FROM income WHERE date_received BETWEEN '2019-09-01' AND '2019-09-30' GROUP BY source ORDER BY SUM(amount) DESC LIMIT 1;\t----- bird -----\tstudent_club",
    "1393": "SELECT CONCAT(first_name, ' ', last_name) AS full_name, email FROM member WHERE position = 'Secretary';\t----- bird -----\tstudent_club",
    "1394": "SELECT COUNT(*) FROM member m JOIN major ma ON m.link_to_major = ma.major_id WHERE ma.major_name = 'Physics Teaching';\t----- bird -----\tstudent_club",
    "1395": "SELECT COUNT(DISTINCT attendance.link_to_member) FROM attendance JOIN event ON attendance.link_to_event = event.event_id WHERE event.event_name = 'Community Theater' AND YEAR(event.event_date) = 2019;\t----- bird -----\tstudent_club",
    "1396": "SELECT COUNT(a.link_to_event) AS number_of_events_attended, m2.major_name FROM member m1 JOIN attendance a ON m1.member_id = a.link_to_member JOIN major m2 ON m1.link_to_major = m2.major_id WHERE m1.first_name = 'Luisa' AND m1.last_name = 'Guidi' GROUP BY m2.major_name;\t----- bird -----\tstudent_club",
    "1397": "SELECT AVG(food_spent) FROM (SELECT SUM(b.spent) AS food_spent FROM budget b JOIN event e ON b.link_to_event = e.event_id WHERE b.category = 'Food' AND e.status = 'Closed' GROUP BY b.link_to_event) subquery;\t----- bird -----\tstudent_club",
    "1398": "SELECT e.event_name FROM event e JOIN budget b ON e.event_id = b.link_to_event WHERE b.category = 'Advertisement' ORDER BY b.spent DESC LIMIT 1;\t----- bird -----\tstudent_club",
    "1399": "SELECT CASE WHEN COUNT(*) > 0 THEN 'Yes' ELSE 'No' END AS attended FROM attendance a JOIN member m ON a.link_to_member = m.member_id JOIN event e ON a.link_to_event = e.event_id WHERE m.first_name = 'Maya' AND m.last_name = 'Mclean' AND e.event_name = 'Women''s Soccer';\t----- bird -----\tstudent_club",
    "1400": "SELECT (SUM(CASE WHEN type = 'Community Service' THEN 1 ELSE 0 END) * 100.0) / COUNT(event_id) AS community_service_percentage FROM event WHERE event_date BETWEEN '2019-01-01' AND '2019-12-31' AND event_name LIKE '%Student_Club%';\t----- bird -----\tstudent_club",
    "1401": "SELECT e.cost FROM expense e JOIN budget b ON e.link_to_budget = b.budget_id JOIN event ev ON b.link_to_event = ev.event_id WHERE e.expense_description = 'Posters' AND ev.event_name = 'September Speaker';\t----- bird -----\tstudent_club",
    "1402": "SELECT t_shirt_size FROM member GROUP BY t_shirt_size ORDER BY COUNT(*) DESC LIMIT 1;\t----- bird -----\tstudent_club",
    "1403": "SELECT e.event_name FROM event e JOIN budget b ON e.event_id = b.link_to_event WHERE e.status = 'Closed' AND b.remaining < 0 ORDER BY b.remaining ASC LIMIT 1;\t----- bird -----\tstudent_club",
    "1404": "SELECT e.expense_description AS expense_type, SUM(e.cost) AS total_value FROM expense e JOIN budget b ON e.link_to_budget = b.budget_id JOIN event ev ON b.link_to_event = ev.event_id WHERE ev.event_name = 'October Meeting' AND e.approved = 1 GROUP BY e.expense_description;\t----- bird -----\tstudent_club",
    "1405": "SELECT category, SUM(amount) AS total_amount FROM budget JOIN event ON budget.link_to_event = event.event_id WHERE event.event_name = 'April Speaker' GROUP BY category ORDER BY total_amount ASC;\t----- bird -----\tstudent_club",
    "1406": "SELECT * FROM budget WHERE category = 'Food' ORDER BY amount DESC LIMIT 1;\t----- bird -----\tstudent_club",
    "1407": "SELECT * FROM budget WHERE category = 'Advertisement' ORDER BY amount DESC LIMIT 3;\t----- bird -----\tstudent_club",
    "1408": "SELECT SUM(cost) AS total_parking_cost FROM expense WHERE expense_description = 'Parking';\t----- bird -----\tstudent_club",
    "1409": "SELECT SUM(cost) AS total_expense FROM expense WHERE expense_date = '2019-08-20';\t----- bird -----\tstudent_club",
    "1410": "SELECT CONCAT(m.first_name, ' ', m.last_name) AS full_name, SUM(e.cost) AS total_cost FROM member m JOIN expense e ON m.member_id = e.link_to_member WHERE m.member_id = 'rec4BLdZHS2Blfp4v' GROUP BY m.member_id;\t----- bird -----\tstudent_club",
    "1411": "SELECT expense_description FROM expense JOIN member ON expense.link_to_member = member.member_id WHERE member.first_name = 'Sacha' AND member.last_name = 'Harrison';\t----- bird -----\tstudent_club",
    "1412": "SELECT expense.expense_description FROM expense JOIN member ON expense.link_to_member = member.member_id WHERE member.t_shirt_size = 'X-Large';\t----- bird -----\tstudent_club",
    "1413": "SELECT DISTINCT m.zip FROM member m JOIN expense e ON m.member_id = e.link_to_member WHERE e.cost < 50;\t----- bird -----\tstudent_club",
    "1414": "SELECT major.major_name FROM member JOIN major ON member.link_to_major = major.major_id WHERE member.first_name = 'Phillip' AND member.last_name = 'Cullen' LIMIT 1;\t----- bird -----\tstudent_club",
    "1415": "SELECT DISTINCT m.position FROM member m JOIN major mj ON m.link_to_major = mj.major_id WHERE mj.major_name = 'Business';\t----- bird -----\tstudent_club",
    "1416": "SELECT COUNT(*) FROM member JOIN major ON member.link_to_major = major.major_id WHERE major.major_name = 'Business' AND member.t_shirt_size = 'Medium';\t----- bird -----\tstudent_club",
    "1417": "SELECT DISTINCT e.type FROM event e JOIN budget b ON e.event_id = b.link_to_event WHERE b.remaining > 30;\t----- bird -----\tstudent_club",
    "1418": "SELECT DISTINCT b.category FROM event e JOIN budget b ON e.event_id = b.link_to_event WHERE e.location = 'MU 215';\t----- bird -----\tstudent_club",
    "1419": "SELECT b.category FROM event e JOIN budget b ON e.event_id = b.link_to_event WHERE e.event_date = '2020-03-24T12:00:00' LIMIT 1;\t----- bird -----\tstudent_club",
    "1420": "SELECT major.major_name FROM member JOIN major ON member.link_to_major = major.major_id WHERE member.position = 'Vice President' LIMIT 1;\t----- bird -----\tstudent_club",
    "1421": "SELECT (SUM(CASE WHEN m.position = 'Member' AND maj.major_name = 'Business' THEN 1 ELSE 0 END) * 100.0) / COUNT(m.member_id) AS percentage_business_members FROM member m JOIN major maj ON m.link_to_major = maj.major_id;\t----- bird -----\tstudent_club",
    "1422": "SELECT DISTINCT e.type FROM event e WHERE e.location = 'MU 215';\t----- bird -----\tstudent_club",
    "1423": "SELECT COUNT(*) FROM income WHERE amount = 50;\t----- bird -----\tstudent_club",
    "1424": "SELECT COUNT(*) FROM member WHERE position = 'Member' AND t_shirt_size = 'X-Large';\t----- bird -----\tstudent_club",
    "1425": "SELECT COUNT(*) FROM major WHERE college = 'College of Agriculture and Applied Sciences' AND department = 'School of Applied Sciences, Technology and Education';\t----- bird -----\tstudent_club",
    "1426": "SELECT m.last_name, ma.department, ma.college FROM member m JOIN major ma ON m.link_to_major = ma.major_id WHERE ma.major_name = 'Environmental Engineering';\t----- bird -----\tstudent_club",
    "1427": "SELECT DISTINCT b.category FROM budget b JOIN event e ON b.link_to_event = e.event_id WHERE e.location = 'MU 215' AND e.type = 'Guest Speaker' AND b.spent = 0;\t----- bird -----\tstudent_club",
    "1428": "SELECT z.city, z.state FROM member m JOIN major ma ON m.link_to_major = ma.major_id JOIN zip_code z ON m.zip = z.zip_code WHERE ma.department = 'Electrical and Computer Engineering Department' AND m.position = 'Member';\t----- bird -----\tstudent_club",
    "1429": "SELECT e.event_name FROM event e JOIN attendance a ON e.event_id = a.link_to_event JOIN member m ON a.link_to_member = m.member_id WHERE e.type = 'Social' AND m.position = 'Vice President' AND e.location = '900 E. Washington St.';\t----- bird -----\tstudent_club",
    "1430": "SELECT m.last_name, m.position FROM member m JOIN expense e ON m.member_id = e.link_to_member WHERE e.expense_description = 'Pizza' AND e.expense_date = '2019-09-10' LIMIT 1;\t----- bird -----\tstudent_club",
    "1431": "SELECT DISTINCT m.last_name FROM member m JOIN attendance a ON m.member_id = a.link_to_member JOIN event e ON a.link_to_event = e.event_id WHERE m.position = 'Member' AND e.event_name = 'Women''s Soccer';\t----- bird -----\tstudent_club",
    "1432": "SELECT (COUNT(CASE WHEN amount = 50 THEN 1 END) * 100.0 / COUNT(*)) AS percentage FROM member m JOIN income i ON m.member_id = i.link_to_member WHERE m.t_shirt_size = 'Medium' AND i.source = 'Student_Club';\t----- bird -----\tstudent_club",
    "1433": "SELECT DISTINCT state FROM zip_code WHERE type = 'PO Box';\t----- bird -----\tstudent_club",
    "1434": "SELECT zip_code FROM zip_code WHERE type = 'PO Box' AND state = 'Puerto Rico' AND city = 'San Juan Municipio';\t----- bird -----\tstudent_club",
    "1435": "SELECT event_name FROM event WHERE type = 'Game' AND status = 'Closed' AND event_date BETWEEN '2019-03-15' AND '2020-03-20';\t----- bird -----\tstudent_club",
    "1436": "SELECT DISTINCT attendance.link_to_event FROM attendance JOIN expense ON attendance.link_to_member = expense.link_to_member WHERE expense.cost > 50;\t----- bird -----\tstudent_club",
    "1437": "SELECT DISTINCT m.member_id, m.first_name, m.last_name, a.link_to_event FROM member m JOIN expense e ON m.member_id = e.link_to_member JOIN attendance a ON m.member_id = a.link_to_member WHERE e.approved = 'true' AND e.expense_date BETWEEN '2019-01-10' AND '2019-11-19';\t----- bird -----\tstudent_club",
    "1438": "SELECT college FROM major WHERE major_id = (SELECT link_to_major FROM member WHERE first_name = 'Katy' AND link_to_major = 'rec1N0upiVLy5esTO');\t----- bird -----\tstudent_club",
    "1439": "SELECT member.phone FROM member JOIN major ON member.link_to_major = major.major_id WHERE major.major_name = 'Business' AND major.college = 'College of Agriculture and Applied Sciences';\t----- bird -----\tstudent_club",
    "1440": "SELECT DISTINCT m.email FROM member m JOIN expense e ON m.member_id = e.link_to_member WHERE e.expense_date BETWEEN '2019-09-10' AND '2019-11-19' AND e.cost > 20;\t----- bird -----\tstudent_club",
    "1441": "SELECT COUNT(*) FROM member m JOIN major ma ON m.link_to_major = ma.major_id WHERE ma.major_name = 'education' AND ma.college = 'Education & Human Services';\t----- bird -----\tstudent_club",
    "1442": "SELECT (SUM(CASE WHEN b.remaining < 0 THEN 1 ELSE 0 END) * 100.0) / COUNT(b.link_to_event) AS percentage_over_budget FROM budget b;\t----- bird -----\tstudent_club",
    "1443": "SELECT event_id, location, status FROM event WHERE event_date BETWEEN '2019-11-01' AND '2020-03-31';\t----- bird -----\tstudent_club",
    "1444": "SELECT expense_description FROM expense GROUP BY expense_description HAVING AVG(cost) > 50;\t----- bird -----\tstudent_club",
    "1445": "SELECT CONCAT(first_name, ' ', last_name) AS full_name FROM member WHERE t_shirt_size = 'X-Large';\t----- bird -----\tstudent_club",
    "1446": "SELECT (SUM(CASE WHEN type = 'PO Box' THEN 1 ELSE 0 END) * 100.0) / COUNT(*) AS percentage_po_box FROM zip_code;\t----- bird -----\tstudent_club",
    "1447": "SELECT e.event_name, e.location FROM event e JOIN budget b ON e.event_id = b.link_to_event WHERE b.remaining > 0;\t----- bird -----\tstudent_club",
    "1448": "SELECT e.event_name, e.event_date FROM event e JOIN budget b ON e.event_id = b.link_to_event JOIN expense ex ON b.budget_id = ex.link_to_budget WHERE ex.expense_description = 'Pizza' AND ex.cost > 50 AND ex.cost < 100;\t----- bird -----\tstudent_club",
    "1449": "SELECT m.first_name || ' ' || m.last_name AS full_name, maj.major_name FROM member m JOIN expense e ON m.member_id = e.link_to_member JOIN major maj ON m.link_to_major = maj.major_id WHERE e.cost > 100;\t----- bird -----\tstudent_club",
    "1450": "SELECT z.city, z.state FROM event e JOIN budget b ON e.event_id = b.link_to_event JOIN income i ON b.budget_id = i.link_to_member JOIN zip_code z ON e.location = z.zip_code GROUP BY e.event_id, z.city, z.state HAVING COUNT(i.income_id) > 40;\t----- bird -----\tstudent_club",
    "1451": "SELECT m.member_id, m.first_name, m.last_name, SUM(e.cost) AS total_cost FROM member m JOIN expense e ON m.member_id = e.link_to_member JOIN budget b ON e.link_to_budget = b.budget_id JOIN event ev ON b.link_to_event = ev.event_id GROUP BY m.member_id, m.first_name, m.last_name HAVING COUNT(DISTINCT ev.event_id) > 1 ORDER BY total_cost DESC LIMIT 1;\t----- bird -----\tstudent_club",
    "1452": "SELECT SUM(e.cost) / COUNT(DISTINCT e.link_to_budget) AS average_amount_paid FROM expense e JOIN member m ON e.link_to_member = m.member_id WHERE m.position != 'Member';\t----- bird -----\tstudent_club",
    "1453": "SELECT e.event_name FROM event e JOIN budget b ON e.event_id = b.link_to_event JOIN expense ex ON b.budget_id = ex.link_to_budget WHERE b.category = 'Parking' GROUP BY e.event_name, e.event_id HAVING AVG(ex.cost) < (SELECT AVG(ex2.cost) FROM expense ex2 JOIN budget b2 ON ex2.link_to_budget = b2.budget_id WHERE b2.category = 'Parking');\t----- bird -----\tstudent_club",
    "1454": "SELECT (SUM(e.cost) / COUNT(DISTINCT ev.event_id)) * 100 AS percentage_cost FROM expense e JOIN budget b ON e.link_to_budget = b.budget_id JOIN event ev ON b.link_to_event = ev.event_id WHERE ev.type = 'Meeting';\t----- bird -----\tstudent_club",
    "1455": "SELECT b.budget_id FROM budget b JOIN expense e ON b.budget_id = e.link_to_budget WHERE e.expense_description = 'Water, chips, cookies' ORDER BY e.cost DESC LIMIT 1;\t----- bird -----\tstudent_club",
    "1456": "SELECT m.first_name || ' ' || m.last_name AS full_name, SUM(e.cost) AS total_spent FROM member m JOIN expense e ON m.member_id = e.link_to_member GROUP BY m.member_id ORDER BY total_spent DESC LIMIT 5;\t----- bird -----\tstudent_club",
    "1457": "SELECT CONCAT(first_name, ' ', last_name) AS full_name, phone FROM member WHERE member_id IN (SELECT link_to_member FROM expense GROUP BY link_to_member HAVING MIN(cost) > (SELECT AVG(cost) FROM expense));\t----- bird -----\tstudent_club",
    "1458": "SELECT (SUM(CASE WHEN z.state = 'New Jersey' THEN 1 ELSE 0 END) * 1.0 / COUNT(m.member_id)) - (SUM(CASE WHEN z.state = 'Vermont' THEN 1 ELSE 0 END) * 1.0 / COUNT(m.member_id)) AS difference FROM member m LEFT JOIN zip_code z ON m.zip = z.zip_code WHERE m.position = 'Member';\t----- bird -----\tstudent_club",
    "1459": "SELECT m.major_name, m.department FROM member mem JOIN major m ON mem.link_to_major = m.major_id WHERE mem.first_name = 'Garrett' AND mem.last_name = 'Gerke';\t----- bird -----\tstudent_club",
    "1460": "SELECT CONCAT(m.first_name, ' ', m.last_name) AS full_name, e.cost FROM expense e JOIN member m ON e.link_to_member = m.member_id WHERE e.expense_description = 'Water, Veggie tray, supplies';\t----- bird -----\tstudent_club",
    "1461": "SELECT m.last_name, m.phone FROM member m JOIN major mj ON m.link_to_major = mj.major_id WHERE mj.major_name = 'Elementary Education';\t----- bird -----\tstudent_club",
    "1462": "SELECT b.category, b.amount FROM budget b JOIN event e ON b.link_to_event = e.event_id WHERE e.event_name = 'January Speaker';\t----- bird -----\tstudent_club",
    "1463": "SELECT DISTINCT e.event_name FROM event e JOIN budget b ON e.event_id = b.link_to_event WHERE b.category = 'Food';\t----- bird -----\tstudent_club",
    "1464": "SELECT CONCAT(m.first_name, ' ', m.last_name) AS full_name, i.amount FROM member m JOIN income i ON m.member_id = i.link_to_member WHERE i.date_received = '2019-09-09' AND m.position = 'student';\t----- bird -----\tstudent_club",
    "1465": "SELECT b.category FROM expense e JOIN budget b ON e.link_to_budget = b.budget_id WHERE e.expense_description = 'Posters';\t----- bird -----\tstudent_club",
    "1466": "SELECT CONCAT(m.first_name, ' ', m.last_name) AS full_name, maj.college FROM member m JOIN major maj ON m.link_to_major = maj.major_id WHERE m.position = 'Secretary';\t----- bird -----\tstudent_club",
    "1467": "SELECT e.event_name, SUM(b.spent) AS total_spent FROM budget b JOIN event e ON b.link_to_event = e.event_id WHERE b.category = 'Speaker Gifts' GROUP BY e.event_name;\t----- bird -----\tstudent_club",
    "1468": "SELECT z.city FROM member m JOIN zip_code z ON m.zip = z.zip_code WHERE m.first_name = 'Garrett' AND m.last_name = 'Gerke';\t----- bird -----\tstudent_club",
    "1469": "SELECT CONCAT(m.first_name, ' ', m.last_name) AS full_name, m.position FROM member m JOIN zip_code z ON m.zip = z.zip_code WHERE z.city = 'Lincolnton' AND z.state = 'North Carolina' AND m.zip = '28092';\t----- bird -----\tstudent_club",
    "1470": "SELECT COUNT(DISTINCT g.GasStationID) FROM gasstations g JOIN transactions_1k t ON g.GasStationID = t.GasStationID JOIN products p ON t.ProductID = p.ProductID WHERE g.Country = 'CZE' AND p.Description LIKE '%Premium%';\t----- bird -----\tdebit_card_specializing",
    "1471": "SELECT CAST(SUM(CASE WHEN Currency = 'EUR' THEN 1 ELSE 0 END) AS FLOAT) / NULLIF(SUM(CASE WHEN Currency = 'CZK' THEN 1 ELSE 0 END), 0) AS EUR_to_CZK_ratio FROM customers;\t----- bird -----\tdebit_card_specializing",
    "1472": "SELECT CustomerID FROM yearmonth WHERE LEFT(Date,4) = '2012' AND CustomerID IN (SELECT CustomerID FROM customers WHERE Currency = 'LAM') GROUP BY CustomerID ORDER BY SUM(Consumption) ASC LIMIT 1;\t----- bird -----\tdebit_card_specializing",
    "1473": "SELECT AVG(Consumption)/12 AS AverageMonthlyConsumption FROM yearmonth ym JOIN customers c ON ym.CustomerID = c.CustomerID WHERE LEFT(ym.Date,4) = '2013' AND c.Segment = 'SME';\t----- bird -----\tdebit_card_specializing",
    "1474": "SELECT c.CustomerID, SUM(y.Consumption) AS TotalConsumption FROM customers c JOIN yearmonth y ON c.CustomerID = y.CustomerID WHERE c.Currency = 'CZK' AND y.Date BETWEEN 201101 AND 201112 GROUP BY c.CustomerID ORDER BY TotalConsumption DESC LIMIT 1;\t----- bird -----\tdebit_card_specializing",
    "1475": "SELECT COUNT(DISTINCT y.CustomerID) FROM yearmonth y JOIN customers c ON y.CustomerID = c.CustomerID WHERE c.Segment = 'KAM' AND y.Date BETWEEN 201201 AND 201212 GROUP BY y.CustomerID HAVING SUM(y.Consumption) < 30000;\t----- bird -----\tdebit_card_specializing",
    "1476": "SELECT COALESCE(SUM(CASE WHEN c.Currency = 'CZK' THEN y.Consumption ELSE 0 END),0) - COALESCE(SUM(CASE WHEN c.Currency = 'EUR' THEN y.Consumption ELSE 0 END),0) AS ConsumptionDifference FROM yearmonth y JOIN customers c ON y.CustomerID = c.CustomerID WHERE y.Date BETWEEN 201201 AND 201212;\t----- bird -----\tdebit_card_specializing",
    "1477": "SELECT EXTRACT(YEAR FROM t.Date) AS Year, SUM(t.Amount) AS TotalAmount FROM transactions_1k t JOIN customers c ON t.CustomerID = c.CustomerID WHERE c.Currency = 'EUR' GROUP BY Year ORDER BY TotalAmount DESC LIMIT 1;\t----- bird -----\tdebit_card_specializing",
    "1478": "SELECT Segment FROM customers JOIN yearmonth ON customers.CustomerID = yearmonth.CustomerID GROUP BY Segment ORDER BY SUM(Consumption) ASC LIMIT 1;\t----- bird -----\tdebit_card_specializing",
    "1479": "SELECT SUBSTRING(y.Date, 1, 4) AS Year, SUM(y.Consumption) AS TotalConsumption FROM yearmonth y JOIN customers c ON y.CustomerID = c.CustomerID WHERE c.Currency = 'CZK' GROUP BY Year ORDER BY TotalConsumption DESC LIMIT 1;\t----- bird -----\tdebit_card_specializing",
    "1480": "SELECT SUBSTR(ym.Date, 5, 2) AS Month, SUM(ym.Consumption) AS TotalConsumption FROM yearmonth ym JOIN customers c ON ym.CustomerID = c.CustomerID WHERE c.Segment = 'SME' AND SUBSTR(ym.Date, 1, 6) BETWEEN '201301' AND '201312' GROUP BY Month ORDER BY TotalConsumption DESC LIMIT 1;\t----- bird -----\tdebit_card_specializing",
    "1481": "WITH MinConsumption AS (SELECT Segment, MIN(AnnualConsumption) AS MinAnnualConsumption FROM (SELECT c.CustomerID, c.Segment, SUM(y.Consumption) AS AnnualConsumption FROM customers c JOIN yearmonth y ON c.CustomerID = y.CustomerID WHERE y.Date BETWEEN '201301' AND '201312' AND c.Currency = 'CZK' GROUP BY c.CustomerID, c.Segment) AS Sub GROUP BY Segment), AvgMinConsumption AS (SELECT c.Segment, AVG(y.Consumption) AS AvgMinAnnualConsumption FROM customers c JOIN yearmonth y ON c.CustomerID = y.CustomerID JOIN (SELECT c2.Segment, c2.CustomerID, SUM(y2.Consumption) AS AnnualConsumption FROM customers c2 JOIN yearmonth y2 ON c2.CustomerID = y2.CustomerID WHERE y2.Date BETWEEN '201301' AND '201312' AND c2.Currency = 'CZK' GROUP BY c2.CustomerID, c2.Segment) AS;\t----- bird -----\tdebit_card_specializing",
    "1482": "SELECT c.Segment, ((y2013.Consumption - y2012.Consumption) / NULLIF(y2013.Consumption,0)) * 100 AS PercentageIncrease FROM customers c JOIN yearmonth y2012 ON c.CustomerID = y2012.CustomerID AND LEFT(y2012.Date,4) = '2012' JOIN yearmonth y2013 ON c.CustomerID = y2013.CustomerID AND LEFT(y2013.Date,4) = '2013' WHERE c.Segment IN ('SME', 'LAM', 'KAM') AND c.Currency = 'EUR' GROUP BY c.Segment, y2012.Consumption, y2013.Consumption ORDER BY PercentageIncrease DESC;\t----- bird -----\tdebit_card_specializing",
    "1483": "SELECT SUM(Consumption) FROM yearmonth WHERE CustomerID = 6 AND Date BETWEEN '201308' AND '201311';\t----- bird -----\tdebit_card_specializing",
    "1484": "SELECT (SELECT COUNT(*) FROM gasstations WHERE Country = 'CZE' AND Segment = 'discount') - (SELECT COUNT(*) FROM gasstations WHERE Country = 'SVK' AND Segment = 'discount') AS More_Discount_GasStations;\t----- bird -----\tdebit_card_specializing",
    "1485": "SELECT (SELECT Consumption FROM yearmonth WHERE CustomerID = 7 AND Date = 201304) - (SELECT Consumption FROM yearmonth WHERE CustomerID = 5 AND Date = 201304) AS ConsumptionDifference;\t----- bird -----\tdebit_card_specializing",
    "1486": "SELECT (SUM(CASE WHEN c.Currency = 'CZK' THEN 1 ELSE 0 END) - SUM(CASE WHEN c.Currency = 'EUR' THEN 1 ELSE 0 END)) AS More_SMEs_Pay_CZK_Than_EUR FROM customers c WHERE c.Segment = 'SME';\t----- bird -----\tdebit_card_specializing",
    "1487": "SELECT CustomerID FROM yearmonth WHERE Date = 201310 AND CustomerID IN (SELECT CustomerID FROM customers WHERE Segment = 'LAM' AND Currency = 'Euro') ORDER BY Consumption DESC LIMIT 1;\t----- bird -----\tdebit_card_specializing",
    "1488": "SELECT CustomerID, SUM(Consumption) AS TotalConsumption FROM yearmonth WHERE CustomerID IN (SELECT CustomerID FROM customers WHERE Segment = 'KAM') GROUP BY CustomerID ORDER BY TotalConsumption DESC LIMIT 1;\t----- bird -----\tdebit_card_specializing",
    "1489": "SELECT SUM(y.Consumption) FROM yearmonth y JOIN customers c ON y.CustomerID = c.CustomerID WHERE c.Segment = 'KAM' AND y.Date = 201305;\t----- bird -----\tdebit_card_specializing",
    "1490": "SELECT (COUNT(DISTINCT ym.CustomerID) * 100.0 / (SELECT COUNT(DISTINCT CustomerID) FROM customers WHERE Segment = 'LAM')) AS Percentage FROM yearmonth ym JOIN customers c ON ym.CustomerID = c.CustomerID WHERE c.Segment = 'LAM' AND ym.Consumption > 46.73;\t----- bird -----\tdebit_card_specializing",
    "1491": "SELECT Country, COUNT(*) AS ValueForMoneyGasStations FROM gasstations WHERE Segment = 'value for money' GROUP BY Country;\t----- bird -----\tdebit_card_specializing",
    "1492": "SELECT (COUNT(CASE WHEN Currency = 'Euro' THEN 1 END) * 100.0) / COUNT(*) AS Percentage_KAM_Uses_Euro FROM customers WHERE Segment = 'KAM';\t----- bird -----\tdebit_card_specializing",
    "1493": "SELECT 100.0 * COUNT(DISTINCT CustomerID) / (SELECT COUNT(DISTINCT CustomerID) FROM yearmonth WHERE Date LIKE '2012%') AS Percentage FROM yearmonth WHERE Date = '201202' AND Consumption > 528.3;\t----- bird -----\tdebit_card_specializing",
    "1494": "SELECT (COUNT(CASE WHEN Segment = 'premium' THEN 1 END) * 100.0) / COUNT(*) AS PremiumPercentage FROM gasstations WHERE Country = 'Slovakia';\t----- bird -----\tdebit_card_specializing",
    "1495": "SELECT CustomerID FROM yearmonth WHERE Date = '201309' ORDER BY Consumption DESC LIMIT 1;\t----- bird -----\tdebit_card_specializing",
    "1496": "SELECT c.Segment FROM customers c JOIN yearmonth y ON c.CustomerID = y.CustomerID WHERE y.Date = '201309' GROUP BY c.Segment ORDER BY SUM(y.Consumption) ASC LIMIT 1;\t----- bird -----\tdebit_card_specializing",
    "1497": "SELECT CustomerID FROM yearmonth WHERE Date = '201206' AND CustomerID IN (SELECT CustomerID FROM customers WHERE Segment = 'SME') ORDER BY Consumption ASC LIMIT 1;\t----- bird -----\tdebit_card_specializing",
    "1498": "SELECT MAX(Consumption) FROM yearmonth WHERE LEFT(Date,4) = '2012';\t----- bird -----\tdebit_card_specializing",
    "1499": "SELECT MAX(SUM(Consumption)/12) AS BiggestMonthlyConsumption FROM yearmonth ym JOIN customers c ON ym.CustomerID = c.CustomerID WHERE c.Currency = 'euro' GROUP BY ym.CustomerID;\t----- bird -----\tdebit_card_specializing",
    "1500": "SELECT DISTINCT p.Description FROM products p JOIN transactions_1k t ON p.ProductID = t.ProductID WHERE SUBSTRING(t.Date, 1, 6) = '201309';\t----- bird -----\tdebit_card_specializing",
    "1501": "SELECT DISTINCT g.Country FROM gasstations g JOIN transactions_1k t ON g.GasStationID = t.GasStationID WHERE LEFT(t.Date,6) = '201306';\t----- bird -----\tdebit_card_specializing",
    "1502": "SELECT DISTINCT g.ChainID FROM gasstations g JOIN transactions_1k t ON g.GasStationID = t.GasStationID JOIN customers c ON t.CustomerID = c.CustomerID WHERE c.Currency = 'euro';\t----- bird -----\tdebit_card_specializing",
    "1503": "SELECT DISTINCT p.Description FROM products p JOIN transactions_1k t ON p.ProductID = t.ProductID JOIN customers c ON t.CustomerID = c.CustomerID WHERE c.Currency = 'euro';\t----- bird -----\tdebit_card_specializing",
    "1504": "SELECT AVG(total_price) FROM (SELECT SUM(Price) AS total_price FROM transactions_1k WHERE Date LIKE '2012-01%' GROUP BY TransactionID) subquery;\t----- bird -----\tdebit_card_specializing",
    "1505": "SELECT COUNT(DISTINCT ym.CustomerID) FROM yearmonth ym JOIN customers c ON ym.CustomerID = c.CustomerID WHERE c.Currency = 'EUR' AND ym.Consumption > 1000;\t----- bird -----\tdebit_card_specializing",
    "1506": "SELECT DISTINCT p.Description FROM transactions_1k t JOIN gasstations g ON t.GasStationID = g.GasStationID JOIN products p ON t.ProductID = p.ProductID WHERE g.Country = 'CZE';\t----- bird -----\tdebit_card_specializing",
    "1507": "SELECT DISTINCT Time FROM transactions_1k t JOIN gasstations g ON t.GasStationID = g.GasStationID WHERE g.ChainID = 11;\t----- bird -----\tdebit_card_specializing",
    "1508": "SELECT COUNT(*) FROM transactions_1k t JOIN gasstations g ON t.GasStationID = g.GasStationID WHERE g.Country = 'CZE' AND t.Price > 1000;\t----- bird -----\tdebit_card_specializing",
    "1509": "SELECT COUNT(*) FROM transactions_1k t JOIN gasstations g ON t.GasStationID = g.GasStationID WHERE g.Country = 'CZE' AND t.Date > '2012-01-01';\t----- bird -----\tdebit_card_specializing",
    "1510": "SELECT AVG(total_price) FROM (SELECT SUM(Price) AS total_price FROM transactions_1k t JOIN gasstations g ON t.GasStationID = g.GasStationID WHERE g.Country = 'CZE' GROUP BY t.TransactionID) sub;\t----- bird -----\tdebit_card_specializing",
    "1511": "SELECT AVG(total_price) FROM (SELECT t.CustomerID, SUM(t.Price) AS total_price FROM transactions_1k t JOIN customers c ON t.CustomerID = c.CustomerID WHERE c.Currency = 'euro' GROUP BY t.CustomerID) subquery;\t----- bird -----\tdebit_card_specializing",
    "1512": "SELECT CustomerID FROM transactions_1k WHERE Date = '2012-08-25' GROUP BY CustomerID ORDER BY SUM(Price) DESC LIMIT 1;\t----- bird -----\tdebit_card_specializing",
    "1513": "SELECT g.Country FROM transactions_1k t JOIN gasstations g ON t.GasStationID = g.GasStationID WHERE t.Date = '2012-08-25' AND t.Amount > 0 ORDER BY t.Time ASC LIMIT 1;\t----- bird -----\tdebit_card_specializing",
    "1514": "SELECT DISTINCT c.Currency FROM transactions_1k t JOIN customers c ON t.CustomerID = c.CustomerID WHERE t.Date = '2012-08-24' AND t.Time = '16:25:00';\t----- bird -----\tdebit_card_specializing",
    "1515": "SELECT Segment FROM customers WHERE CustomerID = (SELECT CustomerID FROM transactions_1k WHERE Date = '2012-08-23' AND Time = '21:20:00');\t----- bird -----\tdebit_card_specializing",
    "1516": "SELECT COUNT(*) FROM transactions_1k t JOIN customers c ON t.CustomerID = c.CustomerID WHERE t.Date = '2012-08-26' AND t.Time < '13:00:00' AND c.Currency = 'CZK';\t----- bird -----\tdebit_card_specializing",
    "1517": "SELECT Segment FROM customers WHERE CustomerID = (SELECT MIN(CustomerID) FROM customers);\t----- bird -----\tdebit_card_specializing",
    "1518": "SELECT g.Country FROM transactions_1k t JOIN gasstations g ON t.GasStationID = g.GasStationID WHERE t.Date = '2012-08-24' AND t.Time = '12:42:00';\t----- bird -----\tdebit_card_specializing",
    "1519": "SELECT ProductID FROM transactions_1k WHERE Date = '2012-08-23' AND Time = '21:20:00';\t----- bird -----\tdebit_card_specializing",
    "1520": "SELECT ym.Date, ym.Consumption FROM yearmonth ym WHERE ym.CustomerID = (SELECT t.CustomerID FROM transactions_1k t WHERE t.Date = '2012-08-24' AND t.Price = 124.05 LIMIT 1) AND ym.Date BETWEEN '2012-01-01' AND '2012-01-31';\t----- bird -----\tdebit_card_specializing",
    "1521": "SELECT COUNT(*) FROM transactions_1k t JOIN gasstations g ON t.GasStationID = g.GasStationID WHERE t.Date = '2012-08-26' AND t.Time BETWEEN '08:00:00' AND '09:00:00' AND g.Country = 'CZE';\t----- bird -----\tdebit_card_specializing",
    "1522": "SELECT c.Currency FROM customers c JOIN yearmonth y ON c.CustomerID = y.CustomerID WHERE y.Date LIKE '201306%' AND y.Consumption = 214582.17 LIMIT 1;\t----- bird -----\tdebit_card_specializing",
    "1523": "SELECT g.Country FROM transactions_1k t JOIN gasstations g ON t.GasStationID = g.GasStationID WHERE t.CardID = 667467 LIMIT 1;\t----- bird -----\tdebit_card_specializing",
    "1524": "SELECT c.Currency FROM customers c JOIN transactions_1k t ON c.CustomerID = t.CustomerID WHERE t.Date = '2012-08-24' AND t.Price = 548.4;\t----- bird -----\tdebit_card_specializing",
    "1525": "SELECT 100.0 * COUNT(DISTINCT CASE WHEN Date = '2012-08-25' THEN CustomerID END) / COUNT(DISTINCT CustomerID) AS Percentage_EUR_Customers FROM customers WHERE Currency = 'EUR';\t----- bird -----\tdebit_card_specializing",
    "1526": "SELECT ((y2012.Consumption - y2013.Consumption) / y2012.Consumption) AS ConsumptionDecreaseRate FROM (SELECT CustomerID FROM transactions_1k WHERE Date = '2012-08-25' GROUP BY CustomerID HAVING SUM(Price) = 634.8) AS cust JOIN yearmonth y2012 ON cust.CustomerID = y2012.CustomerID AND YEAR(y2012.Date) = 2012 JOIN yearmonth y2013 ON cust.CustomerID = y2013.CustomerID AND YEAR(y2013.Date) = 2013 LIMIT 1;\t----- bird -----\tdebit_card_specializing",
    "1527": "SELECT GasStationID FROM transactions_1k GROUP BY GasStationID ORDER BY SUM(Price * Amount) DESC LIMIT 1;\t----- bird -----\tdebit_card_specializing",
    "1528": "SELECT 100.0 * SUM(CASE WHEN g.Segment = 'premium' THEN 1 ELSE 0 END) / COUNT(*) AS premium_percentage FROM gasstations g WHERE g.Country = 'SVK';\t----- bird -----\tdebit_card_specializing",
    "1529": "SELECT SUM(Amount * Price) AS TotalSpent, SUM(CASE WHEN Date LIKE '201201%' THEN Amount * Price ELSE 0 END) AS SpentInJan2012 FROM transactions_1k WHERE CustomerID = '38508';\t----- bird -----\tdebit_card_specializing",
    "1530": "SELECT p.Description, SUM(t.Amount) AS TotalSold FROM transactions_1k t JOIN products p ON t.ProductID = p.ProductID GROUP BY p.Description ORDER BY TotalSold DESC LIMIT 5;\t----- bird -----\tdebit_card_specializing",
    "1531": "SELECT t.CustomerID, SUM(t.Price) AS TotalSpending, SUM(t.Price)/SUM(t.Amount) AS AvgPricePerItem, c.Currency FROM transactions_1k t JOIN customers c ON t.CustomerID = c.CustomerID GROUP BY t.CustomerID, c.Currency ORDER BY TotalSpending DESC LIMIT 1;\t----- bird -----\tdebit_card_specializing",
    "1532": "SELECT g.Country FROM transactions_1k t JOIN gasstations g ON t.GasStationID = g.GasStationID WHERE t.ProductID = 2 AND t.Amount = 1 ORDER BY t.Price DESC LIMIT 1;\t----- bird -----\tdebit_card_specializing",
    "1533": "SELECT y.CustomerID, y.Consumption FROM yearmonth y WHERE y.Date = '201208' AND y.CustomerID IN (SELECT DISTINCT t.CustomerID FROM transactions_1k t WHERE t.ProductID = 5 AND (t.Price / t.Amount) > 29.00);\t----- bird -----\tdebit_card_specializing"
}