[
  {
    "db_id": "concert_singer",
    "query": "SELECT count(*) FROM singer",
    "query_toks": "['SELECT', 'count', '(', '*', ')', 'FROM', 'singer']",
    "query_toks_no_value": "['select', 'count', '(', '*', ')', 'from', 'singer']",
    "question": "How many singers do we have?",
    "question_th": "เรามีนักร้องกี่คน?",
    "question_toks": "['How', 'many', 'singers', 'do', 'we', 'have', '?']",
    "sql": "{'from': {'table_units': [['table_unit', 1]], 'conds': []}, 'select': [False, [[3, [0, [0, 0, False], None]]]], 'where': [], 'groupBy': [], 'having': [], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "concert_singer",
    "query": "SELECT count(*) FROM singer",
    "query_toks": "['SELECT', 'count', '(', '*', ')', 'FROM', 'singer']",
    "query_toks_no_value": "['select', 'count', '(', '*', ')', 'from', 'singer']",
    "question": "What is the total number of singers?",
    "question_th": "นักร้องทั้งหมดกี่คนคะ?",
    "question_toks": "['What', 'is', 'the', 'total', 'number', 'of', 'singers', '?']",
    "sql": "{'from': {'table_units': [['table_unit', 1]], 'conds': []}, 'select': [False, [[3, [0, [0, 0, False], None]]]], 'where': [], 'groupBy': [], 'having': [], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "concert_singer",
    "query": "SELECT name ,  country ,  age FROM singer ORDER BY age DESC",
    "query_toks": "['SELECT', 'name', ',', 'country', ',', 'age', 'FROM', 'singer', 'ORDER', 'BY', 'age', 'DESC']",
    "query_toks_no_value": "['select', 'name', ',', 'country', ',', 'age', 'from', 'singer', 'order', 'by', 'age', 'desc']",
    "question": "Show name, country, age for all singers ordered by age from the oldest to the youngest.",
    "question_th": "แสดงชื่อ ประเทศ อายุของนักร้องทุกคน เรียงตามอายุจากอายุมากที่สุดไปอายุน้อยที่สุด",
    "question_toks": "['Show', 'name', ',', 'country', ',', 'age', 'for', 'all', 'singers', 'ordered', 'by', 'age', 'from', 'the', 'oldest', 'to', 'the', 'youngest', '.']",
    "sql": "{'from': {'table_units': [['table_unit', 1]], 'conds': []}, 'select': [False, [[0, [0, [0, 9, False], None]], [0, [0, [0, 10, False], None]], [0, [0, [0, 13, False], None]]]], 'where': [], 'groupBy': [], 'having': [], 'orderBy': ['desc', [[0, [0, 13, False], None]]], 'limit': None, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "concert_singer",
    "query": "SELECT name ,  country ,  age FROM singer ORDER BY age DESC",
    "query_toks": "['SELECT', 'name', ',', 'country', ',', 'age', 'FROM', 'singer', 'ORDER', 'BY', 'age', 'DESC']",
    "query_toks_no_value": "['select', 'name', ',', 'country', ',', 'age', 'from', 'singer', 'order', 'by', 'age', 'desc']",
    "question": "What are the names, countries, and ages for every singer in descending order of age?",
    "question_th": "ชื่อ ประเทศ และอายุของนักร้องทุกคนเรียงตามอายุจากมากไปน้อยคืออะไร?",
    "question_toks": "['What', 'are', 'the', 'names', ',', 'countries', ',', 'and', 'ages', 'for', 'every', 'singer', 'in', 'descending', 'order', 'of', 'age', '?']",
    "sql": "{'from': {'table_units': [['table_unit', 1]], 'conds': []}, 'select': [False, [[0, [0, [0, 9, False], None]], [0, [0, [0, 10, False], None]], [0, [0, [0, 13, False], None]]]], 'where': [], 'groupBy': [], 'having': [], 'orderBy': ['desc', [[0, [0, 13, False], None]]], 'limit': None, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "concert_singer",
    "query": "SELECT avg(age) ,  min(age) ,  max(age) FROM singer WHERE country  =  'France'",
    "query_toks": "['SELECT', 'avg', '(', 'age', ')', ',', 'min', '(', 'age', ')', ',', 'max', '(', 'age', ')', 'FROM', 'singer', 'WHERE', 'country', '=', \"'France\", \"'\"]",
    "query_toks_no_value": "['select', 'avg', '(', 'age', ')', ',', 'min', '(', 'age', ')', ',', 'max', '(', 'age', ')', 'from', 'singer', 'where', 'country', '=', 'value']",
    "question": "What is the average, minimum, and maximum age of all singers from France?",
    "question_th": "อายุเฉลี่ย ขั้นต่ำ และสูงสุดของนักร้องทุกคนจากฝรั่งเศสคือเท่าใด",
    "question_toks": "['What', 'is', 'the', 'average', ',', 'minimum', ',', 'and', 'maximum', 'age', 'of', 'all', 'singers', 'from', 'France', '?']",
    "sql": "{'from': {'table_units': [['table_unit', 1]], 'conds': []}, 'select': [False, [[5, [0, [0, 13, False], None]], [2, [0, [0, 13, False], None]], [1, [0, [0, 13, False], None]]]], 'where': [[False, 2, [0, [0, 10, False], None], '\"France\"', None]], 'groupBy': [], 'having': [], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "concert_singer",
    "query": "SELECT avg(age) ,  min(age) ,  max(age) FROM singer WHERE country  =  'France'",
    "query_toks": "['SELECT', 'avg', '(', 'age', ')', ',', 'min', '(', 'age', ')', ',', 'max', '(', 'age', ')', 'FROM', 'singer', 'WHERE', 'country', '=', \"'France\", \"'\"]",
    "query_toks_no_value": "['select', 'avg', '(', 'age', ')', ',', 'min', '(', 'age', ')', ',', 'max', '(', 'age', ')', 'from', 'singer', 'where', 'country', '=', 'value']",
    "question": "What is the average, minimum, and maximum age for all French singers?",
    "question_th": "อายุเฉลี่ย ขั้นต่ำ และสูงสุดสำหรับนักร้องชาวฝรั่งเศสคือเท่าใด",
    "question_toks": "['What', 'is', 'the', 'average', ',', 'minimum', ',', 'and', 'maximum', 'age', 'for', 'all', 'French', 'singers', '?']",
    "sql": "{'from': {'table_units': [['table_unit', 1]], 'conds': []}, 'select': [False, [[5, [0, [0, 13, False], None]], [2, [0, [0, 13, False], None]], [1, [0, [0, 13, False], None]]]], 'where': [[False, 2, [0, [0, 10, False], None], '\"France\"', None]], 'groupBy': [], 'having': [], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "concert_singer",
    "query": "SELECT song_name ,  song_release_year FROM singer ORDER BY age LIMIT 1",
    "query_toks": "['SELECT', 'song_name', ',', 'song_release_year', 'FROM', 'singer', 'ORDER', 'BY', 'age', 'LIMIT', '1']",
    "query_toks_no_value": "['select', 'song_name', ',', 'song_release_year', 'from', 'singer', 'order', 'by', 'age', 'limit', 'value']",
    "question": "Show the name and the release year of the song by the youngest singer.",
    "question_th": "แสดงชื่อและปีที่ออกเพลงโดยนักร้องอายุน้อยที่สุด",
    "question_toks": "['Show', 'the', 'name', 'and', 'the', 'release', 'year', 'of', 'the', 'song', 'by', 'the', 'youngest', 'singer', '.']",
    "sql": "{'from': {'table_units': [['table_unit', 1]], 'conds': []}, 'select': [False, [[0, [0, [0, 11, False], None]], [0, [0, [0, 12, False], None]]]], 'where': [], 'groupBy': [], 'having': [], 'orderBy': ['asc', [[0, [0, 13, False], None]]], 'limit': 1, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "concert_singer",
    "query": "SELECT song_name ,  song_release_year FROM singer ORDER BY age LIMIT 1",
    "query_toks": "['SELECT', 'song_name', ',', 'song_release_year', 'FROM', 'singer', 'ORDER', 'BY', 'age', 'LIMIT', '1']",
    "query_toks_no_value": "['select', 'song_name', ',', 'song_release_year', 'from', 'singer', 'order', 'by', 'age', 'limit', 'value']",
    "question": "What are the names and release years for all the songs of the youngest singer?",
    "question_th": "ชื่อและปีที่วางจำหน่ายของเพลงทั้งหมดของนักร้องอายุน้อยที่สุดคืออะไร?",
    "question_toks": "['What', 'are', 'the', 'names', 'and', 'release', 'years', 'for', 'all', 'the', 'songs', 'of', 'the', 'youngest', 'singer', '?']",
    "sql": "{'from': {'table_units': [['table_unit', 1]], 'conds': []}, 'select': [False, [[0, [0, [0, 11, False], None]], [0, [0, [0, 12, False], None]]]], 'where': [], 'groupBy': [], 'having': [], 'orderBy': ['asc', [[0, [0, 13, False], None]]], 'limit': 1, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "concert_singer",
    "query": "SELECT DISTINCT country FROM singer WHERE age  >  20",
    "query_toks": "['SELECT', 'DISTINCT', 'country', 'FROM', 'singer', 'WHERE', 'age', '>', '20']",
    "query_toks_no_value": "['select', 'distinct', 'country', 'from', 'singer', 'where', 'age', '>', 'value']",
    "question": "What are all distinct countries where singers above age 20 are from?",
    "question_th": "นักร้องอายุ 20 ปีขึ้นไปมาจากประเทศใดบ้าง",
    "question_toks": "['What', 'are', 'all', 'distinct', 'countries', 'where', 'singers', 'above', 'age', '20', 'are', 'from', '?']",
    "sql": "{'from': {'table_units': [['table_unit', 1]], 'conds': []}, 'select': [True, [[0, [0, [0, 10, False], None]]]], 'where': [[False, 3, [0, [0, 13, False], None], 20.0, None]], 'groupBy': [], 'having': [], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "concert_singer",
    "query": "SELECT DISTINCT country FROM singer WHERE age  >  20",
    "query_toks": "['SELECT', 'DISTINCT', 'country', 'FROM', 'singer', 'WHERE', 'age', '>', '20']",
    "query_toks_no_value": "['select', 'distinct', 'country', 'from', 'singer', 'where', 'age', '>', 'value']",
    "question": "What are  the different countries with singers above age 20?",
    "question_th": "ประเทศใดบ้างที่มีนักร้องอายุมากกว่า 20 ปี?",
    "question_toks": "['What', 'are', 'the', 'different', 'countries', 'with', 'singers', 'above', 'age', '20', '?']",
    "sql": "{'from': {'table_units': [['table_unit', 1]], 'conds': []}, 'select': [True, [[0, [0, [0, 10, False], None]]]], 'where': [[False, 3, [0, [0, 13, False], None], 20.0, None]], 'groupBy': [], 'having': [], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "concert_singer",
    "query": "SELECT country ,  count(*) FROM singer GROUP BY country",
    "query_toks": "['SELECT', 'country', ',', 'count', '(', '*', ')', 'FROM', 'singer', 'GROUP', 'BY', 'country']",
    "query_toks_no_value": "['select', 'country', ',', 'count', '(', '*', ')', 'from', 'singer', 'group', 'by', 'country']",
    "question": "Show all countries and the number of singers in each country.",
    "question_th": "แสดงทุกประเทศและจำนวนนักร้องในแต่ละประเทศ",
    "question_toks": "['Show', 'all', 'countries', 'and', 'the', 'number', 'of', 'singers', 'in', 'each', 'country', '.']",
    "sql": "{'from': {'table_units': [['table_unit', 1]], 'conds': []}, 'select': [False, [[0, [0, [0, 10, False], None]], [3, [0, [0, 0, False], None]]]], 'where': [], 'groupBy': [[0, 10, False]], 'having': [], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "concert_singer",
    "query": "SELECT country ,  count(*) FROM singer GROUP BY country",
    "query_toks": "['SELECT', 'country', ',', 'count', '(', '*', ')', 'FROM', 'singer', 'GROUP', 'BY', 'country']",
    "query_toks_no_value": "['select', 'country', ',', 'count', '(', '*', ')', 'from', 'singer', 'group', 'by', 'country']",
    "question": "How many singers are from each country?",
    "question_th": "แต่ละประเทศมีนักร้องกี่คน?",
    "question_toks": "['How', 'many', 'singers', 'are', 'from', 'each', 'country', '?']",
    "sql": "{'from': {'table_units': [['table_unit', 1]], 'conds': []}, 'select': [False, [[0, [0, [0, 10, False], None]], [3, [0, [0, 0, False], None]]]], 'where': [], 'groupBy': [[0, 10, False]], 'having': [], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "concert_singer",
    "query": "SELECT song_name FROM singer WHERE age  >  (SELECT avg(age) FROM singer)",
    "query_toks": "['SELECT', 'song_name', 'FROM', 'singer', 'WHERE', 'age', '>', '(', 'SELECT', 'avg', '(', 'age', ')', 'FROM', 'singer', ')']",
    "query_toks_no_value": "['select', 'song_name', 'from', 'singer', 'where', 'age', '>', '(', 'select', 'avg', '(', 'age', ')', 'from', 'singer', ')']",
    "question": "List all song names by singers above the average age.",
    "question_th": "รายชื่อเพลงทั้งหมดโดยนักร้องที่อายุเกินเกณฑ์เฉลี่ย",
    "question_toks": "['List', 'all', 'song', 'names', 'by', 'singers', 'above', 'the', 'average', 'age', '.']",
    "sql": "{'from': {'table_units': [['table_unit', 1]], 'conds': []}, 'select': [False, [[0, [0, [0, 11, False], None]]]], 'where': [[False, 3, [0, [0, 13, False], None], {'from': {'table_units': [['table_unit', 1]], 'conds': []}, 'select': [False, [[5, [0, [0, 13, False], None]]]], 'where': [], 'groupBy': [], 'having': [], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}, None]], 'groupBy': [], 'having': [], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "concert_singer",
    "query": "SELECT song_name FROM singer WHERE age  >  (SELECT avg(age) FROM singer)",
    "query_toks": "['SELECT', 'song_name', 'FROM', 'singer', 'WHERE', 'age', '>', '(', 'SELECT', 'avg', '(', 'age', ')', 'FROM', 'singer', ')']",
    "query_toks_no_value": "['select', 'song_name', 'from', 'singer', 'where', 'age', '>', '(', 'select', 'avg', '(', 'age', ')', 'from', 'singer', ')']",
    "question": "What are all the song names by singers who are older than average?",
    "question_th": "ชื่อเพลงของนักร้องที่มีอายุมากกว่าค่าเฉลี่ยคืออะไร?",
    "question_toks": "['What', 'are', 'all', 'the', 'song', 'names', 'by', 'singers', 'who', 'are', 'older', 'than', 'average', '?']",
    "sql": "{'from': {'table_units': [['table_unit', 1]], 'conds': []}, 'select': [False, [[0, [0, [0, 11, False], None]]]], 'where': [[False, 3, [0, [0, 13, False], None], {'from': {'table_units': [['table_unit', 1]], 'conds': []}, 'select': [False, [[5, [0, [0, 13, False], None]]]], 'where': [], 'groupBy': [], 'having': [], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}, None]], 'groupBy': [], 'having': [], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "concert_singer",
    "query": "SELECT LOCATION ,  name FROM stadium WHERE capacity BETWEEN 5000 AND 10000",
    "query_toks": "['SELECT', 'LOCATION', ',', 'name', 'FROM', 'stadium', 'WHERE', 'capacity', 'BETWEEN', '5000', 'AND', '10000']",
    "query_toks_no_value": "['select', 'location', ',', 'name', 'from', 'stadium', 'where', 'capacity', 'between', 'value', 'and', 'value']",
    "question": "Show location and name for all stadiums with a capacity between 5000 and 10000.",
    "question_th": "แสดงที่ตั้งและชื่อสนามกีฬาทั้งหมดที่มีความจุระหว่าง 5,000 ถึง 10,000 ที่นั่ง",
    "question_toks": "['Show', 'location', 'and', 'name', 'for', 'all', 'stadiums', 'with', 'a', 'capacity', 'between', '5000', 'and', '10000', '.']",
    "sql": "{'from': {'table_units': [['table_unit', 0]], 'conds': []}, 'select': [False, [[0, [0, [0, 2, False], None]], [0, [0, [0, 3, False], None]]]], 'where': [[False, 1, [0, [0, 4, False], None], 5000.0, 10000.0]], 'groupBy': [], 'having': [], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "concert_singer",
    "query": "SELECT LOCATION ,  name FROM stadium WHERE capacity BETWEEN 5000 AND 10000",
    "query_toks": "['SELECT', 'LOCATION', ',', 'name', 'FROM', 'stadium', 'WHERE', 'capacity', 'BETWEEN', '5000', 'AND', '10000']",
    "query_toks_no_value": "['select', 'location', ',', 'name', 'from', 'stadium', 'where', 'capacity', 'between', 'value', 'and', 'value']",
    "question": "What are the locations and names of all stations with capacity between 5000 and 10000?",
    "question_th": "ที่ตั้งและชื่อของสถานีทั้งหมดที่มีความจุระหว่าง 5,000 ถึง 10,000 คือที่ใด",
    "question_toks": "['What', 'are', 'the', 'locations', 'and', 'names', 'of', 'all', 'stations', 'with', 'capacity', 'between', '5000', 'and', '10000', '?']",
    "sql": "{'from': {'table_units': [['table_unit', 0]], 'conds': []}, 'select': [False, [[0, [0, [0, 2, False], None]], [0, [0, [0, 3, False], None]]]], 'where': [[False, 1, [0, [0, 4, False], None], 5000.0, 10000.0]], 'groupBy': [], 'having': [], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "concert_singer",
    "query": "select max(capacity), average from stadium",
    "query_toks": "['select', 'max', '(', 'capacity', ')', ',', 'average', 'from', 'stadium']",
    "query_toks_no_value": "['select', 'max', '(', 'capacity', ')', ',', 'average', 'from', 'stadium']",
    "question": "What is the maximum capacity and the average of all stadiums ?",
    "question_th": "ความจุสูงสุดและค่าเฉลี่ยของสนามทั้งหมดคือเท่าใด ?",
    "question_toks": "['What', 'is', 'the', 'maximum', 'capacity', 'and', 'the', 'average', 'of', 'all', 'stadiums', '?']",
    "sql": "{'from': {'table_units': [['table_unit', 0]], 'conds': []}, 'select': [False, [[1, [0, [0, 4, False], None]], [0, [0, [0, 7, False], None]]]], 'where': [], 'groupBy': [], 'having': [], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "concert_singer",
    "query": "select avg(capacity) ,  max(capacity) from stadium",
    "query_toks": "['select', 'avg', '(', 'capacity', ')', ',', 'max', '(', 'capacity', ')', 'from', 'stadium']",
    "query_toks_no_value": "['select', 'avg', '(', 'capacity', ')', ',', 'max', '(', 'capacity', ')', 'from', 'stadium']",
    "question": "What is the average and maximum capacities for all stadiums ?",
    "question_th": "ความจุโดยเฉลี่ยและสูงสุดสำหรับสนามกีฬาทั้งหมดคือเท่าใด ?",
    "question_toks": "['What', 'is', 'the', 'average', 'and', 'maximum', 'capacities', 'for', 'all', 'stadiums', '?']",
    "sql": "{'from': {'table_units': [['table_unit', 0]], 'conds': []}, 'select': [False, [[5, [0, [0, 4, False], None]], [1, [0, [0, 4, False], None]]]], 'where': [], 'groupBy': [], 'having': [], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "concert_singer",
    "query": "SELECT name ,  capacity FROM stadium ORDER BY average DESC LIMIT 1",
    "query_toks": "['SELECT', 'name', ',', 'capacity', 'FROM', 'stadium', 'ORDER', 'BY', 'average', 'DESC', 'LIMIT', '1']",
    "query_toks_no_value": "['select', 'name', ',', 'capacity', 'from', 'stadium', 'order', 'by', 'average', 'desc', 'limit', 'value']",
    "question": "What is the name and capacity for the stadium with highest average attendance?",
    "question_th": "ชื่อและความจุของสนามกีฬาที่มีผู้เข้าชมเฉลี่ยสูงสุดคืออะไร?",
    "question_toks": "['What', 'is', 'the', 'name', 'and', 'capacity', 'for', 'the', 'stadium', 'with', 'highest', 'average', 'attendance', '?']",
    "sql": "{'from': {'table_units': [['table_unit', 0]], 'conds': []}, 'select': [False, [[0, [0, [0, 3, False], None]], [0, [0, [0, 4, False], None]]]], 'where': [], 'groupBy': [], 'having': [], 'orderBy': ['desc', [[0, [0, 7, False], None]]], 'limit': 1, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "concert_singer",
    "query": "SELECT name ,  capacity FROM stadium ORDER BY average DESC LIMIT 1",
    "query_toks": "['SELECT', 'name', ',', 'capacity', 'FROM', 'stadium', 'ORDER', 'BY', 'average', 'DESC', 'LIMIT', '1']",
    "query_toks_no_value": "['select', 'name', ',', 'capacity', 'from', 'stadium', 'order', 'by', 'average', 'desc', 'limit', 'value']",
    "question": "What is the name and capacity for the stadium with the highest average attendance?",
    "question_th": "ชื่อและความจุของสนามกีฬาที่มีผู้เข้าชมเฉลี่ยสูงสุดคือเท่าใด?",
    "question_toks": "['What', 'is', 'the', 'name', 'and', 'capacity', 'for', 'the', 'stadium', 'with', 'the', 'highest', 'average', 'attendance', '?']",
    "sql": "{'from': {'table_units': [['table_unit', 0]], 'conds': []}, 'select': [False, [[0, [0, [0, 3, False], None]], [0, [0, [0, 4, False], None]]]], 'where': [], 'groupBy': [], 'having': [], 'orderBy': ['desc', [[0, [0, 7, False], None]]], 'limit': 1, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "concert_singer",
    "query": "SELECT count(*) FROM concert WHERE YEAR  =  2014 OR YEAR  =  2015",
    "query_toks": "['SELECT', 'count', '(', '*', ')', 'FROM', 'concert', 'WHERE', 'YEAR', '=', '2014', 'OR', 'YEAR', '=', '2015']",
    "query_toks_no_value": "['select', 'count', '(', '*', ')', 'from', 'concert', 'where', 'year', '=', 'value', 'or', 'year', '=', 'value']",
    "question": "How many concerts are there in year 2014 or 2015?",
    "question_th": "ในปี 2557 หรือ 2558 มีคอนเสิร์ตกี่ครั้ง?",
    "question_toks": "['How', 'many', 'concerts', 'are', 'there', 'in', 'year', '2014', 'or', '2015', '?']",
    "sql": "{'from': {'table_units': [['table_unit', 2]], 'conds': []}, 'select': [False, [[3, [0, [0, 0, False], None]]]], 'where': [[False, 2, [0, [0, 19, False], None], 2014.0, None], 'or', [False, 2, [0, [0, 19, False], None], 2015.0, None]], 'groupBy': [], 'having': [], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "concert_singer",
    "query": "SELECT count(*) FROM concert WHERE YEAR  =  2014 OR YEAR  =  2015",
    "query_toks": "['SELECT', 'count', '(', '*', ')', 'FROM', 'concert', 'WHERE', 'YEAR', '=', '2014', 'OR', 'YEAR', '=', '2015']",
    "query_toks_no_value": "['select', 'count', '(', '*', ')', 'from', 'concert', 'where', 'year', '=', 'value', 'or', 'year', '=', 'value']",
    "question": "How many concerts occurred in 2014 or 2015?",
    "question_th": "มีคอนเสิร์ตกี่ครั้งในปี 2014 หรือ 2015?",
    "question_toks": "['How', 'many', 'concerts', 'occurred', 'in', '2014', 'or', '2015', '?']",
    "sql": "{'from': {'table_units': [['table_unit', 2]], 'conds': []}, 'select': [False, [[3, [0, [0, 0, False], None]]]], 'where': [[False, 2, [0, [0, 19, False], None], 2014.0, None], 'or', [False, 2, [0, [0, 19, False], None], 2015.0, None]], 'groupBy': [], 'having': [], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "concert_singer",
    "query": "SELECT T2.name ,  count(*) FROM concert AS T1 JOIN stadium AS T2 ON T1.stadium_id  =  T2.stadium_id GROUP BY T1.stadium_id",
    "query_toks": "['SELECT', 'T2.name', ',', 'count', '(', '*', ')', 'FROM', 'concert', 'AS', 'T1', 'JOIN', 'stadium', 'AS', 'T2', 'ON', 'T1.stadium_id', '=', 'T2.stadium_id', 'GROUP', 'BY', 'T1.stadium_id']",
    "query_toks_no_value": "['select', 't2', '.', 'name', ',', 'count', '(', '*', ')', 'from', 'concert', 'as', 't1', 'join', 'stadium', 'as', 't2', 'on', 't1', '.', 'stadium_id', '=', 't2', '.', 'stadium_id', 'group', 'by', 't1', '.', 'stadium_id']",
    "question": "Show the stadium name and the number of concerts in each stadium.",
    "question_th": "แสดงชื่อสนามและจำนวนคอนเสิร์ตในแต่ละสนาม",
    "question_toks": "['Show', 'the', 'stadium', 'name', 'and', 'the', 'number', 'of', 'concerts', 'in', 'each', 'stadium', '.']",
    "sql": "{'from': {'table_units': [['table_unit', 2], ['table_unit', 0]], 'conds': [[False, 2, [0, [0, 18, False], None], [0, 1, False], None]]}, 'select': [False, [[0, [0, [0, 3, False], None]], [3, [0, [0, 0, False], None]]]], 'where': [], 'groupBy': [[0, 18, False]], 'having': [], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "concert_singer",
    "query": "SELECT T2.name ,  count(*) FROM concert AS T1 JOIN stadium AS T2 ON T1.stadium_id  =  T2.stadium_id GROUP BY T1.stadium_id",
    "query_toks": "['SELECT', 'T2.name', ',', 'count', '(', '*', ')', 'FROM', 'concert', 'AS', 'T1', 'JOIN', 'stadium', 'AS', 'T2', 'ON', 'T1.stadium_id', '=', 'T2.stadium_id', 'GROUP', 'BY', 'T1.stadium_id']",
    "query_toks_no_value": "['select', 't2', '.', 'name', ',', 'count', '(', '*', ')', 'from', 'concert', 'as', 't1', 'join', 'stadium', 'as', 't2', 'on', 't1', '.', 'stadium_id', '=', 't2', '.', 'stadium_id', 'group', 'by', 't1', '.', 'stadium_id']",
    "question": "For each stadium, how many concerts play there?",
    "question_th": "แต่ละสนามมีคอนเสิร์ตกี่รอบ?",
    "question_toks": "['For', 'each', 'stadium', ',', 'how', 'many', 'concerts', 'play', 'there', '?']",
    "sql": "{'from': {'table_units': [['table_unit', 2], ['table_unit', 0]], 'conds': [[False, 2, [0, [0, 18, False], None], [0, 1, False], None]]}, 'select': [False, [[0, [0, [0, 3, False], None]], [3, [0, [0, 0, False], None]]]], 'where': [], 'groupBy': [[0, 18, False]], 'having': [], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "concert_singer",
    "query": "SELECT T2.name ,  T2.capacity FROM concert AS T1 JOIN stadium AS T2 ON T1.stadium_id  =  T2.stadium_id WHERE T1.year  >=  2014 GROUP BY T2.stadium_id ORDER BY count(*) DESC LIMIT 1",
    "query_toks": "['SELECT', 'T2.name', ',', 'T2.capacity', 'FROM', 'concert', 'AS', 'T1', 'JOIN', 'stadium', 'AS', 'T2', 'ON', 'T1.stadium_id', '=', 'T2.stadium_id', 'WHERE', 'T1.year', '>', '=', '2014', 'GROUP', 'BY', 'T2.stadium_id', 'ORDER', 'BY', 'count', '(', '*', ')', 'DESC', 'LIMIT', '1']",
    "query_toks_no_value": "['select', 't2', '.', 'name', ',', 't2', '.', 'capacity', 'from', 'concert', 'as', 't1', 'join', 'stadium', 'as', 't2', 'on', 't1', '.', 'stadium_id', '=', 't2', '.', 'stadium_id', 'where', 't1', '.', 'year', '>', '=', 'value', 'group', 'by', 't2', '.', 'stadium_id', 'order', 'by', 'count', '(', '*', ')', 'desc', 'limit', 'value']",
    "question": "Show the stadium name and capacity with most number of concerts in year 2014 or after.",
    "question_th": "แสดงชื่อสนามกีฬาและความจุที่มีจำนวนคอนเสิร์ตมากที่สุดในปี 2557 เป็นต้นไป",
    "question_toks": "['Show', 'the', 'stadium', 'name', 'and', 'capacity', 'with', 'most', 'number', 'of', 'concerts', 'in', 'year', '2014', 'or', 'after', '.']",
    "sql": "{'from': {'table_units': [['table_unit', 2], ['table_unit', 0]], 'conds': [[False, 2, [0, [0, 18, False], None], [0, 1, False], None]]}, 'select': [False, [[0, [0, [0, 3, False], None]], [0, [0, [0, 4, False], None]]]], 'where': [[False, 5, [0, [0, 19, False], None], 2014.0, None]], 'groupBy': [[0, 1, False]], 'having': [], 'orderBy': ['desc', [[0, [3, 0, False], None]]], 'limit': 1, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "concert_singer",
    "query": "select t2.name ,  t2.capacity from concert as t1 join stadium as t2 on t1.stadium_id  =  t2.stadium_id where t1.year  >  2013 group by t2.stadium_id order by count(*) desc limit 1",
    "query_toks": "['select', 't2.name', ',', 't2.capacity', 'from', 'concert', 'as', 't1', 'join', 'stadium', 'as', 't2', 'on', 't1.stadium_id', '=', 't2.stadium_id', 'where', 't1.year', '>', '2013', 'group', 'by', 't2.stadium_id', 'order', 'by', 'count', '(', '*', ')', 'desc', 'limit', '1']",
    "query_toks_no_value": "['select', 't2', '.', 'name', ',', 't2', '.', 'capacity', 'from', 'concert', 'as', 't1', 'join', 'stadium', 'as', 't2', 'on', 't1', '.', 'stadium_id', '=', 't2', '.', 'stadium_id', 'where', 't1', '.', 'year', '>', 'value', 'group', 'by', 't2', '.', 'stadium_id', 'order', 'by', 'count', '(', '*', ')', 'desc', 'limit', 'value']",
    "question": "What is the name and capacity of the stadium with the most concerts after 2013 ?",
    "question_th": "ชื่อและความจุของสนามกีฬาที่มีคอนเสิร์ตมากที่สุดหลังปี 2013 คืออะไร?",
    "question_toks": "['What', 'is', 'the', 'name', 'and', 'capacity', 'of', 'the', 'stadium', 'with', 'the', 'most', 'concerts', 'after', '2013', '?']",
    "sql": "{'from': {'table_units': [['table_unit', 2], ['table_unit', 0]], 'conds': [[False, 2, [0, [0, 18, False], None], [0, 1, False], None]]}, 'select': [False, [[0, [0, [0, 3, False], None]], [0, [0, [0, 4, False], None]]]], 'where': [[False, 3, [0, [0, 19, False], None], 2013.0, None]], 'groupBy': [[0, 1, False]], 'having': [], 'orderBy': ['desc', [[0, [3, 0, False], None]]], 'limit': 1, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "concert_singer",
    "query": "SELECT YEAR FROM concert GROUP BY YEAR ORDER BY count(*) DESC LIMIT 1",
    "query_toks": "['SELECT', 'YEAR', 'FROM', 'concert', 'GROUP', 'BY', 'YEAR', 'ORDER', 'BY', 'count', '(', '*', ')', 'DESC', 'LIMIT', '1']",
    "query_toks_no_value": "['select', 'year', 'from', 'concert', 'group', 'by', 'year', 'order', 'by', 'count', '(', '*', ')', 'desc', 'limit', 'value']",
    "question": "Which year has most number of concerts?",
    "question_th": "ปีไหนมีคอนเสิร์ตมากที่สุด?",
    "question_toks": "['Which', 'year', 'has', 'most', 'number', 'of', 'concerts', '?']",
    "sql": "{'from': {'table_units': [['table_unit', 2]], 'conds': []}, 'select': [False, [[0, [0, [0, 19, False], None]]]], 'where': [], 'groupBy': [[0, 19, False]], 'having': [], 'orderBy': ['desc', [[0, [3, 0, False], None]]], 'limit': 1, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "concert_singer",
    "query": "SELECT YEAR FROM concert GROUP BY YEAR ORDER BY count(*) DESC LIMIT 1",
    "query_toks": "['SELECT', 'YEAR', 'FROM', 'concert', 'GROUP', 'BY', 'YEAR', 'ORDER', 'BY', 'count', '(', '*', ')', 'DESC', 'LIMIT', '1']",
    "query_toks_no_value": "['select', 'year', 'from', 'concert', 'group', 'by', 'year', 'order', 'by', 'count', '(', '*', ')', 'desc', 'limit', 'value']",
    "question": "What is the year that had the most concerts?",
    "question_th": "ปีไหนมีคอนเสิร์ตมากที่สุด?",
    "question_toks": "['What', 'is', 'the', 'year', 'that', 'had', 'the', 'most', 'concerts', '?']",
    "sql": "{'from': {'table_units': [['table_unit', 2]], 'conds': []}, 'select': [False, [[0, [0, [0, 19, False], None]]]], 'where': [], 'groupBy': [[0, 19, False]], 'having': [], 'orderBy': ['desc', [[0, [3, 0, False], None]]], 'limit': 1, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "concert_singer",
    "query": "SELECT name FROM stadium WHERE stadium_id NOT IN (SELECT stadium_id FROM concert)",
    "query_toks": "['SELECT', 'name', 'FROM', 'stadium', 'WHERE', 'stadium_id', 'NOT', 'IN', '(', 'SELECT', 'stadium_id', 'FROM', 'concert', ')']",
    "query_toks_no_value": "['select', 'name', 'from', 'stadium', 'where', 'stadium_id', 'not', 'in', '(', 'select', 'stadium_id', 'from', 'concert', ')']",
    "question": "Show the stadium names without any concert.",
    "question_th": "แสดงชื่อสนามโดยไม่มีคอนเสิร์ตใดๆ",
    "question_toks": "['Show', 'the', 'stadium', 'names', 'without', 'any', 'concert', '.']",
    "sql": "{'from': {'table_units': [['table_unit', 0]], 'conds': []}, 'select': [False, [[0, [0, [0, 3, False], None]]]], 'where': [[True, 8, [0, [0, 1, False], None], {'from': {'table_units': [['table_unit', 2]], 'conds': []}, 'select': [False, [[0, [0, [0, 18, False], None]]]], 'where': [], 'groupBy': [], 'having': [], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}, None]], 'groupBy': [], 'having': [], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "concert_singer",
    "query": "SELECT name FROM stadium WHERE stadium_id NOT IN (SELECT stadium_id FROM concert)",
    "query_toks": "['SELECT', 'name', 'FROM', 'stadium', 'WHERE', 'stadium_id', 'NOT', 'IN', '(', 'SELECT', 'stadium_id', 'FROM', 'concert', ')']",
    "query_toks_no_value": "['select', 'name', 'from', 'stadium', 'where', 'stadium_id', 'not', 'in', '(', 'select', 'stadium_id', 'from', 'concert', ')']",
    "question": "What are the names of the stadiums without any concerts?",
    "question_th": "สนามกีฬาที่ไม่มีคอนเสิร์ตชื่ออะไร?",
    "question_toks": "['What', 'are', 'the', 'names', 'of', 'the', 'stadiums', 'without', 'any', 'concerts', '?']",
    "sql": "{'from': {'table_units': [['table_unit', 0]], 'conds': []}, 'select': [False, [[0, [0, [0, 3, False], None]]]], 'where': [[True, 8, [0, [0, 1, False], None], {'from': {'table_units': [['table_unit', 2]], 'conds': []}, 'select': [False, [[0, [0, [0, 18, False], None]]]], 'where': [], 'groupBy': [], 'having': [], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}, None]], 'groupBy': [], 'having': [], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "concert_singer",
    "query": "SELECT country FROM singer WHERE age  >  40 INTERSECT SELECT country FROM singer WHERE age  <  30",
    "query_toks": "['SELECT', 'country', 'FROM', 'singer', 'WHERE', 'age', '>', '40', 'INTERSECT', 'SELECT', 'country', 'FROM', 'singer', 'WHERE', 'age', '<', '30']",
    "query_toks_no_value": "['select', 'country', 'from', 'singer', 'where', 'age', '>', 'value', 'intersect', 'select', 'country', 'from', 'singer', 'where', 'age', '<', 'value']",
    "question": "Show countries where a singer above age 40 and a singer below 30 are from.",
    "question_th": "แสดงประเทศที่มีนักร้องอายุมากกว่า 40 ปี และนักร้องอายุต่ำกว่า 30 ปี มาจาก",
    "question_toks": "['Show', 'countries', 'where', 'a', 'singer', 'above', 'age', '40', 'and', 'a', 'singer', 'below', '30', 'are', 'from', '.']",
    "sql": "{'from': {'table_units': [['table_unit', 1]], 'conds': []}, 'select': [False, [[0, [0, [0, 10, False], None]]]], 'where': [[False, 3, [0, [0, 13, False], None], 40.0, None]], 'groupBy': [], 'having': [], 'orderBy': [], 'limit': None, 'intersect': {'from': {'table_units': [['table_unit', 1]], 'conds': []}, 'select': [False, [[0, [0, [0, 10, False], None]]]], 'where': [[False, 4, [0, [0, 13, False], None], 30.0, None]], 'groupBy': [], 'having': [], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}, 'union': None, 'except': None}"
  },
  {
    "db_id": "concert_singer",
    "query": "SELECT name FROM stadium EXCEPT SELECT T2.name FROM concert AS T1 JOIN stadium AS T2 ON T1.stadium_id  =  T2.stadium_id WHERE T1.year  =  2014",
    "query_toks": "['SELECT', 'name', 'FROM', 'stadium', 'EXCEPT', 'SELECT', 'T2.name', 'FROM', 'concert', 'AS', 'T1', 'JOIN', 'stadium', 'AS', 'T2', 'ON', 'T1.stadium_id', '=', 'T2.stadium_id', 'WHERE', 'T1.year', '=', '2014']",
    "query_toks_no_value": "['select', 'name', 'from', 'stadium', 'except', 'select', 't2', '.', 'name', 'from', 'concert', 'as', 't1', 'join', 'stadium', 'as', 't2', 'on', 't1', '.', 'stadium_id', '=', 't2', '.', 'stadium_id', 'where', 't1', '.', 'year', '=', 'value']",
    "question": "Show names for all stadiums except for stadiums having a concert in year 2014.",
    "question_th": "แสดงชื่อสนามกีฬาทุกแห่ง ยกเว้นสนามกีฬาที่มีการจัดคอนเสิร์ตในปี 2557",
    "question_toks": "['Show', 'names', 'for', 'all', 'stadiums', 'except', 'for', 'stadiums', 'having', 'a', 'concert', 'in', 'year', '2014', '.']",
    "sql": "{'from': {'table_units': [['table_unit', 0]], 'conds': []}, 'select': [False, [[0, [0, [0, 3, False], None]]]], 'where': [], 'groupBy': [], 'having': [], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': {'from': {'table_units': [['table_unit', 2], ['table_unit', 0]], 'conds': [[False, 2, [0, [0, 18, False], None], [0, 1, False], None]]}, 'select': [False, [[0, [0, [0, 3, False], None]]]], 'where': [[False, 2, [0, [0, 19, False], None], 2014.0, None]], 'groupBy': [], 'having': [], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}}"
  },
  {
    "db_id": "concert_singer",
    "query": "SELECT name FROM stadium EXCEPT SELECT T2.name FROM concert AS T1 JOIN stadium AS T2 ON T1.stadium_id  =  T2.stadium_id WHERE T1.year  =  2014",
    "query_toks": "['SELECT', 'name', 'FROM', 'stadium', 'EXCEPT', 'SELECT', 'T2.name', 'FROM', 'concert', 'AS', 'T1', 'JOIN', 'stadium', 'AS', 'T2', 'ON', 'T1.stadium_id', '=', 'T2.stadium_id', 'WHERE', 'T1.year', '=', '2014']",
    "query_toks_no_value": "['select', 'name', 'from', 'stadium', 'except', 'select', 't2', '.', 'name', 'from', 'concert', 'as', 't1', 'join', 'stadium', 'as', 't2', 'on', 't1', '.', 'stadium_id', '=', 't2', '.', 'stadium_id', 'where', 't1', '.', 'year', '=', 'value']",
    "question": "What are the names of all stadiums that did not have a concert in 2014?",
    "question_th": "สนามกีฬาทั้งหมดที่ไม่มีคอนเสิร์ตในปี 2014 ชื่ออะไร",
    "question_toks": "['What', 'are', 'the', 'names', 'of', 'all', 'stadiums', 'that', 'did', 'not', 'have', 'a', 'concert', 'in', '2014', '?']",
    "sql": "{'from': {'table_units': [['table_unit', 0]], 'conds': []}, 'select': [False, [[0, [0, [0, 3, False], None]]]], 'where': [], 'groupBy': [], 'having': [], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': {'from': {'table_units': [['table_unit', 2], ['table_unit', 0]], 'conds': [[False, 2, [0, [0, 18, False], None], [0, 1, False], None]]}, 'select': [False, [[0, [0, [0, 3, False], None]]]], 'where': [[False, 2, [0, [0, 19, False], None], 2014.0, None]], 'groupBy': [], 'having': [], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}}"
  },
  {
    "db_id": "concert_singer",
    "query": "SELECT T2.concert_name ,  T2.theme ,  count(*) FROM singer_in_concert AS T1 JOIN concert AS T2 ON T1.concert_id  =  T2.concert_id GROUP BY T2.concert_id",
    "query_toks": "['SELECT', 'T2.concert_name', ',', 'T2.theme', ',', 'count', '(', '*', ')', 'FROM', 'singer_in_concert', 'AS', 'T1', 'JOIN', 'concert', 'AS', 'T2', 'ON', 'T1.concert_id', '=', 'T2.concert_id', 'GROUP', 'BY', 'T2.concert_id']",
    "query_toks_no_value": "['select', 't2', '.', 'concert_name', ',', 't2', '.', 'theme', ',', 'count', '(', '*', ')', 'from', 'singer_in_concert', 'as', 't1', 'join', 'concert', 'as', 't2', 'on', 't1', '.', 'concert_id', '=', 't2', '.', 'concert_id', 'group', 'by', 't2', '.', 'concert_id']",
    "question": "Show the name and theme for all concerts and the number of singers in each concert.",
    "question_th": "แสดงชื่อและธีมคอนเสิร์ตทั้งหมด และจำนวนนักร้องในแต่ละคอนเสิร์ต",
    "question_toks": "['Show', 'the', 'name', 'and', 'theme', 'for', 'all', 'concerts', 'and', 'the', 'number', 'of', 'singers', 'in', 'each', 'concert', '.']",
    "sql": "{'from': {'table_units': [['table_unit', 3], ['table_unit', 2]], 'conds': [[False, 2, [0, [0, 20, False], None], [0, 15, False], None]]}, 'select': [False, [[0, [0, [0, 16, False], None]], [0, [0, [0, 17, False], None]], [3, [0, [0, 0, False], None]]]], 'where': [], 'groupBy': [[0, 15, False]], 'having': [], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "concert_singer",
    "query": "select t2.concert_name ,  t2.theme ,  count(*) from singer_in_concert as t1 join concert as t2 on t1.concert_id  =  t2.concert_id group by t2.concert_id",
    "query_toks": "['select', 't2.concert_name', ',', 't2.theme', ',', 'count', '(', '*', ')', 'from', 'singer_in_concert', 'as', 't1', 'join', 'concert', 'as', 't2', 'on', 't1.concert_id', '=', 't2.concert_id', 'group', 'by', 't2.concert_id']",
    "query_toks_no_value": "['select', 't2', '.', 'concert_name', ',', 't2', '.', 'theme', ',', 'count', '(', '*', ')', 'from', 'singer_in_concert', 'as', 't1', 'join', 'concert', 'as', 't2', 'on', 't1', '.', 'concert_id', '=', 't2', '.', 'concert_id', 'group', 'by', 't2', '.', 'concert_id']",
    "question": "What are the names , themes , and number of singers for every concert ?",
    "question_th": "ชื่อ ธีม และจำนวนนักร้องในแต่ละคอนเสิร์ตมีอะไรบ้าง?",
    "question_toks": "['What', 'are', 'the', 'names', ',', 'themes', ',', 'and', 'number', 'of', 'singers', 'for', 'every', 'concert', '?']",
    "sql": "{'from': {'table_units': [['table_unit', 3], ['table_unit', 2]], 'conds': [[False, 2, [0, [0, 20, False], None], [0, 15, False], None]]}, 'select': [False, [[0, [0, [0, 16, False], None]], [0, [0, [0, 17, False], None]], [3, [0, [0, 0, False], None]]]], 'where': [], 'groupBy': [[0, 15, False]], 'having': [], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "concert_singer",
    "query": "SELECT T2.name ,  count(*) FROM singer_in_concert AS T1 JOIN singer AS T2 ON T1.singer_id  =  T2.singer_id GROUP BY T2.singer_id",
    "query_toks": "['SELECT', 'T2.name', ',', 'count', '(', '*', ')', 'FROM', 'singer_in_concert', 'AS', 'T1', 'JOIN', 'singer', 'AS', 'T2', 'ON', 'T1.singer_id', '=', 'T2.singer_id', 'GROUP', 'BY', 'T2.singer_id']",
    "query_toks_no_value": "['select', 't2', '.', 'name', ',', 'count', '(', '*', ')', 'from', 'singer_in_concert', 'as', 't1', 'join', 'singer', 'as', 't2', 'on', 't1', '.', 'singer_id', '=', 't2', '.', 'singer_id', 'group', 'by', 't2', '.', 'singer_id']",
    "question": "List singer names and number of concerts for each singer.",
    "question_th": "รายชื่อนักร้องและจำนวนคอนเสิร์ตของนักร้องแต่ละคน",
    "question_toks": "['List', 'singer', 'names', 'and', 'number', 'of', 'concerts', 'for', 'each', 'singer', '.']",
    "sql": "{'from': {'table_units': [['table_unit', 3], ['table_unit', 1]], 'conds': [[False, 2, [0, [0, 21, False], None], [0, 8, False], None]]}, 'select': [False, [[0, [0, [0, 9, False], None]], [3, [0, [0, 0, False], None]]]], 'where': [], 'groupBy': [[0, 8, False]], 'having': [], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "concert_singer",
    "query": "SELECT T2.name ,  count(*) FROM singer_in_concert AS T1 JOIN singer AS T2 ON T1.singer_id  =  T2.singer_id GROUP BY T2.singer_id",
    "query_toks": "['SELECT', 'T2.name', ',', 'count', '(', '*', ')', 'FROM', 'singer_in_concert', 'AS', 'T1', 'JOIN', 'singer', 'AS', 'T2', 'ON', 'T1.singer_id', '=', 'T2.singer_id', 'GROUP', 'BY', 'T2.singer_id']",
    "query_toks_no_value": "['select', 't2', '.', 'name', ',', 'count', '(', '*', ')', 'from', 'singer_in_concert', 'as', 't1', 'join', 'singer', 'as', 't2', 'on', 't1', '.', 'singer_id', '=', 't2', '.', 'singer_id', 'group', 'by', 't2', '.', 'singer_id']",
    "question": "What are the names of the singers and number of concerts for each person?",
    "question_th": "นักร้องชื่ออะไร และจำนวนคอนเสิร์ตของแต่ละคนมีอะไรบ้าง?",
    "question_toks": "['What', 'are', 'the', 'names', 'of', 'the', 'singers', 'and', 'number', 'of', 'concerts', 'for', 'each', 'person', '?']",
    "sql": "{'from': {'table_units': [['table_unit', 3], ['table_unit', 1]], 'conds': [[False, 2, [0, [0, 21, False], None], [0, 8, False], None]]}, 'select': [False, [[0, [0, [0, 9, False], None]], [3, [0, [0, 0, False], None]]]], 'where': [], 'groupBy': [[0, 8, False]], 'having': [], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "concert_singer",
    "query": "SELECT T2.name FROM singer_in_concert AS T1 JOIN singer AS T2 ON T1.singer_id  =  T2.singer_id JOIN concert AS T3 ON T1.concert_id  =  T3.concert_id WHERE T3.year  =  2014",
    "query_toks": "['SELECT', 'T2.name', 'FROM', 'singer_in_concert', 'AS', 'T1', 'JOIN', 'singer', 'AS', 'T2', 'ON', 'T1.singer_id', '=', 'T2.singer_id', 'JOIN', 'concert', 'AS', 'T3', 'ON', 'T1.concert_id', '=', 'T3.concert_id', 'WHERE', 'T3.year', '=', '2014']",
    "query_toks_no_value": "['select', 't2', '.', 'name', 'from', 'singer_in_concert', 'as', 't1', 'join', 'singer', 'as', 't2', 'on', 't1', '.', 'singer_id', '=', 't2', '.', 'singer_id', 'join', 'concert', 'as', 't3', 'on', 't1', '.', 'concert_id', '=', 't3', '.', 'concert_id', 'where', 't3', '.', 'year', '=', 'value']",
    "question": "List all singer names in concerts in year 2014.",
    "question_th": "รายชื่อนักร้องทั้งหมดในคอนเสิร์ตปี 2557",
    "question_toks": "['List', 'all', 'singer', 'names', 'in', 'concerts', 'in', 'year', '2014', '.']",
    "sql": "{'from': {'table_units': [['table_unit', 3], ['table_unit', 1], ['table_unit', 2]], 'conds': [[False, 2, [0, [0, 21, False], None], [0, 8, False], None], 'and', [False, 2, [0, [0, 20, False], None], [0, 15, False], None]]}, 'select': [False, [[0, [0, [0, 9, False], None]]]], 'where': [[False, 2, [0, [0, 19, False], None], 2014.0, None]], 'groupBy': [], 'having': [], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "concert_singer",
    "query": "SELECT T2.name FROM singer_in_concert AS T1 JOIN singer AS T2 ON T1.singer_id  =  T2.singer_id JOIN concert AS T3 ON T1.concert_id  =  T3.concert_id WHERE T3.year  =  2014",
    "query_toks": "['SELECT', 'T2.name', 'FROM', 'singer_in_concert', 'AS', 'T1', 'JOIN', 'singer', 'AS', 'T2', 'ON', 'T1.singer_id', '=', 'T2.singer_id', 'JOIN', 'concert', 'AS', 'T3', 'ON', 'T1.concert_id', '=', 'T3.concert_id', 'WHERE', 'T3.year', '=', '2014']",
    "query_toks_no_value": "['select', 't2', '.', 'name', 'from', 'singer_in_concert', 'as', 't1', 'join', 'singer', 'as', 't2', 'on', 't1', '.', 'singer_id', '=', 't2', '.', 'singer_id', 'join', 'concert', 'as', 't3', 'on', 't1', '.', 'concert_id', '=', 't3', '.', 'concert_id', 'where', 't3', '.', 'year', '=', 'value']",
    "question": "What are the names of the singers who performed in a concert in 2014?",
    "question_th": "นักร้องที่แสดงในคอนเสิร์ตในปี 2557 ชื่ออะไร?",
    "question_toks": "['What', 'are', 'the', 'names', 'of', 'the', 'singers', 'who', 'performed', 'in', 'a', 'concert', 'in', '2014', '?']",
    "sql": "{'from': {'table_units': [['table_unit', 3], ['table_unit', 1], ['table_unit', 2]], 'conds': [[False, 2, [0, [0, 21, False], None], [0, 8, False], None], 'and', [False, 2, [0, [0, 20, False], None], [0, 15, False], None]]}, 'select': [False, [[0, [0, [0, 9, False], None]]]], 'where': [[False, 2, [0, [0, 19, False], None], 2014.0, None]], 'groupBy': [], 'having': [], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "concert_singer",
    "query": "SELECT name ,  country FROM singer WHERE song_name LIKE '%Hey%'",
    "query_toks": "['SELECT', 'name', ',', 'country', 'FROM', 'singer', 'WHERE', 'song_name', 'LIKE', \"'\", '%', 'Hey', '%', \"'\"]",
    "query_toks_no_value": "['select', 'name', ',', 'country', 'from', 'singer', 'where', 'song_name', 'like', 'value']",
    "question": "what is the name and nation of the singer who have a song having 'Hey' in its name?",
    "question_th": "ชื่อและสัญชาติของนักร้องที่มีเพลงว่า 'เฮ้' อยู่ในชื่ออะไร?",
    "question_toks": "['what', 'is', 'the', 'name', 'and', 'nation', 'of', 'the', 'singer', 'who', 'have', 'a', 'song', 'having', \"'Hey\", \"'\", 'in', 'its', 'name', '?']",
    "sql": "{'from': {'table_units': [['table_unit', 1]], 'conds': []}, 'select': [False, [[0, [0, [0, 9, False], None]], [0, [0, [0, 10, False], None]]]], 'where': [[False, 9, [0, [0, 11, False], None], '\"%Hey%\"', None]], 'groupBy': [], 'having': [], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "concert_singer",
    "query": "SELECT name ,  country FROM singer WHERE song_name LIKE '%Hey%'",
    "query_toks": "['SELECT', 'name', ',', 'country', 'FROM', 'singer', 'WHERE', 'song_name', 'LIKE', \"'\", '%', 'Hey', '%', \"'\"]",
    "query_toks_no_value": "['select', 'name', ',', 'country', 'from', 'singer', 'where', 'song_name', 'like', 'value']",
    "question": "What is the name and country of origin of every singer who has a song with the word 'Hey' in its title?",
    "question_th": "ชื่อและประเทศต้นกำเนิดของนักร้องทุกคนที่มีเพลงที่มีคำว่า 'เฮ้' อยู่ในชื่อคืออะไร?",
    "question_toks": "['What', 'is', 'the', 'name', 'and', 'country', 'of', 'origin', 'of', 'every', 'singer', 'who', 'has', 'a', 'song', 'with', 'the', 'word', \"'Hey\", \"'\", 'in', 'its', 'title', '?']",
    "sql": "{'from': {'table_units': [['table_unit', 1]], 'conds': []}, 'select': [False, [[0, [0, [0, 9, False], None]], [0, [0, [0, 10, False], None]]]], 'where': [[False, 9, [0, [0, 11, False], None], '\"%Hey%\"', None]], 'groupBy': [], 'having': [], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "concert_singer",
    "query": "SELECT T2.name ,  T2.location FROM concert AS T1 JOIN stadium AS T2 ON T1.stadium_id  =  T2.stadium_id WHERE T1.Year  =  2014 INTERSECT SELECT T2.name ,  T2.location FROM concert AS T1 JOIN stadium AS T2 ON T1.stadium_id  =  T2.stadium_id WHERE T1.Year  =  2015",
    "query_toks": "['SELECT', 'T2.name', ',', 'T2.location', 'FROM', 'concert', 'AS', 'T1', 'JOIN', 'stadium', 'AS', 'T2', 'ON', 'T1.stadium_id', '=', 'T2.stadium_id', 'WHERE', 'T1.Year', '=', '2014', 'INTERSECT', 'SELECT', 'T2.name', ',', 'T2.location', 'FROM', 'concert', 'AS', 'T1', 'JOIN', 'stadium', 'AS', 'T2', 'ON', 'T1.stadium_id', '=', 'T2.stadium_id', 'WHERE', 'T1.Year', '=', '2015']",
    "query_toks_no_value": "['select', 't2', '.', 'name', ',', 't2', '.', 'location', 'from', 'concert', 'as', 't1', 'join', 'stadium', 'as', 't2', 'on', 't1', '.', 'stadium_id', '=', 't2', '.', 'stadium_id', 'where', 't1', '.', 'year', '=', 'value', 'intersect', 'select', 't2', '.', 'name', ',', 't2', '.', 'location', 'from', 'concert', 'as', 't1', 'join', 'stadium', 'as', 't2', 'on', 't1', '.', 'stadium_id', '=', 't2', '.', 'stadium_id', 'where', 't1', '.', 'year', '=', 'value']",
    "question": "Find the name and location of the stadiums which some concerts happened in the years of both 2014 and 2015.",
    "question_th": "ค้นหาชื่อและที่ตั้งของสนามกีฬาที่มีคอนเสิร์ตบางแห่งเกิดขึ้นในปี 2014 และ 2015",
    "question_toks": "['Find', 'the', 'name', 'and', 'location', 'of', 'the', 'stadiums', 'which', 'some', 'concerts', 'happened', 'in', 'the', 'years', 'of', 'both', '2014', 'and', '2015', '.']",
    "sql": "{'from': {'table_units': [['table_unit', 2], ['table_unit', 0]], 'conds': [[False, 2, [0, [0, 18, False], None], [0, 1, False], None]]}, 'select': [False, [[0, [0, [0, 3, False], None]], [0, [0, [0, 2, False], None]]]], 'where': [[False, 2, [0, [0, 19, False], None], 2014.0, None]], 'groupBy': [], 'having': [], 'orderBy': [], 'limit': None, 'intersect': {'from': {'table_units': [['table_unit', 2], ['table_unit', 0]], 'conds': [[False, 2, [0, [0, 18, False], None], [0, 1, False], None]]}, 'select': [False, [[0, [0, [0, 3, False], None]], [0, [0, [0, 2, False], None]]]], 'where': [[False, 2, [0, [0, 19, False], None], 2015.0, None]], 'groupBy': [], 'having': [], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}, 'union': None, 'except': None}"
  },
  {
    "db_id": "concert_singer",
    "query": "SELECT T2.name ,  T2.location FROM concert AS T1 JOIN stadium AS T2 ON T1.stadium_id  =  T2.stadium_id WHERE T1.Year  =  2014 INTERSECT SELECT T2.name ,  T2.location FROM concert AS T1 JOIN stadium AS T2 ON T1.stadium_id  =  T2.stadium_id WHERE T1.Year  =  2015",
    "query_toks": "['SELECT', 'T2.name', ',', 'T2.location', 'FROM', 'concert', 'AS', 'T1', 'JOIN', 'stadium', 'AS', 'T2', 'ON', 'T1.stadium_id', '=', 'T2.stadium_id', 'WHERE', 'T1.Year', '=', '2014', 'INTERSECT', 'SELECT', 'T2.name', ',', 'T2.location', 'FROM', 'concert', 'AS', 'T1', 'JOIN', 'stadium', 'AS', 'T2', 'ON', 'T1.stadium_id', '=', 'T2.stadium_id', 'WHERE', 'T1.Year', '=', '2015']",
    "query_toks_no_value": "['select', 't2', '.', 'name', ',', 't2', '.', 'location', 'from', 'concert', 'as', 't1', 'join', 'stadium', 'as', 't2', 'on', 't1', '.', 'stadium_id', '=', 't2', '.', 'stadium_id', 'where', 't1', '.', 'year', '=', 'value', 'intersect', 'select', 't2', '.', 'name', ',', 't2', '.', 'location', 'from', 'concert', 'as', 't1', 'join', 'stadium', 'as', 't2', 'on', 't1', '.', 'stadium_id', '=', 't2', '.', 'stadium_id', 'where', 't1', '.', 'year', '=', 'value']",
    "question": "What are the names and locations of the stadiums that had concerts that occurred in both 2014 and 2015?",
    "question_th": "ชื่อและที่ตั้งของสนามกีฬาที่มีคอนเสิร์ตในปี 2014 และ 2015 คืออะไร?",
    "question_toks": "['What', 'are', 'the', 'names', 'and', 'locations', 'of', 'the', 'stadiums', 'that', 'had', 'concerts', 'that', 'occurred', 'in', 'both', '2014', 'and', '2015', '?']",
    "sql": "{'from': {'table_units': [['table_unit', 2], ['table_unit', 0]], 'conds': [[False, 2, [0, [0, 18, False], None], [0, 1, False], None]]}, 'select': [False, [[0, [0, [0, 3, False], None]], [0, [0, [0, 2, False], None]]]], 'where': [[False, 2, [0, [0, 19, False], None], 2014.0, None]], 'groupBy': [], 'having': [], 'orderBy': [], 'limit': None, 'intersect': {'from': {'table_units': [['table_unit', 2], ['table_unit', 0]], 'conds': [[False, 2, [0, [0, 18, False], None], [0, 1, False], None]]}, 'select': [False, [[0, [0, [0, 3, False], None]], [0, [0, [0, 2, False], None]]]], 'where': [[False, 2, [0, [0, 19, False], None], 2015.0, None]], 'groupBy': [], 'having': [], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}, 'union': None, 'except': None}"
  },
  {
    "db_id": "concert_singer",
    "query": "select count(*) from concert where stadium_id = (select stadium_id from stadium order by capacity desc limit 1)",
    "query_toks": "['select', 'count', '(', '*', ')', 'from', 'concert', 'where', 'stadium_id', '=', '(', 'select', 'stadium_id', 'from', 'stadium', 'order', 'by', 'capacity', 'desc', 'limit', '1', ')']",
    "query_toks_no_value": "['select', 'count', '(', '*', ')', 'from', 'concert', 'where', 'stadium_id', '=', '(', 'select', 'stadium_id', 'from', 'stadium', 'order', 'by', 'capacity', 'desc', 'limit', 'value', ')']",
    "question": "Find the number of concerts happened in the stadium with the highest capacity .",
    "question_th": "ค้นหาจำนวนคอนเสิร์ตที่เกิดขึ้นในสนามกีฬาที่มีความจุสูงสุด",
    "question_toks": "['Find', 'the', 'number', 'of', 'concerts', 'happened', 'in', 'the', 'stadium', 'with', 'the', 'highest', 'capacity', '.']",
    "sql": "{'from': {'table_units': [['table_unit', 2]], 'conds': []}, 'select': [False, [[3, [0, [0, 0, False], None]]]], 'where': [[False, 2, [0, [0, 18, False], None], {'from': {'table_units': [['table_unit', 0]], 'conds': []}, 'select': [False, [[0, [0, [0, 1, False], None]]]], 'where': [], 'groupBy': [], 'having': [], 'orderBy': ['desc', [[0, [0, 4, False], None]]], 'limit': 1, 'intersect': None, 'union': None, 'except': None}, None]], 'groupBy': [], 'having': [], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "concert_singer",
    "query": "select count(*) from concert where stadium_id = (select stadium_id from stadium order by capacity desc limit 1)",
    "query_toks": "['select', 'count', '(', '*', ')', 'from', 'concert', 'where', 'stadium_id', '=', '(', 'select', 'stadium_id', 'from', 'stadium', 'order', 'by', 'capacity', 'desc', 'limit', '1', ')']",
    "query_toks_no_value": "['select', 'count', '(', '*', ')', 'from', 'concert', 'where', 'stadium_id', '=', '(', 'select', 'stadium_id', 'from', 'stadium', 'order', 'by', 'capacity', 'desc', 'limit', 'value', ')']",
    "question": "What are the number of concerts that occurred in the stadium with the largest capacity ?",
    "question_th": "คอนเสิร์ตที่เกิดขึ้นในสนามกีฬาที่มีความจุมากที่สุดคือจำนวนเท่าใด ?",
    "question_toks": "['What', 'are', 'the', 'number', 'of', 'concerts', 'that', 'occurred', 'in', 'the', 'stadium', 'with', 'the', 'largest', 'capacity', '?']",
    "sql": "{'from': {'table_units': [['table_unit', 2]], 'conds': []}, 'select': [False, [[3, [0, [0, 0, False], None]]]], 'where': [[False, 2, [0, [0, 18, False], None], {'from': {'table_units': [['table_unit', 0]], 'conds': []}, 'select': [False, [[0, [0, [0, 1, False], None]]]], 'where': [], 'groupBy': [], 'having': [], 'orderBy': ['desc', [[0, [0, 4, False], None]]], 'limit': 1, 'intersect': None, 'union': None, 'except': None}, None]], 'groupBy': [], 'having': [], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "pets_1",
    "query": "SELECT count(*) FROM pets WHERE weight  >  10",
    "query_toks": "['SELECT', 'count', '(', '*', ')', 'FROM', 'pets', 'WHERE', 'weight', '>', '10']",
    "query_toks_no_value": "['select', 'count', '(', '*', ')', 'from', 'pets', 'where', 'weight', '>', 'value']",
    "question": "Find the number of pets whose weight is heavier than 10.",
    "question_th": "จงหาจำนวนสัตว์เลี้ยงที่มีน้ำหนักมากกว่า 10",
    "question_toks": "['Find', 'the', 'number', 'of', 'pets', 'whose', 'weight', 'is', 'heavier', 'than', '10', '.']",
    "sql": "{'from': {'table_units': [['table_unit', 2]], 'conds': []}, 'select': [False, [[3, [0, [0, 0, False], None]]]], 'where': [[False, 3, [0, [0, 14, False], None], 10.0, None]], 'groupBy': [], 'having': [], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "pets_1",
    "query": "SELECT count(*) FROM pets WHERE weight  >  10",
    "query_toks": "['SELECT', 'count', '(', '*', ')', 'FROM', 'pets', 'WHERE', 'weight', '>', '10']",
    "query_toks_no_value": "['select', 'count', '(', '*', ')', 'from', 'pets', 'where', 'weight', '>', 'value']",
    "question": "How many pets have a greater weight than 10?",
    "question_th": "มีสัตว์เลี้ยงกี่ตัวที่มีน้ำหนักมากกว่า 10?",
    "question_toks": "['How', 'many', 'pets', 'have', 'a', 'greater', 'weight', 'than', '10', '?']",
    "sql": "{'from': {'table_units': [['table_unit', 2]], 'conds': []}, 'select': [False, [[3, [0, [0, 0, False], None]]]], 'where': [[False, 3, [0, [0, 14, False], None], 10.0, None]], 'groupBy': [], 'having': [], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "pets_1",
    "query": "SELECT weight FROM pets ORDER BY pet_age LIMIT 1",
    "query_toks": "['SELECT', 'weight', 'FROM', 'pets', 'ORDER', 'BY', 'pet_age', 'LIMIT', '1']",
    "query_toks_no_value": "['select', 'weight', 'from', 'pets', 'order', 'by', 'pet_age', 'limit', 'value']",
    "question": "Find the weight of the youngest dog.",
    "question_th": "ค้นหาน้ำหนักของสุนัขที่อายุน้อยที่สุด",
    "question_toks": "['Find', 'the', 'weight', 'of', 'the', 'youngest', 'dog', '.']",
    "sql": "{'from': {'table_units': [['table_unit', 2]], 'conds': []}, 'select': [False, [[0, [0, [0, 14, False], None]]]], 'where': [], 'groupBy': [], 'having': [], 'orderBy': ['asc', [[0, [0, 13, False], None]]], 'limit': 1, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "pets_1",
    "query": "SELECT weight FROM pets ORDER BY pet_age LIMIT 1",
    "query_toks": "['SELECT', 'weight', 'FROM', 'pets', 'ORDER', 'BY', 'pet_age', 'LIMIT', '1']",
    "query_toks_no_value": "['select', 'weight', 'from', 'pets', 'order', 'by', 'pet_age', 'limit', 'value']",
    "question": "How much does the youngest dog weigh?",
    "question_th": "สุนัขที่อายุน้อยที่สุดมีน้ำหนักเท่าไหร่?",
    "question_toks": "['How', 'much', 'does', 'the', 'youngest', 'dog', 'weigh', '?']",
    "sql": "{'from': {'table_units': [['table_unit', 2]], 'conds': []}, 'select': [False, [[0, [0, [0, 14, False], None]]]], 'where': [], 'groupBy': [], 'having': [], 'orderBy': ['asc', [[0, [0, 13, False], None]]], 'limit': 1, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "pets_1",
    "query": "SELECT max(weight) ,  petType FROM pets GROUP BY petType",
    "query_toks": "['SELECT', 'max', '(', 'weight', ')', ',', 'petType', 'FROM', 'pets', 'GROUP', 'BY', 'petType']",
    "query_toks_no_value": "['select', 'max', '(', 'weight', ')', ',', 'pettype', 'from', 'pets', 'group', 'by', 'pettype']",
    "question": "Find the maximum weight for each type of pet. List the maximum weight and pet type.",
    "question_th": "ค้นหาน้ำหนักสูงสุดสำหรับสัตว์เลี้ยงแต่ละประเภท ระบุน้ำหนักสูงสุดและประเภทสัตว์เลี้ยง",
    "question_toks": "['Find', 'the', 'maximum', 'weight', 'for', 'each', 'type', 'of', 'pet', '.', 'List', 'the', 'maximum', 'weight', 'and', 'pet', 'type', '.']",
    "sql": "{'from': {'table_units': [['table_unit', 2]], 'conds': []}, 'select': [False, [[1, [0, [0, 14, False], None]], [0, [0, [0, 12, False], None]]]], 'where': [], 'groupBy': [[0, 12, False]], 'having': [], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "pets_1",
    "query": "SELECT max(weight) ,  petType FROM pets GROUP BY petType",
    "query_toks": "['SELECT', 'max', '(', 'weight', ')', ',', 'petType', 'FROM', 'pets', 'GROUP', 'BY', 'petType']",
    "query_toks_no_value": "['select', 'max', '(', 'weight', ')', ',', 'pettype', 'from', 'pets', 'group', 'by', 'pettype']",
    "question": "List the maximum weight and type for each type of pet.",
    "question_th": "ระบุน้ำหนักและประเภทสูงสุดสำหรับสัตว์เลี้ยงแต่ละประเภท",
    "question_toks": "['List', 'the', 'maximum', 'weight', 'and', 'type', 'for', 'each', 'type', 'of', 'pet', '.']",
    "sql": "{'from': {'table_units': [['table_unit', 2]], 'conds': []}, 'select': [False, [[1, [0, [0, 14, False], None]], [0, [0, [0, 12, False], None]]]], 'where': [], 'groupBy': [[0, 12, False]], 'having': [], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "pets_1",
    "query": "SELECT count(*) FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid WHERE T1.age  >  20",
    "query_toks": "['SELECT', 'count', '(', '*', ')', 'FROM', 'student', 'AS', 'T1', 'JOIN', 'has_pet', 'AS', 'T2', 'ON', 'T1.stuid', '=', 'T2.stuid', 'WHERE', 'T1.age', '>', '20']",
    "query_toks_no_value": "['select', 'count', '(', '*', ')', 'from', 'student', 'as', 't1', 'join', 'has_pet', 'as', 't2', 'on', 't1', '.', 'stuid', '=', 't2', '.', 'stuid', 'where', 't1', '.', 'age', '>', 'value']",
    "question": "Find number of pets owned by students who are older than 20.",
    "question_th": "ค้นหาจำนวนสัตว์เลี้ยงของนักเรียนที่มีอายุมากกว่า 20 ปี",
    "question_toks": "['Find', 'number', 'of', 'pets', 'owned', 'by', 'students', 'who', 'are', 'older', 'than', '20', '.']",
    "sql": "{'from': {'table_units': [['table_unit', 0], ['table_unit', 1]], 'conds': [[False, 2, [0, [0, 1, False], None], [0, 9, False], None]]}, 'select': [False, [[3, [0, [0, 0, False], None]]]], 'where': [[False, 3, [0, [0, 4, False], None], 20.0, None]], 'groupBy': [], 'having': [], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "pets_1",
    "query": "SELECT count(*) FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid WHERE T1.age  >  20",
    "query_toks": "['SELECT', 'count', '(', '*', ')', 'FROM', 'student', 'AS', 'T1', 'JOIN', 'has_pet', 'AS', 'T2', 'ON', 'T1.stuid', '=', 'T2.stuid', 'WHERE', 'T1.age', '>', '20']",
    "query_toks_no_value": "['select', 'count', '(', '*', ')', 'from', 'student', 'as', 't1', 'join', 'has_pet', 'as', 't2', 'on', 't1', '.', 'stuid', '=', 't2', '.', 'stuid', 'where', 't1', '.', 'age', '>', 'value']",
    "question": "How many pets are owned by students that have an age greater than 20?",
    "question_th": "นักเรียนที่มีอายุมากกว่า 20 ปีมีสัตว์เลี้ยงกี่ตัว?",
    "question_toks": "['How', 'many', 'pets', 'are', 'owned', 'by', 'students', 'that', 'have', 'an', 'age', 'greater', 'than', '20', '?']",
    "sql": "{'from': {'table_units': [['table_unit', 0], ['table_unit', 1]], 'conds': [[False, 2, [0, [0, 1, False], None], [0, 9, False], None]]}, 'select': [False, [[3, [0, [0, 0, False], None]]]], 'where': [[False, 3, [0, [0, 4, False], None], 20.0, None]], 'groupBy': [], 'having': [], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "pets_1",
    "query": "SELECT count(*) FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T2.petid  =  T3.petid WHERE T1.sex  =  'F' AND T3.pettype  =  'dog'",
    "query_toks": "['SELECT', 'count', '(', '*', ')', 'FROM', 'student', 'AS', 'T1', 'JOIN', 'has_pet', 'AS', 'T2', 'ON', 'T1.stuid', '=', 'T2.stuid', 'JOIN', 'pets', 'AS', 'T3', 'ON', 'T2.petid', '=', 'T3.petid', 'WHERE', 'T1.sex', '=', \"'F\", \"'\", 'AND', 'T3.pettype', '=', \"'dog\", \"'\"]",
    "query_toks_no_value": "['select', 'count', '(', '*', ')', 'from', 'student', 'as', 't1', 'join', 'has_pet', 'as', 't2', 'on', 't1', '.', 'stuid', '=', 't2', '.', 'stuid', 'join', 'pets', 'as', 't3', 'on', 't2', '.', 'petid', '=', 't3', '.', 'petid', 'where', 't1', '.', 'sex', '=', 'value', 'and', 't3', '.', 'pettype', '=', 'value']",
    "question": "Find the number of dog pets that are raised by female students (with sex F).",
    "question_th": "จงหาจำนวนสุนัขที่นักเรียนหญิงเลี้ยงไว้ (เพศ F)",
    "question_toks": "['Find', 'the', 'number', 'of', 'dog', 'pets', 'that', 'are', 'raised', 'by', 'female', 'students', '(', 'with', 'sex', 'F', ')', '.']",
    "sql": "{'from': {'table_units': [['table_unit', 0], ['table_unit', 1], ['table_unit', 2]], 'conds': [[False, 2, [0, [0, 1, False], None], [0, 9, False], None], 'and', [False, 2, [0, [0, 10, False], None], [0, 11, False], None]]}, 'select': [False, [[3, [0, [0, 0, False], None]]]], 'where': [[False, 2, [0, [0, 5, False], None], '\"F\"', None], 'and', [False, 2, [0, [0, 12, False], None], '\"dog\"', None]], 'groupBy': [], 'having': [], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "pets_1",
    "query": "SELECT count(*) FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T2.petid  =  T3.petid WHERE T1.sex  =  'F' AND T3.pettype  =  'dog'",
    "query_toks": "['SELECT', 'count', '(', '*', ')', 'FROM', 'student', 'AS', 'T1', 'JOIN', 'has_pet', 'AS', 'T2', 'ON', 'T1.stuid', '=', 'T2.stuid', 'JOIN', 'pets', 'AS', 'T3', 'ON', 'T2.petid', '=', 'T3.petid', 'WHERE', 'T1.sex', '=', \"'F\", \"'\", 'AND', 'T3.pettype', '=', \"'dog\", \"'\"]",
    "query_toks_no_value": "['select', 'count', '(', '*', ')', 'from', 'student', 'as', 't1', 'join', 'has_pet', 'as', 't2', 'on', 't1', '.', 'stuid', '=', 't2', '.', 'stuid', 'join', 'pets', 'as', 't3', 'on', 't2', '.', 'petid', '=', 't3', '.', 'petid', 'where', 't1', '.', 'sex', '=', 'value', 'and', 't3', '.', 'pettype', '=', 'value']",
    "question": "How many dog pets are raised by female students?",
    "question_th": "นักเรียนหญิงเลี้ยงสุนัขได้กี่ตัว?",
    "question_toks": "['How', 'many', 'dog', 'pets', 'are', 'raised', 'by', 'female', 'students', '?']",
    "sql": "{'from': {'table_units': [['table_unit', 0], ['table_unit', 1], ['table_unit', 2]], 'conds': [[False, 2, [0, [0, 1, False], None], [0, 9, False], None], 'and', [False, 2, [0, [0, 10, False], None], [0, 11, False], None]]}, 'select': [False, [[3, [0, [0, 0, False], None]]]], 'where': [[False, 2, [0, [0, 5, False], None], '\"F\"', None], 'and', [False, 2, [0, [0, 12, False], None], '\"dog\"', None]], 'groupBy': [], 'having': [], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "pets_1",
    "query": "SELECT count(DISTINCT pettype) FROM pets",
    "query_toks": "['SELECT', 'count', '(', 'DISTINCT', 'pettype', ')', 'FROM', 'pets']",
    "query_toks_no_value": "['select', 'count', '(', 'distinct', 'pettype', ')', 'from', 'pets']",
    "question": "Find the number of distinct type of pets.",
    "question_th": "ค้นหาจำนวนสัตว์เลี้ยงประเภทต่างๆ",
    "question_toks": "['Find', 'the', 'number', 'of', 'distinct', 'type', 'of', 'pets', '.']",
    "sql": "{'from': {'table_units': [['table_unit', 2]], 'conds': []}, 'select': [False, [[3, [0, [0, 12, True], None]]]], 'where': [], 'groupBy': [], 'having': [], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "pets_1",
    "query": "SELECT count(DISTINCT pettype) FROM pets",
    "query_toks": "['SELECT', 'count', '(', 'DISTINCT', 'pettype', ')', 'FROM', 'pets']",
    "query_toks_no_value": "['select', 'count', '(', 'distinct', 'pettype', ')', 'from', 'pets']",
    "question": "How many different types of pet are there?",
    "question_th": "สัตว์เลี้ยงมีกี่ประเภท?",
    "question_toks": "['How', 'many', 'different', 'types', 'of', 'pet', 'are', 'there', '?']",
    "sql": "{'from': {'table_units': [['table_unit', 2]], 'conds': []}, 'select': [False, [[3, [0, [0, 12, True], None]]]], 'where': [], 'groupBy': [], 'having': [], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "pets_1",
    "query": "SELECT DISTINCT T1.Fname FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'cat' OR T3.pettype  =  'dog'",
    "query_toks": "['SELECT', 'DISTINCT', 'T1.Fname', 'FROM', 'student', 'AS', 'T1', 'JOIN', 'has_pet', 'AS', 'T2', 'ON', 'T1.stuid', '=', 'T2.stuid', 'JOIN', 'pets', 'AS', 'T3', 'ON', 'T3.petid', '=', 'T2.petid', 'WHERE', 'T3.pettype', '=', \"'cat\", \"'\", 'OR', 'T3.pettype', '=', \"'dog\", \"'\"]",
    "query_toks_no_value": "['select', 'distinct', 't1', '.', 'fname', 'from', 'student', 'as', 't1', 'join', 'has_pet', 'as', 't2', 'on', 't1', '.', 'stuid', '=', 't2', '.', 'stuid', 'join', 'pets', 'as', 't3', 'on', 't3', '.', 'petid', '=', 't2', '.', 'petid', 'where', 't3', '.', 'pettype', '=', 'value', 'or', 't3', '.', 'pettype', '=', 'value']",
    "question": "Find the first name of students who have cat or dog pet.",
    "question_th": "ค้นหาชื่อนักเรียนที่มีสัตว์เลี้ยงแมวหรือสุนัข",
    "question_toks": "['Find', 'the', 'first', 'name', 'of', 'students', 'who', 'have', 'cat', 'or', 'dog', 'pet', '.']",
    "sql": "{'from': {'table_units': [['table_unit', 0], ['table_unit', 1], ['table_unit', 2]], 'conds': [[False, 2, [0, [0, 1, False], None], [0, 9, False], None], 'and', [False, 2, [0, [0, 11, False], None], [0, 10, False], None]]}, 'select': [True, [[0, [0, [0, 3, False], None]]]], 'where': [[False, 2, [0, [0, 12, False], None], '\"cat\"', None], 'or', [False, 2, [0, [0, 12, False], None], '\"dog\"', None]], 'groupBy': [], 'having': [], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "pets_1",
    "query": "SELECT DISTINCT T1.Fname FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'cat' OR T3.pettype  =  'dog'",
    "query_toks": "['SELECT', 'DISTINCT', 'T1.Fname', 'FROM', 'student', 'AS', 'T1', 'JOIN', 'has_pet', 'AS', 'T2', 'ON', 'T1.stuid', '=', 'T2.stuid', 'JOIN', 'pets', 'AS', 'T3', 'ON', 'T3.petid', '=', 'T2.petid', 'WHERE', 'T3.pettype', '=', \"'cat\", \"'\", 'OR', 'T3.pettype', '=', \"'dog\", \"'\"]",
    "query_toks_no_value": "['select', 'distinct', 't1', '.', 'fname', 'from', 'student', 'as', 't1', 'join', 'has_pet', 'as', 't2', 'on', 't1', '.', 'stuid', '=', 't2', '.', 'stuid', 'join', 'pets', 'as', 't3', 'on', 't3', '.', 'petid', '=', 't2', '.', 'petid', 'where', 't3', '.', 'pettype', '=', 'value', 'or', 't3', '.', 'pettype', '=', 'value']",
    "question": "What are the first names of every student who has a cat or dog as a pet?",
    "question_th": "นักเรียนทุกคนที่มีแมวหรือสุนัขเป็นสัตว์เลี้ยงชื่ออะไร",
    "question_toks": "['What', 'are', 'the', 'first', 'names', 'of', 'every', 'student', 'who', 'has', 'a', 'cat', 'or', 'dog', 'as', 'a', 'pet', '?']",
    "sql": "{'from': {'table_units': [['table_unit', 0], ['table_unit', 1], ['table_unit', 2]], 'conds': [[False, 2, [0, [0, 1, False], None], [0, 9, False], None], 'and', [False, 2, [0, [0, 11, False], None], [0, 10, False], None]]}, 'select': [True, [[0, [0, [0, 3, False], None]]]], 'where': [[False, 2, [0, [0, 12, False], None], '\"cat\"', None], 'or', [False, 2, [0, [0, 12, False], None], '\"dog\"', None]], 'groupBy': [], 'having': [], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "pets_1",
    "query": "select t1.fname from student as t1 join has_pet as t2 on t1.stuid  =  t2.stuid join pets as t3 on t3.petid  =  t2.petid where t3.pettype  =  'cat' intersect select t1.fname from student as t1 join has_pet as t2 on t1.stuid  =  t2.stuid join pets as t3 on t3.petid  =  t2.petid where t3.pettype  =  'dog'",
    "query_toks": "['select', 't1.fname', 'from', 'student', 'as', 't1', 'join', 'has_pet', 'as', 't2', 'on', 't1.stuid', '=', 't2.stuid', 'join', 'pets', 'as', 't3', 'on', 't3.petid', '=', 't2.petid', 'where', 't3.pettype', '=', '\"cat\"', 'intersect', 'select', 't1.fname', 'from', 'student', 'as', 't1', 'join', 'has_pet', 'as', 't2', 'on', 't1.stuid', '=', 't2.stuid', 'join', 'pets', 'as', 't3', 'on', 't3.petid', '=', 't2.petid', 'where', 't3.pettype', '=', '\"dog\"']",
    "query_toks_no_value": "['select', 't1', '.', 'fname', 'from', 'student', 'as', 't1', 'join', 'has_pet', 'as', 't2', 'on', 't1', '.', 'stuid', '=', 't2', '.', 'stuid', 'join', 'pets', 'as', 't3', 'on', 't3', '.', 'petid', '=', 't2', '.', 'petid', 'where', 't3', '.', 'pettype', '=', 'value', 'intersect', 'select', 't1', '.', 'fname', 'from', 'student', 'as', 't1', 'join', 'has_pet', 'as', 't2', 'on', 't1', '.', 'stuid', '=', 't2', '.', 'stuid', 'join', 'pets', 'as', 't3', 'on', 't3', '.', 'petid', '=', 't2', '.', 'petid', 'where', 't3', '.', 'pettype', '=', 'value']",
    "question": "Find the first name of students who have both cat and dog pets .",
    "question_th": "ค้นหาชื่อนักเรียนที่มีทั้งสัตว์เลี้ยงแมวและสุนัข",
    "question_toks": "['Find', 'the', 'first', 'name', 'of', 'students', 'who', 'have', 'both', 'cat', 'and', 'dog', 'pets', '.']",
    "sql": "{'from': {'table_units': [['table_unit', 0], ['table_unit', 1], ['table_unit', 2]], 'conds': [[False, 2, [0, [0, 1, False], None], [0, 9, False], None], 'and', [False, 2, [0, [0, 11, False], None], [0, 10, False], None]]}, 'select': [False, [[0, [0, [0, 3, False], None]]]], 'where': [[False, 2, [0, [0, 12, False], None], '\"cat\"', None]], 'groupBy': [], 'having': [], 'orderBy': [], 'limit': None, 'intersect': {'from': {'table_units': [['table_unit', 0], ['table_unit', 1], ['table_unit', 2]], 'conds': [[False, 2, [0, [0, 1, False], None], [0, 9, False], None], 'and', [False, 2, [0, [0, 11, False], None], [0, 10, False], None]]}, 'select': [False, [[0, [0, [0, 3, False], None]]]], 'where': [[False, 2, [0, [0, 12, False], None], '\"dog\"', None]], 'groupBy': [], 'having': [], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}, 'union': None, 'except': None}"
  },
  {
    "db_id": "pets_1",
    "query": "SELECT T1.Fname FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'cat' INTERSECT SELECT T1.Fname FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'dog'",
    "query_toks": "['SELECT', 'T1.Fname', 'FROM', 'student', 'AS', 'T1', 'JOIN', 'has_pet', 'AS', 'T2', 'ON', 'T1.stuid', '=', 'T2.stuid', 'JOIN', 'pets', 'AS', 'T3', 'ON', 'T3.petid', '=', 'T2.petid', 'WHERE', 'T3.pettype', '=', \"'cat\", \"'\", 'INTERSECT', 'SELECT', 'T1.Fname', 'FROM', 'student', 'AS', 'T1', 'JOIN', 'has_pet', 'AS', 'T2', 'ON', 'T1.stuid', '=', 'T2.stuid', 'JOIN', 'pets', 'AS', 'T3', 'ON', 'T3.petid', '=', 'T2.petid', 'WHERE', 'T3.pettype', '=', \"'dog\", \"'\"]",
    "query_toks_no_value": "['select', 't1', '.', 'fname', 'from', 'student', 'as', 't1', 'join', 'has_pet', 'as', 't2', 'on', 't1', '.', 'stuid', '=', 't2', '.', 'stuid', 'join', 'pets', 'as', 't3', 'on', 't3', '.', 'petid', '=', 't2', '.', 'petid', 'where', 't3', '.', 'pettype', '=', 'value', 'intersect', 'select', 't1', '.', 'fname', 'from', 'student', 'as', 't1', 'join', 'has_pet', 'as', 't2', 'on', 't1', '.', 'stuid', '=', 't2', '.', 'stuid', 'join', 'pets', 'as', 't3', 'on', 't3', '.', 'petid', '=', 't2', '.', 'petid', 'where', 't3', '.', 'pettype', '=', 'value']",
    "question": "What are the students' first names who have both cats and dogs as pets?",
    "question_th": "ชื่อของนักเรียนที่มีทั้งแมวและสุนัขเป็นสัตว์เลี้ยงคืออะไร?",
    "question_toks": "['What', 'are', 'the', 'students', \"'\", 'first', 'names', 'who', 'have', 'both', 'cats', 'and', 'dogs', 'as', 'pets', '?']",
    "sql": "{'from': {'table_units': [['table_unit', 0], ['table_unit', 1], ['table_unit', 2]], 'conds': [[False, 2, [0, [0, 1, False], None], [0, 9, False], None], 'and', [False, 2, [0, [0, 11, False], None], [0, 10, False], None]]}, 'select': [False, [[0, [0, [0, 3, False], None]]]], 'where': [[False, 2, [0, [0, 12, False], None], '\"cat\"', None]], 'groupBy': [], 'having': [], 'orderBy': [], 'limit': None, 'intersect': {'from': {'table_units': [['table_unit', 0], ['table_unit', 1], ['table_unit', 2]], 'conds': [[False, 2, [0, [0, 1, False], None], [0, 9, False], None], 'and', [False, 2, [0, [0, 11, False], None], [0, 10, False], None]]}, 'select': [False, [[0, [0, [0, 3, False], None]]]], 'where': [[False, 2, [0, [0, 12, False], None], '\"dog\"', None]], 'groupBy': [], 'having': [], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}, 'union': None, 'except': None}"
  },
  {
    "db_id": "pets_1",
    "query": "SELECT major ,  age FROM student WHERE stuid NOT IN (SELECT T1.stuid FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'cat')",
    "query_toks": "['SELECT', 'major', ',', 'age', 'FROM', 'student', 'WHERE', 'stuid', 'NOT', 'IN', '(', 'SELECT', 'T1.stuid', 'FROM', 'student', 'AS', 'T1', 'JOIN', 'has_pet', 'AS', 'T2', 'ON', 'T1.stuid', '=', 'T2.stuid', 'JOIN', 'pets', 'AS', 'T3', 'ON', 'T3.petid', '=', 'T2.petid', 'WHERE', 'T3.pettype', '=', \"'cat\", \"'\", ')']",
    "query_toks_no_value": "['select', 'major', ',', 'age', 'from', 'student', 'where', 'stuid', 'not', 'in', '(', 'select', 't1', '.', 'stuid', 'from', 'student', 'as', 't1', 'join', 'has_pet', 'as', 't2', 'on', 't1', '.', 'stuid', '=', 't2', '.', 'stuid', 'join', 'pets', 'as', 't3', 'on', 't3', '.', 'petid', '=', 't2', '.', 'petid', 'where', 't3', '.', 'pettype', '=', 'value', ')']",
    "question": "Find the major and age of students who do not have a cat pet.",
    "question_th": "ค้นหาสาขาวิชาและอายุของนักเรียนที่ไม่มีสัตว์เลี้ยงแมว",
    "question_toks": "['Find', 'the', 'major', 'and', 'age', 'of', 'students', 'who', 'do', 'not', 'have', 'a', 'cat', 'pet', '.']",
    "sql": "{'from': {'table_units': [['table_unit', 0]], 'conds': []}, 'select': [False, [[0, [0, [0, 6, False], None]], [0, [0, [0, 4, False], None]]]], 'where': [[True, 8, [0, [0, 1, False], None], {'from': {'table_units': [['table_unit', 0], ['table_unit', 1], ['table_unit', 2]], 'conds': [[False, 2, [0, [0, 1, False], None], [0, 9, False], None], 'and', [False, 2, [0, [0, 11, False], None], [0, 10, False], None]]}, 'select': [False, [[0, [0, [0, 1, False], None]]]], 'where': [[False, 2, [0, [0, 12, False], None], '\"cat\"', None]], 'groupBy': [], 'having': [], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}, None]], 'groupBy': [], 'having': [], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "pets_1",
    "query": "SELECT major ,  age FROM student WHERE stuid NOT IN (SELECT T1.stuid FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'cat')",
    "query_toks": "['SELECT', 'major', ',', 'age', 'FROM', 'student', 'WHERE', 'stuid', 'NOT', 'IN', '(', 'SELECT', 'T1.stuid', 'FROM', 'student', 'AS', 'T1', 'JOIN', 'has_pet', 'AS', 'T2', 'ON', 'T1.stuid', '=', 'T2.stuid', 'JOIN', 'pets', 'AS', 'T3', 'ON', 'T3.petid', '=', 'T2.petid', 'WHERE', 'T3.pettype', '=', \"'cat\", \"'\", ')']",
    "query_toks_no_value": "['select', 'major', ',', 'age', 'from', 'student', 'where', 'stuid', 'not', 'in', '(', 'select', 't1', '.', 'stuid', 'from', 'student', 'as', 't1', 'join', 'has_pet', 'as', 't2', 'on', 't1', '.', 'stuid', '=', 't2', '.', 'stuid', 'join', 'pets', 'as', 't3', 'on', 't3', '.', 'petid', '=', 't2', '.', 'petid', 'where', 't3', '.', 'pettype', '=', 'value', ')']",
    "question": "What major is every student who does not own a cat as a pet, and also how old are they?",
    "question_th": "นักเรียนทุกคนที่ไม่มีแมวเป็นสัตว์เลี้ยงสาขาวิชาเอกคืออะไร และพวกเขาอายุเท่าไหร่ด้วย?",
    "question_toks": "['What', 'major', 'is', 'every', 'student', 'who', 'does', 'not', 'own', 'a', 'cat', 'as', 'a', 'pet', ',', 'and', 'also', 'how', 'old', 'are', 'they', '?']",
    "sql": "{'from': {'table_units': [['table_unit', 0]], 'conds': []}, 'select': [False, [[0, [0, [0, 6, False], None]], [0, [0, [0, 4, False], None]]]], 'where': [[True, 8, [0, [0, 1, False], None], {'from': {'table_units': [['table_unit', 0], ['table_unit', 1], ['table_unit', 2]], 'conds': [[False, 2, [0, [0, 1, False], None], [0, 9, False], None], 'and', [False, 2, [0, [0, 11, False], None], [0, 10, False], None]]}, 'select': [False, [[0, [0, [0, 1, False], None]]]], 'where': [[False, 2, [0, [0, 12, False], None], '\"cat\"', None]], 'groupBy': [], 'having': [], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}, None]], 'groupBy': [], 'having': [], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "pets_1",
    "query": "SELECT stuid FROM student EXCEPT SELECT T1.stuid FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'cat'",
    "query_toks": "['SELECT', 'stuid', 'FROM', 'student', 'EXCEPT', 'SELECT', 'T1.stuid', 'FROM', 'student', 'AS', 'T1', 'JOIN', 'has_pet', 'AS', 'T2', 'ON', 'T1.stuid', '=', 'T2.stuid', 'JOIN', 'pets', 'AS', 'T3', 'ON', 'T3.petid', '=', 'T2.petid', 'WHERE', 'T3.pettype', '=', \"'cat\", \"'\"]",
    "query_toks_no_value": "['select', 'stuid', 'from', 'student', 'except', 'select', 't1', '.', 'stuid', 'from', 'student', 'as', 't1', 'join', 'has_pet', 'as', 't2', 'on', 't1', '.', 'stuid', '=', 't2', '.', 'stuid', 'join', 'pets', 'as', 't3', 'on', 't3', '.', 'petid', '=', 't2', '.', 'petid', 'where', 't3', '.', 'pettype', '=', 'value']",
    "question": "Find the id of students who do not have a cat pet.",
    "question_th": "ค้นหารหัสนักเรียนที่ไม่มีสัตว์เลี้ยงแมว",
    "question_toks": "['Find', 'the', 'id', 'of', 'students', 'who', 'do', 'not', 'have', 'a', 'cat', 'pet', '.']",
    "sql": "{'from': {'table_units': [['table_unit', 0]], 'conds': []}, 'select': [False, [[0, [0, [0, 1, False], None]]]], 'where': [], 'groupBy': [], 'having': [], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': {'from': {'table_units': [['table_unit', 0], ['table_unit', 1], ['table_unit', 2]], 'conds': [[False, 2, [0, [0, 1, False], None], [0, 9, False], None], 'and', [False, 2, [0, [0, 11, False], None], [0, 10, False], None]]}, 'select': [False, [[0, [0, [0, 1, False], None]]]], 'where': [[False, 2, [0, [0, 12, False], None], '\"cat\"', None]], 'groupBy': [], 'having': [], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}}"
  },
  {
    "db_id": "pets_1",
    "query": "SELECT stuid FROM student EXCEPT SELECT T1.stuid FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'cat'",
    "query_toks": "['SELECT', 'stuid', 'FROM', 'student', 'EXCEPT', 'SELECT', 'T1.stuid', 'FROM', 'student', 'AS', 'T1', 'JOIN', 'has_pet', 'AS', 'T2', 'ON', 'T1.stuid', '=', 'T2.stuid', 'JOIN', 'pets', 'AS', 'T3', 'ON', 'T3.petid', '=', 'T2.petid', 'WHERE', 'T3.pettype', '=', \"'cat\", \"'\"]",
    "query_toks_no_value": "['select', 'stuid', 'from', 'student', 'except', 'select', 't1', '.', 'stuid', 'from', 'student', 'as', 't1', 'join', 'has_pet', 'as', 't2', 'on', 't1', '.', 'stuid', '=', 't2', '.', 'stuid', 'join', 'pets', 'as', 't3', 'on', 't3', '.', 'petid', '=', 't2', '.', 'petid', 'where', 't3', '.', 'pettype', '=', 'value']",
    "question": "What are the ids of the students who do not own cats as pets?",
    "question_th": "รหัสของนักเรียนที่ไม่เลี้ยงแมวมีรหัสอะไรบ้าง?",
    "question_toks": "['What', 'are', 'the', 'ids', 'of', 'the', 'students', 'who', 'do', 'not', 'own', 'cats', 'as', 'pets', '?']",
    "sql": "{'from': {'table_units': [['table_unit', 0]], 'conds': []}, 'select': [False, [[0, [0, [0, 1, False], None]]]], 'where': [], 'groupBy': [], 'having': [], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': {'from': {'table_units': [['table_unit', 0], ['table_unit', 1], ['table_unit', 2]], 'conds': [[False, 2, [0, [0, 1, False], None], [0, 9, False], None], 'and', [False, 2, [0, [0, 11, False], None], [0, 10, False], None]]}, 'select': [False, [[0, [0, [0, 1, False], None]]]], 'where': [[False, 2, [0, [0, 12, False], None], '\"cat\"', None]], 'groupBy': [], 'having': [], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}}"
  },
  {
    "db_id": "pets_1",
    "query": "SELECT T1.fname ,  T1.age FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'dog' AND T1.stuid NOT IN (SELECT T1.stuid FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'cat')",
    "query_toks": "['SELECT', 'T1.fname', ',', 'T1.age', 'FROM', 'student', 'AS', 'T1', 'JOIN', 'has_pet', 'AS', 'T2', 'ON', 'T1.stuid', '=', 'T2.stuid', 'JOIN', 'pets', 'AS', 'T3', 'ON', 'T3.petid', '=', 'T2.petid', 'WHERE', 'T3.pettype', '=', \"'dog\", \"'\", 'AND', 'T1.stuid', 'NOT', 'IN', '(', 'SELECT', 'T1.stuid', 'FROM', 'student', 'AS', 'T1', 'JOIN', 'has_pet', 'AS', 'T2', 'ON', 'T1.stuid', '=', 'T2.stuid', 'JOIN', 'pets', 'AS', 'T3', 'ON', 'T3.petid', '=', 'T2.petid', 'WHERE', 'T3.pettype', '=', \"'cat\", \"'\", ')']",
    "query_toks_no_value": "['select', 't1', '.', 'fname', ',', 't1', '.', 'age', 'from', 'student', 'as', 't1', 'join', 'has_pet', 'as', 't2', 'on', 't1', '.', 'stuid', '=', 't2', '.', 'stuid', 'join', 'pets', 'as', 't3', 'on', 't3', '.', 'petid', '=', 't2', '.', 'petid', 'where', 't3', '.', 'pettype', '=', 'value', 'and', 't1', '.', 'stuid', 'not', 'in', '(', 'select', 't1', '.', 'stuid', 'from', 'student', 'as', 't1', 'join', 'has_pet', 'as', 't2', 'on', 't1', '.', 'stuid', '=', 't2', '.', 'stuid', 'join', 'pets', 'as', 't3', 'on', 't3', '.', 'petid', '=', 't2', '.', 'petid', 'where', 't3', '.', 'pettype', '=', 'value', ')']",
    "question": "Find the first name and age of students who have a dog but do not have a cat as a pet.",
    "question_th": "ค้นหาชื่อและอายุของนักเรียนที่มีสุนัขแต่ไม่มีแมวเป็นสัตว์เลี้ยง",
    "question_toks": "['Find', 'the', 'first', 'name', 'and', 'age', 'of', 'students', 'who', 'have', 'a', 'dog', 'but', 'do', 'not', 'have', 'a', 'cat', 'as', 'a', 'pet', '.']",
    "sql": "{'from': {'table_units': [['table_unit', 0], ['table_unit', 1], ['table_unit', 2]], 'conds': [[False, 2, [0, [0, 1, False], None], [0, 9, False], None], 'and', [False, 2, [0, [0, 11, False], None], [0, 10, False], None]]}, 'select': [False, [[0, [0, [0, 3, False], None]], [0, [0, [0, 4, False], None]]]], 'where': [[False, 2, [0, [0, 12, False], None], '\"dog\"', None], 'and', [True, 8, [0, [0, 1, False], None], {'from': {'table_units': [['table_unit', 0], ['table_unit', 1], ['table_unit', 2]], 'conds': [[False, 2, [0, [0, 1, False], None], [0, 9, False], None], 'and', [False, 2, [0, [0, 11, False], None], [0, 10, False], None]]}, 'select': [False, [[0, [0, [0, 1, False], None]]]], 'where': [[False, 2, [0, [0, 12, False], None], '\"cat\"', None]], 'groupBy': [], 'having': [], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}, None]], 'groupBy': [], 'having': [], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "pets_1",
    "query": "SELECT T1.fname ,  T1.age FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'dog' AND T1.stuid NOT IN (SELECT T1.stuid FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'cat')",
    "query_toks": "['SELECT', 'T1.fname', ',', 'T1.age', 'FROM', 'student', 'AS', 'T1', 'JOIN', 'has_pet', 'AS', 'T2', 'ON', 'T1.stuid', '=', 'T2.stuid', 'JOIN', 'pets', 'AS', 'T3', 'ON', 'T3.petid', '=', 'T2.petid', 'WHERE', 'T3.pettype', '=', \"'dog\", \"'\", 'AND', 'T1.stuid', 'NOT', 'IN', '(', 'SELECT', 'T1.stuid', 'FROM', 'student', 'AS', 'T1', 'JOIN', 'has_pet', 'AS', 'T2', 'ON', 'T1.stuid', '=', 'T2.stuid', 'JOIN', 'pets', 'AS', 'T3', 'ON', 'T3.petid', '=', 'T2.petid', 'WHERE', 'T3.pettype', '=', \"'cat\", \"'\", ')']",
    "query_toks_no_value": "['select', 't1', '.', 'fname', ',', 't1', '.', 'age', 'from', 'student', 'as', 't1', 'join', 'has_pet', 'as', 't2', 'on', 't1', '.', 'stuid', '=', 't2', '.', 'stuid', 'join', 'pets', 'as', 't3', 'on', 't3', '.', 'petid', '=', 't2', '.', 'petid', 'where', 't3', '.', 'pettype', '=', 'value', 'and', 't1', '.', 'stuid', 'not', 'in', '(', 'select', 't1', '.', 'stuid', 'from', 'student', 'as', 't1', 'join', 'has_pet', 'as', 't2', 'on', 't1', '.', 'stuid', '=', 't2', '.', 'stuid', 'join', 'pets', 'as', 't3', 'on', 't3', '.', 'petid', '=', 't2', '.', 'petid', 'where', 't3', '.', 'pettype', '=', 'value', ')']",
    "question": "What is the first name of every student who has a dog but does not have a cat?",
    "question_th": "นักเรียนทุกคนที่มีสุนัขแต่ไม่มีแมวชื่ออะไร",
    "question_toks": "['What', 'is', 'the', 'first', 'name', 'of', 'every', 'student', 'who', 'has', 'a', 'dog', 'but', 'does', 'not', 'have', 'a', 'cat', '?']",
    "sql": "{'from': {'table_units': [['table_unit', 0], ['table_unit', 1], ['table_unit', 2]], 'conds': [[False, 2, [0, [0, 1, False], None], [0, 9, False], None], 'and', [False, 2, [0, [0, 11, False], None], [0, 10, False], None]]}, 'select': [False, [[0, [0, [0, 3, False], None]], [0, [0, [0, 4, False], None]]]], 'where': [[False, 2, [0, [0, 12, False], None], '\"dog\"', None], 'and', [True, 8, [0, [0, 1, False], None], {'from': {'table_units': [['table_unit', 0], ['table_unit', 1], ['table_unit', 2]], 'conds': [[False, 2, [0, [0, 1, False], None], [0, 9, False], None], 'and', [False, 2, [0, [0, 11, False], None], [0, 10, False], None]]}, 'select': [False, [[0, [0, [0, 1, False], None]]]], 'where': [[False, 2, [0, [0, 12, False], None], '\"cat\"', None]], 'groupBy': [], 'having': [], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}, None]], 'groupBy': [], 'having': [], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "pets_1",
    "query": "SELECT pettype ,  weight FROM pets ORDER BY pet_age LIMIT 1",
    "query_toks": "['SELECT', 'pettype', ',', 'weight', 'FROM', 'pets', 'ORDER', 'BY', 'pet_age', 'LIMIT', '1']",
    "query_toks_no_value": "['select', 'pettype', ',', 'weight', 'from', 'pets', 'order', 'by', 'pet_age', 'limit', 'value']",
    "question": "Find the type and weight of the youngest pet.",
    "question_th": "ค้นหาประเภทและน้ำหนักของสัตว์เลี้ยงที่อายุน้อยที่สุด",
    "question_toks": "['Find', 'the', 'type', 'and', 'weight', 'of', 'the', 'youngest', 'pet', '.']",
    "sql": "{'from': {'table_units': [['table_unit', 2]], 'conds': []}, 'select': [False, [[0, [0, [0, 12, False], None]], [0, [0, [0, 14, False], None]]]], 'where': [], 'groupBy': [], 'having': [], 'orderBy': ['asc', [[0, [0, 13, False], None]]], 'limit': 1, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "pets_1",
    "query": "SELECT pettype ,  weight FROM pets ORDER BY pet_age LIMIT 1",
    "query_toks": "['SELECT', 'pettype', ',', 'weight', 'FROM', 'pets', 'ORDER', 'BY', 'pet_age', 'LIMIT', '1']",
    "query_toks_no_value": "['select', 'pettype', ',', 'weight', 'from', 'pets', 'order', 'by', 'pet_age', 'limit', 'value']",
    "question": "What type of pet is the youngest animal, and how much does it weigh?",
    "question_th": "สัตว์เลี้ยงประเภทใดเป็นสัตว์ที่อายุน้อยที่สุด และมีน้ำหนักเท่าไหร่?",
    "question_toks": "['What', 'type', 'of', 'pet', 'is', 'the', 'youngest', 'animal', ',', 'and', 'how', 'much', 'does', 'it', 'weigh', '?']",
    "sql": "{'from': {'table_units': [['table_unit', 2]], 'conds': []}, 'select': [False, [[0, [0, [0, 12, False], None]], [0, [0, [0, 14, False], None]]]], 'where': [], 'groupBy': [], 'having': [], 'orderBy': ['asc', [[0, [0, 13, False], None]]], 'limit': 1, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "pets_1",
    "query": "SELECT petid ,  weight FROM pets WHERE pet_age  >  1",
    "query_toks": "['SELECT', 'petid', ',', 'weight', 'FROM', 'pets', 'WHERE', 'pet_age', '>', '1']",
    "query_toks_no_value": "['select', 'petid', ',', 'weight', 'from', 'pets', 'where', 'pet_age', '>', 'value']",
    "question": "Find the id and weight of all pets whose age is older than 1.",
    "question_th": "ค้นหารหัสและน้ำหนักของสัตว์เลี้ยงทุกตัวที่มีอายุมากกว่า 1 ปี",
    "question_toks": "['Find', 'the', 'id', 'and', 'weight', 'of', 'all', 'pets', 'whose', 'age', 'is', 'older', 'than', '1', '.']",
    "sql": "{'from': {'table_units': [['table_unit', 2]], 'conds': []}, 'select': [False, [[0, [0, [0, 11, False], None]], [0, [0, [0, 14, False], None]]]], 'where': [[False, 3, [0, [0, 13, False], None], 1.0, None]], 'groupBy': [], 'having': [], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "pets_1",
    "query": "SELECT petid ,  weight FROM pets WHERE pet_age  >  1",
    "query_toks": "['SELECT', 'petid', ',', 'weight', 'FROM', 'pets', 'WHERE', 'pet_age', '>', '1']",
    "query_toks_no_value": "['select', 'petid', ',', 'weight', 'from', 'pets', 'where', 'pet_age', '>', 'value']",
    "question": "What is the id and weight of every pet who is older than 1?",
    "question_th": "รหัสและน้ำหนักของสัตว์เลี้ยงทุกตัวที่มีอายุมากกว่า 1 ปีคือเท่าไร?",
    "question_toks": "['What', 'is', 'the', 'id', 'and', 'weight', 'of', 'every', 'pet', 'who', 'is', 'older', 'than', '1', '?']",
    "sql": "{'from': {'table_units': [['table_unit', 2]], 'conds': []}, 'select': [False, [[0, [0, [0, 11, False], None]], [0, [0, [0, 14, False], None]]]], 'where': [[False, 3, [0, [0, 13, False], None], 1.0, None]], 'groupBy': [], 'having': [], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "pets_1",
    "query": "SELECT avg(pet_age) ,  max(pet_age) ,  pettype FROM pets GROUP BY pettype",
    "query_toks": "['SELECT', 'avg', '(', 'pet_age', ')', ',', 'max', '(', 'pet_age', ')', ',', 'pettype', 'FROM', 'pets', 'GROUP', 'BY', 'pettype']",
    "query_toks_no_value": "['select', 'avg', '(', 'pet_age', ')', ',', 'max', '(', 'pet_age', ')', ',', 'pettype', 'from', 'pets', 'group', 'by', 'pettype']",
    "question": "Find the average and maximum age for each type of pet.",
    "question_th": "ค้นหาอายุเฉลี่ยและอายุสูงสุดสำหรับสัตว์เลี้ยงแต่ละประเภท",
    "question_toks": "['Find', 'the', 'average', 'and', 'maximum', 'age', 'for', 'each', 'type', 'of', 'pet', '.']",
    "sql": "{'from': {'table_units': [['table_unit', 2]], 'conds': []}, 'select': [False, [[5, [0, [0, 13, False], None]], [1, [0, [0, 13, False], None]], [0, [0, [0, 12, False], None]]]], 'where': [], 'groupBy': [[0, 12, False]], 'having': [], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "pets_1",
    "query": "SELECT avg(pet_age) ,  max(pet_age) ,  pettype FROM pets GROUP BY pettype",
    "query_toks": "['SELECT', 'avg', '(', 'pet_age', ')', ',', 'max', '(', 'pet_age', ')', ',', 'pettype', 'FROM', 'pets', 'GROUP', 'BY', 'pettype']",
    "query_toks_no_value": "['select', 'avg', '(', 'pet_age', ')', ',', 'max', '(', 'pet_age', ')', ',', 'pettype', 'from', 'pets', 'group', 'by', 'pettype']",
    "question": "What is the average and maximum age for each pet type?",
    "question_th": "สัตว์เลี้ยงแต่ละประเภทอายุเฉลี่ยและสูงสุดคือเท่าไร?",
    "question_toks": "['What', 'is', 'the', 'average', 'and', 'maximum', 'age', 'for', 'each', 'pet', 'type', '?']",
    "sql": "{'from': {'table_units': [['table_unit', 2]], 'conds': []}, 'select': [False, [[5, [0, [0, 13, False], None]], [1, [0, [0, 13, False], None]], [0, [0, [0, 12, False], None]]]], 'where': [], 'groupBy': [[0, 12, False]], 'having': [], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "pets_1",
    "query": "SELECT avg(weight) ,  pettype FROM pets GROUP BY pettype",
    "query_toks": "['SELECT', 'avg', '(', 'weight', ')', ',', 'pettype', 'FROM', 'pets', 'GROUP', 'BY', 'pettype']",
    "query_toks_no_value": "['select', 'avg', '(', 'weight', ')', ',', 'pettype', 'from', 'pets', 'group', 'by', 'pettype']",
    "question": "Find the average weight for each pet type.",
    "question_th": "ค้นหาน้ำหนักเฉลี่ยของสัตว์เลี้ยงแต่ละประเภท",
    "question_toks": "['Find', 'the', 'average', 'weight', 'for', 'each', 'pet', 'type', '.']",
    "sql": "{'from': {'table_units': [['table_unit', 2]], 'conds': []}, 'select': [False, [[5, [0, [0, 14, False], None]], [0, [0, [0, 12, False], None]]]], 'where': [], 'groupBy': [[0, 12, False]], 'having': [], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "pets_1",
    "query": "SELECT avg(weight) ,  pettype FROM pets GROUP BY pettype",
    "query_toks": "['SELECT', 'avg', '(', 'weight', ')', ',', 'pettype', 'FROM', 'pets', 'GROUP', 'BY', 'pettype']",
    "query_toks_no_value": "['select', 'avg', '(', 'weight', ')', ',', 'pettype', 'from', 'pets', 'group', 'by', 'pettype']",
    "question": "What is the average weight for each type of pet?",
    "question_th": "น้ำหนักเฉลี่ยของสัตว์เลี้ยงแต่ละประเภทคือเท่าไร?",
    "question_toks": "['What', 'is', 'the', 'average', 'weight', 'for', 'each', 'type', 'of', 'pet', '?']",
    "sql": "{'from': {'table_units': [['table_unit', 2]], 'conds': []}, 'select': [False, [[5, [0, [0, 14, False], None]], [0, [0, [0, 12, False], None]]]], 'where': [], 'groupBy': [[0, 12, False]], 'having': [], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "pets_1",
    "query": "SELECT DISTINCT T1.fname ,  T1.age FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid",
    "query_toks": "['SELECT', 'DISTINCT', 'T1.fname', ',', 'T1.age', 'FROM', 'student', 'AS', 'T1', 'JOIN', 'has_pet', 'AS', 'T2', 'ON', 'T1.stuid', '=', 'T2.stuid']",
    "query_toks_no_value": "['select', 'distinct', 't1', '.', 'fname', ',', 't1', '.', 'age', 'from', 'student', 'as', 't1', 'join', 'has_pet', 'as', 't2', 'on', 't1', '.', 'stuid', '=', 't2', '.', 'stuid']",
    "question": "Find the first name and age of students who have a pet.",
    "question_th": "ค้นหาชื่อและอายุของนักเรียนที่มีสัตว์เลี้ยง",
    "question_toks": "['Find', 'the', 'first', 'name', 'and', 'age', 'of', 'students', 'who', 'have', 'a', 'pet', '.']",
    "sql": "{'from': {'table_units': [['table_unit', 0], ['table_unit', 1]], 'conds': [[False, 2, [0, [0, 1, False], None], [0, 9, False], None]]}, 'select': [True, [[0, [0, [0, 3, False], None]], [0, [0, [0, 4, False], None]]]], 'where': [], 'groupBy': [], 'having': [], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "pets_1",
    "query": "SELECT DISTINCT T1.fname ,  T1.age FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid",
    "query_toks": "['SELECT', 'DISTINCT', 'T1.fname', ',', 'T1.age', 'FROM', 'student', 'AS', 'T1', 'JOIN', 'has_pet', 'AS', 'T2', 'ON', 'T1.stuid', '=', 'T2.stuid']",
    "query_toks_no_value": "['select', 'distinct', 't1', '.', 'fname', ',', 't1', '.', 'age', 'from', 'student', 'as', 't1', 'join', 'has_pet', 'as', 't2', 'on', 't1', '.', 'stuid', '=', 't2', '.', 'stuid']",
    "question": "What are the different first names and ages of the students who do have pets?",
    "question_th": "ชื่อและอายุของนักเรียนที่มีสัตว์เลี้ยงแตกต่างกันอย่างไร",
    "question_toks": "['What', 'are', 'the', 'different', 'first', 'names', 'and', 'ages', 'of', 'the', 'students', 'who', 'do', 'have', 'pets', '?']",
    "sql": "{'from': {'table_units': [['table_unit', 0], ['table_unit', 1]], 'conds': [[False, 2, [0, [0, 1, False], None], [0, 9, False], None]]}, 'select': [True, [[0, [0, [0, 3, False], None]], [0, [0, [0, 4, False], None]]]], 'where': [], 'groupBy': [], 'having': [], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "pets_1",
    "query": "SELECT T2.petid FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid WHERE T1.Lname  =  'Smith'",
    "query_toks": "['SELECT', 'T2.petid', 'FROM', 'student', 'AS', 'T1', 'JOIN', 'has_pet', 'AS', 'T2', 'ON', 'T1.stuid', '=', 'T2.stuid', 'WHERE', 'T1.Lname', '=', \"'Smith\", \"'\"]",
    "query_toks_no_value": "['select', 't2', '.', 'petid', 'from', 'student', 'as', 't1', 'join', 'has_pet', 'as', 't2', 'on', 't1', '.', 'stuid', '=', 't2', '.', 'stuid', 'where', 't1', '.', 'lname', '=', 'value']",
    "question": "Find the id of the pet owned by student whose last name is ‘Smith’.",
    "question_th": "ค้นหารหัสสัตว์เลี้ยงของนักเรียนที่มีนามสกุล 'Smith'",
    "question_toks": "['Find', 'the', 'id', 'of', 'the', 'pet', 'owned', 'by', 'student', 'whose', 'last', 'name', 'is', '‘Smith’', '.']",
    "sql": "{'from': {'table_units': [['table_unit', 0], ['table_unit', 1]], 'conds': [[False, 2, [0, [0, 1, False], None], [0, 9, False], None]]}, 'select': [False, [[0, [0, [0, 10, False], None]]]], 'where': [[False, 2, [0, [0, 2, False], None], '\"Smith\"', None]], 'groupBy': [], 'having': [], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "pets_1",
    "query": "SELECT T2.petid FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid WHERE T1.Lname  =  'Smith'",
    "query_toks": "['SELECT', 'T2.petid', 'FROM', 'student', 'AS', 'T1', 'JOIN', 'has_pet', 'AS', 'T2', 'ON', 'T1.stuid', '=', 'T2.stuid', 'WHERE', 'T1.Lname', '=', \"'Smith\", \"'\"]",
    "query_toks_no_value": "['select', 't2', '.', 'petid', 'from', 'student', 'as', 't1', 'join', 'has_pet', 'as', 't2', 'on', 't1', '.', 'stuid', '=', 't2', '.', 'stuid', 'where', 't1', '.', 'lname', '=', 'value']",
    "question": "What is the id of the pet owned by the student whose last name is 'Smith'?",
    "question_th": "รหัสของสัตว์เลี้ยงของนักเรียนที่มีนามสกุล 'สมิธ' คืออะไร?",
    "question_toks": "['What', 'is', 'the', 'id', 'of', 'the', 'pet', 'owned', 'by', 'the', 'student', 'whose', 'last', 'name', 'is', \"'Smith\", \"'\", '?']",
    "sql": "{'from': {'table_units': [['table_unit', 0], ['table_unit', 1]], 'conds': [[False, 2, [0, [0, 1, False], None], [0, 9, False], None]]}, 'select': [False, [[0, [0, [0, 10, False], None]]]], 'where': [[False, 2, [0, [0, 2, False], None], '\"Smith\"', None]], 'groupBy': [], 'having': [], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "pets_1",
    "query": "SELECT count(*) ,  T1.stuid FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid GROUP BY T1.stuid",
    "query_toks": "['SELECT', 'count', '(', '*', ')', ',', 'T1.stuid', 'FROM', 'student', 'AS', 'T1', 'JOIN', 'has_pet', 'AS', 'T2', 'ON', 'T1.stuid', '=', 'T2.stuid', 'GROUP', 'BY', 'T1.stuid']",
    "query_toks_no_value": "['select', 'count', '(', '*', ')', ',', 't1', '.', 'stuid', 'from', 'student', 'as', 't1', 'join', 'has_pet', 'as', 't2', 'on', 't1', '.', 'stuid', '=', 't2', '.', 'stuid', 'group', 'by', 't1', '.', 'stuid']",
    "question": "Find the number of pets for each student who has any pet and student id.",
    "question_th": "ค้นหาจำนวนสัตว์เลี้ยงของนักเรียนแต่ละคนที่มีสัตว์เลี้ยงและรหัสนักเรียน",
    "question_toks": "['Find', 'the', 'number', 'of', 'pets', 'for', 'each', 'student', 'who', 'has', 'any', 'pet', 'and', 'student', 'id', '.']",
    "sql": "{'from': {'table_units': [['table_unit', 0], ['table_unit', 1]], 'conds': [[False, 2, [0, [0, 1, False], None], [0, 9, False], None]]}, 'select': [False, [[3, [0, [0, 0, False], None]], [0, [0, [0, 1, False], None]]]], 'where': [], 'groupBy': [[0, 1, False]], 'having': [], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "pets_1",
    "query": "select count(*) ,  t1.stuid from student as t1 join has_pet as t2 on t1.stuid  =  t2.stuid group by t1.stuid",
    "query_toks": "['select', 'count', '(', '*', ')', ',', 't1.stuid', 'from', 'student', 'as', 't1', 'join', 'has_pet', 'as', 't2', 'on', 't1.stuid', '=', 't2.stuid', 'group', 'by', 't1.stuid']",
    "query_toks_no_value": "['select', 'count', '(', '*', ')', ',', 't1', '.', 'stuid', 'from', 'student', 'as', 't1', 'join', 'has_pet', 'as', 't2', 'on', 't1', '.', 'stuid', '=', 't2', '.', 'stuid', 'group', 'by', 't1', '.', 'stuid']",
    "question": "For students who have pets , how many pets does each student have ? list their ids instead of names .",
    "question_th": "สำหรับนักเรียนที่มีสัตว์เลี้ยง นักเรียนแต่ละคนมีสัตว์เลี้ยงกี่ตัว ? แสดงรายการรหัสแทนชื่อ",
    "question_toks": "['For', 'students', 'who', 'have', 'pets', ',', 'how', 'many', 'pets', 'does', 'each', 'student', 'have', '?', 'list', 'their', 'ids', 'instead', 'of', 'names', '.']",
    "sql": "{'from': {'table_units': [['table_unit', 0], ['table_unit', 1]], 'conds': [[False, 2, [0, [0, 1, False], None], [0, 9, False], None]]}, 'select': [False, [[3, [0, [0, 0, False], None]], [0, [0, [0, 1, False], None]]]], 'where': [], 'groupBy': [[0, 1, False]], 'having': [], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "pets_1",
    "query": "SELECT T1.fname ,  T1.sex FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid GROUP BY T1.stuid HAVING count(*)  >  1",
    "query_toks": "['SELECT', 'T1.fname', ',', 'T1.sex', 'FROM', 'student', 'AS', 'T1', 'JOIN', 'has_pet', 'AS', 'T2', 'ON', 'T1.stuid', '=', 'T2.stuid', 'GROUP', 'BY', 'T1.stuid', 'HAVING', 'count', '(', '*', ')', '>', '1']",
    "query_toks_no_value": "['select', 't1', '.', 'fname', ',', 't1', '.', 'sex', 'from', 'student', 'as', 't1', 'join', 'has_pet', 'as', 't2', 'on', 't1', '.', 'stuid', '=', 't2', '.', 'stuid', 'group', 'by', 't1', '.', 'stuid', 'having', 'count', '(', '*', ')', '>', 'value']",
    "question": "Find the first name and gender of student who have more than one pet.",
    "question_th": "ค้นหาชื่อและเพศของนักเรียนที่มีสัตว์เลี้ยงมากกว่าหนึ่งตัว",
    "question_toks": "['Find', 'the', 'first', 'name', 'and', 'gender', 'of', 'student', 'who', 'have', 'more', 'than', 'one', 'pet', '.']",
    "sql": "{'from': {'table_units': [['table_unit', 0], ['table_unit', 1]], 'conds': [[False, 2, [0, [0, 1, False], None], [0, 9, False], None]]}, 'select': [False, [[0, [0, [0, 3, False], None]], [0, [0, [0, 5, False], None]]]], 'where': [], 'groupBy': [[0, 1, False]], 'having': [[False, 3, [0, [3, 0, False], None], 1.0, None]], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "pets_1",
    "query": "SELECT T1.fname ,  T1.sex FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid GROUP BY T1.stuid HAVING count(*)  >  1",
    "query_toks": "['SELECT', 'T1.fname', ',', 'T1.sex', 'FROM', 'student', 'AS', 'T1', 'JOIN', 'has_pet', 'AS', 'T2', 'ON', 'T1.stuid', '=', 'T2.stuid', 'GROUP', 'BY', 'T1.stuid', 'HAVING', 'count', '(', '*', ')', '>', '1']",
    "query_toks_no_value": "['select', 't1', '.', 'fname', ',', 't1', '.', 'sex', 'from', 'student', 'as', 't1', 'join', 'has_pet', 'as', 't2', 'on', 't1', '.', 'stuid', '=', 't2', '.', 'stuid', 'group', 'by', 't1', '.', 'stuid', 'having', 'count', '(', '*', ')', '>', 'value']",
    "question": "What is the first name and gender of the all the students who have more than one pet?",
    "question_th": "ชื่อและเพศของนักเรียนทุกคนที่มีสัตว์เลี้ยงมากกว่าหนึ่งตัวคืออะไร?",
    "question_toks": "['What', 'is', 'the', 'first', 'name', 'and', 'gender', 'of', 'the', 'all', 'the', 'students', 'who', 'have', 'more', 'than', 'one', 'pet', '?']",
    "sql": "{'from': {'table_units': [['table_unit', 0], ['table_unit', 1]], 'conds': [[False, 2, [0, [0, 1, False], None], [0, 9, False], None]]}, 'select': [False, [[0, [0, [0, 3, False], None]], [0, [0, [0, 5, False], None]]]], 'where': [], 'groupBy': [[0, 1, False]], 'having': [[False, 3, [0, [3, 0, False], None], 1.0, None]], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "pets_1",
    "query": "SELECT T1.lname FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pet_age  =  3 AND T3.pettype  =  'cat'",
    "query_toks": "['SELECT', 'T1.lname', 'FROM', 'student', 'AS', 'T1', 'JOIN', 'has_pet', 'AS', 'T2', 'ON', 'T1.stuid', '=', 'T2.stuid', 'JOIN', 'pets', 'AS', 'T3', 'ON', 'T3.petid', '=', 'T2.petid', 'WHERE', 'T3.pet_age', '=', '3', 'AND', 'T3.pettype', '=', \"'cat\", \"'\"]",
    "query_toks_no_value": "['select', 't1', '.', 'lname', 'from', 'student', 'as', 't1', 'join', 'has_pet', 'as', 't2', 'on', 't1', '.', 'stuid', '=', 't2', '.', 'stuid', 'join', 'pets', 'as', 't3', 'on', 't3', '.', 'petid', '=', 't2', '.', 'petid', 'where', 't3', '.', 'pet_age', '=', 'value', 'and', 't3', '.', 'pettype', '=', 'value']",
    "question": "Find the last name of the student who has a cat that is age 3.",
    "question_th": "ค้นหานามสกุลของนักเรียนที่มีแมวอายุ 3 ปี",
    "question_toks": "['Find', 'the', 'last', 'name', 'of', 'the', 'student', 'who', 'has', 'a', 'cat', 'that', 'is', 'age', '3', '.']",
    "sql": "{'from': {'table_units': [['table_unit', 0], ['table_unit', 1], ['table_unit', 2]], 'conds': [[False, 2, [0, [0, 1, False], None], [0, 9, False], None], 'and', [False, 2, [0, [0, 11, False], None], [0, 10, False], None]]}, 'select': [False, [[0, [0, [0, 2, False], None]]]], 'where': [[False, 2, [0, [0, 13, False], None], 3.0, None], 'and', [False, 2, [0, [0, 12, False], None], '\"cat\"', None]], 'groupBy': [], 'having': [], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "pets_1",
    "query": "SELECT T1.lname FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pet_age  =  3 AND T3.pettype  =  'cat'",
    "query_toks": "['SELECT', 'T1.lname', 'FROM', 'student', 'AS', 'T1', 'JOIN', 'has_pet', 'AS', 'T2', 'ON', 'T1.stuid', '=', 'T2.stuid', 'JOIN', 'pets', 'AS', 'T3', 'ON', 'T3.petid', '=', 'T2.petid', 'WHERE', 'T3.pet_age', '=', '3', 'AND', 'T3.pettype', '=', \"'cat\", \"'\"]",
    "query_toks_no_value": "['select', 't1', '.', 'lname', 'from', 'student', 'as', 't1', 'join', 'has_pet', 'as', 't2', 'on', 't1', '.', 'stuid', '=', 't2', '.', 'stuid', 'join', 'pets', 'as', 't3', 'on', 't3', '.', 'petid', '=', 't2', '.', 'petid', 'where', 't3', '.', 'pet_age', '=', 'value', 'and', 't3', '.', 'pettype', '=', 'value']",
    "question": "What is the last name of the student who has a cat that is 3 years old?",
    "question_th": "นามสกุลของนักเรียนที่มีแมวอายุ 3 ปีคืออะไร?",
    "question_toks": "['What', 'is', 'the', 'last', 'name', 'of', 'the', 'student', 'who', 'has', 'a', 'cat', 'that', 'is', '3', 'years', 'old', '?']",
    "sql": "{'from': {'table_units': [['table_unit', 0], ['table_unit', 1], ['table_unit', 2]], 'conds': [[False, 2, [0, [0, 1, False], None], [0, 9, False], None], 'and', [False, 2, [0, [0, 11, False], None], [0, 10, False], None]]}, 'select': [False, [[0, [0, [0, 2, False], None]]]], 'where': [[False, 2, [0, [0, 13, False], None], 3.0, None], 'and', [False, 2, [0, [0, 12, False], None], '\"cat\"', None]], 'groupBy': [], 'having': [], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "pets_1",
    "query": "select avg(age) from student where stuid not in (select stuid from has_pet)",
    "query_toks": "['select', 'avg', '(', 'age', ')', 'from', 'student', 'where', 'stuid', 'not', 'in', '(', 'select', 'stuid', 'from', 'has_pet', ')']",
    "query_toks_no_value": "['select', 'avg', '(', 'age', ')', 'from', 'student', 'where', 'stuid', 'not', 'in', '(', 'select', 'stuid', 'from', 'has_pet', ')']",
    "question": "Find the average age of students who do not have any pet .",
    "question_th": "จงหาอายุเฉลี่ยของนักเรียนที่ไม่มีสัตว์เลี้ยง",
    "question_toks": "['Find', 'the', 'average', 'age', 'of', 'students', 'who', 'do', 'not', 'have', 'any', 'pet', '.']",
    "sql": "{'from': {'table_units': [['table_unit', 0]], 'conds': []}, 'select': [False, [[5, [0, [0, 4, False], None]]]], 'where': [[True, 8, [0, [0, 1, False], None], {'from': {'table_units': [['table_unit', 1]], 'conds': []}, 'select': [False, [[0, [0, [0, 9, False], None]]]], 'where': [], 'groupBy': [], 'having': [], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}, None]], 'groupBy': [], 'having': [], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "pets_1",
    "query": "select avg(age) from student where stuid not in (select stuid from has_pet)",
    "query_toks": "['select', 'avg', '(', 'age', ')', 'from', 'student', 'where', 'stuid', 'not', 'in', '(', 'select', 'stuid', 'from', 'has_pet', ')']",
    "query_toks_no_value": "['select', 'avg', '(', 'age', ')', 'from', 'student', 'where', 'stuid', 'not', 'in', '(', 'select', 'stuid', 'from', 'has_pet', ')']",
    "question": "What is the average age for all students who do not own any pets ?",
    "question_th": "อายุเฉลี่ยของนักเรียนทุกคนที่ไม่มีสัตว์เลี้ยงคือเท่าไร ?",
    "question_toks": "['What', 'is', 'the', 'average', 'age', 'for', 'all', 'students', 'who', 'do', 'not', 'own', 'any', 'pets', '?']",
    "sql": "{'from': {'table_units': [['table_unit', 0]], 'conds': []}, 'select': [False, [[5, [0, [0, 4, False], None]]]], 'where': [[True, 8, [0, [0, 1, False], None], {'from': {'table_units': [['table_unit', 1]], 'conds': []}, 'select': [False, [[0, [0, [0, 9, False], None]]]], 'where': [], 'groupBy': [], 'having': [], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}, None]], 'groupBy': [], 'having': [], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "car_1",
    "query": "SELECT count(*) FROM CONTINENTS;",
    "query_toks": "['SELECT', 'count', '(', '*', ')', 'FROM', 'CONTINENTS', ';']",
    "query_toks_no_value": "['select', 'count', '(', '*', ')', 'from', 'continents']",
    "question": "How many continents are there?",
    "question_th": "มีกี่ทวีป?",
    "question_toks": "['How', 'many', 'continents', 'are', 'there', '?']",
    "sql": "{'from': {'table_units': [['table_unit', 0]], 'conds': []}, 'select': [False, [[3, [0, [0, 0, False], None]]]], 'where': [], 'groupBy': [], 'having': [], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "car_1",
    "query": "SELECT count(*) FROM CONTINENTS;",
    "query_toks": "['SELECT', 'count', '(', '*', ')', 'FROM', 'CONTINENTS', ';']",
    "query_toks_no_value": "['select', 'count', '(', '*', ')', 'from', 'continents']",
    "question": "What is the number of continents?",
    "question_th": "มีจำนวนทวีปเท่าไร?",
    "question_toks": "['What', 'is', 'the', 'number', 'of', 'continents', '?']",
    "sql": "{'from': {'table_units': [['table_unit', 0]], 'conds': []}, 'select': [False, [[3, [0, [0, 0, False], None]]]], 'where': [], 'groupBy': [], 'having': [], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "car_1",
    "query": "SELECT T1.ContId ,  T1.Continent ,  count(*) FROM CONTINENTS AS T1 JOIN COUNTRIES AS T2 ON T1.ContId  =  T2.Continent GROUP BY T1.ContId;",
    "query_toks": "['SELECT', 'T1.ContId', ',', 'T1.Continent', ',', 'count', '(', '*', ')', 'FROM', 'CONTINENTS', 'AS', 'T1', 'JOIN', 'COUNTRIES', 'AS', 'T2', 'ON', 'T1.ContId', '=', 'T2.Continent', 'GROUP', 'BY', 'T1.ContId', ';']",
    "query_toks_no_value": "['select', 't1', '.', 'contid', ',', 't1', '.', 'continent', ',', 'count', '(', '*', ')', 'from', 'continents', 'as', 't1', 'join', 'countries', 'as', 't2', 'on', 't1', '.', 'contid', '=', 't2', '.', 'continent', 'group', 'by', 't1', '.', 'contid']",
    "question": "How many countries does each continent have? List the continent id, continent name and the number of countries.",
    "question_th": "แต่ละทวีปมีกี่ประเทศ? ระบุรหัสทวีป ชื่อทวีป และจำนวนประเทศ",
    "question_toks": "['How', 'many', 'countries', 'does', 'each', 'continent', 'have', '?', 'List', 'the', 'continent', 'id', ',', 'continent', 'name', 'and', 'the', 'number', 'of', 'countries', '.']",
    "sql": "{'from': {'table_units': [['table_unit', 0], ['table_unit', 1]], 'conds': [[False, 2, [0, [0, 1, False], None], [0, 5, False], None]]}, 'select': [False, [[0, [0, [0, 1, False], None]], [0, [0, [0, 2, False], None]], [3, [0, [0, 0, False], None]]]], 'where': [], 'groupBy': [[0, 1, False]], 'having': [], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "car_1",
    "query": "SELECT T1.ContId ,  T1.Continent ,  count(*) FROM CONTINENTS AS T1 JOIN COUNTRIES AS T2 ON T1.ContId  =  T2.Continent GROUP BY T1.ContId;",
    "query_toks": "['SELECT', 'T1.ContId', ',', 'T1.Continent', ',', 'count', '(', '*', ')', 'FROM', 'CONTINENTS', 'AS', 'T1', 'JOIN', 'COUNTRIES', 'AS', 'T2', 'ON', 'T1.ContId', '=', 'T2.Continent', 'GROUP', 'BY', 'T1.ContId', ';']",
    "query_toks_no_value": "['select', 't1', '.', 'contid', ',', 't1', '.', 'continent', ',', 'count', '(', '*', ')', 'from', 'continents', 'as', 't1', 'join', 'countries', 'as', 't2', 'on', 't1', '.', 'contid', '=', 't2', '.', 'continent', 'group', 'by', 't1', '.', 'contid']",
    "question": "For each continent, list its id, name, and how many countries it has?",
    "question_th": "สำหรับแต่ละทวีป ให้ระบุรหัส ชื่อ และจำนวนประเทศที่มีอยู่",
    "question_toks": "['For', 'each', 'continent', ',', 'list', 'its', 'id', ',', 'name', ',', 'and', 'how', 'many', 'countries', 'it', 'has', '?']",
    "sql": "{'from': {'table_units': [['table_unit', 0], ['table_unit', 1]], 'conds': [[False, 2, [0, [0, 1, False], None], [0, 5, False], None]]}, 'select': [False, [[0, [0, [0, 1, False], None]], [0, [0, [0, 2, False], None]], [3, [0, [0, 0, False], None]]]], 'where': [], 'groupBy': [[0, 1, False]], 'having': [], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "car_1",
    "query": "SELECT count(*) FROM COUNTRIES;",
    "query_toks": "['SELECT', 'count', '(', '*', ')', 'FROM', 'COUNTRIES', ';']",
    "query_toks_no_value": "['select', 'count', '(', '*', ')', 'from', 'countries']",
    "question": "How many countries are listed?",
    "question_th": "มีรายชื่อกี่ประเทศ?",
    "question_toks": "['How', 'many', 'countries', 'are', 'listed', '?']",
    "sql": "{'from': {'table_units': [['table_unit', 1]], 'conds': []}, 'select': [False, [[3, [0, [0, 0, False], None]]]], 'where': [], 'groupBy': [], 'having': [], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "car_1",
    "query": "SELECT count(*) FROM COUNTRIES;",
    "query_toks": "['SELECT', 'count', '(', '*', ')', 'FROM', 'COUNTRIES', ';']",
    "query_toks_no_value": "['select', 'count', '(', '*', ')', 'from', 'countries']",
    "question": "How many countries exist?",
    "question_th": "มีกี่ประเทศ?",
    "question_toks": "['How', 'many', 'countries', 'exist', '?']",
    "sql": "{'from': {'table_units': [['table_unit', 1]], 'conds': []}, 'select': [False, [[3, [0, [0, 0, False], None]]]], 'where': [], 'groupBy': [], 'having': [], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "car_1",
    "query": "SELECT T1.FullName ,  T1.Id ,  count(*) FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id  =  T2.Maker GROUP BY T1.Id;",
    "query_toks": "['SELECT', 'T1.FullName', ',', 'T1.Id', ',', 'count', '(', '*', ')', 'FROM', 'CAR_MAKERS', 'AS', 'T1', 'JOIN', 'MODEL_LIST', 'AS', 'T2', 'ON', 'T1.Id', '=', 'T2.Maker', 'GROUP', 'BY', 'T1.Id', ';']",
    "query_toks_no_value": "['select', 't1', '.', 'fullname', ',', 't1', '.', 'id', ',', 'count', '(', '*', ')', 'from', 'car_makers', 'as', 't1', 'join', 'model_list', 'as', 't2', 'on', 't1', '.', 'id', '=', 't2', '.', 'maker', 'group', 'by', 't1', '.', 'id']",
    "question": "How many models does each car maker produce? List maker full name, id and the number.",
    "question_th": "ผู้ผลิตรถยนต์แต่ละรายผลิตรถยนต์ได้กี่รุ่น? ผู้สร้างรายการชื่อเต็ม ID และหมายเลข",
    "question_toks": "['How', 'many', 'models', 'does', 'each', 'car', 'maker', 'produce', '?', 'List', 'maker', 'full', 'name', ',', 'id', 'and', 'the', 'number', '.']",
    "sql": "{'from': {'table_units': [['table_unit', 2], ['table_unit', 3]], 'conds': [[False, 2, [0, [0, 6, False], None], [0, 11, False], None]]}, 'select': [False, [[0, [0, [0, 8, False], None]], [0, [0, [0, 6, False], None]], [3, [0, [0, 0, False], None]]]], 'where': [], 'groupBy': [[0, 6, False]], 'having': [], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "car_1",
    "query": "SELECT T1.FullName ,  T1.Id ,  count(*) FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id  =  T2.Maker GROUP BY T1.Id;",
    "query_toks": "['SELECT', 'T1.FullName', ',', 'T1.Id', ',', 'count', '(', '*', ')', 'FROM', 'CAR_MAKERS', 'AS', 'T1', 'JOIN', 'MODEL_LIST', 'AS', 'T2', 'ON', 'T1.Id', '=', 'T2.Maker', 'GROUP', 'BY', 'T1.Id', ';']",
    "query_toks_no_value": "['select', 't1', '.', 'fullname', ',', 't1', '.', 'id', ',', 'count', '(', '*', ')', 'from', 'car_makers', 'as', 't1', 'join', 'model_list', 'as', 't2', 'on', 't1', '.', 'id', '=', 't2', '.', 'maker', 'group', 'by', 't1', '.', 'id']",
    "question": "What is the full name of each car maker, along with its id and how many models it produces?",
    "question_th": "ผู้ผลิตรถยนต์แต่ละรายชื่อเต็มว่าอะไร พร้อมด้วยรหัส และผลิตรถยนต์จำนวนกี่รุ่น",
    "question_toks": "['What', 'is', 'the', 'full', 'name', 'of', 'each', 'car', 'maker', ',', 'along', 'with', 'its', 'id', 'and', 'how', 'many', 'models', 'it', 'produces', '?']",
    "sql": "{'from': {'table_units': [['table_unit', 2], ['table_unit', 3]], 'conds': [[False, 2, [0, [0, 6, False], None], [0, 11, False], None]]}, 'select': [False, [[0, [0, [0, 8, False], None]], [0, [0, [0, 6, False], None]], [3, [0, [0, 0, False], None]]]], 'where': [], 'groupBy': [[0, 6, False]], 'having': [], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "car_1",
    "query": "SELECT T1.Model FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id ORDER BY T2.horsepower ASC LIMIT 1;",
    "query_toks": "['SELECT', 'T1.Model', 'FROM', 'CAR_NAMES', 'AS', 'T1', 'JOIN', 'CARS_DATA', 'AS', 'T2', 'ON', 'T1.MakeId', '=', 'T2.Id', 'ORDER', 'BY', 'T2.horsepower', 'ASC', 'LIMIT', '1', ';']",
    "query_toks_no_value": "['select', 't1', '.', 'model', 'from', 'car_names', 'as', 't1', 'join', 'cars_data', 'as', 't2', 'on', 't1', '.', 'makeid', '=', 't2', '.', 'id', 'order', 'by', 't2', '.', 'horsepower', 'asc', 'limit', 'value']",
    "question": "Which model of the car has the minimum horsepower?",
    "question_th": "รถรุ่นไหนมีแรงม้าขั้นต่ำ?",
    "question_toks": "['Which', 'model', 'of', 'the', 'car', 'has', 'the', 'minimum', 'horsepower', '?']",
    "sql": "{'from': {'table_units': [['table_unit', 4], ['table_unit', 5]], 'conds': [[False, 2, [0, [0, 13, False], None], [0, 16, False], None]]}, 'select': [False, [[0, [0, [0, 14, False], None]]]], 'where': [], 'groupBy': [], 'having': [], 'orderBy': ['asc', [[0, [0, 20, False], None]]], 'limit': 1, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "car_1",
    "query": "SELECT T1.Model FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id ORDER BY T2.horsepower ASC LIMIT 1;",
    "query_toks": "['SELECT', 'T1.Model', 'FROM', 'CAR_NAMES', 'AS', 'T1', 'JOIN', 'CARS_DATA', 'AS', 'T2', 'ON', 'T1.MakeId', '=', 'T2.Id', 'ORDER', 'BY', 'T2.horsepower', 'ASC', 'LIMIT', '1', ';']",
    "query_toks_no_value": "['select', 't1', '.', 'model', 'from', 'car_names', 'as', 't1', 'join', 'cars_data', 'as', 't2', 'on', 't1', '.', 'makeid', '=', 't2', '.', 'id', 'order', 'by', 't2', '.', 'horsepower', 'asc', 'limit', 'value']",
    "question": "What is the model of the car with the smallest amount of horsepower?",
    "question_th": "รถรุ่นอะไรที่มีแรงม้าน้อยที่สุดคือรุ่นอะไรครับ?",
    "question_toks": "['What', 'is', 'the', 'model', 'of', 'the', 'car', 'with', 'the', 'smallest', 'amount', 'of', 'horsepower', '?']",
    "sql": "{'from': {'table_units': [['table_unit', 4], ['table_unit', 5]], 'conds': [[False, 2, [0, [0, 13, False], None], [0, 16, False], None]]}, 'select': [False, [[0, [0, [0, 14, False], None]]]], 'where': [], 'groupBy': [], 'having': [], 'orderBy': ['asc', [[0, [0, 20, False], None]]], 'limit': 1, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "car_1",
    "query": "SELECT T1.model FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id WHERE T2.Weight  <  (SELECT avg(Weight) FROM CARS_DATA)",
    "query_toks": "['SELECT', 'T1.model', 'FROM', 'CAR_NAMES', 'AS', 'T1', 'JOIN', 'CARS_DATA', 'AS', 'T2', 'ON', 'T1.MakeId', '=', 'T2.Id', 'WHERE', 'T2.Weight', '<', '(', 'SELECT', 'avg', '(', 'Weight', ')', 'FROM', 'CARS_DATA', ')']",
    "query_toks_no_value": "['select', 't1', '.', 'model', 'from', 'car_names', 'as', 't1', 'join', 'cars_data', 'as', 't2', 'on', 't1', '.', 'makeid', '=', 't2', '.', 'id', 'where', 't2', '.', 'weight', '<', '(', 'select', 'avg', '(', 'weight', ')', 'from', 'cars_data', ')']",
    "question": "Find the model of the car whose weight is below the average weight.",
    "question_th": "ค้นหารุ่นรถที่มีน้ำหนักต่ำกว่าน้ำหนักเฉลี่ย",
    "question_toks": "['Find', 'the', 'model', 'of', 'the', 'car', 'whose', 'weight', 'is', 'below', 'the', 'average', 'weight', '.']",
    "sql": "{'from': {'table_units': [['table_unit', 4], ['table_unit', 5]], 'conds': [[False, 2, [0, [0, 13, False], None], [0, 16, False], None]]}, 'select': [False, [[0, [0, [0, 14, False], None]]]], 'where': [[False, 4, [0, [0, 21, False], None], {'from': {'table_units': [['table_unit', 5]], 'conds': []}, 'select': [False, [[5, [0, [0, 21, False], None]]]], 'where': [], 'groupBy': [], 'having': [], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}, None]], 'groupBy': [], 'having': [], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "car_1",
    "query": "SELECT T1.model FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id WHERE T2.Weight  <  (SELECT avg(Weight) FROM CARS_DATA)",
    "query_toks": "['SELECT', 'T1.model', 'FROM', 'CAR_NAMES', 'AS', 'T1', 'JOIN', 'CARS_DATA', 'AS', 'T2', 'ON', 'T1.MakeId', '=', 'T2.Id', 'WHERE', 'T2.Weight', '<', '(', 'SELECT', 'avg', '(', 'Weight', ')', 'FROM', 'CARS_DATA', ')']",
    "query_toks_no_value": "['select', 't1', '.', 'model', 'from', 'car_names', 'as', 't1', 'join', 'cars_data', 'as', 't2', 'on', 't1', '.', 'makeid', '=', 't2', '.', 'id', 'where', 't2', '.', 'weight', '<', '(', 'select', 'avg', '(', 'weight', ')', 'from', 'cars_data', ')']",
    "question": "What is the model for the car with a weight smaller than the average?",
    "question_th": "รถที่มีน้ำหนักน้อยกว่าค่าเฉลี่ยคือรุ่นอะไร?",
    "question_toks": "['What', 'is', 'the', 'model', 'for', 'the', 'car', 'with', 'a', 'weight', 'smaller', 'than', 'the', 'average', '?']",
    "sql": "{'from': {'table_units': [['table_unit', 4], ['table_unit', 5]], 'conds': [[False, 2, [0, [0, 13, False], None], [0, 16, False], None]]}, 'select': [False, [[0, [0, [0, 14, False], None]]]], 'where': [[False, 4, [0, [0, 21, False], None], {'from': {'table_units': [['table_unit', 5]], 'conds': []}, 'select': [False, [[5, [0, [0, 21, False], None]]]], 'where': [], 'groupBy': [], 'having': [], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}, None]], 'groupBy': [], 'having': [], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "car_1",
    "query": "SELECT DISTINCT T1.Maker FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id  =  T2.Maker JOIN CAR_NAMES AS T3 ON T2.model  =  T3.model JOIN CARS_DATA AS T4 ON T3.MakeId  =  T4.id WHERE T4.year  =  '1970';",
    "query_toks": "['SELECT', 'DISTINCT', 'T1.Maker', 'FROM', 'CAR_MAKERS', 'AS', 'T1', 'JOIN', 'MODEL_LIST', 'AS', 'T2', 'ON', 'T1.Id', '=', 'T2.Maker', 'JOIN', 'CAR_NAMES', 'AS', 'T3', 'ON', 'T2.model', '=', 'T3.model', 'JOIN', 'CARS_DATA', 'AS', 'T4', 'ON', 'T3.MakeId', '=', 'T4.id', 'WHERE', 'T4.year', '=', \"'1970\", \"'\", ';']",
    "query_toks_no_value": "['select', 'distinct', 't1', '.', 'maker', 'from', 'car_makers', 'as', 't1', 'join', 'model_list', 'as', 't2', 'on', 't1', '.', 'id', '=', 't2', '.', 'maker', 'join', 'car_names', 'as', 't3', 'on', 't2', '.', 'model', '=', 't3', '.', 'model', 'join', 'cars_data', 'as', 't4', 'on', 't3', '.', 'makeid', '=', 't4', '.', 'id', 'where', 't4', '.', 'year', '=', 'value']",
    "question": "Find the name of the makers that produced some cars in the year of 1970?",
    "question_th": "หาชื่อผู้ผลิตที่ผลิตรถยนต์บางคันในปี 1970 บ้างไหม?",
    "question_toks": "['Find', 'the', 'name', 'of', 'the', 'makers', 'that', 'produced', 'some', 'cars', 'in', 'the', 'year', 'of', '1970', '?']",
    "sql": "{'from': {'table_units': [['table_unit', 2], ['table_unit', 3], ['table_unit', 4], ['table_unit', 5]], 'conds': [[False, 2, [0, [0, 6, False], None], [0, 11, False], None], 'and', [False, 2, [0, [0, 12, False], None], [0, 14, False], None], 'and', [False, 2, [0, [0, 13, False], None], [0, 16, False], None]]}, 'select': [True, [[0, [0, [0, 7, False], None]]]], 'where': [[False, 2, [0, [0, 23, False], None], '\"1970\"', None]], 'groupBy': [], 'having': [], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "car_1",
    "query": "SELECT DISTINCT T1.Maker FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id  =  T2.Maker JOIN CAR_NAMES AS T3 ON T2.model  =  T3.model JOIN CARS_DATA AS T4 ON T3.MakeId  =  T4.id WHERE T4.year  =  '1970';",
    "query_toks": "['SELECT', 'DISTINCT', 'T1.Maker', 'FROM', 'CAR_MAKERS', 'AS', 'T1', 'JOIN', 'MODEL_LIST', 'AS', 'T2', 'ON', 'T1.Id', '=', 'T2.Maker', 'JOIN', 'CAR_NAMES', 'AS', 'T3', 'ON', 'T2.model', '=', 'T3.model', 'JOIN', 'CARS_DATA', 'AS', 'T4', 'ON', 'T3.MakeId', '=', 'T4.id', 'WHERE', 'T4.year', '=', \"'1970\", \"'\", ';']",
    "query_toks_no_value": "['select', 'distinct', 't1', '.', 'maker', 'from', 'car_makers', 'as', 't1', 'join', 'model_list', 'as', 't2', 'on', 't1', '.', 'id', '=', 't2', '.', 'maker', 'join', 'car_names', 'as', 't3', 'on', 't2', '.', 'model', '=', 't3', '.', 'model', 'join', 'cars_data', 'as', 't4', 'on', 't3', '.', 'makeid', '=', 't4', '.', 'id', 'where', 't4', '.', 'year', '=', 'value']",
    "question": "What is the name of the different car makers who produced a car in 1970?",
    "question_th": "ผู้ผลิตรถยนต์รายต่างๆ ที่ผลิตรถยนต์ในปี 1970 ชื่ออะไร",
    "question_toks": "['What', 'is', 'the', 'name', 'of', 'the', 'different', 'car', 'makers', 'who', 'produced', 'a', 'car', 'in', '1970', '?']",
    "sql": "{'from': {'table_units': [['table_unit', 2], ['table_unit', 3], ['table_unit', 4], ['table_unit', 5]], 'conds': [[False, 2, [0, [0, 6, False], None], [0, 11, False], None], 'and', [False, 2, [0, [0, 12, False], None], [0, 14, False], None], 'and', [False, 2, [0, [0, 13, False], None], [0, 16, False], None]]}, 'select': [True, [[0, [0, [0, 7, False], None]]]], 'where': [[False, 2, [0, [0, 23, False], None], '\"1970\"', None]], 'groupBy': [], 'having': [], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "car_1",
    "query": "SELECT T2.Make ,  T1.Year FROM CARS_DATA AS T1 JOIN CAR_NAMES AS T2 ON T1.Id  =  T2.MakeId WHERE T1.Year  =  (SELECT min(YEAR) FROM CARS_DATA);",
    "query_toks": "['SELECT', 'T2.Make', ',', 'T1.Year', 'FROM', 'CARS_DATA', 'AS', 'T1', 'JOIN', 'CAR_NAMES', 'AS', 'T2', 'ON', 'T1.Id', '=', 'T2.MakeId', 'WHERE', 'T1.Year', '=', '(', 'SELECT', 'min', '(', 'YEAR', ')', 'FROM', 'CARS_DATA', ')', ';']",
    "query_toks_no_value": "['select', 't2', '.', 'make', ',', 't1', '.', 'year', 'from', 'cars_data', 'as', 't1', 'join', 'car_names', 'as', 't2', 'on', 't1', '.', 'id', '=', 't2', '.', 'makeid', 'where', 't1', '.', 'year', '=', '(', 'select', 'min', '(', 'year', ')', 'from', 'cars_data', ')']",
    "question": "Find the make and production time of the cars that were produced in the earliest year?",
    "question_th": "ค้นหายี่ห้อและเวลาการผลิตของรถยนต์ที่ผลิตในปีแรกสุดหรือไม่?",
    "question_toks": "['Find', 'the', 'make', 'and', 'production', 'time', 'of', 'the', 'cars', 'that', 'were', 'produced', 'in', 'the', 'earliest', 'year', '?']",
    "sql": "{'from': {'table_units': [['table_unit', 5], ['table_unit', 4]], 'conds': [[False, 2, [0, [0, 16, False], None], [0, 13, False], None]]}, 'select': [False, [[0, [0, [0, 15, False], None]], [0, [0, [0, 23, False], None]]]], 'where': [[False, 2, [0, [0, 23, False], None], {'from': {'table_units': [['table_unit', 5]], 'conds': []}, 'select': [False, [[2, [0, [0, 23, False], None]]]], 'where': [], 'groupBy': [], 'having': [], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}, None]], 'groupBy': [], 'having': [], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "car_1",
    "query": "SELECT T2.Make ,  T1.Year FROM CARS_DATA AS T1 JOIN CAR_NAMES AS T2 ON T1.Id  =  T2.MakeId WHERE T1.Year  =  (SELECT min(YEAR) FROM CARS_DATA);",
    "query_toks": "['SELECT', 'T2.Make', ',', 'T1.Year', 'FROM', 'CARS_DATA', 'AS', 'T1', 'JOIN', 'CAR_NAMES', 'AS', 'T2', 'ON', 'T1.Id', '=', 'T2.MakeId', 'WHERE', 'T1.Year', '=', '(', 'SELECT', 'min', '(', 'YEAR', ')', 'FROM', 'CARS_DATA', ')', ';']",
    "query_toks_no_value": "['select', 't2', '.', 'make', ',', 't1', '.', 'year', 'from', 'cars_data', 'as', 't1', 'join', 'car_names', 'as', 't2', 'on', 't1', '.', 'id', '=', 't2', '.', 'makeid', 'where', 't1', '.', 'year', '=', '(', 'select', 'min', '(', 'year', ')', 'from', 'cars_data', ')']",
    "question": "What is the maker of the carr produced in the earliest year and what year was it?",
    "question_th": "รถคาร์ที่ผลิตในปีแรกสุดคือผู้ผลิตอะไร และปีไหน?",
    "question_toks": "['What', 'is', 'the', 'maker', 'of', 'the', 'carr', 'produced', 'in', 'the', 'earliest', 'year', 'and', 'what', 'year', 'was', 'it', '?']",
    "sql": "{'from': {'table_units': [['table_unit', 5], ['table_unit', 4]], 'conds': [[False, 2, [0, [0, 16, False], None], [0, 13, False], None]]}, 'select': [False, [[0, [0, [0, 15, False], None]], [0, [0, [0, 23, False], None]]]], 'where': [[False, 2, [0, [0, 23, False], None], {'from': {'table_units': [['table_unit', 5]], 'conds': []}, 'select': [False, [[2, [0, [0, 23, False], None]]]], 'where': [], 'groupBy': [], 'having': [], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}, None]], 'groupBy': [], 'having': [], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "car_1",
    "query": "SELECT DISTINCT T1.model FROM MODEL_LIST AS T1 JOIN CAR_NAMES AS T2 ON T1.model  =  T2.model JOIN CARS_DATA AS T3 ON T2.MakeId  =  T3.id WHERE T3.year  >  1980;",
    "query_toks": "['SELECT', 'DISTINCT', 'T1.model', 'FROM', 'MODEL_LIST', 'AS', 'T1', 'JOIN', 'CAR_NAMES', 'AS', 'T2', 'ON', 'T1.model', '=', 'T2.model', 'JOIN', 'CARS_DATA', 'AS', 'T3', 'ON', 'T2.MakeId', '=', 'T3.id', 'WHERE', 'T3.year', '>', '1980', ';']",
    "query_toks_no_value": "['select', 'distinct', 't1', '.', 'model', 'from', 'model_list', 'as', 't1', 'join', 'car_names', 'as', 't2', 'on', 't1', '.', 'model', '=', 't2', '.', 'model', 'join', 'cars_data', 'as', 't3', 'on', 't2', '.', 'makeid', '=', 't3', '.', 'id', 'where', 't3', '.', 'year', '>', 'value']",
    "question": "Which distinct car models are the produced after 1980?",
    "question_th": "รถยนต์รุ่นใดบ้างที่ผลิตหลังปี 1980?",
    "question_toks": "['Which', 'distinct', 'car', 'models', 'are', 'the', 'produced', 'after', '1980', '?']",
    "sql": "{'from': {'table_units': [['table_unit', 3], ['table_unit', 4], ['table_unit', 5]], 'conds': [[False, 2, [0, [0, 12, False], None], [0, 14, False], None], 'and', [False, 2, [0, [0, 13, False], None], [0, 16, False], None]]}, 'select': [True, [[0, [0, [0, 12, False], None]]]], 'where': [[False, 3, [0, [0, 23, False], None], 1980.0, None]], 'groupBy': [], 'having': [], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "car_1",
    "query": "SELECT DISTINCT T1.model FROM MODEL_LIST AS T1 JOIN CAR_NAMES AS T2 ON T1.model  =  T2.model JOIN CARS_DATA AS T3 ON T2.MakeId  =  T3.id WHERE T3.year  >  1980;",
    "query_toks": "['SELECT', 'DISTINCT', 'T1.model', 'FROM', 'MODEL_LIST', 'AS', 'T1', 'JOIN', 'CAR_NAMES', 'AS', 'T2', 'ON', 'T1.model', '=', 'T2.model', 'JOIN', 'CARS_DATA', 'AS', 'T3', 'ON', 'T2.MakeId', '=', 'T3.id', 'WHERE', 'T3.year', '>', '1980', ';']",
    "query_toks_no_value": "['select', 'distinct', 't1', '.', 'model', 'from', 'model_list', 'as', 't1', 'join', 'car_names', 'as', 't2', 'on', 't1', '.', 'model', '=', 't2', '.', 'model', 'join', 'cars_data', 'as', 't3', 'on', 't2', '.', 'makeid', '=', 't3', '.', 'id', 'where', 't3', '.', 'year', '>', 'value']",
    "question": "What are the different models for the cards produced after 1980?",
    "question_th": "การ์ดที่ผลิตหลังปี 1980 มีรุ่นอะไรบ้าง?",
    "question_toks": "['What', 'are', 'the', 'different', 'models', 'for', 'the', 'cards', 'produced', 'after', '1980', '?']",
    "sql": "{'from': {'table_units': [['table_unit', 3], ['table_unit', 4], ['table_unit', 5]], 'conds': [[False, 2, [0, [0, 12, False], None], [0, 14, False], None], 'and', [False, 2, [0, [0, 13, False], None], [0, 16, False], None]]}, 'select': [True, [[0, [0, [0, 12, False], None]]]], 'where': [[False, 3, [0, [0, 23, False], None], 1980.0, None]], 'groupBy': [], 'having': [], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "car_1",
    "query": "SELECT T1.Continent ,  count(*) FROM CONTINENTS AS T1 JOIN COUNTRIES AS T2 ON T1.ContId  =  T2.continent JOIN car_makers AS T3 ON T2.CountryId  =  T3.Country GROUP BY T1.Continent;",
    "query_toks": "['SELECT', 'T1.Continent', ',', 'count', '(', '*', ')', 'FROM', 'CONTINENTS', 'AS', 'T1', 'JOIN', 'COUNTRIES', 'AS', 'T2', 'ON', 'T1.ContId', '=', 'T2.continent', 'JOIN', 'car_makers', 'AS', 'T3', 'ON', 'T2.CountryId', '=', 'T3.Country', 'GROUP', 'BY', 'T1.Continent', ';']",
    "query_toks_no_value": "['select', 't1', '.', 'continent', ',', 'count', '(', '*', ')', 'from', 'continents', 'as', 't1', 'join', 'countries', 'as', 't2', 'on', 't1', '.', 'contid', '=', 't2', '.', 'continent', 'join', 'car_makers', 'as', 't3', 'on', 't2', '.', 'countryid', '=', 't3', '.', 'country', 'group', 'by', 't1', '.', 'continent']",
    "question": "How many car makers are there in each continents? List the continent name and the count.",
    "question_th": "แต่ละทวีปมีผู้ผลิตรถยนต์กี่ราย? ระบุชื่อทวีปและจำนวน",
    "question_toks": "['How', 'many', 'car', 'makers', 'are', 'there', 'in', 'each', 'continents', '?', 'List', 'the', 'continent', 'name', 'and', 'the', 'count', '.']",
    "sql": "{'from': {'table_units': [['table_unit', 0], ['table_unit', 1], ['table_unit', 2]], 'conds': [[False, 2, [0, [0, 1, False], None], [0, 5, False], None], 'and', [False, 2, [0, [0, 3, False], None], [0, 9, False], None]]}, 'select': [False, [[0, [0, [0, 2, False], None]], [3, [0, [0, 0, False], None]]]], 'where': [], 'groupBy': [[0, 2, False]], 'having': [], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "car_1",
    "query": "SELECT T1.Continent ,  count(*) FROM CONTINENTS AS T1 JOIN COUNTRIES AS T2 ON T1.ContId  =  T2.continent JOIN car_makers AS T3 ON T2.CountryId  =  T3.Country GROUP BY T1.Continent;",
    "query_toks": "['SELECT', 'T1.Continent', ',', 'count', '(', '*', ')', 'FROM', 'CONTINENTS', 'AS', 'T1', 'JOIN', 'COUNTRIES', 'AS', 'T2', 'ON', 'T1.ContId', '=', 'T2.continent', 'JOIN', 'car_makers', 'AS', 'T3', 'ON', 'T2.CountryId', '=', 'T3.Country', 'GROUP', 'BY', 'T1.Continent', ';']",
    "query_toks_no_value": "['select', 't1', '.', 'continent', ',', 'count', '(', '*', ')', 'from', 'continents', 'as', 't1', 'join', 'countries', 'as', 't2', 'on', 't1', '.', 'contid', '=', 't2', '.', 'continent', 'join', 'car_makers', 'as', 't3', 'on', 't2', '.', 'countryid', '=', 't3', '.', 'country', 'group', 'by', 't1', '.', 'continent']",
    "question": "What is the name of each continent and how many car makers are there in each one?",
    "question_th": "แต่ละทวีปชื่ออะไร และแต่ละทวีปมีผู้ผลิตรถยนต์กี่ราย?",
    "question_toks": "['What', 'is', 'the', 'name', 'of', 'each', 'continent', 'and', 'how', 'many', 'car', 'makers', 'are', 'there', 'in', 'each', 'one', '?']",
    "sql": "{'from': {'table_units': [['table_unit', 0], ['table_unit', 1], ['table_unit', 2]], 'conds': [[False, 2, [0, [0, 1, False], None], [0, 5, False], None], 'and', [False, 2, [0, [0, 3, False], None], [0, 9, False], None]]}, 'select': [False, [[0, [0, [0, 2, False], None]], [3, [0, [0, 0, False], None]]]], 'where': [], 'groupBy': [[0, 2, False]], 'having': [], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "car_1",
    "query": "SELECT T2.CountryName FROM CAR_MAKERS AS T1 JOIN COUNTRIES AS T2 ON T1.Country  =  T2.CountryId GROUP BY T1.Country ORDER BY Count(*) DESC LIMIT 1;",
    "query_toks": "['SELECT', 'T2.CountryName', 'FROM', 'CAR_MAKERS', 'AS', 'T1', 'JOIN', 'COUNTRIES', 'AS', 'T2', 'ON', 'T1.Country', '=', 'T2.CountryId', 'GROUP', 'BY', 'T1.Country', 'ORDER', 'BY', 'Count', '(', '*', ')', 'DESC', 'LIMIT', '1', ';']",
    "query_toks_no_value": "['select', 't2', '.', 'countryname', 'from', 'car_makers', 'as', 't1', 'join', 'countries', 'as', 't2', 'on', 't1', '.', 'country', '=', 't2', '.', 'countryid', 'group', 'by', 't1', '.', 'country', 'order', 'by', 'count', '(', '*', ')', 'desc', 'limit', 'value']",
    "question": "Which of the countries has the most car makers? List the country name.",
    "question_th": "ประเทศใดมีผู้ผลิตรถยนต์มากที่สุด? รายชื่อประเทศ.",
    "question_toks": "['Which', 'of', 'the', 'countries', 'has', 'the', 'most', 'car', 'makers', '?', 'List', 'the', 'country', 'name', '.']",
    "sql": "{'from': {'table_units': [['table_unit', 2], ['table_unit', 1]], 'conds': [[False, 2, [0, [0, 9, False], None], [0, 3, False], None]]}, 'select': [False, [[0, [0, [0, 4, False], None]]]], 'where': [], 'groupBy': [[0, 9, False]], 'having': [], 'orderBy': ['desc', [[0, [3, 0, False], None]]], 'limit': 1, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "car_1",
    "query": "SELECT T2.CountryName FROM CAR_MAKERS AS T1 JOIN COUNTRIES AS T2 ON T1.Country  =  T2.CountryId GROUP BY T1.Country ORDER BY Count(*) DESC LIMIT 1;",
    "query_toks": "['SELECT', 'T2.CountryName', 'FROM', 'CAR_MAKERS', 'AS', 'T1', 'JOIN', 'COUNTRIES', 'AS', 'T2', 'ON', 'T1.Country', '=', 'T2.CountryId', 'GROUP', 'BY', 'T1.Country', 'ORDER', 'BY', 'Count', '(', '*', ')', 'DESC', 'LIMIT', '1', ';']",
    "query_toks_no_value": "['select', 't2', '.', 'countryname', 'from', 'car_makers', 'as', 't1', 'join', 'countries', 'as', 't2', 'on', 't1', '.', 'country', '=', 't2', '.', 'countryid', 'group', 'by', 't1', '.', 'country', 'order', 'by', 'count', '(', '*', ')', 'desc', 'limit', 'value']",
    "question": "What is the name of the country with the most car makers?",
    "question_th": "ประเทศที่มีผู้ผลิตรถยนต์มากที่สุดชื่ออะไร?",
    "question_toks": "['What', 'is', 'the', 'name', 'of', 'the', 'country', 'with', 'the', 'most', 'car', 'makers', '?']",
    "sql": "{'from': {'table_units': [['table_unit', 2], ['table_unit', 1]], 'conds': [[False, 2, [0, [0, 9, False], None], [0, 3, False], None]]}, 'select': [False, [[0, [0, [0, 4, False], None]]]], 'where': [], 'groupBy': [[0, 9, False]], 'having': [], 'orderBy': ['desc', [[0, [3, 0, False], None]]], 'limit': 1, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "car_1",
    "query": "select count(*) ,  t2.fullname from model_list as t1 join car_makers as t2 on t1.maker  =  t2.id group by t2.id;",
    "query_toks": "['select', 'count', '(', '*', ')', ',', 't2.fullname', 'from', 'model_list', 'as', 't1', 'join', 'car_makers', 'as', 't2', 'on', 't1.maker', '=', 't2.id', 'group', 'by', 't2.id', ';']",
    "query_toks_no_value": "['select', 'count', '(', '*', ')', ',', 't2', '.', 'fullname', 'from', 'model_list', 'as', 't1', 'join', 'car_makers', 'as', 't2', 'on', 't1', '.', 'maker', '=', 't2', '.', 'id', 'group', 'by', 't2', '.', 'id']",
    "question": "How many car models are produced by each maker ? Only list the count and the maker full name .",
    "question_th": "แต่ละผู้ผลิตผลิตรถยนต์ได้กี่รุ่น ? ระบุเฉพาะจำนวนและชื่อเต็มของผู้สร้างเท่านั้น",
    "question_toks": "['How', 'many', 'car', 'models', 'are', 'produced', 'by', 'each', 'maker', '?', 'Only', 'list', 'the', 'count', 'and', 'the', 'maker', 'full', 'name', '.']",
    "sql": "{'from': {'table_units': [['table_unit', 3], ['table_unit', 2]], 'conds': [[False, 2, [0, [0, 11, False], None], [0, 6, False], None]]}, 'select': [False, [[3, [0, [0, 0, False], None]], [0, [0, [0, 8, False], None]]]], 'where': [], 'groupBy': [[0, 6, False]], 'having': [], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "car_1",
    "query": "SELECT Count(*) ,  T2.FullName ,  T2.id FROM MODEL_LIST AS T1 JOIN CAR_MAKERS AS T2 ON T1.Maker  =  T2.Id GROUP BY T2.id;",
    "query_toks": "['SELECT', 'Count', '(', '*', ')', ',', 'T2.FullName', ',', 'T2.id', 'FROM', 'MODEL_LIST', 'AS', 'T1', 'JOIN', 'CAR_MAKERS', 'AS', 'T2', 'ON', 'T1.Maker', '=', 'T2.Id', 'GROUP', 'BY', 'T2.id', ';']",
    "query_toks_no_value": "['select', 'count', '(', '*', ')', ',', 't2', '.', 'fullname', ',', 't2', '.', 'id', 'from', 'model_list', 'as', 't1', 'join', 'car_makers', 'as', 't2', 'on', 't1', '.', 'maker', '=', 't2', '.', 'id', 'group', 'by', 't2', '.', 'id']",
    "question": "What is the number of car models that are produced by each maker and what is the id and full name of each maker?",
    "question_th": "แต่ละค่ายผลิตรถยนต์จำนวนกี่รุ่น และรหัสและชื่อเต็มของแต่ละค่ายคือเท่าไร?",
    "question_toks": "['What', 'is', 'the', 'number', 'of', 'car', 'models', 'that', 'are', 'produced', 'by', 'each', 'maker', 'and', 'what', 'is', 'the', 'id', 'and', 'full', 'name', 'of', 'each', 'maker', '?']",
    "sql": "{'from': {'table_units': [['table_unit', 3], ['table_unit', 2]], 'conds': [[False, 2, [0, [0, 11, False], None], [0, 6, False], None]]}, 'select': [False, [[3, [0, [0, 0, False], None]], [0, [0, [0, 8, False], None]], [0, [0, [0, 6, False], None]]]], 'where': [], 'groupBy': [[0, 6, False]], 'having': [], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "car_1",
    "query": "SELECT T1.Accelerate FROM CARS_DATA AS T1 JOIN CAR_NAMES AS T2 ON T1.Id  =  T2.MakeId WHERE T2.Make  =  'amc hornet sportabout (sw)';",
    "query_toks": "['SELECT', 'T1.Accelerate', 'FROM', 'CARS_DATA', 'AS', 'T1', 'JOIN', 'CAR_NAMES', 'AS', 'T2', 'ON', 'T1.Id', '=', 'T2.MakeId', 'WHERE', 'T2.Make', '=', \"'amc\", 'hornet', 'sportabout', '(', 'sw', ')', \"'\", ';']",
    "query_toks_no_value": "['select', 't1', '.', 'accelerate', 'from', 'cars_data', 'as', 't1', 'join', 'car_names', 'as', 't2', 'on', 't1', '.', 'id', '=', 't2', '.', 'makeid', 'where', 't2', '.', 'make', '=', 'value']",
    "question": "What is the accelerate of the car make amc hornet sportabout (sw)?",
    "question_th": "รถยี่ห้อ amc Hornet sportabout (sw) มีอัตราเร่งเท่าไร?",
    "question_toks": "['What', 'is', 'the', 'accelerate', 'of', 'the', 'car', 'make', 'amc', 'hornet', 'sportabout', '(', 'sw', ')', '?']",
    "sql": "{'from': {'table_units': [['table_unit', 5], ['table_unit', 4]], 'conds': [[False, 2, [0, [0, 16, False], None], [0, 13, False], None]]}, 'select': [False, [[0, [0, [0, 22, False], None]]]], 'where': [[False, 2, [0, [0, 15, False], None], '\"amc hornet sportabout (sw)\"', None]], 'groupBy': [], 'having': [], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "car_1",
    "query": "SELECT T1.Accelerate FROM CARS_DATA AS T1 JOIN CAR_NAMES AS T2 ON T1.Id  =  T2.MakeId WHERE T2.Make  =  'amc hornet sportabout (sw)';",
    "query_toks": "['SELECT', 'T1.Accelerate', 'FROM', 'CARS_DATA', 'AS', 'T1', 'JOIN', 'CAR_NAMES', 'AS', 'T2', 'ON', 'T1.Id', '=', 'T2.MakeId', 'WHERE', 'T2.Make', '=', \"'amc\", 'hornet', 'sportabout', '(', 'sw', ')', \"'\", ';']",
    "query_toks_no_value": "['select', 't1', '.', 'accelerate', 'from', 'cars_data', 'as', 't1', 'join', 'car_names', 'as', 't2', 'on', 't1', '.', 'id', '=', 't2', '.', 'makeid', 'where', 't2', '.', 'make', '=', 'value']",
    "question": "How much does the car accelerate that makes amc hornet sportabout (sw)?",
    "question_th": "รถที่ทำให้ amc Hornet sportabout (sw) มีอัตราเร่งเท่าไร?",
    "question_toks": "['How', 'much', 'does', 'the', 'car', 'accelerate', 'that', 'makes', 'amc', 'hornet', 'sportabout', '(', 'sw', ')', '?']",
    "sql": "{'from': {'table_units': [['table_unit', 5], ['table_unit', 4]], 'conds': [[False, 2, [0, [0, 16, False], None], [0, 13, False], None]]}, 'select': [False, [[0, [0, [0, 22, False], None]]]], 'where': [[False, 2, [0, [0, 15, False], None], '\"amc hornet sportabout (sw)\"', None]], 'groupBy': [], 'having': [], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "car_1",
    "query": "SELECT count(*) FROM CAR_MAKERS AS T1 JOIN COUNTRIES AS T2 ON T1.Country  =  T2.CountryId WHERE T2.CountryName  =  'france';",
    "query_toks": "['SELECT', 'count', '(', '*', ')', 'FROM', 'CAR_MAKERS', 'AS', 'T1', 'JOIN', 'COUNTRIES', 'AS', 'T2', 'ON', 'T1.Country', '=', 'T2.CountryId', 'WHERE', 'T2.CountryName', '=', \"'france\", \"'\", ';']",
    "query_toks_no_value": "['select', 'count', '(', '*', ')', 'from', 'car_makers', 'as', 't1', 'join', 'countries', 'as', 't2', 'on', 't1', '.', 'country', '=', 't2', '.', 'countryid', 'where', 't2', '.', 'countryname', '=', 'value']",
    "question": "How many car makers are there in france?",
    "question_th": "ฝรั่งเศสมีผู้ผลิตรถยนต์กี่ราย?",
    "question_toks": "['How', 'many', 'car', 'makers', 'are', 'there', 'in', 'france', '?']",
    "sql": "{'from': {'table_units': [['table_unit', 2], ['table_unit', 1]], 'conds': [[False, 2, [0, [0, 9, False], None], [0, 3, False], None]]}, 'select': [False, [[3, [0, [0, 0, False], None]]]], 'where': [[False, 2, [0, [0, 4, False], None], '\"france\"', None]], 'groupBy': [], 'having': [], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "car_1",
    "query": "SELECT count(*) FROM CAR_MAKERS AS T1 JOIN COUNTRIES AS T2 ON T1.Country  =  T2.CountryId WHERE T2.CountryName  =  'france';",
    "query_toks": "['SELECT', 'count', '(', '*', ')', 'FROM', 'CAR_MAKERS', 'AS', 'T1', 'JOIN', 'COUNTRIES', 'AS', 'T2', 'ON', 'T1.Country', '=', 'T2.CountryId', 'WHERE', 'T2.CountryName', '=', \"'france\", \"'\", ';']",
    "query_toks_no_value": "['select', 'count', '(', '*', ')', 'from', 'car_makers', 'as', 't1', 'join', 'countries', 'as', 't2', 'on', 't1', '.', 'country', '=', 't2', '.', 'countryid', 'where', 't2', '.', 'countryname', '=', 'value']",
    "question": "What is the number of makers of care in France?",
    "question_th": "จำนวนผู้ผลิตการดูแลในฝรั่งเศสคือเท่าไร?",
    "question_toks": "['What', 'is', 'the', 'number', 'of', 'makers', 'of', 'care', 'in', 'France', '?']",
    "sql": "{'from': {'table_units': [['table_unit', 2], ['table_unit', 1]], 'conds': [[False, 2, [0, [0, 9, False], None], [0, 3, False], None]]}, 'select': [False, [[3, [0, [0, 0, False], None]]]], 'where': [[False, 2, [0, [0, 4, False], None], '\"france\"', None]], 'groupBy': [], 'having': [], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "car_1",
    "query": "SELECT count(*) FROM MODEL_LIST AS T1 JOIN CAR_MAKERS AS T2 ON T1.Maker  =  T2.Id JOIN COUNTRIES AS T3 ON T2.Country  =  T3.CountryId WHERE T3.CountryName  =  'usa';",
    "query_toks": "['SELECT', 'count', '(', '*', ')', 'FROM', 'MODEL_LIST', 'AS', 'T1', 'JOIN', 'CAR_MAKERS', 'AS', 'T2', 'ON', 'T1.Maker', '=', 'T2.Id', 'JOIN', 'COUNTRIES', 'AS', 'T3', 'ON', 'T2.Country', '=', 'T3.CountryId', 'WHERE', 'T3.CountryName', '=', \"'usa\", \"'\", ';']",
    "query_toks_no_value": "['select', 'count', '(', '*', ')', 'from', 'model_list', 'as', 't1', 'join', 'car_makers', 'as', 't2', 'on', 't1', '.', 'maker', '=', 't2', '.', 'id', 'join', 'countries', 'as', 't3', 'on', 't2', '.', 'country', '=', 't3', '.', 'countryid', 'where', 't3', '.', 'countryname', '=', 'value']",
    "question": "How many car models are produced in the usa?",
    "question_th": "รถยนต์ที่ผลิตในอเมริกามีกี่รุ่น?",
    "question_toks": "['How', 'many', 'car', 'models', 'are', 'produced', 'in', 'the', 'usa', '?']",
    "sql": "{'from': {'table_units': [['table_unit', 3], ['table_unit', 2], ['table_unit', 1]], 'conds': [[False, 2, [0, [0, 11, False], None], [0, 6, False], None], 'and', [False, 2, [0, [0, 9, False], None], [0, 3, False], None]]}, 'select': [False, [[3, [0, [0, 0, False], None]]]], 'where': [[False, 2, [0, [0, 4, False], None], '\"usa\"', None]], 'groupBy': [], 'having': [], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "car_1",
    "query": "SELECT count(*) FROM MODEL_LIST AS T1 JOIN CAR_MAKERS AS T2 ON T1.Maker  =  T2.Id JOIN COUNTRIES AS T3 ON T2.Country  =  T3.CountryId WHERE T3.CountryName  =  'usa';",
    "query_toks": "['SELECT', 'count', '(', '*', ')', 'FROM', 'MODEL_LIST', 'AS', 'T1', 'JOIN', 'CAR_MAKERS', 'AS', 'T2', 'ON', 'T1.Maker', '=', 'T2.Id', 'JOIN', 'COUNTRIES', 'AS', 'T3', 'ON', 'T2.Country', '=', 'T3.CountryId', 'WHERE', 'T3.CountryName', '=', \"'usa\", \"'\", ';']",
    "query_toks_no_value": "['select', 'count', '(', '*', ')', 'from', 'model_list', 'as', 't1', 'join', 'car_makers', 'as', 't2', 'on', 't1', '.', 'maker', '=', 't2', '.', 'id', 'join', 'countries', 'as', 't3', 'on', 't2', '.', 'country', '=', 't3', '.', 'countryid', 'where', 't3', '.', 'countryname', '=', 'value']",
    "question": "What is the count of the car models produced in the United States?",
    "question_th": "รถยนต์ที่ผลิตในอเมริกามีกี่รุ่น?",
    "question_toks": "['What', 'is', 'the', 'count', 'of', 'the', 'car', 'models', 'produced', 'in', 'the', 'United', 'States', '?']",
    "sql": "{'from': {'table_units': [['table_unit', 3], ['table_unit', 2], ['table_unit', 1]], 'conds': [[False, 2, [0, [0, 11, False], None], [0, 6, False], None], 'and', [False, 2, [0, [0, 9, False], None], [0, 3, False], None]]}, 'select': [False, [[3, [0, [0, 0, False], None]]]], 'where': [[False, 2, [0, [0, 4, False], None], '\"usa\"', None]], 'groupBy': [], 'having': [], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "car_1",
    "query": "SELECT avg(mpg) FROM CARS_DATA WHERE Cylinders  =  4;",
    "query_toks": "['SELECT', 'avg', '(', 'mpg', ')', 'FROM', 'CARS_DATA', 'WHERE', 'Cylinders', '=', '4', ';']",
    "query_toks_no_value": "['select', 'avg', '(', 'mpg', ')', 'from', 'cars_data', 'where', 'cylinders', '=', 'value']",
    "question": "What is the average miles per gallon(mpg) of the cars with 4 cylinders?",
    "question_th": "รถ 4 สูบใช้ระยะทางเฉลี่ยต่อแกลลอน (mpg) เท่าไร?",
    "question_toks": "['What', 'is', 'the', 'average', 'miles', 'per', 'gallon', '(', 'mpg', ')', 'of', 'the', 'cars', 'with', '4', 'cylinders', '?']",
    "sql": "{'from': {'table_units': [['table_unit', 5]], 'conds': []}, 'select': [False, [[5, [0, [0, 17, False], None]]]], 'where': [[False, 2, [0, [0, 18, False], None], 4.0, None]], 'groupBy': [], 'having': [], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "car_1",
    "query": "SELECT avg(mpg) FROM CARS_DATA WHERE Cylinders  =  4;",
    "query_toks": "['SELECT', 'avg', '(', 'mpg', ')', 'FROM', 'CARS_DATA', 'WHERE', 'Cylinders', '=', '4', ';']",
    "query_toks_no_value": "['select', 'avg', '(', 'mpg', ')', 'from', 'cars_data', 'where', 'cylinders', '=', 'value']",
    "question": "What is the average miles per gallon of all the cards with 4 cylinders?",
    "question_th": "อัตราไมล์เฉลี่ยต่อแกลลอนของการ์ดทั้งหมดที่มี 4 สูบคือเท่าไร?",
    "question_toks": "['What', 'is', 'the', 'average', 'miles', 'per', 'gallon', 'of', 'all', 'the', 'cards', 'with', '4', 'cylinders', '?']",
    "sql": "{'from': {'table_units': [['table_unit', 5]], 'conds': []}, 'select': [False, [[5, [0, [0, 17, False], None]]]], 'where': [[False, 2, [0, [0, 18, False], None], 4.0, None]], 'groupBy': [], 'having': [], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "car_1",
    "query": "select min(weight) from cars_data where cylinders  =  8 and year  =  1974",
    "query_toks": "['select', 'min', '(', 'weight', ')', 'from', 'cars_data', 'where', 'cylinders', '=', '8', 'and', 'year', '=', '1974']",
    "query_toks_no_value": "['select', 'min', '(', 'weight', ')', 'from', 'cars_data', 'where', 'cylinders', '=', 'value', 'and', 'year', '=', 'value']",
    "question": "What is the smallest weight of the car produced with 8 cylinders on 1974 ?",
    "question_th": "รถ 8 สูบที่มีน้ำหนักน้อยที่สุดในปี 1974 คือเท่าใด?",
    "question_toks": "['What', 'is', 'the', 'smallest', 'weight', 'of', 'the', 'car', 'produced', 'with', '8', 'cylinders', 'on', '1974', '?']",
    "sql": "{'from': {'table_units': [['table_unit', 5]], 'conds': []}, 'select': [False, [[2, [0, [0, 21, False], None]]]], 'where': [[False, 2, [0, [0, 18, False], None], 8.0, None], 'and', [False, 2, [0, [0, 23, False], None], 1974.0, None]], 'groupBy': [], 'having': [], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "car_1",
    "query": "select min(weight) from cars_data where cylinders  =  8 and year  =  1974",
    "query_toks": "['select', 'min', '(', 'weight', ')', 'from', 'cars_data', 'where', 'cylinders', '=', '8', 'and', 'year', '=', '1974']",
    "query_toks_no_value": "['select', 'min', '(', 'weight', ')', 'from', 'cars_data', 'where', 'cylinders', '=', 'value', 'and', 'year', '=', 'value']",
    "question": "What is the minimum weight of the car with 8 cylinders produced in 1974 ?",
    "question_th": "รถ 8 สูบที่ผลิตในปี 1974 มีน้ำหนักขั้นต่ำเท่าไหร่?",
    "question_toks": "['What', 'is', 'the', 'minimum', 'weight', 'of', 'the', 'car', 'with', '8', 'cylinders', 'produced', 'in', '1974', '?']",
    "sql": "{'from': {'table_units': [['table_unit', 5]], 'conds': []}, 'select': [False, [[2, [0, [0, 21, False], None]]]], 'where': [[False, 2, [0, [0, 18, False], None], 8.0, None], 'and', [False, 2, [0, [0, 23, False], None], 1974.0, None]], 'groupBy': [], 'having': [], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "car_1",
    "query": "SELECT Maker ,  Model FROM MODEL_LIST;",
    "query_toks": "['SELECT', 'Maker', ',', 'Model', 'FROM', 'MODEL_LIST', ';']",
    "query_toks_no_value": "['select', 'maker', ',', 'model', 'from', 'model_list']",
    "question": "What are all the makers and models?",
    "question_th": "ผู้ผลิตและรุ่นทั้งหมดมีอะไรบ้าง?",
    "question_toks": "['What', 'are', 'all', 'the', 'makers', 'and', 'models', '?']",
    "sql": "{'from': {'table_units': [['table_unit', 3]], 'conds': []}, 'select': [False, [[0, [0, [0, 11, False], None]], [0, [0, [0, 12, False], None]]]], 'where': [], 'groupBy': [], 'having': [], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "car_1",
    "query": "SELECT Maker ,  Model FROM MODEL_LIST;",
    "query_toks": "['SELECT', 'Maker', ',', 'Model', 'FROM', 'MODEL_LIST', ';']",
    "query_toks_no_value": "['select', 'maker', ',', 'model', 'from', 'model_list']",
    "question": "What are the makers and models?",
    "question_th": "มีผู้ผลิตและรุ่นอะไรบ้าง?",
    "question_toks": "['What', 'are', 'the', 'makers', 'and', 'models', '?']",
    "sql": "{'from': {'table_units': [['table_unit', 3]], 'conds': []}, 'select': [False, [[0, [0, [0, 11, False], None]], [0, [0, [0, 12, False], None]]]], 'where': [], 'groupBy': [], 'having': [], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "car_1",
    "query": "SELECT T1.CountryName ,  T1.CountryId FROM COUNTRIES AS T1 JOIN CAR_MAKERS AS T2 ON T1.CountryId  =  T2.Country GROUP BY T1.CountryId HAVING count(*)  >=  1;",
    "query_toks": "['SELECT', 'T1.CountryName', ',', 'T1.CountryId', 'FROM', 'COUNTRIES', 'AS', 'T1', 'JOIN', 'CAR_MAKERS', 'AS', 'T2', 'ON', 'T1.CountryId', '=', 'T2.Country', 'GROUP', 'BY', 'T1.CountryId', 'HAVING', 'count', '(', '*', ')', '>', '=', '1', ';']",
    "query_toks_no_value": "['select', 't1', '.', 'countryname', ',', 't1', '.', 'countryid', 'from', 'countries', 'as', 't1', 'join', 'car_makers', 'as', 't2', 'on', 't1', '.', 'countryid', '=', 't2', '.', 'country', 'group', 'by', 't1', '.', 'countryid', 'having', 'count', '(', '*', ')', '>', '=', 'value']",
    "question": "What are the countries having at least one car maker? List name and id.",
    "question_th": "ประเทศใดบ้างที่มีผู้ผลิตรถยนต์อย่างน้อยหนึ่งราย ชื่อรายการและรหัส",
    "question_toks": "['What', 'are', 'the', 'countries', 'having', 'at', 'least', 'one', 'car', 'maker', '?', 'List', 'name', 'and', 'id', '.']",
    "sql": "{'from': {'table_units': [['table_unit', 1], ['table_unit', 2]], 'conds': [[False, 2, [0, [0, 3, False], None], [0, 9, False], None]]}, 'select': [False, [[0, [0, [0, 4, False], None]], [0, [0, [0, 3, False], None]]]], 'where': [], 'groupBy': [[0, 3, False]], 'having': [[False, 5, [0, [3, 0, False], None], 1.0, None]], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "car_1",
    "query": "SELECT T1.CountryName ,  T1.CountryId FROM COUNTRIES AS T1 JOIN CAR_MAKERS AS T2 ON T1.CountryId  =  T2.Country GROUP BY T1.CountryId HAVING count(*)  >=  1;",
    "query_toks": "['SELECT', 'T1.CountryName', ',', 'T1.CountryId', 'FROM', 'COUNTRIES', 'AS', 'T1', 'JOIN', 'CAR_MAKERS', 'AS', 'T2', 'ON', 'T1.CountryId', '=', 'T2.Country', 'GROUP', 'BY', 'T1.CountryId', 'HAVING', 'count', '(', '*', ')', '>', '=', '1', ';']",
    "query_toks_no_value": "['select', 't1', '.', 'countryname', ',', 't1', '.', 'countryid', 'from', 'countries', 'as', 't1', 'join', 'car_makers', 'as', 't2', 'on', 't1', '.', 'countryid', '=', 't2', '.', 'country', 'group', 'by', 't1', '.', 'countryid', 'having', 'count', '(', '*', ')', '>', '=', 'value']",
    "question": "What are the names and ids of all countries with at least one car maker?",
    "question_th": "ชื่อและรหัสของทุกประเทศที่มีผู้ผลิตรถยนต์อย่างน้อยหนึ่งรายคืออะไร",
    "question_toks": "['What', 'are', 'the', 'names', 'and', 'ids', 'of', 'all', 'countries', 'with', 'at', 'least', 'one', 'car', 'maker', '?']",
    "sql": "{'from': {'table_units': [['table_unit', 1], ['table_unit', 2]], 'conds': [[False, 2, [0, [0, 3, False], None], [0, 9, False], None]]}, 'select': [False, [[0, [0, [0, 4, False], None]], [0, [0, [0, 3, False], None]]]], 'where': [], 'groupBy': [[0, 3, False]], 'having': [[False, 5, [0, [3, 0, False], None], 1.0, None]], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "car_1",
    "query": "SELECT count(*) FROM CARS_DATA WHERE horsepower  >  150;",
    "query_toks": "['SELECT', 'count', '(', '*', ')', 'FROM', 'CARS_DATA', 'WHERE', 'horsepower', '>', '150', ';']",
    "query_toks_no_value": "['select', 'count', '(', '*', ')', 'from', 'cars_data', 'where', 'horsepower', '>', 'value']",
    "question": "What is the number of the cars with horsepower more than 150?",
    "question_th": "รถที่มีแรงม้าเกิน 150 มีกี่คัน?",
    "question_toks": "['What', 'is', 'the', 'number', 'of', 'the', 'cars', 'with', 'horsepower', 'more', 'than', '150', '?']",
    "sql": "{'from': {'table_units': [['table_unit', 5]], 'conds': []}, 'select': [False, [[3, [0, [0, 0, False], None]]]], 'where': [[False, 3, [0, [0, 20, False], None], 150.0, None]], 'groupBy': [], 'having': [], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "car_1",
    "query": "SELECT count(*) FROM CARS_DATA WHERE horsepower  >  150;",
    "query_toks": "['SELECT', 'count', '(', '*', ')', 'FROM', 'CARS_DATA', 'WHERE', 'horsepower', '>', '150', ';']",
    "query_toks_no_value": "['select', 'count', '(', '*', ')', 'from', 'cars_data', 'where', 'horsepower', '>', 'value']",
    "question": "What is the number of cars with a horsepower greater than 150?",
    "question_th": "รถยนต์ที่มีแรงม้าเกิน 150 มีกี่คัน?",
    "question_toks": "['What', 'is', 'the', 'number', 'of', 'cars', 'with', 'a', 'horsepower', 'greater', 'than', '150', '?']",
    "sql": "{'from': {'table_units': [['table_unit', 5]], 'conds': []}, 'select': [False, [[3, [0, [0, 0, False], None]]]], 'where': [[False, 3, [0, [0, 20, False], None], 150.0, None]], 'groupBy': [], 'having': [], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "car_1",
    "query": "SELECT avg(Weight) ,  YEAR FROM CARS_DATA GROUP BY YEAR;",
    "query_toks": "['SELECT', 'avg', '(', 'Weight', ')', ',', 'YEAR', 'FROM', 'CARS_DATA', 'GROUP', 'BY', 'YEAR', ';']",
    "query_toks_no_value": "['select', 'avg', '(', 'weight', ')', ',', 'year', 'from', 'cars_data', 'group', 'by', 'year']",
    "question": "What is the average weight of cars each year?",
    "question_th": "น้ำหนักเฉลี่ยของรถยนต์ในแต่ละปีคือเท่าไร?",
    "question_toks": "['What', 'is', 'the', 'average', 'weight', 'of', 'cars', 'each', 'year', '?']",
    "sql": "{'from': {'table_units': [['table_unit', 5]], 'conds': []}, 'select': [False, [[5, [0, [0, 21, False], None]], [0, [0, [0, 23, False], None]]]], 'where': [], 'groupBy': [[0, 23, False]], 'having': [], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "car_1",
    "query": "SELECT avg(Weight) ,  YEAR FROM CARS_DATA GROUP BY YEAR;",
    "query_toks": "['SELECT', 'avg', '(', 'Weight', ')', ',', 'YEAR', 'FROM', 'CARS_DATA', 'GROUP', 'BY', 'YEAR', ';']",
    "query_toks_no_value": "['select', 'avg', '(', 'weight', ')', ',', 'year', 'from', 'cars_data', 'group', 'by', 'year']",
    "question": "What is the average weight and year for each year?",
    "question_th": "น้ำหนักเฉลี่ยและปีต่อปีคือเท่าไร?",
    "question_toks": "['What', 'is', 'the', 'average', 'weight', 'and', 'year', 'for', 'each', 'year', '?']",
    "sql": "{'from': {'table_units': [['table_unit', 5]], 'conds': []}, 'select': [False, [[5, [0, [0, 21, False], None]], [0, [0, [0, 23, False], None]]]], 'where': [], 'groupBy': [[0, 23, False]], 'having': [], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "car_1",
    "query": "SELECT T1.CountryName FROM COUNTRIES AS T1 JOIN CONTINENTS AS T2 ON T1.Continent  =  T2.ContId JOIN CAR_MAKERS AS T3 ON T1.CountryId  =  T3.Country WHERE T2.Continent  =  'europe' GROUP BY T1.CountryName HAVING count(*)  >=  3;",
    "query_toks": "['SELECT', 'T1.CountryName', 'FROM', 'COUNTRIES', 'AS', 'T1', 'JOIN', 'CONTINENTS', 'AS', 'T2', 'ON', 'T1.Continent', '=', 'T2.ContId', 'JOIN', 'CAR_MAKERS', 'AS', 'T3', 'ON', 'T1.CountryId', '=', 'T3.Country', 'WHERE', 'T2.Continent', '=', \"'europe\", \"'\", 'GROUP', 'BY', 'T1.CountryName', 'HAVING', 'count', '(', '*', ')', '>', '=', '3', ';']",
    "query_toks_no_value": "['select', 't1', '.', 'countryname', 'from', 'countries', 'as', 't1', 'join', 'continents', 'as', 't2', 'on', 't1', '.', 'continent', '=', 't2', '.', 'contid', 'join', 'car_makers', 'as', 't3', 'on', 't1', '.', 'countryid', '=', 't3', '.', 'country', 'where', 't2', '.', 'continent', '=', 'value', 'group', 'by', 't1', '.', 'countryname', 'having', 'count', '(', '*', ')', '>', '=', 'value']",
    "question": "Which countries in europe have at least 3 car manufacturers?",
    "question_th": "ประเทศใดในยุโรปที่มีผู้ผลิตรถยนต์อย่างน้อย 3 ราย",
    "question_toks": "['Which', 'countries', 'in', 'europe', 'have', 'at', 'least', '3', 'car', 'manufacturers', '?']",
    "sql": "{'from': {'table_units': [['table_unit', 1], ['table_unit', 0], ['table_unit', 2]], 'conds': [[False, 2, [0, [0, 5, False], None], [0, 1, False], None], 'and', [False, 2, [0, [0, 3, False], None], [0, 9, False], None]]}, 'select': [False, [[0, [0, [0, 4, False], None]]]], 'where': [[False, 2, [0, [0, 2, False], None], '\"europe\"', None]], 'groupBy': [[0, 4, False]], 'having': [[False, 5, [0, [3, 0, False], None], 3.0, None]], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "car_1",
    "query": "SELECT T1.CountryName FROM COUNTRIES AS T1 JOIN CONTINENTS AS T2 ON T1.Continent  =  T2.ContId JOIN CAR_MAKERS AS T3 ON T1.CountryId  =  T3.Country WHERE T2.Continent  =  'europe' GROUP BY T1.CountryName HAVING count(*)  >=  3;",
    "query_toks": "['SELECT', 'T1.CountryName', 'FROM', 'COUNTRIES', 'AS', 'T1', 'JOIN', 'CONTINENTS', 'AS', 'T2', 'ON', 'T1.Continent', '=', 'T2.ContId', 'JOIN', 'CAR_MAKERS', 'AS', 'T3', 'ON', 'T1.CountryId', '=', 'T3.Country', 'WHERE', 'T2.Continent', '=', \"'europe\", \"'\", 'GROUP', 'BY', 'T1.CountryName', 'HAVING', 'count', '(', '*', ')', '>', '=', '3', ';']",
    "query_toks_no_value": "['select', 't1', '.', 'countryname', 'from', 'countries', 'as', 't1', 'join', 'continents', 'as', 't2', 'on', 't1', '.', 'continent', '=', 't2', '.', 'contid', 'join', 'car_makers', 'as', 't3', 'on', 't1', '.', 'countryid', '=', 't3', '.', 'country', 'where', 't2', '.', 'continent', '=', 'value', 'group', 'by', 't1', '.', 'countryname', 'having', 'count', '(', '*', ')', '>', '=', 'value']",
    "question": "What are the names of all European countries with at least 3 manufacturers?",
    "question_th": "ประเทศในยุโรปทั้งหมดที่มีผู้ผลิตอย่างน้อย 3 รายชื่ออะไร",
    "question_toks": "['What', 'are', 'the', 'names', 'of', 'all', 'European', 'countries', 'with', 'at', 'least', '3', 'manufacturers', '?']",
    "sql": "{'from': {'table_units': [['table_unit', 1], ['table_unit', 0], ['table_unit', 2]], 'conds': [[False, 2, [0, [0, 5, False], None], [0, 1, False], None], 'and', [False, 2, [0, [0, 3, False], None], [0, 9, False], None]]}, 'select': [False, [[0, [0, [0, 4, False], None]]]], 'where': [[False, 2, [0, [0, 2, False], None], '\"europe\"', None]], 'groupBy': [[0, 4, False]], 'having': [[False, 5, [0, [3, 0, False], None], 3.0, None]], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "car_1",
    "query": "SELECT T2.horsepower ,  T1.Make FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id WHERE T2.cylinders  =  3 ORDER BY T2.horsepower DESC LIMIT 1;",
    "query_toks": "['SELECT', 'T2.horsepower', ',', 'T1.Make', 'FROM', 'CAR_NAMES', 'AS', 'T1', 'JOIN', 'CARS_DATA', 'AS', 'T2', 'ON', 'T1.MakeId', '=', 'T2.Id', 'WHERE', 'T2.cylinders', '=', '3', 'ORDER', 'BY', 'T2.horsepower', 'DESC', 'LIMIT', '1', ';']",
    "query_toks_no_value": "['select', 't2', '.', 'horsepower', ',', 't1', '.', 'make', 'from', 'car_names', 'as', 't1', 'join', 'cars_data', 'as', 't2', 'on', 't1', '.', 'makeid', '=', 't2', '.', 'id', 'where', 't2', '.', 'cylinders', '=', 'value', 'order', 'by', 't2', '.', 'horsepower', 'desc', 'limit', 'value']",
    "question": "What is the maximum horsepower and the make of the car models with 3 cylinders?",
    "question_th": "แรงม้าสูงสุดและยี่ห้อของรถยนต์รุ่น 3 สูบคือเท่าไร?",
    "question_toks": "['What', 'is', 'the', 'maximum', 'horsepower', 'and', 'the', 'make', 'of', 'the', 'car', 'models', 'with', '3', 'cylinders', '?']",
    "sql": "{'from': {'table_units': [['table_unit', 4], ['table_unit', 5]], 'conds': [[False, 2, [0, [0, 13, False], None], [0, 16, False], None]]}, 'select': [False, [[0, [0, [0, 20, False], None]], [0, [0, [0, 15, False], None]]]], 'where': [[False, 2, [0, [0, 18, False], None], 3.0, None]], 'groupBy': [], 'having': [], 'orderBy': ['desc', [[0, [0, 20, False], None]]], 'limit': 1, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "car_1",
    "query": "SELECT T2.horsepower ,  T1.Make FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id WHERE T2.cylinders  =  3 ORDER BY T2.horsepower DESC LIMIT 1;",
    "query_toks": "['SELECT', 'T2.horsepower', ',', 'T1.Make', 'FROM', 'CAR_NAMES', 'AS', 'T1', 'JOIN', 'CARS_DATA', 'AS', 'T2', 'ON', 'T1.MakeId', '=', 'T2.Id', 'WHERE', 'T2.cylinders', '=', '3', 'ORDER', 'BY', 'T2.horsepower', 'DESC', 'LIMIT', '1', ';']",
    "query_toks_no_value": "['select', 't2', '.', 'horsepower', ',', 't1', '.', 'make', 'from', 'car_names', 'as', 't1', 'join', 'cars_data', 'as', 't2', 'on', 't1', '.', 'makeid', '=', 't2', '.', 'id', 'where', 't2', '.', 'cylinders', '=', 'value', 'order', 'by', 't2', '.', 'horsepower', 'desc', 'limit', 'value']",
    "question": "What is the largest amount of horsepower for the models with 3 cylinders and what make is it?",
    "question_th": "แรงม้าสูงสุดสำหรับรุ่น 3 สูบ คือเท่าไร และยี่ห้ออะไร?",
    "question_toks": "['What', 'is', 'the', 'largest', 'amount', 'of', 'horsepower', 'for', 'the', 'models', 'with', '3', 'cylinders', 'and', 'what', 'make', 'is', 'it', '?']",
    "sql": "{'from': {'table_units': [['table_unit', 4], ['table_unit', 5]], 'conds': [[False, 2, [0, [0, 13, False], None], [0, 16, False], None]]}, 'select': [False, [[0, [0, [0, 20, False], None]], [0, [0, [0, 15, False], None]]]], 'where': [[False, 2, [0, [0, 18, False], None], 3.0, None]], 'groupBy': [], 'having': [], 'orderBy': ['desc', [[0, [0, 20, False], None]]], 'limit': 1, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "car_1",
    "query": "SELECT T1.Model FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id ORDER BY T2.mpg DESC LIMIT 1;",
    "query_toks": "['SELECT', 'T1.Model', 'FROM', 'CAR_NAMES', 'AS', 'T1', 'JOIN', 'CARS_DATA', 'AS', 'T2', 'ON', 'T1.MakeId', '=', 'T2.Id', 'ORDER', 'BY', 'T2.mpg', 'DESC', 'LIMIT', '1', ';']",
    "query_toks_no_value": "['select', 't1', '.', 'model', 'from', 'car_names', 'as', 't1', 'join', 'cars_data', 'as', 't2', 'on', 't1', '.', 'makeid', '=', 't2', '.', 'id', 'order', 'by', 't2', '.', 'mpg', 'desc', 'limit', 'value']",
    "question": "Which model saves the most gasoline? That is to say, have the maximum miles per gallon.",
    "question_th": "รุ่นไหนประหยัดน้ำมันมากที่สุด? กล่าวคือ มีไมล์สูงสุดต่อแกลลอน",
    "question_toks": "['Which', 'model', 'saves', 'the', 'most', 'gasoline', '?', 'That', 'is', 'to', 'say', ',', 'have', 'the', 'maximum', 'miles', 'per', 'gallon', '.']",
    "sql": "{'from': {'table_units': [['table_unit', 4], ['table_unit', 5]], 'conds': [[False, 2, [0, [0, 13, False], None], [0, 16, False], None]]}, 'select': [False, [[0, [0, [0, 14, False], None]]]], 'where': [], 'groupBy': [], 'having': [], 'orderBy': ['desc', [[0, [0, 17, False], None]]], 'limit': 1, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "car_1",
    "query": "select t1.model from car_names as t1 join cars_data as t2 on t1.makeid  =  t2.id order by t2.mpg desc limit 1;",
    "query_toks": "['select', 't1.model', 'from', 'car_names', 'as', 't1', 'join', 'cars_data', 'as', 't2', 'on', 't1.makeid', '=', 't2.id', 'order', 'by', 't2.mpg', 'desc', 'limit', '1', ';']",
    "query_toks_no_value": "['select', 't1', '.', 'model', 'from', 'car_names', 'as', 't1', 'join', 'cars_data', 'as', 't2', 'on', 't1', '.', 'makeid', '=', 't2', '.', 'id', 'order', 'by', 't2', '.', 'mpg', 'desc', 'limit', 'value']",
    "question": "What is the car model with the highest mpg ?",
    "question_th": "รถรุ่นอะไร MPG สูงที่สุด ?",
    "question_toks": "['What', 'is', 'the', 'car', 'model', 'with', 'the', 'highest', 'mpg', '?']",
    "sql": "{'from': {'table_units': [['table_unit', 4], ['table_unit', 5]], 'conds': [[False, 2, [0, [0, 13, False], None], [0, 16, False], None]]}, 'select': [False, [[0, [0, [0, 14, False], None]]]], 'where': [], 'groupBy': [], 'having': [], 'orderBy': ['desc', [[0, [0, 17, False], None]]], 'limit': 1, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "car_1",
    "query": "SELECT avg(horsepower) FROM CARS_DATA WHERE YEAR  <  1980;",
    "query_toks": "['SELECT', 'avg', '(', 'horsepower', ')', 'FROM', 'CARS_DATA', 'WHERE', 'YEAR', '<', '1980', ';']",
    "query_toks_no_value": "['select', 'avg', '(', 'horsepower', ')', 'from', 'cars_data', 'where', 'year', '<', 'value']",
    "question": "What is the average horsepower of the cars before 1980?",
    "question_th": "แรงม้าเฉลี่ยของรถยนต์ก่อนปี 1980 เป็นเท่าใด?",
    "question_toks": "['What', 'is', 'the', 'average', 'horsepower', 'of', 'the', 'cars', 'before', '1980', '?']",
    "sql": "{'from': {'table_units': [['table_unit', 5]], 'conds': []}, 'select': [False, [[5, [0, [0, 20, False], None]]]], 'where': [[False, 4, [0, [0, 23, False], None], 1980.0, None]], 'groupBy': [], 'having': [], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "car_1",
    "query": "select avg(horsepower) from cars_data where year  <  1980;",
    "query_toks": "['select', 'avg', '(', 'horsepower', ')', 'from', 'cars_data', 'where', 'year', '<', '1980', ';']",
    "query_toks_no_value": "['select', 'avg', '(', 'horsepower', ')', 'from', 'cars_data', 'where', 'year', '<', 'value']",
    "question": "What is the average horsepower for all cars produced before 1980 ?",
    "question_th": "แรงม้าเฉลี่ยของรถยนต์ทุกคันที่ผลิตก่อนปี 1980 เป็นเท่าใด ?",
    "question_toks": "['What', 'is', 'the', 'average', 'horsepower', 'for', 'all', 'cars', 'produced', 'before', '1980', '?']",
    "sql": "{'from': {'table_units': [['table_unit', 5]], 'conds': []}, 'select': [False, [[5, [0, [0, 20, False], None]]]], 'where': [[False, 4, [0, [0, 23, False], None], 1980.0, None]], 'groupBy': [], 'having': [], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "car_1",
    "query": "SELECT avg(T2.edispl) FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id WHERE T1.Model  =  'volvo';",
    "query_toks": "['SELECT', 'avg', '(', 'T2.edispl', ')', 'FROM', 'CAR_NAMES', 'AS', 'T1', 'JOIN', 'CARS_DATA', 'AS', 'T2', 'ON', 'T1.MakeId', '=', 'T2.Id', 'WHERE', 'T1.Model', '=', \"'volvo\", \"'\", ';']",
    "query_toks_no_value": "['select', 'avg', '(', 't2', '.', 'edispl', ')', 'from', 'car_names', 'as', 't1', 'join', 'cars_data', 'as', 't2', 'on', 't1', '.', 'makeid', '=', 't2', '.', 'id', 'where', 't1', '.', 'model', '=', 'value']",
    "question": "What is the average edispl of the cars of model volvo?",
    "question_th": "ค่าเฉลี่ยของรถยนต์รุ่น volvo คือเท่าไร?",
    "question_toks": "['What', 'is', 'the', 'average', 'edispl', 'of', 'the', 'cars', 'of', 'model', 'volvo', '?']",
    "sql": "{'from': {'table_units': [['table_unit', 4], ['table_unit', 5]], 'conds': [[False, 2, [0, [0, 13, False], None], [0, 16, False], None]]}, 'select': [False, [[5, [0, [0, 19, False], None]]]], 'where': [[False, 2, [0, [0, 14, False], None], '\"volvo\"', None]], 'groupBy': [], 'having': [], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "car_1",
    "query": "SELECT avg(T2.edispl) FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id WHERE T1.Model  =  'volvo';",
    "query_toks": "['SELECT', 'avg', '(', 'T2.edispl', ')', 'FROM', 'CAR_NAMES', 'AS', 'T1', 'JOIN', 'CARS_DATA', 'AS', 'T2', 'ON', 'T1.MakeId', '=', 'T2.Id', 'WHERE', 'T1.Model', '=', \"'volvo\", \"'\", ';']",
    "query_toks_no_value": "['select', 'avg', '(', 't2', '.', 'edispl', ')', 'from', 'car_names', 'as', 't1', 'join', 'cars_data', 'as', 't2', 'on', 't1', '.', 'makeid', '=', 't2', '.', 'id', 'where', 't1', '.', 'model', '=', 'value']",
    "question": "What is the average edispl for all volvos?",
    "question_th": "ราคาเฉลี่ยของวอลโว่ทุกรุ่นคือเท่าไร?",
    "question_toks": "['What', 'is', 'the', 'average', 'edispl', 'for', 'all', 'volvos', '?']",
    "sql": "{'from': {'table_units': [['table_unit', 4], ['table_unit', 5]], 'conds': [[False, 2, [0, [0, 13, False], None], [0, 16, False], None]]}, 'select': [False, [[5, [0, [0, 19, False], None]]]], 'where': [[False, 2, [0, [0, 14, False], None], '\"volvo\"', None]], 'groupBy': [], 'having': [], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "car_1",
    "query": "SELECT max(Accelerate) ,  Cylinders FROM CARS_DATA GROUP BY Cylinders;",
    "query_toks": "['SELECT', 'max', '(', 'Accelerate', ')', ',', 'Cylinders', 'FROM', 'CARS_DATA', 'GROUP', 'BY', 'Cylinders', ';']",
    "query_toks_no_value": "['select', 'max', '(', 'accelerate', ')', ',', 'cylinders', 'from', 'cars_data', 'group', 'by', 'cylinders']",
    "question": "What is the maximum accelerate for different number of cylinders?",
    "question_th": "อัตราเร่งสูงสุดสำหรับจำนวนกระบอกสูบต่างกันคือเท่าใด",
    "question_toks": "['What', 'is', 'the', 'maximum', 'accelerate', 'for', 'different', 'number', 'of', 'cylinders', '?']",
    "sql": "{'from': {'table_units': [['table_unit', 5]], 'conds': []}, 'select': [False, [[1, [0, [0, 22, False], None]], [0, [0, [0, 18, False], None]]]], 'where': [], 'groupBy': [[0, 18, False]], 'having': [], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "car_1",
    "query": "SELECT max(Accelerate) ,  Cylinders FROM CARS_DATA GROUP BY Cylinders;",
    "query_toks": "['SELECT', 'max', '(', 'Accelerate', ')', ',', 'Cylinders', 'FROM', 'CARS_DATA', 'GROUP', 'BY', 'Cylinders', ';']",
    "query_toks_no_value": "['select', 'max', '(', 'accelerate', ')', ',', 'cylinders', 'from', 'cars_data', 'group', 'by', 'cylinders']",
    "question": "What is the maximum accelerate for all the different cylinders?",
    "question_th": "อัตราเร่งสูงสุดสำหรับกระบอกสูบต่างๆ ทั้งหมดคือเท่าใด?",
    "question_toks": "['What', 'is', 'the', 'maximum', 'accelerate', 'for', 'all', 'the', 'different', 'cylinders', '?']",
    "sql": "{'from': {'table_units': [['table_unit', 5]], 'conds': []}, 'select': [False, [[1, [0, [0, 22, False], None]], [0, [0, [0, 18, False], None]]]], 'where': [], 'groupBy': [[0, 18, False]], 'having': [], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "car_1",
    "query": "SELECT Model FROM CAR_NAMES GROUP BY Model ORDER BY count(*) DESC LIMIT 1;",
    "query_toks": "['SELECT', 'Model', 'FROM', 'CAR_NAMES', 'GROUP', 'BY', 'Model', 'ORDER', 'BY', 'count', '(', '*', ')', 'DESC', 'LIMIT', '1', ';']",
    "query_toks_no_value": "['select', 'model', 'from', 'car_names', 'group', 'by', 'model', 'order', 'by', 'count', '(', '*', ')', 'desc', 'limit', 'value']",
    "question": "Which model has the most version(make) of cars?",
    "question_th": "รถยนต์รุ่นใดมีรุ่น(ยี่ห้อ) มากที่สุด?",
    "question_toks": "['Which', 'model', 'has', 'the', 'most', 'version', '(', 'make', ')', 'of', 'cars', '?']",
    "sql": "{'from': {'table_units': [['table_unit', 4]], 'conds': []}, 'select': [False, [[0, [0, [0, 14, False], None]]]], 'where': [], 'groupBy': [[0, 14, False]], 'having': [], 'orderBy': ['desc', [[0, [3, 0, False], None]]], 'limit': 1, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "car_1",
    "query": "SELECT Model FROM CAR_NAMES GROUP BY Model ORDER BY count(*) DESC LIMIT 1;",
    "query_toks": "['SELECT', 'Model', 'FROM', 'CAR_NAMES', 'GROUP', 'BY', 'Model', 'ORDER', 'BY', 'count', '(', '*', ')', 'DESC', 'LIMIT', '1', ';']",
    "query_toks_no_value": "['select', 'model', 'from', 'car_names', 'group', 'by', 'model', 'order', 'by', 'count', '(', '*', ')', 'desc', 'limit', 'value']",
    "question": "What model has the most different versions?",
    "question_th": "รุ่นใดมีรุ่นที่แตกต่างกันมากที่สุด?",
    "question_toks": "['What', 'model', 'has', 'the', 'most', 'different', 'versions', '?']",
    "sql": "{'from': {'table_units': [['table_unit', 4]], 'conds': []}, 'select': [False, [[0, [0, [0, 14, False], None]]]], 'where': [], 'groupBy': [[0, 14, False]], 'having': [], 'orderBy': ['desc', [[0, [3, 0, False], None]]], 'limit': 1, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "car_1",
    "query": "SELECT count(*) FROM CARS_DATA WHERE Cylinders  >  4;",
    "query_toks": "['SELECT', 'count', '(', '*', ')', 'FROM', 'CARS_DATA', 'WHERE', 'Cylinders', '>', '4', ';']",
    "query_toks_no_value": "['select', 'count', '(', '*', ')', 'from', 'cars_data', 'where', 'cylinders', '>', 'value']",
    "question": "How many cars have more than 4 cylinders?",
    "question_th": "มีรถกี่คันที่มีมากกว่า 4 สูบ?",
    "question_toks": "['How', 'many', 'cars', 'have', 'more', 'than', '4', 'cylinders', '?']",
    "sql": "{'from': {'table_units': [['table_unit', 5]], 'conds': []}, 'select': [False, [[3, [0, [0, 0, False], None]]]], 'where': [[False, 3, [0, [0, 18, False], None], 4.0, None]], 'groupBy': [], 'having': [], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "car_1",
    "query": "SELECT count(*) FROM CARS_DATA WHERE Cylinders  >  4;",
    "query_toks": "['SELECT', 'count', '(', '*', ')', 'FROM', 'CARS_DATA', 'WHERE', 'Cylinders', '>', '4', ';']",
    "query_toks_no_value": "['select', 'count', '(', '*', ')', 'from', 'cars_data', 'where', 'cylinders', '>', 'value']",
    "question": "What is the number of cars with more than 4 cylinders?",
    "question_th": "รถที่มีมากกว่า 4 สูบมีกี่คัน?",
    "question_toks": "['What', 'is', 'the', 'number', 'of', 'cars', 'with', 'more', 'than', '4', 'cylinders', '?']",
    "sql": "{'from': {'table_units': [['table_unit', 5]], 'conds': []}, 'select': [False, [[3, [0, [0, 0, False], None]]]], 'where': [[False, 3, [0, [0, 18, False], None], 4.0, None]], 'groupBy': [], 'having': [], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "car_1",
    "query": "SELECT count(*) FROM CARS_DATA WHERE YEAR  =  1980;",
    "query_toks": "['SELECT', 'count', '(', '*', ')', 'FROM', 'CARS_DATA', 'WHERE', 'YEAR', '=', '1980', ';']",
    "query_toks_no_value": "['select', 'count', '(', '*', ')', 'from', 'cars_data', 'where', 'year', '=', 'value']",
    "question": "how many cars were produced in 1980?",
    "question_th": "มีรถยนต์กี่คันที่ผลิตในปี 1980?",
    "question_toks": "['how', 'many', 'cars', 'were', 'produced', 'in', '1980', '?']",
    "sql": "{'from': {'table_units': [['table_unit', 5]], 'conds': []}, 'select': [False, [[3, [0, [0, 0, False], None]]]], 'where': [[False, 2, [0, [0, 23, False], None], 1980.0, None]], 'groupBy': [], 'having': [], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "car_1",
    "query": "SELECT count(*) FROM CARS_DATA WHERE YEAR  =  1980;",
    "query_toks": "['SELECT', 'count', '(', '*', ')', 'FROM', 'CARS_DATA', 'WHERE', 'YEAR', '=', '1980', ';']",
    "query_toks_no_value": "['select', 'count', '(', '*', ')', 'from', 'cars_data', 'where', 'year', '=', 'value']",
    "question": "In 1980, how many cars were made?",
    "question_th": "ในปี 1980 มีการผลิตรถยนต์จำนวนกี่คัน?",
    "question_toks": "['In', '1980', ',', 'how', 'many', 'cars', 'were', 'made', '?']",
    "sql": "{'from': {'table_units': [['table_unit', 5]], 'conds': []}, 'select': [False, [[3, [0, [0, 0, False], None]]]], 'where': [[False, 2, [0, [0, 23, False], None], 1980.0, None]], 'groupBy': [], 'having': [], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "car_1",
    "query": "SELECT count(*) FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id  =  T2.Maker WHERE T1.FullName  =  'American Motor Company';",
    "query_toks": "['SELECT', 'count', '(', '*', ')', 'FROM', 'CAR_MAKERS', 'AS', 'T1', 'JOIN', 'MODEL_LIST', 'AS', 'T2', 'ON', 'T1.Id', '=', 'T2.Maker', 'WHERE', 'T1.FullName', '=', \"'American\", 'Motor', 'Company', \"'\", ';']",
    "query_toks_no_value": "['select', 'count', '(', '*', ')', 'from', 'car_makers', 'as', 't1', 'join', 'model_list', 'as', 't2', 'on', 't1', '.', 'id', '=', 't2', '.', 'maker', 'where', 't1', '.', 'fullname', '=', 'value']",
    "question": "How many car models were produced by the maker with full name American Motor Company?",
    "question_th": "ผู้ผลิตรถยนต์ที่มีชื่อเต็มว่า American Motor Company ผลิตรถยนต์ได้กี่รุ่น?",
    "question_toks": "['How', 'many', 'car', 'models', 'were', 'produced', 'by', 'the', 'maker', 'with', 'full', 'name', 'American', 'Motor', 'Company', '?']",
    "sql": "{'from': {'table_units': [['table_unit', 2], ['table_unit', 3]], 'conds': [[False, 2, [0, [0, 6, False], None], [0, 11, False], None]]}, 'select': [False, [[3, [0, [0, 0, False], None]]]], 'where': [[False, 2, [0, [0, 8, False], None], '\"American Motor Company\"', None]], 'groupBy': [], 'having': [], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "car_1",
    "query": "SELECT count(*) FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id  =  T2.Maker WHERE T1.FullName  =  'American Motor Company';",
    "query_toks": "['SELECT', 'count', '(', '*', ')', 'FROM', 'CAR_MAKERS', 'AS', 'T1', 'JOIN', 'MODEL_LIST', 'AS', 'T2', 'ON', 'T1.Id', '=', 'T2.Maker', 'WHERE', 'T1.FullName', '=', \"'American\", 'Motor', 'Company', \"'\", ';']",
    "query_toks_no_value": "['select', 'count', '(', '*', ')', 'from', 'car_makers', 'as', 't1', 'join', 'model_list', 'as', 't2', 'on', 't1', '.', 'id', '=', 't2', '.', 'maker', 'where', 't1', '.', 'fullname', '=', 'value']",
    "question": "What is the number of car models created by the car maker American Motor Company?",
    "question_th": "ผู้ผลิตรถยนต์ American Motor Company ผลิตรถยนต์จำนวนเท่าใด",
    "question_toks": "['What', 'is', 'the', 'number', 'of', 'car', 'models', 'created', 'by', 'the', 'car', 'maker', 'American', 'Motor', 'Company', '?']",
    "sql": "{'from': {'table_units': [['table_unit', 2], ['table_unit', 3]], 'conds': [[False, 2, [0, [0, 6, False], None], [0, 11, False], None]]}, 'select': [False, [[3, [0, [0, 0, False], None]]]], 'where': [[False, 2, [0, [0, 8, False], None], '\"American Motor Company\"', None]], 'groupBy': [], 'having': [], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "car_1",
    "query": "SELECT T1.FullName ,  T1.Id FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id  =  T2.Maker GROUP BY T1.Id HAVING count(*)  >  3;",
    "query_toks": "['SELECT', 'T1.FullName', ',', 'T1.Id', 'FROM', 'CAR_MAKERS', 'AS', 'T1', 'JOIN', 'MODEL_LIST', 'AS', 'T2', 'ON', 'T1.Id', '=', 'T2.Maker', 'GROUP', 'BY', 'T1.Id', 'HAVING', 'count', '(', '*', ')', '>', '3', ';']",
    "query_toks_no_value": "['select', 't1', '.', 'fullname', ',', 't1', '.', 'id', 'from', 'car_makers', 'as', 't1', 'join', 'model_list', 'as', 't2', 'on', 't1', '.', 'id', '=', 't2', '.', 'maker', 'group', 'by', 't1', '.', 'id', 'having', 'count', '(', '*', ')', '>', 'value']",
    "question": "Which makers designed more than 3 car models? List full name and the id.",
    "question_th": "ผู้ผลิตรายไหนออกแบบรถมากกว่า 3 รุ่น? รายชื่อเต็มและรหัส",
    "question_toks": "['Which', 'makers', 'designed', 'more', 'than', '3', 'car', 'models', '?', 'List', 'full', 'name', 'and', 'the', 'id', '.']",
    "sql": "{'from': {'table_units': [['table_unit', 2], ['table_unit', 3]], 'conds': [[False, 2, [0, [0, 6, False], None], [0, 11, False], None]]}, 'select': [False, [[0, [0, [0, 8, False], None]], [0, [0, [0, 6, False], None]]]], 'where': [], 'groupBy': [[0, 6, False]], 'having': [[False, 3, [0, [3, 0, False], None], 3.0, None]], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "car_1",
    "query": "SELECT T1.FullName ,  T1.Id FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id  =  T2.Maker GROUP BY T1.Id HAVING count(*)  >  3;",
    "query_toks": "['SELECT', 'T1.FullName', ',', 'T1.Id', 'FROM', 'CAR_MAKERS', 'AS', 'T1', 'JOIN', 'MODEL_LIST', 'AS', 'T2', 'ON', 'T1.Id', '=', 'T2.Maker', 'GROUP', 'BY', 'T1.Id', 'HAVING', 'count', '(', '*', ')', '>', '3', ';']",
    "query_toks_no_value": "['select', 't1', '.', 'fullname', ',', 't1', '.', 'id', 'from', 'car_makers', 'as', 't1', 'join', 'model_list', 'as', 't2', 'on', 't1', '.', 'id', '=', 't2', '.', 'maker', 'group', 'by', 't1', '.', 'id', 'having', 'count', '(', '*', ')', '>', 'value']",
    "question": "What are the names and ids of all makers with more than 3 models?",
    "question_th": "ชื่อและรหัสของผู้ผลิตทั้งหมดที่มีมากกว่า 3 รุ่นคืออะไร?",
    "question_toks": "['What', 'are', 'the', 'names', 'and', 'ids', 'of', 'all', 'makers', 'with', 'more', 'than', '3', 'models', '?']",
    "sql": "{'from': {'table_units': [['table_unit', 2], ['table_unit', 3]], 'conds': [[False, 2, [0, [0, 6, False], None], [0, 11, False], None]]}, 'select': [False, [[0, [0, [0, 8, False], None]], [0, [0, [0, 6, False], None]]]], 'where': [], 'groupBy': [[0, 6, False]], 'having': [[False, 3, [0, [3, 0, False], None], 3.0, None]], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "car_1",
    "query": "SELECT DISTINCT T2.Model FROM CAR_NAMES AS T1 JOIN MODEL_LIST AS T2 ON T1.Model  =  T2.Model JOIN CAR_MAKERS AS T3 ON T2.Maker  =  T3.Id JOIN CARS_DATA AS T4 ON T1.MakeId  =  T4.Id WHERE T3.FullName  =  'General Motors' OR T4.weight  >  3500;",
    "query_toks": "['SELECT', 'DISTINCT', 'T2.Model', 'FROM', 'CAR_NAMES', 'AS', 'T1', 'JOIN', 'MODEL_LIST', 'AS', 'T2', 'ON', 'T1.Model', '=', 'T2.Model', 'JOIN', 'CAR_MAKERS', 'AS', 'T3', 'ON', 'T2.Maker', '=', 'T3.Id', 'JOIN', 'CARS_DATA', 'AS', 'T4', 'ON', 'T1.MakeId', '=', 'T4.Id', 'WHERE', 'T3.FullName', '=', \"'General\", 'Motors', \"'\", 'OR', 'T4.weight', '>', '3500', ';']",
    "query_toks_no_value": "['select', 'distinct', 't2', '.', 'model', 'from', 'car_names', 'as', 't1', 'join', 'model_list', 'as', 't2', 'on', 't1', '.', 'model', '=', 't2', '.', 'model', 'join', 'car_makers', 'as', 't3', 'on', 't2', '.', 'maker', '=', 't3', '.', 'id', 'join', 'cars_data', 'as', 't4', 'on', 't1', '.', 'makeid', '=', 't4', '.', 'id', 'where', 't3', '.', 'fullname', '=', 'value', 'or', 't4', '.', 'weight', '>', 'value']",
    "question": "Which distinctive models are produced by maker with the full name General Motors or weighing more than 3500?",
    "question_th": "รุ่นที่โดดเด่นใดบ้างที่ผลิตโดยผู้ผลิตที่มีชื่อเต็มว่า General Motors หรือมีน้ำหนักมากกว่า 3,500?",
    "question_toks": "['Which', 'distinctive', 'models', 'are', 'produced', 'by', 'maker', 'with', 'the', 'full', 'name', 'General', 'Motors', 'or', 'weighing', 'more', 'than', '3500', '?']",
    "sql": "{'from': {'table_units': [['table_unit', 4], ['table_unit', 3], ['table_unit', 2], ['table_unit', 5]], 'conds': [[False, 2, [0, [0, 14, False], None], [0, 12, False], None], 'and', [False, 2, [0, [0, 11, False], None], [0, 6, False], None], 'and', [False, 2, [0, [0, 13, False], None], [0, 16, False], None]]}, 'select': [True, [[0, [0, [0, 12, False], None]]]], 'where': [[False, 2, [0, [0, 8, False], None], '\"General Motors\"', None], 'or', [False, 3, [0, [0, 21, False], None], 3500.0, None]], 'groupBy': [], 'having': [], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "car_1",
    "query": "SELECT DISTINCT T2.Model FROM CAR_NAMES AS T1 JOIN MODEL_LIST AS T2 ON T1.Model  =  T2.Model JOIN CAR_MAKERS AS T3 ON T2.Maker  =  T3.Id JOIN CARS_DATA AS T4 ON T1.MakeId  =  T4.Id WHERE T3.FullName  =  'General Motors' OR T4.weight  >  3500;",
    "query_toks": "['SELECT', 'DISTINCT', 'T2.Model', 'FROM', 'CAR_NAMES', 'AS', 'T1', 'JOIN', 'MODEL_LIST', 'AS', 'T2', 'ON', 'T1.Model', '=', 'T2.Model', 'JOIN', 'CAR_MAKERS', 'AS', 'T3', 'ON', 'T2.Maker', '=', 'T3.Id', 'JOIN', 'CARS_DATA', 'AS', 'T4', 'ON', 'T1.MakeId', '=', 'T4.Id', 'WHERE', 'T3.FullName', '=', \"'General\", 'Motors', \"'\", 'OR', 'T4.weight', '>', '3500', ';']",
    "query_toks_no_value": "['select', 'distinct', 't2', '.', 'model', 'from', 'car_names', 'as', 't1', 'join', 'model_list', 'as', 't2', 'on', 't1', '.', 'model', '=', 't2', '.', 'model', 'join', 'car_makers', 'as', 't3', 'on', 't2', '.', 'maker', '=', 't3', '.', 'id', 'join', 'cars_data', 'as', 't4', 'on', 't1', '.', 'makeid', '=', 't4', '.', 'id', 'where', 't3', '.', 'fullname', '=', 'value', 'or', 't4', '.', 'weight', '>', 'value']",
    "question": "What are the different models created by either the car maker General Motors or weighed more than 3500?",
    "question_th": "อะไรคือรุ่นที่แตกต่างกันที่สร้างโดยผู้ผลิตรถยนต์ General Motors หรือมีน้ำหนักมากกว่า 3,500?",
    "question_toks": "['What', 'are', 'the', 'different', 'models', 'created', 'by', 'either', 'the', 'car', 'maker', 'General', 'Motors', 'or', 'weighed', 'more', 'than', '3500', '?']",
    "sql": "{'from': {'table_units': [['table_unit', 4], ['table_unit', 3], ['table_unit', 2], ['table_unit', 5]], 'conds': [[False, 2, [0, [0, 14, False], None], [0, 12, False], None], 'and', [False, 2, [0, [0, 11, False], None], [0, 6, False], None], 'and', [False, 2, [0, [0, 13, False], None], [0, 16, False], None]]}, 'select': [True, [[0, [0, [0, 12, False], None]]]], 'where': [[False, 2, [0, [0, 8, False], None], '\"General Motors\"', None], 'or', [False, 3, [0, [0, 21, False], None], 3500.0, None]], 'groupBy': [], 'having': [], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "car_1",
    "query": "select distinct year from cars_data where weight between 3000 and 4000;",
    "query_toks": "['select', 'distinct', 'year', 'from', 'cars_data', 'where', 'weight', 'between', '3000', 'and', '4000', ';']",
    "query_toks_no_value": "['select', 'distinct', 'year', 'from', 'cars_data', 'where', 'weight', 'between', 'value', 'and', 'value']",
    "question": "In which years cars were produced weighing no less than 3000 and no more than 4000 ?",
    "question_th": "ในปีใดมีการผลิตรถยนต์ที่มีน้ำหนักไม่ต่ำกว่า 3,000 คัน และไม่เกิน 4,000 คัน ?",
    "question_toks": "['In', 'which', 'years', 'cars', 'were', 'produced', 'weighing', 'no', 'less', 'than', '3000', 'and', 'no', 'more', 'than', '4000', '?']",
    "sql": "{'from': {'table_units': [['table_unit', 5]], 'conds': []}, 'select': [True, [[0, [0, [0, 23, False], None]]]], 'where': [[False, 1, [0, [0, 21, False], None], 3000.0, 4000.0]], 'groupBy': [], 'having': [], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "car_1",
    "query": "select distinct year from cars_data where weight between 3000 and 4000;",
    "query_toks": "['select', 'distinct', 'year', 'from', 'cars_data', 'where', 'weight', 'between', '3000', 'and', '4000', ';']",
    "query_toks_no_value": "['select', 'distinct', 'year', 'from', 'cars_data', 'where', 'weight', 'between', 'value', 'and', 'value']",
    "question": "What are the different years in which there were cars produced that weighed less than 4000 and also cars that weighted more than 3000 ?",
    "question_th": "ปีใดบ้างที่มีรถยนต์ที่ผลิตซึ่งมีน้ำหนักน้อยกว่า 4,000 คัน และรถยนต์ที่มีน้ำหนักมากกว่า 3,000 คันด้วย?",
    "question_toks": "['What', 'are', 'the', 'different', 'years', 'in', 'which', 'there', 'were', 'cars', 'produced', 'that', 'weighed', 'less', 'than', '4000', 'and', 'also', 'cars', 'that', 'weighted', 'more', 'than', '3000', '?']",
    "sql": "{'from': {'table_units': [['table_unit', 5]], 'conds': []}, 'select': [True, [[0, [0, [0, 23, False], None]]]], 'where': [[False, 1, [0, [0, 21, False], None], 3000.0, 4000.0]], 'groupBy': [], 'having': [], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "car_1",
    "query": "SELECT T1.horsepower FROM CARS_DATA AS T1 ORDER BY T1.accelerate DESC LIMIT 1;",
    "query_toks": "['SELECT', 'T1.horsepower', 'FROM', 'CARS_DATA', 'AS', 'T1', 'ORDER', 'BY', 'T1.accelerate', 'DESC', 'LIMIT', '1', ';']",
    "query_toks_no_value": "['select', 't1', '.', 'horsepower', 'from', 'cars_data', 'as', 't1', 'order', 'by', 't1', '.', 'accelerate', 'desc', 'limit', 'value']",
    "question": "What is the horsepower of the car with the largest accelerate?",
    "question_th": "แรงม้าของรถที่มีอัตราเร่งสูงสุดคือเท่าไหร่?",
    "question_toks": "['What', 'is', 'the', 'horsepower', 'of', 'the', 'car', 'with', 'the', 'largest', 'accelerate', '?']",
    "sql": "{'from': {'table_units': [['table_unit', 5]], 'conds': []}, 'select': [False, [[0, [0, [0, 20, False], None]]]], 'where': [], 'groupBy': [], 'having': [], 'orderBy': ['desc', [[0, [0, 22, False], None]]], 'limit': 1, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "car_1",
    "query": "SELECT T1.horsepower FROM CARS_DATA AS T1 ORDER BY T1.accelerate DESC LIMIT 1;",
    "query_toks": "['SELECT', 'T1.horsepower', 'FROM', 'CARS_DATA', 'AS', 'T1', 'ORDER', 'BY', 'T1.accelerate', 'DESC', 'LIMIT', '1', ';']",
    "query_toks_no_value": "['select', 't1', '.', 'horsepower', 'from', 'cars_data', 'as', 't1', 'order', 'by', 't1', '.', 'accelerate', 'desc', 'limit', 'value']",
    "question": "What is the horsepower of the car with the greatest accelerate?",
    "question_th": "แรงม้าของรถที่มีอัตราเร่งสูงสุดเป็นเท่าใด?",
    "question_toks": "['What', 'is', 'the', 'horsepower', 'of', 'the', 'car', 'with', 'the', 'greatest', 'accelerate', '?']",
    "sql": "{'from': {'table_units': [['table_unit', 5]], 'conds': []}, 'select': [False, [[0, [0, [0, 20, False], None]]]], 'where': [], 'groupBy': [], 'having': [], 'orderBy': ['desc', [[0, [0, 22, False], None]]], 'limit': 1, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "car_1",
    "query": "SELECT T1.cylinders FROM CARS_DATA AS T1 JOIN CAR_NAMES AS T2 ON T1.Id  =  T2.MakeId WHERE T2.Model  =  'volvo' ORDER BY T1.accelerate ASC LIMIT 1;",
    "query_toks": "['SELECT', 'T1.cylinders', 'FROM', 'CARS_DATA', 'AS', 'T1', 'JOIN', 'CAR_NAMES', 'AS', 'T2', 'ON', 'T1.Id', '=', 'T2.MakeId', 'WHERE', 'T2.Model', '=', \"'volvo\", \"'\", 'ORDER', 'BY', 'T1.accelerate', 'ASC', 'LIMIT', '1', ';']",
    "query_toks_no_value": "['select', 't1', '.', 'cylinders', 'from', 'cars_data', 'as', 't1', 'join', 'car_names', 'as', 't2', 'on', 't1', '.', 'id', '=', 't2', '.', 'makeid', 'where', 't2', '.', 'model', '=', 'value', 'order', 'by', 't1', '.', 'accelerate', 'asc', 'limit', 'value']",
    "question": "For model volvo, how many cylinders does the car with the least accelerate have?",
    "question_th": "สำหรับรุ่นวอลโว่ รถที่มีอัตราเร่งน้อยที่สุดมีกี่กระบอกสูบ?",
    "question_toks": "['For', 'model', 'volvo', ',', 'how', 'many', 'cylinders', 'does', 'the', 'car', 'with', 'the', 'least', 'accelerate', 'have', '?']",
    "sql": "{'from': {'table_units': [['table_unit', 5], ['table_unit', 4]], 'conds': [[False, 2, [0, [0, 16, False], None], [0, 13, False], None]]}, 'select': [False, [[0, [0, [0, 18, False], None]]]], 'where': [[False, 2, [0, [0, 14, False], None], '\"volvo\"', None]], 'groupBy': [], 'having': [], 'orderBy': ['asc', [[0, [0, 22, False], None]]], 'limit': 1, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "car_1",
    "query": "SELECT T1.cylinders FROM CARS_DATA AS T1 JOIN CAR_NAMES AS T2 ON T1.Id  =  T2.MakeId WHERE T2.Model  =  'volvo' ORDER BY T1.accelerate ASC LIMIT 1;",
    "query_toks": "['SELECT', 'T1.cylinders', 'FROM', 'CARS_DATA', 'AS', 'T1', 'JOIN', 'CAR_NAMES', 'AS', 'T2', 'ON', 'T1.Id', '=', 'T2.MakeId', 'WHERE', 'T2.Model', '=', \"'volvo\", \"'\", 'ORDER', 'BY', 'T1.accelerate', 'ASC', 'LIMIT', '1', ';']",
    "query_toks_no_value": "['select', 't1', '.', 'cylinders', 'from', 'cars_data', 'as', 't1', 'join', 'car_names', 'as', 't2', 'on', 't1', '.', 'id', '=', 't2', '.', 'makeid', 'where', 't2', '.', 'model', '=', 'value', 'order', 'by', 't1', '.', 'accelerate', 'asc', 'limit', 'value']",
    "question": "For a volvo model, how many cylinders does the version with least accelerate have?",
    "question_th": "สำหรับรุ่นวอลโว่ รุ่นที่มีอัตราเร่งน้อยที่สุดมีกี่กระบอกสูบ?",
    "question_toks": "['For', 'a', 'volvo', 'model', ',', 'how', 'many', 'cylinders', 'does', 'the', 'version', 'with', 'least', 'accelerate', 'have', '?']",
    "sql": "{'from': {'table_units': [['table_unit', 5], ['table_unit', 4]], 'conds': [[False, 2, [0, [0, 16, False], None], [0, 13, False], None]]}, 'select': [False, [[0, [0, [0, 18, False], None]]]], 'where': [[False, 2, [0, [0, 14, False], None], '\"volvo\"', None]], 'groupBy': [], 'having': [], 'orderBy': ['asc', [[0, [0, 22, False], None]]], 'limit': 1, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "car_1",
    "query": "SELECT COUNT(*) FROM CARS_DATA WHERE Accelerate  >  ( SELECT Accelerate FROM CARS_DATA ORDER BY Horsepower DESC LIMIT 1 );",
    "query_toks": "['SELECT', 'COUNT', '(', '*', ')', 'FROM', 'CARS_DATA', 'WHERE', 'Accelerate', '>', '(', 'SELECT', 'Accelerate', 'FROM', 'CARS_DATA', 'ORDER', 'BY', 'Horsepower', 'DESC', 'LIMIT', '1', ')', ';']",
    "query_toks_no_value": "['select', 'count', '(', '*', ')', 'from', 'cars_data', 'where', 'accelerate', '>', '(', 'select', 'accelerate', 'from', 'cars_data', 'order', 'by', 'horsepower', 'desc', 'limit', 'value', ')']",
    "question": "How many cars have a larger accelerate than the car with the largest horsepower?",
    "question_th": "มีรถยนต์กี่คันที่มีอัตราเร่งมากกว่ารถที่มีแรงม้ามากที่สุด?",
    "question_toks": "['How', 'many', 'cars', 'have', 'a', 'larger', 'accelerate', 'than', 'the', 'car', 'with', 'the', 'largest', 'horsepower', '?']",
    "sql": "{'from': {'table_units': [['table_unit', 5]], 'conds': []}, 'select': [False, [[3, [0, [0, 0, False], None]]]], 'where': [[False, 3, [0, [0, 22, False], None], {'from': {'table_units': [['table_unit', 5]], 'conds': []}, 'select': [False, [[0, [0, [0, 22, False], None]]]], 'where': [], 'groupBy': [], 'having': [], 'orderBy': ['desc', [[0, [0, 20, False], None]]], 'limit': 1, 'intersect': None, 'union': None, 'except': None}, None]], 'groupBy': [], 'having': [], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "car_1",
    "query": "SELECT COUNT(*) FROM CARS_DATA WHERE Accelerate  >  ( SELECT Accelerate FROM CARS_DATA ORDER BY Horsepower DESC LIMIT 1 );",
    "query_toks": "['SELECT', 'COUNT', '(', '*', ')', 'FROM', 'CARS_DATA', 'WHERE', 'Accelerate', '>', '(', 'SELECT', 'Accelerate', 'FROM', 'CARS_DATA', 'ORDER', 'BY', 'Horsepower', 'DESC', 'LIMIT', '1', ')', ';']",
    "query_toks_no_value": "['select', 'count', '(', '*', ')', 'from', 'cars_data', 'where', 'accelerate', '>', '(', 'select', 'accelerate', 'from', 'cars_data', 'order', 'by', 'horsepower', 'desc', 'limit', 'value', ')']",
    "question": "What is the number of cars with a greater accelerate than the one with the most horsepower?",
    "question_th": "รถที่มีอัตราเร่งมากกว่ารถที่มีแรงม้าสูงสุดมีกี่คัน?",
    "question_toks": "['What', 'is', 'the', 'number', 'of', 'cars', 'with', 'a', 'greater', 'accelerate', 'than', 'the', 'one', 'with', 'the', 'most', 'horsepower', '?']",
    "sql": "{'from': {'table_units': [['table_unit', 5]], 'conds': []}, 'select': [False, [[3, [0, [0, 0, False], None]]]], 'where': [[False, 3, [0, [0, 22, False], None], {'from': {'table_units': [['table_unit', 5]], 'conds': []}, 'select': [False, [[0, [0, [0, 22, False], None]]]], 'where': [], 'groupBy': [], 'having': [], 'orderBy': ['desc', [[0, [0, 20, False], None]]], 'limit': 1, 'intersect': None, 'union': None, 'except': None}, None]], 'groupBy': [], 'having': [], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "car_1",
    "query": "select count(*) from countries as t1 join car_makers as t2 on t1.countryid  =  t2.country group by t1.countryid having count(*)  >  2",
    "query_toks": "['select', 'count', '(', '*', ')', 'from', 'countries', 'as', 't1', 'join', 'car_makers', 'as', 't2', 'on', 't1.countryid', '=', 't2.country', 'group', 'by', 't1.countryid', 'having', 'count', '(', '*', ')', '>', '2']",
    "query_toks_no_value": "['select', 'count', '(', '*', ')', 'from', 'countries', 'as', 't1', 'join', 'car_makers', 'as', 't2', 'on', 't1', '.', 'countryid', '=', 't2', '.', 'country', 'group', 'by', 't1', '.', 'countryid', 'having', 'count', '(', '*', ')', '>', 'value']",
    "question": "How many countries has more than 2 car makers ?",
    "question_th": "มีกี่ประเทศที่มีผู้ผลิตรถยนต์มากกว่า 2 ราย?",
    "question_toks": "['How', 'many', 'countries', 'has', 'more', 'than', '2', 'car', 'makers', '?']",
    "sql": "{'from': {'table_units': [['table_unit', 1], ['table_unit', 2]], 'conds': [[False, 2, [0, [0, 3, False], None], [0, 9, False], None]]}, 'select': [False, [[3, [0, [0, 0, False], None]]]], 'where': [], 'groupBy': [[0, 3, False]], 'having': [[False, 3, [0, [3, 0, False], None], 2.0, None]], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "car_1",
    "query": "select count(*) from countries as t1 join car_makers as t2 on t1.countryid  =  t2.country group by t1.countryid having count(*)  >  2",
    "query_toks": "['select', 'count', '(', '*', ')', 'from', 'countries', 'as', 't1', 'join', 'car_makers', 'as', 't2', 'on', 't1.countryid', '=', 't2.country', 'group', 'by', 't1.countryid', 'having', 'count', '(', '*', ')', '>', '2']",
    "query_toks_no_value": "['select', 'count', '(', '*', ')', 'from', 'countries', 'as', 't1', 'join', 'car_makers', 'as', 't2', 'on', 't1', '.', 'countryid', '=', 't2', '.', 'country', 'group', 'by', 't1', '.', 'countryid', 'having', 'count', '(', '*', ')', '>', 'value']",
    "question": "What is the number of countries with more than 2 car makers ?",
    "question_th": "จำนวนประเทศที่มีผู้ผลิตรถยนต์มากกว่า 2 รายคือเท่าใด",
    "question_toks": "['What', 'is', 'the', 'number', 'of', 'countries', 'with', 'more', 'than', '2', 'car', 'makers', '?']",
    "sql": "{'from': {'table_units': [['table_unit', 1], ['table_unit', 2]], 'conds': [[False, 2, [0, [0, 3, False], None], [0, 9, False], None]]}, 'select': [False, [[3, [0, [0, 0, False], None]]]], 'where': [], 'groupBy': [[0, 3, False]], 'having': [[False, 3, [0, [3, 0, False], None], 2.0, None]], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "car_1",
    "query": "SELECT COUNT(*) FROM CARS_DATA WHERE Cylinders  >  6;",
    "query_toks": "['SELECT', 'COUNT', '(', '*', ')', 'FROM', 'CARS_DATA', 'WHERE', 'Cylinders', '>', '6', ';']",
    "query_toks_no_value": "['select', 'count', '(', '*', ')', 'from', 'cars_data', 'where', 'cylinders', '>', 'value']",
    "question": "How many cars has over 6 cylinders?",
    "question_th": "มีรถกี่คันที่มีมากกว่า 6 สูบ?",
    "question_toks": "['How', 'many', 'cars', 'has', 'over', '6', 'cylinders', '?']",
    "sql": "{'from': {'table_units': [['table_unit', 5]], 'conds': []}, 'select': [False, [[3, [0, [0, 0, False], None]]]], 'where': [[False, 3, [0, [0, 18, False], None], 6.0, None]], 'groupBy': [], 'having': [], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "car_1",
    "query": "SELECT COUNT(*) FROM CARS_DATA WHERE Cylinders  >  6;",
    "query_toks": "['SELECT', 'COUNT', '(', '*', ')', 'FROM', 'CARS_DATA', 'WHERE', 'Cylinders', '>', '6', ';']",
    "query_toks_no_value": "['select', 'count', '(', '*', ')', 'from', 'cars_data', 'where', 'cylinders', '>', 'value']",
    "question": "What is the number of carsw ith over 6 cylinders?",
    "question_th": "จำนวนรถยนต์ที่มีมากกว่า 6 สูบเป็นเท่าใด?",
    "question_toks": "['What', 'is', 'the', 'number', 'of', 'carsw', 'ith', 'over', '6', 'cylinders', '?']",
    "sql": "{'from': {'table_units': [['table_unit', 5]], 'conds': []}, 'select': [False, [[3, [0, [0, 0, False], None]]]], 'where': [[False, 3, [0, [0, 18, False], None], 6.0, None]], 'groupBy': [], 'having': [], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "car_1",
    "query": "SELECT T1.Model FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id WHERE T2.Cylinders  =  4 ORDER BY T2.horsepower DESC LIMIT 1;",
    "query_toks": "['SELECT', 'T1.Model', 'FROM', 'CAR_NAMES', 'AS', 'T1', 'JOIN', 'CARS_DATA', 'AS', 'T2', 'ON', 'T1.MakeId', '=', 'T2.Id', 'WHERE', 'T2.Cylinders', '=', '4', 'ORDER', 'BY', 'T2.horsepower', 'DESC', 'LIMIT', '1', ';']",
    "query_toks_no_value": "['select', 't1', '.', 'model', 'from', 'car_names', 'as', 't1', 'join', 'cars_data', 'as', 't2', 'on', 't1', '.', 'makeid', '=', 't2', '.', 'id', 'where', 't2', '.', 'cylinders', '=', 'value', 'order', 'by', 't2', '.', 'horsepower', 'desc', 'limit', 'value']",
    "question": "For the cars with 4 cylinders, which model has the largest horsepower?",
    "question_th": "สำหรับรถยนต์ที่มี 4 สูบ รุ่นไหนมีแรงม้ามากที่สุด?",
    "question_toks": "['For', 'the', 'cars', 'with', '4', 'cylinders', ',', 'which', 'model', 'has', 'the', 'largest', 'horsepower', '?']",
    "sql": "{'from': {'table_units': [['table_unit', 4], ['table_unit', 5]], 'conds': [[False, 2, [0, [0, 13, False], None], [0, 16, False], None]]}, 'select': [False, [[0, [0, [0, 14, False], None]]]], 'where': [[False, 2, [0, [0, 18, False], None], 4.0, None]], 'groupBy': [], 'having': [], 'orderBy': ['desc', [[0, [0, 20, False], None]]], 'limit': 1, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "car_1",
    "query": "SELECT T1.Model FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id WHERE T2.Cylinders  =  4 ORDER BY T2.horsepower DESC LIMIT 1;",
    "query_toks": "['SELECT', 'T1.Model', 'FROM', 'CAR_NAMES', 'AS', 'T1', 'JOIN', 'CARS_DATA', 'AS', 'T2', 'ON', 'T1.MakeId', '=', 'T2.Id', 'WHERE', 'T2.Cylinders', '=', '4', 'ORDER', 'BY', 'T2.horsepower', 'DESC', 'LIMIT', '1', ';']",
    "query_toks_no_value": "['select', 't1', '.', 'model', 'from', 'car_names', 'as', 't1', 'join', 'cars_data', 'as', 't2', 'on', 't1', '.', 'makeid', '=', 't2', '.', 'id', 'where', 't2', '.', 'cylinders', '=', 'value', 'order', 'by', 't2', '.', 'horsepower', 'desc', 'limit', 'value']",
    "question": "For all of the 4 cylinder cars, which model has the most horsepower?",
    "question_th": "สำหรับรถยนต์ 4 สูบทั้งหมด รุ่นไหนมีแรงม้ามากที่สุด?",
    "question_toks": "['For', 'all', 'of', 'the', '4', 'cylinder', 'cars', ',', 'which', 'model', 'has', 'the', 'most', 'horsepower', '?']",
    "sql": "{'from': {'table_units': [['table_unit', 4], ['table_unit', 5]], 'conds': [[False, 2, [0, [0, 13, False], None], [0, 16, False], None]]}, 'select': [False, [[0, [0, [0, 14, False], None]]]], 'where': [[False, 2, [0, [0, 18, False], None], 4.0, None]], 'groupBy': [], 'having': [], 'orderBy': ['desc', [[0, [0, 20, False], None]]], 'limit': 1, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "car_1",
    "query": "SELECT T2.MakeId ,  T2.Make FROM CARS_DATA AS T1 JOIN CAR_NAMES AS T2 ON T1.Id  =  T2.MakeId WHERE T1.Horsepower  >  (SELECT min(Horsepower) FROM CARS_DATA) AND T1.Cylinders  <=  3;",
    "query_toks": "['SELECT', 'T2.MakeId', ',', 'T2.Make', 'FROM', 'CARS_DATA', 'AS', 'T1', 'JOIN', 'CAR_NAMES', 'AS', 'T2', 'ON', 'T1.Id', '=', 'T2.MakeId', 'WHERE', 'T1.Horsepower', '>', '(', 'SELECT', 'min', '(', 'Horsepower', ')', 'FROM', 'CARS_DATA', ')', 'AND', 'T1.Cylinders', '<', '=', '3', ';']",
    "query_toks_no_value": "['select', 't2', '.', 'makeid', ',', 't2', '.', 'make', 'from', 'cars_data', 'as', 't1', 'join', 'car_names', 'as', 't2', 'on', 't1', '.', 'id', '=', 't2', '.', 'makeid', 'where', 't1', '.', 'horsepower', '>', '(', 'select', 'min', '(', 'horsepower', ')', 'from', 'cars_data', ')', 'and', 't1', '.', 'cylinders', '<', '=', 'value']",
    "question": "Among the cars with more than lowest horsepower, which ones do not have more than 3 cylinders? List the car makeid and make name.",
    "question_th": "ในบรรดารถที่มีแรงม้ามากกว่าต่ำสุด คันไหนมีไม่เกิน 3 สูบ? ระบุยี่ห้อรถและชื่อ",
    "question_toks": "['Among', 'the', 'cars', 'with', 'more', 'than', 'lowest', 'horsepower', ',', 'which', 'ones', 'do', 'not', 'have', 'more', 'than', '3', 'cylinders', '?', 'List', 'the', 'car', 'makeid', 'and', 'make', 'name', '.']",
    "sql": "{'from': {'table_units': [['table_unit', 5], ['table_unit', 4]], 'conds': [[False, 2, [0, [0, 16, False], None], [0, 13, False], None]]}, 'select': [False, [[0, [0, [0, 13, False], None]], [0, [0, [0, 15, False], None]]]], 'where': [[False, 3, [0, [0, 20, False], None], {'from': {'table_units': [['table_unit', 5]], 'conds': []}, 'select': [False, [[2, [0, [0, 20, False], None]]]], 'where': [], 'groupBy': [], 'having': [], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}, None], 'and', [False, 6, [0, [0, 18, False], None], 3.0, None]], 'groupBy': [], 'having': [], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "car_1",
    "query": "select t2.makeid ,  t2.make from cars_data as t1 join car_names as t2 on t1.id  =  t2.makeid where t1.horsepower  >  (select min(horsepower) from cars_data) and t1.cylinders  <  4;",
    "query_toks": "['select', 't2.makeid', ',', 't2.make', 'from', 'cars_data', 'as', 't1', 'join', 'car_names', 'as', 't2', 'on', 't1.id', '=', 't2.makeid', 'where', 't1.horsepower', '>', '(', 'select', 'min', '(', 'horsepower', ')', 'from', 'cars_data', ')', 'and', 't1.cylinders', '<', '4', ';']",
    "query_toks_no_value": "['select', 't2', '.', 'makeid', ',', 't2', '.', 'make', 'from', 'cars_data', 'as', 't1', 'join', 'car_names', 'as', 't2', 'on', 't1', '.', 'id', '=', 't2', '.', 'makeid', 'where', 't1', '.', 'horsepower', '>', '(', 'select', 'min', '(', 'horsepower', ')', 'from', 'cars_data', ')', 'and', 't1', '.', 'cylinders', '<', 'value']",
    "question": "Among the cars that do not have the minimum horsepower , what are the make ids and names of all those with less than 4 cylinders ?",
    "question_th": "ในบรรดารถที่ไม่มีแรงม้าขั้นต่ำ มียี่ห้อและชื่อรถที่มีเครื่องยนต์น้อยกว่า 4 สูบอะไรบ้าง ?",
    "question_toks": "['Among', 'the', 'cars', 'that', 'do', 'not', 'have', 'the', 'minimum', 'horsepower', ',', 'what', 'are', 'the', 'make', 'ids', 'and', 'names', 'of', 'all', 'those', 'with', 'less', 'than', '4', 'cylinders', '?']",
    "sql": "{'from': {'table_units': [['table_unit', 5], ['table_unit', 4]], 'conds': [[False, 2, [0, [0, 16, False], None], [0, 13, False], None]]}, 'select': [False, [[0, [0, [0, 13, False], None]], [0, [0, [0, 15, False], None]]]], 'where': [[False, 3, [0, [0, 20, False], None], {'from': {'table_units': [['table_unit', 5]], 'conds': []}, 'select': [False, [[2, [0, [0, 20, False], None]]]], 'where': [], 'groupBy': [], 'having': [], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}, None], 'and', [False, 4, [0, [0, 18, False], None], 4.0, None]], 'groupBy': [], 'having': [], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "car_1",
    "query": "select max(mpg) from cars_data where cylinders  =  8 or year  <  1980",
    "query_toks": "['select', 'max', '(', 'mpg', ')', 'from', 'cars_data', 'where', 'cylinders', '=', '8', 'or', 'year', '<', '1980']",
    "query_toks_no_value": "['select', 'max', '(', 'mpg', ')', 'from', 'cars_data', 'where', 'cylinders', '=', 'value', 'or', 'year', '<', 'value']",
    "question": "What is the maximum miles per gallon of the car with 8 cylinders or produced before 1980 ?",
    "question_th": "รถ 8 สูบ หรือผลิตก่อนปี 1980 วิ่งได้กี่ไมล์ต่อแกลลอน ?",
    "question_toks": "['What', 'is', 'the', 'maximum', 'miles', 'per', 'gallon', 'of', 'the', 'car', 'with', '8', 'cylinders', 'or', 'produced', 'before', '1980', '?']",
    "sql": "{'from': {'table_units': [['table_unit', 5]], 'conds': []}, 'select': [False, [[1, [0, [0, 17, False], None]]]], 'where': [[False, 2, [0, [0, 18, False], None], 8.0, None], 'or', [False, 4, [0, [0, 23, False], None], 1980.0, None]], 'groupBy': [], 'having': [], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "car_1",
    "query": "select max(mpg) from cars_data where cylinders  =  8 or year  <  1980",
    "query_toks": "['select', 'max', '(', 'mpg', ')', 'from', 'cars_data', 'where', 'cylinders', '=', '8', 'or', 'year', '<', '1980']",
    "query_toks_no_value": "['select', 'max', '(', 'mpg', ')', 'from', 'cars_data', 'where', 'cylinders', '=', 'value', 'or', 'year', '<', 'value']",
    "question": "What is the maximum mpg of the cars that had 8 cylinders or that were produced before 1980 ?",
    "question_th": "mpg สูงสุดของรถยนต์ที่มี 8 กระบอกสูบหรือที่ผลิตก่อนปี 1980 คือเท่าใด",
    "question_toks": "['What', 'is', 'the', 'maximum', 'mpg', 'of', 'the', 'cars', 'that', 'had', '8', 'cylinders', 'or', 'that', 'were', 'produced', 'before', '1980', '?']",
    "sql": "{'from': {'table_units': [['table_unit', 5]], 'conds': []}, 'select': [False, [[1, [0, [0, 17, False], None]]]], 'where': [[False, 2, [0, [0, 18, False], None], 8.0, None], 'or', [False, 4, [0, [0, 23, False], None], 1980.0, None]], 'groupBy': [], 'having': [], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "car_1",
    "query": "SELECT DISTINCT T1.model FROM MODEL_LIST AS T1 JOIN CAR_NAMES AS T2 ON T1.Model  =  T2.Model JOIN CARS_DATA AS T3 ON T2.MakeId  =  T3.Id JOIN CAR_MAKERS AS T4 ON T1.Maker  =  T4.Id WHERE T3.weight  <  3500 AND T4.FullName != 'Ford Motor Company';",
    "query_toks": "['SELECT', 'DISTINCT', 'T1.model', 'FROM', 'MODEL_LIST', 'AS', 'T1', 'JOIN', 'CAR_NAMES', 'AS', 'T2', 'ON', 'T1.Model', '=', 'T2.Model', 'JOIN', 'CARS_DATA', 'AS', 'T3', 'ON', 'T2.MakeId', '=', 'T3.Id', 'JOIN', 'CAR_MAKERS', 'AS', 'T4', 'ON', 'T1.Maker', '=', 'T4.Id', 'WHERE', 'T3.weight', '<', '3500', 'AND', 'T4.FullName', '!', '=', \"'Ford\", 'Motor', 'Company', \"'\", ';']",
    "query_toks_no_value": "['select', 'distinct', 't1', '.', 'model', 'from', 'model_list', 'as', 't1', 'join', 'car_names', 'as', 't2', 'on', 't1', '.', 'model', '=', 't2', '.', 'model', 'join', 'cars_data', 'as', 't3', 'on', 't2', '.', 'makeid', '=', 't3', '.', 'id', 'join', 'car_makers', 'as', 't4', 'on', 't1', '.', 'maker', '=', 't4', '.', 'id', 'where', 't3', '.', 'weight', '<', 'value', 'and', 't4', '.', 'fullname', '!', '=', 'value']",
    "question": "Which models are lighter than 3500 but not built by the 'Ford Motor Company'?",
    "question_th": "รุ่นไหนเบากว่า 3500 แต่ไม่ได้สร้างโดย 'บริษัท Ford Motor'?",
    "question_toks": "['Which', 'models', 'are', 'lighter', 'than', '3500', 'but', 'not', 'built', 'by', 'the', \"'Ford\", 'Motor', 'Company', \"'\", '?']",
    "sql": "{'from': {'table_units': [['table_unit', 3], ['table_unit', 4], ['table_unit', 5], ['table_unit', 2]], 'conds': [[False, 2, [0, [0, 12, False], None], [0, 14, False], None], 'and', [False, 2, [0, [0, 13, False], None], [0, 16, False], None], 'and', [False, 2, [0, [0, 11, False], None], [0, 6, False], None]]}, 'select': [True, [[0, [0, [0, 12, False], None]]]], 'where': [[False, 4, [0, [0, 21, False], None], 3500.0, None], 'and', [False, 7, [0, [0, 8, False], None], '\"Ford Motor Company\"', None]], 'groupBy': [], 'having': [], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "car_1",
    "query": "SELECT DISTINCT T1.model FROM MODEL_LIST AS T1 JOIN CAR_NAMES AS T2 ON T1.Model  =  T2.Model JOIN CARS_DATA AS T3 ON T2.MakeId  =  T3.Id JOIN CAR_MAKERS AS T4 ON T1.Maker  =  T4.Id WHERE T3.weight  <  3500 AND T4.FullName != 'Ford Motor Company';",
    "query_toks": "['SELECT', 'DISTINCT', 'T1.model', 'FROM', 'MODEL_LIST', 'AS', 'T1', 'JOIN', 'CAR_NAMES', 'AS', 'T2', 'ON', 'T1.Model', '=', 'T2.Model', 'JOIN', 'CARS_DATA', 'AS', 'T3', 'ON', 'T2.MakeId', '=', 'T3.Id', 'JOIN', 'CAR_MAKERS', 'AS', 'T4', 'ON', 'T1.Maker', '=', 'T4.Id', 'WHERE', 'T3.weight', '<', '3500', 'AND', 'T4.FullName', '!', '=', \"'Ford\", 'Motor', 'Company', \"'\", ';']",
    "query_toks_no_value": "['select', 'distinct', 't1', '.', 'model', 'from', 'model_list', 'as', 't1', 'join', 'car_names', 'as', 't2', 'on', 't1', '.', 'model', '=', 't2', '.', 'model', 'join', 'cars_data', 'as', 't3', 'on', 't2', '.', 'makeid', '=', 't3', '.', 'id', 'join', 'car_makers', 'as', 't4', 'on', 't1', '.', 'maker', '=', 't4', '.', 'id', 'where', 't3', '.', 'weight', '<', 'value', 'and', 't4', '.', 'fullname', '!', '=', 'value']",
    "question": "What are the different models wthat are lighter than 3500 but were not built by the Ford Motor Company?",
    "question_th": "รุ่นต่างๆ ที่เบากว่า 3500 แต่ไม่ได้ผลิตโดย Ford Motor Company มีอะไรบ้าง",
    "question_toks": "['What', 'are', 'the', 'different', 'models', 'wthat', 'are', 'lighter', 'than', '3500', 'but', 'were', 'not', 'built', 'by', 'the', 'Ford', 'Motor', 'Company', '?']",
    "sql": "{'from': {'table_units': [['table_unit', 3], ['table_unit', 4], ['table_unit', 5], ['table_unit', 2]], 'conds': [[False, 2, [0, [0, 12, False], None], [0, 14, False], None], 'and', [False, 2, [0, [0, 13, False], None], [0, 16, False], None], 'and', [False, 2, [0, [0, 11, False], None], [0, 6, False], None]]}, 'select': [True, [[0, [0, [0, 12, False], None]]]], 'where': [[False, 4, [0, [0, 21, False], None], 3500.0, None], 'and', [False, 7, [0, [0, 8, False], None], '\"Ford Motor Company\"', None]], 'groupBy': [], 'having': [], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "car_1",
    "query": "SELECT CountryName FROM countries EXCEPT SELECT T1.CountryName FROM countries AS T1 JOIN CAR_MAKERS AS T2 ON T1.countryId  =  T2.Country;",
    "query_toks": "['SELECT', 'CountryName', 'FROM', 'countries', 'EXCEPT', 'SELECT', 'T1.CountryName', 'FROM', 'countries', 'AS', 'T1', 'JOIN', 'CAR_MAKERS', 'AS', 'T2', 'ON', 'T1.countryId', '=', 'T2.Country', ';']",
    "query_toks_no_value": "['select', 'countryname', 'from', 'countries', 'except', 'select', 't1', '.', 'countryname', 'from', 'countries', 'as', 't1', 'join', 'car_makers', 'as', 't2', 'on', 't1', '.', 'countryid', '=', 't2', '.', 'country']",
    "question": "What are the name of the countries where there is not a single car maker?",
    "question_th": "ประเทศที่ไม่มีผู้ผลิตรถยนต์รายเดียวชื่ออะไร?",
    "question_toks": "['What', 'are', 'the', 'name', 'of', 'the', 'countries', 'where', 'there', 'is', 'not', 'a', 'single', 'car', 'maker', '?']",
    "sql": "{'from': {'table_units': [['table_unit', 1]], 'conds': []}, 'select': [False, [[0, [0, [0, 4, False], None]]]], 'where': [], 'groupBy': [], 'having': [], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': {'from': {'table_units': [['table_unit', 1], ['table_unit', 2]], 'conds': [[False, 2, [0, [0, 3, False], None], [0, 9, False], None]]}, 'select': [False, [[0, [0, [0, 4, False], None]]]], 'where': [], 'groupBy': [], 'having': [], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}}"
  },
  {
    "db_id": "car_1",
    "query": "SELECT CountryName FROM countries EXCEPT SELECT T1.CountryName FROM countries AS T1 JOIN CAR_MAKERS AS T2 ON T1.countryId  =  T2.Country;",
    "query_toks": "['SELECT', 'CountryName', 'FROM', 'countries', 'EXCEPT', 'SELECT', 'T1.CountryName', 'FROM', 'countries', 'AS', 'T1', 'JOIN', 'CAR_MAKERS', 'AS', 'T2', 'ON', 'T1.countryId', '=', 'T2.Country', ';']",
    "query_toks_no_value": "['select', 'countryname', 'from', 'countries', 'except', 'select', 't1', '.', 'countryname', 'from', 'countries', 'as', 't1', 'join', 'car_makers', 'as', 't2', 'on', 't1', '.', 'countryid', '=', 't2', '.', 'country']",
    "question": "What are the names of the countries with no car makers?",
    "question_th": "ประเทศที่ไม่มีผู้ผลิตรถยนต์ชื่ออะไร",
    "question_toks": "['What', 'are', 'the', 'names', 'of', 'the', 'countries', 'with', 'no', 'car', 'makers', '?']",
    "sql": "{'from': {'table_units': [['table_unit', 1]], 'conds': []}, 'select': [False, [[0, [0, [0, 4, False], None]]]], 'where': [], 'groupBy': [], 'having': [], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': {'from': {'table_units': [['table_unit', 1], ['table_unit', 2]], 'conds': [[False, 2, [0, [0, 3, False], None], [0, 9, False], None]]}, 'select': [False, [[0, [0, [0, 4, False], None]]]], 'where': [], 'groupBy': [], 'having': [], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}}"
  },
  {
    "db_id": "car_1",
    "query": "select t1.id ,  t1.maker from car_makers as t1 join model_list as t2 on t1.id  =  t2.maker group by t1.id having count(*)  >=  2 intersect select t1.id ,  t1.maker from car_makers as t1 join model_list as t2 on t1.id  =  t2.maker join car_names as t3 on t2.model  =  t3.model group by t1.id having count(*)  >  3;",
    "query_toks": "['select', 't1.id', ',', 't1.maker', 'from', 'car_makers', 'as', 't1', 'join', 'model_list', 'as', 't2', 'on', 't1.id', '=', 't2.maker', 'group', 'by', 't1.id', 'having', 'count', '(', '*', ')', '>=', '2', 'intersect', 'select', 't1.id', ',', 't1.maker', 'from', 'car_makers', 'as', 't1', 'join', 'model_list', 'as', 't2', 'on', 't1.id', '=', 't2.maker', 'join', 'car_names', 'as', 't3', 'on', 't2.model', '=', 't3.model', 'group', 'by', 't1.id', 'having', 'count', '(', '*', ')', '>', '3', ';']",
    "query_toks_no_value": "['select', 't1', '.', 'id', ',', 't1', '.', 'maker', 'from', 'car_makers', 'as', 't1', 'join', 'model_list', 'as', 't2', 'on', 't1', '.', 'id', '=', 't2', '.', 'maker', 'group', 'by', 't1', '.', 'id', 'having', 'count', '(', '*', ')', '>', '=', 'value', 'intersect', 'select', 't1', '.', 'id', ',', 't1', '.', 'maker', 'from', 'car_makers', 'as', 't1', 'join', 'model_list', 'as', 't2', 'on', 't1', '.', 'id', '=', 't2', '.', 'maker', 'join', 'car_names', 'as', 't3', 'on', 't2', '.', 'model', '=', 't3', '.', 'model', 'group', 'by', 't1', '.', 'id', 'having', 'count', '(', '*', ')', '>', 'value']",
    "question": "Which are the car makers which produce at least 2 models and more than 3 car makers ? List the id and the maker .",
    "question_th": "ผู้ผลิตรถยนต์รายใดที่ผลิตรถยนต์อย่างน้อย 2 รุ่นและมากกว่า 3 ผู้ผลิตรถยนต์คือบริษัทใด ? ระบุ id และผู้สร้าง",
    "question_toks": "['Which', 'are', 'the', 'car', 'makers', 'which', 'produce', 'at', 'least', '2', 'models', 'and', 'more', 'than', '3', 'car', 'makers', '?', 'List', 'the', 'id', 'and', 'the', 'maker', '.']",
    "sql": "{'from': {'table_units': [['table_unit', 2], ['table_unit', 3]], 'conds': [[False, 2, [0, [0, 6, False], None], [0, 11, False], None]]}, 'select': [False, [[0, [0, [0, 6, False], None]], [0, [0, [0, 7, False], None]]]], 'where': [], 'groupBy': [[0, 6, False]], 'having': [[False, 5, [0, [3, 0, False], None], 2.0, None]], 'orderBy': [], 'limit': None, 'intersect': {'from': {'table_units': [['table_unit', 2], ['table_unit', 3], ['table_unit', 4]], 'conds': [[False, 2, [0, [0, 6, False], None], [0, 11, False], None], 'and', [False, 2, [0, [0, 12, False], None], [0, 14, False], None]]}, 'select': [False, [[0, [0, [0, 6, False], None]], [0, [0, [0, 7, False], None]]]], 'where': [], 'groupBy': [[0, 6, False]], 'having': [[False, 3, [0, [3, 0, False], None], 3.0, None]], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}, 'union': None, 'except': None}"
  },
  {
    "db_id": "car_1",
    "query": "SELECT T1.Id ,  T1.Maker FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id  =  T2.Maker GROUP BY T1.Id HAVING count(*)  >=  2 INTERSECT SELECT T1.Id ,  T1.Maker FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id  =  T2.Maker JOIN CAR_NAMES AS T3 ON T2.model  =  T3.model GROUP BY T1.Id HAVING count(*)  >  3;",
    "query_toks": "['SELECT', 'T1.Id', ',', 'T1.Maker', 'FROM', 'CAR_MAKERS', 'AS', 'T1', 'JOIN', 'MODEL_LIST', 'AS', 'T2', 'ON', 'T1.Id', '=', 'T2.Maker', 'GROUP', 'BY', 'T1.Id', 'HAVING', 'count', '(', '*', ')', '>', '=', '2', 'INTERSECT', 'SELECT', 'T1.Id', ',', 'T1.Maker', 'FROM', 'CAR_MAKERS', 'AS', 'T1', 'JOIN', 'MODEL_LIST', 'AS', 'T2', 'ON', 'T1.Id', '=', 'T2.Maker', 'JOIN', 'CAR_NAMES', 'AS', 'T3', 'ON', 'T2.model', '=', 'T3.model', 'GROUP', 'BY', 'T1.Id', 'HAVING', 'count', '(', '*', ')', '>', '3', ';']",
    "query_toks_no_value": "['select', 't1', '.', 'id', ',', 't1', '.', 'maker', 'from', 'car_makers', 'as', 't1', 'join', 'model_list', 'as', 't2', 'on', 't1', '.', 'id', '=', 't2', '.', 'maker', 'group', 'by', 't1', '.', 'id', 'having', 'count', '(', '*', ')', '>', '=', 'value', 'intersect', 'select', 't1', '.', 'id', ',', 't1', '.', 'maker', 'from', 'car_makers', 'as', 't1', 'join', 'model_list', 'as', 't2', 'on', 't1', '.', 'id', '=', 't2', '.', 'maker', 'join', 'car_names', 'as', 't3', 'on', 't2', '.', 'model', '=', 't3', '.', 'model', 'group', 'by', 't1', '.', 'id', 'having', 'count', '(', '*', ')', '>', 'value']",
    "question": "What are the ids and makers of all car makers that produce at least 2 models and make more than 3 cars?",
    "question_th": "รหัสและผู้ผลิตของผู้ผลิตรถยนต์ทั้งหมดที่ผลิตอย่างน้อย 2 รุ่นและผลิตรถยนต์มากกว่า 3 คันคืออะไร",
    "question_toks": "['What', 'are', 'the', 'ids', 'and', 'makers', 'of', 'all', 'car', 'makers', 'that', 'produce', 'at', 'least', '2', 'models', 'and', 'make', 'more', 'than', '3', 'cars', '?']",
    "sql": "{'from': {'table_units': [['table_unit', 2], ['table_unit', 3]], 'conds': [[False, 2, [0, [0, 6, False], None], [0, 11, False], None]]}, 'select': [False, [[0, [0, [0, 6, False], None]], [0, [0, [0, 7, False], None]]]], 'where': [], 'groupBy': [[0, 6, False]], 'having': [[False, 5, [0, [3, 0, False], None], 2.0, None]], 'orderBy': [], 'limit': None, 'intersect': {'from': {'table_units': [['table_unit', 2], ['table_unit', 3], ['table_unit', 4]], 'conds': [[False, 2, [0, [0, 6, False], None], [0, 11, False], None], 'and', [False, 2, [0, [0, 12, False], None], [0, 14, False], None]]}, 'select': [False, [[0, [0, [0, 6, False], None]], [0, [0, [0, 7, False], None]]]], 'where': [], 'groupBy': [[0, 6, False]], 'having': [[False, 3, [0, [3, 0, False], None], 3.0, None]], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}, 'union': None, 'except': None}"
  },
  {
    "db_id": "car_1",
    "query": "SELECT T1.countryId ,  T1.CountryName FROM Countries AS T1 JOIN CAR_MAKERS AS T2 ON T1.CountryId  =  T2.Country GROUP BY T1.countryId HAVING count(*)  >  3 UNION SELECT T1.countryId ,  T1.CountryName FROM Countries AS T1 JOIN CAR_MAKERS AS T2 ON T1.CountryId  =  T2.Country JOIN MODEL_LIST AS T3 ON T2.Id  =  T3.Maker WHERE T3.Model  =  'fiat';",
    "query_toks": "['SELECT', 'T1.countryId', ',', 'T1.CountryName', 'FROM', 'Countries', 'AS', 'T1', 'JOIN', 'CAR_MAKERS', 'AS', 'T2', 'ON', 'T1.CountryId', '=', 'T2.Country', 'GROUP', 'BY', 'T1.countryId', 'HAVING', 'count', '(', '*', ')', '>', '3', 'UNION', 'SELECT', 'T1.countryId', ',', 'T1.CountryName', 'FROM', 'Countries', 'AS', 'T1', 'JOIN', 'CAR_MAKERS', 'AS', 'T2', 'ON', 'T1.CountryId', '=', 'T2.Country', 'JOIN', 'MODEL_LIST', 'AS', 'T3', 'ON', 'T2.Id', '=', 'T3.Maker', 'WHERE', 'T3.Model', '=', \"'fiat\", \"'\", ';']",
    "query_toks_no_value": "['select', 't1', '.', 'countryid', ',', 't1', '.', 'countryname', 'from', 'countries', 'as', 't1', 'join', 'car_makers', 'as', 't2', 'on', 't1', '.', 'countryid', '=', 't2', '.', 'country', 'group', 'by', 't1', '.', 'countryid', 'having', 'count', '(', '*', ')', '>', 'value', 'union', 'select', 't1', '.', 'countryid', ',', 't1', '.', 'countryname', 'from', 'countries', 'as', 't1', 'join', 'car_makers', 'as', 't2', 'on', 't1', '.', 'countryid', '=', 't2', '.', 'country', 'join', 'model_list', 'as', 't3', 'on', 't2', '.', 'id', '=', 't3', '.', 'maker', 'where', 't3', '.', 'model', '=', 'value']",
    "question": "What are the id and names of the countries which have more than 3 car makers or produce the 'fiat' model?",
    "question_th": "ID และชื่อของประเทศที่มีผู้ผลิตรถยนต์มากกว่า 3 รายหรือผลิตรุ่น 'Fiat' คืออะไร?",
    "question_toks": "['What', 'are', 'the', 'id', 'and', 'names', 'of', 'the', 'countries', 'which', 'have', 'more', 'than', '3', 'car', 'makers', 'or', 'produce', 'the', \"'fiat\", \"'\", 'model', '?']",
    "sql": "{'from': {'table_units': [['table_unit', 1], ['table_unit', 2]], 'conds': [[False, 2, [0, [0, 3, False], None], [0, 9, False], None]]}, 'select': [False, [[0, [0, [0, 3, False], None]], [0, [0, [0, 4, False], None]]]], 'where': [], 'groupBy': [[0, 3, False]], 'having': [[False, 3, [0, [3, 0, False], None], 3.0, None]], 'orderBy': [], 'limit': None, 'intersect': None, 'union': {'from': {'table_units': [['table_unit', 1], ['table_unit', 2], ['table_unit', 3]], 'conds': [[False, 2, [0, [0, 3, False], None], [0, 9, False], None], 'and', [False, 2, [0, [0, 6, False], None], [0, 11, False], None]]}, 'select': [False, [[0, [0, [0, 3, False], None]], [0, [0, [0, 4, False], None]]]], 'where': [[False, 2, [0, [0, 12, False], None], '\"fiat\"', None]], 'groupBy': [], 'having': [], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}, 'except': None}"
  },
  {
    "db_id": "car_1",
    "query": "select t1.countryid ,  t1.countryname from countries as t1 join car_makers as t2 on t1.countryid  =  t2.country group by t1.countryid having count(*)  >  3 union select t1.countryid ,  t1.countryname from countries as t1 join car_makers as t2 on t1.countryid  =  t2.country join model_list as t3 on t2.id  =  t3.maker where t3.model  =  'fiat';",
    "query_toks": "['select', 't1.countryid', ',', 't1.countryname', 'from', 'countries', 'as', 't1', 'join', 'car_makers', 'as', 't2', 'on', 't1.countryid', '=', 't2.country', 'group', 'by', 't1.countryid', 'having', 'count', '(', '*', ')', '>', '3', 'union', 'select', 't1.countryid', ',', 't1.countryname', 'from', 'countries', 'as', 't1', 'join', 'car_makers', 'as', 't2', 'on', 't1.countryid', '=', 't2.country', 'join', 'model_list', 'as', 't3', 'on', 't2.id', '=', 't3.maker', 'where', 't3.model', '=', '\"fiat\"', ';']",
    "query_toks_no_value": "['select', 't1', '.', 'countryid', ',', 't1', '.', 'countryname', 'from', 'countries', 'as', 't1', 'join', 'car_makers', 'as', 't2', 'on', 't1', '.', 'countryid', '=', 't2', '.', 'country', 'group', 'by', 't1', '.', 'countryid', 'having', 'count', '(', '*', ')', '>', 'value', 'union', 'select', 't1', '.', 'countryid', ',', 't1', '.', 'countryname', 'from', 'countries', 'as', 't1', 'join', 'car_makers', 'as', 't2', 'on', 't1', '.', 'countryid', '=', 't2', '.', 'country', 'join', 'model_list', 'as', 't3', 'on', 't2', '.', 'id', '=', 't3', '.', 'maker', 'where', 't3', '.', 'model', '=', 'value']",
    "question": "What are the ids and names of all countries that either have more than 3 car makers or produce fiat model ?",
    "question_th": "รหัสและชื่อของทุกประเทศที่มีผู้ผลิตรถยนต์มากกว่า 3 รายหรือผลิตรุ่น fiat คืออะไร",
    "question_toks": "['What', 'are', 'the', 'ids', 'and', 'names', 'of', 'all', 'countries', 'that', 'either', 'have', 'more', 'than', '3', 'car', 'makers', 'or', 'produce', 'fiat', 'model', '?']",
    "sql": "{'from': {'table_units': [['table_unit', 1], ['table_unit', 2]], 'conds': [[False, 2, [0, [0, 3, False], None], [0, 9, False], None]]}, 'select': [False, [[0, [0, [0, 3, False], None]], [0, [0, [0, 4, False], None]]]], 'where': [], 'groupBy': [[0, 3, False]], 'having': [[False, 3, [0, [3, 0, False], None], 3.0, None]], 'orderBy': [], 'limit': None, 'intersect': None, 'union': {'from': {'table_units': [['table_unit', 1], ['table_unit', 2], ['table_unit', 3]], 'conds': [[False, 2, [0, [0, 3, False], None], [0, 9, False], None], 'and', [False, 2, [0, [0, 6, False], None], [0, 11, False], None]]}, 'select': [False, [[0, [0, [0, 3, False], None]], [0, [0, [0, 4, False], None]]]], 'where': [[False, 2, [0, [0, 12, False], None], '\"fiat\"', None]], 'groupBy': [], 'having': [], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}, 'except': None}"
  },
  {
    "db_id": "flight_2",
    "query": "SELECT Country FROM AIRLINES WHERE Airline  =  \"JetBlue Airways\"",
    "query_toks": "['SELECT', 'Country', 'FROM', 'AIRLINES', 'WHERE', 'Airline', '=', '``', 'JetBlue', 'Airways', \"''\"]",
    "query_toks_no_value": "['select', 'country', 'from', 'airlines', 'where', 'airline', '=', 'value']",
    "question": "Which country does Airline \"JetBlue Airways\" belong to?",
    "question_th": "สายการบิน \"เจ็ทบลูแอร์เวย์\" อยู่ในประเทศใด?",
    "question_toks": "['Which', 'country', 'does', 'Airline', '``', 'JetBlue', 'Airways', \"''\", 'belong', 'to', '?']",
    "sql": "{'from': {'table_units': [['table_unit', 0]], 'conds': []}, 'select': [False, [[0, [0, [0, 4, False], None]]]], 'where': [[False, 2, [0, [0, 2, False], None], '\"JetBlue Airways\"', None]], 'groupBy': [], 'having': [], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "flight_2",
    "query": "SELECT Country FROM AIRLINES WHERE Airline  =  \"JetBlue Airways\"",
    "query_toks": "['SELECT', 'Country', 'FROM', 'AIRLINES', 'WHERE', 'Airline', '=', '``', 'JetBlue', 'Airways', \"''\"]",
    "query_toks_no_value": "['select', 'country', 'from', 'airlines', 'where', 'airline', '=', 'value']",
    "question": "What country is Jetblue Airways affiliated with?",
    "question_th": "Jetblue Airways อยู่ในเครือของประเทศใด?",
    "question_toks": "['What', 'country', 'is', 'Jetblue', 'Airways', 'affiliated', 'with', '?']",
    "sql": "{'from': {'table_units': [['table_unit', 0]], 'conds': []}, 'select': [False, [[0, [0, [0, 4, False], None]]]], 'where': [[False, 2, [0, [0, 2, False], None], '\"JetBlue Airways\"', None]], 'groupBy': [], 'having': [], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "flight_2",
    "query": "SELECT Abbreviation FROM AIRLINES WHERE Airline  =  \"JetBlue Airways\"",
    "query_toks": "['SELECT', 'Abbreviation', 'FROM', 'AIRLINES', 'WHERE', 'Airline', '=', '``', 'JetBlue', 'Airways', \"''\"]",
    "query_toks_no_value": "['select', 'abbreviation', 'from', 'airlines', 'where', 'airline', '=', 'value']",
    "question": "What is the abbreviation of Airline \"JetBlue Airways\"?",
    "question_th": "สายการบิน JetBlue Airways อักษรย่อว่าอะไร?",
    "question_toks": "['What', 'is', 'the', 'abbreviation', 'of', 'Airline', '``', 'JetBlue', 'Airways', \"''\", '?']",
    "sql": "{'from': {'table_units': [['table_unit', 0]], 'conds': []}, 'select': [False, [[0, [0, [0, 3, False], None]]]], 'where': [[False, 2, [0, [0, 2, False], None], '\"JetBlue Airways\"', None]], 'groupBy': [], 'having': [], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "flight_2",
    "query": "SELECT Abbreviation FROM AIRLINES WHERE Airline  =  \"JetBlue Airways\"",
    "query_toks": "['SELECT', 'Abbreviation', 'FROM', 'AIRLINES', 'WHERE', 'Airline', '=', '``', 'JetBlue', 'Airways', \"''\"]",
    "query_toks_no_value": "['select', 'abbreviation', 'from', 'airlines', 'where', 'airline', '=', 'value']",
    "question": "Which abbreviation corresponds to Jetblue Airways?",
    "question_th": "ชื่อย่อใดตรงกับ Jetblue Airways?",
    "question_toks": "['Which', 'abbreviation', 'corresponds', 'to', 'Jetblue', 'Airways', '?']",
    "sql": "{'from': {'table_units': [['table_unit', 0]], 'conds': []}, 'select': [False, [[0, [0, [0, 3, False], None]]]], 'where': [[False, 2, [0, [0, 2, False], None], '\"JetBlue Airways\"', None]], 'groupBy': [], 'having': [], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "flight_2",
    "query": "SELECT Airline ,  Abbreviation FROM AIRLINES WHERE Country  =  \"USA\"",
    "query_toks": "['SELECT', 'Airline', ',', 'Abbreviation', 'FROM', 'AIRLINES', 'WHERE', 'Country', '=', '``', 'USA', \"''\"]",
    "query_toks_no_value": "['select', 'airline', ',', 'abbreviation', 'from', 'airlines', 'where', 'country', '=', 'value']",
    "question": "List all airline names and their abbreviations in \"USA\".",
    "question_th": "ระบุชื่อสายการบินและตัวย่อทั้งหมดใน \"USA\"",
    "question_toks": "['List', 'all', 'airline', 'names', 'and', 'their', 'abbreviations', 'in', '``', 'USA', \"''\", '.']",
    "sql": "{'from': {'table_units': [['table_unit', 0]], 'conds': []}, 'select': [False, [[0, [0, [0, 2, False], None]], [0, [0, [0, 3, False], None]]]], 'where': [[False, 2, [0, [0, 4, False], None], '\"USA\"', None]], 'groupBy': [], 'having': [], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "flight_2",
    "query": "SELECT Airline ,  Abbreviation FROM AIRLINES WHERE Country  =  \"USA\"",
    "query_toks": "['SELECT', 'Airline', ',', 'Abbreviation', 'FROM', 'AIRLINES', 'WHERE', 'Country', '=', '``', 'USA', \"''\"]",
    "query_toks_no_value": "['select', 'airline', ',', 'abbreviation', 'from', 'airlines', 'where', 'country', '=', 'value']",
    "question": "What are the airline names and abbreviations for airlines in the USA?",
    "question_th": "ชื่อสายการบินและตัวย่อของสายการบินในสหรัฐอเมริกาคืออะไร",
    "question_toks": "['What', 'are', 'the', 'airline', 'names', 'and', 'abbreviations', 'for', 'airlines', 'in', 'the', 'USA', '?']",
    "sql": "{'from': {'table_units': [['table_unit', 0]], 'conds': []}, 'select': [False, [[0, [0, [0, 2, False], None]], [0, [0, [0, 3, False], None]]]], 'where': [[False, 2, [0, [0, 4, False], None], '\"USA\"', None]], 'groupBy': [], 'having': [], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "flight_2",
    "query": "SELECT AirportCode ,  AirportName FROM AIRPORTS WHERE city  =  \"Anthony\"",
    "query_toks": "['SELECT', 'AirportCode', ',', 'AirportName', 'FROM', 'AIRPORTS', 'WHERE', 'city', '=', '``', 'Anthony', \"''\"]",
    "query_toks_no_value": "['select', 'airportcode', ',', 'airportname', 'from', 'airports', 'where', 'city', '=', 'value']",
    "question": "List the airport code and name in the city of Anthony.",
    "question_th": "ระบุรหัสสนามบินและชื่อในเมือง Anthony",
    "question_toks": "['List', 'the', 'airport', 'code', 'and', 'name', 'in', 'the', 'city', 'of', 'Anthony', '.']",
    "sql": "{'from': {'table_units': [['table_unit', 1]], 'conds': []}, 'select': [False, [[0, [0, [0, 6, False], None]], [0, [0, [0, 7, False], None]]]], 'where': [[False, 2, [0, [0, 5, False], None], '\"Anthony\"', None]], 'groupBy': [], 'having': [], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "flight_2",
    "query": "SELECT AirportCode ,  AirportName FROM AIRPORTS WHERE city  =  \"Anthony\"",
    "query_toks": "['SELECT', 'AirportCode', ',', 'AirportName', 'FROM', 'AIRPORTS', 'WHERE', 'city', '=', '``', 'Anthony', \"''\"]",
    "query_toks_no_value": "['select', 'airportcode', ',', 'airportname', 'from', 'airports', 'where', 'city', '=', 'value']",
    "question": "Give the airport code and airport name corresonding to the city Anthony.",
    "question_th": "ระบุรหัสสนามบินและชื่อสนามบินที่ตรงกับเมืองแอนโธนี",
    "question_toks": "['Give', 'the', 'airport', 'code', 'and', 'airport', 'name', 'corresonding', 'to', 'the', 'city', 'Anthony', '.']",
    "sql": "{'from': {'table_units': [['table_unit', 1]], 'conds': []}, 'select': [False, [[0, [0, [0, 6, False], None]], [0, [0, [0, 7, False], None]]]], 'where': [[False, 2, [0, [0, 5, False], None], '\"Anthony\"', None]], 'groupBy': [], 'having': [], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "flight_2",
    "query": "SELECT count(*) FROM AIRLINES",
    "query_toks": "['SELECT', 'count', '(', '*', ')', 'FROM', 'AIRLINES']",
    "query_toks_no_value": "['select', 'count', '(', '*', ')', 'from', 'airlines']",
    "question": "How many airlines do we have?",
    "question_th": "เรามีสายการบินกี่สาย?",
    "question_toks": "['How', 'many', 'airlines', 'do', 'we', 'have', '?']",
    "sql": "{'from': {'table_units': [['table_unit', 0]], 'conds': []}, 'select': [False, [[3, [0, [0, 0, False], None]]]], 'where': [], 'groupBy': [], 'having': [], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "flight_2",
    "query": "SELECT count(*) FROM AIRLINES",
    "query_toks": "['SELECT', 'count', '(', '*', ')', 'FROM', 'AIRLINES']",
    "query_toks_no_value": "['select', 'count', '(', '*', ')', 'from', 'airlines']",
    "question": "What is the total number of airlines?",
    "question_th": "มีสายการบินทั้งหมดกี่สายการบิน?",
    "question_toks": "['What', 'is', 'the', 'total', 'number', 'of', 'airlines', '?']",
    "sql": "{'from': {'table_units': [['table_unit', 0]], 'conds': []}, 'select': [False, [[3, [0, [0, 0, False], None]]]], 'where': [], 'groupBy': [], 'having': [], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "flight_2",
    "query": "SELECT count(*) FROM AIRPORTS",
    "query_toks": "['SELECT', 'count', '(', '*', ')', 'FROM', 'AIRPORTS']",
    "query_toks_no_value": "['select', 'count', '(', '*', ')', 'from', 'airports']",
    "question": "How many airports do we have?",
    "question_th": "เรามีสนามบินกี่แห่ง?",
    "question_toks": "['How', 'many', 'airports', 'do', 'we', 'have', '?']",
    "sql": "{'from': {'table_units': [['table_unit', 1]], 'conds': []}, 'select': [False, [[3, [0, [0, 0, False], None]]]], 'where': [], 'groupBy': [], 'having': [], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "flight_2",
    "query": "SELECT count(*) FROM AIRPORTS",
    "query_toks": "['SELECT', 'count', '(', '*', ')', 'FROM', 'AIRPORTS']",
    "query_toks_no_value": "['select', 'count', '(', '*', ')', 'from', 'airports']",
    "question": "Return the number of  airports.",
    "question_th": "ส่งกลับจำนวนสนามบิน",
    "question_toks": "['Return', 'the', 'number', 'of', 'airports', '.']",
    "sql": "{'from': {'table_units': [['table_unit', 1]], 'conds': []}, 'select': [False, [[3, [0, [0, 0, False], None]]]], 'where': [], 'groupBy': [], 'having': [], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "flight_2",
    "query": "SELECT count(*) FROM FLIGHTS",
    "query_toks": "['SELECT', 'count', '(', '*', ')', 'FROM', 'FLIGHTS']",
    "query_toks_no_value": "['select', 'count', '(', '*', ')', 'from', 'flights']",
    "question": "How many flights do we have?",
    "question_th": "เรามีเที่ยวบินกี่เที่ยว?",
    "question_toks": "['How', 'many', 'flights', 'do', 'we', 'have', '?']",
    "sql": "{'from': {'table_units': [['table_unit', 2]], 'conds': []}, 'select': [False, [[3, [0, [0, 0, False], None]]]], 'where': [], 'groupBy': [], 'having': [], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "flight_2",
    "query": "SELECT count(*) FROM FLIGHTS",
    "query_toks": "['SELECT', 'count', '(', '*', ')', 'FROM', 'FLIGHTS']",
    "query_toks_no_value": "['select', 'count', '(', '*', ')', 'from', 'flights']",
    "question": "Return the number of flights.",
    "question_th": "กลับจำนวนเที่ยวบิน",
    "question_toks": "['Return', 'the', 'number', 'of', 'flights', '.']",
    "sql": "{'from': {'table_units': [['table_unit', 2]], 'conds': []}, 'select': [False, [[3, [0, [0, 0, False], None]]]], 'where': [], 'groupBy': [], 'having': [], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "flight_2",
    "query": "SELECT Airline FROM AIRLINES WHERE Abbreviation  =  \"UAL\"",
    "query_toks": "['SELECT', 'Airline', 'FROM', 'AIRLINES', 'WHERE', 'Abbreviation', '=', '``', 'UAL', \"''\"]",
    "query_toks_no_value": "['select', 'airline', 'from', 'airlines', 'where', 'abbreviation', '=', 'value']",
    "question": "Which airline has abbreviation 'UAL'?",
    "question_th": "สายการบินใดมีอักษรย่อ 'UAL'?",
    "question_toks": "['Which', 'airline', 'has', 'abbreviation', \"'UAL\", \"'\", '?']",
    "sql": "{'from': {'table_units': [['table_unit', 0]], 'conds': []}, 'select': [False, [[0, [0, [0, 2, False], None]]]], 'where': [[False, 2, [0, [0, 3, False], None], '\"UAL\"', None]], 'groupBy': [], 'having': [], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "flight_2",
    "query": "SELECT Airline FROM AIRLINES WHERE Abbreviation  =  \"UAL\"",
    "query_toks": "['SELECT', 'Airline', 'FROM', 'AIRLINES', 'WHERE', 'Abbreviation', '=', '``', 'UAL', \"''\"]",
    "query_toks_no_value": "['select', 'airline', 'from', 'airlines', 'where', 'abbreviation', '=', 'value']",
    "question": "Give the airline with abbreviation 'UAL'.",
    "question_th": "ให้สายการบินใช้อักษรย่อ 'UAL'",
    "question_toks": "['Give', 'the', 'airline', 'with', 'abbreviation', \"'UAL\", \"'\", '.']",
    "sql": "{'from': {'table_units': [['table_unit', 0]], 'conds': []}, 'select': [False, [[0, [0, [0, 2, False], None]]]], 'where': [[False, 2, [0, [0, 3, False], None], '\"UAL\"', None]], 'groupBy': [], 'having': [], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "flight_2",
    "query": "SELECT count(*) FROM AIRLINES WHERE Country  =  \"USA\"",
    "query_toks": "['SELECT', 'count', '(', '*', ')', 'FROM', 'AIRLINES', 'WHERE', 'Country', '=', '``', 'USA', \"''\"]",
    "query_toks_no_value": "['select', 'count', '(', '*', ')', 'from', 'airlines', 'where', 'country', '=', 'value']",
    "question": "How many airlines are from USA?",
    "question_th": "มีสายการบินกี่แห่งจากสหรัฐอเมริกา?",
    "question_toks": "['How', 'many', 'airlines', 'are', 'from', 'USA', '?']",
    "sql": "{'from': {'table_units': [['table_unit', 0]], 'conds': []}, 'select': [False, [[3, [0, [0, 0, False], None]]]], 'where': [[False, 2, [0, [0, 4, False], None], '\"USA\"', None]], 'groupBy': [], 'having': [], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "flight_2",
    "query": "SELECT count(*) FROM AIRLINES WHERE Country  =  \"USA\"",
    "query_toks": "['SELECT', 'count', '(', '*', ')', 'FROM', 'AIRLINES', 'WHERE', 'Country', '=', '``', 'USA', \"''\"]",
    "query_toks_no_value": "['select', 'count', '(', '*', ')', 'from', 'airlines', 'where', 'country', '=', 'value']",
    "question": "Return the number of airlines in the USA.",
    "question_th": "ส่งกลับจำนวนสายการบินในสหรัฐอเมริกา",
    "question_toks": "['Return', 'the', 'number', 'of', 'airlines', 'in', 'the', 'USA', '.']",
    "sql": "{'from': {'table_units': [['table_unit', 0]], 'conds': []}, 'select': [False, [[3, [0, [0, 0, False], None]]]], 'where': [[False, 2, [0, [0, 4, False], None], '\"USA\"', None]], 'groupBy': [], 'having': [], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "flight_2",
    "query": "SELECT City ,  Country FROM AIRPORTS WHERE AirportName  =  \"Alton\"",
    "query_toks": "['SELECT', 'City', ',', 'Country', 'FROM', 'AIRPORTS', 'WHERE', 'AirportName', '=', '``', 'Alton', \"''\"]",
    "query_toks_no_value": "['select', 'city', ',', 'country', 'from', 'airports', 'where', 'airportname', '=', 'value']",
    "question": "Which city and country is the Alton airport at?",
    "question_th": "สนามบินอัลตันตั้งอยู่ที่เมืองและประเทศใด",
    "question_toks": "['Which', 'city', 'and', 'country', 'is', 'the', 'Alton', 'airport', 'at', '?']",
    "sql": "{'from': {'table_units': [['table_unit', 1]], 'conds': []}, 'select': [False, [[0, [0, [0, 5, False], None]], [0, [0, [0, 8, False], None]]]], 'where': [[False, 2, [0, [0, 7, False], None], '\"Alton\"', None]], 'groupBy': [], 'having': [], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "flight_2",
    "query": "SELECT City ,  Country FROM AIRPORTS WHERE AirportName  =  \"Alton\"",
    "query_toks": "['SELECT', 'City', ',', 'Country', 'FROM', 'AIRPORTS', 'WHERE', 'AirportName', '=', '``', 'Alton', \"''\"]",
    "query_toks_no_value": "['select', 'city', ',', 'country', 'from', 'airports', 'where', 'airportname', '=', 'value']",
    "question": "Give the city and country for the Alton airport.",
    "question_th": "ระบุเมืองและประเทศสำหรับสนามบินอัลตัน",
    "question_toks": "['Give', 'the', 'city', 'and', 'country', 'for', 'the', 'Alton', 'airport', '.']",
    "sql": "{'from': {'table_units': [['table_unit', 1]], 'conds': []}, 'select': [False, [[0, [0, [0, 5, False], None]], [0, [0, [0, 8, False], None]]]], 'where': [[False, 2, [0, [0, 7, False], None], '\"Alton\"', None]], 'groupBy': [], 'having': [], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "flight_2",
    "query": "SELECT AirportName FROM AIRPORTS WHERE AirportCode  =  \"AKO\"",
    "query_toks": "['SELECT', 'AirportName', 'FROM', 'AIRPORTS', 'WHERE', 'AirportCode', '=', '``', 'AKO', \"''\"]",
    "query_toks_no_value": "['select', 'airportname', 'from', 'airports', 'where', 'airportcode', '=', 'value']",
    "question": "What is the airport name for airport 'AKO'?",
    "question_th": "ชื่อสนามบินของสนามบิน 'AKO' คืออะไร?",
    "question_toks": "['What', 'is', 'the', 'airport', 'name', 'for', 'airport', \"'AKO\", \"'\", '?']",
    "sql": "{'from': {'table_units': [['table_unit', 1]], 'conds': []}, 'select': [False, [[0, [0, [0, 7, False], None]]]], 'where': [[False, 2, [0, [0, 6, False], None], '\"AKO\"', None]], 'groupBy': [], 'having': [], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "flight_2",
    "query": "SELECT AirportName FROM AIRPORTS WHERE AirportCode  =  \"AKO\"",
    "query_toks": "['SELECT', 'AirportName', 'FROM', 'AIRPORTS', 'WHERE', 'AirportCode', '=', '``', 'AKO', \"''\"]",
    "query_toks_no_value": "['select', 'airportname', 'from', 'airports', 'where', 'airportcode', '=', 'value']",
    "question": "Return the name of the airport with code 'AKO'.",
    "question_th": "กลับชื่อสนามบินด้วยรหัส 'AKO'",
    "question_toks": "['Return', 'the', 'name', 'of', 'the', 'airport', 'with', 'code', \"'AKO\", \"'\", '.']",
    "sql": "{'from': {'table_units': [['table_unit', 1]], 'conds': []}, 'select': [False, [[0, [0, [0, 7, False], None]]]], 'where': [[False, 2, [0, [0, 6, False], None], '\"AKO\"', None]], 'groupBy': [], 'having': [], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "flight_2",
    "query": "SELECT AirportName FROM AIRPORTS WHERE City = \"Aberdeen\"",
    "query_toks": "['SELECT', 'AirportName', 'FROM', 'AIRPORTS', 'WHERE', 'City', '=', '``', 'Aberdeen', \"''\"]",
    "query_toks_no_value": "['select', 'airportname', 'from', 'airports', 'where', 'city', '=', 'value']",
    "question": "What are airport names at City 'Aberdeen'?",
    "question_th": "ชื่อสนามบินใน City 'Aberdeen' คืออะไร?",
    "question_toks": "['What', 'are', 'airport', 'names', 'at', 'City', \"'Aberdeen\", \"'\", '?']",
    "sql": "{'from': {'table_units': [['table_unit', 1]], 'conds': []}, 'select': [False, [[0, [0, [0, 7, False], None]]]], 'where': [[False, 2, [0, [0, 5, False], None], '\"Aberdeen\"', None]], 'groupBy': [], 'having': [], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "flight_2",
    "query": "SELECT AirportName FROM AIRPORTS WHERE City = \"Aberdeen\"",
    "query_toks": "['SELECT', 'AirportName', 'FROM', 'AIRPORTS', 'WHERE', 'City', '=', '``', 'Aberdeen', \"''\"]",
    "query_toks_no_value": "['select', 'airportname', 'from', 'airports', 'where', 'city', '=', 'value']",
    "question": "What are the names of airports in Aberdeen?",
    "question_th": "ชื่อสนามบินใน อเบอร์ดีน คืออะไร?",
    "question_toks": "['What', 'are', 'the', 'names', 'of', 'airports', 'in', 'Aberdeen', '?']",
    "sql": "{'from': {'table_units': [['table_unit', 1]], 'conds': []}, 'select': [False, [[0, [0, [0, 7, False], None]]]], 'where': [[False, 2, [0, [0, 5, False], None], '\"Aberdeen\"', None]], 'groupBy': [], 'having': [], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "flight_2",
    "query": "SELECT count(*) FROM FLIGHTS WHERE SourceAirport  =  \"APG\"",
    "query_toks": "['SELECT', 'count', '(', '*', ')', 'FROM', 'FLIGHTS', 'WHERE', 'SourceAirport', '=', '``', 'APG', \"''\"]",
    "query_toks_no_value": "['select', 'count', '(', '*', ')', 'from', 'flights', 'where', 'sourceairport', '=', 'value']",
    "question": "How many flights depart from 'APG'?",
    "question_th": "มีเที่ยวบินกี่เที่ยวที่ออกจาก 'APG'",
    "question_toks": "['How', 'many', 'flights', 'depart', 'from', \"'APG\", \"'\", '?']",
    "sql": "{'from': {'table_units': [['table_unit', 2]], 'conds': []}, 'select': [False, [[3, [0, [0, 0, False], None]]]], 'where': [[False, 2, [0, [0, 12, False], None], '\"APG\"', None]], 'groupBy': [], 'having': [], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "flight_2",
    "query": "SELECT count(*) FROM FLIGHTS WHERE SourceAirport  =  \"APG\"",
    "query_toks": "['SELECT', 'count', '(', '*', ')', 'FROM', 'FLIGHTS', 'WHERE', 'SourceAirport', '=', '``', 'APG', \"''\"]",
    "query_toks_no_value": "['select', 'count', '(', '*', ')', 'from', 'flights', 'where', 'sourceairport', '=', 'value']",
    "question": "Count the number of flights departing from 'APG'.",
    "question_th": "นับจำนวนเที่ยวบินที่ออกเดินทางจาก 'APG'",
    "question_toks": "['Count', 'the', 'number', 'of', 'flights', 'departing', 'from', \"'APG\", \"'\", '.']",
    "sql": "{'from': {'table_units': [['table_unit', 2]], 'conds': []}, 'select': [False, [[3, [0, [0, 0, False], None]]]], 'where': [[False, 2, [0, [0, 12, False], None], '\"APG\"', None]], 'groupBy': [], 'having': [], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "flight_2",
    "query": "SELECT count(*) FROM FLIGHTS WHERE DestAirport  =  \"ATO\"",
    "query_toks": "['SELECT', 'count', '(', '*', ')', 'FROM', 'FLIGHTS', 'WHERE', 'DestAirport', '=', '``', 'ATO', \"''\"]",
    "query_toks_no_value": "['select', 'count', '(', '*', ')', 'from', 'flights', 'where', 'destairport', '=', 'value']",
    "question": "How many flights have destination ATO?",
    "question_th": "ATO มีจุดหมายปลายทางกี่เที่ยวบิน?",
    "question_toks": "['How', 'many', 'flights', 'have', 'destination', 'ATO', '?']",
    "sql": "{'from': {'table_units': [['table_unit', 2]], 'conds': []}, 'select': [False, [[3, [0, [0, 0, False], None]]]], 'where': [[False, 2, [0, [0, 13, False], None], '\"ATO\"', None]], 'groupBy': [], 'having': [], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "flight_2",
    "query": "SELECT count(*) FROM FLIGHTS WHERE DestAirport  =  \"ATO\"",
    "query_toks": "['SELECT', 'count', '(', '*', ')', 'FROM', 'FLIGHTS', 'WHERE', 'DestAirport', '=', '``', 'ATO', \"''\"]",
    "query_toks_no_value": "['select', 'count', '(', '*', ')', 'from', 'flights', 'where', 'destairport', '=', 'value']",
    "question": "Count the number of flights into ATO.",
    "question_th": "นับจำนวนเที่ยวบินเข้า ATO",
    "question_toks": "['Count', 'the', 'number', 'of', 'flights', 'into', 'ATO', '.']",
    "sql": "{'from': {'table_units': [['table_unit', 2]], 'conds': []}, 'select': [False, [[3, [0, [0, 0, False], None]]]], 'where': [[False, 2, [0, [0, 13, False], None], '\"ATO\"', None]], 'groupBy': [], 'having': [], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "flight_2",
    "query": "SELECT count(*) FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.SourceAirport  =  T2.AirportCode WHERE T2.City  =  \"Aberdeen\"",
    "query_toks": "['SELECT', 'count', '(', '*', ')', 'FROM', 'FLIGHTS', 'AS', 'T1', 'JOIN', 'AIRPORTS', 'AS', 'T2', 'ON', 'T1.SourceAirport', '=', 'T2.AirportCode', 'WHERE', 'T2.City', '=', '``', 'Aberdeen', \"''\"]",
    "query_toks_no_value": "['select', 'count', '(', '*', ')', 'from', 'flights', 'as', 't1', 'join', 'airports', 'as', 't2', 'on', 't1', '.', 'sourceairport', '=', 't2', '.', 'airportcode', 'where', 't2', '.', 'city', '=', 'value']",
    "question": "How many flights depart from City Aberdeen?",
    "question_th": "มีเที่ยวบินที่เดินทางออกจากซิตี้ อเบอร์ดีน กี่เที่ยว?",
    "question_toks": "['How', 'many', 'flights', 'depart', 'from', 'City', 'Aberdeen', '?']",
    "sql": "{'from': {'table_units': [['table_unit', 2], ['table_unit', 1]], 'conds': [[False, 2, [0, [0, 12, False], None], [0, 6, False], None]]}, 'select': [False, [[3, [0, [0, 0, False], None]]]], 'where': [[False, 2, [0, [0, 5, False], None], '\"Aberdeen\"', None]], 'groupBy': [], 'having': [], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "flight_2",
    "query": "SELECT count(*) FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.SourceAirport  =  T2.AirportCode WHERE T2.City  =  \"Aberdeen\"",
    "query_toks": "['SELECT', 'count', '(', '*', ')', 'FROM', 'FLIGHTS', 'AS', 'T1', 'JOIN', 'AIRPORTS', 'AS', 'T2', 'ON', 'T1.SourceAirport', '=', 'T2.AirportCode', 'WHERE', 'T2.City', '=', '``', 'Aberdeen', \"''\"]",
    "query_toks_no_value": "['select', 'count', '(', '*', ')', 'from', 'flights', 'as', 't1', 'join', 'airports', 'as', 't2', 'on', 't1', '.', 'sourceairport', '=', 't2', '.', 'airportcode', 'where', 't2', '.', 'city', '=', 'value']",
    "question": "Return the number of flights departing from Aberdeen.",
    "question_th": "กลับจำนวนเที่ยวบินที่ออกเดินทางจากอเบอร์ดีน",
    "question_toks": "['Return', 'the', 'number', 'of', 'flights', 'departing', 'from', 'Aberdeen', '.']",
    "sql": "{'from': {'table_units': [['table_unit', 2], ['table_unit', 1]], 'conds': [[False, 2, [0, [0, 12, False], None], [0, 6, False], None]]}, 'select': [False, [[3, [0, [0, 0, False], None]]]], 'where': [[False, 2, [0, [0, 5, False], None], '\"Aberdeen\"', None]], 'groupBy': [], 'having': [], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "flight_2",
    "query": "SELECT count(*) FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.DestAirport  =  T2.AirportCode WHERE T2.City  =  \"Aberdeen\"",
    "query_toks": "['SELECT', 'count', '(', '*', ')', 'FROM', 'FLIGHTS', 'AS', 'T1', 'JOIN', 'AIRPORTS', 'AS', 'T2', 'ON', 'T1.DestAirport', '=', 'T2.AirportCode', 'WHERE', 'T2.City', '=', '``', 'Aberdeen', \"''\"]",
    "query_toks_no_value": "['select', 'count', '(', '*', ')', 'from', 'flights', 'as', 't1', 'join', 'airports', 'as', 't2', 'on', 't1', '.', 'destairport', '=', 't2', '.', 'airportcode', 'where', 't2', '.', 'city', '=', 'value']",
    "question": "How many flights arriving in Aberdeen city?",
    "question_th": "มีเที่ยวบินที่มาถึงเมืองอเบอร์ดีนกี่เที่ยว?",
    "question_toks": "['How', 'many', 'flights', 'arriving', 'in', 'Aberdeen', 'city', '?']",
    "sql": "{'from': {'table_units': [['table_unit', 2], ['table_unit', 1]], 'conds': [[False, 2, [0, [0, 13, False], None], [0, 6, False], None]]}, 'select': [False, [[3, [0, [0, 0, False], None]]]], 'where': [[False, 2, [0, [0, 5, False], None], '\"Aberdeen\"', None]], 'groupBy': [], 'having': [], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "flight_2",
    "query": "SELECT count(*) FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.DestAirport  =  T2.AirportCode WHERE T2.City  =  \"Aberdeen\"",
    "query_toks": "['SELECT', 'count', '(', '*', ')', 'FROM', 'FLIGHTS', 'AS', 'T1', 'JOIN', 'AIRPORTS', 'AS', 'T2', 'ON', 'T1.DestAirport', '=', 'T2.AirportCode', 'WHERE', 'T2.City', '=', '``', 'Aberdeen', \"''\"]",
    "query_toks_no_value": "['select', 'count', '(', '*', ')', 'from', 'flights', 'as', 't1', 'join', 'airports', 'as', 't2', 'on', 't1', '.', 'destairport', '=', 't2', '.', 'airportcode', 'where', 't2', '.', 'city', '=', 'value']",
    "question": "Return the number of flights arriving in Aberdeen.",
    "question_th": "ส่งกลับจำนวนเที่ยวบินที่มาถึงอเบอร์ดีน",
    "question_toks": "['Return', 'the', 'number', 'of', 'flights', 'arriving', 'in', 'Aberdeen', '.']",
    "sql": "{'from': {'table_units': [['table_unit', 2], ['table_unit', 1]], 'conds': [[False, 2, [0, [0, 13, False], None], [0, 6, False], None]]}, 'select': [False, [[3, [0, [0, 0, False], None]]]], 'where': [[False, 2, [0, [0, 5, False], None], '\"Aberdeen\"', None]], 'groupBy': [], 'having': [], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "flight_2",
    "query": "SELECT count(*) FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.DestAirport  =  T2.AirportCode JOIN AIRPORTS AS T3 ON T1.SourceAirport  =  T3.AirportCode WHERE T2.City  =  \"Ashley\" AND T3.City  =  \"Aberdeen\"",
    "query_toks": "['SELECT', 'count', '(', '*', ')', 'FROM', 'FLIGHTS', 'AS', 'T1', 'JOIN', 'AIRPORTS', 'AS', 'T2', 'ON', 'T1.DestAirport', '=', 'T2.AirportCode', 'JOIN', 'AIRPORTS', 'AS', 'T3', 'ON', 'T1.SourceAirport', '=', 'T3.AirportCode', 'WHERE', 'T2.City', '=', '``', 'Ashley', \"''\", 'AND', 'T3.City', '=', '``', 'Aberdeen', \"''\"]",
    "query_toks_no_value": "['select', 'count', '(', '*', ')', 'from', 'flights', 'as', 't1', 'join', 'airports', 'as', 't2', 'on', 't1', '.', 'destairport', '=', 't2', '.', 'airportcode', 'join', 'airports', 'as', 't3', 'on', 't1', '.', 'sourceairport', '=', 't3', '.', 'airportcode', 'where', 't2', '.', 'city', '=', 'value', 'and', 't3', '.', 'city', '=', 'value']",
    "question": "How many flights depart from City 'Aberdeen' and have destination City 'Ashley'?",
    "question_th": "มีเที่ยวบินที่เดินทางออกจากเมือง 'แอเบอร์ดีน' และมีเมืองปลายทาง 'แอชลีย์' กี่เที่ยวบิน?",
    "question_toks": "['How', 'many', 'flights', 'depart', 'from', 'City', \"'Aberdeen\", \"'\", 'and', 'have', 'destination', 'City', \"'Ashley\", \"'\", '?']",
    "sql": "{'from': {'table_units': [['table_unit', 2], ['table_unit', 1], ['table_unit', 1]], 'conds': [[False, 2, [0, [0, 13, False], None], [0, 6, False], None], 'and', [False, 2, [0, [0, 12, False], None], [0, 6, False], None]]}, 'select': [False, [[3, [0, [0, 0, False], None]]]], 'where': [[False, 2, [0, [0, 5, False], None], '\"Ashley\"', None], 'and', [False, 2, [0, [0, 5, False], None], '\"Aberdeen\"', None]], 'groupBy': [], 'having': [], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "flight_2",
    "query": "SELECT count(*) FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.DestAirport  =  T2.AirportCode JOIN AIRPORTS AS T3 ON T1.SourceAirport  =  T3.AirportCode WHERE T2.City  =  \"Ashley\" AND T3.City  =  \"Aberdeen\"",
    "query_toks": "['SELECT', 'count', '(', '*', ')', 'FROM', 'FLIGHTS', 'AS', 'T1', 'JOIN', 'AIRPORTS', 'AS', 'T2', 'ON', 'T1.DestAirport', '=', 'T2.AirportCode', 'JOIN', 'AIRPORTS', 'AS', 'T3', 'ON', 'T1.SourceAirport', '=', 'T3.AirportCode', 'WHERE', 'T2.City', '=', '``', 'Ashley', \"''\", 'AND', 'T3.City', '=', '``', 'Aberdeen', \"''\"]",
    "query_toks_no_value": "['select', 'count', '(', '*', ')', 'from', 'flights', 'as', 't1', 'join', 'airports', 'as', 't2', 'on', 't1', '.', 'destairport', '=', 't2', '.', 'airportcode', 'join', 'airports', 'as', 't3', 'on', 't1', '.', 'sourceairport', '=', 't3', '.', 'airportcode', 'where', 't2', '.', 'city', '=', 'value', 'and', 't3', '.', 'city', '=', 'value']",
    "question": "How many flights fly from Aberdeen to Ashley?",
    "question_th": "จากแอเบอร์ดีนไปแอชลีย์มีบินกี่เที่ยวบิน?",
    "question_toks": "['How', 'many', 'flights', 'fly', 'from', 'Aberdeen', 'to', 'Ashley', '?']",
    "sql": "{'from': {'table_units': [['table_unit', 2], ['table_unit', 1], ['table_unit', 1]], 'conds': [[False, 2, [0, [0, 13, False], None], [0, 6, False], None], 'and', [False, 2, [0, [0, 12, False], None], [0, 6, False], None]]}, 'select': [False, [[3, [0, [0, 0, False], None]]]], 'where': [[False, 2, [0, [0, 5, False], None], '\"Ashley\"', None], 'and', [False, 2, [0, [0, 5, False], None], '\"Aberdeen\"', None]], 'groupBy': [], 'having': [], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "flight_2",
    "query": "SELECT count(*) FROM FLIGHTS AS T1 JOIN AIRLINES AS T2 ON T1.Airline  =  T2.uid WHERE T2.Airline = \"JetBlue Airways\"",
    "query_toks": "['SELECT', 'count', '(', '*', ')', 'FROM', 'FLIGHTS', 'AS', 'T1', 'JOIN', 'AIRLINES', 'AS', 'T2', 'ON', 'T1.Airline', '=', 'T2.uid', 'WHERE', 'T2.Airline', '=', '``', 'JetBlue', 'Airways', \"''\"]",
    "query_toks_no_value": "['select', 'count', '(', '*', ')', 'from', 'flights', 'as', 't1', 'join', 'airlines', 'as', 't2', 'on', 't1', '.', 'airline', '=', 't2', '.', 'uid', 'where', 't2', '.', 'airline', '=', 'value']",
    "question": "How many flights does airline 'JetBlue Airways' have?",
    "question_th": "สายการบิน 'เจ็ทบลูแอร์เวย์' มีกี่เที่ยวบิน?",
    "question_toks": "['How', 'many', 'flights', 'does', 'airline', \"'JetBlue\", 'Airways', \"'\", 'have', '?']",
    "sql": "{'from': {'table_units': [['table_unit', 2], ['table_unit', 0]], 'conds': [[False, 2, [0, [0, 10, False], None], [0, 1, False], None]]}, 'select': [False, [[3, [0, [0, 0, False], None]]]], 'where': [[False, 2, [0, [0, 2, False], None], '\"JetBlue Airways\"', None]], 'groupBy': [], 'having': [], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "flight_2",
    "query": "SELECT count(*) FROM FLIGHTS AS T1 JOIN AIRLINES AS T2 ON T1.Airline  =  T2.uid WHERE T2.Airline = \"JetBlue Airways\"",
    "query_toks": "['SELECT', 'count', '(', '*', ')', 'FROM', 'FLIGHTS', 'AS', 'T1', 'JOIN', 'AIRLINES', 'AS', 'T2', 'ON', 'T1.Airline', '=', 'T2.uid', 'WHERE', 'T2.Airline', '=', '``', 'JetBlue', 'Airways', \"''\"]",
    "query_toks_no_value": "['select', 'count', '(', '*', ')', 'from', 'flights', 'as', 't1', 'join', 'airlines', 'as', 't2', 'on', 't1', '.', 'airline', '=', 't2', '.', 'uid', 'where', 't2', '.', 'airline', '=', 'value']",
    "question": "Give the number of Jetblue Airways flights.",
    "question_th": "แจ้งจำนวนเที่ยวบินของเจ็ทบลูแอร์เวย์",
    "question_toks": "['Give', 'the', 'number', 'of', 'Jetblue', 'Airways', 'flights', '.']",
    "sql": "{'from': {'table_units': [['table_unit', 2], ['table_unit', 0]], 'conds': [[False, 2, [0, [0, 10, False], None], [0, 1, False], None]]}, 'select': [False, [[3, [0, [0, 0, False], None]]]], 'where': [[False, 2, [0, [0, 2, False], None], '\"JetBlue Airways\"', None]], 'groupBy': [], 'having': [], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "flight_2",
    "query": "SELECT count(*) FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T2.Airline  =  T1.uid WHERE T1.Airline  =  \"United Airlines\" AND T2.DestAirport  =  \"ASY\"",
    "query_toks": "['SELECT', 'count', '(', '*', ')', 'FROM', 'AIRLINES', 'AS', 'T1', 'JOIN', 'FLIGHTS', 'AS', 'T2', 'ON', 'T2.Airline', '=', 'T1.uid', 'WHERE', 'T1.Airline', '=', '``', 'United', 'Airlines', \"''\", 'AND', 'T2.DestAirport', '=', '``', 'ASY', \"''\"]",
    "query_toks_no_value": "['select', 'count', '(', '*', ')', 'from', 'airlines', 'as', 't1', 'join', 'flights', 'as', 't2', 'on', 't2', '.', 'airline', '=', 't1', '.', 'uid', 'where', 't1', '.', 'airline', '=', 'value', 'and', 't2', '.', 'destairport', '=', 'value']",
    "question": "How many 'United Airlines' flights go to Airport 'ASY'?",
    "question_th": "เที่ยวบินของ 'ยูไนเต็ดแอร์ไลน์' ไปยังสนามบิน 'ASY' มีกี่เที่ยวบิน",
    "question_toks": "['How', 'many', \"'United\", 'Airlines', \"'\", 'flights', 'go', 'to', 'Airport', \"'ASY\", \"'\", '?']",
    "sql": "{'from': {'table_units': [['table_unit', 0], ['table_unit', 2]], 'conds': [[False, 2, [0, [0, 10, False], None], [0, 1, False], None]]}, 'select': [False, [[3, [0, [0, 0, False], None]]]], 'where': [[False, 2, [0, [0, 2, False], None], '\"United Airlines\"', None], 'and', [False, 2, [0, [0, 13, False], None], '\"ASY\"', None]], 'groupBy': [], 'having': [], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "flight_2",
    "query": "SELECT count(*) FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T2.Airline  =  T1.uid WHERE T1.Airline  =  \"United Airlines\" AND T2.DestAirport  =  \"ASY\"",
    "query_toks": "['SELECT', 'count', '(', '*', ')', 'FROM', 'AIRLINES', 'AS', 'T1', 'JOIN', 'FLIGHTS', 'AS', 'T2', 'ON', 'T2.Airline', '=', 'T1.uid', 'WHERE', 'T1.Airline', '=', '``', 'United', 'Airlines', \"''\", 'AND', 'T2.DestAirport', '=', '``', 'ASY', \"''\"]",
    "query_toks_no_value": "['select', 'count', '(', '*', ')', 'from', 'airlines', 'as', 't1', 'join', 'flights', 'as', 't2', 'on', 't2', '.', 'airline', '=', 't1', '.', 'uid', 'where', 't1', '.', 'airline', '=', 'value', 'and', 't2', '.', 'destairport', '=', 'value']",
    "question": "Count the number of United Airlines flights arriving in ASY Airport.",
    "question_th": "นับจำนวนเที่ยวบินของ United Airlines ที่เดินทางมาถึงสนามบิน ASY",
    "question_toks": "['Count', 'the', 'number', 'of', 'United', 'Airlines', 'flights', 'arriving', 'in', 'ASY', 'Airport', '.']",
    "sql": "{'from': {'table_units': [['table_unit', 0], ['table_unit', 2]], 'conds': [[False, 2, [0, [0, 10, False], None], [0, 1, False], None]]}, 'select': [False, [[3, [0, [0, 0, False], None]]]], 'where': [[False, 2, [0, [0, 2, False], None], '\"United Airlines\"', None], 'and', [False, 2, [0, [0, 13, False], None], '\"ASY\"', None]], 'groupBy': [], 'having': [], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "flight_2",
    "query": "SELECT count(*) FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T2.Airline  =  T1.uid WHERE T1.Airline  =  \"United Airlines\" AND T2.SourceAirport  =  \"AHD\"",
    "query_toks": "['SELECT', 'count', '(', '*', ')', 'FROM', 'AIRLINES', 'AS', 'T1', 'JOIN', 'FLIGHTS', 'AS', 'T2', 'ON', 'T2.Airline', '=', 'T1.uid', 'WHERE', 'T1.Airline', '=', '``', 'United', 'Airlines', \"''\", 'AND', 'T2.SourceAirport', '=', '``', 'AHD', \"''\"]",
    "query_toks_no_value": "['select', 'count', '(', '*', ')', 'from', 'airlines', 'as', 't1', 'join', 'flights', 'as', 't2', 'on', 't2', '.', 'airline', '=', 't1', '.', 'uid', 'where', 't1', '.', 'airline', '=', 'value', 'and', 't2', '.', 'sourceairport', '=', 'value']",
    "question": "How many 'United Airlines' flights depart from Airport 'AHD'?",
    "question_th": "มีเที่ยวบินของ 'ยูไนเต็ดแอร์ไลน์' ที่ออกจากสนามบิน 'AHD' กี่เที่ยว?",
    "question_toks": "['How', 'many', \"'United\", 'Airlines', \"'\", 'flights', 'depart', 'from', 'Airport', \"'AHD\", \"'\", '?']",
    "sql": "{'from': {'table_units': [['table_unit', 0], ['table_unit', 2]], 'conds': [[False, 2, [0, [0, 10, False], None], [0, 1, False], None]]}, 'select': [False, [[3, [0, [0, 0, False], None]]]], 'where': [[False, 2, [0, [0, 2, False], None], '\"United Airlines\"', None], 'and', [False, 2, [0, [0, 12, False], None], '\"AHD\"', None]], 'groupBy': [], 'having': [], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "flight_2",
    "query": "SELECT count(*) FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T2.Airline  =  T1.uid WHERE T1.Airline  =  \"United Airlines\" AND T2.SourceAirport  =  \"AHD\"",
    "query_toks": "['SELECT', 'count', '(', '*', ')', 'FROM', 'AIRLINES', 'AS', 'T1', 'JOIN', 'FLIGHTS', 'AS', 'T2', 'ON', 'T2.Airline', '=', 'T1.uid', 'WHERE', 'T1.Airline', '=', '``', 'United', 'Airlines', \"''\", 'AND', 'T2.SourceAirport', '=', '``', 'AHD', \"''\"]",
    "query_toks_no_value": "['select', 'count', '(', '*', ')', 'from', 'airlines', 'as', 't1', 'join', 'flights', 'as', 't2', 'on', 't2', '.', 'airline', '=', 't1', '.', 'uid', 'where', 't1', '.', 'airline', '=', 'value', 'and', 't2', '.', 'sourceairport', '=', 'value']",
    "question": "Return the number of United Airlines flights leaving from AHD Airport.",
    "question_th": "ไปกลับจำนวนเที่ยวบินของ United Airlines ที่ออกจากสนามบิน AHD",
    "question_toks": "['Return', 'the', 'number', 'of', 'United', 'Airlines', 'flights', 'leaving', 'from', 'AHD', 'Airport', '.']",
    "sql": "{'from': {'table_units': [['table_unit', 0], ['table_unit', 2]], 'conds': [[False, 2, [0, [0, 10, False], None], [0, 1, False], None]]}, 'select': [False, [[3, [0, [0, 0, False], None]]]], 'where': [[False, 2, [0, [0, 2, False], None], '\"United Airlines\"', None], 'and', [False, 2, [0, [0, 12, False], None], '\"AHD\"', None]], 'groupBy': [], 'having': [], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "flight_2",
    "query": "SELECT count(*) FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.DestAirport  =  T2.AirportCode JOIN AIRLINES AS T3 ON T3.uid  =  T1.Airline WHERE T2.City  =  \"Aberdeen\" AND T3.Airline  =  \"United Airlines\"",
    "query_toks": "['SELECT', 'count', '(', '*', ')', 'FROM', 'FLIGHTS', 'AS', 'T1', 'JOIN', 'AIRPORTS', 'AS', 'T2', 'ON', 'T1.DestAirport', '=', 'T2.AirportCode', 'JOIN', 'AIRLINES', 'AS', 'T3', 'ON', 'T3.uid', '=', 'T1.Airline', 'WHERE', 'T2.City', '=', '``', 'Aberdeen', \"''\", 'AND', 'T3.Airline', '=', '``', 'United', 'Airlines', \"''\"]",
    "query_toks_no_value": "['select', 'count', '(', '*', ')', 'from', 'flights', 'as', 't1', 'join', 'airports', 'as', 't2', 'on', 't1', '.', 'destairport', '=', 't2', '.', 'airportcode', 'join', 'airlines', 'as', 't3', 'on', 't3', '.', 'uid', '=', 't1', '.', 'airline', 'where', 't2', '.', 'city', '=', 'value', 'and', 't3', '.', 'airline', '=', 'value']",
    "question": "How many United Airlines flights go to City 'Aberdeen'?",
    "question_th": "มีเที่ยวบินของ United Airlines ไปยังเมือง 'อเบอร์ดีน' กี่เที่ยว?",
    "question_toks": "['How', 'many', 'United', 'Airlines', 'flights', 'go', 'to', 'City', \"'Aberdeen\", \"'\", '?']",
    "sql": "{'from': {'table_units': [['table_unit', 2], ['table_unit', 1], ['table_unit', 0]], 'conds': [[False, 2, [0, [0, 13, False], None], [0, 6, False], None], 'and', [False, 2, [0, [0, 1, False], None], [0, 10, False], None]]}, 'select': [False, [[3, [0, [0, 0, False], None]]]], 'where': [[False, 2, [0, [0, 5, False], None], '\"Aberdeen\"', None], 'and', [False, 2, [0, [0, 2, False], None], '\"United Airlines\"', None]], 'groupBy': [], 'having': [], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "flight_2",
    "query": "SELECT count(*) FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.DestAirport  =  T2.AirportCode JOIN AIRLINES AS T3 ON T3.uid  =  T1.Airline WHERE T2.City  =  \"Aberdeen\" AND T3.Airline  =  \"United Airlines\"",
    "query_toks": "['SELECT', 'count', '(', '*', ')', 'FROM', 'FLIGHTS', 'AS', 'T1', 'JOIN', 'AIRPORTS', 'AS', 'T2', 'ON', 'T1.DestAirport', '=', 'T2.AirportCode', 'JOIN', 'AIRLINES', 'AS', 'T3', 'ON', 'T3.uid', '=', 'T1.Airline', 'WHERE', 'T2.City', '=', '``', 'Aberdeen', \"''\", 'AND', 'T3.Airline', '=', '``', 'United', 'Airlines', \"''\"]",
    "query_toks_no_value": "['select', 'count', '(', '*', ')', 'from', 'flights', 'as', 't1', 'join', 'airports', 'as', 't2', 'on', 't1', '.', 'destairport', '=', 't2', '.', 'airportcode', 'join', 'airlines', 'as', 't3', 'on', 't3', '.', 'uid', '=', 't1', '.', 'airline', 'where', 't2', '.', 'city', '=', 'value', 'and', 't3', '.', 'airline', '=', 'value']",
    "question": "Count the number of United Airlines flights that arrive in Aberdeen.",
    "question_th": "นับจำนวนเที่ยวบินของ United Airlines ที่มาถึงอเบอร์ดีน",
    "question_toks": "['Count', 'the', 'number', 'of', 'United', 'Airlines', 'flights', 'that', 'arrive', 'in', 'Aberdeen', '.']",
    "sql": "{'from': {'table_units': [['table_unit', 2], ['table_unit', 1], ['table_unit', 0]], 'conds': [[False, 2, [0, [0, 13, False], None], [0, 6, False], None], 'and', [False, 2, [0, [0, 1, False], None], [0, 10, False], None]]}, 'select': [False, [[3, [0, [0, 0, False], None]]]], 'where': [[False, 2, [0, [0, 5, False], None], '\"Aberdeen\"', None], 'and', [False, 2, [0, [0, 2, False], None], '\"United Airlines\"', None]], 'groupBy': [], 'having': [], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "flight_2",
    "query": "SELECT T1.City FROM AIRPORTS AS T1 JOIN FLIGHTS AS T2 ON T1.AirportCode  =  T2.DestAirport GROUP BY T1.City ORDER BY count(*) DESC LIMIT 1",
    "query_toks": "['SELECT', 'T1.City', 'FROM', 'AIRPORTS', 'AS', 'T1', 'JOIN', 'FLIGHTS', 'AS', 'T2', 'ON', 'T1.AirportCode', '=', 'T2.DestAirport', 'GROUP', 'BY', 'T1.City', 'ORDER', 'BY', 'count', '(', '*', ')', 'DESC', 'LIMIT', '1']",
    "query_toks_no_value": "['select', 't1', '.', 'city', 'from', 'airports', 'as', 't1', 'join', 'flights', 'as', 't2', 'on', 't1', '.', 'airportcode', '=', 't2', '.', 'destairport', 'group', 'by', 't1', '.', 'city', 'order', 'by', 'count', '(', '*', ')', 'desc', 'limit', 'value']",
    "question": "Which city has most number of arriving flights?",
    "question_th": "เมืองใดมีเที่ยวบินขาเข้ามากที่สุด",
    "question_toks": "['Which', 'city', 'has', 'most', 'number', 'of', 'arriving', 'flights', '?']",
    "sql": "{'from': {'table_units': [['table_unit', 1], ['table_unit', 2]], 'conds': [[False, 2, [0, [0, 6, False], None], [0, 13, False], None]]}, 'select': [False, [[0, [0, [0, 5, False], None]]]], 'where': [], 'groupBy': [[0, 5, False]], 'having': [], 'orderBy': ['desc', [[0, [3, 0, False], None]]], 'limit': 1, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "flight_2",
    "query": "SELECT T1.City FROM AIRPORTS AS T1 JOIN FLIGHTS AS T2 ON T1.AirportCode  =  T2.DestAirport GROUP BY T1.City ORDER BY count(*) DESC LIMIT 1",
    "query_toks": "['SELECT', 'T1.City', 'FROM', 'AIRPORTS', 'AS', 'T1', 'JOIN', 'FLIGHTS', 'AS', 'T2', 'ON', 'T1.AirportCode', '=', 'T2.DestAirport', 'GROUP', 'BY', 'T1.City', 'ORDER', 'BY', 'count', '(', '*', ')', 'DESC', 'LIMIT', '1']",
    "query_toks_no_value": "['select', 't1', '.', 'city', 'from', 'airports', 'as', 't1', 'join', 'flights', 'as', 't2', 'on', 't1', '.', 'airportcode', '=', 't2', '.', 'destairport', 'group', 'by', 't1', '.', 'city', 'order', 'by', 'count', '(', '*', ')', 'desc', 'limit', 'value']",
    "question": "Which city has the most frequent destination airport?",
    "question_th": "เมืองใดมีสนามบินปลายทางบ่อยที่สุด?",
    "question_toks": "['Which', 'city', 'has', 'the', 'most', 'frequent', 'destination', 'airport', '?']",
    "sql": "{'from': {'table_units': [['table_unit', 1], ['table_unit', 2]], 'conds': [[False, 2, [0, [0, 6, False], None], [0, 13, False], None]]}, 'select': [False, [[0, [0, [0, 5, False], None]]]], 'where': [], 'groupBy': [[0, 5, False]], 'having': [], 'orderBy': ['desc', [[0, [3, 0, False], None]]], 'limit': 1, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "flight_2",
    "query": "SELECT T1.City FROM AIRPORTS AS T1 JOIN FLIGHTS AS T2 ON T1.AirportCode  =  T2.SourceAirport GROUP BY T1.City ORDER BY count(*) DESC LIMIT 1",
    "query_toks": "['SELECT', 'T1.City', 'FROM', 'AIRPORTS', 'AS', 'T1', 'JOIN', 'FLIGHTS', 'AS', 'T2', 'ON', 'T1.AirportCode', '=', 'T2.SourceAirport', 'GROUP', 'BY', 'T1.City', 'ORDER', 'BY', 'count', '(', '*', ')', 'DESC', 'LIMIT', '1']",
    "query_toks_no_value": "['select', 't1', '.', 'city', 'from', 'airports', 'as', 't1', 'join', 'flights', 'as', 't2', 'on', 't1', '.', 'airportcode', '=', 't2', '.', 'sourceairport', 'group', 'by', 't1', '.', 'city', 'order', 'by', 'count', '(', '*', ')', 'desc', 'limit', 'value']",
    "question": "Which city has most number of departing flights?",
    "question_th": "เมืองใดมีเที่ยวบินขาออกมากที่สุด",
    "question_toks": "['Which', 'city', 'has', 'most', 'number', 'of', 'departing', 'flights', '?']",
    "sql": "{'from': {'table_units': [['table_unit', 1], ['table_unit', 2]], 'conds': [[False, 2, [0, [0, 6, False], None], [0, 12, False], None]]}, 'select': [False, [[0, [0, [0, 5, False], None]]]], 'where': [], 'groupBy': [[0, 5, False]], 'having': [], 'orderBy': ['desc', [[0, [3, 0, False], None]]], 'limit': 1, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "flight_2",
    "query": "SELECT T1.City FROM AIRPORTS AS T1 JOIN FLIGHTS AS T2 ON T1.AirportCode  =  T2.SourceAirport GROUP BY T1.City ORDER BY count(*) DESC LIMIT 1",
    "query_toks": "['SELECT', 'T1.City', 'FROM', 'AIRPORTS', 'AS', 'T1', 'JOIN', 'FLIGHTS', 'AS', 'T2', 'ON', 'T1.AirportCode', '=', 'T2.SourceAirport', 'GROUP', 'BY', 'T1.City', 'ORDER', 'BY', 'count', '(', '*', ')', 'DESC', 'LIMIT', '1']",
    "query_toks_no_value": "['select', 't1', '.', 'city', 'from', 'airports', 'as', 't1', 'join', 'flights', 'as', 't2', 'on', 't1', '.', 'airportcode', '=', 't2', '.', 'sourceairport', 'group', 'by', 't1', '.', 'city', 'order', 'by', 'count', '(', '*', ')', 'desc', 'limit', 'value']",
    "question": "Which city is the most frequent source airport?",
    "question_th": "เมืองใดคือสนามบินต้นทางที่ไปบ่อยที่สุด?",
    "question_toks": "['Which', 'city', 'is', 'the', 'most', 'frequent', 'source', 'airport', '?']",
    "sql": "{'from': {'table_units': [['table_unit', 1], ['table_unit', 2]], 'conds': [[False, 2, [0, [0, 6, False], None], [0, 12, False], None]]}, 'select': [False, [[0, [0, [0, 5, False], None]]]], 'where': [], 'groupBy': [[0, 5, False]], 'having': [], 'orderBy': ['desc', [[0, [3, 0, False], None]]], 'limit': 1, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "flight_2",
    "query": "SELECT T1.AirportCode FROM AIRPORTS AS T1 JOIN FLIGHTS AS T2 ON T1.AirportCode  =  T2.DestAirport OR T1.AirportCode  =  T2.SourceAirport GROUP BY T1.AirportCode ORDER BY count(*) DESC LIMIT 1",
    "query_toks": "['SELECT', 'T1.AirportCode', 'FROM', 'AIRPORTS', 'AS', 'T1', 'JOIN', 'FLIGHTS', 'AS', 'T2', 'ON', 'T1.AirportCode', '=', 'T2.DestAirport', 'OR', 'T1.AirportCode', '=', 'T2.SourceAirport', 'GROUP', 'BY', 'T1.AirportCode', 'ORDER', 'BY', 'count', '(', '*', ')', 'DESC', 'LIMIT', '1']",
    "query_toks_no_value": "['select', 't1', '.', 'airportcode', 'from', 'airports', 'as', 't1', 'join', 'flights', 'as', 't2', 'on', 't1', '.', 'airportcode', '=', 't2', '.', 'destairport', 'or', 't1', '.', 'airportcode', '=', 't2', '.', 'sourceairport', 'group', 'by', 't1', '.', 'airportcode', 'order', 'by', 'count', '(', '*', ')', 'desc', 'limit', 'value']",
    "question": "What is the code of airport that has the highest number of flights?",
    "question_th": "รหัสสนามบินที่มีจำนวนเที่ยวบินมากที่สุดคือข้อใด",
    "question_toks": "['What', 'is', 'the', 'code', 'of', 'airport', 'that', 'has', 'the', 'highest', 'number', 'of', 'flights', '?']",
    "sql": "{'from': {'table_units': [['table_unit', 1], ['table_unit', 2]], 'conds': [[False, 2, [0, [0, 6, False], None], [0, 13, False], None]]}, 'select': [False, [[0, [0, [0, 6, False], None]]]], 'where': [], 'groupBy': [[0, 6, False]], 'having': [], 'orderBy': ['desc', [[0, [3, 0, False], None]]], 'limit': 1, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "flight_2",
    "query": "SELECT T1.AirportCode FROM AIRPORTS AS T1 JOIN FLIGHTS AS T2 ON T1.AirportCode  =  T2.DestAirport OR T1.AirportCode  =  T2.SourceAirport GROUP BY T1.AirportCode ORDER BY count(*) DESC LIMIT 1",
    "query_toks": "['SELECT', 'T1.AirportCode', 'FROM', 'AIRPORTS', 'AS', 'T1', 'JOIN', 'FLIGHTS', 'AS', 'T2', 'ON', 'T1.AirportCode', '=', 'T2.DestAirport', 'OR', 'T1.AirportCode', '=', 'T2.SourceAirport', 'GROUP', 'BY', 'T1.AirportCode', 'ORDER', 'BY', 'count', '(', '*', ')', 'DESC', 'LIMIT', '1']",
    "query_toks_no_value": "['select', 't1', '.', 'airportcode', 'from', 'airports', 'as', 't1', 'join', 'flights', 'as', 't2', 'on', 't1', '.', 'airportcode', '=', 't2', '.', 'destairport', 'or', 't1', '.', 'airportcode', '=', 't2', '.', 'sourceairport', 'group', 'by', 't1', '.', 'airportcode', 'order', 'by', 'count', '(', '*', ')', 'desc', 'limit', 'value']",
    "question": "What is the airport code of the airport with the most flights?",
    "question_th": "รหัสสนามบินของสนามบินที่มีเที่ยวบินมากที่สุดคืออะไร?",
    "question_toks": "['What', 'is', 'the', 'airport', 'code', 'of', 'the', 'airport', 'with', 'the', 'most', 'flights', '?']",
    "sql": "{'from': {'table_units': [['table_unit', 1], ['table_unit', 2]], 'conds': [[False, 2, [0, [0, 6, False], None], [0, 13, False], None]]}, 'select': [False, [[0, [0, [0, 6, False], None]]]], 'where': [], 'groupBy': [[0, 6, False]], 'having': [], 'orderBy': ['desc', [[0, [3, 0, False], None]]], 'limit': 1, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "flight_2",
    "query": "SELECT T1.AirportCode FROM AIRPORTS AS T1 JOIN FLIGHTS AS T2 ON T1.AirportCode  =  T2.DestAirport OR T1.AirportCode  =  T2.SourceAirport GROUP BY T1.AirportCode ORDER BY count(*) LIMIT 1",
    "query_toks": "['SELECT', 'T1.AirportCode', 'FROM', 'AIRPORTS', 'AS', 'T1', 'JOIN', 'FLIGHTS', 'AS', 'T2', 'ON', 'T1.AirportCode', '=', 'T2.DestAirport', 'OR', 'T1.AirportCode', '=', 'T2.SourceAirport', 'GROUP', 'BY', 'T1.AirportCode', 'ORDER', 'BY', 'count', '(', '*', ')', 'LIMIT', '1']",
    "query_toks_no_value": "['select', 't1', '.', 'airportcode', 'from', 'airports', 'as', 't1', 'join', 'flights', 'as', 't2', 'on', 't1', '.', 'airportcode', '=', 't2', '.', 'destairport', 'or', 't1', '.', 'airportcode', '=', 't2', '.', 'sourceairport', 'group', 'by', 't1', '.', 'airportcode', 'order', 'by', 'count', '(', '*', ')', 'limit', 'value']",
    "question": "What is the code of airport that has fewest number of flights?",
    "question_th": "รหัสสนามบินที่มีจำนวนเที่ยวบินน้อยที่สุดคือข้อใด",
    "question_toks": "['What', 'is', 'the', 'code', 'of', 'airport', 'that', 'has', 'fewest', 'number', 'of', 'flights', '?']",
    "sql": "{'from': {'table_units': [['table_unit', 1], ['table_unit', 2]], 'conds': [[False, 2, [0, [0, 6, False], None], [0, 13, False], None]]}, 'select': [False, [[0, [0, [0, 6, False], None]]]], 'where': [], 'groupBy': [[0, 6, False]], 'having': [], 'orderBy': ['asc', [[0, [3, 0, False], None]]], 'limit': 1, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "flight_2",
    "query": "SELECT T1.AirportCode FROM AIRPORTS AS T1 JOIN FLIGHTS AS T2 ON T1.AirportCode  =  T2.DestAirport OR T1.AirportCode  =  T2.SourceAirport GROUP BY T1.AirportCode ORDER BY count(*) LIMIT 1",
    "query_toks": "['SELECT', 'T1.AirportCode', 'FROM', 'AIRPORTS', 'AS', 'T1', 'JOIN', 'FLIGHTS', 'AS', 'T2', 'ON', 'T1.AirportCode', '=', 'T2.DestAirport', 'OR', 'T1.AirportCode', '=', 'T2.SourceAirport', 'GROUP', 'BY', 'T1.AirportCode', 'ORDER', 'BY', 'count', '(', '*', ')', 'LIMIT', '1']",
    "query_toks_no_value": "['select', 't1', '.', 'airportcode', 'from', 'airports', 'as', 't1', 'join', 'flights', 'as', 't2', 'on', 't1', '.', 'airportcode', '=', 't2', '.', 'destairport', 'or', 't1', '.', 'airportcode', '=', 't2', '.', 'sourceairport', 'group', 'by', 't1', '.', 'airportcode', 'order', 'by', 'count', '(', '*', ')', 'limit', 'value']",
    "question": "Give the code of the airport with the least flights.",
    "question_th": "ระบุรหัสสนามบินที่มีเที่ยวบินน้อยที่สุด",
    "question_toks": "['Give', 'the', 'code', 'of', 'the', 'airport', 'with', 'the', 'least', 'flights', '.']",
    "sql": "{'from': {'table_units': [['table_unit', 1], ['table_unit', 2]], 'conds': [[False, 2, [0, [0, 6, False], None], [0, 13, False], None]]}, 'select': [False, [[0, [0, [0, 6, False], None]]]], 'where': [], 'groupBy': [[0, 6, False]], 'having': [], 'orderBy': ['asc', [[0, [3, 0, False], None]]], 'limit': 1, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "flight_2",
    "query": "SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline GROUP BY T1.Airline ORDER BY count(*) DESC LIMIT 1",
    "query_toks": "['SELECT', 'T1.Airline', 'FROM', 'AIRLINES', 'AS', 'T1', 'JOIN', 'FLIGHTS', 'AS', 'T2', 'ON', 'T1.uid', '=', 'T2.Airline', 'GROUP', 'BY', 'T1.Airline', 'ORDER', 'BY', 'count', '(', '*', ')', 'DESC', 'LIMIT', '1']",
    "query_toks_no_value": "['select', 't1', '.', 'airline', 'from', 'airlines', 'as', 't1', 'join', 'flights', 'as', 't2', 'on', 't1', '.', 'uid', '=', 't2', '.', 'airline', 'group', 'by', 't1', '.', 'airline', 'order', 'by', 'count', '(', '*', ')', 'desc', 'limit', 'value']",
    "question": "Which airline has most number of flights?",
    "question_th": "สายการบินใดมีจำนวนเที่ยวบินมากที่สุด?",
    "question_toks": "['Which', 'airline', 'has', 'most', 'number', 'of', 'flights', '?']",
    "sql": "{'from': {'table_units': [['table_unit', 0], ['table_unit', 2]], 'conds': [[False, 2, [0, [0, 1, False], None], [0, 10, False], None]]}, 'select': [False, [[0, [0, [0, 2, False], None]]]], 'where': [], 'groupBy': [[0, 2, False]], 'having': [], 'orderBy': ['desc', [[0, [3, 0, False], None]]], 'limit': 1, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "flight_2",
    "query": "SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline GROUP BY T1.Airline ORDER BY count(*) DESC LIMIT 1",
    "query_toks": "['SELECT', 'T1.Airline', 'FROM', 'AIRLINES', 'AS', 'T1', 'JOIN', 'FLIGHTS', 'AS', 'T2', 'ON', 'T1.uid', '=', 'T2.Airline', 'GROUP', 'BY', 'T1.Airline', 'ORDER', 'BY', 'count', '(', '*', ')', 'DESC', 'LIMIT', '1']",
    "query_toks_no_value": "['select', 't1', '.', 'airline', 'from', 'airlines', 'as', 't1', 'join', 'flights', 'as', 't2', 'on', 't1', '.', 'uid', '=', 't2', '.', 'airline', 'group', 'by', 't1', '.', 'airline', 'order', 'by', 'count', '(', '*', ')', 'desc', 'limit', 'value']",
    "question": "What airline serves the most flights?",
    "question_th": "สายการบินใดให้บริการเที่ยวบินมากที่สุด?",
    "question_toks": "['What', 'airline', 'serves', 'the', 'most', 'flights', '?']",
    "sql": "{'from': {'table_units': [['table_unit', 0], ['table_unit', 2]], 'conds': [[False, 2, [0, [0, 1, False], None], [0, 10, False], None]]}, 'select': [False, [[0, [0, [0, 2, False], None]]]], 'where': [], 'groupBy': [[0, 2, False]], 'having': [], 'orderBy': ['desc', [[0, [3, 0, False], None]]], 'limit': 1, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "flight_2",
    "query": "SELECT T1.Abbreviation ,  T1.Country FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline GROUP BY T1.Airline ORDER BY count(*) LIMIT 1",
    "query_toks": "['SELECT', 'T1.Abbreviation', ',', 'T1.Country', 'FROM', 'AIRLINES', 'AS', 'T1', 'JOIN', 'FLIGHTS', 'AS', 'T2', 'ON', 'T1.uid', '=', 'T2.Airline', 'GROUP', 'BY', 'T1.Airline', 'ORDER', 'BY', 'count', '(', '*', ')', 'LIMIT', '1']",
    "query_toks_no_value": "['select', 't1', '.', 'abbreviation', ',', 't1', '.', 'country', 'from', 'airlines', 'as', 't1', 'join', 'flights', 'as', 't2', 'on', 't1', '.', 'uid', '=', 't2', '.', 'airline', 'group', 'by', 't1', '.', 'airline', 'order', 'by', 'count', '(', '*', ')', 'limit', 'value']",
    "question": "Find the abbreviation and country of the airline that has fewest number of flights?",
    "question_th": "ค้นหาชื่อย่อและประเทศของสายการบินที่มีจำนวนเที่ยวบินน้อยที่สุด?",
    "question_toks": "['Find', 'the', 'abbreviation', 'and', 'country', 'of', 'the', 'airline', 'that', 'has', 'fewest', 'number', 'of', 'flights', '?']",
    "sql": "{'from': {'table_units': [['table_unit', 0], ['table_unit', 2]], 'conds': [[False, 2, [0, [0, 1, False], None], [0, 10, False], None]]}, 'select': [False, [[0, [0, [0, 3, False], None]], [0, [0, [0, 4, False], None]]]], 'where': [], 'groupBy': [[0, 2, False]], 'having': [], 'orderBy': ['asc', [[0, [3, 0, False], None]]], 'limit': 1, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "flight_2",
    "query": "SELECT T1.Abbreviation ,  T1.Country FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline GROUP BY T1.Airline ORDER BY count(*) LIMIT 1",
    "query_toks": "['SELECT', 'T1.Abbreviation', ',', 'T1.Country', 'FROM', 'AIRLINES', 'AS', 'T1', 'JOIN', 'FLIGHTS', 'AS', 'T2', 'ON', 'T1.uid', '=', 'T2.Airline', 'GROUP', 'BY', 'T1.Airline', 'ORDER', 'BY', 'count', '(', '*', ')', 'LIMIT', '1']",
    "query_toks_no_value": "['select', 't1', '.', 'abbreviation', ',', 't1', '.', 'country', 'from', 'airlines', 'as', 't1', 'join', 'flights', 'as', 't2', 'on', 't1', '.', 'uid', '=', 't2', '.', 'airline', 'group', 'by', 't1', '.', 'airline', 'order', 'by', 'count', '(', '*', ')', 'limit', 'value']",
    "question": "What is the abbreviation of the airilne has the fewest flights and what country is it in?",
    "question_th": "airilne มีเที่ยวบินน้อยที่สุด อักษรย่อว่าอะไร และอยู่ประเทศอะไร?",
    "question_toks": "['What', 'is', 'the', 'abbreviation', 'of', 'the', 'airilne', 'has', 'the', 'fewest', 'flights', 'and', 'what', 'country', 'is', 'it', 'in', '?']",
    "sql": "{'from': {'table_units': [['table_unit', 0], ['table_unit', 2]], 'conds': [[False, 2, [0, [0, 1, False], None], [0, 10, False], None]]}, 'select': [False, [[0, [0, [0, 3, False], None]], [0, [0, [0, 4, False], None]]]], 'where': [], 'groupBy': [[0, 2, False]], 'having': [], 'orderBy': ['asc', [[0, [3, 0, False], None]]], 'limit': 1, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "flight_2",
    "query": "SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.SourceAirport  =  \"AHD\"",
    "query_toks": "['SELECT', 'T1.Airline', 'FROM', 'AIRLINES', 'AS', 'T1', 'JOIN', 'FLIGHTS', 'AS', 'T2', 'ON', 'T1.uid', '=', 'T2.Airline', 'WHERE', 'T2.SourceAirport', '=', '``', 'AHD', \"''\"]",
    "query_toks_no_value": "['select', 't1', '.', 'airline', 'from', 'airlines', 'as', 't1', 'join', 'flights', 'as', 't2', 'on', 't1', '.', 'uid', '=', 't2', '.', 'airline', 'where', 't2', '.', 'sourceairport', '=', 'value']",
    "question": "What are airlines that have some flight departing from airport 'AHD'?",
    "question_th": "สายการบินใดบ้างที่มีเที่ยวบินที่ออกเดินทางจากสนามบิน 'AHD'?",
    "question_toks": "['What', 'are', 'airlines', 'that', 'have', 'some', 'flight', 'departing', 'from', 'airport', \"'AHD\", \"'\", '?']",
    "sql": "{'from': {'table_units': [['table_unit', 0], ['table_unit', 2]], 'conds': [[False, 2, [0, [0, 1, False], None], [0, 10, False], None]]}, 'select': [False, [[0, [0, [0, 2, False], None]]]], 'where': [[False, 2, [0, [0, 12, False], None], '\"AHD\"', None]], 'groupBy': [], 'having': [], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "flight_2",
    "query": "SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.SourceAirport  =  \"AHD\"",
    "query_toks": "['SELECT', 'T1.Airline', 'FROM', 'AIRLINES', 'AS', 'T1', 'JOIN', 'FLIGHTS', 'AS', 'T2', 'ON', 'T1.uid', '=', 'T2.Airline', 'WHERE', 'T2.SourceAirport', '=', '``', 'AHD', \"''\"]",
    "query_toks_no_value": "['select', 't1', '.', 'airline', 'from', 'airlines', 'as', 't1', 'join', 'flights', 'as', 't2', 'on', 't1', '.', 'uid', '=', 't2', '.', 'airline', 'where', 't2', '.', 'sourceairport', '=', 'value']",
    "question": "Which airlines have a flight with source airport AHD?",
    "question_th": "สายการบินใดบ้างที่มีเที่ยวบินที่มีสนามบินต้นทาง AHD?",
    "question_toks": "['Which', 'airlines', 'have', 'a', 'flight', 'with', 'source', 'airport', 'AHD', '?']",
    "sql": "{'from': {'table_units': [['table_unit', 0], ['table_unit', 2]], 'conds': [[False, 2, [0, [0, 1, False], None], [0, 10, False], None]]}, 'select': [False, [[0, [0, [0, 2, False], None]]]], 'where': [[False, 2, [0, [0, 12, False], None], '\"AHD\"', None]], 'groupBy': [], 'having': [], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "flight_2",
    "query": "SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.DestAirport  =  \"AHD\"",
    "query_toks": "['SELECT', 'T1.Airline', 'FROM', 'AIRLINES', 'AS', 'T1', 'JOIN', 'FLIGHTS', 'AS', 'T2', 'ON', 'T1.uid', '=', 'T2.Airline', 'WHERE', 'T2.DestAirport', '=', '``', 'AHD', \"''\"]",
    "query_toks_no_value": "['select', 't1', '.', 'airline', 'from', 'airlines', 'as', 't1', 'join', 'flights', 'as', 't2', 'on', 't1', '.', 'uid', '=', 't2', '.', 'airline', 'where', 't2', '.', 'destairport', '=', 'value']",
    "question": "What are airlines that have flights arriving at airport 'AHD'?",
    "question_th": "สายการบินใดบ้างที่มีเที่ยวบินมาถึงสนามบิน 'AHD'?",
    "question_toks": "['What', 'are', 'airlines', 'that', 'have', 'flights', 'arriving', 'at', 'airport', \"'AHD\", \"'\", '?']",
    "sql": "{'from': {'table_units': [['table_unit', 0], ['table_unit', 2]], 'conds': [[False, 2, [0, [0, 1, False], None], [0, 10, False], None]]}, 'select': [False, [[0, [0, [0, 2, False], None]]]], 'where': [[False, 2, [0, [0, 13, False], None], '\"AHD\"', None]], 'groupBy': [], 'having': [], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "flight_2",
    "query": "SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.DestAirport  =  \"AHD\"",
    "query_toks": "['SELECT', 'T1.Airline', 'FROM', 'AIRLINES', 'AS', 'T1', 'JOIN', 'FLIGHTS', 'AS', 'T2', 'ON', 'T1.uid', '=', 'T2.Airline', 'WHERE', 'T2.DestAirport', '=', '``', 'AHD', \"''\"]",
    "query_toks_no_value": "['select', 't1', '.', 'airline', 'from', 'airlines', 'as', 't1', 'join', 'flights', 'as', 't2', 'on', 't1', '.', 'uid', '=', 't2', '.', 'airline', 'where', 't2', '.', 'destairport', '=', 'value']",
    "question": "Which airlines have a flight with destination airport AHD?",
    "question_th": "สายการบินใดบ้างที่มีเที่ยวบินที่มีสนามบินปลายทาง AHD?",
    "question_toks": "['Which', 'airlines', 'have', 'a', 'flight', 'with', 'destination', 'airport', 'AHD', '?']",
    "sql": "{'from': {'table_units': [['table_unit', 0], ['table_unit', 2]], 'conds': [[False, 2, [0, [0, 1, False], None], [0, 10, False], None]]}, 'select': [False, [[0, [0, [0, 2, False], None]]]], 'where': [[False, 2, [0, [0, 13, False], None], '\"AHD\"', None]], 'groupBy': [], 'having': [], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "flight_2",
    "query": "SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.SourceAirport  =  \"APG\" INTERSECT SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.SourceAirport  =  \"CVO\"",
    "query_toks": "['SELECT', 'T1.Airline', 'FROM', 'AIRLINES', 'AS', 'T1', 'JOIN', 'FLIGHTS', 'AS', 'T2', 'ON', 'T1.uid', '=', 'T2.Airline', 'WHERE', 'T2.SourceAirport', '=', '``', 'APG', \"''\", 'INTERSECT', 'SELECT', 'T1.Airline', 'FROM', 'AIRLINES', 'AS', 'T1', 'JOIN', 'FLIGHTS', 'AS', 'T2', 'ON', 'T1.uid', '=', 'T2.Airline', 'WHERE', 'T2.SourceAirport', '=', '``', 'CVO', \"''\"]",
    "query_toks_no_value": "['select', 't1', '.', 'airline', 'from', 'airlines', 'as', 't1', 'join', 'flights', 'as', 't2', 'on', 't1', '.', 'uid', '=', 't2', '.', 'airline', 'where', 't2', '.', 'sourceairport', '=', 'value', 'intersect', 'select', 't1', '.', 'airline', 'from', 'airlines', 'as', 't1', 'join', 'flights', 'as', 't2', 'on', 't1', '.', 'uid', '=', 't2', '.', 'airline', 'where', 't2', '.', 'sourceairport', '=', 'value']",
    "question": "Find all airlines that have flights from both airports 'APG' and 'CVO'.",
    "question_th": "ค้นหาสายการบินทั้งหมดที่มีเที่ยวบินจากทั้งสนามบิน 'APG' และ 'CVO'",
    "question_toks": "['Find', 'all', 'airlines', 'that', 'have', 'flights', 'from', 'both', 'airports', \"'APG\", \"'\", 'and', \"'CVO\", \"'\", '.']",
    "sql": "{'from': {'table_units': [['table_unit', 0], ['table_unit', 2]], 'conds': [[False, 2, [0, [0, 1, False], None], [0, 10, False], None]]}, 'select': [False, [[0, [0, [0, 2, False], None]]]], 'where': [[False, 2, [0, [0, 12, False], None], '\"APG\"', None]], 'groupBy': [], 'having': [], 'orderBy': [], 'limit': None, 'intersect': {'from': {'table_units': [['table_unit', 0], ['table_unit', 2]], 'conds': [[False, 2, [0, [0, 1, False], None], [0, 10, False], None]]}, 'select': [False, [[0, [0, [0, 2, False], None]]]], 'where': [[False, 2, [0, [0, 12, False], None], '\"CVO\"', None]], 'groupBy': [], 'having': [], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}, 'union': None, 'except': None}"
  },
  {
    "db_id": "flight_2",
    "query": "SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.SourceAirport  =  \"APG\" INTERSECT SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.SourceAirport  =  \"CVO\"",
    "query_toks": "['SELECT', 'T1.Airline', 'FROM', 'AIRLINES', 'AS', 'T1', 'JOIN', 'FLIGHTS', 'AS', 'T2', 'ON', 'T1.uid', '=', 'T2.Airline', 'WHERE', 'T2.SourceAirport', '=', '``', 'APG', \"''\", 'INTERSECT', 'SELECT', 'T1.Airline', 'FROM', 'AIRLINES', 'AS', 'T1', 'JOIN', 'FLIGHTS', 'AS', 'T2', 'ON', 'T1.uid', '=', 'T2.Airline', 'WHERE', 'T2.SourceAirport', '=', '``', 'CVO', \"''\"]",
    "query_toks_no_value": "['select', 't1', '.', 'airline', 'from', 'airlines', 'as', 't1', 'join', 'flights', 'as', 't2', 'on', 't1', '.', 'uid', '=', 't2', '.', 'airline', 'where', 't2', '.', 'sourceairport', '=', 'value', 'intersect', 'select', 't1', '.', 'airline', 'from', 'airlines', 'as', 't1', 'join', 'flights', 'as', 't2', 'on', 't1', '.', 'uid', '=', 't2', '.', 'airline', 'where', 't2', '.', 'sourceairport', '=', 'value']",
    "question": "Which airlines have departing flights from both APG and CVO airports?",
    "question_th": "สายการบินใดบ้างที่มีเที่ยวบินออกจากทั้งสนามบิน APG และ CVO",
    "question_toks": "['Which', 'airlines', 'have', 'departing', 'flights', 'from', 'both', 'APG', 'and', 'CVO', 'airports', '?']",
    "sql": "{'from': {'table_units': [['table_unit', 0], ['table_unit', 2]], 'conds': [[False, 2, [0, [0, 1, False], None], [0, 10, False], None]]}, 'select': [False, [[0, [0, [0, 2, False], None]]]], 'where': [[False, 2, [0, [0, 12, False], None], '\"APG\"', None]], 'groupBy': [], 'having': [], 'orderBy': [], 'limit': None, 'intersect': {'from': {'table_units': [['table_unit', 0], ['table_unit', 2]], 'conds': [[False, 2, [0, [0, 1, False], None], [0, 10, False], None]]}, 'select': [False, [[0, [0, [0, 2, False], None]]]], 'where': [[False, 2, [0, [0, 12, False], None], '\"CVO\"', None]], 'groupBy': [], 'having': [], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}, 'union': None, 'except': None}"
  },
  {
    "db_id": "flight_2",
    "query": "SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.SourceAirport  =  \"CVO\" EXCEPT SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.SourceAirport  =  \"APG\"",
    "query_toks": "['SELECT', 'T1.Airline', 'FROM', 'AIRLINES', 'AS', 'T1', 'JOIN', 'FLIGHTS', 'AS', 'T2', 'ON', 'T1.uid', '=', 'T2.Airline', 'WHERE', 'T2.SourceAirport', '=', '``', 'CVO', \"''\", 'EXCEPT', 'SELECT', 'T1.Airline', 'FROM', 'AIRLINES', 'AS', 'T1', 'JOIN', 'FLIGHTS', 'AS', 'T2', 'ON', 'T1.uid', '=', 'T2.Airline', 'WHERE', 'T2.SourceAirport', '=', '``', 'APG', \"''\"]",
    "query_toks_no_value": "['select', 't1', '.', 'airline', 'from', 'airlines', 'as', 't1', 'join', 'flights', 'as', 't2', 'on', 't1', '.', 'uid', '=', 't2', '.', 'airline', 'where', 't2', '.', 'sourceairport', '=', 'value', 'except', 'select', 't1', '.', 'airline', 'from', 'airlines', 'as', 't1', 'join', 'flights', 'as', 't2', 'on', 't1', '.', 'uid', '=', 't2', '.', 'airline', 'where', 't2', '.', 'sourceairport', '=', 'value']",
    "question": "Find all airlines that have flights from airport 'CVO' but not from 'APG'.",
    "question_th": "ค้นหาสายการบินทั้งหมดที่มีเที่ยวบินจากสนามบิน 'CVO' แต่ไม่ใช่เที่ยวบินจาก 'APG'",
    "question_toks": "['Find', 'all', 'airlines', 'that', 'have', 'flights', 'from', 'airport', \"'CVO\", \"'\", 'but', 'not', 'from', \"'APG\", \"'\", '.']",
    "sql": "{'from': {'table_units': [['table_unit', 0], ['table_unit', 2]], 'conds': [[False, 2, [0, [0, 1, False], None], [0, 10, False], None]]}, 'select': [False, [[0, [0, [0, 2, False], None]]]], 'where': [[False, 2, [0, [0, 12, False], None], '\"CVO\"', None]], 'groupBy': [], 'having': [], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': {'from': {'table_units': [['table_unit', 0], ['table_unit', 2]], 'conds': [[False, 2, [0, [0, 1, False], None], [0, 10, False], None]]}, 'select': [False, [[0, [0, [0, 2, False], None]]]], 'where': [[False, 2, [0, [0, 12, False], None], '\"APG\"', None]], 'groupBy': [], 'having': [], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}}"
  },
  {
    "db_id": "flight_2",
    "query": "SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.SourceAirport  =  \"CVO\" EXCEPT SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.SourceAirport  =  \"APG\"",
    "query_toks": "['SELECT', 'T1.Airline', 'FROM', 'AIRLINES', 'AS', 'T1', 'JOIN', 'FLIGHTS', 'AS', 'T2', 'ON', 'T1.uid', '=', 'T2.Airline', 'WHERE', 'T2.SourceAirport', '=', '``', 'CVO', \"''\", 'EXCEPT', 'SELECT', 'T1.Airline', 'FROM', 'AIRLINES', 'AS', 'T1', 'JOIN', 'FLIGHTS', 'AS', 'T2', 'ON', 'T1.uid', '=', 'T2.Airline', 'WHERE', 'T2.SourceAirport', '=', '``', 'APG', \"''\"]",
    "query_toks_no_value": "['select', 't1', '.', 'airline', 'from', 'airlines', 'as', 't1', 'join', 'flights', 'as', 't2', 'on', 't1', '.', 'uid', '=', 't2', '.', 'airline', 'where', 't2', '.', 'sourceairport', '=', 'value', 'except', 'select', 't1', '.', 'airline', 'from', 'airlines', 'as', 't1', 'join', 'flights', 'as', 't2', 'on', 't1', '.', 'uid', '=', 't2', '.', 'airline', 'where', 't2', '.', 'sourceairport', '=', 'value']",
    "question": "Which airlines have departures from CVO but not from APG airports?",
    "question_th": "สายการบินใดบ้างที่ออกเดินทางจาก CVO แต่ไม่ได้ออกจากสนามบิน APG",
    "question_toks": "['Which', 'airlines', 'have', 'departures', 'from', 'CVO', 'but', 'not', 'from', 'APG', 'airports', '?']",
    "sql": "{'from': {'table_units': [['table_unit', 0], ['table_unit', 2]], 'conds': [[False, 2, [0, [0, 1, False], None], [0, 10, False], None]]}, 'select': [False, [[0, [0, [0, 2, False], None]]]], 'where': [[False, 2, [0, [0, 12, False], None], '\"CVO\"', None]], 'groupBy': [], 'having': [], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': {'from': {'table_units': [['table_unit', 0], ['table_unit', 2]], 'conds': [[False, 2, [0, [0, 1, False], None], [0, 10, False], None]]}, 'select': [False, [[0, [0, [0, 2, False], None]]]], 'where': [[False, 2, [0, [0, 12, False], None], '\"APG\"', None]], 'groupBy': [], 'having': [], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}}"
  },
  {
    "db_id": "flight_2",
    "query": "SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline GROUP BY T1.Airline HAVING count(*)  >  10",
    "query_toks": "['SELECT', 'T1.Airline', 'FROM', 'AIRLINES', 'AS', 'T1', 'JOIN', 'FLIGHTS', 'AS', 'T2', 'ON', 'T1.uid', '=', 'T2.Airline', 'GROUP', 'BY', 'T1.Airline', 'HAVING', 'count', '(', '*', ')', '>', '10']",
    "query_toks_no_value": "['select', 't1', '.', 'airline', 'from', 'airlines', 'as', 't1', 'join', 'flights', 'as', 't2', 'on', 't1', '.', 'uid', '=', 't2', '.', 'airline', 'group', 'by', 't1', '.', 'airline', 'having', 'count', '(', '*', ')', '>', 'value']",
    "question": "Find all airlines that have at least 10 flights.",
    "question_th": "ค้นหาสายการบินทั้งหมดที่มีอย่างน้อย 10 เที่ยวบิน",
    "question_toks": "['Find', 'all', 'airlines', 'that', 'have', 'at', 'least', '10', 'flights', '.']",
    "sql": "{'from': {'table_units': [['table_unit', 0], ['table_unit', 2]], 'conds': [[False, 2, [0, [0, 1, False], None], [0, 10, False], None]]}, 'select': [False, [[0, [0, [0, 2, False], None]]]], 'where': [], 'groupBy': [[0, 2, False]], 'having': [[False, 3, [0, [3, 0, False], None], 10.0, None]], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "flight_2",
    "query": "SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline GROUP BY T1.Airline HAVING count(*)  >  10",
    "query_toks": "['SELECT', 'T1.Airline', 'FROM', 'AIRLINES', 'AS', 'T1', 'JOIN', 'FLIGHTS', 'AS', 'T2', 'ON', 'T1.uid', '=', 'T2.Airline', 'GROUP', 'BY', 'T1.Airline', 'HAVING', 'count', '(', '*', ')', '>', '10']",
    "query_toks_no_value": "['select', 't1', '.', 'airline', 'from', 'airlines', 'as', 't1', 'join', 'flights', 'as', 't2', 'on', 't1', '.', 'uid', '=', 't2', '.', 'airline', 'group', 'by', 't1', '.', 'airline', 'having', 'count', '(', '*', ')', '>', 'value']",
    "question": "Which airlines have at least 10 flights?",
    "question_th": "สายการบินใดมีอย่างน้อย 10 เที่ยวบิน?",
    "question_toks": "['Which', 'airlines', 'have', 'at', 'least', '10', 'flights', '?']",
    "sql": "{'from': {'table_units': [['table_unit', 0], ['table_unit', 2]], 'conds': [[False, 2, [0, [0, 1, False], None], [0, 10, False], None]]}, 'select': [False, [[0, [0, [0, 2, False], None]]]], 'where': [], 'groupBy': [[0, 2, False]], 'having': [[False, 3, [0, [3, 0, False], None], 10.0, None]], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "flight_2",
    "query": "SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline GROUP BY T1.Airline HAVING count(*)  <  200",
    "query_toks": "['SELECT', 'T1.Airline', 'FROM', 'AIRLINES', 'AS', 'T1', 'JOIN', 'FLIGHTS', 'AS', 'T2', 'ON', 'T1.uid', '=', 'T2.Airline', 'GROUP', 'BY', 'T1.Airline', 'HAVING', 'count', '(', '*', ')', '<', '200']",
    "query_toks_no_value": "['select', 't1', '.', 'airline', 'from', 'airlines', 'as', 't1', 'join', 'flights', 'as', 't2', 'on', 't1', '.', 'uid', '=', 't2', '.', 'airline', 'group', 'by', 't1', '.', 'airline', 'having', 'count', '(', '*', ')', '<', 'value']",
    "question": "Find all airlines that have fewer than 200 flights.",
    "question_th": "ค้นหาสายการบินทั้งหมดที่มีเที่ยวบินน้อยกว่า 200 เที่ยวบิน",
    "question_toks": "['Find', 'all', 'airlines', 'that', 'have', 'fewer', 'than', '200', 'flights', '.']",
    "sql": "{'from': {'table_units': [['table_unit', 0], ['table_unit', 2]], 'conds': [[False, 2, [0, [0, 1, False], None], [0, 10, False], None]]}, 'select': [False, [[0, [0, [0, 2, False], None]]]], 'where': [], 'groupBy': [[0, 2, False]], 'having': [[False, 4, [0, [3, 0, False], None], 200.0, None]], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "flight_2",
    "query": "SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline GROUP BY T1.Airline HAVING count(*)  <  200",
    "query_toks": "['SELECT', 'T1.Airline', 'FROM', 'AIRLINES', 'AS', 'T1', 'JOIN', 'FLIGHTS', 'AS', 'T2', 'ON', 'T1.uid', '=', 'T2.Airline', 'GROUP', 'BY', 'T1.Airline', 'HAVING', 'count', '(', '*', ')', '<', '200']",
    "query_toks_no_value": "['select', 't1', '.', 'airline', 'from', 'airlines', 'as', 't1', 'join', 'flights', 'as', 't2', 'on', 't1', '.', 'uid', '=', 't2', '.', 'airline', 'group', 'by', 't1', '.', 'airline', 'having', 'count', '(', '*', ')', '<', 'value']",
    "question": "Which airlines have less than 200 flights?",
    "question_th": "สายการบินใดมีเที่ยวบินน้อยกว่า 200 เที่ยวบิน?",
    "question_toks": "['Which', 'airlines', 'have', 'less', 'than', '200', 'flights', '?']",
    "sql": "{'from': {'table_units': [['table_unit', 0], ['table_unit', 2]], 'conds': [[False, 2, [0, [0, 1, False], None], [0, 10, False], None]]}, 'select': [False, [[0, [0, [0, 2, False], None]]]], 'where': [], 'groupBy': [[0, 2, False]], 'having': [[False, 4, [0, [3, 0, False], None], 200.0, None]], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "flight_2",
    "query": "SELECT T1.FlightNo FROM FLIGHTS AS T1 JOIN AIRLINES AS T2 ON T2.uid  =  T1.Airline WHERE T2.Airline  =  \"United Airlines\"",
    "query_toks": "['SELECT', 'T1.FlightNo', 'FROM', 'FLIGHTS', 'AS', 'T1', 'JOIN', 'AIRLINES', 'AS', 'T2', 'ON', 'T2.uid', '=', 'T1.Airline', 'WHERE', 'T2.Airline', '=', '``', 'United', 'Airlines', \"''\"]",
    "query_toks_no_value": "['select', 't1', '.', 'flightno', 'from', 'flights', 'as', 't1', 'join', 'airlines', 'as', 't2', 'on', 't2', '.', 'uid', '=', 't1', '.', 'airline', 'where', 't2', '.', 'airline', '=', 'value']",
    "question": "What are flight numbers of Airline \"United Airlines\"?",
    "question_th": "หมายเลขเที่ยวบินของสายการบิน \"ยูไนเต็ดแอร์ไลน์\" คืออะไร?",
    "question_toks": "['What', 'are', 'flight', 'numbers', 'of', 'Airline', '``', 'United', 'Airlines', \"''\", '?']",
    "sql": "{'from': {'table_units': [['table_unit', 2], ['table_unit', 0]], 'conds': [[False, 2, [0, [0, 1, False], None], [0, 10, False], None]]}, 'select': [False, [[0, [0, [0, 11, False], None]]]], 'where': [[False, 2, [0, [0, 2, False], None], '\"United Airlines\"', None]], 'groupBy': [], 'having': [], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "flight_2",
    "query": "SELECT T1.FlightNo FROM FLIGHTS AS T1 JOIN AIRLINES AS T2 ON T2.uid  =  T1.Airline WHERE T2.Airline  =  \"United Airlines\"",
    "query_toks": "['SELECT', 'T1.FlightNo', 'FROM', 'FLIGHTS', 'AS', 'T1', 'JOIN', 'AIRLINES', 'AS', 'T2', 'ON', 'T2.uid', '=', 'T1.Airline', 'WHERE', 'T2.Airline', '=', '``', 'United', 'Airlines', \"''\"]",
    "query_toks_no_value": "['select', 't1', '.', 'flightno', 'from', 'flights', 'as', 't1', 'join', 'airlines', 'as', 't2', 'on', 't2', '.', 'uid', '=', 't1', '.', 'airline', 'where', 't2', '.', 'airline', '=', 'value']",
    "question": "Which flight numbers correspond to United Airlines flights?",
    "question_th": "หมายเลขเที่ยวบินใดที่สอดคล้องกับเที่ยวบินของ United Airlines",
    "question_toks": "['Which', 'flight', 'numbers', 'correspond', 'to', 'United', 'Airlines', 'flights', '?']",
    "sql": "{'from': {'table_units': [['table_unit', 2], ['table_unit', 0]], 'conds': [[False, 2, [0, [0, 1, False], None], [0, 10, False], None]]}, 'select': [False, [[0, [0, [0, 11, False], None]]]], 'where': [[False, 2, [0, [0, 2, False], None], '\"United Airlines\"', None]], 'groupBy': [], 'having': [], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "flight_2",
    "query": "SELECT FlightNo FROM FLIGHTS WHERE SourceAirport  =  \"APG\"",
    "query_toks": "['SELECT', 'FlightNo', 'FROM', 'FLIGHTS', 'WHERE', 'SourceAirport', '=', '``', 'APG', \"''\"]",
    "query_toks_no_value": "['select', 'flightno', 'from', 'flights', 'where', 'sourceairport', '=', 'value']",
    "question": "What are flight numbers of flights departing from Airport \"APG\"?",
    "question_th": "เที่ยวบินจำนวนเท่าใดที่ออกเดินทางจากสนามบิน \"APG\"",
    "question_toks": "['What', 'are', 'flight', 'numbers', 'of', 'flights', 'departing', 'from', 'Airport', '``', 'APG', \"''\", '?']",
    "sql": "{'from': {'table_units': [['table_unit', 2]], 'conds': []}, 'select': [False, [[0, [0, [0, 11, False], None]]]], 'where': [[False, 2, [0, [0, 12, False], None], '\"APG\"', None]], 'groupBy': [], 'having': [], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "flight_2",
    "query": "SELECT FlightNo FROM FLIGHTS WHERE SourceAirport  =  \"APG\"",
    "query_toks": "['SELECT', 'FlightNo', 'FROM', 'FLIGHTS', 'WHERE', 'SourceAirport', '=', '``', 'APG', \"''\"]",
    "query_toks_no_value": "['select', 'flightno', 'from', 'flights', 'where', 'sourceairport', '=', 'value']",
    "question": "Give the flight numbers of flights leaving from APG.",
    "question_th": "แจ้งหมายเลขเที่ยวบินของเที่ยวบินที่ออกจาก APG",
    "question_toks": "['Give', 'the', 'flight', 'numbers', 'of', 'flights', 'leaving', 'from', 'APG', '.']",
    "sql": "{'from': {'table_units': [['table_unit', 2]], 'conds': []}, 'select': [False, [[0, [0, [0, 11, False], None]]]], 'where': [[False, 2, [0, [0, 12, False], None], '\"APG\"', None]], 'groupBy': [], 'having': [], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "flight_2",
    "query": "SELECT FlightNo FROM FLIGHTS WHERE DestAirport  =  \"APG\"",
    "query_toks": "['SELECT', 'FlightNo', 'FROM', 'FLIGHTS', 'WHERE', 'DestAirport', '=', '``', 'APG', \"''\"]",
    "query_toks_no_value": "['select', 'flightno', 'from', 'flights', 'where', 'destairport', '=', 'value']",
    "question": "What are flight numbers of flights arriving at Airport \"APG\"?",
    "question_th": "เที่ยวบินที่มาถึงสนามบิน \"APG\" หมายเลขเที่ยวบินใด",
    "question_toks": "['What', 'are', 'flight', 'numbers', 'of', 'flights', 'arriving', 'at', 'Airport', '``', 'APG', \"''\", '?']",
    "sql": "{'from': {'table_units': [['table_unit', 2]], 'conds': []}, 'select': [False, [[0, [0, [0, 11, False], None]]]], 'where': [[False, 2, [0, [0, 13, False], None], '\"APG\"', None]], 'groupBy': [], 'having': [], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "flight_2",
    "query": "SELECT FlightNo FROM FLIGHTS WHERE DestAirport  =  \"APG\"",
    "query_toks": "['SELECT', 'FlightNo', 'FROM', 'FLIGHTS', 'WHERE', 'DestAirport', '=', '``', 'APG', \"''\"]",
    "query_toks_no_value": "['select', 'flightno', 'from', 'flights', 'where', 'destairport', '=', 'value']",
    "question": "Give the flight numbers of flights landing at APG.",
    "question_th": "แจ้งหมายเลขเที่ยวบินของเที่ยวบินที่ลงจอดที่ APG",
    "question_toks": "['Give', 'the', 'flight', 'numbers', 'of', 'flights', 'landing', 'at', 'APG', '.']",
    "sql": "{'from': {'table_units': [['table_unit', 2]], 'conds': []}, 'select': [False, [[0, [0, [0, 11, False], None]]]], 'where': [[False, 2, [0, [0, 13, False], None], '\"APG\"', None]], 'groupBy': [], 'having': [], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "flight_2",
    "query": "SELECT T1.FlightNo FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.SourceAirport   =  T2.AirportCode WHERE T2.City  =  \"Aberdeen\"",
    "query_toks": "['SELECT', 'T1.FlightNo', 'FROM', 'FLIGHTS', 'AS', 'T1', 'JOIN', 'AIRPORTS', 'AS', 'T2', 'ON', 'T1.SourceAirport', '=', 'T2.AirportCode', 'WHERE', 'T2.City', '=', '``', 'Aberdeen', \"''\"]",
    "query_toks_no_value": "['select', 't1', '.', 'flightno', 'from', 'flights', 'as', 't1', 'join', 'airports', 'as', 't2', 'on', 't1', '.', 'sourceairport', '=', 't2', '.', 'airportcode', 'where', 't2', '.', 'city', '=', 'value']",
    "question": "What are flight numbers of flights departing from City \"Aberdeen \"?",
    "question_th": "เที่ยวบินจำนวนเท่าใดที่ออกเดินทางจากเมือง \"อเบอร์ดีน \"?",
    "question_toks": "['What', 'are', 'flight', 'numbers', 'of', 'flights', 'departing', 'from', 'City', '``', 'Aberdeen', '``', '?']",
    "sql": "{'from': {'table_units': [['table_unit', 2], ['table_unit', 1]], 'conds': [[False, 2, [0, [0, 12, False], None], [0, 6, False], None]]}, 'select': [False, [[0, [0, [0, 11, False], None]]]], 'where': [[False, 2, [0, [0, 5, False], None], '\"Aberdeen\"', None]], 'groupBy': [], 'having': [], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "flight_2",
    "query": "SELECT T1.FlightNo FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.SourceAirport   =  T2.AirportCode WHERE T2.City  =  \"Aberdeen\"",
    "query_toks": "['SELECT', 'T1.FlightNo', 'FROM', 'FLIGHTS', 'AS', 'T1', 'JOIN', 'AIRPORTS', 'AS', 'T2', 'ON', 'T1.SourceAirport', '=', 'T2.AirportCode', 'WHERE', 'T2.City', '=', '``', 'Aberdeen', \"''\"]",
    "query_toks_no_value": "['select', 't1', '.', 'flightno', 'from', 'flights', 'as', 't1', 'join', 'airports', 'as', 't2', 'on', 't1', '.', 'sourceairport', '=', 't2', '.', 'airportcode', 'where', 't2', '.', 'city', '=', 'value']",
    "question": "Give the flight numbers of flights leaving from Aberdeen.",
    "question_th": "แจ้งหมายเลขเที่ยวบินของเที่ยวบินที่ออกจากแอเบอร์ดีน",
    "question_toks": "['Give', 'the', 'flight', 'numbers', 'of', 'flights', 'leaving', 'from', 'Aberdeen', '.']",
    "sql": "{'from': {'table_units': [['table_unit', 2], ['table_unit', 1]], 'conds': [[False, 2, [0, [0, 12, False], None], [0, 6, False], None]]}, 'select': [False, [[0, [0, [0, 11, False], None]]]], 'where': [[False, 2, [0, [0, 5, False], None], '\"Aberdeen\"', None]], 'groupBy': [], 'having': [], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "flight_2",
    "query": "SELECT T1.FlightNo FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.DestAirport   =  T2.AirportCode WHERE T2.City  =  \"Aberdeen\"",
    "query_toks": "['SELECT', 'T1.FlightNo', 'FROM', 'FLIGHTS', 'AS', 'T1', 'JOIN', 'AIRPORTS', 'AS', 'T2', 'ON', 'T1.DestAirport', '=', 'T2.AirportCode', 'WHERE', 'T2.City', '=', '``', 'Aberdeen', \"''\"]",
    "query_toks_no_value": "['select', 't1', '.', 'flightno', 'from', 'flights', 'as', 't1', 'join', 'airports', 'as', 't2', 'on', 't1', '.', 'destairport', '=', 't2', '.', 'airportcode', 'where', 't2', '.', 'city', '=', 'value']",
    "question": "What are flight numbers of flights arriving at City \"Aberdeen\"?",
    "question_th": "เที่ยวบินที่มาถึงเมือง \"อเบอร์ดีน\" หมายเลขเที่ยวบินใด",
    "question_toks": "['What', 'are', 'flight', 'numbers', 'of', 'flights', 'arriving', 'at', 'City', '``', 'Aberdeen', \"''\", '?']",
    "sql": "{'from': {'table_units': [['table_unit', 2], ['table_unit', 1]], 'conds': [[False, 2, [0, [0, 13, False], None], [0, 6, False], None]]}, 'select': [False, [[0, [0, [0, 11, False], None]]]], 'where': [[False, 2, [0, [0, 5, False], None], '\"Aberdeen\"', None]], 'groupBy': [], 'having': [], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "flight_2",
    "query": "SELECT T1.FlightNo FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.DestAirport   =  T2.AirportCode WHERE T2.City  =  \"Aberdeen\"",
    "query_toks": "['SELECT', 'T1.FlightNo', 'FROM', 'FLIGHTS', 'AS', 'T1', 'JOIN', 'AIRPORTS', 'AS', 'T2', 'ON', 'T1.DestAirport', '=', 'T2.AirportCode', 'WHERE', 'T2.City', '=', '``', 'Aberdeen', \"''\"]",
    "query_toks_no_value": "['select', 't1', '.', 'flightno', 'from', 'flights', 'as', 't1', 'join', 'airports', 'as', 't2', 'on', 't1', '.', 'destairport', '=', 't2', '.', 'airportcode', 'where', 't2', '.', 'city', '=', 'value']",
    "question": "Give the flight numbers of flights arriving in Aberdeen.",
    "question_th": "แจ้งหมายเลขเที่ยวบินของเที่ยวบินที่มาถึงอเบอร์ดีน",
    "question_toks": "['Give', 'the', 'flight', 'numbers', 'of', 'flights', 'arriving', 'in', 'Aberdeen', '.']",
    "sql": "{'from': {'table_units': [['table_unit', 2], ['table_unit', 1]], 'conds': [[False, 2, [0, [0, 13, False], None], [0, 6, False], None]]}, 'select': [False, [[0, [0, [0, 11, False], None]]]], 'where': [[False, 2, [0, [0, 5, False], None], '\"Aberdeen\"', None]], 'groupBy': [], 'having': [], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "flight_2",
    "query": "SELECT count(*) FROM Flights AS T1 JOIN Airports AS T2 ON T1.DestAirport  =  T2.AirportCode WHERE T2.city  =  \"Aberdeen\" OR T2.city  =  \"Abilene\"",
    "query_toks": "['SELECT', 'count', '(', '*', ')', 'FROM', 'Flights', 'AS', 'T1', 'JOIN', 'Airports', 'AS', 'T2', 'ON', 'T1.DestAirport', '=', 'T2.AirportCode', 'WHERE', 'T2.city', '=', '``', 'Aberdeen', \"''\", 'OR', 'T2.city', '=', '``', 'Abilene', \"''\"]",
    "query_toks_no_value": "['select', 'count', '(', '*', ')', 'from', 'flights', 'as', 't1', 'join', 'airports', 'as', 't2', 'on', 't1', '.', 'destairport', '=', 't2', '.', 'airportcode', 'where', 't2', '.', 'city', '=', 'value', 'or', 't2', '.', 'city', '=', 'value']",
    "question": "Find the number of flights landing in the city of Aberdeen or Abilene.",
    "question_th": "ค้นหาจำนวนเที่ยวบินที่ลงจอดในเมืองอเบอร์ดีนหรืออาบีลีน",
    "question_toks": "['Find', 'the', 'number', 'of', 'flights', 'landing', 'in', 'the', 'city', 'of', 'Aberdeen', 'or', 'Abilene', '.']",
    "sql": "{'from': {'table_units': [['table_unit', 2], ['table_unit', 1]], 'conds': [[False, 2, [0, [0, 13, False], None], [0, 6, False], None]]}, 'select': [False, [[3, [0, [0, 0, False], None]]]], 'where': [[False, 2, [0, [0, 5, False], None], '\"Aberdeen\"', None], 'or', [False, 2, [0, [0, 5, False], None], '\"Abilene\"', None]], 'groupBy': [], 'having': [], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "flight_2",
    "query": "SELECT count(*) FROM Flights AS T1 JOIN Airports AS T2 ON T1.DestAirport  =  T2.AirportCode WHERE T2.city  =  \"Aberdeen\" OR T2.city  =  \"Abilene\"",
    "query_toks": "['SELECT', 'count', '(', '*', ')', 'FROM', 'Flights', 'AS', 'T1', 'JOIN', 'Airports', 'AS', 'T2', 'ON', 'T1.DestAirport', '=', 'T2.AirportCode', 'WHERE', 'T2.city', '=', '``', 'Aberdeen', \"''\", 'OR', 'T2.city', '=', '``', 'Abilene', \"''\"]",
    "query_toks_no_value": "['select', 'count', '(', '*', ')', 'from', 'flights', 'as', 't1', 'join', 'airports', 'as', 't2', 'on', 't1', '.', 'destairport', '=', 't2', '.', 'airportcode', 'where', 't2', '.', 'city', '=', 'value', 'or', 't2', '.', 'city', '=', 'value']",
    "question": "How many flights land in Aberdeen or Abilene?",
    "question_th": "มีเที่ยวบินกี่เที่ยวที่ลงจอดในอเบอร์ดีนหรืออาบีลีน",
    "question_toks": "['How', 'many', 'flights', 'land', 'in', 'Aberdeen', 'or', 'Abilene', '?']",
    "sql": "{'from': {'table_units': [['table_unit', 2], ['table_unit', 1]], 'conds': [[False, 2, [0, [0, 13, False], None], [0, 6, False], None]]}, 'select': [False, [[3, [0, [0, 0, False], None]]]], 'where': [[False, 2, [0, [0, 5, False], None], '\"Aberdeen\"', None], 'or', [False, 2, [0, [0, 5, False], None], '\"Abilene\"', None]], 'groupBy': [], 'having': [], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "flight_2",
    "query": "SELECT AirportName FROM Airports WHERE AirportCode NOT IN (SELECT SourceAirport FROM Flights UNION SELECT DestAirport FROM Flights)",
    "query_toks": "['SELECT', 'AirportName', 'FROM', 'Airports', 'WHERE', 'AirportCode', 'NOT', 'IN', '(', 'SELECT', 'SourceAirport', 'FROM', 'Flights', 'UNION', 'SELECT', 'DestAirport', 'FROM', 'Flights', ')']",
    "query_toks_no_value": "['select', 'airportname', 'from', 'airports', 'where', 'airportcode', 'not', 'in', '(', 'select', 'sourceairport', 'from', 'flights', 'union', 'select', 'destairport', 'from', 'flights', ')']",
    "question": "Find the name of airports which do not have any flight in and out.",
    "question_th": "ค้นหาชื่อสนามบินที่ไม่มีเที่ยวบินเข้าออก",
    "question_toks": "['Find', 'the', 'name', 'of', 'airports', 'which', 'do', 'not', 'have', 'any', 'flight', 'in', 'and', 'out', '.']",
    "sql": "{'from': {'table_units': [['table_unit', 1]], 'conds': []}, 'select': [False, [[0, [0, [0, 7, False], None]]]], 'where': [[True, 8, [0, [0, 6, False], None], {'from': {'table_units': [['table_unit', 2]], 'conds': []}, 'select': [False, [[0, [0, [0, 12, False], None]]]], 'where': [], 'groupBy': [], 'having': [], 'orderBy': [], 'limit': None, 'intersect': None, 'union': {'from': {'table_units': [['table_unit', 2]], 'conds': []}, 'select': [False, [[0, [0, [0, 13, False], None]]]], 'where': [], 'groupBy': [], 'having': [], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}, 'except': None}, None]], 'groupBy': [], 'having': [], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "flight_2",
    "query": "SELECT AirportName FROM Airports WHERE AirportCode NOT IN (SELECT SourceAirport FROM Flights UNION SELECT DestAirport FROM Flights)",
    "query_toks": "['SELECT', 'AirportName', 'FROM', 'Airports', 'WHERE', 'AirportCode', 'NOT', 'IN', '(', 'SELECT', 'SourceAirport', 'FROM', 'Flights', 'UNION', 'SELECT', 'DestAirport', 'FROM', 'Flights', ')']",
    "query_toks_no_value": "['select', 'airportname', 'from', 'airports', 'where', 'airportcode', 'not', 'in', '(', 'select', 'sourceairport', 'from', 'flights', 'union', 'select', 'destairport', 'from', 'flights', ')']",
    "question": "Which airports do not have departing or arriving flights?",
    "question_th": "สนามบินใดไม่มีเที่ยวบินขาออกหรือขาเข้า?",
    "question_toks": "['Which', 'airports', 'do', 'not', 'have', 'departing', 'or', 'arriving', 'flights', '?']",
    "sql": "{'from': {'table_units': [['table_unit', 1]], 'conds': []}, 'select': [False, [[0, [0, [0, 7, False], None]]]], 'where': [[True, 8, [0, [0, 6, False], None], {'from': {'table_units': [['table_unit', 2]], 'conds': []}, 'select': [False, [[0, [0, [0, 12, False], None]]]], 'where': [], 'groupBy': [], 'having': [], 'orderBy': [], 'limit': None, 'intersect': None, 'union': {'from': {'table_units': [['table_unit', 2]], 'conds': []}, 'select': [False, [[0, [0, [0, 13, False], None]]]], 'where': [], 'groupBy': [], 'having': [], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}, 'except': None}, None]], 'groupBy': [], 'having': [], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "employee_hire_evaluation",
    "query": "SELECT count(*) FROM employee",
    "query_toks": "['SELECT', 'count', '(', '*', ')', 'FROM', 'employee']",
    "query_toks_no_value": "['select', 'count', '(', '*', ')', 'from', 'employee']",
    "question": "How many employees are there?",
    "question_th": "มีพนักงานกี่คน?",
    "question_toks": "['How', 'many', 'employees', 'are', 'there', '?']",
    "sql": "{'from': {'table_units': [['table_unit', 0]], 'conds': []}, 'select': [False, [[3, [0, [0, 0, False], None]]]], 'where': [], 'groupBy': [], 'having': [], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "employee_hire_evaluation",
    "query": "SELECT count(*) FROM employee",
    "query_toks": "['SELECT', 'count', '(', '*', ')', 'FROM', 'employee']",
    "query_toks_no_value": "['select', 'count', '(', '*', ')', 'from', 'employee']",
    "question": "Count the number of employees",
    "question_th": "นับจำนวนพนักงาน",
    "question_toks": "['Count', 'the', 'number', 'of', 'employees']",
    "sql": "{'from': {'table_units': [['table_unit', 0]], 'conds': []}, 'select': [False, [[3, [0, [0, 0, False], None]]]], 'where': [], 'groupBy': [], 'having': [], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "employee_hire_evaluation",
    "query": "SELECT name FROM employee ORDER BY age",
    "query_toks": "['SELECT', 'name', 'FROM', 'employee', 'ORDER', 'BY', 'age']",
    "query_toks_no_value": "['select', 'name', 'from', 'employee', 'order', 'by', 'age']",
    "question": "Sort employee names by their age in ascending order.",
    "question_th": "เรียงลำดับชื่อพนักงานตามอายุจากน้อยไปหามาก",
    "question_toks": "['Sort', 'employee', 'names', 'by', 'their', 'age', 'in', 'ascending', 'order', '.']",
    "sql": "{'from': {'table_units': [['table_unit', 0]], 'conds': []}, 'select': [False, [[0, [0, [0, 2, False], None]]]], 'where': [], 'groupBy': [], 'having': [], 'orderBy': ['asc', [[0, [0, 3, False], None]]], 'limit': None, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "employee_hire_evaluation",
    "query": "SELECT name FROM employee ORDER BY age",
    "query_toks": "['SELECT', 'name', 'FROM', 'employee', 'ORDER', 'BY', 'age']",
    "query_toks_no_value": "['select', 'name', 'from', 'employee', 'order', 'by', 'age']",
    "question": "List the names of employees and sort in ascending order of age.",
    "question_th": "รายชื่อพนักงานและเรียงลำดับอายุจากน้อยไปหามาก",
    "question_toks": "['List', 'the', 'names', 'of', 'employees', 'and', 'sort', 'in', 'ascending', 'order', 'of', 'age', '.']",
    "sql": "{'from': {'table_units': [['table_unit', 0]], 'conds': []}, 'select': [False, [[0, [0, [0, 2, False], None]]]], 'where': [], 'groupBy': [], 'having': [], 'orderBy': ['asc', [[0, [0, 3, False], None]]], 'limit': None, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "employee_hire_evaluation",
    "query": "SELECT count(*) ,  city FROM employee GROUP BY city",
    "query_toks": "['SELECT', 'count', '(', '*', ')', ',', 'city', 'FROM', 'employee', 'GROUP', 'BY', 'city']",
    "query_toks_no_value": "['select', 'count', '(', '*', ')', ',', 'city', 'from', 'employee', 'group', 'by', 'city']",
    "question": "What is the number of employees from each city?",
    "question_th": "แต่ละเมืองมีพนักงานกี่คน?",
    "question_toks": "['What', 'is', 'the', 'number', 'of', 'employees', 'from', 'each', 'city', '?']",
    "sql": "{'from': {'table_units': [['table_unit', 0]], 'conds': []}, 'select': [False, [[3, [0, [0, 0, False], None]], [0, [0, [0, 4, False], None]]]], 'where': [], 'groupBy': [[0, 4, False]], 'having': [], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "employee_hire_evaluation",
    "query": "SELECT count(*) ,  city FROM employee GROUP BY city",
    "query_toks": "['SELECT', 'count', '(', '*', ')', ',', 'city', 'FROM', 'employee', 'GROUP', 'BY', 'city']",
    "query_toks_no_value": "['select', 'count', '(', '*', ')', ',', 'city', 'from', 'employee', 'group', 'by', 'city']",
    "question": "Count the number of employees for each city.",
    "question_th": "นับจำนวนพนักงานในแต่ละเมือง",
    "question_toks": "['Count', 'the', 'number', 'of', 'employees', 'for', 'each', 'city', '.']",
    "sql": "{'from': {'table_units': [['table_unit', 0]], 'conds': []}, 'select': [False, [[3, [0, [0, 0, False], None]], [0, [0, [0, 4, False], None]]]], 'where': [], 'groupBy': [[0, 4, False]], 'having': [], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "employee_hire_evaluation",
    "query": "SELECT city FROM employee WHERE age  <  30 GROUP BY city HAVING count(*)  >  1",
    "query_toks": "['SELECT', 'city', 'FROM', 'employee', 'WHERE', 'age', '<', '30', 'GROUP', 'BY', 'city', 'HAVING', 'count', '(', '*', ')', '>', '1']",
    "query_toks_no_value": "['select', 'city', 'from', 'employee', 'where', 'age', '<', 'value', 'group', 'by', 'city', 'having', 'count', '(', '*', ')', '>', 'value']",
    "question": "Which cities do more than one employee under age 30 come from?",
    "question_th": "พนักงานอายุต่ำกว่า 30 ปีมากกว่าหนึ่งคนมาจากเมืองใดบ้าง",
    "question_toks": "['Which', 'cities', 'do', 'more', 'than', 'one', 'employee', 'under', 'age', '30', 'come', 'from', '?']",
    "sql": "{'from': {'table_units': [['table_unit', 0]], 'conds': []}, 'select': [False, [[0, [0, [0, 4, False], None]]]], 'where': [[False, 4, [0, [0, 3, False], None], 30.0, None]], 'groupBy': [[0, 4, False]], 'having': [[False, 3, [0, [3, 0, False], None], 1.0, None]], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "employee_hire_evaluation",
    "query": "SELECT city FROM employee WHERE age  <  30 GROUP BY city HAVING count(*)  >  1",
    "query_toks": "['SELECT', 'city', 'FROM', 'employee', 'WHERE', 'age', '<', '30', 'GROUP', 'BY', 'city', 'HAVING', 'count', '(', '*', ')', '>', '1']",
    "query_toks_no_value": "['select', 'city', 'from', 'employee', 'where', 'age', '<', 'value', 'group', 'by', 'city', 'having', 'count', '(', '*', ')', '>', 'value']",
    "question": "Find the cities that have more than one employee under age 30.",
    "question_th": "ค้นหาเมืองที่มีพนักงานอายุต่ำกว่า 30 ปีมากกว่าหนึ่งคน",
    "question_toks": "['Find', 'the', 'cities', 'that', 'have', 'more', 'than', 'one', 'employee', 'under', 'age', '30', '.']",
    "sql": "{'from': {'table_units': [['table_unit', 0]], 'conds': []}, 'select': [False, [[0, [0, [0, 4, False], None]]]], 'where': [[False, 4, [0, [0, 3, False], None], 30.0, None]], 'groupBy': [[0, 4, False]], 'having': [[False, 3, [0, [3, 0, False], None], 1.0, None]], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "employee_hire_evaluation",
    "query": "SELECT count(*) ,  LOCATION FROM shop GROUP BY LOCATION",
    "query_toks": "['SELECT', 'count', '(', '*', ')', ',', 'LOCATION', 'FROM', 'shop', 'GROUP', 'BY', 'LOCATION']",
    "query_toks_no_value": "['select', 'count', '(', '*', ')', ',', 'location', 'from', 'shop', 'group', 'by', 'location']",
    "question": "Find the number of shops in each location.",
    "question_th": "ค้นหาจำนวนร้านค้าในแต่ละสถานที่",
    "question_toks": "['Find', 'the', 'number', 'of', 'shops', 'in', 'each', 'location', '.']",
    "sql": "{'from': {'table_units': [['table_unit', 1]], 'conds': []}, 'select': [False, [[3, [0, [0, 0, False], None]], [0, [0, [0, 7, False], None]]]], 'where': [], 'groupBy': [[0, 7, False]], 'having': [], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "employee_hire_evaluation",
    "query": "SELECT count(*) ,  LOCATION FROM shop GROUP BY LOCATION",
    "query_toks": "['SELECT', 'count', '(', '*', ')', ',', 'LOCATION', 'FROM', 'shop', 'GROUP', 'BY', 'LOCATION']",
    "query_toks_no_value": "['select', 'count', '(', '*', ')', ',', 'location', 'from', 'shop', 'group', 'by', 'location']",
    "question": "How many shops are there in each location?",
    "question_th": "แต่ละสาขามีกี่ร้าน?",
    "question_toks": "['How', 'many', 'shops', 'are', 'there', 'in', 'each', 'location', '?']",
    "sql": "{'from': {'table_units': [['table_unit', 1]], 'conds': []}, 'select': [False, [[3, [0, [0, 0, False], None]], [0, [0, [0, 7, False], None]]]], 'where': [], 'groupBy': [[0, 7, False]], 'having': [], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "employee_hire_evaluation",
    "query": "SELECT manager_name ,  district FROM shop ORDER BY number_products DESC LIMIT 1",
    "query_toks": "['SELECT', 'manager_name', ',', 'district', 'FROM', 'shop', 'ORDER', 'BY', 'number_products', 'DESC', 'LIMIT', '1']",
    "query_toks_no_value": "['select', 'manager_name', ',', 'district', 'from', 'shop', 'order', 'by', 'number_products', 'desc', 'limit', 'value']",
    "question": "Find the manager name and district of the shop whose number of products is the largest.",
    "question_th": "ค้นหาชื่อผู้จัดการและเขตของร้านค้าที่มีจำนวนสินค้ามากที่สุด",
    "question_toks": "['Find', 'the', 'manager', 'name', 'and', 'district', 'of', 'the', 'shop', 'whose', 'number', 'of', 'products', 'is', 'the', 'largest', '.']",
    "sql": "{'from': {'table_units': [['table_unit', 1]], 'conds': []}, 'select': [False, [[0, [0, [0, 10, False], None]], [0, [0, [0, 8, False], None]]]], 'where': [], 'groupBy': [], 'having': [], 'orderBy': ['desc', [[0, [0, 9, False], None]]], 'limit': 1, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "employee_hire_evaluation",
    "query": "SELECT manager_name ,  district FROM shop ORDER BY number_products DESC LIMIT 1",
    "query_toks": "['SELECT', 'manager_name', ',', 'district', 'FROM', 'shop', 'ORDER', 'BY', 'number_products', 'DESC', 'LIMIT', '1']",
    "query_toks_no_value": "['select', 'manager_name', ',', 'district', 'from', 'shop', 'order', 'by', 'number_products', 'desc', 'limit', 'value']",
    "question": "What are the manager name and district of the shop that sells the largest number of products?",
    "question_th": "ชื่อผู้จัดการและเขตของร้านค้าที่ขายสินค้าจำนวนมากที่สุดคืออะไร?",
    "question_toks": "['What', 'are', 'the', 'manager', 'name', 'and', 'district', 'of', 'the', 'shop', 'that', 'sells', 'the', 'largest', 'number', 'of', 'products', '?']",
    "sql": "{'from': {'table_units': [['table_unit', 1]], 'conds': []}, 'select': [False, [[0, [0, [0, 10, False], None]], [0, [0, [0, 8, False], None]]]], 'where': [], 'groupBy': [], 'having': [], 'orderBy': ['desc', [[0, [0, 9, False], None]]], 'limit': 1, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "employee_hire_evaluation",
    "query": "SELECT min(Number_products) ,  max(Number_products) FROM shop",
    "query_toks": "['SELECT', 'min', '(', 'Number_products', ')', ',', 'max', '(', 'Number_products', ')', 'FROM', 'shop']",
    "query_toks_no_value": "['select', 'min', '(', 'number_products', ')', ',', 'max', '(', 'number_products', ')', 'from', 'shop']",
    "question": "find the minimum and maximum number of products of all stores.",
    "question_th": "ค้นหาจำนวนสินค้าขั้นต่ำและสูงสุดของร้านค้าทั้งหมด",
    "question_toks": "['find', 'the', 'minimum', 'and', 'maximum', 'number', 'of', 'products', 'of', 'all', 'stores', '.']",
    "sql": "{'from': {'table_units': [['table_unit', 1]], 'conds': []}, 'select': [False, [[2, [0, [0, 9, False], None]], [1, [0, [0, 9, False], None]]]], 'where': [], 'groupBy': [], 'having': [], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "employee_hire_evaluation",
    "query": "SELECT min(Number_products) ,  max(Number_products) FROM shop",
    "query_toks": "['SELECT', 'min', '(', 'Number_products', ')', ',', 'max', '(', 'Number_products', ')', 'FROM', 'shop']",
    "query_toks_no_value": "['select', 'min', '(', 'number_products', ')', ',', 'max', '(', 'number_products', ')', 'from', 'shop']",
    "question": "What are the minimum and maximum number of products across all the shops?",
    "question_th": "จำนวนผลิตภัณฑ์ขั้นต่ำและสูงสุดในร้านค้าทั้งหมดคือเท่าใด",
    "question_toks": "['What', 'are', 'the', 'minimum', 'and', 'maximum', 'number', 'of', 'products', 'across', 'all', 'the', 'shops', '?']",
    "sql": "{'from': {'table_units': [['table_unit', 1]], 'conds': []}, 'select': [False, [[2, [0, [0, 9, False], None]], [1, [0, [0, 9, False], None]]]], 'where': [], 'groupBy': [], 'having': [], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "employee_hire_evaluation",
    "query": "SELECT name ,  LOCATION ,  district FROM shop ORDER BY number_products DESC",
    "query_toks": "['SELECT', 'name', ',', 'LOCATION', ',', 'district', 'FROM', 'shop', 'ORDER', 'BY', 'number_products', 'DESC']",
    "query_toks_no_value": "['select', 'name', ',', 'location', ',', 'district', 'from', 'shop', 'order', 'by', 'number_products', 'desc']",
    "question": "Return the name, location and district of all shops in descending order of number of products.",
    "question_th": "กลับชื่อ ที่ตั้ง และอำเภอของร้านค้าทั้งหมดโดยเรียงตามจำนวนสินค้าจากมากไปน้อย",
    "question_toks": "['Return', 'the', 'name', ',', 'location', 'and', 'district', 'of', 'all', 'shops', 'in', 'descending', 'order', 'of', 'number', 'of', 'products', '.']",
    "sql": "{'from': {'table_units': [['table_unit', 1]], 'conds': []}, 'select': [False, [[0, [0, [0, 6, False], None]], [0, [0, [0, 7, False], None]], [0, [0, [0, 8, False], None]]]], 'where': [], 'groupBy': [], 'having': [], 'orderBy': ['desc', [[0, [0, 9, False], None]]], 'limit': None, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "employee_hire_evaluation",
    "query": "SELECT name ,  LOCATION ,  district FROM shop ORDER BY number_products DESC",
    "query_toks": "['SELECT', 'name', ',', 'LOCATION', ',', 'district', 'FROM', 'shop', 'ORDER', 'BY', 'number_products', 'DESC']",
    "query_toks_no_value": "['select', 'name', ',', 'location', ',', 'district', 'from', 'shop', 'order', 'by', 'number_products', 'desc']",
    "question": "Sort all the shops by number products in descending order, and return the name, location and district of each shop.",
    "question_th": "จัดเรียงร้านค้าทั้งหมดตามจำนวนสินค้าตามลำดับจากมากไปหาน้อย และส่งคืนชื่อ ที่ตั้ง และอำเภอของแต่ละร้าน",
    "question_toks": "['Sort', 'all', 'the', 'shops', 'by', 'number', 'products', 'in', 'descending', 'order', ',', 'and', 'return', 'the', 'name', ',', 'location', 'and', 'district', 'of', 'each', 'shop', '.']",
    "sql": "{'from': {'table_units': [['table_unit', 1]], 'conds': []}, 'select': [False, [[0, [0, [0, 6, False], None]], [0, [0, [0, 7, False], None]], [0, [0, [0, 8, False], None]]]], 'where': [], 'groupBy': [], 'having': [], 'orderBy': ['desc', [[0, [0, 9, False], None]]], 'limit': None, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "employee_hire_evaluation",
    "query": "SELECT name FROM shop WHERE number_products  >  (SELECT avg(number_products) FROM shop)",
    "query_toks": "['SELECT', 'name', 'FROM', 'shop', 'WHERE', 'number_products', '>', '(', 'SELECT', 'avg', '(', 'number_products', ')', 'FROM', 'shop', ')']",
    "query_toks_no_value": "['select', 'name', 'from', 'shop', 'where', 'number_products', '>', '(', 'select', 'avg', '(', 'number_products', ')', 'from', 'shop', ')']",
    "question": "Find the names of stores whose number products is more than the average number of products.",
    "question_th": "ค้นหาชื่อร้านค้าที่มีจำนวนสินค้ามากกว่าจำนวนสินค้าโดยเฉลี่ย",
    "question_toks": "['Find', 'the', 'names', 'of', 'stores', 'whose', 'number', 'products', 'is', 'more', 'than', 'the', 'average', 'number', 'of', 'products', '.']",
    "sql": "{'from': {'table_units': [['table_unit', 1]], 'conds': []}, 'select': [False, [[0, [0, [0, 6, False], None]]]], 'where': [[False, 3, [0, [0, 9, False], None], {'from': {'table_units': [['table_unit', 1]], 'conds': []}, 'select': [False, [[5, [0, [0, 9, False], None]]]], 'where': [], 'groupBy': [], 'having': [], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}, None]], 'groupBy': [], 'having': [], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "employee_hire_evaluation",
    "query": "SELECT name FROM shop WHERE number_products  >  (SELECT avg(number_products) FROM shop)",
    "query_toks": "['SELECT', 'name', 'FROM', 'shop', 'WHERE', 'number_products', '>', '(', 'SELECT', 'avg', '(', 'number_products', ')', 'FROM', 'shop', ')']",
    "query_toks_no_value": "['select', 'name', 'from', 'shop', 'where', 'number_products', '>', '(', 'select', 'avg', '(', 'number_products', ')', 'from', 'shop', ')']",
    "question": "Which shops' number products is above the average? Give me the shop names.",
    "question_th": "สินค้าเบอร์ร้านไหนสูงกว่าค่าเฉลี่ย? แจ้งชื่อร้านครับ.",
    "question_toks": "['Which', 'shops', \"'\", 'number', 'products', 'is', 'above', 'the', 'average', '?', 'Give', 'me', 'the', 'shop', 'names', '.']",
    "sql": "{'from': {'table_units': [['table_unit', 1]], 'conds': []}, 'select': [False, [[0, [0, [0, 6, False], None]]]], 'where': [[False, 3, [0, [0, 9, False], None], {'from': {'table_units': [['table_unit', 1]], 'conds': []}, 'select': [False, [[5, [0, [0, 9, False], None]]]], 'where': [], 'groupBy': [], 'having': [], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}, None]], 'groupBy': [], 'having': [], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "employee_hire_evaluation",
    "query": "SELECT t1.name FROM employee AS t1 JOIN evaluation AS t2 ON t1.Employee_ID  =  t2.Employee_ID GROUP BY t2.Employee_ID ORDER BY count(*) DESC LIMIT 1",
    "query_toks": "['SELECT', 't1.name', 'FROM', 'employee', 'AS', 't1', 'JOIN', 'evaluation', 'AS', 't2', 'ON', 't1.Employee_ID', '=', 't2.Employee_ID', 'GROUP', 'BY', 't2.Employee_ID', 'ORDER', 'BY', 'count', '(', '*', ')', 'DESC', 'LIMIT', '1']",
    "query_toks_no_value": "['select', 't1', '.', 'name', 'from', 'employee', 'as', 't1', 'join', 'evaluation', 'as', 't2', 'on', 't1', '.', 'employee_id', '=', 't2', '.', 'employee_id', 'group', 'by', 't2', '.', 'employee_id', 'order', 'by', 'count', '(', '*', ')', 'desc', 'limit', 'value']",
    "question": "find the name of employee who was awarded the most times in the evaluation.",
    "question_th": "ค้นหาชื่อพนักงานที่ได้รับรางวัลมากที่สุดในการประเมิน",
    "question_toks": "['find', 'the', 'name', 'of', 'employee', 'who', 'was', 'awarded', 'the', 'most', 'times', 'in', 'the', 'evaluation', '.']",
    "sql": "{'from': {'table_units': [['table_unit', 0], ['table_unit', 3]], 'conds': [[False, 2, [0, [0, 1, False], None], [0, 15, False], None]]}, 'select': [False, [[0, [0, [0, 2, False], None]]]], 'where': [], 'groupBy': [[0, 15, False]], 'having': [], 'orderBy': ['desc', [[0, [3, 0, False], None]]], 'limit': 1, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "employee_hire_evaluation",
    "query": "SELECT t1.name FROM employee AS t1 JOIN evaluation AS t2 ON t1.Employee_ID  =  t2.Employee_ID GROUP BY t2.Employee_ID ORDER BY count(*) DESC LIMIT 1",
    "query_toks": "['SELECT', 't1.name', 'FROM', 'employee', 'AS', 't1', 'JOIN', 'evaluation', 'AS', 't2', 'ON', 't1.Employee_ID', '=', 't2.Employee_ID', 'GROUP', 'BY', 't2.Employee_ID', 'ORDER', 'BY', 'count', '(', '*', ')', 'DESC', 'LIMIT', '1']",
    "query_toks_no_value": "['select', 't1', '.', 'name', 'from', 'employee', 'as', 't1', 'join', 'evaluation', 'as', 't2', 'on', 't1', '.', 'employee_id', '=', 't2', '.', 'employee_id', 'group', 'by', 't2', '.', 'employee_id', 'order', 'by', 'count', '(', '*', ')', 'desc', 'limit', 'value']",
    "question": "Which employee received the most awards in evaluations? Give me the employee name.",
    "question_th": "พนักงานคนไหนได้รับรางวัลมากที่สุดในการประเมินผล? แจ้งชื่อพนักงานค่ะ.",
    "question_toks": "['Which', 'employee', 'received', 'the', 'most', 'awards', 'in', 'evaluations', '?', 'Give', 'me', 'the', 'employee', 'name', '.']",
    "sql": "{'from': {'table_units': [['table_unit', 0], ['table_unit', 3]], 'conds': [[False, 2, [0, [0, 1, False], None], [0, 15, False], None]]}, 'select': [False, [[0, [0, [0, 2, False], None]]]], 'where': [], 'groupBy': [[0, 15, False]], 'having': [], 'orderBy': ['desc', [[0, [3, 0, False], None]]], 'limit': 1, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "employee_hire_evaluation",
    "query": "SELECT t1.name FROM employee AS t1 JOIN evaluation AS t2 ON t1.Employee_ID  =  t2.Employee_ID ORDER BY t2.bonus DESC LIMIT 1",
    "query_toks": "['SELECT', 't1.name', 'FROM', 'employee', 'AS', 't1', 'JOIN', 'evaluation', 'AS', 't2', 'ON', 't1.Employee_ID', '=', 't2.Employee_ID', 'ORDER', 'BY', 't2.bonus', 'DESC', 'LIMIT', '1']",
    "query_toks_no_value": "['select', 't1', '.', 'name', 'from', 'employee', 'as', 't1', 'join', 'evaluation', 'as', 't2', 'on', 't1', '.', 'employee_id', '=', 't2', '.', 'employee_id', 'order', 'by', 't2', '.', 'bonus', 'desc', 'limit', 'value']",
    "question": "Find the name of the employee who got the highest one time bonus.",
    "question_th": "ค้นหาชื่อพนักงานที่ได้รับโบนัสครั้งเดียวสูงสุด",
    "question_toks": "['Find', 'the', 'name', 'of', 'the', 'employee', 'who', 'got', 'the', 'highest', 'one', 'time', 'bonus', '.']",
    "sql": "{'from': {'table_units': [['table_unit', 0], ['table_unit', 3]], 'conds': [[False, 2, [0, [0, 1, False], None], [0, 15, False], None]]}, 'select': [False, [[0, [0, [0, 2, False], None]]]], 'where': [], 'groupBy': [], 'having': [], 'orderBy': ['desc', [[0, [0, 17, False], None]]], 'limit': 1, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "employee_hire_evaluation",
    "query": "SELECT t1.name FROM employee AS t1 JOIN evaluation AS t2 ON t1.Employee_ID  =  t2.Employee_ID ORDER BY t2.bonus DESC LIMIT 1",
    "query_toks": "['SELECT', 't1.name', 'FROM', 'employee', 'AS', 't1', 'JOIN', 'evaluation', 'AS', 't2', 'ON', 't1.Employee_ID', '=', 't2.Employee_ID', 'ORDER', 'BY', 't2.bonus', 'DESC', 'LIMIT', '1']",
    "query_toks_no_value": "['select', 't1', '.', 'name', 'from', 'employee', 'as', 't1', 'join', 'evaluation', 'as', 't2', 'on', 't1', '.', 'employee_id', '=', 't2', '.', 'employee_id', 'order', 'by', 't2', '.', 'bonus', 'desc', 'limit', 'value']",
    "question": "Which employee received the biggest bonus? Give me the employee name.",
    "question_th": "พนักงานคนไหนได้รับโบนัสมากที่สุด? แจ้งชื่อพนักงานค่ะ.",
    "question_toks": "['Which', 'employee', 'received', 'the', 'biggest', 'bonus', '?', 'Give', 'me', 'the', 'employee', 'name', '.']",
    "sql": "{'from': {'table_units': [['table_unit', 0], ['table_unit', 3]], 'conds': [[False, 2, [0, [0, 1, False], None], [0, 15, False], None]]}, 'select': [False, [[0, [0, [0, 2, False], None]]]], 'where': [], 'groupBy': [], 'having': [], 'orderBy': ['desc', [[0, [0, 17, False], None]]], 'limit': 1, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "employee_hire_evaluation",
    "query": "SELECT name FROM employee WHERE Employee_ID NOT IN (SELECT Employee_ID FROM evaluation)",
    "query_toks": "['SELECT', 'name', 'FROM', 'employee', 'WHERE', 'Employee_ID', 'NOT', 'IN', '(', 'SELECT', 'Employee_ID', 'FROM', 'evaluation', ')']",
    "query_toks_no_value": "['select', 'name', 'from', 'employee', 'where', 'employee_id', 'not', 'in', '(', 'select', 'employee_id', 'from', 'evaluation', ')']",
    "question": "Find the names of employees who never won any award in the evaluation.",
    "question_th": "ค้นหารายชื่อพนักงานที่ไม่เคยได้รับรางวัลใดๆ ในการประเมิน",
    "question_toks": "['Find', 'the', 'names', 'of', 'employees', 'who', 'never', 'won', 'any', 'award', 'in', 'the', 'evaluation', '.']",
    "sql": "{'from': {'table_units': [['table_unit', 0]], 'conds': []}, 'select': [False, [[0, [0, [0, 2, False], None]]]], 'where': [[True, 8, [0, [0, 1, False], None], {'from': {'table_units': [['table_unit', 3]], 'conds': []}, 'select': [False, [[0, [0, [0, 15, False], None]]]], 'where': [], 'groupBy': [], 'having': [], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}, None]], 'groupBy': [], 'having': [], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "employee_hire_evaluation",
    "query": "SELECT name FROM employee WHERE Employee_ID NOT IN (SELECT Employee_ID FROM evaluation)",
    "query_toks": "['SELECT', 'name', 'FROM', 'employee', 'WHERE', 'Employee_ID', 'NOT', 'IN', '(', 'SELECT', 'Employee_ID', 'FROM', 'evaluation', ')']",
    "query_toks_no_value": "['select', 'name', 'from', 'employee', 'where', 'employee_id', 'not', 'in', '(', 'select', 'employee_id', 'from', 'evaluation', ')']",
    "question": "What are the names of the employees who never received any evaluation?",
    "question_th": "พนักงานที่ไม่เคยได้รับการประเมินมีชื่ออะไรบ้าง?",
    "question_toks": "['What', 'are', 'the', 'names', 'of', 'the', 'employees', 'who', 'never', 'received', 'any', 'evaluation', '?']",
    "sql": "{'from': {'table_units': [['table_unit', 0]], 'conds': []}, 'select': [False, [[0, [0, [0, 2, False], None]]]], 'where': [[True, 8, [0, [0, 1, False], None], {'from': {'table_units': [['table_unit', 3]], 'conds': []}, 'select': [False, [[0, [0, [0, 15, False], None]]]], 'where': [], 'groupBy': [], 'having': [], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}, None]], 'groupBy': [], 'having': [], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "employee_hire_evaluation",
    "query": "SELECT t2.name FROM hiring AS t1 JOIN shop AS t2 ON t1.shop_id  =  t2.shop_id GROUP BY t1.shop_id ORDER BY count(*) DESC LIMIT 1",
    "query_toks": "['SELECT', 't2.name', 'FROM', 'hiring', 'AS', 't1', 'JOIN', 'shop', 'AS', 't2', 'ON', 't1.shop_id', '=', 't2.shop_id', 'GROUP', 'BY', 't1.shop_id', 'ORDER', 'BY', 'count', '(', '*', ')', 'DESC', 'LIMIT', '1']",
    "query_toks_no_value": "['select', 't2', '.', 'name', 'from', 'hiring', 'as', 't1', 'join', 'shop', 'as', 't2', 'on', 't1', '.', 'shop_id', '=', 't2', '.', 'shop_id', 'group', 'by', 't1', '.', 'shop_id', 'order', 'by', 'count', '(', '*', ')', 'desc', 'limit', 'value']",
    "question": "What is the name of the shop that is hiring the largest number of employees?",
    "question_th": "ร้านที่รับสมัครพนักงานมากที่สุดชื่อว่าอะไรคะ?",
    "question_toks": "['What', 'is', 'the', 'name', 'of', 'the', 'shop', 'that', 'is', 'hiring', 'the', 'largest', 'number', 'of', 'employees', '?']",
    "sql": "{'from': {'table_units': [['table_unit', 2], ['table_unit', 1]], 'conds': [[False, 2, [0, [0, 11, False], None], [0, 5, False], None]]}, 'select': [False, [[0, [0, [0, 6, False], None]]]], 'where': [], 'groupBy': [[0, 11, False]], 'having': [], 'orderBy': ['desc', [[0, [3, 0, False], None]]], 'limit': 1, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "employee_hire_evaluation",
    "query": "SELECT t2.name FROM hiring AS t1 JOIN shop AS t2 ON t1.shop_id  =  t2.shop_id GROUP BY t1.shop_id ORDER BY count(*) DESC LIMIT 1",
    "query_toks": "['SELECT', 't2.name', 'FROM', 'hiring', 'AS', 't1', 'JOIN', 'shop', 'AS', 't2', 'ON', 't1.shop_id', '=', 't2.shop_id', 'GROUP', 'BY', 't1.shop_id', 'ORDER', 'BY', 'count', '(', '*', ')', 'DESC', 'LIMIT', '1']",
    "query_toks_no_value": "['select', 't2', '.', 'name', 'from', 'hiring', 'as', 't1', 'join', 'shop', 'as', 't2', 'on', 't1', '.', 'shop_id', '=', 't2', '.', 'shop_id', 'group', 'by', 't1', '.', 'shop_id', 'order', 'by', 'count', '(', '*', ')', 'desc', 'limit', 'value']",
    "question": "Which shop has the most employees? Give me the shop name.",
    "question_th": "ร้านไหนมีพนักงานมากที่สุด? แจ้งชื่อร้านครับ.",
    "question_toks": "['Which', 'shop', 'has', 'the', 'most', 'employees', '?', 'Give', 'me', 'the', 'shop', 'name', '.']",
    "sql": "{'from': {'table_units': [['table_unit', 2], ['table_unit', 1]], 'conds': [[False, 2, [0, [0, 11, False], None], [0, 5, False], None]]}, 'select': [False, [[0, [0, [0, 6, False], None]]]], 'where': [], 'groupBy': [[0, 11, False]], 'having': [], 'orderBy': ['desc', [[0, [3, 0, False], None]]], 'limit': 1, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "employee_hire_evaluation",
    "query": "SELECT name FROM shop WHERE shop_id NOT IN (SELECT shop_id FROM hiring)",
    "query_toks": "['SELECT', 'name', 'FROM', 'shop', 'WHERE', 'shop_id', 'NOT', 'IN', '(', 'SELECT', 'shop_id', 'FROM', 'hiring', ')']",
    "query_toks_no_value": "['select', 'name', 'from', 'shop', 'where', 'shop_id', 'not', 'in', '(', 'select', 'shop_id', 'from', 'hiring', ')']",
    "question": "Find the name of the shops that do not hire any employee.",
    "question_th": "ค้นหาชื่อร้านค้าที่ไม่จ้างพนักงานคนใด",
    "question_toks": "['Find', 'the', 'name', 'of', 'the', 'shops', 'that', 'do', 'not', 'hire', 'any', 'employee', '.']",
    "sql": "{'from': {'table_units': [['table_unit', 1]], 'conds': []}, 'select': [False, [[0, [0, [0, 6, False], None]]]], 'where': [[True, 8, [0, [0, 5, False], None], {'from': {'table_units': [['table_unit', 2]], 'conds': []}, 'select': [False, [[0, [0, [0, 11, False], None]]]], 'where': [], 'groupBy': [], 'having': [], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}, None]], 'groupBy': [], 'having': [], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "employee_hire_evaluation",
    "query": "SELECT name FROM shop WHERE shop_id NOT IN (SELECT shop_id FROM hiring)",
    "query_toks": "['SELECT', 'name', 'FROM', 'shop', 'WHERE', 'shop_id', 'NOT', 'IN', '(', 'SELECT', 'shop_id', 'FROM', 'hiring', ')']",
    "query_toks_no_value": "['select', 'name', 'from', 'shop', 'where', 'shop_id', 'not', 'in', '(', 'select', 'shop_id', 'from', 'hiring', ')']",
    "question": "Which shops run with no employees? Find the shop names",
    "question_th": "ร้านไหนไม่มีพนักงาน? ค้นหาชื่อร้านค้า",
    "question_toks": "['Which', 'shops', 'run', 'with', 'no', 'employees', '?', 'Find', 'the', 'shop', 'names']",
    "sql": "{'from': {'table_units': [['table_unit', 1]], 'conds': []}, 'select': [False, [[0, [0, [0, 6, False], None]]]], 'where': [[True, 8, [0, [0, 5, False], None], {'from': {'table_units': [['table_unit', 2]], 'conds': []}, 'select': [False, [[0, [0, [0, 11, False], None]]]], 'where': [], 'groupBy': [], 'having': [], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}, None]], 'groupBy': [], 'having': [], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "employee_hire_evaluation",
    "query": "SELECT count(*) ,  t2.name FROM hiring AS t1 JOIN shop AS t2 ON t1.shop_id  =  t2.shop_id GROUP BY t2.name",
    "query_toks": "['SELECT', 'count', '(', '*', ')', ',', 't2.name', 'FROM', 'hiring', 'AS', 't1', 'JOIN', 'shop', 'AS', 't2', 'ON', 't1.shop_id', '=', 't2.shop_id', 'GROUP', 'BY', 't2.name']",
    "query_toks_no_value": "['select', 'count', '(', '*', ')', ',', 't2', '.', 'name', 'from', 'hiring', 'as', 't1', 'join', 'shop', 'as', 't2', 'on', 't1', '.', 'shop_id', '=', 't2', '.', 'shop_id', 'group', 'by', 't2', '.', 'name']",
    "question": "Find the number of employees hired in each shop; show the shop name as well.",
    "question_th": "ค้นหาจำนวนพนักงานที่ได้รับการว่าจ้างในแต่ละร้าน แสดงชื่อร้านด้วย",
    "question_toks": "['Find', 'the', 'number', 'of', 'employees', 'hired', 'in', 'each', 'shop', ';', 'show', 'the', 'shop', 'name', 'as', 'well', '.']",
    "sql": "{'from': {'table_units': [['table_unit', 2], ['table_unit', 1]], 'conds': [[False, 2, [0, [0, 11, False], None], [0, 5, False], None]]}, 'select': [False, [[3, [0, [0, 0, False], None]], [0, [0, [0, 6, False], None]]]], 'where': [], 'groupBy': [[0, 6, False]], 'having': [], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "employee_hire_evaluation",
    "query": "SELECT count(*) ,  t2.name FROM hiring AS t1 JOIN shop AS t2 ON t1.shop_id  =  t2.shop_id GROUP BY t2.name",
    "query_toks": "['SELECT', 'count', '(', '*', ')', ',', 't2.name', 'FROM', 'hiring', 'AS', 't1', 'JOIN', 'shop', 'AS', 't2', 'ON', 't1.shop_id', '=', 't2.shop_id', 'GROUP', 'BY', 't2.name']",
    "query_toks_no_value": "['select', 'count', '(', '*', ')', ',', 't2', '.', 'name', 'from', 'hiring', 'as', 't1', 'join', 'shop', 'as', 't2', 'on', 't1', '.', 'shop_id', '=', 't2', '.', 'shop_id', 'group', 'by', 't2', '.', 'name']",
    "question": "For each shop, return the number of employees working there and the name of the shop.",
    "question_th": "สำหรับร้านค้าแต่ละแห่ง ให้ส่งคืนจำนวนพนักงานที่ทำงานที่นั่นและชื่อร้านค้า",
    "question_toks": "['For', 'each', 'shop', ',', 'return', 'the', 'number', 'of', 'employees', 'working', 'there', 'and', 'the', 'name', 'of', 'the', 'shop', '.']",
    "sql": "{'from': {'table_units': [['table_unit', 2], ['table_unit', 1]], 'conds': [[False, 2, [0, [0, 11, False], None], [0, 5, False], None]]}, 'select': [False, [[3, [0, [0, 0, False], None]], [0, [0, [0, 6, False], None]]]], 'where': [], 'groupBy': [[0, 6, False]], 'having': [], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "employee_hire_evaluation",
    "query": "SELECT sum(bonus) FROM evaluation",
    "query_toks": "['SELECT', 'sum', '(', 'bonus', ')', 'FROM', 'evaluation']",
    "query_toks_no_value": "['select', 'sum', '(', 'bonus', ')', 'from', 'evaluation']",
    "question": "What is total bonus given in all evaluations?",
    "question_th": "โบนัสทั้งหมดที่มอบให้ในการประเมินทั้งหมดคือเท่าไร?",
    "question_toks": "['What', 'is', 'total', 'bonus', 'given', 'in', 'all', 'evaluations', '?']",
    "sql": "{'from': {'table_units': [['table_unit', 3]], 'conds': []}, 'select': [False, [[4, [0, [0, 17, False], None]]]], 'where': [], 'groupBy': [], 'having': [], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "employee_hire_evaluation",
    "query": "SELECT sum(bonus) FROM evaluation",
    "query_toks": "['SELECT', 'sum', '(', 'bonus', ')', 'FROM', 'evaluation']",
    "query_toks_no_value": "['select', 'sum', '(', 'bonus', ')', 'from', 'evaluation']",
    "question": "Find the total amount of bonus given in all the evaluations.",
    "question_th": "ค้นหาจำนวนโบนัสทั้งหมดที่ได้รับจากการประเมินทั้งหมด",
    "question_toks": "['Find', 'the', 'total', 'amount', 'of', 'bonus', 'given', 'in', 'all', 'the', 'evaluations', '.']",
    "sql": "{'from': {'table_units': [['table_unit', 3]], 'conds': []}, 'select': [False, [[4, [0, [0, 17, False], None]]]], 'where': [], 'groupBy': [], 'having': [], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "employee_hire_evaluation",
    "query": "SELECT * FROM hiring",
    "query_toks": "['SELECT', '*', 'FROM', 'hiring']",
    "query_toks_no_value": "['select', '*', 'from', 'hiring']",
    "question": "Give me all the information about hiring.",
    "question_th": "ให้ข้อมูลทั้งหมดเกี่ยวกับการจ้างงานแก่ฉัน",
    "question_toks": "['Give', 'me', 'all', 'the', 'information', 'about', 'hiring', '.']",
    "sql": "{'from': {'table_units': [['table_unit', 2]], 'conds': []}, 'select': [False, [[0, [0, [0, 0, False], None]]]], 'where': [], 'groupBy': [], 'having': [], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "employee_hire_evaluation",
    "query": "SELECT * FROM hiring",
    "query_toks": "['SELECT', '*', 'FROM', 'hiring']",
    "query_toks_no_value": "['select', '*', 'from', 'hiring']",
    "question": "What is all the information about hiring?",
    "question_th": "ข้อมูลทั้งหมดเกี่ยวกับการจ้างงานคืออะไร?",
    "question_toks": "['What', 'is', 'all', 'the', 'information', 'about', 'hiring', '?']",
    "sql": "{'from': {'table_units': [['table_unit', 2]], 'conds': []}, 'select': [False, [[0, [0, [0, 0, False], None]]]], 'where': [], 'groupBy': [], 'having': [], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "employee_hire_evaluation",
    "query": "SELECT district FROM shop WHERE Number_products  <  3000 INTERSECT SELECT district FROM shop WHERE Number_products  >  10000",
    "query_toks": "['SELECT', 'district', 'FROM', 'shop', 'WHERE', 'Number_products', '<', '3000', 'INTERSECT', 'SELECT', 'district', 'FROM', 'shop', 'WHERE', 'Number_products', '>', '10000']",
    "query_toks_no_value": "['select', 'district', 'from', 'shop', 'where', 'number_products', '<', 'value', 'intersect', 'select', 'district', 'from', 'shop', 'where', 'number_products', '>', 'value']",
    "question": "Which district has both stores with less than 3000 products and stores with more than 10000 products?",
    "question_th": "เขตใดมีทั้งร้านค้าที่มีสินค้าน้อยกว่า 3,000 รายการและร้านค้าที่มีสินค้ามากกว่า 10,000 รายการ",
    "question_toks": "['Which', 'district', 'has', 'both', 'stores', 'with', 'less', 'than', '3000', 'products', 'and', 'stores', 'with', 'more', 'than', '10000', 'products', '?']",
    "sql": "{'from': {'table_units': [['table_unit', 1]], 'conds': []}, 'select': [False, [[0, [0, [0, 8, False], None]]]], 'where': [[False, 4, [0, [0, 9, False], None], 3000.0, None]], 'groupBy': [], 'having': [], 'orderBy': [], 'limit': None, 'intersect': {'from': {'table_units': [['table_unit', 1]], 'conds': []}, 'select': [False, [[0, [0, [0, 8, False], None]]]], 'where': [[False, 3, [0, [0, 9, False], None], 10000.0, None]], 'groupBy': [], 'having': [], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}, 'union': None, 'except': None}"
  },
  {
    "db_id": "employee_hire_evaluation",
    "query": "SELECT district FROM shop WHERE Number_products  <  3000 INTERSECT SELECT district FROM shop WHERE Number_products  >  10000",
    "query_toks": "['SELECT', 'district', 'FROM', 'shop', 'WHERE', 'Number_products', '<', '3000', 'INTERSECT', 'SELECT', 'district', 'FROM', 'shop', 'WHERE', 'Number_products', '>', '10000']",
    "query_toks_no_value": "['select', 'district', 'from', 'shop', 'where', 'number_products', '<', 'value', 'intersect', 'select', 'district', 'from', 'shop', 'where', 'number_products', '>', 'value']",
    "question": "Find the districts in which there are both shops selling less than 3000 products and shops selling more than 10000 products.",
    "question_th": "ค้นหาเขตที่มีทั้งร้านค้าที่จำหน่ายสินค้าน้อยกว่า 3,000 รายการ และร้านค้าที่จำหน่ายสินค้ามากกว่า 10,000 รายการ",
    "question_toks": "['Find', 'the', 'districts', 'in', 'which', 'there', 'are', 'both', 'shops', 'selling', 'less', 'than', '3000', 'products', 'and', 'shops', 'selling', 'more', 'than', '10000', 'products', '.']",
    "sql": "{'from': {'table_units': [['table_unit', 1]], 'conds': []}, 'select': [False, [[0, [0, [0, 8, False], None]]]], 'where': [[False, 4, [0, [0, 9, False], None], 3000.0, None]], 'groupBy': [], 'having': [], 'orderBy': [], 'limit': None, 'intersect': {'from': {'table_units': [['table_unit', 1]], 'conds': []}, 'select': [False, [[0, [0, [0, 8, False], None]]]], 'where': [[False, 3, [0, [0, 9, False], None], 10000.0, None]], 'groupBy': [], 'having': [], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}, 'union': None, 'except': None}"
  },
  {
    "db_id": "employee_hire_evaluation",
    "query": "SELECT count(DISTINCT LOCATION) FROM shop",
    "query_toks": "['SELECT', 'count', '(', 'DISTINCT', 'LOCATION', ')', 'FROM', 'shop']",
    "query_toks_no_value": "['select', 'count', '(', 'distinct', 'location', ')', 'from', 'shop']",
    "question": "How many different store locations are there?",
    "question_th": "มีร้านค้าที่แตกต่างกันกี่แห่ง?",
    "question_toks": "['How', 'many', 'different', 'store', 'locations', 'are', 'there', '?']",
    "sql": "{'from': {'table_units': [['table_unit', 1]], 'conds': []}, 'select': [False, [[3, [0, [0, 7, True], None]]]], 'where': [], 'groupBy': [], 'having': [], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "employee_hire_evaluation",
    "query": "SELECT count(DISTINCT LOCATION) FROM shop",
    "query_toks": "['SELECT', 'count', '(', 'DISTINCT', 'LOCATION', ')', 'FROM', 'shop']",
    "query_toks_no_value": "['select', 'count', '(', 'distinct', 'location', ')', 'from', 'shop']",
    "question": "Count the number of distinct store locations.",
    "question_th": "นับจำนวนที่ตั้งร้านค้าที่แตกต่างกัน",
    "question_toks": "['Count', 'the', 'number', 'of', 'distinct', 'store', 'locations', '.']",
    "sql": "{'from': {'table_units': [['table_unit', 1]], 'conds': []}, 'select': [False, [[3, [0, [0, 7, True], None]]]], 'where': [], 'groupBy': [], 'having': [], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "cre_Doc_Template_Mgt",
    "query": "SELECT count(*) FROM Documents",
    "query_toks": "['SELECT', 'count', '(', '*', ')', 'FROM', 'Documents']",
    "query_toks_no_value": "['select', 'count', '(', '*', ')', 'from', 'documents']",
    "question": "How many documents do we have?",
    "question_th": "เรามีเอกสารกี่ฉบับ?",
    "question_toks": "['How', 'many', 'documents', 'do', 'we', 'have', '?']",
    "sql": "{'from': {'table_units': [['table_unit', 2]], 'conds': []}, 'select': [False, [[3, [0, [0, 0, False], None]]]], 'where': [], 'groupBy': [], 'having': [], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "cre_Doc_Template_Mgt",
    "query": "SELECT count(*) FROM Documents",
    "query_toks": "['SELECT', 'count', '(', '*', ')', 'FROM', 'Documents']",
    "query_toks_no_value": "['select', 'count', '(', '*', ')', 'from', 'documents']",
    "question": "Count the number of documents.",
    "question_th": "นับจำนวนเอกสาร",
    "question_toks": "['Count', 'the', 'number', 'of', 'documents', '.']",
    "sql": "{'from': {'table_units': [['table_unit', 2]], 'conds': []}, 'select': [False, [[3, [0, [0, 0, False], None]]]], 'where': [], 'groupBy': [], 'having': [], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "cre_Doc_Template_Mgt",
    "query": "SELECT document_id ,  document_name ,  document_description FROM Documents",
    "query_toks": "['SELECT', 'document_id', ',', 'document_name', ',', 'document_description', 'FROM', 'Documents']",
    "query_toks_no_value": "['select', 'document_id', ',', 'document_name', ',', 'document_description', 'from', 'documents']",
    "question": "List document IDs, document names, and document descriptions for all documents.",
    "question_th": "แสดงรายการ ID เอกสาร ชื่อเอกสาร และคำอธิบายเอกสารสำหรับเอกสารทั้งหมด",
    "question_toks": "['List', 'document', 'IDs', ',', 'document', 'names', ',', 'and', 'document', 'descriptions', 'for', 'all', 'documents', '.']",
    "sql": "{'from': {'table_units': [['table_unit', 2]], 'conds': []}, 'select': [False, [[0, [0, [0, 9, False], None]], [0, [0, [0, 11, False], None]], [0, [0, [0, 12, False], None]]]], 'where': [], 'groupBy': [], 'having': [], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "cre_Doc_Template_Mgt",
    "query": "SELECT document_id ,  document_name ,  document_description FROM Documents",
    "query_toks": "['SELECT', 'document_id', ',', 'document_name', ',', 'document_description', 'FROM', 'Documents']",
    "query_toks_no_value": "['select', 'document_id', ',', 'document_name', ',', 'document_description', 'from', 'documents']",
    "question": "What are the ids, names, and descriptions for all documents?",
    "question_th": "รหัส ชื่อ และคำอธิบายสำหรับเอกสารทั้งหมดคืออะไร",
    "question_toks": "['What', 'are', 'the', 'ids', ',', 'names', ',', 'and', 'descriptions', 'for', 'all', 'documents', '?']",
    "sql": "{'from': {'table_units': [['table_unit', 2]], 'conds': []}, 'select': [False, [[0, [0, [0, 9, False], None]], [0, [0, [0, 11, False], None]], [0, [0, [0, 12, False], None]]]], 'where': [], 'groupBy': [], 'having': [], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "cre_Doc_Template_Mgt",
    "query": "SELECT document_name ,  template_id FROM Documents WHERE Document_Description LIKE \"%w%\"",
    "query_toks": "['SELECT', 'document_name', ',', 'template_id', 'FROM', 'Documents', 'WHERE', 'Document_Description', 'LIKE', '``', '%', 'w', '%', \"''\"]",
    "query_toks_no_value": "['select', 'document_name', ',', 'template_id', 'from', 'documents', 'where', 'document_description', 'like', 'value']",
    "question": "What is the document name and template id for document with description with the letter 'w' in it?",
    "question_th": "ชื่อเอกสารและรหัสเทมเพลตสำหรับเอกสารที่มีคำอธิบายมีตัวอักษร 'w' อยู่ในนั้นคืออะไร",
    "question_toks": "['What', 'is', 'the', 'document', 'name', 'and', 'template', 'id', 'for', 'document', 'with', 'description', 'with', 'the', 'letter', \"'w\", \"'\", 'in', 'it', '?']",
    "sql": "{'from': {'table_units': [['table_unit', 2]], 'conds': []}, 'select': [False, [[0, [0, [0, 11, False], None]], [0, [0, [0, 10, False], None]]]], 'where': [[False, 9, [0, [0, 12, False], None], '\"%w%\"', None]], 'groupBy': [], 'having': [], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "cre_Doc_Template_Mgt",
    "query": "SELECT document_name ,  template_id FROM Documents WHERE Document_Description LIKE \"%w%\"",
    "query_toks": "['SELECT', 'document_name', ',', 'template_id', 'FROM', 'Documents', 'WHERE', 'Document_Description', 'LIKE', '``', '%', 'w', '%', \"''\"]",
    "query_toks_no_value": "['select', 'document_name', ',', 'template_id', 'from', 'documents', 'where', 'document_description', 'like', 'value']",
    "question": "Return the names and template ids for documents that contain the letter w in their description.",
    "question_th": "ส่งกลับชื่อและรหัสเทมเพลตสำหรับเอกสารที่มีตัวอักษร w อยู่ในคำอธิบาย",
    "question_toks": "['Return', 'the', 'names', 'and', 'template', 'ids', 'for', 'documents', 'that', 'contain', 'the', 'letter', 'w', 'in', 'their', 'description', '.']",
    "sql": "{'from': {'table_units': [['table_unit', 2]], 'conds': []}, 'select': [False, [[0, [0, [0, 11, False], None]], [0, [0, [0, 10, False], None]]]], 'where': [[False, 9, [0, [0, 12, False], None], '\"%w%\"', None]], 'groupBy': [], 'having': [], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "cre_Doc_Template_Mgt",
    "query": "SELECT document_id ,  template_id ,  Document_Description FROM Documents WHERE document_name  =  \"Robbin CV\"",
    "query_toks": "['SELECT', 'document_id', ',', 'template_id', ',', 'Document_Description', 'FROM', 'Documents', 'WHERE', 'document_name', '=', '``', 'Robbin', 'CV', \"''\"]",
    "query_toks_no_value": "['select', 'document_id', ',', 'template_id', ',', 'document_description', 'from', 'documents', 'where', 'document_name', '=', 'value']",
    "question": "What is the document id, template id and description for document named \"Robbin CV\"?",
    "question_th": "รหัสเอกสาร รหัสเทมเพลต และคำอธิบายสำหรับเอกสารชื่อ \"Robbin CV\" คืออะไร",
    "question_toks": "['What', 'is', 'the', 'document', 'id', ',', 'template', 'id', 'and', 'description', 'for', 'document', 'named', '``', 'Robbin', 'CV', \"''\", '?']",
    "sql": "{'from': {'table_units': [['table_unit', 2]], 'conds': []}, 'select': [False, [[0, [0, [0, 9, False], None]], [0, [0, [0, 10, False], None]], [0, [0, [0, 12, False], None]]]], 'where': [[False, 2, [0, [0, 11, False], None], '\"Robbin CV\"', None]], 'groupBy': [], 'having': [], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "cre_Doc_Template_Mgt",
    "query": "SELECT document_id ,  template_id ,  Document_Description FROM Documents WHERE document_name  =  \"Robbin CV\"",
    "query_toks": "['SELECT', 'document_id', ',', 'template_id', ',', 'Document_Description', 'FROM', 'Documents', 'WHERE', 'document_name', '=', '``', 'Robbin', 'CV', \"''\"]",
    "query_toks_no_value": "['select', 'document_id', ',', 'template_id', ',', 'document_description', 'from', 'documents', 'where', 'document_name', '=', 'value']",
    "question": "Return the document id, template id, and description for the document with the name Robbin CV.",
    "question_th": "ส่งกลับรหัสเอกสาร รหัสเทมเพลต และคำอธิบายสำหรับเอกสารชื่อ Robbin CV",
    "question_toks": "['Return', 'the', 'document', 'id', ',', 'template', 'id', ',', 'and', 'description', 'for', 'the', 'document', 'with', 'the', 'name', 'Robbin', 'CV', '.']",
    "sql": "{'from': {'table_units': [['table_unit', 2]], 'conds': []}, 'select': [False, [[0, [0, [0, 9, False], None]], [0, [0, [0, 10, False], None]], [0, [0, [0, 12, False], None]]]], 'where': [[False, 2, [0, [0, 11, False], None], '\"Robbin CV\"', None]], 'groupBy': [], 'having': [], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "cre_Doc_Template_Mgt",
    "query": "SELECT count(DISTINCT template_id) FROM Documents",
    "query_toks": "['SELECT', 'count', '(', 'DISTINCT', 'template_id', ')', 'FROM', 'Documents']",
    "query_toks_no_value": "['select', 'count', '(', 'distinct', 'template_id', ')', 'from', 'documents']",
    "question": "How many different templates do all document use?",
    "question_th": "เอกสารทั้งหมดใช้เทมเพลตที่แตกต่างกันกี่แบบ",
    "question_toks": "['How', 'many', 'different', 'templates', 'do', 'all', 'document', 'use', '?']",
    "sql": "{'from': {'table_units': [['table_unit', 2]], 'conds': []}, 'select': [False, [[3, [0, [0, 10, True], None]]]], 'where': [], 'groupBy': [], 'having': [], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "cre_Doc_Template_Mgt",
    "query": "SELECT count(DISTINCT template_id) FROM Documents",
    "query_toks": "['SELECT', 'count', '(', 'DISTINCT', 'template_id', ')', 'FROM', 'Documents']",
    "query_toks_no_value": "['select', 'count', '(', 'distinct', 'template_id', ')', 'from', 'documents']",
    "question": "Count the number of different templates used for documents.",
    "question_th": "นับจำนวนเทมเพลตต่างๆ ที่ใช้สำหรับเอกสาร",
    "question_toks": "['Count', 'the', 'number', 'of', 'different', 'templates', 'used', 'for', 'documents', '.']",
    "sql": "{'from': {'table_units': [['table_unit', 2]], 'conds': []}, 'select': [False, [[3, [0, [0, 10, True], None]]]], 'where': [], 'groupBy': [], 'having': [], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "cre_Doc_Template_Mgt",
    "query": "SELECT count(*) FROM Documents AS T1 JOIN Templates AS T2 ON T1.Template_ID  =  T2.Template_ID WHERE T2.Template_Type_Code  =  'PPT'",
    "query_toks": "['SELECT', 'count', '(', '*', ')', 'FROM', 'Documents', 'AS', 'T1', 'JOIN', 'Templates', 'AS', 'T2', 'ON', 'T1.Template_ID', '=', 'T2.Template_ID', 'WHERE', 'T2.Template_Type_Code', '=', \"'PPT\", \"'\"]",
    "query_toks_no_value": "['select', 'count', '(', '*', ')', 'from', 'documents', 'as', 't1', 'join', 'templates', 'as', 't2', 'on', 't1', '.', 'template_id', '=', 't2', '.', 'template_id', 'where', 't2', '.', 'template_type_code', '=', 'value']",
    "question": "How many documents are using the template with type code 'PPT'?",
    "question_th": "มีเอกสารกี่ฉบับที่ใช้เทมเพลตที่มีรหัสประเภท 'PPT'",
    "question_toks": "['How', 'many', 'documents', 'are', 'using', 'the', 'template', 'with', 'type', 'code', \"'PPT\", \"'\", '?']",
    "sql": "{'from': {'table_units': [['table_unit', 2], ['table_unit', 1]], 'conds': [[False, 2, [0, [0, 10, False], None], [0, 3, False], None]]}, 'select': [False, [[3, [0, [0, 0, False], None]]]], 'where': [[False, 2, [0, [0, 5, False], None], '\"PPT\"', None]], 'groupBy': [], 'having': [], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "cre_Doc_Template_Mgt",
    "query": "SELECT count(*) FROM Documents AS T1 JOIN Templates AS T2 ON T1.Template_ID  =  T2.Template_ID WHERE T2.Template_Type_Code  =  'PPT'",
    "query_toks": "['SELECT', 'count', '(', '*', ')', 'FROM', 'Documents', 'AS', 'T1', 'JOIN', 'Templates', 'AS', 'T2', 'ON', 'T1.Template_ID', '=', 'T2.Template_ID', 'WHERE', 'T2.Template_Type_Code', '=', \"'PPT\", \"'\"]",
    "query_toks_no_value": "['select', 'count', '(', '*', ')', 'from', 'documents', 'as', 't1', 'join', 'templates', 'as', 't2', 'on', 't1', '.', 'template_id', '=', 't2', '.', 'template_id', 'where', 't2', '.', 'template_type_code', '=', 'value']",
    "question": "Count the number of documents that use the PPT template type.",
    "question_th": "นับจำนวนเอกสารที่ใช้ประเภทเทมเพลต PPT",
    "question_toks": "['Count', 'the', 'number', 'of', 'documents', 'that', 'use', 'the', 'PPT', 'template', 'type', '.']",
    "sql": "{'from': {'table_units': [['table_unit', 2], ['table_unit', 1]], 'conds': [[False, 2, [0, [0, 10, False], None], [0, 3, False], None]]}, 'select': [False, [[3, [0, [0, 0, False], None]]]], 'where': [[False, 2, [0, [0, 5, False], None], '\"PPT\"', None]], 'groupBy': [], 'having': [], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "cre_Doc_Template_Mgt",
    "query": "SELECT template_id ,  count(*) FROM Documents GROUP BY template_id",
    "query_toks": "['SELECT', 'template_id', ',', 'count', '(', '*', ')', 'FROM', 'Documents', 'GROUP', 'BY', 'template_id']",
    "query_toks_no_value": "['select', 'template_id', ',', 'count', '(', '*', ')', 'from', 'documents', 'group', 'by', 'template_id']",
    "question": "Show all template ids and number of documents using each template.",
    "question_th": "แสดงรหัสเทมเพลตทั้งหมดและจำนวนเอกสารโดยใช้แต่ละเทมเพลต",
    "question_toks": "['Show', 'all', 'template', 'ids', 'and', 'number', 'of', 'documents', 'using', 'each', 'template', '.']",
    "sql": "{'from': {'table_units': [['table_unit', 2]], 'conds': []}, 'select': [False, [[0, [0, [0, 10, False], None]], [3, [0, [0, 0, False], None]]]], 'where': [], 'groupBy': [[0, 10, False]], 'having': [], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "cre_Doc_Template_Mgt",
    "query": "SELECT template_id ,  count(*) FROM Documents GROUP BY template_id",
    "query_toks": "['SELECT', 'template_id', ',', 'count', '(', '*', ')', 'FROM', 'Documents', 'GROUP', 'BY', 'template_id']",
    "query_toks_no_value": "['select', 'template_id', ',', 'count', '(', '*', ')', 'from', 'documents', 'group', 'by', 'template_id']",
    "question": "What are all different template ids used for documents, and how many times were each of them used?",
    "question_th": "รหัสเทมเพลตที่แตกต่างกันทั้งหมดที่ใช้สำหรับเอกสารคืออะไร และแต่ละรหัสถูกใช้กี่ครั้ง",
    "question_toks": "['What', 'are', 'all', 'different', 'template', 'ids', 'used', 'for', 'documents', ',', 'and', 'how', 'many', 'times', 'were', 'each', 'of', 'them', 'used', '?']",
    "sql": "{'from': {'table_units': [['table_unit', 2]], 'conds': []}, 'select': [False, [[0, [0, [0, 10, False], None]], [3, [0, [0, 0, False], None]]]], 'where': [], 'groupBy': [[0, 10, False]], 'having': [], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "cre_Doc_Template_Mgt",
    "query": "SELECT T1.template_id ,  T2.Template_Type_Code FROM Documents AS T1 JOIN Templates AS T2 ON T1.template_id  =  T2.template_id GROUP BY T1.template_id ORDER BY count(*) DESC LIMIT 1",
    "query_toks": "['SELECT', 'T1.template_id', ',', 'T2.Template_Type_Code', 'FROM', 'Documents', 'AS', 'T1', 'JOIN', 'Templates', 'AS', 'T2', 'ON', 'T1.template_id', '=', 'T2.template_id', 'GROUP', 'BY', 'T1.template_id', 'ORDER', 'BY', 'count', '(', '*', ')', 'DESC', 'LIMIT', '1']",
    "query_toks_no_value": "['select', 't1', '.', 'template_id', ',', 't2', '.', 'template_type_code', 'from', 'documents', 'as', 't1', 'join', 'templates', 'as', 't2', 'on', 't1', '.', 'template_id', '=', 't2', '.', 'template_id', 'group', 'by', 't1', '.', 'template_id', 'order', 'by', 'count', '(', '*', ')', 'desc', 'limit', 'value']",
    "question": "What is the id and type code for the template used by the most documents?",
    "question_th": "รหัสประจำตัวและรหัสประเภทสำหรับเทมเพลตที่ใช้โดยเอกสารส่วนใหญ่คืออะไร",
    "question_toks": "['What', 'is', 'the', 'id', 'and', 'type', 'code', 'for', 'the', 'template', 'used', 'by', 'the', 'most', 'documents', '?']",
    "sql": "{'from': {'table_units': [['table_unit', 2], ['table_unit', 1]], 'conds': [[False, 2, [0, [0, 10, False], None], [0, 3, False], None]]}, 'select': [False, [[0, [0, [0, 10, False], None]], [0, [0, [0, 5, False], None]]]], 'where': [], 'groupBy': [[0, 10, False]], 'having': [], 'orderBy': ['desc', [[0, [3, 0, False], None]]], 'limit': 1, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "cre_Doc_Template_Mgt",
    "query": "SELECT T1.template_id ,  T2.Template_Type_Code FROM Documents AS T1 JOIN Templates AS T2 ON T1.template_id  =  T2.template_id GROUP BY T1.template_id ORDER BY count(*) DESC LIMIT 1",
    "query_toks": "['SELECT', 'T1.template_id', ',', 'T2.Template_Type_Code', 'FROM', 'Documents', 'AS', 'T1', 'JOIN', 'Templates', 'AS', 'T2', 'ON', 'T1.template_id', '=', 'T2.template_id', 'GROUP', 'BY', 'T1.template_id', 'ORDER', 'BY', 'count', '(', '*', ')', 'DESC', 'LIMIT', '1']",
    "query_toks_no_value": "['select', 't1', '.', 'template_id', ',', 't2', '.', 'template_type_code', 'from', 'documents', 'as', 't1', 'join', 'templates', 'as', 't2', 'on', 't1', '.', 'template_id', '=', 't2', '.', 'template_id', 'group', 'by', 't1', '.', 'template_id', 'order', 'by', 'count', '(', '*', ')', 'desc', 'limit', 'value']",
    "question": "Return the id and type code of the template that is used for the greatest number of documents.",
    "question_th": "ส่งคืนรหัสและรหัสประเภทของเทมเพลตที่ใช้กับเอกสารจำนวนมากที่สุด",
    "question_toks": "['Return', 'the', 'id', 'and', 'type', 'code', 'of', 'the', 'template', 'that', 'is', 'used', 'for', 'the', 'greatest', 'number', 'of', 'documents', '.']",
    "sql": "{'from': {'table_units': [['table_unit', 2], ['table_unit', 1]], 'conds': [[False, 2, [0, [0, 10, False], None], [0, 3, False], None]]}, 'select': [False, [[0, [0, [0, 10, False], None]], [0, [0, [0, 5, False], None]]]], 'where': [], 'groupBy': [[0, 10, False]], 'having': [], 'orderBy': ['desc', [[0, [3, 0, False], None]]], 'limit': 1, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "cre_Doc_Template_Mgt",
    "query": "SELECT template_id FROM Documents GROUP BY template_id HAVING count(*)  >  1",
    "query_toks": "['SELECT', 'template_id', 'FROM', 'Documents', 'GROUP', 'BY', 'template_id', 'HAVING', 'count', '(', '*', ')', '>', '1']",
    "query_toks_no_value": "['select', 'template_id', 'from', 'documents', 'group', 'by', 'template_id', 'having', 'count', '(', '*', ')', '>', 'value']",
    "question": "Show ids for all templates that are used by more than one document.",
    "question_th": "แสดงรหัสสำหรับเทมเพลตทั้งหมดที่ใช้โดยเอกสารมากกว่าหนึ่งรายการ",
    "question_toks": "['Show', 'ids', 'for', 'all', 'templates', 'that', 'are', 'used', 'by', 'more', 'than', 'one', 'document', '.']",
    "sql": "{'from': {'table_units': [['table_unit', 2]], 'conds': []}, 'select': [False, [[0, [0, [0, 10, False], None]]]], 'where': [], 'groupBy': [[0, 10, False]], 'having': [[False, 3, [0, [3, 0, False], None], 1.0, None]], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "cre_Doc_Template_Mgt",
    "query": "SELECT template_id FROM Documents GROUP BY template_id HAVING count(*)  >  1",
    "query_toks": "['SELECT', 'template_id', 'FROM', 'Documents', 'GROUP', 'BY', 'template_id', 'HAVING', 'count', '(', '*', ')', '>', '1']",
    "query_toks_no_value": "['select', 'template_id', 'from', 'documents', 'group', 'by', 'template_id', 'having', 'count', '(', '*', ')', '>', 'value']",
    "question": "What are the template ids of any templates used in more than a single document?",
    "question_th": "รหัสเทมเพลตของเทมเพลตที่ใช้ในเอกสารมากกว่าหนึ่งฉบับคืออะไร",
    "question_toks": "['What', 'are', 'the', 'template', 'ids', 'of', 'any', 'templates', 'used', 'in', 'more', 'than', 'a', 'single', 'document', '?']",
    "sql": "{'from': {'table_units': [['table_unit', 2]], 'conds': []}, 'select': [False, [[0, [0, [0, 10, False], None]]]], 'where': [], 'groupBy': [[0, 10, False]], 'having': [[False, 3, [0, [3, 0, False], None], 1.0, None]], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "cre_Doc_Template_Mgt",
    "query": "SELECT template_id FROM Templates EXCEPT SELECT template_id FROM Documents",
    "query_toks": "['SELECT', 'template_id', 'FROM', 'Templates', 'EXCEPT', 'SELECT', 'template_id', 'FROM', 'Documents']",
    "query_toks_no_value": "['select', 'template_id', 'from', 'templates', 'except', 'select', 'template_id', 'from', 'documents']",
    "question": "Show ids for all templates not used by any document.",
    "question_th": "แสดงรหัสสำหรับเทมเพลตทั้งหมดที่เอกสารใดไม่ได้ใช้",
    "question_toks": "['Show', 'ids', 'for', 'all', 'templates', 'not', 'used', 'by', 'any', 'document', '.']",
    "sql": "{'from': {'table_units': [['table_unit', 1]], 'conds': []}, 'select': [False, [[0, [0, [0, 3, False], None]]]], 'where': [], 'groupBy': [], 'having': [], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': {'from': {'table_units': [['table_unit', 2]], 'conds': []}, 'select': [False, [[0, [0, [0, 10, False], None]]]], 'where': [], 'groupBy': [], 'having': [], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}}"
  },
  {
    "db_id": "cre_Doc_Template_Mgt",
    "query": "SELECT template_id FROM Templates EXCEPT SELECT template_id FROM Documents",
    "query_toks": "['SELECT', 'template_id', 'FROM', 'Templates', 'EXCEPT', 'SELECT', 'template_id', 'FROM', 'Documents']",
    "query_toks_no_value": "['select', 'template_id', 'from', 'templates', 'except', 'select', 'template_id', 'from', 'documents']",
    "question": "What are the ids for templates that are not used in any documents?",
    "question_th": "รหัสสำหรับเทมเพลตที่ไม่ได้ใช้ในเอกสารใดๆ คืออะไร",
    "question_toks": "['What', 'are', 'the', 'ids', 'for', 'templates', 'that', 'are', 'not', 'used', 'in', 'any', 'documents', '?']",
    "sql": "{'from': {'table_units': [['table_unit', 1]], 'conds': []}, 'select': [False, [[0, [0, [0, 3, False], None]]]], 'where': [], 'groupBy': [], 'having': [], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': {'from': {'table_units': [['table_unit', 2]], 'conds': []}, 'select': [False, [[0, [0, [0, 10, False], None]]]], 'where': [], 'groupBy': [], 'having': [], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}}"
  },
  {
    "db_id": "cre_Doc_Template_Mgt",
    "query": "SELECT count(*) FROM Templates",
    "query_toks": "['SELECT', 'count', '(', '*', ')', 'FROM', 'Templates']",
    "query_toks_no_value": "['select', 'count', '(', '*', ')', 'from', 'templates']",
    "question": "How many templates do we have?",
    "question_th": "เรามีเทมเพลตกี่แบบ?",
    "question_toks": "['How', 'many', 'templates', 'do', 'we', 'have', '?']",
    "sql": "{'from': {'table_units': [['table_unit', 1]], 'conds': []}, 'select': [False, [[3, [0, [0, 0, False], None]]]], 'where': [], 'groupBy': [], 'having': [], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "cre_Doc_Template_Mgt",
    "query": "SELECT count(*) FROM Templates",
    "query_toks": "['SELECT', 'count', '(', '*', ')', 'FROM', 'Templates']",
    "query_toks_no_value": "['select', 'count', '(', '*', ')', 'from', 'templates']",
    "question": "Count the number of templates.",
    "question_th": "นับจำนวนเทมเพลต",
    "question_toks": "['Count', 'the', 'number', 'of', 'templates', '.']",
    "sql": "{'from': {'table_units': [['table_unit', 1]], 'conds': []}, 'select': [False, [[3, [0, [0, 0, False], None]]]], 'where': [], 'groupBy': [], 'having': [], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "cre_Doc_Template_Mgt",
    "query": "SELECT template_id ,  version_number ,  template_type_code FROM Templates",
    "query_toks": "['SELECT', 'template_id', ',', 'version_number', ',', 'template_type_code', 'FROM', 'Templates']",
    "query_toks_no_value": "['select', 'template_id', ',', 'version_number', ',', 'template_type_code', 'from', 'templates']",
    "question": "Show template ids, version numbers, and template type codes for all templates.",
    "question_th": "แสดงรหัสเทมเพลต หมายเลขเวอร์ชัน และรหัสประเภทเทมเพลตสำหรับเทมเพลตทั้งหมด",
    "question_toks": "['Show', 'template', 'ids', ',', 'version', 'numbers', ',', 'and', 'template', 'type', 'codes', 'for', 'all', 'templates', '.']",
    "sql": "{'from': {'table_units': [['table_unit', 1]], 'conds': []}, 'select': [False, [[0, [0, [0, 3, False], None]], [0, [0, [0, 4, False], None]], [0, [0, [0, 5, False], None]]]], 'where': [], 'groupBy': [], 'having': [], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "cre_Doc_Template_Mgt",
    "query": "SELECT template_id ,  version_number ,  template_type_code FROM Templates",
    "query_toks": "['SELECT', 'template_id', ',', 'version_number', ',', 'template_type_code', 'FROM', 'Templates']",
    "query_toks_no_value": "['select', 'template_id', ',', 'version_number', ',', 'template_type_code', 'from', 'templates']",
    "question": "What are the ids, version numbers, and type codes for each template?",
    "question_th": "รหัส หมายเลขเวอร์ชัน และรหัสประเภทสำหรับแต่ละเทมเพลตคืออะไร",
    "question_toks": "['What', 'are', 'the', 'ids', ',', 'version', 'numbers', ',', 'and', 'type', 'codes', 'for', 'each', 'template', '?']",
    "sql": "{'from': {'table_units': [['table_unit', 1]], 'conds': []}, 'select': [False, [[0, [0, [0, 3, False], None]], [0, [0, [0, 4, False], None]], [0, [0, [0, 5, False], None]]]], 'where': [], 'groupBy': [], 'having': [], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "cre_Doc_Template_Mgt",
    "query": "SELECT DISTINCT template_type_code FROM Templates",
    "query_toks": "['SELECT', 'DISTINCT', 'template_type_code', 'FROM', 'Templates']",
    "query_toks_no_value": "['select', 'distinct', 'template_type_code', 'from', 'templates']",
    "question": "Show all distinct template type codes for all templates.",
    "question_th": "แสดงรหัสประเภทเทมเพลตที่แตกต่างกันทั้งหมดสำหรับเทมเพลตทั้งหมด",
    "question_toks": "['Show', 'all', 'distinct', 'template', 'type', 'codes', 'for', 'all', 'templates', '.']",
    "sql": "{'from': {'table_units': [['table_unit', 1]], 'conds': []}, 'select': [True, [[0, [0, [0, 5, False], None]]]], 'where': [], 'groupBy': [], 'having': [], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "cre_Doc_Template_Mgt",
    "query": "SELECT DISTINCT template_type_code FROM Templates",
    "query_toks": "['SELECT', 'DISTINCT', 'template_type_code', 'FROM', 'Templates']",
    "query_toks_no_value": "['select', 'distinct', 'template_type_code', 'from', 'templates']",
    "question": "What are the different template type codes?",
    "question_th": "รหัสประเภทเทมเพลตที่แตกต่างกันคืออะไร",
    "question_toks": "['What', 'are', 'the', 'different', 'template', 'type', 'codes', '?']",
    "sql": "{'from': {'table_units': [['table_unit', 1]], 'conds': []}, 'select': [True, [[0, [0, [0, 5, False], None]]]], 'where': [], 'groupBy': [], 'having': [], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "cre_Doc_Template_Mgt",
    "query": "SELECT template_id FROM Templates WHERE template_type_code  =  \"PP\" OR template_type_code  =  \"PPT\"",
    "query_toks": "['SELECT', 'template_id', 'FROM', 'Templates', 'WHERE', 'template_type_code', '=', '``', 'PP', \"''\", 'OR', 'template_type_code', '=', '``', 'PPT', \"''\"]",
    "query_toks_no_value": "['select', 'template_id', 'from', 'templates', 'where', 'template_type_code', '=', 'value', 'or', 'template_type_code', '=', 'value']",
    "question": "What are the ids of templates with template type code PP or PPT?",
    "question_th": "รหัสของเทมเพลตที่มีรหัสประเภทเทมเพลต PP หรือ PPT คืออะไร",
    "question_toks": "['What', 'are', 'the', 'ids', 'of', 'templates', 'with', 'template', 'type', 'code', 'PP', 'or', 'PPT', '?']",
    "sql": "{'from': {'table_units': [['table_unit', 1]], 'conds': []}, 'select': [False, [[0, [0, [0, 3, False], None]]]], 'where': [[False, 2, [0, [0, 5, False], None], '\"PP\"', None], 'or', [False, 2, [0, [0, 5, False], None], '\"PPT\"', None]], 'groupBy': [], 'having': [], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "cre_Doc_Template_Mgt",
    "query": "SELECT template_id FROM Templates WHERE template_type_code  =  \"PP\" OR template_type_code  =  \"PPT\"",
    "query_toks": "['SELECT', 'template_id', 'FROM', 'Templates', 'WHERE', 'template_type_code', '=', '``', 'PP', \"''\", 'OR', 'template_type_code', '=', '``', 'PPT', \"''\"]",
    "query_toks_no_value": "['select', 'template_id', 'from', 'templates', 'where', 'template_type_code', '=', 'value', 'or', 'template_type_code', '=', 'value']",
    "question": "Return the ids of templates that have the code PP or PPT.",
    "question_th": "ส่งกลับรหัสของเทมเพลตที่มีรหัส PP หรือ PPT",
    "question_toks": "['Return', 'the', 'ids', 'of', 'templates', 'that', 'have', 'the', 'code', 'PP', 'or', 'PPT', '.']",
    "sql": "{'from': {'table_units': [['table_unit', 1]], 'conds': []}, 'select': [False, [[0, [0, [0, 3, False], None]]]], 'where': [[False, 2, [0, [0, 5, False], None], '\"PP\"', None], 'or', [False, 2, [0, [0, 5, False], None], '\"PPT\"', None]], 'groupBy': [], 'having': [], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "cre_Doc_Template_Mgt",
    "query": "SELECT count(*) FROM Templates WHERE template_type_code  =  \"CV\"",
    "query_toks": "['SELECT', 'count', '(', '*', ')', 'FROM', 'Templates', 'WHERE', 'template_type_code', '=', '``', 'CV', \"''\"]",
    "query_toks_no_value": "['select', 'count', '(', '*', ')', 'from', 'templates', 'where', 'template_type_code', '=', 'value']",
    "question": "How many templates have template type code CV?",
    "question_th": "มีเทมเพลตกี่แบบที่มีรหัสประเภทเทมเพลต CV",
    "question_toks": "['How', 'many', 'templates', 'have', 'template', 'type', 'code', 'CV', '?']",
    "sql": "{'from': {'table_units': [['table_unit', 1]], 'conds': []}, 'select': [False, [[3, [0, [0, 0, False], None]]]], 'where': [[False, 2, [0, [0, 5, False], None], '\"CV\"', None]], 'groupBy': [], 'having': [], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "cre_Doc_Template_Mgt",
    "query": "SELECT count(*) FROM Templates WHERE template_type_code  =  \"CV\"",
    "query_toks": "['SELECT', 'count', '(', '*', ')', 'FROM', 'Templates', 'WHERE', 'template_type_code', '=', '``', 'CV', \"''\"]",
    "query_toks_no_value": "['select', 'count', '(', '*', ')', 'from', 'templates', 'where', 'template_type_code', '=', 'value']",
    "question": "Count the number of templates of the type CV.",
    "question_th": "นับจำนวนเทมเพลตประเภท CV",
    "question_toks": "['Count', 'the', 'number', 'of', 'templates', 'of', 'the', 'type', 'CV', '.']",
    "sql": "{'from': {'table_units': [['table_unit', 1]], 'conds': []}, 'select': [False, [[3, [0, [0, 0, False], None]]]], 'where': [[False, 2, [0, [0, 5, False], None], '\"CV\"', None]], 'groupBy': [], 'having': [], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "cre_Doc_Template_Mgt",
    "query": "SELECT version_number ,  template_type_code FROM Templates WHERE version_number  >  5",
    "query_toks": "['SELECT', 'version_number', ',', 'template_type_code', 'FROM', 'Templates', 'WHERE', 'version_number', '>', '5']",
    "query_toks_no_value": "['select', 'version_number', ',', 'template_type_code', 'from', 'templates', 'where', 'version_number', '>', 'value']",
    "question": "What is the version number and template type code for the template with version number later than 5?",
    "question_th": "หมายเลขเวอร์ชันและรหัสประเภทเทมเพลตสำหรับเทมเพลตที่มีหมายเลขเวอร์ชันใหม่กว่า 5 คืออะไร",
    "question_toks": "['What', 'is', 'the', 'version', 'number', 'and', 'template', 'type', 'code', 'for', 'the', 'template', 'with', 'version', 'number', 'later', 'than', '5', '?']",
    "sql": "{'from': {'table_units': [['table_unit', 1]], 'conds': []}, 'select': [False, [[0, [0, [0, 4, False], None]], [0, [0, [0, 5, False], None]]]], 'where': [[False, 3, [0, [0, 4, False], None], 5.0, None]], 'groupBy': [], 'having': [], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "cre_Doc_Template_Mgt",
    "query": "SELECT version_number ,  template_type_code FROM Templates WHERE version_number  >  5",
    "query_toks": "['SELECT', 'version_number', ',', 'template_type_code', 'FROM', 'Templates', 'WHERE', 'version_number', '>', '5']",
    "query_toks_no_value": "['select', 'version_number', ',', 'template_type_code', 'from', 'templates', 'where', 'version_number', '>', 'value']",
    "question": "Return the version numbers and template type codes of templates with a version number greater than 5.",
    "question_th": "ส่งคืนหมายเลขเวอร์ชันและรหัสประเภทเทมเพลตของเทมเพลตที่มีหมายเลขเวอร์ชันมากกว่า 5",
    "question_toks": "['Return', 'the', 'version', 'numbers', 'and', 'template', 'type', 'codes', 'of', 'templates', 'with', 'a', 'version', 'number', 'greater', 'than', '5', '.']",
    "sql": "{'from': {'table_units': [['table_unit', 1]], 'conds': []}, 'select': [False, [[0, [0, [0, 4, False], None]], [0, [0, [0, 5, False], None]]]], 'where': [[False, 3, [0, [0, 4, False], None], 5.0, None]], 'groupBy': [], 'having': [], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "cre_Doc_Template_Mgt",
    "query": "SELECT template_type_code ,  count(*) FROM Templates GROUP BY template_type_code",
    "query_toks": "['SELECT', 'template_type_code', ',', 'count', '(', '*', ')', 'FROM', 'Templates', 'GROUP', 'BY', 'template_type_code']",
    "query_toks_no_value": "['select', 'template_type_code', ',', 'count', '(', '*', ')', 'from', 'templates', 'group', 'by', 'template_type_code']",
    "question": "Show all template type codes and number of templates for each.",
    "question_th": "แสดงรหัสประเภทเทมเพลตทั้งหมดและจำนวนเทมเพลตสำหรับแต่ละรายการ",
    "question_toks": "['Show', 'all', 'template', 'type', 'codes', 'and', 'number', 'of', 'templates', 'for', 'each', '.']",
    "sql": "{'from': {'table_units': [['table_unit', 1]], 'conds': []}, 'select': [False, [[0, [0, [0, 5, False], None]], [3, [0, [0, 0, False], None]]]], 'where': [], 'groupBy': [[0, 5, False]], 'having': [], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "cre_Doc_Template_Mgt",
    "query": "SELECT template_type_code ,  count(*) FROM Templates GROUP BY template_type_code",
    "query_toks": "['SELECT', 'template_type_code', ',', 'count', '(', '*', ')', 'FROM', 'Templates', 'GROUP', 'BY', 'template_type_code']",
    "query_toks_no_value": "['select', 'template_type_code', ',', 'count', '(', '*', ')', 'from', 'templates', 'group', 'by', 'template_type_code']",
    "question": "What are the different template type codes, and how many templates correspond to each?",
    "question_th": "รหัสประเภทเทมเพลตที่แตกต่างกันคืออะไร และมีกี่เทมเพลตที่สอดคล้องกับแต่ละประเภท",
    "question_toks": "['What', 'are', 'the', 'different', 'template', 'type', 'codes', ',', 'and', 'how', 'many', 'templates', 'correspond', 'to', 'each', '?']",
    "sql": "{'from': {'table_units': [['table_unit', 1]], 'conds': []}, 'select': [False, [[0, [0, [0, 5, False], None]], [3, [0, [0, 0, False], None]]]], 'where': [], 'groupBy': [[0, 5, False]], 'having': [], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "cre_Doc_Template_Mgt",
    "query": "SELECT template_type_code FROM Templates GROUP BY template_type_code ORDER BY count(*) DESC LIMIT 1",
    "query_toks": "['SELECT', 'template_type_code', 'FROM', 'Templates', 'GROUP', 'BY', 'template_type_code', 'ORDER', 'BY', 'count', '(', '*', ')', 'DESC', 'LIMIT', '1']",
    "query_toks_no_value": "['select', 'template_type_code', 'from', 'templates', 'group', 'by', 'template_type_code', 'order', 'by', 'count', '(', '*', ')', 'desc', 'limit', 'value']",
    "question": "Which template type code has most number of templates?",
    "question_th": "โค้ดประเภทเทมเพลตใดมีจำนวนเทมเพลตมากที่สุด",
    "question_toks": "['Which', 'template', 'type', 'code', 'has', 'most', 'number', 'of', 'templates', '?']",
    "sql": "{'from': {'table_units': [['table_unit', 1]], 'conds': []}, 'select': [False, [[0, [0, [0, 5, False], None]]]], 'where': [], 'groupBy': [[0, 5, False]], 'having': [], 'orderBy': ['desc', [[0, [3, 0, False], None]]], 'limit': 1, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "cre_Doc_Template_Mgt",
    "query": "SELECT template_type_code FROM Templates GROUP BY template_type_code ORDER BY count(*) DESC LIMIT 1",
    "query_toks": "['SELECT', 'template_type_code', 'FROM', 'Templates', 'GROUP', 'BY', 'template_type_code', 'ORDER', 'BY', 'count', '(', '*', ')', 'DESC', 'LIMIT', '1']",
    "query_toks_no_value": "['select', 'template_type_code', 'from', 'templates', 'group', 'by', 'template_type_code', 'order', 'by', 'count', '(', '*', ')', 'desc', 'limit', 'value']",
    "question": "Return the type code of the template type that the most templates belong to.",
    "question_th": "ส่งกลับรหัสประเภทของประเภทเทมเพลตที่มีเทมเพลตส่วนใหญ่อยู่",
    "question_toks": "['Return', 'the', 'type', 'code', 'of', 'the', 'template', 'type', 'that', 'the', 'most', 'templates', 'belong', 'to', '.']",
    "sql": "{'from': {'table_units': [['table_unit', 1]], 'conds': []}, 'select': [False, [[0, [0, [0, 5, False], None]]]], 'where': [], 'groupBy': [[0, 5, False]], 'having': [], 'orderBy': ['desc', [[0, [3, 0, False], None]]], 'limit': 1, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "cre_Doc_Template_Mgt",
    "query": "SELECT template_type_code FROM Templates GROUP BY template_type_code HAVING count(*)  <  3",
    "query_toks": "['SELECT', 'template_type_code', 'FROM', 'Templates', 'GROUP', 'BY', 'template_type_code', 'HAVING', 'count', '(', '*', ')', '<', '3']",
    "query_toks_no_value": "['select', 'template_type_code', 'from', 'templates', 'group', 'by', 'template_type_code', 'having', 'count', '(', '*', ')', '<', 'value']",
    "question": "Show all template type codes with less than three templates.",
    "question_th": "แสดงรหัสประเภทเทมเพลตทั้งหมดที่มีเทมเพลตน้อยกว่าสามเทมเพลต",
    "question_toks": "['Show', 'all', 'template', 'type', 'codes', 'with', 'less', 'than', 'three', 'templates', '.']",
    "sql": "{'from': {'table_units': [['table_unit', 1]], 'conds': []}, 'select': [False, [[0, [0, [0, 5, False], None]]]], 'where': [], 'groupBy': [[0, 5, False]], 'having': [[False, 4, [0, [3, 0, False], None], 3.0, None]], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "cre_Doc_Template_Mgt",
    "query": "SELECT template_type_code FROM Templates GROUP BY template_type_code HAVING count(*)  <  3",
    "query_toks": "['SELECT', 'template_type_code', 'FROM', 'Templates', 'GROUP', 'BY', 'template_type_code', 'HAVING', 'count', '(', '*', ')', '<', '3']",
    "query_toks_no_value": "['select', 'template_type_code', 'from', 'templates', 'group', 'by', 'template_type_code', 'having', 'count', '(', '*', ')', '<', 'value']",
    "question": "What are the codes of template types that have fewer than 3 templates?",
    "question_th": "รหัสประเภทเทมเพลตที่มีน้อยกว่า 3 เทมเพลตมีอะไรบ้าง",
    "question_toks": "['What', 'are', 'the', 'codes', 'of', 'template', 'types', 'that', 'have', 'fewer', 'than', '3', 'templates', '?']",
    "sql": "{'from': {'table_units': [['table_unit', 1]], 'conds': []}, 'select': [False, [[0, [0, [0, 5, False], None]]]], 'where': [], 'groupBy': [[0, 5, False]], 'having': [[False, 4, [0, [3, 0, False], None], 3.0, None]], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "cre_Doc_Template_Mgt",
    "query": "SELECT min(Version_Number) ,  template_type_code FROM Templates",
    "query_toks": "['SELECT', 'min', '(', 'Version_Number', ')', ',', 'template_type_code', 'FROM', 'Templates']",
    "query_toks_no_value": "['select', 'min', '(', 'version_number', ')', ',', 'template_type_code', 'from', 'templates']",
    "question": "What the smallest version number and its template type code?",
    "question_th": "หมายเลขเวอร์ชันที่เล็กที่สุดและรหัสประเภทเทมเพลตคืออะไร?",
    "question_toks": "['What', 'the', 'smallest', 'version', 'number', 'and', 'its', 'template', 'type', 'code', '?']",
    "sql": "{'from': {'table_units': [['table_unit', 1]], 'conds': []}, 'select': [False, [[2, [0, [0, 4, False], None]], [0, [0, [0, 5, False], None]]]], 'where': [], 'groupBy': [], 'having': [], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "cre_Doc_Template_Mgt",
    "query": "SELECT min(Version_Number) ,  template_type_code FROM Templates",
    "query_toks": "['SELECT', 'min', '(', 'Version_Number', ')', ',', 'template_type_code', 'FROM', 'Templates']",
    "query_toks_no_value": "['select', 'min', '(', 'version_number', ')', ',', 'template_type_code', 'from', 'templates']",
    "question": "Return the lowest version number, along with its corresponding template type code.",
    "question_th": "ส่งกลับหมายเลขเวอร์ชันต่ำสุด พร้อมด้วยรหัสประเภทเทมเพลตที่เกี่ยวข้อง",
    "question_toks": "['Return', 'the', 'lowest', 'version', 'number', ',', 'along', 'with', 'its', 'corresponding', 'template', 'type', 'code', '.']",
    "sql": "{'from': {'table_units': [['table_unit', 1]], 'conds': []}, 'select': [False, [[2, [0, [0, 4, False], None]], [0, [0, [0, 5, False], None]]]], 'where': [], 'groupBy': [], 'having': [], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "cre_Doc_Template_Mgt",
    "query": "SELECT T1.template_type_code FROM Templates AS T1 JOIN Documents AS T2 ON T1.template_id  =  T2.template_id WHERE T2.document_name  =  \"Data base\"",
    "query_toks": "['SELECT', 'T1.template_type_code', 'FROM', 'Templates', 'AS', 'T1', 'JOIN', 'Documents', 'AS', 'T2', 'ON', 'T1.template_id', '=', 'T2.template_id', 'WHERE', 'T2.document_name', '=', '``', 'Data', 'base', \"''\"]",
    "query_toks_no_value": "['select', 't1', '.', 'template_type_code', 'from', 'templates', 'as', 't1', 'join', 'documents', 'as', 't2', 'on', 't1', '.', 'template_id', '=', 't2', '.', 'template_id', 'where', 't2', '.', 'document_name', '=', 'value']",
    "question": "What is the template type code of the template used by document with the name \"Data base\"?",
    "question_th": "รหัสประเภทเทมเพลตของเทมเพลตที่ใช้โดยเอกสารชื่อ \"ฐานข้อมูล\" คืออะไร",
    "question_toks": "['What', 'is', 'the', 'template', 'type', 'code', 'of', 'the', 'template', 'used', 'by', 'document', 'with', 'the', 'name', '``', 'Data', 'base', \"''\", '?']",
    "sql": "{'from': {'table_units': [['table_unit', 1], ['table_unit', 2]], 'conds': [[False, 2, [0, [0, 3, False], None], [0, 10, False], None]]}, 'select': [False, [[0, [0, [0, 5, False], None]]]], 'where': [[False, 2, [0, [0, 11, False], None], '\"Data base\"', None]], 'groupBy': [], 'having': [], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "cre_Doc_Template_Mgt",
    "query": "SELECT T1.template_type_code FROM Templates AS T1 JOIN Documents AS T2 ON T1.template_id  =  T2.template_id WHERE T2.document_name  =  \"Data base\"",
    "query_toks": "['SELECT', 'T1.template_type_code', 'FROM', 'Templates', 'AS', 'T1', 'JOIN', 'Documents', 'AS', 'T2', 'ON', 'T1.template_id', '=', 'T2.template_id', 'WHERE', 'T2.document_name', '=', '``', 'Data', 'base', \"''\"]",
    "query_toks_no_value": "['select', 't1', '.', 'template_type_code', 'from', 'templates', 'as', 't1', 'join', 'documents', 'as', 't2', 'on', 't1', '.', 'template_id', '=', 't2', '.', 'template_id', 'where', 't2', '.', 'document_name', '=', 'value']",
    "question": "Return the template type code of the template that is used by a document named Data base.",
    "question_th": "ส่งกลับรหัสประเภทเทมเพลตของเทมเพลตที่ใช้โดยเอกสารชื่อฐานข้อมูล",
    "question_toks": "['Return', 'the', 'template', 'type', 'code', 'of', 'the', 'template', 'that', 'is', 'used', 'by', 'a', 'document', 'named', 'Data', 'base', '.']",
    "sql": "{'from': {'table_units': [['table_unit', 1], ['table_unit', 2]], 'conds': [[False, 2, [0, [0, 3, False], None], [0, 10, False], None]]}, 'select': [False, [[0, [0, [0, 5, False], None]]]], 'where': [[False, 2, [0, [0, 11, False], None], '\"Data base\"', None]], 'groupBy': [], 'having': [], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "cre_Doc_Template_Mgt",
    "query": "SELECT T2.document_name FROM Templates AS T1 JOIN Documents AS T2 ON T1.template_id  =  T2.template_id WHERE T1.template_type_code  =  \"BK\"",
    "query_toks": "['SELECT', 'T2.document_name', 'FROM', 'Templates', 'AS', 'T1', 'JOIN', 'Documents', 'AS', 'T2', 'ON', 'T1.template_id', '=', 'T2.template_id', 'WHERE', 'T1.template_type_code', '=', '``', 'BK', \"''\"]",
    "query_toks_no_value": "['select', 't2', '.', 'document_name', 'from', 'templates', 'as', 't1', 'join', 'documents', 'as', 't2', 'on', 't1', '.', 'template_id', '=', 't2', '.', 'template_id', 'where', 't1', '.', 'template_type_code', '=', 'value']",
    "question": "Show all document names using templates with template type code BK.",
    "question_th": "แสดงชื่อเอกสารทั้งหมดโดยใช้เทมเพลตพร้อมรหัสประเภทเทมเพลต BK",
    "question_toks": "['Show', 'all', 'document', 'names', 'using', 'templates', 'with', 'template', 'type', 'code', 'BK', '.']",
    "sql": "{'from': {'table_units': [['table_unit', 1], ['table_unit', 2]], 'conds': [[False, 2, [0, [0, 3, False], None], [0, 10, False], None]]}, 'select': [False, [[0, [0, [0, 11, False], None]]]], 'where': [[False, 2, [0, [0, 5, False], None], '\"BK\"', None]], 'groupBy': [], 'having': [], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "cre_Doc_Template_Mgt",
    "query": "SELECT T2.document_name FROM Templates AS T1 JOIN Documents AS T2 ON T1.template_id  =  T2.template_id WHERE T1.template_type_code  =  \"BK\"",
    "query_toks": "['SELECT', 'T2.document_name', 'FROM', 'Templates', 'AS', 'T1', 'JOIN', 'Documents', 'AS', 'T2', 'ON', 'T1.template_id', '=', 'T2.template_id', 'WHERE', 'T1.template_type_code', '=', '``', 'BK', \"''\"]",
    "query_toks_no_value": "['select', 't2', '.', 'document_name', 'from', 'templates', 'as', 't1', 'join', 'documents', 'as', 't2', 'on', 't1', '.', 'template_id', '=', 't2', '.', 'template_id', 'where', 't1', '.', 'template_type_code', '=', 'value']",
    "question": "What are the names of documents that use templates with the code BK?",
    "question_th": "เอกสารที่ใช้เทมเพลตที่มีรหัส BK ชื่ออะไร",
    "question_toks": "['What', 'are', 'the', 'names', 'of', 'documents', 'that', 'use', 'templates', 'with', 'the', 'code', 'BK', '?']",
    "sql": "{'from': {'table_units': [['table_unit', 1], ['table_unit', 2]], 'conds': [[False, 2, [0, [0, 3, False], None], [0, 10, False], None]]}, 'select': [False, [[0, [0, [0, 11, False], None]]]], 'where': [[False, 2, [0, [0, 5, False], None], '\"BK\"', None]], 'groupBy': [], 'having': [], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "cre_Doc_Template_Mgt",
    "query": "SELECT T1.template_type_code ,  count(*) FROM Templates AS T1 JOIN Documents AS T2 ON T1.template_id  =  T2.template_id GROUP BY T1.template_type_code",
    "query_toks": "['SELECT', 'T1.template_type_code', ',', 'count', '(', '*', ')', 'FROM', 'Templates', 'AS', 'T1', 'JOIN', 'Documents', 'AS', 'T2', 'ON', 'T1.template_id', '=', 'T2.template_id', 'GROUP', 'BY', 'T1.template_type_code']",
    "query_toks_no_value": "['select', 't1', '.', 'template_type_code', ',', 'count', '(', '*', ')', 'from', 'templates', 'as', 't1', 'join', 'documents', 'as', 't2', 'on', 't1', '.', 'template_id', '=', 't2', '.', 'template_id', 'group', 'by', 't1', '.', 'template_type_code']",
    "question": "Show all template type codes and the number of documents using each type.",
    "question_th": "แสดงรหัสประเภทเทมเพลตทั้งหมดและจำนวนเอกสารที่ใช้แต่ละประเภท",
    "question_toks": "['Show', 'all', 'template', 'type', 'codes', 'and', 'the', 'number', 'of', 'documents', 'using', 'each', 'type', '.']",
    "sql": "{'from': {'table_units': [['table_unit', 1], ['table_unit', 2]], 'conds': [[False, 2, [0, [0, 3, False], None], [0, 10, False], None]]}, 'select': [False, [[0, [0, [0, 5, False], None]], [3, [0, [0, 0, False], None]]]], 'where': [], 'groupBy': [[0, 5, False]], 'having': [], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "cre_Doc_Template_Mgt",
    "query": "SELECT T1.template_type_code ,  count(*) FROM Templates AS T1 JOIN Documents AS T2 ON T1.template_id  =  T2.template_id GROUP BY T1.template_type_code",
    "query_toks": "['SELECT', 'T1.template_type_code', ',', 'count', '(', '*', ')', 'FROM', 'Templates', 'AS', 'T1', 'JOIN', 'Documents', 'AS', 'T2', 'ON', 'T1.template_id', '=', 'T2.template_id', 'GROUP', 'BY', 'T1.template_type_code']",
    "query_toks_no_value": "['select', 't1', '.', 'template_type_code', ',', 'count', '(', '*', ')', 'from', 'templates', 'as', 't1', 'join', 'documents', 'as', 't2', 'on', 't1', '.', 'template_id', '=', 't2', '.', 'template_id', 'group', 'by', 't1', '.', 'template_type_code']",
    "question": "What are the different template type codes, and how many documents use each type?",
    "question_th": "รหัสประเภทเทมเพลตที่แตกต่างกันคืออะไร และแต่ละประเภทใช้เอกสารจำนวนเท่าใด",
    "question_toks": "['What', 'are', 'the', 'different', 'template', 'type', 'codes', ',', 'and', 'how', 'many', 'documents', 'use', 'each', 'type', '?']",
    "sql": "{'from': {'table_units': [['table_unit', 1], ['table_unit', 2]], 'conds': [[False, 2, [0, [0, 3, False], None], [0, 10, False], None]]}, 'select': [False, [[0, [0, [0, 5, False], None]], [3, [0, [0, 0, False], None]]]], 'where': [], 'groupBy': [[0, 5, False]], 'having': [], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "cre_Doc_Template_Mgt",
    "query": "SELECT T1.template_type_code FROM Templates AS T1 JOIN Documents AS T2 ON T1.template_id  =  T2.template_id GROUP BY T1.template_type_code ORDER BY count(*) DESC LIMIT 1",
    "query_toks": "['SELECT', 'T1.template_type_code', 'FROM', 'Templates', 'AS', 'T1', 'JOIN', 'Documents', 'AS', 'T2', 'ON', 'T1.template_id', '=', 'T2.template_id', 'GROUP', 'BY', 'T1.template_type_code', 'ORDER', 'BY', 'count', '(', '*', ')', 'DESC', 'LIMIT', '1']",
    "query_toks_no_value": "['select', 't1', '.', 'template_type_code', 'from', 'templates', 'as', 't1', 'join', 'documents', 'as', 't2', 'on', 't1', '.', 'template_id', '=', 't2', '.', 'template_id', 'group', 'by', 't1', '.', 'template_type_code', 'order', 'by', 'count', '(', '*', ')', 'desc', 'limit', 'value']",
    "question": "Which template type code is used by most number of documents?",
    "question_th": "เอกสารส่วนใหญ่ใช้รหัสประเภทเทมเพลตใด",
    "question_toks": "['Which', 'template', 'type', 'code', 'is', 'used', 'by', 'most', 'number', 'of', 'documents', '?']",
    "sql": "{'from': {'table_units': [['table_unit', 1], ['table_unit', 2]], 'conds': [[False, 2, [0, [0, 3, False], None], [0, 10, False], None]]}, 'select': [False, [[0, [0, [0, 5, False], None]]]], 'where': [], 'groupBy': [[0, 5, False]], 'having': [], 'orderBy': ['desc', [[0, [3, 0, False], None]]], 'limit': 1, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "cre_Doc_Template_Mgt",
    "query": "SELECT T1.template_type_code FROM Templates AS T1 JOIN Documents AS T2 ON T1.template_id  =  T2.template_id GROUP BY T1.template_type_code ORDER BY count(*) DESC LIMIT 1",
    "query_toks": "['SELECT', 'T1.template_type_code', 'FROM', 'Templates', 'AS', 'T1', 'JOIN', 'Documents', 'AS', 'T2', 'ON', 'T1.template_id', '=', 'T2.template_id', 'GROUP', 'BY', 'T1.template_type_code', 'ORDER', 'BY', 'count', '(', '*', ')', 'DESC', 'LIMIT', '1']",
    "query_toks_no_value": "['select', 't1', '.', 'template_type_code', 'from', 'templates', 'as', 't1', 'join', 'documents', 'as', 't2', 'on', 't1', '.', 'template_id', '=', 't2', '.', 'template_id', 'group', 'by', 't1', '.', 'template_type_code', 'order', 'by', 'count', '(', '*', ')', 'desc', 'limit', 'value']",
    "question": "Return the code of the template type that is most commonly used in documents.",
    "question_th": "ส่งกลับรหัสประเภทเทมเพลตที่ใช้บ่อยที่สุดในเอกสาร",
    "question_toks": "['Return', 'the', 'code', 'of', 'the', 'template', 'type', 'that', 'is', 'most', 'commonly', 'used', 'in', 'documents', '.']",
    "sql": "{'from': {'table_units': [['table_unit', 1], ['table_unit', 2]], 'conds': [[False, 2, [0, [0, 3, False], None], [0, 10, False], None]]}, 'select': [False, [[0, [0, [0, 5, False], None]]]], 'where': [], 'groupBy': [[0, 5, False]], 'having': [], 'orderBy': ['desc', [[0, [3, 0, False], None]]], 'limit': 1, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "cre_Doc_Template_Mgt",
    "query": "SELECT template_type_code FROM Templates EXCEPT SELECT template_type_code FROM Templates AS T1 JOIN Documents AS T2 ON T1.template_id  =  T2.template_id",
    "query_toks": "['SELECT', 'template_type_code', 'FROM', 'Templates', 'EXCEPT', 'SELECT', 'template_type_code', 'FROM', 'Templates', 'AS', 'T1', 'JOIN', 'Documents', 'AS', 'T2', 'ON', 'T1.template_id', '=', 'T2.template_id']",
    "query_toks_no_value": "['select', 'template_type_code', 'from', 'templates', 'except', 'select', 'template_type_code', 'from', 'templates', 'as', 't1', 'join', 'documents', 'as', 't2', 'on', 't1', '.', 'template_id', '=', 't2', '.', 'template_id']",
    "question": "Show all template type codes that are not used by any document.",
    "question_th": "แสดงรหัสประเภทเทมเพลตทั้งหมดที่เอกสารใดไม่ได้ใช้",
    "question_toks": "['Show', 'all', 'template', 'type', 'codes', 'that', 'are', 'not', 'used', 'by', 'any', 'document', '.']",
    "sql": "{'from': {'table_units': [['table_unit', 1]], 'conds': []}, 'select': [False, [[0, [0, [0, 5, False], None]]]], 'where': [], 'groupBy': [], 'having': [], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': {'from': {'table_units': [['table_unit', 1], ['table_unit', 2]], 'conds': [[False, 2, [0, [0, 3, False], None], [0, 10, False], None]]}, 'select': [False, [[0, [0, [0, 5, False], None]]]], 'where': [], 'groupBy': [], 'having': [], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}}"
  },
  {
    "db_id": "cre_Doc_Template_Mgt",
    "query": "SELECT template_type_code FROM Templates EXCEPT SELECT template_type_code FROM Templates AS T1 JOIN Documents AS T2 ON T1.template_id  =  T2.template_id",
    "query_toks": "['SELECT', 'template_type_code', 'FROM', 'Templates', 'EXCEPT', 'SELECT', 'template_type_code', 'FROM', 'Templates', 'AS', 'T1', 'JOIN', 'Documents', 'AS', 'T2', 'ON', 'T1.template_id', '=', 'T2.template_id']",
    "query_toks_no_value": "['select', 'template_type_code', 'from', 'templates', 'except', 'select', 'template_type_code', 'from', 'templates', 'as', 't1', 'join', 'documents', 'as', 't2', 'on', 't1', '.', 'template_id', '=', 't2', '.', 'template_id']",
    "question": "What are the codes of template types that are not used for any document?",
    "question_th": "รหัสประเภทเทมเพลตที่ไม่ใช้กับเอกสารใด ๆ มีอะไรบ้าง",
    "question_toks": "['What', 'are', 'the', 'codes', 'of', 'template', 'types', 'that', 'are', 'not', 'used', 'for', 'any', 'document', '?']",
    "sql": "{'from': {'table_units': [['table_unit', 1]], 'conds': []}, 'select': [False, [[0, [0, [0, 5, False], None]]]], 'where': [], 'groupBy': [], 'having': [], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': {'from': {'table_units': [['table_unit', 1], ['table_unit', 2]], 'conds': [[False, 2, [0, [0, 3, False], None], [0, 10, False], None]]}, 'select': [False, [[0, [0, [0, 5, False], None]]]], 'where': [], 'groupBy': [], 'having': [], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}}"
  },
  {
    "db_id": "cre_Doc_Template_Mgt",
    "query": "SELECT template_type_code ,  template_type_description FROM Ref_template_types",
    "query_toks": "['SELECT', 'template_type_code', ',', 'template_type_description', 'FROM', 'Ref_template_types']",
    "query_toks_no_value": "['select', 'template_type_code', ',', 'template_type_description', 'from', 'ref_template_types']",
    "question": "Show all template type codes and descriptions.",
    "question_th": "แสดงรหัสและคำอธิบายประเภทเทมเพลตทั้งหมด",
    "question_toks": "['Show', 'all', 'template', 'type', 'codes', 'and', 'descriptions', '.']",
    "sql": "{'from': {'table_units': [['table_unit', 0]], 'conds': []}, 'select': [False, [[0, [0, [0, 1, False], None]], [0, [0, [0, 2, False], None]]]], 'where': [], 'groupBy': [], 'having': [], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "cre_Doc_Template_Mgt",
    "query": "SELECT template_type_code ,  template_type_description FROM Ref_template_types",
    "query_toks": "['SELECT', 'template_type_code', ',', 'template_type_description', 'FROM', 'Ref_template_types']",
    "query_toks_no_value": "['select', 'template_type_code', ',', 'template_type_description', 'from', 'ref_template_types']",
    "question": "What are the type codes and descriptions for all template types?",
    "question_th": "รหัสประเภทและคำอธิบายสำหรับเทมเพลตทุกประเภทคืออะไร",
    "question_toks": "['What', 'are', 'the', 'type', 'codes', 'and', 'descriptions', 'for', 'all', 'template', 'types', '?']",
    "sql": "{'from': {'table_units': [['table_unit', 0]], 'conds': []}, 'select': [False, [[0, [0, [0, 1, False], None]], [0, [0, [0, 2, False], None]]]], 'where': [], 'groupBy': [], 'having': [], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "cre_Doc_Template_Mgt",
    "query": "SELECT template_type_description FROM Ref_template_types WHERE template_type_code  =  \"AD\"",
    "query_toks": "['SELECT', 'template_type_description', 'FROM', 'Ref_template_types', 'WHERE', 'template_type_code', '=', '``', 'AD', \"''\"]",
    "query_toks_no_value": "['select', 'template_type_description', 'from', 'ref_template_types', 'where', 'template_type_code', '=', 'value']",
    "question": "What is the template type descriptions for template type code \"AD\".",
    "question_th": "คำอธิบายประเภทเทมเพลตสำหรับรหัสประเภทเทมเพลต \"AD\" คืออะไร",
    "question_toks": "['What', 'is', 'the', 'template', 'type', 'descriptions', 'for', 'template', 'type', 'code', '``', 'AD', \"''\", '.']",
    "sql": "{'from': {'table_units': [['table_unit', 0]], 'conds': []}, 'select': [False, [[0, [0, [0, 2, False], None]]]], 'where': [[False, 2, [0, [0, 1, False], None], '\"AD\"', None]], 'groupBy': [], 'having': [], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "cre_Doc_Template_Mgt",
    "query": "SELECT template_type_description FROM Ref_template_types WHERE template_type_code  =  \"AD\"",
    "query_toks": "['SELECT', 'template_type_description', 'FROM', 'Ref_template_types', 'WHERE', 'template_type_code', '=', '``', 'AD', \"''\"]",
    "query_toks_no_value": "['select', 'template_type_description', 'from', 'ref_template_types', 'where', 'template_type_code', '=', 'value']",
    "question": "Return the template type description of the template type with the code AD.",
    "question_th": "กลับคำอธิบายประเภทเทมเพลตของประเภทเทมเพลตด้วยรหัส AD",
    "question_toks": "['Return', 'the', 'template', 'type', 'description', 'of', 'the', 'template', 'type', 'with', 'the', 'code', 'AD', '.']",
    "sql": "{'from': {'table_units': [['table_unit', 0]], 'conds': []}, 'select': [False, [[0, [0, [0, 2, False], None]]]], 'where': [[False, 2, [0, [0, 1, False], None], '\"AD\"', None]], 'groupBy': [], 'having': [], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "cre_Doc_Template_Mgt",
    "query": "SELECT template_type_code FROM Ref_template_types WHERE template_type_description  =  \"Book\"",
    "query_toks": "['SELECT', 'template_type_code', 'FROM', 'Ref_template_types', 'WHERE', 'template_type_description', '=', '``', 'Book', \"''\"]",
    "query_toks_no_value": "['select', 'template_type_code', 'from', 'ref_template_types', 'where', 'template_type_description', '=', 'value']",
    "question": "What is the template type code for template type description \"Book\".",
    "question_th": "รหัสประเภทเทมเพลตสำหรับคำอธิบายประเภทเทมเพลต \"หนังสือ\" คืออะไร",
    "question_toks": "['What', 'is', 'the', 'template', 'type', 'code', 'for', 'template', 'type', 'description', '``', 'Book', \"''\", '.']",
    "sql": "{'from': {'table_units': [['table_unit', 0]], 'conds': []}, 'select': [False, [[0, [0, [0, 1, False], None]]]], 'where': [[False, 2, [0, [0, 2, False], None], '\"Book\"', None]], 'groupBy': [], 'having': [], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "cre_Doc_Template_Mgt",
    "query": "SELECT template_type_code FROM Ref_template_types WHERE template_type_description  =  \"Book\"",
    "query_toks": "['SELECT', 'template_type_code', 'FROM', 'Ref_template_types', 'WHERE', 'template_type_description', '=', '``', 'Book', \"''\"]",
    "query_toks_no_value": "['select', 'template_type_code', 'from', 'ref_template_types', 'where', 'template_type_description', '=', 'value']",
    "question": "Return the type code of the template type with the description \"Book\".",
    "question_th": "ส่งกลับรหัสประเภทของประเภทเทมเพลตพร้อมคำอธิบาย \"หนังสือ\"",
    "question_toks": "['Return', 'the', 'type', 'code', 'of', 'the', 'template', 'type', 'with', 'the', 'description', '``', 'Book', \"''\", '.']",
    "sql": "{'from': {'table_units': [['table_unit', 0]], 'conds': []}, 'select': [False, [[0, [0, [0, 1, False], None]]]], 'where': [[False, 2, [0, [0, 2, False], None], '\"Book\"', None]], 'groupBy': [], 'having': [], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "cre_Doc_Template_Mgt",
    "query": "SELECT DISTINCT T1.template_type_description FROM Ref_template_types AS T1 JOIN Templates AS T2 ON T1.template_type_code  = T2.template_type_code JOIN Documents AS T3 ON T2.Template_ID  =  T3.template_ID",
    "query_toks": "['SELECT', 'DISTINCT', 'T1.template_type_description', 'FROM', 'Ref_template_types', 'AS', 'T1', 'JOIN', 'Templates', 'AS', 'T2', 'ON', 'T1.template_type_code', '=', 'T2.template_type_code', 'JOIN', 'Documents', 'AS', 'T3', 'ON', 'T2.Template_ID', '=', 'T3.template_ID']",
    "query_toks_no_value": "['select', 'distinct', 't1', '.', 'template_type_description', 'from', 'ref_template_types', 'as', 't1', 'join', 'templates', 'as', 't2', 'on', 't1', '.', 'template_type_code', '=', 't2', '.', 'template_type_code', 'join', 'documents', 'as', 't3', 'on', 't2', '.', 'template_id', '=', 't3', '.', 'template_id']",
    "question": "What are the distinct template type descriptions for the templates ever used by any document?",
    "question_th": "คำอธิบายประเภทเทมเพลตที่ชัดเจนสำหรับเทมเพลตที่เคยใช้ในเอกสารใด ๆ คืออะไร",
    "question_toks": "['What', 'are', 'the', 'distinct', 'template', 'type', 'descriptions', 'for', 'the', 'templates', 'ever', 'used', 'by', 'any', 'document', '?']",
    "sql": "{'from': {'table_units': [['table_unit', 0], ['table_unit', 1], ['table_unit', 2]], 'conds': [[False, 2, [0, [0, 1, False], None], [0, 5, False], None], 'and', [False, 2, [0, [0, 3, False], None], [0, 10, False], None]]}, 'select': [True, [[0, [0, [0, 2, False], None]]]], 'where': [], 'groupBy': [], 'having': [], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "cre_Doc_Template_Mgt",
    "query": "SELECT DISTINCT T1.template_type_description FROM Ref_template_types AS T1 JOIN Templates AS T2 ON T1.template_type_code  = T2.template_type_code JOIN Documents AS T3 ON T2.Template_ID  =  T3.template_ID",
    "query_toks": "['SELECT', 'DISTINCT', 'T1.template_type_description', 'FROM', 'Ref_template_types', 'AS', 'T1', 'JOIN', 'Templates', 'AS', 'T2', 'ON', 'T1.template_type_code', '=', 'T2.template_type_code', 'JOIN', 'Documents', 'AS', 'T3', 'ON', 'T2.Template_ID', '=', 'T3.template_ID']",
    "query_toks_no_value": "['select', 'distinct', 't1', '.', 'template_type_description', 'from', 'ref_template_types', 'as', 't1', 'join', 'templates', 'as', 't2', 'on', 't1', '.', 'template_type_code', '=', 't2', '.', 'template_type_code', 'join', 'documents', 'as', 't3', 'on', 't2', '.', 'template_id', '=', 't3', '.', 'template_id']",
    "question": "Return the different descriptions for templates that have been used in a document.",
    "question_th": "ส่งกลับคำอธิบายต่างๆ สำหรับเทมเพลตที่ใช้ในเอกสาร",
    "question_toks": "['Return', 'the', 'different', 'descriptions', 'for', 'templates', 'that', 'have', 'been', 'used', 'in', 'a', 'document', '.']",
    "sql": "{'from': {'table_units': [['table_unit', 0], ['table_unit', 1], ['table_unit', 2]], 'conds': [[False, 2, [0, [0, 1, False], None], [0, 5, False], None], 'and', [False, 2, [0, [0, 3, False], None], [0, 10, False], None]]}, 'select': [True, [[0, [0, [0, 2, False], None]]]], 'where': [], 'groupBy': [], 'having': [], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "cre_Doc_Template_Mgt",
    "query": "SELECT T2.template_id FROM Ref_template_types AS T1 JOIN Templates AS T2 ON T1.template_type_code  = T2.template_type_code WHERE T1.template_type_description  =  \"Presentation\"",
    "query_toks": "['SELECT', 'T2.template_id', 'FROM', 'Ref_template_types', 'AS', 'T1', 'JOIN', 'Templates', 'AS', 'T2', 'ON', 'T1.template_type_code', '=', 'T2.template_type_code', 'WHERE', 'T1.template_type_description', '=', '``', 'Presentation', \"''\"]",
    "query_toks_no_value": "['select', 't2', '.', 'template_id', 'from', 'ref_template_types', 'as', 't1', 'join', 'templates', 'as', 't2', 'on', 't1', '.', 'template_type_code', '=', 't2', '.', 'template_type_code', 'where', 't1', '.', 'template_type_description', '=', 'value']",
    "question": "What are the template ids with template type description \"Presentation\".",
    "question_th": "รหัสเทมเพลตที่มีคำอธิบายประเภทเทมเพลต \"การนำเสนอ\" คืออะไร",
    "question_toks": "['What', 'are', 'the', 'template', 'ids', 'with', 'template', 'type', 'description', '``', 'Presentation', \"''\", '.']",
    "sql": "{'from': {'table_units': [['table_unit', 0], ['table_unit', 1]], 'conds': [[False, 2, [0, [0, 1, False], None], [0, 5, False], None]]}, 'select': [False, [[0, [0, [0, 3, False], None]]]], 'where': [[False, 2, [0, [0, 2, False], None], '\"Presentation\"', None]], 'groupBy': [], 'having': [], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "cre_Doc_Template_Mgt",
    "query": "SELECT T2.template_id FROM Ref_template_types AS T1 JOIN Templates AS T2 ON T1.template_type_code  = T2.template_type_code WHERE T1.template_type_description  =  \"Presentation\"",
    "query_toks": "['SELECT', 'T2.template_id', 'FROM', 'Ref_template_types', 'AS', 'T1', 'JOIN', 'Templates', 'AS', 'T2', 'ON', 'T1.template_type_code', '=', 'T2.template_type_code', 'WHERE', 'T1.template_type_description', '=', '``', 'Presentation', \"''\"]",
    "query_toks_no_value": "['select', 't2', '.', 'template_id', 'from', 'ref_template_types', 'as', 't1', 'join', 'templates', 'as', 't2', 'on', 't1', '.', 'template_type_code', '=', 't2', '.', 'template_type_code', 'where', 't1', '.', 'template_type_description', '=', 'value']",
    "question": "Return the ids corresponding to templates with the description 'Presentation'.",
    "question_th": "ส่งกลับรหัสที่สอดคล้องกับเทมเพลตพร้อมคำอธิบาย 'การนำเสนอ'",
    "question_toks": "['Return', 'the', 'ids', 'corresponding', 'to', 'templates', 'with', 'the', 'description', \"'Presentation\", \"'\", '.']",
    "sql": "{'from': {'table_units': [['table_unit', 0], ['table_unit', 1]], 'conds': [[False, 2, [0, [0, 1, False], None], [0, 5, False], None]]}, 'select': [False, [[0, [0, [0, 3, False], None]]]], 'where': [[False, 2, [0, [0, 2, False], None], '\"Presentation\"', None]], 'groupBy': [], 'having': [], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "cre_Doc_Template_Mgt",
    "query": "SELECT count(*) FROM Paragraphs",
    "query_toks": "['SELECT', 'count', '(', '*', ')', 'FROM', 'Paragraphs']",
    "query_toks_no_value": "['select', 'count', '(', '*', ')', 'from', 'paragraphs']",
    "question": "How many paragraphs in total?",
    "question_th": "มีทั้งหมดกี่ย่อหน้า?",
    "question_toks": "['How', 'many', 'paragraphs', 'in', 'total', '?']",
    "sql": "{'from': {'table_units': [['table_unit', 3]], 'conds': []}, 'select': [False, [[3, [0, [0, 0, False], None]]]], 'where': [], 'groupBy': [], 'having': [], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "cre_Doc_Template_Mgt",
    "query": "SELECT count(*) FROM Paragraphs",
    "query_toks": "['SELECT', 'count', '(', '*', ')', 'FROM', 'Paragraphs']",
    "query_toks_no_value": "['select', 'count', '(', '*', ')', 'from', 'paragraphs']",
    "question": "Count the number of paragraphs.",
    "question_th": "นับจำนวนย่อหน้า",
    "question_toks": "['Count', 'the', 'number', 'of', 'paragraphs', '.']",
    "sql": "{'from': {'table_units': [['table_unit', 3]], 'conds': []}, 'select': [False, [[3, [0, [0, 0, False], None]]]], 'where': [], 'groupBy': [], 'having': [], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "cre_Doc_Template_Mgt",
    "query": "SELECT count(*) FROM Paragraphs AS T1 JOIN Documents AS T2 ON T1.document_ID  =  T2.document_ID WHERE T2.document_name  =  'Summer Show'",
    "query_toks": "['SELECT', 'count', '(', '*', ')', 'FROM', 'Paragraphs', 'AS', 'T1', 'JOIN', 'Documents', 'AS', 'T2', 'ON', 'T1.document_ID', '=', 'T2.document_ID', 'WHERE', 'T2.document_name', '=', \"'Summer\", 'Show', \"'\"]",
    "query_toks_no_value": "['select', 'count', '(', '*', ')', 'from', 'paragraphs', 'as', 't1', 'join', 'documents', 'as', 't2', 'on', 't1', '.', 'document_id', '=', 't2', '.', 'document_id', 'where', 't2', '.', 'document_name', '=', 'value']",
    "question": "How many paragraphs for the document with name 'Summer Show'?",
    "question_th": "เอกสารชื่อ 'Summer Show' มีกี่ย่อหน้า?",
    "question_toks": "['How', 'many', 'paragraphs', 'for', 'the', 'document', 'with', 'name', \"'Summer\", 'Show', \"'\", '?']",
    "sql": "{'from': {'table_units': [['table_unit', 3], ['table_unit', 2]], 'conds': [[False, 2, [0, [0, 15, False], None], [0, 9, False], None]]}, 'select': [False, [[3, [0, [0, 0, False], None]]]], 'where': [[False, 2, [0, [0, 11, False], None], '\"Summer Show\"', None]], 'groupBy': [], 'having': [], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "cre_Doc_Template_Mgt",
    "query": "SELECT count(*) FROM Paragraphs AS T1 JOIN Documents AS T2 ON T1.document_ID  =  T2.document_ID WHERE T2.document_name  =  'Summer Show'",
    "query_toks": "['SELECT', 'count', '(', '*', ')', 'FROM', 'Paragraphs', 'AS', 'T1', 'JOIN', 'Documents', 'AS', 'T2', 'ON', 'T1.document_ID', '=', 'T2.document_ID', 'WHERE', 'T2.document_name', '=', \"'Summer\", 'Show', \"'\"]",
    "query_toks_no_value": "['select', 'count', '(', '*', ')', 'from', 'paragraphs', 'as', 't1', 'join', 'documents', 'as', 't2', 'on', 't1', '.', 'document_id', '=', 't2', '.', 'document_id', 'where', 't2', '.', 'document_name', '=', 'value']",
    "question": "Count the number of paragraphs in the document named 'Summer Show'.",
    "question_th": "นับจำนวนย่อหน้าในเอกสารชื่อ 'Summer Show'",
    "question_toks": "['Count', 'the', 'number', 'of', 'paragraphs', 'in', 'the', 'document', 'named', \"'Summer\", 'Show', \"'\", '.']",
    "sql": "{'from': {'table_units': [['table_unit', 3], ['table_unit', 2]], 'conds': [[False, 2, [0, [0, 15, False], None], [0, 9, False], None]]}, 'select': [False, [[3, [0, [0, 0, False], None]]]], 'where': [[False, 2, [0, [0, 11, False], None], '\"Summer Show\"', None]], 'groupBy': [], 'having': [], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "cre_Doc_Template_Mgt",
    "query": "select other_details from paragraphs where paragraph_text like 'korea'",
    "query_toks": "['select', 'other_details', 'from', 'paragraphs', 'where', 'paragraph_text', 'like', '\"korea\"']",
    "query_toks_no_value": "['select', 'other_details', 'from', 'paragraphs', 'where', 'paragraph_text', 'like', 'value']",
    "question": "Show paragraph details for paragraph with text 'Korea ' .",
    "question_th": "แสดงรายละเอียดย่อหน้าสำหรับย่อหน้าที่มีข้อความ 'Korea '",
    "question_toks": "['Show', 'paragraph', 'details', 'for', 'paragraph', 'with', 'text', \"'Korea\", \"'\", '.']",
    "sql": "{'from': {'table_units': [['table_unit', 3]], 'conds': []}, 'select': [False, [[0, [0, [0, 17, False], None]]]], 'where': [[False, 9, [0, [0, 16, False], None], '\"korea\"', None]], 'groupBy': [], 'having': [], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "cre_Doc_Template_Mgt",
    "query": "select other_details from paragraphs where paragraph_text like 'korea'",
    "query_toks": "['select', 'other_details', 'from', 'paragraphs', 'where', 'paragraph_text', 'like', '\"korea\"']",
    "query_toks_no_value": "['select', 'other_details', 'from', 'paragraphs', 'where', 'paragraph_text', 'like', 'value']",
    "question": "What are the details for the paragraph that includes the text 'Korea ' ?",
    "question_th": "ย่อหน้าที่มีข้อความ 'Korea' มีรายละเอียดอะไรบ้าง?",
    "question_toks": "['What', 'are', 'the', 'details', 'for', 'the', 'paragraph', 'that', 'includes', 'the', 'text', \"'Korea\", \"'\", '?']",
    "sql": "{'from': {'table_units': [['table_unit', 3]], 'conds': []}, 'select': [False, [[0, [0, [0, 17, False], None]]]], 'where': [[False, 9, [0, [0, 16, False], None], '\"korea\"', None]], 'groupBy': [], 'having': [], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "cre_Doc_Template_Mgt",
    "query": "SELECT T1.paragraph_id ,   T1.paragraph_text FROM Paragraphs AS T1 JOIN Documents AS T2 ON T1.document_id  =  T2.document_id WHERE T2.Document_Name  =  'Welcome to NY'",
    "query_toks": "['SELECT', 'T1.paragraph_id', ',', 'T1.paragraph_text', 'FROM', 'Paragraphs', 'AS', 'T1', 'JOIN', 'Documents', 'AS', 'T2', 'ON', 'T1.document_id', '=', 'T2.document_id', 'WHERE', 'T2.Document_Name', '=', \"'Welcome\", 'to', 'NY', \"'\"]",
    "query_toks_no_value": "['select', 't1', '.', 'paragraph_id', ',', 't1', '.', 'paragraph_text', 'from', 'paragraphs', 'as', 't1', 'join', 'documents', 'as', 't2', 'on', 't1', '.', 'document_id', '=', 't2', '.', 'document_id', 'where', 't2', '.', 'document_name', '=', 'value']",
    "question": "Show all paragraph ids and texts for the document with name 'Welcome to NY'.",
    "question_th": "แสดงรหัสย่อหน้าและข้อความทั้งหมดสำหรับเอกสารชื่อ \"ยินดีต้อนรับสู่นิวยอร์ก\"",
    "question_toks": "['Show', 'all', 'paragraph', 'ids', 'and', 'texts', 'for', 'the', 'document', 'with', 'name', \"'Welcome\", 'to', 'NY', \"'\", '.']",
    "sql": "{'from': {'table_units': [['table_unit', 3], ['table_unit', 2]], 'conds': [[False, 2, [0, [0, 15, False], None], [0, 9, False], None]]}, 'select': [False, [[0, [0, [0, 14, False], None]], [0, [0, [0, 16, False], None]]]], 'where': [[False, 2, [0, [0, 11, False], None], '\"Welcome to NY\"', None]], 'groupBy': [], 'having': [], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "cre_Doc_Template_Mgt",
    "query": "SELECT T1.paragraph_id ,   T1.paragraph_text FROM Paragraphs AS T1 JOIN Documents AS T2 ON T1.document_id  =  T2.document_id WHERE T2.Document_Name  =  'Welcome to NY'",
    "query_toks": "['SELECT', 'T1.paragraph_id', ',', 'T1.paragraph_text', 'FROM', 'Paragraphs', 'AS', 'T1', 'JOIN', 'Documents', 'AS', 'T2', 'ON', 'T1.document_id', '=', 'T2.document_id', 'WHERE', 'T2.Document_Name', '=', \"'Welcome\", 'to', 'NY', \"'\"]",
    "query_toks_no_value": "['select', 't1', '.', 'paragraph_id', ',', 't1', '.', 'paragraph_text', 'from', 'paragraphs', 'as', 't1', 'join', 'documents', 'as', 't2', 'on', 't1', '.', 'document_id', '=', 't2', '.', 'document_id', 'where', 't2', '.', 'document_name', '=', 'value']",
    "question": "What are the ids and texts of paragraphs in the document titled 'Welcome to NY'?",
    "question_th": "รหัสและข้อความของย่อหน้าในเอกสารชื่อ 'ยินดีต้อนรับสู่นิวยอร์ก' คืออะไร",
    "question_toks": "['What', 'are', 'the', 'ids', 'and', 'texts', 'of', 'paragraphs', 'in', 'the', 'document', 'titled', \"'Welcome\", 'to', 'NY', \"'\", '?']",
    "sql": "{'from': {'table_units': [['table_unit', 3], ['table_unit', 2]], 'conds': [[False, 2, [0, [0, 15, False], None], [0, 9, False], None]]}, 'select': [False, [[0, [0, [0, 14, False], None]], [0, [0, [0, 16, False], None]]]], 'where': [[False, 2, [0, [0, 11, False], None], '\"Welcome to NY\"', None]], 'groupBy': [], 'having': [], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "cre_Doc_Template_Mgt",
    "query": "SELECT T1.paragraph_text FROM Paragraphs AS T1 JOIN Documents AS T2 ON T1.document_id  =  T2.document_id WHERE T2.document_name  =  \"Customer reviews\"",
    "query_toks": "['SELECT', 'T1.paragraph_text', 'FROM', 'Paragraphs', 'AS', 'T1', 'JOIN', 'Documents', 'AS', 'T2', 'ON', 'T1.document_id', '=', 'T2.document_id', 'WHERE', 'T2.document_name', '=', '``', 'Customer', 'reviews', \"''\"]",
    "query_toks_no_value": "['select', 't1', '.', 'paragraph_text', 'from', 'paragraphs', 'as', 't1', 'join', 'documents', 'as', 't2', 'on', 't1', '.', 'document_id', '=', 't2', '.', 'document_id', 'where', 't2', '.', 'document_name', '=', 'value']",
    "question": "Show all paragraph texts for the document \"Customer reviews\".",
    "question_th": "แสดงข้อความย่อหน้าทั้งหมดสำหรับเอกสาร \"บทวิจารณ์ของลูกค้า\"",
    "question_toks": "['Show', 'all', 'paragraph', 'texts', 'for', 'the', 'document', '``', 'Customer', 'reviews', \"''\", '.']",
    "sql": "{'from': {'table_units': [['table_unit', 3], ['table_unit', 2]], 'conds': [[False, 2, [0, [0, 15, False], None], [0, 9, False], None]]}, 'select': [False, [[0, [0, [0, 16, False], None]]]], 'where': [[False, 2, [0, [0, 11, False], None], '\"Customer reviews\"', None]], 'groupBy': [], 'having': [], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "cre_Doc_Template_Mgt",
    "query": "SELECT T1.paragraph_text FROM Paragraphs AS T1 JOIN Documents AS T2 ON T1.document_id  =  T2.document_id WHERE T2.document_name  =  \"Customer reviews\"",
    "query_toks": "['SELECT', 'T1.paragraph_text', 'FROM', 'Paragraphs', 'AS', 'T1', 'JOIN', 'Documents', 'AS', 'T2', 'ON', 'T1.document_id', '=', 'T2.document_id', 'WHERE', 'T2.document_name', '=', '``', 'Customer', 'reviews', \"''\"]",
    "query_toks_no_value": "['select', 't1', '.', 'paragraph_text', 'from', 'paragraphs', 'as', 't1', 'join', 'documents', 'as', 't2', 'on', 't1', '.', 'document_id', '=', 't2', '.', 'document_id', 'where', 't2', '.', 'document_name', '=', 'value']",
    "question": "What are the paragraph texts for the document with the name 'Customer reviews'?",
    "question_th": "ข้อความย่อหน้าของเอกสารชื่อ 'บทวิจารณ์ของลูกค้า' คืออะไร",
    "question_toks": "['What', 'are', 'the', 'paragraph', 'texts', 'for', 'the', 'document', 'with', 'the', 'name', \"'Customer\", 'reviews', \"'\", '?']",
    "sql": "{'from': {'table_units': [['table_unit', 3], ['table_unit', 2]], 'conds': [[False, 2, [0, [0, 15, False], None], [0, 9, False], None]]}, 'select': [False, [[0, [0, [0, 16, False], None]]]], 'where': [[False, 2, [0, [0, 11, False], None], '\"Customer reviews\"', None]], 'groupBy': [], 'having': [], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "cre_Doc_Template_Mgt",
    "query": "SELECT document_id ,  count(*) FROM Paragraphs GROUP BY document_id ORDER BY document_id",
    "query_toks": "['SELECT', 'document_id', ',', 'count', '(', '*', ')', 'FROM', 'Paragraphs', 'GROUP', 'BY', 'document_id', 'ORDER', 'BY', 'document_id']",
    "query_toks_no_value": "['select', 'document_id', ',', 'count', '(', '*', ')', 'from', 'paragraphs', 'group', 'by', 'document_id', 'order', 'by', 'document_id']",
    "question": "Show all document ids and the number of paragraphs in each document. Order by document id.",
    "question_th": "แสดงรหัสเอกสารทั้งหมดและจำนวนย่อหน้าในแต่ละเอกสาร สั่งซื้อตามรหัสเอกสาร",
    "question_toks": "['Show', 'all', 'document', 'ids', 'and', 'the', 'number', 'of', 'paragraphs', 'in', 'each', 'document', '.', 'Order', 'by', 'document', 'id', '.']",
    "sql": "{'from': {'table_units': [['table_unit', 3]], 'conds': []}, 'select': [False, [[0, [0, [0, 15, False], None]], [3, [0, [0, 0, False], None]]]], 'where': [], 'groupBy': [[0, 15, False]], 'having': [], 'orderBy': ['asc', [[0, [0, 15, False], None]]], 'limit': None, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "cre_Doc_Template_Mgt",
    "query": "SELECT document_id ,  count(*) FROM Paragraphs GROUP BY document_id ORDER BY document_id",
    "query_toks": "['SELECT', 'document_id', ',', 'count', '(', '*', ')', 'FROM', 'Paragraphs', 'GROUP', 'BY', 'document_id', 'ORDER', 'BY', 'document_id']",
    "query_toks_no_value": "['select', 'document_id', ',', 'count', '(', '*', ')', 'from', 'paragraphs', 'group', 'by', 'document_id', 'order', 'by', 'document_id']",
    "question": "Return the different document ids along with the number of paragraphs corresponding to each, ordered by id.",
    "question_th": "ส่งกลับรหัสเอกสารที่แตกต่างกันพร้อมกับจำนวนย่อหน้าที่ตรงกัน โดยเรียงลำดับตามรหัส",
    "question_toks": "['Return', 'the', 'different', 'document', 'ids', 'along', 'with', 'the', 'number', 'of', 'paragraphs', 'corresponding', 'to', 'each', ',', 'ordered', 'by', 'id', '.']",
    "sql": "{'from': {'table_units': [['table_unit', 3]], 'conds': []}, 'select': [False, [[0, [0, [0, 15, False], None]], [3, [0, [0, 0, False], None]]]], 'where': [], 'groupBy': [[0, 15, False]], 'having': [], 'orderBy': ['asc', [[0, [0, 15, False], None]]], 'limit': None, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "cre_Doc_Template_Mgt",
    "query": "SELECT T1.document_id ,  T2.document_name ,  count(*) FROM Paragraphs AS T1 JOIN Documents AS T2 ON T1.document_id  =  T2.document_id GROUP BY T1.document_id",
    "query_toks": "['SELECT', 'T1.document_id', ',', 'T2.document_name', ',', 'count', '(', '*', ')', 'FROM', 'Paragraphs', 'AS', 'T1', 'JOIN', 'Documents', 'AS', 'T2', 'ON', 'T1.document_id', '=', 'T2.document_id', 'GROUP', 'BY', 'T1.document_id']",
    "query_toks_no_value": "['select', 't1', '.', 'document_id', ',', 't2', '.', 'document_name', ',', 'count', '(', '*', ')', 'from', 'paragraphs', 'as', 't1', 'join', 'documents', 'as', 't2', 'on', 't1', '.', 'document_id', '=', 't2', '.', 'document_id', 'group', 'by', 't1', '.', 'document_id']",
    "question": "Show all document ids, names and the number of paragraphs in each document.",
    "question_th": "แสดงรหัสเอกสาร ชื่อ และจำนวนย่อหน้าทั้งหมดในแต่ละเอกสาร",
    "question_toks": "['Show', 'all', 'document', 'ids', ',', 'names', 'and', 'the', 'number', 'of', 'paragraphs', 'in', 'each', 'document', '.']",
    "sql": "{'from': {'table_units': [['table_unit', 3], ['table_unit', 2]], 'conds': [[False, 2, [0, [0, 15, False], None], [0, 9, False], None]]}, 'select': [False, [[0, [0, [0, 15, False], None]], [0, [0, [0, 11, False], None]], [3, [0, [0, 0, False], None]]]], 'where': [], 'groupBy': [[0, 15, False]], 'having': [], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "cre_Doc_Template_Mgt",
    "query": "SELECT T1.document_id ,  T2.document_name ,  count(*) FROM Paragraphs AS T1 JOIN Documents AS T2 ON T1.document_id  =  T2.document_id GROUP BY T1.document_id",
    "query_toks": "['SELECT', 'T1.document_id', ',', 'T2.document_name', ',', 'count', '(', '*', ')', 'FROM', 'Paragraphs', 'AS', 'T1', 'JOIN', 'Documents', 'AS', 'T2', 'ON', 'T1.document_id', '=', 'T2.document_id', 'GROUP', 'BY', 'T1.document_id']",
    "query_toks_no_value": "['select', 't1', '.', 'document_id', ',', 't2', '.', 'document_name', ',', 'count', '(', '*', ')', 'from', 'paragraphs', 'as', 't1', 'join', 'documents', 'as', 't2', 'on', 't1', '.', 'document_id', '=', 't2', '.', 'document_id', 'group', 'by', 't1', '.', 'document_id']",
    "question": "What are the ids and names of each document, as well as the number of paragraphs in each?",
    "question_th": "รหัสและชื่อของแต่ละเอกสารคืออะไร รวมถึงจำนวนย่อหน้าในแต่ละเอกสาร",
    "question_toks": "['What', 'are', 'the', 'ids', 'and', 'names', 'of', 'each', 'document', ',', 'as', 'well', 'as', 'the', 'number', 'of', 'paragraphs', 'in', 'each', '?']",
    "sql": "{'from': {'table_units': [['table_unit', 3], ['table_unit', 2]], 'conds': [[False, 2, [0, [0, 15, False], None], [0, 9, False], None]]}, 'select': [False, [[0, [0, [0, 15, False], None]], [0, [0, [0, 11, False], None]], [3, [0, [0, 0, False], None]]]], 'where': [], 'groupBy': [[0, 15, False]], 'having': [], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "cre_Doc_Template_Mgt",
    "query": "SELECT document_id FROM Paragraphs GROUP BY document_id HAVING count(*)  >=  2",
    "query_toks": "['SELECT', 'document_id', 'FROM', 'Paragraphs', 'GROUP', 'BY', 'document_id', 'HAVING', 'count', '(', '*', ')', '>', '=', '2']",
    "query_toks_no_value": "['select', 'document_id', 'from', 'paragraphs', 'group', 'by', 'document_id', 'having', 'count', '(', '*', ')', '>', '=', 'value']",
    "question": "List all document ids with at least two paragraphs.",
    "question_th": "แสดงรายการรหัสเอกสารทั้งหมดที่มีอย่างน้อยสองย่อหน้า",
    "question_toks": "['List', 'all', 'document', 'ids', 'with', 'at', 'least', 'two', 'paragraphs', '.']",
    "sql": "{'from': {'table_units': [['table_unit', 3]], 'conds': []}, 'select': [False, [[0, [0, [0, 15, False], None]]]], 'where': [], 'groupBy': [[0, 15, False]], 'having': [[False, 5, [0, [3, 0, False], None], 2.0, None]], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "cre_Doc_Template_Mgt",
    "query": "SELECT document_id FROM Paragraphs GROUP BY document_id HAVING count(*)  >=  2",
    "query_toks": "['SELECT', 'document_id', 'FROM', 'Paragraphs', 'GROUP', 'BY', 'document_id', 'HAVING', 'count', '(', '*', ')', '>', '=', '2']",
    "query_toks_no_value": "['select', 'document_id', 'from', 'paragraphs', 'group', 'by', 'document_id', 'having', 'count', '(', '*', ')', '>', '=', 'value']",
    "question": "What are the ids of documents that have 2 or more paragraphs?",
    "question_th": "รหัสของเอกสารที่มี 2 ย่อหน้าขึ้นไปคือรหัสอะไร",
    "question_toks": "['What', 'are', 'the', 'ids', 'of', 'documents', 'that', 'have', '2', 'or', 'more', 'paragraphs', '?']",
    "sql": "{'from': {'table_units': [['table_unit', 3]], 'conds': []}, 'select': [False, [[0, [0, [0, 15, False], None]]]], 'where': [], 'groupBy': [[0, 15, False]], 'having': [[False, 5, [0, [3, 0, False], None], 2.0, None]], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "cre_Doc_Template_Mgt",
    "query": "SELECT T1.document_id ,  T2.document_name FROM Paragraphs AS T1 JOIN Documents AS T2 ON T1.document_id  =  T2.document_id GROUP BY T1.document_id ORDER BY count(*) DESC LIMIT 1",
    "query_toks": "['SELECT', 'T1.document_id', ',', 'T2.document_name', 'FROM', 'Paragraphs', 'AS', 'T1', 'JOIN', 'Documents', 'AS', 'T2', 'ON', 'T1.document_id', '=', 'T2.document_id', 'GROUP', 'BY', 'T1.document_id', 'ORDER', 'BY', 'count', '(', '*', ')', 'DESC', 'LIMIT', '1']",
    "query_toks_no_value": "['select', 't1', '.', 'document_id', ',', 't2', '.', 'document_name', 'from', 'paragraphs', 'as', 't1', 'join', 'documents', 'as', 't2', 'on', 't1', '.', 'document_id', '=', 't2', '.', 'document_id', 'group', 'by', 't1', '.', 'document_id', 'order', 'by', 'count', '(', '*', ')', 'desc', 'limit', 'value']",
    "question": "What is the document id and name with greatest number of paragraphs?",
    "question_th": "รหัสเอกสารและชื่อที่มีจำนวนย่อหน้ามากที่สุดคืออะไร?",
    "question_toks": "['What', 'is', 'the', 'document', 'id', 'and', 'name', 'with', 'greatest', 'number', 'of', 'paragraphs', '?']",
    "sql": "{'from': {'table_units': [['table_unit', 3], ['table_unit', 2]], 'conds': [[False, 2, [0, [0, 15, False], None], [0, 9, False], None]]}, 'select': [False, [[0, [0, [0, 15, False], None]], [0, [0, [0, 11, False], None]]]], 'where': [], 'groupBy': [[0, 15, False]], 'having': [], 'orderBy': ['desc', [[0, [3, 0, False], None]]], 'limit': 1, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "cre_Doc_Template_Mgt",
    "query": "SELECT T1.document_id ,  T2.document_name FROM Paragraphs AS T1 JOIN Documents AS T2 ON T1.document_id  =  T2.document_id GROUP BY T1.document_id ORDER BY count(*) DESC LIMIT 1",
    "query_toks": "['SELECT', 'T1.document_id', ',', 'T2.document_name', 'FROM', 'Paragraphs', 'AS', 'T1', 'JOIN', 'Documents', 'AS', 'T2', 'ON', 'T1.document_id', '=', 'T2.document_id', 'GROUP', 'BY', 'T1.document_id', 'ORDER', 'BY', 'count', '(', '*', ')', 'DESC', 'LIMIT', '1']",
    "query_toks_no_value": "['select', 't1', '.', 'document_id', ',', 't2', '.', 'document_name', 'from', 'paragraphs', 'as', 't1', 'join', 'documents', 'as', 't2', 'on', 't1', '.', 'document_id', '=', 't2', '.', 'document_id', 'group', 'by', 't1', '.', 'document_id', 'order', 'by', 'count', '(', '*', ')', 'desc', 'limit', 'value']",
    "question": "Return the id and name of the document with the most paragraphs.",
    "question_th": "ส่งกลับรหัสและชื่อของเอกสารที่มีย่อหน้ามากที่สุด",
    "question_toks": "['Return', 'the', 'id', 'and', 'name', 'of', 'the', 'document', 'with', 'the', 'most', 'paragraphs', '.']",
    "sql": "{'from': {'table_units': [['table_unit', 3], ['table_unit', 2]], 'conds': [[False, 2, [0, [0, 15, False], None], [0, 9, False], None]]}, 'select': [False, [[0, [0, [0, 15, False], None]], [0, [0, [0, 11, False], None]]]], 'where': [], 'groupBy': [[0, 15, False]], 'having': [], 'orderBy': ['desc', [[0, [3, 0, False], None]]], 'limit': 1, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "cre_Doc_Template_Mgt",
    "query": "SELECT document_id FROM Paragraphs GROUP BY document_id ORDER BY count(*) ASC LIMIT 1",
    "query_toks": "['SELECT', 'document_id', 'FROM', 'Paragraphs', 'GROUP', 'BY', 'document_id', 'ORDER', 'BY', 'count', '(', '*', ')', 'ASC', 'LIMIT', '1']",
    "query_toks_no_value": "['select', 'document_id', 'from', 'paragraphs', 'group', 'by', 'document_id', 'order', 'by', 'count', '(', '*', ')', 'asc', 'limit', 'value']",
    "question": "What is the document id with least number of paragraphs?",
    "question_th": "รหัสเอกสารที่มีจำนวนย่อหน้าน้อยที่สุดคืออะไร?",
    "question_toks": "['What', 'is', 'the', 'document', 'id', 'with', 'least', 'number', 'of', 'paragraphs', '?']",
    "sql": "{'from': {'table_units': [['table_unit', 3]], 'conds': []}, 'select': [False, [[0, [0, [0, 15, False], None]]]], 'where': [], 'groupBy': [[0, 15, False]], 'having': [], 'orderBy': ['asc', [[0, [3, 0, False], None]]], 'limit': 1, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "cre_Doc_Template_Mgt",
    "query": "SELECT document_id FROM Paragraphs GROUP BY document_id ORDER BY count(*) ASC LIMIT 1",
    "query_toks": "['SELECT', 'document_id', 'FROM', 'Paragraphs', 'GROUP', 'BY', 'document_id', 'ORDER', 'BY', 'count', '(', '*', ')', 'ASC', 'LIMIT', '1']",
    "query_toks_no_value": "['select', 'document_id', 'from', 'paragraphs', 'group', 'by', 'document_id', 'order', 'by', 'count', '(', '*', ')', 'asc', 'limit', 'value']",
    "question": "Return the id of the document with the fewest paragraphs.",
    "question_th": "ส่งกลับรหัสของเอกสารที่มีย่อหน้าน้อยที่สุด",
    "question_toks": "['Return', 'the', 'id', 'of', 'the', 'document', 'with', 'the', 'fewest', 'paragraphs', '.']",
    "sql": "{'from': {'table_units': [['table_unit', 3]], 'conds': []}, 'select': [False, [[0, [0, [0, 15, False], None]]]], 'where': [], 'groupBy': [[0, 15, False]], 'having': [], 'orderBy': ['asc', [[0, [3, 0, False], None]]], 'limit': 1, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "cre_Doc_Template_Mgt",
    "query": "SELECT document_id FROM Paragraphs GROUP BY document_id HAVING count(*) BETWEEN 1 AND 2",
    "query_toks": "['SELECT', 'document_id', 'FROM', 'Paragraphs', 'GROUP', 'BY', 'document_id', 'HAVING', 'count', '(', '*', ')', 'BETWEEN', '1', 'AND', '2']",
    "query_toks_no_value": "['select', 'document_id', 'from', 'paragraphs', 'group', 'by', 'document_id', 'having', 'count', '(', '*', ')', 'between', 'value', 'and', 'value']",
    "question": "What is the document id with 1 to 2 paragraphs?",
    "question_th": "รหัสเอกสารที่มี 1 ถึง 2 ย่อหน้าคืออะไร?",
    "question_toks": "['What', 'is', 'the', 'document', 'id', 'with', '1', 'to', '2', 'paragraphs', '?']",
    "sql": "{'from': {'table_units': [['table_unit', 3]], 'conds': []}, 'select': [False, [[0, [0, [0, 15, False], None]]]], 'where': [], 'groupBy': [[0, 15, False]], 'having': [[False, 1, [0, [3, 0, False], None], 1.0, 2.0]], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "cre_Doc_Template_Mgt",
    "query": "SELECT document_id FROM Paragraphs GROUP BY document_id HAVING count(*) BETWEEN 1 AND 2",
    "query_toks": "['SELECT', 'document_id', 'FROM', 'Paragraphs', 'GROUP', 'BY', 'document_id', 'HAVING', 'count', '(', '*', ')', 'BETWEEN', '1', 'AND', '2']",
    "query_toks_no_value": "['select', 'document_id', 'from', 'paragraphs', 'group', 'by', 'document_id', 'having', 'count', '(', '*', ')', 'between', 'value', 'and', 'value']",
    "question": "Give the ids of documents that have between one and two paragraphs.",
    "question_th": "ระบุรหัสเอกสารที่มีระหว่างหนึ่งถึงสองย่อหน้า",
    "question_toks": "['Give', 'the', 'ids', 'of', 'documents', 'that', 'have', 'between', 'one', 'and', 'two', 'paragraphs', '.']",
    "sql": "{'from': {'table_units': [['table_unit', 3]], 'conds': []}, 'select': [False, [[0, [0, [0, 15, False], None]]]], 'where': [], 'groupBy': [[0, 15, False]], 'having': [[False, 1, [0, [3, 0, False], None], 1.0, 2.0]], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "cre_Doc_Template_Mgt",
    "query": "SELECT document_id FROM Paragraphs WHERE paragraph_text  =  'Brazil' INTERSECT SELECT document_id FROM Paragraphs WHERE paragraph_text  =  'Ireland'",
    "query_toks": "['SELECT', 'document_id', 'FROM', 'Paragraphs', 'WHERE', 'paragraph_text', '=', \"'Brazil\", \"'\", 'INTERSECT', 'SELECT', 'document_id', 'FROM', 'Paragraphs', 'WHERE', 'paragraph_text', '=', \"'Ireland\", \"'\"]",
    "query_toks_no_value": "['select', 'document_id', 'from', 'paragraphs', 'where', 'paragraph_text', '=', 'value', 'intersect', 'select', 'document_id', 'from', 'paragraphs', 'where', 'paragraph_text', '=', 'value']",
    "question": "Show the document id with paragraph text 'Brazil' and 'Ireland'.",
    "question_th": "แสดงรหัสเอกสารพร้อมข้อความย่อหน้า 'บราซิล' และ 'ไอร์แลนด์'",
    "question_toks": "['Show', 'the', 'document', 'id', 'with', 'paragraph', 'text', \"'Brazil\", \"'\", 'and', \"'Ireland\", \"'\", '.']",
    "sql": "{'from': {'table_units': [['table_unit', 3]], 'conds': []}, 'select': [False, [[0, [0, [0, 15, False], None]]]], 'where': [[False, 2, [0, [0, 16, False], None], '\"Brazil\"', None]], 'groupBy': [], 'having': [], 'orderBy': [], 'limit': None, 'intersect': {'from': {'table_units': [['table_unit', 3]], 'conds': []}, 'select': [False, [[0, [0, [0, 15, False], None]]]], 'where': [[False, 2, [0, [0, 16, False], None], '\"Ireland\"', None]], 'groupBy': [], 'having': [], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}, 'union': None, 'except': None}"
  },
  {
    "db_id": "cre_Doc_Template_Mgt",
    "query": "SELECT document_id FROM Paragraphs WHERE paragraph_text  =  'Brazil' INTERSECT SELECT document_id FROM Paragraphs WHERE paragraph_text  =  'Ireland'",
    "query_toks": "['SELECT', 'document_id', 'FROM', 'Paragraphs', 'WHERE', 'paragraph_text', '=', \"'Brazil\", \"'\", 'INTERSECT', 'SELECT', 'document_id', 'FROM', 'Paragraphs', 'WHERE', 'paragraph_text', '=', \"'Ireland\", \"'\"]",
    "query_toks_no_value": "['select', 'document_id', 'from', 'paragraphs', 'where', 'paragraph_text', '=', 'value', 'intersect', 'select', 'document_id', 'from', 'paragraphs', 'where', 'paragraph_text', '=', 'value']",
    "question": "What are the ids of documents that contain the paragraph text 'Brazil' and 'Ireland'?",
    "question_th": "รหัสของเอกสารที่มีข้อความย่อหน้าว่า 'บราซิล' และ 'ไอร์แลนด์' คืออะไร",
    "question_toks": "['What', 'are', 'the', 'ids', 'of', 'documents', 'that', 'contain', 'the', 'paragraph', 'text', \"'Brazil\", \"'\", 'and', \"'Ireland\", \"'\", '?']",
    "sql": "{'from': {'table_units': [['table_unit', 3]], 'conds': []}, 'select': [False, [[0, [0, [0, 15, False], None]]]], 'where': [[False, 2, [0, [0, 16, False], None], '\"Brazil\"', None]], 'groupBy': [], 'having': [], 'orderBy': [], 'limit': None, 'intersect': {'from': {'table_units': [['table_unit', 3]], 'conds': []}, 'select': [False, [[0, [0, [0, 15, False], None]]]], 'where': [[False, 2, [0, [0, 16, False], None], '\"Ireland\"', None]], 'groupBy': [], 'having': [], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}, 'union': None, 'except': None}"
  },
  {
    "db_id": "course_teach",
    "query": "SELECT count(*) FROM teacher",
    "query_toks": "['SELECT', 'count', '(', '*', ')', 'FROM', 'teacher']",
    "query_toks_no_value": "['select', 'count', '(', '*', ')', 'from', 'teacher']",
    "question": "How many teachers are there?",
    "question_th": "มีครูกี่คน?",
    "question_toks": "['How', 'many', 'teachers', 'are', 'there', '?']",
    "sql": "{'from': {'table_units': [['table_unit', 1]], 'conds': []}, 'select': [False, [[3, [0, [0, 0, False], None]]]], 'where': [], 'groupBy': [], 'having': [], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "course_teach",
    "query": "SELECT count(*) FROM teacher",
    "query_toks": "['SELECT', 'count', '(', '*', ')', 'FROM', 'teacher']",
    "query_toks_no_value": "['select', 'count', '(', '*', ')', 'from', 'teacher']",
    "question": "What is the total count of teachers?",
    "question_th": "ครูทั้งหมดมีจำนวนเท่าไร?",
    "question_toks": "['What', 'is', 'the', 'total', 'count', 'of', 'teachers', '?']",
    "sql": "{'from': {'table_units': [['table_unit', 1]], 'conds': []}, 'select': [False, [[3, [0, [0, 0, False], None]]]], 'where': [], 'groupBy': [], 'having': [], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "course_teach",
    "query": "SELECT Name FROM teacher ORDER BY Age ASC",
    "query_toks": "['SELECT', 'Name', 'FROM', 'teacher', 'ORDER', 'BY', 'Age', 'ASC']",
    "query_toks_no_value": "['select', 'name', 'from', 'teacher', 'order', 'by', 'age', 'asc']",
    "question": "List the names of teachers in ascending order of age.",
    "question_th": "รายชื่อครูตามลำดับอายุจากน้อยไปหามาก",
    "question_toks": "['List', 'the', 'names', 'of', 'teachers', 'in', 'ascending', 'order', 'of', 'age', '.']",
    "sql": "{'from': {'table_units': [['table_unit', 1]], 'conds': []}, 'select': [False, [[0, [0, [0, 5, False], None]]]], 'where': [], 'groupBy': [], 'having': [], 'orderBy': ['asc', [[0, [0, 6, False], None]]], 'limit': None, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "course_teach",
    "query": "SELECT Name FROM teacher ORDER BY Age ASC",
    "query_toks": "['SELECT', 'Name', 'FROM', 'teacher', 'ORDER', 'BY', 'Age', 'ASC']",
    "query_toks_no_value": "['select', 'name', 'from', 'teacher', 'order', 'by', 'age', 'asc']",
    "question": "What are the names of the teachers ordered by ascending age?",
    "question_th": "ครูเรียงลำดับอายุขึ้นไปมีชื่ออะไรบ้าง?",
    "question_toks": "['What', 'are', 'the', 'names', 'of', 'the', 'teachers', 'ordered', 'by', 'ascending', 'age', '?']",
    "sql": "{'from': {'table_units': [['table_unit', 1]], 'conds': []}, 'select': [False, [[0, [0, [0, 5, False], None]]]], 'where': [], 'groupBy': [], 'having': [], 'orderBy': ['asc', [[0, [0, 6, False], None]]], 'limit': None, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "course_teach",
    "query": "SELECT Age ,  Hometown FROM teacher",
    "query_toks": "['SELECT', 'Age', ',', 'Hometown', 'FROM', 'teacher']",
    "query_toks_no_value": "['select', 'age', ',', 'hometown', 'from', 'teacher']",
    "question": "What are the age and hometown of teachers?",
    "question_th": "อายุและบ้านเกิดของครูคือเท่าไร?",
    "question_toks": "['What', 'are', 'the', 'age', 'and', 'hometown', 'of', 'teachers', '?']",
    "sql": "{'from': {'table_units': [['table_unit', 1]], 'conds': []}, 'select': [False, [[0, [0, [0, 6, False], None]], [0, [0, [0, 7, False], None]]]], 'where': [], 'groupBy': [], 'having': [], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "course_teach",
    "query": "SELECT Age ,  Hometown FROM teacher",
    "query_toks": "['SELECT', 'Age', ',', 'Hometown', 'FROM', 'teacher']",
    "query_toks_no_value": "['select', 'age', ',', 'hometown', 'from', 'teacher']",
    "question": "What is the age and hometown of every teacher?",
    "question_th": "อายุและบ้านเกิดของครูทุกคนคือเท่าไร?",
    "question_toks": "['What', 'is', 'the', 'age', 'and', 'hometown', 'of', 'every', 'teacher', '?']",
    "sql": "{'from': {'table_units': [['table_unit', 1]], 'conds': []}, 'select': [False, [[0, [0, [0, 6, False], None]], [0, [0, [0, 7, False], None]]]], 'where': [], 'groupBy': [], 'having': [], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "course_teach",
    "query": "select name from teacher where hometown != \"little lever urban district\"",
    "query_toks": "['select', 'name', 'from', 'teacher', 'where', 'hometown', '!=', '\"little lever urban district\"']",
    "query_toks_no_value": "['select', 'name', 'from', 'teacher', 'where', 'hometown', '!', '=', 'value']",
    "question": "List the name of teachers whose hometown is not `` Little Lever Urban District '' .",
    "question_th": "รายชื่อครูที่บ้านเกิดไม่ใช่ `` เขตเมืองลีเวอร์น้อย ''",
    "question_toks": "['List', 'the', 'name', 'of', 'teachers', 'whose', 'hometown', 'is', 'not', '``', 'Little', 'Lever', 'Urban', 'District', \"''\", '.']",
    "sql": "{'from': {'table_units': [['table_unit', 1]], 'conds': []}, 'select': [False, [[0, [0, [0, 5, False], None]]]], 'where': [[False, 7, [0, [0, 7, False], None], '\"little lever urban district\"', None]], 'groupBy': [], 'having': [], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "course_teach",
    "query": "select name from teacher where hometown != \"little lever urban district\"",
    "query_toks": "['select', 'name', 'from', 'teacher', 'where', 'hometown', '!=', '\"little lever urban district\"']",
    "query_toks_no_value": "['select', 'name', 'from', 'teacher', 'where', 'hometown', '!', '=', 'value']",
    "question": "What are the names of the teachers whose hometown is not `` Little Lever Urban District '' ?",
    "question_th": "ครูที่บ้านเกิดไม่ใช่ `` Little Lever Urban District '' ชื่ออะไร?",
    "question_toks": "['What', 'are', 'the', 'names', 'of', 'the', 'teachers', 'whose', 'hometown', 'is', 'not', '``', 'Little', 'Lever', 'Urban', 'District', \"''\", '?']",
    "sql": "{'from': {'table_units': [['table_unit', 1]], 'conds': []}, 'select': [False, [[0, [0, [0, 5, False], None]]]], 'where': [[False, 7, [0, [0, 7, False], None], '\"little lever urban district\"', None]], 'groupBy': [], 'having': [], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "course_teach",
    "query": "SELECT Name FROM teacher WHERE Age  =  32 OR Age  =  33",
    "query_toks": "['SELECT', 'Name', 'FROM', 'teacher', 'WHERE', 'Age', '=', '32', 'OR', 'Age', '=', '33']",
    "query_toks_no_value": "['select', 'name', 'from', 'teacher', 'where', 'age', '=', 'value', 'or', 'age', '=', 'value']",
    "question": "Show the name of teachers aged either 32 or 33?",
    "question_th": "แสดงชื่อครูอายุ 32 หรือ 33 ปี?",
    "question_toks": "['Show', 'the', 'name', 'of', 'teachers', 'aged', 'either', '32', 'or', '33', '?']",
    "sql": "{'from': {'table_units': [['table_unit', 1]], 'conds': []}, 'select': [False, [[0, [0, [0, 5, False], None]]]], 'where': [[False, 2, [0, [0, 6, False], None], 32.0, None], 'or', [False, 2, [0, [0, 6, False], None], 33.0, None]], 'groupBy': [], 'having': [], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "course_teach",
    "query": "SELECT Name FROM teacher WHERE Age  =  32 OR Age  =  33",
    "query_toks": "['SELECT', 'Name', 'FROM', 'teacher', 'WHERE', 'Age', '=', '32', 'OR', 'Age', '=', '33']",
    "query_toks_no_value": "['select', 'name', 'from', 'teacher', 'where', 'age', '=', 'value', 'or', 'age', '=', 'value']",
    "question": "What are the names of the teachers who are aged either 32 or 33?",
    "question_th": "ครูที่มีอายุ 32 หรือ 33 ปีชื่ออะไร",
    "question_toks": "['What', 'are', 'the', 'names', 'of', 'the', 'teachers', 'who', 'are', 'aged', 'either', '32', 'or', '33', '?']",
    "sql": "{'from': {'table_units': [['table_unit', 1]], 'conds': []}, 'select': [False, [[0, [0, [0, 5, False], None]]]], 'where': [[False, 2, [0, [0, 6, False], None], 32.0, None], 'or', [False, 2, [0, [0, 6, False], None], 33.0, None]], 'groupBy': [], 'having': [], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "course_teach",
    "query": "SELECT Hometown FROM teacher ORDER BY Age ASC LIMIT 1",
    "query_toks": "['SELECT', 'Hometown', 'FROM', 'teacher', 'ORDER', 'BY', 'Age', 'ASC', 'LIMIT', '1']",
    "query_toks_no_value": "['select', 'hometown', 'from', 'teacher', 'order', 'by', 'age', 'asc', 'limit', 'value']",
    "question": "What is the hometown of the youngest teacher?",
    "question_th": "บ้านเกิดของครูที่อายุน้อยที่สุดคืออะไร?",
    "question_toks": "['What', 'is', 'the', 'hometown', 'of', 'the', 'youngest', 'teacher', '?']",
    "sql": "{'from': {'table_units': [['table_unit', 1]], 'conds': []}, 'select': [False, [[0, [0, [0, 7, False], None]]]], 'where': [], 'groupBy': [], 'having': [], 'orderBy': ['asc', [[0, [0, 6, False], None]]], 'limit': 1, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "course_teach",
    "query": "SELECT Hometown FROM teacher ORDER BY Age ASC LIMIT 1",
    "query_toks": "['SELECT', 'Hometown', 'FROM', 'teacher', 'ORDER', 'BY', 'Age', 'ASC', 'LIMIT', '1']",
    "query_toks_no_value": "['select', 'hometown', 'from', 'teacher', 'order', 'by', 'age', 'asc', 'limit', 'value']",
    "question": "Where is the youngest teacher from?",
    "question_th": "ครูที่อายุน้อยที่สุดมาจากไหน?",
    "question_toks": "['Where', 'is', 'the', 'youngest', 'teacher', 'from', '?']",
    "sql": "{'from': {'table_units': [['table_unit', 1]], 'conds': []}, 'select': [False, [[0, [0, [0, 7, False], None]]]], 'where': [], 'groupBy': [], 'having': [], 'orderBy': ['asc', [[0, [0, 6, False], None]]], 'limit': 1, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "course_teach",
    "query": "SELECT Hometown ,  COUNT(*) FROM teacher GROUP BY Hometown",
    "query_toks": "['SELECT', 'Hometown', ',', 'COUNT', '(', '*', ')', 'FROM', 'teacher', 'GROUP', 'BY', 'Hometown']",
    "query_toks_no_value": "['select', 'hometown', ',', 'count', '(', '*', ')', 'from', 'teacher', 'group', 'by', 'hometown']",
    "question": "Show different hometown of teachers and the number of teachers from each hometown.",
    "question_th": "แสดงบ้านเกิดของครูที่แตกต่างกันและจำนวนครูจากแต่ละบ้านเกิด",
    "question_toks": "['Show', 'different', 'hometown', 'of', 'teachers', 'and', 'the', 'number', 'of', 'teachers', 'from', 'each', 'hometown', '.']",
    "sql": "{'from': {'table_units': [['table_unit', 1]], 'conds': []}, 'select': [False, [[0, [0, [0, 7, False], None]], [3, [0, [0, 0, False], None]]]], 'where': [], 'groupBy': [[0, 7, False]], 'having': [], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "course_teach",
    "query": "SELECT Hometown ,  COUNT(*) FROM teacher GROUP BY Hometown",
    "query_toks": "['SELECT', 'Hometown', ',', 'COUNT', '(', '*', ')', 'FROM', 'teacher', 'GROUP', 'BY', 'Hometown']",
    "query_toks_no_value": "['select', 'hometown', ',', 'count', '(', '*', ')', 'from', 'teacher', 'group', 'by', 'hometown']",
    "question": "For each hometown, how many teachers are there?",
    "question_th": "แต่ละบ้านเกิดมีครูกี่คน?",
    "question_toks": "['For', 'each', 'hometown', ',', 'how', 'many', 'teachers', 'are', 'there', '?']",
    "sql": "{'from': {'table_units': [['table_unit', 1]], 'conds': []}, 'select': [False, [[0, [0, [0, 7, False], None]], [3, [0, [0, 0, False], None]]]], 'where': [], 'groupBy': [[0, 7, False]], 'having': [], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "course_teach",
    "query": "SELECT Hometown FROM teacher GROUP BY Hometown ORDER BY COUNT(*) DESC LIMIT 1",
    "query_toks": "['SELECT', 'Hometown', 'FROM', 'teacher', 'GROUP', 'BY', 'Hometown', 'ORDER', 'BY', 'COUNT', '(', '*', ')', 'DESC', 'LIMIT', '1']",
    "query_toks_no_value": "['select', 'hometown', 'from', 'teacher', 'group', 'by', 'hometown', 'order', 'by', 'count', '(', '*', ')', 'desc', 'limit', 'value']",
    "question": "List the most common hometown of teachers.",
    "question_th": "รายชื่อบ้านเกิดของครูที่พบมากที่สุด",
    "question_toks": "['List', 'the', 'most', 'common', 'hometown', 'of', 'teachers', '.']",
    "sql": "{'from': {'table_units': [['table_unit', 1]], 'conds': []}, 'select': [False, [[0, [0, [0, 7, False], None]]]], 'where': [], 'groupBy': [[0, 7, False]], 'having': [], 'orderBy': ['desc', [[0, [3, 0, False], None]]], 'limit': 1, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "course_teach",
    "query": "SELECT Hometown FROM teacher GROUP BY Hometown ORDER BY COUNT(*) DESC LIMIT 1",
    "query_toks": "['SELECT', 'Hometown', 'FROM', 'teacher', 'GROUP', 'BY', 'Hometown', 'ORDER', 'BY', 'COUNT', '(', '*', ')', 'DESC', 'LIMIT', '1']",
    "query_toks_no_value": "['select', 'hometown', 'from', 'teacher', 'group', 'by', 'hometown', 'order', 'by', 'count', '(', '*', ')', 'desc', 'limit', 'value']",
    "question": "What is the most commmon hometowns for teachers?",
    "question_th": "บ้านเกิดที่พบบ่อยที่สุดสำหรับครูคืออะไร?",
    "question_toks": "['What', 'is', 'the', 'most', 'commmon', 'hometowns', 'for', 'teachers', '?']",
    "sql": "{'from': {'table_units': [['table_unit', 1]], 'conds': []}, 'select': [False, [[0, [0, [0, 7, False], None]]]], 'where': [], 'groupBy': [[0, 7, False]], 'having': [], 'orderBy': ['desc', [[0, [3, 0, False], None]]], 'limit': 1, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "course_teach",
    "query": "SELECT Hometown FROM teacher GROUP BY Hometown HAVING COUNT(*)  >=  2",
    "query_toks": "['SELECT', 'Hometown', 'FROM', 'teacher', 'GROUP', 'BY', 'Hometown', 'HAVING', 'COUNT', '(', '*', ')', '>', '=', '2']",
    "query_toks_no_value": "['select', 'hometown', 'from', 'teacher', 'group', 'by', 'hometown', 'having', 'count', '(', '*', ')', '>', '=', 'value']",
    "question": "Show the hometowns shared by at least two teachers.",
    "question_th": "แสดงบ้านเกิดที่ครูอย่างน้อยสองคนมีร่วมกัน",
    "question_toks": "['Show', 'the', 'hometowns', 'shared', 'by', 'at', 'least', 'two', 'teachers', '.']",
    "sql": "{'from': {'table_units': [['table_unit', 1]], 'conds': []}, 'select': [False, [[0, [0, [0, 7, False], None]]]], 'where': [], 'groupBy': [[0, 7, False]], 'having': [[False, 5, [0, [3, 0, False], None], 2.0, None]], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "course_teach",
    "query": "SELECT Hometown FROM teacher GROUP BY Hometown HAVING COUNT(*)  >=  2",
    "query_toks": "['SELECT', 'Hometown', 'FROM', 'teacher', 'GROUP', 'BY', 'Hometown', 'HAVING', 'COUNT', '(', '*', ')', '>', '=', '2']",
    "query_toks_no_value": "['select', 'hometown', 'from', 'teacher', 'group', 'by', 'hometown', 'having', 'count', '(', '*', ')', '>', '=', 'value']",
    "question": "What are the towns from which at least two teachers come from?",
    "question_th": "ครูอย่างน้อยสองคนมาจากเมืองใด?",
    "question_toks": "['What', 'are', 'the', 'towns', 'from', 'which', 'at', 'least', 'two', 'teachers', 'come', 'from', '?']",
    "sql": "{'from': {'table_units': [['table_unit', 1]], 'conds': []}, 'select': [False, [[0, [0, [0, 7, False], None]]]], 'where': [], 'groupBy': [[0, 7, False]], 'having': [[False, 5, [0, [3, 0, False], None], 2.0, None]], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "course_teach",
    "query": "SELECT T3.Name ,  T2.Course FROM course_arrange AS T1 JOIN course AS T2 ON T1.Course_ID  =  T2.Course_ID JOIN teacher AS T3 ON T1.Teacher_ID  =  T3.Teacher_ID",
    "query_toks": "['SELECT', 'T3.Name', ',', 'T2.Course', 'FROM', 'course_arrange', 'AS', 'T1', 'JOIN', 'course', 'AS', 'T2', 'ON', 'T1.Course_ID', '=', 'T2.Course_ID', 'JOIN', 'teacher', 'AS', 'T3', 'ON', 'T1.Teacher_ID', '=', 'T3.Teacher_ID']",
    "query_toks_no_value": "['select', 't3', '.', 'name', ',', 't2', '.', 'course', 'from', 'course_arrange', 'as', 't1', 'join', 'course', 'as', 't2', 'on', 't1', '.', 'course_id', '=', 't2', '.', 'course_id', 'join', 'teacher', 'as', 't3', 'on', 't1', '.', 'teacher_id', '=', 't3', '.', 'teacher_id']",
    "question": "Show names of teachers and the courses they are arranged to teach.",
    "question_th": "แสดงชื่อครูและหลักสูตรที่จัดสอน",
    "question_toks": "['Show', 'names', 'of', 'teachers', 'and', 'the', 'courses', 'they', 'are', 'arranged', 'to', 'teach', '.']",
    "sql": "{'from': {'table_units': [['table_unit', 2], ['table_unit', 0], ['table_unit', 1]], 'conds': [[False, 2, [0, [0, 8, False], None], [0, 1, False], None], 'and', [False, 2, [0, [0, 9, False], None], [0, 4, False], None]]}, 'select': [False, [[0, [0, [0, 5, False], None]], [0, [0, [0, 3, False], None]]]], 'where': [], 'groupBy': [], 'having': [], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "course_teach",
    "query": "SELECT T3.Name ,  T2.Course FROM course_arrange AS T1 JOIN course AS T2 ON T1.Course_ID  =  T2.Course_ID JOIN teacher AS T3 ON T1.Teacher_ID  =  T3.Teacher_ID",
    "query_toks": "['SELECT', 'T3.Name', ',', 'T2.Course', 'FROM', 'course_arrange', 'AS', 'T1', 'JOIN', 'course', 'AS', 'T2', 'ON', 'T1.Course_ID', '=', 'T2.Course_ID', 'JOIN', 'teacher', 'AS', 'T3', 'ON', 'T1.Teacher_ID', '=', 'T3.Teacher_ID']",
    "query_toks_no_value": "['select', 't3', '.', 'name', ',', 't2', '.', 'course', 'from', 'course_arrange', 'as', 't1', 'join', 'course', 'as', 't2', 'on', 't1', '.', 'course_id', '=', 't2', '.', 'course_id', 'join', 'teacher', 'as', 't3', 'on', 't1', '.', 'teacher_id', '=', 't3', '.', 'teacher_id']",
    "question": "What is the name of each teacher and what course they teach?",
    "question_th": "ครูแต่ละคนชื่ออะไร และสอนวิชาอะไร?",
    "question_toks": "['What', 'is', 'the', 'name', 'of', 'each', 'teacher', 'and', 'what', 'course', 'they', 'teach', '?']",
    "sql": "{'from': {'table_units': [['table_unit', 2], ['table_unit', 0], ['table_unit', 1]], 'conds': [[False, 2, [0, [0, 8, False], None], [0, 1, False], None], 'and', [False, 2, [0, [0, 9, False], None], [0, 4, False], None]]}, 'select': [False, [[0, [0, [0, 5, False], None]], [0, [0, [0, 3, False], None]]]], 'where': [], 'groupBy': [], 'having': [], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "course_teach",
    "query": "SELECT T3.Name ,  T2.Course FROM course_arrange AS T1 JOIN course AS T2 ON T1.Course_ID  =  T2.Course_ID JOIN teacher AS T3 ON T1.Teacher_ID  =  T3.Teacher_ID ORDER BY T3.Name",
    "query_toks": "['SELECT', 'T3.Name', ',', 'T2.Course', 'FROM', 'course_arrange', 'AS', 'T1', 'JOIN', 'course', 'AS', 'T2', 'ON', 'T1.Course_ID', '=', 'T2.Course_ID', 'JOIN', 'teacher', 'AS', 'T3', 'ON', 'T1.Teacher_ID', '=', 'T3.Teacher_ID', 'ORDER', 'BY', 'T3.Name']",
    "query_toks_no_value": "['select', 't3', '.', 'name', ',', 't2', '.', 'course', 'from', 'course_arrange', 'as', 't1', 'join', 'course', 'as', 't2', 'on', 't1', '.', 'course_id', '=', 't2', '.', 'course_id', 'join', 'teacher', 'as', 't3', 'on', 't1', '.', 'teacher_id', '=', 't3', '.', 'teacher_id', 'order', 'by', 't3', '.', 'name']",
    "question": "Show names of teachers and the courses they are arranged to teach in ascending alphabetical order of the teacher's name.",
    "question_th": "แสดงชื่อครูและรายวิชาที่จัดสอนโดยเรียงตามตัวอักษรของชื่อครู",
    "question_toks": "['Show', 'names', 'of', 'teachers', 'and', 'the', 'courses', 'they', 'are', 'arranged', 'to', 'teach', 'in', 'ascending', 'alphabetical', 'order', 'of', 'the', 'teacher', \"'s\", 'name', '.']",
    "sql": "{'from': {'table_units': [['table_unit', 2], ['table_unit', 0], ['table_unit', 1]], 'conds': [[False, 2, [0, [0, 8, False], None], [0, 1, False], None], 'and', [False, 2, [0, [0, 9, False], None], [0, 4, False], None]]}, 'select': [False, [[0, [0, [0, 5, False], None]], [0, [0, [0, 3, False], None]]]], 'where': [], 'groupBy': [], 'having': [], 'orderBy': ['asc', [[0, [0, 5, False], None]]], 'limit': None, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "course_teach",
    "query": "SELECT T3.Name ,  T2.Course FROM course_arrange AS T1 JOIN course AS T2 ON T1.Course_ID  =  T2.Course_ID JOIN teacher AS T3 ON T1.Teacher_ID  =  T3.Teacher_ID ORDER BY T3.Name",
    "query_toks": "['SELECT', 'T3.Name', ',', 'T2.Course', 'FROM', 'course_arrange', 'AS', 'T1', 'JOIN', 'course', 'AS', 'T2', 'ON', 'T1.Course_ID', '=', 'T2.Course_ID', 'JOIN', 'teacher', 'AS', 'T3', 'ON', 'T1.Teacher_ID', '=', 'T3.Teacher_ID', 'ORDER', 'BY', 'T3.Name']",
    "query_toks_no_value": "['select', 't3', '.', 'name', ',', 't2', '.', 'course', 'from', 'course_arrange', 'as', 't1', 'join', 'course', 'as', 't2', 'on', 't1', '.', 'course_id', '=', 't2', '.', 'course_id', 'join', 'teacher', 'as', 't3', 'on', 't1', '.', 'teacher_id', '=', 't3', '.', 'teacher_id', 'order', 'by', 't3', '.', 'name']",
    "question": "What are the names of the teachers and the courses they teach in ascending alphabetical order by the name of the teacher?",
    "question_th": "ครูชื่ออะไรและรายวิชาที่สอนเรียงตามตัวอักษรจากชื่อครู?",
    "question_toks": "['What', 'are', 'the', 'names', 'of', 'the', 'teachers', 'and', 'the', 'courses', 'they', 'teach', 'in', 'ascending', 'alphabetical', 'order', 'by', 'the', 'name', 'of', 'the', 'teacher', '?']",
    "sql": "{'from': {'table_units': [['table_unit', 2], ['table_unit', 0], ['table_unit', 1]], 'conds': [[False, 2, [0, [0, 8, False], None], [0, 1, False], None], 'and', [False, 2, [0, [0, 9, False], None], [0, 4, False], None]]}, 'select': [False, [[0, [0, [0, 5, False], None]], [0, [0, [0, 3, False], None]]]], 'where': [], 'groupBy': [], 'having': [], 'orderBy': ['asc', [[0, [0, 5, False], None]]], 'limit': None, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "course_teach",
    "query": "SELECT T3.Name FROM course_arrange AS T1 JOIN course AS T2 ON T1.Course_ID  =  T2.Course_ID JOIN teacher AS T3 ON T1.Teacher_ID  =  T3.Teacher_ID WHERE T2.Course  =  \"Math\"",
    "query_toks": "['SELECT', 'T3.Name', 'FROM', 'course_arrange', 'AS', 'T1', 'JOIN', 'course', 'AS', 'T2', 'ON', 'T1.Course_ID', '=', 'T2.Course_ID', 'JOIN', 'teacher', 'AS', 'T3', 'ON', 'T1.Teacher_ID', '=', 'T3.Teacher_ID', 'WHERE', 'T2.Course', '=', '``', 'Math', \"''\"]",
    "query_toks_no_value": "['select', 't3', '.', 'name', 'from', 'course_arrange', 'as', 't1', 'join', 'course', 'as', 't2', 'on', 't1', '.', 'course_id', '=', 't2', '.', 'course_id', 'join', 'teacher', 'as', 't3', 'on', 't1', '.', 'teacher_id', '=', 't3', '.', 'teacher_id', 'where', 't2', '.', 'course', '=', 'value']",
    "question": "Show the name of the teacher for the math course.",
    "question_th": "แสดงชื่อครูประจำวิชาคณิตศาสตร์",
    "question_toks": "['Show', 'the', 'name', 'of', 'the', 'teacher', 'for', 'the', 'math', 'course', '.']",
    "sql": "{'from': {'table_units': [['table_unit', 2], ['table_unit', 0], ['table_unit', 1]], 'conds': [[False, 2, [0, [0, 8, False], None], [0, 1, False], None], 'and', [False, 2, [0, [0, 9, False], None], [0, 4, False], None]]}, 'select': [False, [[0, [0, [0, 5, False], None]]]], 'where': [[False, 2, [0, [0, 3, False], None], '\"Math\"', None]], 'groupBy': [], 'having': [], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "course_teach",
    "query": "SELECT T3.Name FROM course_arrange AS T1 JOIN course AS T2 ON T1.Course_ID  =  T2.Course_ID JOIN teacher AS T3 ON T1.Teacher_ID  =  T3.Teacher_ID WHERE T2.Course  =  \"Math\"",
    "query_toks": "['SELECT', 'T3.Name', 'FROM', 'course_arrange', 'AS', 'T1', 'JOIN', 'course', 'AS', 'T2', 'ON', 'T1.Course_ID', '=', 'T2.Course_ID', 'JOIN', 'teacher', 'AS', 'T3', 'ON', 'T1.Teacher_ID', '=', 'T3.Teacher_ID', 'WHERE', 'T2.Course', '=', '``', 'Math', \"''\"]",
    "query_toks_no_value": "['select', 't3', '.', 'name', 'from', 'course_arrange', 'as', 't1', 'join', 'course', 'as', 't2', 'on', 't1', '.', 'course_id', '=', 't2', '.', 'course_id', 'join', 'teacher', 'as', 't3', 'on', 't1', '.', 'teacher_id', '=', 't3', '.', 'teacher_id', 'where', 't2', '.', 'course', '=', 'value']",
    "question": "What are the names of the people who teach math courses?",
    "question_th": "คนที่สอนวิชาคณิตชื่ออะไรคะ?",
    "question_toks": "['What', 'are', 'the', 'names', 'of', 'the', 'people', 'who', 'teach', 'math', 'courses', '?']",
    "sql": "{'from': {'table_units': [['table_unit', 2], ['table_unit', 0], ['table_unit', 1]], 'conds': [[False, 2, [0, [0, 8, False], None], [0, 1, False], None], 'and', [False, 2, [0, [0, 9, False], None], [0, 4, False], None]]}, 'select': [False, [[0, [0, [0, 5, False], None]]]], 'where': [[False, 2, [0, [0, 3, False], None], '\"Math\"', None]], 'groupBy': [], 'having': [], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "course_teach",
    "query": "SELECT T2.Name ,  COUNT(*) FROM course_arrange AS T1 JOIN teacher AS T2 ON T1.Teacher_ID  =  T2.Teacher_ID GROUP BY T2.Name",
    "query_toks": "['SELECT', 'T2.Name', ',', 'COUNT', '(', '*', ')', 'FROM', 'course_arrange', 'AS', 'T1', 'JOIN', 'teacher', 'AS', 'T2', 'ON', 'T1.Teacher_ID', '=', 'T2.Teacher_ID', 'GROUP', 'BY', 'T2.Name']",
    "query_toks_no_value": "['select', 't2', '.', 'name', ',', 'count', '(', '*', ')', 'from', 'course_arrange', 'as', 't1', 'join', 'teacher', 'as', 't2', 'on', 't1', '.', 'teacher_id', '=', 't2', '.', 'teacher_id', 'group', 'by', 't2', '.', 'name']",
    "question": "Show names of teachers and the number of courses they teach.",
    "question_th": "แสดงชื่อครูและจำนวนรายวิชาที่สอน",
    "question_toks": "['Show', 'names', 'of', 'teachers', 'and', 'the', 'number', 'of', 'courses', 'they', 'teach', '.']",
    "sql": "{'from': {'table_units': [['table_unit', 2], ['table_unit', 1]], 'conds': [[False, 2, [0, [0, 9, False], None], [0, 4, False], None]]}, 'select': [False, [[0, [0, [0, 5, False], None]], [3, [0, [0, 0, False], None]]]], 'where': [], 'groupBy': [[0, 5, False]], 'having': [], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "course_teach",
    "query": "SELECT T2.Name ,  COUNT(*) FROM course_arrange AS T1 JOIN teacher AS T2 ON T1.Teacher_ID  =  T2.Teacher_ID GROUP BY T2.Name",
    "query_toks": "['SELECT', 'T2.Name', ',', 'COUNT', '(', '*', ')', 'FROM', 'course_arrange', 'AS', 'T1', 'JOIN', 'teacher', 'AS', 'T2', 'ON', 'T1.Teacher_ID', '=', 'T2.Teacher_ID', 'GROUP', 'BY', 'T2.Name']",
    "query_toks_no_value": "['select', 't2', '.', 'name', ',', 'count', '(', '*', ')', 'from', 'course_arrange', 'as', 't1', 'join', 'teacher', 'as', 't2', 'on', 't1', '.', 'teacher_id', '=', 't2', '.', 'teacher_id', 'group', 'by', 't2', '.', 'name']",
    "question": "What are the names of the teachers and how many courses do they teach?",
    "question_th": "ครูชื่ออะไร และสอนกี่วิชา?",
    "question_toks": "['What', 'are', 'the', 'names', 'of', 'the', 'teachers', 'and', 'how', 'many', 'courses', 'do', 'they', 'teach', '?']",
    "sql": "{'from': {'table_units': [['table_unit', 2], ['table_unit', 1]], 'conds': [[False, 2, [0, [0, 9, False], None], [0, 4, False], None]]}, 'select': [False, [[0, [0, [0, 5, False], None]], [3, [0, [0, 0, False], None]]]], 'where': [], 'groupBy': [[0, 5, False]], 'having': [], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "course_teach",
    "query": "SELECT T2.Name FROM course_arrange AS T1 JOIN teacher AS T2 ON T1.Teacher_ID  =  T2.Teacher_ID GROUP BY T2.Name HAVING COUNT(*)  >=  2",
    "query_toks": "['SELECT', 'T2.Name', 'FROM', 'course_arrange', 'AS', 'T1', 'JOIN', 'teacher', 'AS', 'T2', 'ON', 'T1.Teacher_ID', '=', 'T2.Teacher_ID', 'GROUP', 'BY', 'T2.Name', 'HAVING', 'COUNT', '(', '*', ')', '>', '=', '2']",
    "query_toks_no_value": "['select', 't2', '.', 'name', 'from', 'course_arrange', 'as', 't1', 'join', 'teacher', 'as', 't2', 'on', 't1', '.', 'teacher_id', '=', 't2', '.', 'teacher_id', 'group', 'by', 't2', '.', 'name', 'having', 'count', '(', '*', ')', '>', '=', 'value']",
    "question": "Show names of teachers that teach at least two courses.",
    "question_th": "แสดงชื่อครูที่สอนอย่างน้อยสองรายวิชา",
    "question_toks": "['Show', 'names', 'of', 'teachers', 'that', 'teach', 'at', 'least', 'two', 'courses', '.']",
    "sql": "{'from': {'table_units': [['table_unit', 2], ['table_unit', 1]], 'conds': [[False, 2, [0, [0, 9, False], None], [0, 4, False], None]]}, 'select': [False, [[0, [0, [0, 5, False], None]]]], 'where': [], 'groupBy': [[0, 5, False]], 'having': [[False, 5, [0, [3, 0, False], None], 2.0, None]], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "course_teach",
    "query": "SELECT T2.Name FROM course_arrange AS T1 JOIN teacher AS T2 ON T1.Teacher_ID  =  T2.Teacher_ID GROUP BY T2.Name HAVING COUNT(*)  >=  2",
    "query_toks": "['SELECT', 'T2.Name', 'FROM', 'course_arrange', 'AS', 'T1', 'JOIN', 'teacher', 'AS', 'T2', 'ON', 'T1.Teacher_ID', '=', 'T2.Teacher_ID', 'GROUP', 'BY', 'T2.Name', 'HAVING', 'COUNT', '(', '*', ')', '>', '=', '2']",
    "query_toks_no_value": "['select', 't2', '.', 'name', 'from', 'course_arrange', 'as', 't1', 'join', 'teacher', 'as', 't2', 'on', 't1', '.', 'teacher_id', '=', 't2', '.', 'teacher_id', 'group', 'by', 't2', '.', 'name', 'having', 'count', '(', '*', ')', '>', '=', 'value']",
    "question": "What are the names of the teachers who teach at least two courses?",
    "question_th": "ครูที่สอนอย่างน้อยสองหลักสูตรชื่ออะไร",
    "question_toks": "['What', 'are', 'the', 'names', 'of', 'the', 'teachers', 'who', 'teach', 'at', 'least', 'two', 'courses', '?']",
    "sql": "{'from': {'table_units': [['table_unit', 2], ['table_unit', 1]], 'conds': [[False, 2, [0, [0, 9, False], None], [0, 4, False], None]]}, 'select': [False, [[0, [0, [0, 5, False], None]]]], 'where': [], 'groupBy': [[0, 5, False]], 'having': [[False, 5, [0, [3, 0, False], None], 2.0, None]], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "course_teach",
    "query": "SELECT Name FROM teacher WHERE Teacher_id NOT IN (SELECT Teacher_id FROM course_arrange)",
    "query_toks": "['SELECT', 'Name', 'FROM', 'teacher', 'WHERE', 'Teacher_id', 'NOT', 'IN', '(', 'SELECT', 'Teacher_id', 'FROM', 'course_arrange', ')']",
    "query_toks_no_value": "['select', 'name', 'from', 'teacher', 'where', 'teacher_id', 'not', 'in', '(', 'select', 'teacher_id', 'from', 'course_arrange', ')']",
    "question": "List the names of teachers who have not been arranged to teach courses.",
    "question_th": "รายชื่อครูที่ยังไม่ได้จัดการเรียนการสอนรายวิชา",
    "question_toks": "['List', 'the', 'names', 'of', 'teachers', 'who', 'have', 'not', 'been', 'arranged', 'to', 'teach', 'courses', '.']",
    "sql": "{'from': {'table_units': [['table_unit', 1]], 'conds': []}, 'select': [False, [[0, [0, [0, 5, False], None]]]], 'where': [[True, 8, [0, [0, 4, False], None], {'from': {'table_units': [['table_unit', 2]], 'conds': []}, 'select': [False, [[0, [0, [0, 9, False], None]]]], 'where': [], 'groupBy': [], 'having': [], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}, None]], 'groupBy': [], 'having': [], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "course_teach",
    "query": "SELECT Name FROM teacher WHERE Teacher_id NOT IN (SELECT Teacher_id FROM course_arrange)",
    "query_toks": "['SELECT', 'Name', 'FROM', 'teacher', 'WHERE', 'Teacher_id', 'NOT', 'IN', '(', 'SELECT', 'Teacher_id', 'FROM', 'course_arrange', ')']",
    "query_toks_no_value": "['select', 'name', 'from', 'teacher', 'where', 'teacher_id', 'not', 'in', '(', 'select', 'teacher_id', 'from', 'course_arrange', ')']",
    "question": "What are the names of the teachers whose courses have not been arranged?",
    "question_th": "ครูที่ยังไม่ได้จัดหลักสูตรมีชื่ออะไรบ้าง?",
    "question_toks": "['What', 'are', 'the', 'names', 'of', 'the', 'teachers', 'whose', 'courses', 'have', 'not', 'been', 'arranged', '?']",
    "sql": "{'from': {'table_units': [['table_unit', 1]], 'conds': []}, 'select': [False, [[0, [0, [0, 5, False], None]]]], 'where': [[True, 8, [0, [0, 4, False], None], {'from': {'table_units': [['table_unit', 2]], 'conds': []}, 'select': [False, [[0, [0, [0, 9, False], None]]]], 'where': [], 'groupBy': [], 'having': [], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}, None]], 'groupBy': [], 'having': [], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "museum_visit",
    "query": "SELECT count(*) FROM visitor WHERE age  <  30",
    "query_toks": "['SELECT', 'count', '(', '*', ')', 'FROM', 'visitor', 'WHERE', 'age', '<', '30']",
    "query_toks_no_value": "['select', 'count', '(', '*', ')', 'from', 'visitor', 'where', 'age', '<', 'value']",
    "question": "How many visitors below age 30 are there?",
    "question_th": "มีผู้เข้าชมที่มีอายุต่ำกว่า 30 ปีกี่คน?",
    "question_toks": "['How', 'many', 'visitors', 'below', 'age', '30', 'are', 'there', '?']",
    "sql": "{'from': {'table_units': [['table_unit', 1]], 'conds': []}, 'select': [False, [[3, [0, [0, 0, False], None]]]], 'where': [[False, 4, [0, [0, 8, False], None], 30.0, None]], 'groupBy': [], 'having': [], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "museum_visit",
    "query": "SELECT name FROM visitor WHERE Level_of_membership  >  4 ORDER BY Level_of_membership DESC",
    "query_toks": "['SELECT', 'name', 'FROM', 'visitor', 'WHERE', 'Level_of_membership', '>', '4', 'ORDER', 'BY', 'Level_of_membership', 'DESC']",
    "query_toks_no_value": "['select', 'name', 'from', 'visitor', 'where', 'level_of_membership', '>', 'value', 'order', 'by', 'level_of_membership', 'desc']",
    "question": "Find the names of the visitors whose membership level is higher than 4, and order the results by the level from high to low.",
    "question_th": "ค้นหาชื่อผู้เข้าชมที่มีระดับสมาชิกสูงกว่า 4 และเรียงลำดับผลลัพธ์ตามระดับจากสูงไปต่ำ",
    "question_toks": "['Find', 'the', 'names', 'of', 'the', 'visitors', 'whose', 'membership', 'level', 'is', 'higher', 'than', '4', ',', 'and', 'order', 'the', 'results', 'by', 'the', 'level', 'from', 'high', 'to', 'low', '.']",
    "sql": "{'from': {'table_units': [['table_unit', 1]], 'conds': []}, 'select': [False, [[0, [0, [0, 6, False], None]]]], 'where': [[False, 3, [0, [0, 7, False], None], 4.0, None]], 'groupBy': [], 'having': [], 'orderBy': ['desc', [[0, [0, 7, False], None]]], 'limit': None, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "museum_visit",
    "query": "SELECT avg(age) FROM visitor WHERE Level_of_membership  <=  4",
    "query_toks": "['SELECT', 'avg', '(', 'age', ')', 'FROM', 'visitor', 'WHERE', 'Level_of_membership', '<', '=', '4']",
    "query_toks_no_value": "['select', 'avg', '(', 'age', ')', 'from', 'visitor', 'where', 'level_of_membership', '<', '=', 'value']",
    "question": "What is the average age of the visitors whose membership level is not higher than 4?",
    "question_th": "อายุเฉลี่ยของผู้เข้าชมที่มีระดับสมาชิกไม่สูงกว่า 4 คือเท่าใด?",
    "question_toks": "['What', 'is', 'the', 'average', 'age', 'of', 'the', 'visitors', 'whose', 'membership', 'level', 'is', 'not', 'higher', 'than', '4', '?']",
    "sql": "{'from': {'table_units': [['table_unit', 1]], 'conds': []}, 'select': [False, [[5, [0, [0, 8, False], None]]]], 'where': [[False, 6, [0, [0, 7, False], None], 4.0, None]], 'groupBy': [], 'having': [], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "museum_visit",
    "query": "SELECT name ,  Level_of_membership FROM visitor WHERE Level_of_membership  >  4 ORDER BY age DESC",
    "query_toks": "['SELECT', 'name', ',', 'Level_of_membership', 'FROM', 'visitor', 'WHERE', 'Level_of_membership', '>', '4', 'ORDER', 'BY', 'age', 'DESC']",
    "query_toks_no_value": "['select', 'name', ',', 'level_of_membership', 'from', 'visitor', 'where', 'level_of_membership', '>', 'value', 'order', 'by', 'age', 'desc']",
    "question": "Find the name and membership level of the visitors whose membership level is higher than 4, and sort by their age from old to young.",
    "question_th": "ค้นหาชื่อและระดับสมาชิกของผู้เข้าชมที่มีระดับสมาชิกสูงกว่า 4 และจัดเรียงตามอายุตั้งแต่อายุมากจนถึงอายุน้อย",
    "question_toks": "['Find', 'the', 'name', 'and', 'membership', 'level', 'of', 'the', 'visitors', 'whose', 'membership', 'level', 'is', 'higher', 'than', '4', ',', 'and', 'sort', 'by', 'their', 'age', 'from', 'old', 'to', 'young', '.']",
    "sql": "{'from': {'table_units': [['table_unit', 1]], 'conds': []}, 'select': [False, [[0, [0, [0, 6, False], None]], [0, [0, [0, 7, False], None]]]], 'where': [[False, 3, [0, [0, 7, False], None], 4.0, None]], 'groupBy': [], 'having': [], 'orderBy': ['desc', [[0, [0, 8, False], None]]], 'limit': None, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "museum_visit",
    "query": "SELECT museum_id ,  name FROM museum ORDER BY num_of_staff DESC LIMIT 1",
    "query_toks": "['SELECT', 'museum_id', ',', 'name', 'FROM', 'museum', 'ORDER', 'BY', 'num_of_staff', 'DESC', 'LIMIT', '1']",
    "query_toks_no_value": "['select', 'museum_id', ',', 'name', 'from', 'museum', 'order', 'by', 'num_of_staff', 'desc', 'limit', 'value']",
    "question": "Find the id and name of the museum that has the most staff members?",
    "question_th": "ค้นหารหัสและชื่อพิพิธภัณฑ์ที่มีเจ้าหน้าที่มากที่สุด?",
    "question_toks": "['Find', 'the', 'id', 'and', 'name', 'of', 'the', 'museum', 'that', 'has', 'the', 'most', 'staff', 'members', '?']",
    "sql": "{'from': {'table_units': [['table_unit', 0]], 'conds': []}, 'select': [False, [[0, [0, [0, 1, False], None]], [0, [0, [0, 2, False], None]]]], 'where': [], 'groupBy': [], 'having': [], 'orderBy': ['desc', [[0, [0, 3, False], None]]], 'limit': 1, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "museum_visit",
    "query": "SELECT avg(num_of_staff) FROM museum WHERE open_year  <  2009",
    "query_toks": "['SELECT', 'avg', '(', 'num_of_staff', ')', 'FROM', 'museum', 'WHERE', 'open_year', '<', '2009']",
    "query_toks_no_value": "['select', 'avg', '(', 'num_of_staff', ')', 'from', 'museum', 'where', 'open_year', '<', 'value']",
    "question": "Find the average number of staff working for the museums that were open before 2009.",
    "question_th": "ค้นหาจำนวนพนักงานโดยเฉลี่ยที่ทำงานให้กับพิพิธภัณฑ์ที่เปิดก่อนปี 2009",
    "question_toks": "['Find', 'the', 'average', 'number', 'of', 'staff', 'working', 'for', 'the', 'museums', 'that', 'were', 'open', 'before', '2009', '.']",
    "sql": "{'from': {'table_units': [['table_unit', 0]], 'conds': []}, 'select': [False, [[5, [0, [0, 3, False], None]]]], 'where': [[False, 4, [0, [0, 4, False], None], 2009.0, None]], 'groupBy': [], 'having': [], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "museum_visit",
    "query": "SELECT Num_of_Staff ,  Open_Year FROM museum WHERE name  =  'Plaza Museum'",
    "query_toks": "['SELECT', 'Num_of_Staff', ',', 'Open_Year', 'FROM', 'museum', 'WHERE', 'name', '=', \"'Plaza\", 'Museum', \"'\"]",
    "query_toks_no_value": "['select', 'num_of_staff', ',', 'open_year', 'from', 'museum', 'where', 'name', '=', 'value']",
    "question": "What are the opening year and staff number of the museum named Plaza Museum?",
    "question_th": "พิพิธภัณฑ์พลาซ่ามิวเซียมเปิดทำการและหมายเลขเจ้าหน้าที่คือเมื่อใด",
    "question_toks": "['What', 'are', 'the', 'opening', 'year', 'and', 'staff', 'number', 'of', 'the', 'museum', 'named', 'Plaza', 'Museum', '?']",
    "sql": "{'from': {'table_units': [['table_unit', 0]], 'conds': []}, 'select': [False, [[0, [0, [0, 3, False], None]], [0, [0, [0, 4, False], None]]]], 'where': [[False, 2, [0, [0, 2, False], None], '\"Plaza Museum\"', None]], 'groupBy': [], 'having': [], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "museum_visit",
    "query": "SELECT name FROM museum WHERE num_of_staff  >  (SELECT min(num_of_staff) FROM museum WHERE open_year  >  2010)",
    "query_toks": "['SELECT', 'name', 'FROM', 'museum', 'WHERE', 'num_of_staff', '>', '(', 'SELECT', 'min', '(', 'num_of_staff', ')', 'FROM', 'museum', 'WHERE', 'open_year', '>', '2010', ')']",
    "query_toks_no_value": "['select', 'name', 'from', 'museum', 'where', 'num_of_staff', '>', '(', 'select', 'min', '(', 'num_of_staff', ')', 'from', 'museum', 'where', 'open_year', '>', 'value', ')']",
    "question": "find the names of museums which have more staff than the minimum staff number of all museums opened after 2010.",
    "question_th": "ค้นหาชื่อพิพิธภัณฑ์ที่มีเจ้าหน้าที่มากกว่าจำนวนพนักงานขั้นต่ำของพิพิธภัณฑ์ทุกแห่งที่เปิดหลังปี 2553",
    "question_toks": "['find', 'the', 'names', 'of', 'museums', 'which', 'have', 'more', 'staff', 'than', 'the', 'minimum', 'staff', 'number', 'of', 'all', 'museums', 'opened', 'after', '2010', '.']",
    "sql": "{'from': {'table_units': [['table_unit', 0]], 'conds': []}, 'select': [False, [[0, [0, [0, 2, False], None]]]], 'where': [[False, 3, [0, [0, 3, False], None], {'from': {'table_units': [['table_unit', 0]], 'conds': []}, 'select': [False, [[2, [0, [0, 3, False], None]]]], 'where': [[False, 3, [0, [0, 4, False], None], 2010.0, None]], 'groupBy': [], 'having': [], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}, None]], 'groupBy': [], 'having': [], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "museum_visit",
    "query": "SELECT t1.id ,  t1.name ,  t1.age FROM visitor AS t1 JOIN visit AS t2 ON t1.id  =  t2.visitor_id GROUP BY t1.id HAVING count(*)  >  1",
    "query_toks": "['SELECT', 't1.id', ',', 't1.name', ',', 't1.age', 'FROM', 'visitor', 'AS', 't1', 'JOIN', 'visit', 'AS', 't2', 'ON', 't1.id', '=', 't2.visitor_id', 'GROUP', 'BY', 't1.id', 'HAVING', 'count', '(', '*', ')', '>', '1']",
    "query_toks_no_value": "['select', 't1', '.', 'id', ',', 't1', '.', 'name', ',', 't1', '.', 'age', 'from', 'visitor', 'as', 't1', 'join', 'visit', 'as', 't2', 'on', 't1', '.', 'id', '=', 't2', '.', 'visitor_id', 'group', 'by', 't1', '.', 'id', 'having', 'count', '(', '*', ')', '>', 'value']",
    "question": "find the id, name and age for visitors who visited some museums more than once.",
    "question_th": "ค้นหารหัส ชื่อ และอายุของผู้เยี่ยมชมที่เคยเยี่ยมชมพิพิธภัณฑ์บางแห่งมากกว่าหนึ่งครั้ง",
    "question_toks": "['find', 'the', 'id', ',', 'name', 'and', 'age', 'for', 'visitors', 'who', 'visited', 'some', 'museums', 'more', 'than', 'once', '.']",
    "sql": "{'from': {'table_units': [['table_unit', 1], ['table_unit', 2]], 'conds': [[False, 2, [0, [0, 5, False], None], [0, 10, False], None]]}, 'select': [False, [[0, [0, [0, 5, False], None]], [0, [0, [0, 6, False], None]], [0, [0, [0, 8, False], None]]]], 'where': [], 'groupBy': [[0, 5, False]], 'having': [[False, 3, [0, [3, 0, False], None], 1.0, None]], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "museum_visit",
    "query": "SELECT t2.visitor_id ,  t1.name ,  t1.Level_of_membership FROM visitor AS t1 JOIN visit AS t2 ON t1.id  =  t2.visitor_id GROUP BY t2.visitor_id ORDER BY sum(t2.Total_spent) DESC LIMIT 1",
    "query_toks": "['SELECT', 't2.visitor_id', ',', 't1.name', ',', 't1.Level_of_membership', 'FROM', 'visitor', 'AS', 't1', 'JOIN', 'visit', 'AS', 't2', 'ON', 't1.id', '=', 't2.visitor_id', 'GROUP', 'BY', 't2.visitor_id', 'ORDER', 'BY', 'sum', '(', 't2.Total_spent', ')', 'DESC', 'LIMIT', '1']",
    "query_toks_no_value": "['select', 't2', '.', 'visitor_id', ',', 't1', '.', 'name', ',', 't1', '.', 'level_of_membership', 'from', 'visitor', 'as', 't1', 'join', 'visit', 'as', 't2', 'on', 't1', '.', 'id', '=', 't2', '.', 'visitor_id', 'group', 'by', 't2', '.', 'visitor_id', 'order', 'by', 'sum', '(', 't2', '.', 'total_spent', ')', 'desc', 'limit', 'value']",
    "question": "What are the id, name and membership level of visitors who have spent the largest amount of money in total in all museum tickets?",
    "question_th": "รหัส ชื่อ และระดับสมาชิกของผู้เข้าชมที่ใช้เงินรวมมากที่สุดในตั๋วพิพิธภัณฑ์ทั้งหมดคือเท่าใด",
    "question_toks": "['What', 'are', 'the', 'id', ',', 'name', 'and', 'membership', 'level', 'of', 'visitors', 'who', 'have', 'spent', 'the', 'largest', 'amount', 'of', 'money', 'in', 'total', 'in', 'all', 'museum', 'tickets', '?']",
    "sql": "{'from': {'table_units': [['table_unit', 1], ['table_unit', 2]], 'conds': [[False, 2, [0, [0, 5, False], None], [0, 10, False], None]]}, 'select': [False, [[0, [0, [0, 10, False], None]], [0, [0, [0, 6, False], None]], [0, [0, [0, 7, False], None]]]], 'where': [], 'groupBy': [[0, 10, False]], 'having': [], 'orderBy': ['desc', [[0, [4, 12, False], None]]], 'limit': 1, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "museum_visit",
    "query": "SELECT t2.Museum_ID ,  t1.name FROM museum AS t1 JOIN visit AS t2 ON t1.Museum_ID  =  t2.Museum_ID GROUP BY t2.Museum_ID ORDER BY count(*) DESC LIMIT 1",
    "query_toks": "['SELECT', 't2.Museum_ID', ',', 't1.name', 'FROM', 'museum', 'AS', 't1', 'JOIN', 'visit', 'AS', 't2', 'ON', 't1.Museum_ID', '=', 't2.Museum_ID', 'GROUP', 'BY', 't2.Museum_ID', 'ORDER', 'BY', 'count', '(', '*', ')', 'DESC', 'LIMIT', '1']",
    "query_toks_no_value": "['select', 't2', '.', 'museum_id', ',', 't1', '.', 'name', 'from', 'museum', 'as', 't1', 'join', 'visit', 'as', 't2', 'on', 't1', '.', 'museum_id', '=', 't2', '.', 'museum_id', 'group', 'by', 't2', '.', 'museum_id', 'order', 'by', 'count', '(', '*', ')', 'desc', 'limit', 'value']",
    "question": "What are the id and name of the museum visited most times?",
    "question_th": "รหัสและชื่อของพิพิธภัณฑ์ที่เข้าชมบ่อยที่สุดคืออะไร?",
    "question_toks": "['What', 'are', 'the', 'id', 'and', 'name', 'of', 'the', 'museum', 'visited', 'most', 'times', '?']",
    "sql": "{'from': {'table_units': [['table_unit', 0], ['table_unit', 2]], 'conds': [[False, 2, [0, [0, 1, False], None], [0, 9, False], None]]}, 'select': [False, [[0, [0, [0, 9, False], None]], [0, [0, [0, 2, False], None]]]], 'where': [], 'groupBy': [[0, 9, False]], 'having': [], 'orderBy': ['desc', [[0, [3, 0, False], None]]], 'limit': 1, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "museum_visit",
    "query": "SELECT name FROM museum WHERE Museum_ID NOT IN (SELECT museum_id FROM visit)",
    "query_toks": "['SELECT', 'name', 'FROM', 'museum', 'WHERE', 'Museum_ID', 'NOT', 'IN', '(', 'SELECT', 'museum_id', 'FROM', 'visit', ')']",
    "query_toks_no_value": "['select', 'name', 'from', 'museum', 'where', 'museum_id', 'not', 'in', '(', 'select', 'museum_id', 'from', 'visit', ')']",
    "question": "What is the name of the museum that had no visitor yet?",
    "question_th": "พิพิธภัณฑ์ที่ยังไม่มีผู้เยี่ยมชมชื่ออะไร?",
    "question_toks": "['What', 'is', 'the', 'name', 'of', 'the', 'museum', 'that', 'had', 'no', 'visitor', 'yet', '?']",
    "sql": "{'from': {'table_units': [['table_unit', 0]], 'conds': []}, 'select': [False, [[0, [0, [0, 2, False], None]]]], 'where': [[True, 8, [0, [0, 1, False], None], {'from': {'table_units': [['table_unit', 2]], 'conds': []}, 'select': [False, [[0, [0, [0, 9, False], None]]]], 'where': [], 'groupBy': [], 'having': [], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}, None]], 'groupBy': [], 'having': [], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "museum_visit",
    "query": "SELECT t1.name ,  t1.age FROM visitor AS t1 JOIN visit AS t2 ON t1.id  =  t2.visitor_id ORDER BY t2.num_of_ticket DESC LIMIT 1",
    "query_toks": "['SELECT', 't1.name', ',', 't1.age', 'FROM', 'visitor', 'AS', 't1', 'JOIN', 'visit', 'AS', 't2', 'ON', 't1.id', '=', 't2.visitor_id', 'ORDER', 'BY', 't2.num_of_ticket', 'DESC', 'LIMIT', '1']",
    "query_toks_no_value": "['select', 't1', '.', 'name', ',', 't1', '.', 'age', 'from', 'visitor', 'as', 't1', 'join', 'visit', 'as', 't2', 'on', 't1', '.', 'id', '=', 't2', '.', 'visitor_id', 'order', 'by', 't2', '.', 'num_of_ticket', 'desc', 'limit', 'value']",
    "question": "Find the name and age of the visitor who bought the most tickets at once.",
    "question_th": "ค้นหาชื่อและอายุของผู้เข้าชมที่ซื้อตั๋วมากที่สุดในคราวเดียว",
    "question_toks": "['Find', 'the', 'name', 'and', 'age', 'of', 'the', 'visitor', 'who', 'bought', 'the', 'most', 'tickets', 'at', 'once', '.']",
    "sql": "{'from': {'table_units': [['table_unit', 1], ['table_unit', 2]], 'conds': [[False, 2, [0, [0, 5, False], None], [0, 10, False], None]]}, 'select': [False, [[0, [0, [0, 6, False], None]], [0, [0, [0, 8, False], None]]]], 'where': [], 'groupBy': [], 'having': [], 'orderBy': ['desc', [[0, [0, 11, False], None]]], 'limit': 1, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "museum_visit",
    "query": "SELECT avg(num_of_ticket) ,  max(num_of_ticket) FROM visit",
    "query_toks": "['SELECT', 'avg', '(', 'num_of_ticket', ')', ',', 'max', '(', 'num_of_ticket', ')', 'FROM', 'visit']",
    "query_toks_no_value": "['select', 'avg', '(', 'num_of_ticket', ')', ',', 'max', '(', 'num_of_ticket', ')', 'from', 'visit']",
    "question": "What are the average and maximum number of tickets bought in all visits?",
    "question_th": "จำนวนตั๋วโดยเฉลี่ยและสูงสุดที่ซื้อในการเข้าชมทั้งหมดคือเท่าใด",
    "question_toks": "['What', 'are', 'the', 'average', 'and', 'maximum', 'number', 'of', 'tickets', 'bought', 'in', 'all', 'visits', '?']",
    "sql": "{'from': {'table_units': [['table_unit', 2]], 'conds': []}, 'select': [False, [[5, [0, [0, 11, False], None]], [1, [0, [0, 11, False], None]]]], 'where': [], 'groupBy': [], 'having': [], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "museum_visit",
    "query": "SELECT sum(t2.Total_spent) FROM visitor AS t1 JOIN visit AS t2 ON t1.id  =  t2.visitor_id WHERE t1.Level_of_membership  =  1",
    "query_toks": "['SELECT', 'sum', '(', 't2.Total_spent', ')', 'FROM', 'visitor', 'AS', 't1', 'JOIN', 'visit', 'AS', 't2', 'ON', 't1.id', '=', 't2.visitor_id', 'WHERE', 't1.Level_of_membership', '=', '1']",
    "query_toks_no_value": "['select', 'sum', '(', 't2', '.', 'total_spent', ')', 'from', 'visitor', 'as', 't1', 'join', 'visit', 'as', 't2', 'on', 't1', '.', 'id', '=', 't2', '.', 'visitor_id', 'where', 't1', '.', 'level_of_membership', '=', 'value']",
    "question": "What is the total ticket expense of the visitors whose membership level is 1?",
    "question_th": "ค่าตั๋วทั้งหมดของผู้เยี่ยมชมที่มีระดับสมาชิกคือเท่าไร?",
    "question_toks": "['What', 'is', 'the', 'total', 'ticket', 'expense', 'of', 'the', 'visitors', 'whose', 'membership', 'level', 'is', '1', '?']",
    "sql": "{'from': {'table_units': [['table_unit', 1], ['table_unit', 2]], 'conds': [[False, 2, [0, [0, 5, False], None], [0, 10, False], None]]}, 'select': [False, [[4, [0, [0, 12, False], None]]]], 'where': [[False, 2, [0, [0, 7, False], None], 1.0, None]], 'groupBy': [], 'having': [], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "museum_visit",
    "query": "SELECT t1.name FROM visitor AS t1 JOIN visit AS t2 ON t1.id  =  t2.visitor_id JOIN museum AS t3 ON t3.Museum_ID  =  t2.Museum_ID WHERE t3.open_year  <  2009 INTERSECT SELECT t1.name FROM visitor AS t1 JOIN visit AS t2 ON t1.id  =  t2.visitor_id JOIN museum AS t3 ON t3.Museum_ID  =  t2.Museum_ID WHERE t3.open_year  >  2011",
    "query_toks": "['SELECT', 't1.name', 'FROM', 'visitor', 'AS', 't1', 'JOIN', 'visit', 'AS', 't2', 'ON', 't1.id', '=', 't2.visitor_id', 'JOIN', 'museum', 'AS', 't3', 'ON', 't3.Museum_ID', '=', 't2.Museum_ID', 'WHERE', 't3.open_year', '<', '2009', 'INTERSECT', 'SELECT', 't1.name', 'FROM', 'visitor', 'AS', 't1', 'JOIN', 'visit', 'AS', 't2', 'ON', 't1.id', '=', 't2.visitor_id', 'JOIN', 'museum', 'AS', 't3', 'ON', 't3.Museum_ID', '=', 't2.Museum_ID', 'WHERE', 't3.open_year', '>', '2011']",
    "query_toks_no_value": "['select', 't1', '.', 'name', 'from', 'visitor', 'as', 't1', 'join', 'visit', 'as', 't2', 'on', 't1', '.', 'id', '=', 't2', '.', 'visitor_id', 'join', 'museum', 'as', 't3', 'on', 't3', '.', 'museum_id', '=', 't2', '.', 'museum_id', 'where', 't3', '.', 'open_year', '<', 'value', 'intersect', 'select', 't1', '.', 'name', 'from', 'visitor', 'as', 't1', 'join', 'visit', 'as', 't2', 'on', 't1', '.', 'id', '=', 't2', '.', 'visitor_id', 'join', 'museum', 'as', 't3', 'on', 't3', '.', 'museum_id', '=', 't2', '.', 'museum_id', 'where', 't3', '.', 'open_year', '>', 'value']",
    "question": "What is the name of the visitor who visited both a museum opened before 2009 and a museum opened after 2011?",
    "question_th": "ผู้เข้าชมที่เยี่ยมชมทั้งพิพิธภัณฑ์ที่เปิดก่อนปี 2009 และพิพิธภัณฑ์ที่เปิดหลังปี 2011 ชื่ออะไร",
    "question_toks": "['What', 'is', 'the', 'name', 'of', 'the', 'visitor', 'who', 'visited', 'both', 'a', 'museum', 'opened', 'before', '2009', 'and', 'a', 'museum', 'opened', 'after', '2011', '?']",
    "sql": "{'from': {'table_units': [['table_unit', 1], ['table_unit', 2], ['table_unit', 0]], 'conds': [[False, 2, [0, [0, 5, False], None], [0, 10, False], None], 'and', [False, 2, [0, [0, 1, False], None], [0, 9, False], None]]}, 'select': [False, [[0, [0, [0, 6, False], None]]]], 'where': [[False, 4, [0, [0, 4, False], None], 2009.0, None]], 'groupBy': [], 'having': [], 'orderBy': [], 'limit': None, 'intersect': {'from': {'table_units': [['table_unit', 1], ['table_unit', 2], ['table_unit', 0]], 'conds': [[False, 2, [0, [0, 5, False], None], [0, 10, False], None], 'and', [False, 2, [0, [0, 1, False], None], [0, 9, False], None]]}, 'select': [False, [[0, [0, [0, 6, False], None]]]], 'where': [[False, 3, [0, [0, 4, False], None], 2011.0, None]], 'groupBy': [], 'having': [], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}, 'union': None, 'except': None}"
  },
  {
    "db_id": "museum_visit",
    "query": "SELECT count(*) FROM visitor WHERE id NOT IN (SELECT t2.visitor_id FROM museum AS t1 JOIN visit AS t2 ON t1.Museum_ID  =  t2.Museum_ID WHERE t1.open_year  >  2010)",
    "query_toks": "['SELECT', 'count', '(', '*', ')', 'FROM', 'visitor', 'WHERE', 'id', 'NOT', 'IN', '(', 'SELECT', 't2.visitor_id', 'FROM', 'museum', 'AS', 't1', 'JOIN', 'visit', 'AS', 't2', 'ON', 't1.Museum_ID', '=', 't2.Museum_ID', 'WHERE', 't1.open_year', '>', '2010', ')']",
    "query_toks_no_value": "['select', 'count', '(', '*', ')', 'from', 'visitor', 'where', 'id', 'not', 'in', '(', 'select', 't2', '.', 'visitor_id', 'from', 'museum', 'as', 't1', 'join', 'visit', 'as', 't2', 'on', 't1', '.', 'museum_id', '=', 't2', '.', 'museum_id', 'where', 't1', '.', 'open_year', '>', 'value', ')']",
    "question": "Find the number of visitors who did not visit any museum opened after 2010.",
    "question_th": "ค้นหาจำนวนผู้เข้าชมที่ไม่ได้เยี่ยมชมพิพิธภัณฑ์ใดๆ ที่เปิดหลังปี 2010",
    "question_toks": "['Find', 'the', 'number', 'of', 'visitors', 'who', 'did', 'not', 'visit', 'any', 'museum', 'opened', 'after', '2010', '.']",
    "sql": "{'from': {'table_units': [['table_unit', 1]], 'conds': []}, 'select': [False, [[3, [0, [0, 0, False], None]]]], 'where': [[True, 8, [0, [0, 5, False], None], {'from': {'table_units': [['table_unit', 0], ['table_unit', 2]], 'conds': [[False, 2, [0, [0, 1, False], None], [0, 9, False], None]]}, 'select': [False, [[0, [0, [0, 10, False], None]]]], 'where': [[False, 3, [0, [0, 4, False], None], 2010.0, None]], 'groupBy': [], 'having': [], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}, None]], 'groupBy': [], 'having': [], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "museum_visit",
    "query": "SELECT count(*) FROM museum WHERE open_year  >  2013 OR open_year  <  2008",
    "query_toks": "['SELECT', 'count', '(', '*', ')', 'FROM', 'museum', 'WHERE', 'open_year', '>', '2013', 'OR', 'open_year', '<', '2008']",
    "query_toks_no_value": "['select', 'count', '(', '*', ')', 'from', 'museum', 'where', 'open_year', '>', 'value', 'or', 'open_year', '<', 'value']",
    "question": "How many museums were opened after 2013 or before 2008?",
    "question_th": "มีพิพิธภัณฑ์กี่แห่งที่เปิดหลังปี 2556 หรือก่อนปี 2551",
    "question_toks": "['How', 'many', 'museums', 'were', 'opened', 'after', '2013', 'or', 'before', '2008', '?']",
    "sql": "{'from': {'table_units': [['table_unit', 0]], 'conds': []}, 'select': [False, [[3, [0, [0, 0, False], None]]]], 'where': [[False, 3, [0, [0, 4, False], None], 2013.0, None], 'or', [False, 4, [0, [0, 4, False], None], 2008.0, None]], 'groupBy': [], 'having': [], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "wta_1",
    "query": "SELECT count(*) FROM players",
    "query_toks": "['SELECT', 'count', '(', '*', ')', 'FROM', 'players']",
    "query_toks_no_value": "['select', 'count', '(', '*', ')', 'from', 'players']",
    "question": "Find the total number of players.",
    "question_th": "ค้นหาจำนวนผู้เล่นทั้งหมด",
    "question_toks": "['Find', 'the', 'total', 'number', 'of', 'players', '.']",
    "sql": "{'from': {'table_units': [['table_unit', 0]], 'conds': []}, 'select': [False, [[3, [0, [0, 0, False], None]]]], 'where': [], 'groupBy': [], 'having': [], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "wta_1",
    "query": "SELECT count(*) FROM players",
    "query_toks": "['SELECT', 'count', '(', '*', ')', 'FROM', 'players']",
    "query_toks_no_value": "['select', 'count', '(', '*', ')', 'from', 'players']",
    "question": "How many players are there?",
    "question_th": "มีผู้เล่นกี่คน?",
    "question_toks": "['How', 'many', 'players', 'are', 'there', '?']",
    "sql": "{'from': {'table_units': [['table_unit', 0]], 'conds': []}, 'select': [False, [[3, [0, [0, 0, False], None]]]], 'where': [], 'groupBy': [], 'having': [], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "wta_1",
    "query": "SELECT count(*) FROM matches",
    "query_toks": "['SELECT', 'count', '(', '*', ')', 'FROM', 'matches']",
    "query_toks_no_value": "['select', 'count', '(', '*', ')', 'from', 'matches']",
    "question": "Find the total number of matches.",
    "question_th": "ค้นหาจำนวนการแข่งขันทั้งหมด",
    "question_toks": "['Find', 'the', 'total', 'number', 'of', 'matches', '.']",
    "sql": "{'from': {'table_units': [['table_unit', 1]], 'conds': []}, 'select': [False, [[3, [0, [0, 0, False], None]]]], 'where': [], 'groupBy': [], 'having': [], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "wta_1",
    "query": "SELECT count(*) FROM matches",
    "query_toks": "['SELECT', 'count', '(', '*', ')', 'FROM', 'matches']",
    "query_toks_no_value": "['select', 'count', '(', '*', ')', 'from', 'matches']",
    "question": "Count the number of matches.",
    "question_th": "นับจำนวนการแข่งขัน",
    "question_toks": "['Count', 'the', 'number', 'of', 'matches', '.']",
    "sql": "{'from': {'table_units': [['table_unit', 1]], 'conds': []}, 'select': [False, [[3, [0, [0, 0, False], None]]]], 'where': [], 'groupBy': [], 'having': [], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "wta_1",
    "query": "SELECT first_name ,  birth_date FROM players WHERE country_code  =  'USA'",
    "query_toks": "['SELECT', 'first_name', ',', 'birth_date', 'FROM', 'players', 'WHERE', 'country_code', '=', \"'USA\", \"'\"]",
    "query_toks_no_value": "['select', 'first_name', ',', 'birth_date', 'from', 'players', 'where', 'country_code', '=', 'value']",
    "question": "List the first name and birth date of all players from the country with code USA.",
    "question_th": "รายชื่อและวันเกิดของผู้เล่นทั้งหมดจากประเทศที่มีรหัส USA",
    "question_toks": "['List', 'the', 'first', 'name', 'and', 'birth', 'date', 'of', 'all', 'players', 'from', 'the', 'country', 'with', 'code', 'USA', '.']",
    "sql": "{'from': {'table_units': [['table_unit', 0]], 'conds': []}, 'select': [False, [[0, [0, [0, 2, False], None]], [0, [0, [0, 5, False], None]]]], 'where': [[False, 2, [0, [0, 6, False], None], '\"USA\"', None]], 'groupBy': [], 'having': [], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "wta_1",
    "query": "SELECT first_name ,  birth_date FROM players WHERE country_code  =  'USA'",
    "query_toks": "['SELECT', 'first_name', ',', 'birth_date', 'FROM', 'players', 'WHERE', 'country_code', '=', \"'USA\", \"'\"]",
    "query_toks_no_value": "['select', 'first_name', ',', 'birth_date', 'from', 'players', 'where', 'country_code', '=', 'value']",
    "question": "What are the first names and birth dates of players from the USA?",
    "question_th": "ชื่อและวันเกิดของผู้เล่นจากสหรัฐอเมริกาคืออะไร?",
    "question_toks": "['What', 'are', 'the', 'first', 'names', 'and', 'birth', 'dates', 'of', 'players', 'from', 'the', 'USA', '?']",
    "sql": "{'from': {'table_units': [['table_unit', 0]], 'conds': []}, 'select': [False, [[0, [0, [0, 2, False], None]], [0, [0, [0, 5, False], None]]]], 'where': [[False, 2, [0, [0, 6, False], None], '\"USA\"', None]], 'groupBy': [], 'having': [], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "wta_1",
    "query": "SELECT avg(loser_age) ,  avg(winner_age) FROM matches",
    "query_toks": "['SELECT', 'avg', '(', 'loser_age', ')', ',', 'avg', '(', 'winner_age', ')', 'FROM', 'matches']",
    "query_toks_no_value": "['select', 'avg', '(', 'loser_age', ')', ',', 'avg', '(', 'winner_age', ')', 'from', 'matches']",
    "question": "Find the average age of losers and winners of all matches.",
    "question_th": "ค้นหาอายุเฉลี่ยของผู้แพ้และผู้ชนะการแข่งขันทั้งหมด",
    "question_toks": "['Find', 'the', 'average', 'age', 'of', 'losers', 'and', 'winners', 'of', 'all', 'matches', '.']",
    "sql": "{'from': {'table_units': [['table_unit', 1]], 'conds': []}, 'select': [False, [[5, [0, [0, 9, False], None]], [5, [0, [0, 28, False], None]]]], 'where': [], 'groupBy': [], 'having': [], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "wta_1",
    "query": "SELECT avg(loser_age) ,  avg(winner_age) FROM matches",
    "query_toks": "['SELECT', 'avg', '(', 'loser_age', ')', ',', 'avg', '(', 'winner_age', ')', 'FROM', 'matches']",
    "query_toks_no_value": "['select', 'avg', '(', 'loser_age', ')', ',', 'avg', '(', 'winner_age', ')', 'from', 'matches']",
    "question": "What are the average ages of losers and winners across matches?",
    "question_th": "อายุเฉลี่ยของผู้แพ้และผู้ชนะในการแข่งขันคือเท่าใด",
    "question_toks": "['What', 'are', 'the', 'average', 'ages', 'of', 'losers', 'and', 'winners', 'across', 'matches', '?']",
    "sql": "{'from': {'table_units': [['table_unit', 1]], 'conds': []}, 'select': [False, [[5, [0, [0, 9, False], None]], [5, [0, [0, 28, False], None]]]], 'where': [], 'groupBy': [], 'having': [], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "wta_1",
    "query": "SELECT avg(winner_rank) FROM matches",
    "query_toks": "['SELECT', 'avg', '(', 'winner_rank', ')', 'FROM', 'matches']",
    "query_toks_no_value": "['select', 'avg', '(', 'winner_rank', ')', 'from', 'matches']",
    "question": "Find the average rank of winners in all matches.",
    "question_th": "ค้นหาอันดับเฉลี่ยของผู้ชนะในการแข่งขันทั้งหมด",
    "question_toks": "['Find', 'the', 'average', 'rank', 'of', 'winners', 'in', 'all', 'matches', '.']",
    "sql": "{'from': {'table_units': [['table_unit', 1]], 'conds': []}, 'select': [False, [[5, [0, [0, 35, False], None]]]], 'where': [], 'groupBy': [], 'having': [], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "wta_1",
    "query": "SELECT avg(winner_rank) FROM matches",
    "query_toks": "['SELECT', 'avg', '(', 'winner_rank', ')', 'FROM', 'matches']",
    "query_toks_no_value": "['select', 'avg', '(', 'winner_rank', ')', 'from', 'matches']",
    "question": "What is the average rank for winners in all matches?",
    "question_th": "อันดับเฉลี่ยของผู้ชนะในการแข่งขันทั้งหมดคือเท่าไร?",
    "question_toks": "['What', 'is', 'the', 'average', 'rank', 'for', 'winners', 'in', 'all', 'matches', '?']",
    "sql": "{'from': {'table_units': [['table_unit', 1]], 'conds': []}, 'select': [False, [[5, [0, [0, 35, False], None]]]], 'where': [], 'groupBy': [], 'having': [], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "wta_1",
    "query": "SELECT min(loser_rank) FROM matches",
    "query_toks": "['SELECT', 'min', '(', 'loser_rank', ')', 'FROM', 'matches']",
    "query_toks_no_value": "['select', 'min', '(', 'loser_rank', ')', 'from', 'matches']",
    "question": "Find the highest rank of losers in all matches.",
    "question_th": "ค้นหาผู้แพ้อันดับสูงสุดในทุกแมตช์",
    "question_toks": "['Find', 'the', 'highest', 'rank', 'of', 'losers', 'in', 'all', 'matches', '.']",
    "sql": "{'from': {'table_units': [['table_unit', 1]], 'conds': []}, 'select': [False, [[2, [0, [0, 16, False], None]]]], 'where': [], 'groupBy': [], 'having': [], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "wta_1",
    "query": "SELECT min(loser_rank) FROM matches",
    "query_toks": "['SELECT', 'min', '(', 'loser_rank', ')', 'FROM', 'matches']",
    "query_toks_no_value": "['select', 'min', '(', 'loser_rank', ')', 'from', 'matches']",
    "question": "What is the best rank of losers across all matches?",
    "question_th": "อันดับผู้แพ้ที่ดีที่สุดในทุกนัดคืออะไร?",
    "question_toks": "['What', 'is', 'the', 'best', 'rank', 'of', 'losers', 'across', 'all', 'matches', '?']",
    "sql": "{'from': {'table_units': [['table_unit', 1]], 'conds': []}, 'select': [False, [[2, [0, [0, 16, False], None]]]], 'where': [], 'groupBy': [], 'having': [], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "wta_1",
    "query": "SELECT count(DISTINCT country_code) FROM players",
    "query_toks": "['SELECT', 'count', '(', 'DISTINCT', 'country_code', ')', 'FROM', 'players']",
    "query_toks_no_value": "['select', 'count', '(', 'distinct', 'country_code', ')', 'from', 'players']",
    "question": "find the number of distinct country codes of all players.",
    "question_th": "ค้นหาหมายเลขรหัสประเทศที่แตกต่างกันของผู้เล่นทุกคน",
    "question_toks": "['find', 'the', 'number', 'of', 'distinct', 'country', 'codes', 'of', 'all', 'players', '.']",
    "sql": "{'from': {'table_units': [['table_unit', 0]], 'conds': []}, 'select': [False, [[3, [0, [0, 6, True], None]]]], 'where': [], 'groupBy': [], 'having': [], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "wta_1",
    "query": "SELECT count(DISTINCT country_code) FROM players",
    "query_toks": "['SELECT', 'count', '(', 'DISTINCT', 'country_code', ')', 'FROM', 'players']",
    "query_toks_no_value": "['select', 'count', '(', 'distinct', 'country_code', ')', 'from', 'players']",
    "question": "How many distinct countries do players come from?",
    "question_th": "ผู้เล่นมาจากกี่ประเทศที่แตกต่างกัน?",
    "question_toks": "['How', 'many', 'distinct', 'countries', 'do', 'players', 'come', 'from', '?']",
    "sql": "{'from': {'table_units': [['table_unit', 0]], 'conds': []}, 'select': [False, [[3, [0, [0, 6, True], None]]]], 'where': [], 'groupBy': [], 'having': [], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "wta_1",
    "query": "SELECT count(DISTINCT loser_name) FROM matches",
    "query_toks": "['SELECT', 'count', '(', 'DISTINCT', 'loser_name', ')', 'FROM', 'matches']",
    "query_toks_no_value": "['select', 'count', '(', 'distinct', 'loser_name', ')', 'from', 'matches']",
    "question": "Find the number of distinct name of losers.",
    "question_th": "ค้นหาจำนวนชื่อที่ชัดเจนของผู้แพ้",
    "question_toks": "['Find', 'the', 'number', 'of', 'distinct', 'name', 'of', 'losers', '.']",
    "sql": "{'from': {'table_units': [['table_unit', 1]], 'conds': []}, 'select': [False, [[3, [0, [0, 15, True], None]]]], 'where': [], 'groupBy': [], 'having': [], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "wta_1",
    "query": "SELECT count(DISTINCT loser_name) FROM matches",
    "query_toks": "['SELECT', 'count', '(', 'DISTINCT', 'loser_name', ')', 'FROM', 'matches']",
    "query_toks_no_value": "['select', 'count', '(', 'distinct', 'loser_name', ')', 'from', 'matches']",
    "question": "How many different loser names are there?",
    "question_th": "มีชื่อผู้แพ้ที่แตกต่างกันกี่ชื่อ?",
    "question_toks": "['How', 'many', 'different', 'loser', 'names', 'are', 'there', '?']",
    "sql": "{'from': {'table_units': [['table_unit', 1]], 'conds': []}, 'select': [False, [[3, [0, [0, 15, True], None]]]], 'where': [], 'groupBy': [], 'having': [], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "wta_1",
    "query": "SELECT tourney_name FROM matches GROUP BY tourney_name HAVING count(*)  >  10",
    "query_toks": "['SELECT', 'tourney_name', 'FROM', 'matches', 'GROUP', 'BY', 'tourney_name', 'HAVING', 'count', '(', '*', ')', '>', '10']",
    "query_toks_no_value": "['select', 'tourney_name', 'from', 'matches', 'group', 'by', 'tourney_name', 'having', 'count', '(', '*', ')', '>', 'value']",
    "question": "Find the name of tourney that has more than 10 matches.",
    "question_th": "ค้นหาชื่อทัวร์นาเมนท์ที่มีมากกว่า 10 นัด",
    "question_toks": "['Find', 'the', 'name', 'of', 'tourney', 'that', 'has', 'more', 'than', '10', 'matches', '.']",
    "sql": "{'from': {'table_units': [['table_unit', 1]], 'conds': []}, 'select': [False, [[0, [0, [0, 27, False], None]]]], 'where': [], 'groupBy': [[0, 27, False]], 'having': [[False, 3, [0, [3, 0, False], None], 10.0, None]], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "wta_1",
    "query": "SELECT tourney_name FROM matches GROUP BY tourney_name HAVING count(*)  >  10",
    "query_toks": "['SELECT', 'tourney_name', 'FROM', 'matches', 'GROUP', 'BY', 'tourney_name', 'HAVING', 'count', '(', '*', ')', '>', '10']",
    "query_toks_no_value": "['select', 'tourney_name', 'from', 'matches', 'group', 'by', 'tourney_name', 'having', 'count', '(', '*', ')', '>', 'value']",
    "question": "What are the names of tournaments that have more than 10 matches?",
    "question_th": "การแข่งขันที่มีมากกว่า 10 นัดชื่ออะไร?",
    "question_toks": "['What', 'are', 'the', 'names', 'of', 'tournaments', 'that', 'have', 'more', 'than', '10', 'matches', '?']",
    "sql": "{'from': {'table_units': [['table_unit', 1]], 'conds': []}, 'select': [False, [[0, [0, [0, 27, False], None]]]], 'where': [], 'groupBy': [[0, 27, False]], 'having': [[False, 3, [0, [3, 0, False], None], 10.0, None]], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "wta_1",
    "query": "SELECT winner_name FROM matches WHERE YEAR  =  2013 INTERSECT SELECT winner_name FROM matches WHERE YEAR  =  2016",
    "query_toks": "['SELECT', 'winner_name', 'FROM', 'matches', 'WHERE', 'YEAR', '=', '2013', 'INTERSECT', 'SELECT', 'winner_name', 'FROM', 'matches', 'WHERE', 'YEAR', '=', '2016']",
    "query_toks_no_value": "['select', 'winner_name', 'from', 'matches', 'where', 'year', '=', 'value', 'intersect', 'select', 'winner_name', 'from', 'matches', 'where', 'year', '=', 'value']",
    "question": "List the names of all winners who played in both 2013 and 2016.",
    "question_th": "รายชื่อผู้ชนะทั้งหมดที่เล่นในปี 2013 และ 2016",
    "question_toks": "['List', 'the', 'names', 'of', 'all', 'winners', 'who', 'played', 'in', 'both', '2013', 'and', '2016', '.']",
    "sql": "{'from': {'table_units': [['table_unit', 1]], 'conds': []}, 'select': [False, [[0, [0, [0, 34, False], None]]]], 'where': [[False, 2, [0, [0, 38, False], None], 2013.0, None]], 'groupBy': [], 'having': [], 'orderBy': [], 'limit': None, 'intersect': {'from': {'table_units': [['table_unit', 1]], 'conds': []}, 'select': [False, [[0, [0, [0, 34, False], None]]]], 'where': [[False, 2, [0, [0, 38, False], None], 2016.0, None]], 'groupBy': [], 'having': [], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}, 'union': None, 'except': None}"
  },
  {
    "db_id": "wta_1",
    "query": "SELECT winner_name FROM matches WHERE YEAR  =  2013 INTERSECT SELECT winner_name FROM matches WHERE YEAR  =  2016",
    "query_toks": "['SELECT', 'winner_name', 'FROM', 'matches', 'WHERE', 'YEAR', '=', '2013', 'INTERSECT', 'SELECT', 'winner_name', 'FROM', 'matches', 'WHERE', 'YEAR', '=', '2016']",
    "query_toks_no_value": "['select', 'winner_name', 'from', 'matches', 'where', 'year', '=', 'value', 'intersect', 'select', 'winner_name', 'from', 'matches', 'where', 'year', '=', 'value']",
    "question": "What are the names of players who won in both 2013 and 2016?",
    "question_th": "ผู้เล่นที่ชนะในปี 2013 และ 2016 มีชื่ออะไรบ้าง?",
    "question_toks": "['What', 'are', 'the', 'names', 'of', 'players', 'who', 'won', 'in', 'both', '2013', 'and', '2016', '?']",
    "sql": "{'from': {'table_units': [['table_unit', 1]], 'conds': []}, 'select': [False, [[0, [0, [0, 34, False], None]]]], 'where': [[False, 2, [0, [0, 38, False], None], 2013.0, None]], 'groupBy': [], 'having': [], 'orderBy': [], 'limit': None, 'intersect': {'from': {'table_units': [['table_unit', 1]], 'conds': []}, 'select': [False, [[0, [0, [0, 34, False], None]]]], 'where': [[False, 2, [0, [0, 38, False], None], 2016.0, None]], 'groupBy': [], 'having': [], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}, 'union': None, 'except': None}"
  },
  {
    "db_id": "wta_1",
    "query": "SELECT count(*) FROM matches WHERE YEAR  =  2013 OR YEAR  =  2016",
    "query_toks": "['SELECT', 'count', '(', '*', ')', 'FROM', 'matches', 'WHERE', 'YEAR', '=', '2013', 'OR', 'YEAR', '=', '2016']",
    "query_toks_no_value": "['select', 'count', '(', '*', ')', 'from', 'matches', 'where', 'year', '=', 'value', 'or', 'year', '=', 'value']",
    "question": "List the number of all matches who played in years of 2013 or 2016.",
    "question_th": "รายชื่อจำนวนแมตช์ทั้งหมดที่เล่นในปี 2013 หรือ 2016",
    "question_toks": "['List', 'the', 'number', 'of', 'all', 'matches', 'who', 'played', 'in', 'years', 'of', '2013', 'or', '2016', '.']",
    "sql": "{'from': {'table_units': [['table_unit', 1]], 'conds': []}, 'select': [False, [[3, [0, [0, 0, False], None]]]], 'where': [[False, 2, [0, [0, 38, False], None], 2013.0, None], 'or', [False, 2, [0, [0, 38, False], None], 2016.0, None]], 'groupBy': [], 'having': [], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "wta_1",
    "query": "SELECT count(*) FROM matches WHERE YEAR  =  2013 OR YEAR  =  2016",
    "query_toks": "['SELECT', 'count', '(', '*', ')', 'FROM', 'matches', 'WHERE', 'YEAR', '=', '2013', 'OR', 'YEAR', '=', '2016']",
    "query_toks_no_value": "['select', 'count', '(', '*', ')', 'from', 'matches', 'where', 'year', '=', 'value', 'or', 'year', '=', 'value']",
    "question": "How many matches were played in 2013 or 2016?",
    "question_th": "มีการแข่งขันกี่นัดในปี 2013 หรือ 2016?",
    "question_toks": "['How', 'many', 'matches', 'were', 'played', 'in', '2013', 'or', '2016', '?']",
    "sql": "{'from': {'table_units': [['table_unit', 1]], 'conds': []}, 'select': [False, [[3, [0, [0, 0, False], None]]]], 'where': [[False, 2, [0, [0, 38, False], None], 2013.0, None], 'or', [False, 2, [0, [0, 38, False], None], 2016.0, None]], 'groupBy': [], 'having': [], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "wta_1",
    "query": "SELECT T1.country_code ,  T1.first_name FROM players AS T1 JOIN matches AS T2 ON T1.player_id  =  T2.winner_id WHERE T2.tourney_name  =  'WTA Championships' INTERSECT SELECT T1.country_code ,  T1.first_name FROM players AS T1 JOIN matches AS T2 ON T1.player_id  =  T2.winner_id WHERE T2.tourney_name  =  'Australian Open'",
    "query_toks": "['SELECT', 'T1.country_code', ',', 'T1.first_name', 'FROM', 'players', 'AS', 'T1', 'JOIN', 'matches', 'AS', 'T2', 'ON', 'T1.player_id', '=', 'T2.winner_id', 'WHERE', 'T2.tourney_name', '=', \"'WTA\", 'Championships', \"'\", 'INTERSECT', 'SELECT', 'T1.country_code', ',', 'T1.first_name', 'FROM', 'players', 'AS', 'T1', 'JOIN', 'matches', 'AS', 'T2', 'ON', 'T1.player_id', '=', 'T2.winner_id', 'WHERE', 'T2.tourney_name', '=', \"'Australian\", 'Open', \"'\"]",
    "query_toks_no_value": "['select', 't1', '.', 'country_code', ',', 't1', '.', 'first_name', 'from', 'players', 'as', 't1', 'join', 'matches', 'as', 't2', 'on', 't1', '.', 'player_id', '=', 't2', '.', 'winner_id', 'where', 't2', '.', 'tourney_name', '=', 'value', 'intersect', 'select', 't1', '.', 'country_code', ',', 't1', '.', 'first_name', 'from', 'players', 'as', 't1', 'join', 'matches', 'as', 't2', 'on', 't1', '.', 'player_id', '=', 't2', '.', 'winner_id', 'where', 't2', '.', 'tourney_name', '=', 'value']",
    "question": "What are the country code and first name of the players who won in both tourney WTA Championships and Australian Open?",
    "question_th": "รหัสประเทศและชื่อของผู้เล่นที่ชนะทั้งทัวร์นาเมนต์ WTA Championships และ Australian Open คืออะไร",
    "question_toks": "['What', 'are', 'the', 'country', 'code', 'and', 'first', 'name', 'of', 'the', 'players', 'who', 'won', 'in', 'both', 'tourney', 'WTA', 'Championships', 'and', 'Australian', 'Open', '?']",
    "sql": "{'from': {'table_units': [['table_unit', 0], ['table_unit', 1]], 'conds': [[False, 2, [0, [0, 1, False], None], [0, 32, False], None]]}, 'select': [False, [[0, [0, [0, 6, False], None]], [0, [0, [0, 2, False], None]]]], 'where': [[False, 2, [0, [0, 27, False], None], '\"WTA Championships\"', None]], 'groupBy': [], 'having': [], 'orderBy': [], 'limit': None, 'intersect': {'from': {'table_units': [['table_unit', 0], ['table_unit', 1]], 'conds': [[False, 2, [0, [0, 1, False], None], [0, 32, False], None]]}, 'select': [False, [[0, [0, [0, 6, False], None]], [0, [0, [0, 2, False], None]]]], 'where': [[False, 2, [0, [0, 27, False], None], '\"Australian Open\"', None]], 'groupBy': [], 'having': [], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}, 'union': None, 'except': None}"
  },
  {
    "db_id": "wta_1",
    "query": "SELECT T1.country_code ,  T1.first_name FROM players AS T1 JOIN matches AS T2 ON T1.player_id  =  T2.winner_id WHERE T2.tourney_name  =  'WTA Championships' INTERSECT SELECT T1.country_code ,  T1.first_name FROM players AS T1 JOIN matches AS T2 ON T1.player_id  =  T2.winner_id WHERE T2.tourney_name  =  'Australian Open'",
    "query_toks": "['SELECT', 'T1.country_code', ',', 'T1.first_name', 'FROM', 'players', 'AS', 'T1', 'JOIN', 'matches', 'AS', 'T2', 'ON', 'T1.player_id', '=', 'T2.winner_id', 'WHERE', 'T2.tourney_name', '=', \"'WTA\", 'Championships', \"'\", 'INTERSECT', 'SELECT', 'T1.country_code', ',', 'T1.first_name', 'FROM', 'players', 'AS', 'T1', 'JOIN', 'matches', 'AS', 'T2', 'ON', 'T1.player_id', '=', 'T2.winner_id', 'WHERE', 'T2.tourney_name', '=', \"'Australian\", 'Open', \"'\"]",
    "query_toks_no_value": "['select', 't1', '.', 'country_code', ',', 't1', '.', 'first_name', 'from', 'players', 'as', 't1', 'join', 'matches', 'as', 't2', 'on', 't1', '.', 'player_id', '=', 't2', '.', 'winner_id', 'where', 't2', '.', 'tourney_name', '=', 'value', 'intersect', 'select', 't1', '.', 'country_code', ',', 't1', '.', 'first_name', 'from', 'players', 'as', 't1', 'join', 'matches', 'as', 't2', 'on', 't1', '.', 'player_id', '=', 't2', '.', 'winner_id', 'where', 't2', '.', 'tourney_name', '=', 'value']",
    "question": "What are the first names and country codes for players who won both the WTA Championships and the Australian Open?",
    "question_th": "ชื่อและรหัสประเทศสำหรับผู้เล่นที่ชนะทั้ง WTA Championships และ Australian Open คืออะไร",
    "question_toks": "['What', 'are', 'the', 'first', 'names', 'and', 'country', 'codes', 'for', 'players', 'who', 'won', 'both', 'the', 'WTA', 'Championships', 'and', 'the', 'Australian', 'Open', '?']",
    "sql": "{'from': {'table_units': [['table_unit', 0], ['table_unit', 1]], 'conds': [[False, 2, [0, [0, 1, False], None], [0, 32, False], None]]}, 'select': [False, [[0, [0, [0, 6, False], None]], [0, [0, [0, 2, False], None]]]], 'where': [[False, 2, [0, [0, 27, False], None], '\"WTA Championships\"', None]], 'groupBy': [], 'having': [], 'orderBy': [], 'limit': None, 'intersect': {'from': {'table_units': [['table_unit', 0], ['table_unit', 1]], 'conds': [[False, 2, [0, [0, 1, False], None], [0, 32, False], None]]}, 'select': [False, [[0, [0, [0, 6, False], None]], [0, [0, [0, 2, False], None]]]], 'where': [[False, 2, [0, [0, 27, False], None], '\"Australian Open\"', None]], 'groupBy': [], 'having': [], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}, 'union': None, 'except': None}"
  },
  {
    "db_id": "wta_1",
    "query": "SELECT first_name ,  country_code FROM players ORDER BY birth_date LIMIT 1",
    "query_toks": "['SELECT', 'first_name', ',', 'country_code', 'FROM', 'players', 'ORDER', 'BY', 'birth_date', 'LIMIT', '1']",
    "query_toks_no_value": "['select', 'first_name', ',', 'country_code', 'from', 'players', 'order', 'by', 'birth_date', 'limit', 'value']",
    "question": "Find the first name and country code of the oldest player.",
    "question_th": "ค้นหาชื่อและรหัสประเทศของผู้เล่นอายุมากที่สุด",
    "question_toks": "['Find', 'the', 'first', 'name', 'and', 'country', 'code', 'of', 'the', 'oldest', 'player', '.']",
    "sql": "{'from': {'table_units': [['table_unit', 0]], 'conds': []}, 'select': [False, [[0, [0, [0, 2, False], None]], [0, [0, [0, 6, False], None]]]], 'where': [], 'groupBy': [], 'having': [], 'orderBy': ['asc', [[0, [0, 5, False], None]]], 'limit': 1, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "wta_1",
    "query": "SELECT first_name ,  country_code FROM players ORDER BY birth_date LIMIT 1",
    "query_toks": "['SELECT', 'first_name', ',', 'country_code', 'FROM', 'players', 'ORDER', 'BY', 'birth_date', 'LIMIT', '1']",
    "query_toks_no_value": "['select', 'first_name', ',', 'country_code', 'from', 'players', 'order', 'by', 'birth_date', 'limit', 'value']",
    "question": "What is the first name and country code of the oldest player?",
    "question_th": "ชื่อและรหัสประเทศของผู้เล่นอายุมากที่สุดคืออะไร?",
    "question_toks": "['What', 'is', 'the', 'first', 'name', 'and', 'country', 'code', 'of', 'the', 'oldest', 'player', '?']",
    "sql": "{'from': {'table_units': [['table_unit', 0]], 'conds': []}, 'select': [False, [[0, [0, [0, 2, False], None]], [0, [0, [0, 6, False], None]]]], 'where': [], 'groupBy': [], 'having': [], 'orderBy': ['asc', [[0, [0, 5, False], None]]], 'limit': 1, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "wta_1",
    "query": "SELECT first_name ,  last_name FROM players ORDER BY birth_date",
    "query_toks": "['SELECT', 'first_name', ',', 'last_name', 'FROM', 'players', 'ORDER', 'BY', 'birth_date']",
    "query_toks_no_value": "['select', 'first_name', ',', 'last_name', 'from', 'players', 'order', 'by', 'birth_date']",
    "question": "List the first and last name of all players in the order of birth date.",
    "question_th": "ระบุชื่อและนามสกุลของผู้เล่นทั้งหมดตามลำดับวันเกิด",
    "question_toks": "['List', 'the', 'first', 'and', 'last', 'name', 'of', 'all', 'players', 'in', 'the', 'order', 'of', 'birth', 'date', '.']",
    "sql": "{'from': {'table_units': [['table_unit', 0]], 'conds': []}, 'select': [False, [[0, [0, [0, 2, False], None]], [0, [0, [0, 3, False], None]]]], 'where': [], 'groupBy': [], 'having': [], 'orderBy': ['asc', [[0, [0, 5, False], None]]], 'limit': None, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "wta_1",
    "query": "SELECT first_name ,  last_name FROM players ORDER BY birth_date",
    "query_toks": "['SELECT', 'first_name', ',', 'last_name', 'FROM', 'players', 'ORDER', 'BY', 'birth_date']",
    "query_toks_no_value": "['select', 'first_name', ',', 'last_name', 'from', 'players', 'order', 'by', 'birth_date']",
    "question": "What are the full names of all players, sorted by birth date?",
    "question_th": "ผู้เล่นทั้งหมดชื่ออะไร เรียงตามวันเกิด?",
    "question_toks": "['What', 'are', 'the', 'full', 'names', 'of', 'all', 'players', ',', 'sorted', 'by', 'birth', 'date', '?']",
    "sql": "{'from': {'table_units': [['table_unit', 0]], 'conds': []}, 'select': [False, [[0, [0, [0, 2, False], None]], [0, [0, [0, 3, False], None]]]], 'where': [], 'groupBy': [], 'having': [], 'orderBy': ['asc', [[0, [0, 5, False], None]]], 'limit': None, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "wta_1",
    "query": "SELECT first_name ,  last_name FROM players WHERE hand  =  'L' ORDER BY birth_date",
    "query_toks": "['SELECT', 'first_name', ',', 'last_name', 'FROM', 'players', 'WHERE', 'hand', '=', \"'L\", \"'\", 'ORDER', 'BY', 'birth_date']",
    "query_toks_no_value": "['select', 'first_name', ',', 'last_name', 'from', 'players', 'where', 'hand', '=', 'value', 'order', 'by', 'birth_date']",
    "question": "List the first and last name of all players who are left / L hand in the order of birth date.",
    "question_th": "ระบุชื่อและนามสกุลของผู้เล่นทั้งหมดที่เหลืออยู่ / มือ L ตามลำดับวันเกิด",
    "question_toks": "['List', 'the', 'first', 'and', 'last', 'name', 'of', 'all', 'players', 'who', 'are', 'left', '/', 'L', 'hand', 'in', 'the', 'order', 'of', 'birth', 'date', '.']",
    "sql": "{'from': {'table_units': [['table_unit', 0]], 'conds': []}, 'select': [False, [[0, [0, [0, 2, False], None]], [0, [0, [0, 3, False], None]]]], 'where': [[False, 2, [0, [0, 4, False], None], '\"L\"', None]], 'groupBy': [], 'having': [], 'orderBy': ['asc', [[0, [0, 5, False], None]]], 'limit': None, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "wta_1",
    "query": "SELECT first_name ,  last_name FROM players WHERE hand  =  'L' ORDER BY birth_date",
    "query_toks": "['SELECT', 'first_name', ',', 'last_name', 'FROM', 'players', 'WHERE', 'hand', '=', \"'L\", \"'\", 'ORDER', 'BY', 'birth_date']",
    "query_toks_no_value": "['select', 'first_name', ',', 'last_name', 'from', 'players', 'where', 'hand', '=', 'value', 'order', 'by', 'birth_date']",
    "question": "What are the full names of all left handed players, in order of birth date?",
    "question_th": "ผู้เล่นถนัดซ้ายมีชื่อเต็มว่าอะไร เรียงตามวันเกิด?",
    "question_toks": "['What', 'are', 'the', 'full', 'names', 'of', 'all', 'left', 'handed', 'players', ',', 'in', 'order', 'of', 'birth', 'date', '?']",
    "sql": "{'from': {'table_units': [['table_unit', 0]], 'conds': []}, 'select': [False, [[0, [0, [0, 2, False], None]], [0, [0, [0, 3, False], None]]]], 'where': [[False, 2, [0, [0, 4, False], None], '\"L\"', None]], 'groupBy': [], 'having': [], 'orderBy': ['asc', [[0, [0, 5, False], None]]], 'limit': None, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "wta_1",
    "query": "SELECT T1.country_code ,  T1.first_name FROM players AS T1 JOIN rankings AS T2 ON T1.player_id  =  T2.player_id ORDER BY T2.tours DESC LIMIT 1",
    "query_toks": "['SELECT', 'T1.country_code', ',', 'T1.first_name', 'FROM', 'players', 'AS', 'T1', 'JOIN', 'rankings', 'AS', 'T2', 'ON', 'T1.player_id', '=', 'T2.player_id', 'ORDER', 'BY', 'T2.tours', 'DESC', 'LIMIT', '1']",
    "query_toks_no_value": "['select', 't1', '.', 'country_code', ',', 't1', '.', 'first_name', 'from', 'players', 'as', 't1', 'join', 'rankings', 'as', 't2', 'on', 't1', '.', 'player_id', '=', 't2', '.', 'player_id', 'order', 'by', 't2', '.', 'tours', 'desc', 'limit', 'value']",
    "question": "Find the first name and country code of the player who did the most number of tours.",
    "question_th": "ค้นหาชื่อและรหัสประเทศของผู้เล่นที่ทำทัวร์มากที่สุด",
    "question_toks": "['Find', 'the', 'first', 'name', 'and', 'country', 'code', 'of', 'the', 'player', 'who', 'did', 'the', 'most', 'number', 'of', 'tours', '.']",
    "sql": "{'from': {'table_units': [['table_unit', 0], ['table_unit', 2]], 'conds': [[False, 2, [0, [0, 1, False], None], [0, 41, False], None]]}, 'select': [False, [[0, [0, [0, 6, False], None]], [0, [0, [0, 2, False], None]]]], 'where': [], 'groupBy': [], 'having': [], 'orderBy': ['desc', [[0, [0, 43, False], None]]], 'limit': 1, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "wta_1",
    "query": "SELECT T1.country_code ,  T1.first_name FROM players AS T1 JOIN rankings AS T2 ON T1.player_id  =  T2.player_id ORDER BY T2.tours DESC LIMIT 1",
    "query_toks": "['SELECT', 'T1.country_code', ',', 'T1.first_name', 'FROM', 'players', 'AS', 'T1', 'JOIN', 'rankings', 'AS', 'T2', 'ON', 'T1.player_id', '=', 'T2.player_id', 'ORDER', 'BY', 'T2.tours', 'DESC', 'LIMIT', '1']",
    "query_toks_no_value": "['select', 't1', '.', 'country_code', ',', 't1', '.', 'first_name', 'from', 'players', 'as', 't1', 'join', 'rankings', 'as', 't2', 'on', 't1', '.', 'player_id', '=', 't2', '.', 'player_id', 'order', 'by', 't2', '.', 'tours', 'desc', 'limit', 'value']",
    "question": "What is the first name and country code of the player with the most tours?",
    "question_th": "ชื่อและรหัสประเทศของผู้เล่นที่มีทัวร์มากที่สุดคืออะไร?",
    "question_toks": "['What', 'is', 'the', 'first', 'name', 'and', 'country', 'code', 'of', 'the', 'player', 'with', 'the', 'most', 'tours', '?']",
    "sql": "{'from': {'table_units': [['table_unit', 0], ['table_unit', 2]], 'conds': [[False, 2, [0, [0, 1, False], None], [0, 41, False], None]]}, 'select': [False, [[0, [0, [0, 6, False], None]], [0, [0, [0, 2, False], None]]]], 'where': [], 'groupBy': [], 'having': [], 'orderBy': ['desc', [[0, [0, 43, False], None]]], 'limit': 1, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "wta_1",
    "query": "SELECT YEAR FROM matches GROUP BY YEAR ORDER BY count(*) DESC LIMIT 1",
    "query_toks": "['SELECT', 'YEAR', 'FROM', 'matches', 'GROUP', 'BY', 'YEAR', 'ORDER', 'BY', 'count', '(', '*', ')', 'DESC', 'LIMIT', '1']",
    "query_toks_no_value": "['select', 'year', 'from', 'matches', 'group', 'by', 'year', 'order', 'by', 'count', '(', '*', ')', 'desc', 'limit', 'value']",
    "question": "Find the year that has the most number of matches.",
    "question_th": "ค้นหาปีที่มีจำนวนการแข่งขันมากที่สุด",
    "question_toks": "['Find', 'the', 'year', 'that', 'has', 'the', 'most', 'number', 'of', 'matches', '.']",
    "sql": "{'from': {'table_units': [['table_unit', 1]], 'conds': []}, 'select': [False, [[0, [0, [0, 38, False], None]]]], 'where': [], 'groupBy': [[0, 38, False]], 'having': [], 'orderBy': ['desc', [[0, [3, 0, False], None]]], 'limit': 1, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "wta_1",
    "query": "SELECT YEAR FROM matches GROUP BY YEAR ORDER BY count(*) DESC LIMIT 1",
    "query_toks": "['SELECT', 'YEAR', 'FROM', 'matches', 'GROUP', 'BY', 'YEAR', 'ORDER', 'BY', 'count', '(', '*', ')', 'DESC', 'LIMIT', '1']",
    "query_toks_no_value": "['select', 'year', 'from', 'matches', 'group', 'by', 'year', 'order', 'by', 'count', '(', '*', ')', 'desc', 'limit', 'value']",
    "question": "Which year had the most matches?",
    "question_th": "ปีไหนมีการแข่งขันมากที่สุด?",
    "question_toks": "['Which', 'year', 'had', 'the', 'most', 'matches', '?']",
    "sql": "{'from': {'table_units': [['table_unit', 1]], 'conds': []}, 'select': [False, [[0, [0, [0, 38, False], None]]]], 'where': [], 'groupBy': [[0, 38, False]], 'having': [], 'orderBy': ['desc', [[0, [3, 0, False], None]]], 'limit': 1, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "wta_1",
    "query": "SELECT winner_name ,  winner_rank_points FROM matches GROUP BY winner_name ORDER BY count(*) DESC LIMIT 1",
    "query_toks": "['SELECT', 'winner_name', ',', 'winner_rank_points', 'FROM', 'matches', 'GROUP', 'BY', 'winner_name', 'ORDER', 'BY', 'count', '(', '*', ')', 'DESC', 'LIMIT', '1']",
    "query_toks_no_value": "['select', 'winner_name', ',', 'winner_rank_points', 'from', 'matches', 'group', 'by', 'winner_name', 'order', 'by', 'count', '(', '*', ')', 'desc', 'limit', 'value']",
    "question": "Find the name and rank points of the winner who won the most times.",
    "question_th": "ค้นหาชื่อและอันดับคะแนนของผู้ชนะที่ชนะมากที่สุด",
    "question_toks": "['Find', 'the', 'name', 'and', 'rank', 'points', 'of', 'the', 'winner', 'who', 'won', 'the', 'most', 'times', '.']",
    "sql": "{'from': {'table_units': [['table_unit', 1]], 'conds': []}, 'select': [False, [[0, [0, [0, 34, False], None]], [0, [0, [0, 36, False], None]]]], 'where': [], 'groupBy': [[0, 34, False]], 'having': [], 'orderBy': ['desc', [[0, [3, 0, False], None]]], 'limit': 1, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "wta_1",
    "query": "SELECT winner_name ,  winner_rank_points FROM matches GROUP BY winner_name ORDER BY count(*) DESC LIMIT 1",
    "query_toks": "['SELECT', 'winner_name', ',', 'winner_rank_points', 'FROM', 'matches', 'GROUP', 'BY', 'winner_name', 'ORDER', 'BY', 'count', '(', '*', ')', 'DESC', 'LIMIT', '1']",
    "query_toks_no_value": "['select', 'winner_name', ',', 'winner_rank_points', 'from', 'matches', 'group', 'by', 'winner_name', 'order', 'by', 'count', '(', '*', ')', 'desc', 'limit', 'value']",
    "question": "What is the name of the winner who has won the most matches, and how many rank points does this player have?",
    "question_th": "ผู้ชนะที่ชนะการแข่งขันมากที่สุดชื่ออะไร และผู้เล่นคนนี้มีคะแนนอันดับเท่าไร?",
    "question_toks": "['What', 'is', 'the', 'name', 'of', 'the', 'winner', 'who', 'has', 'won', 'the', 'most', 'matches', ',', 'and', 'how', 'many', 'rank', 'points', 'does', 'this', 'player', 'have', '?']",
    "sql": "{'from': {'table_units': [['table_unit', 1]], 'conds': []}, 'select': [False, [[0, [0, [0, 34, False], None]], [0, [0, [0, 36, False], None]]]], 'where': [], 'groupBy': [[0, 34, False]], 'having': [], 'orderBy': ['desc', [[0, [3, 0, False], None]]], 'limit': 1, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "wta_1",
    "query": "SELECT winner_name FROM matches WHERE tourney_name  =  'Australian Open' ORDER BY winner_rank_points DESC LIMIT 1",
    "query_toks": "['SELECT', 'winner_name', 'FROM', 'matches', 'WHERE', 'tourney_name', '=', \"'Australian\", 'Open', \"'\", 'ORDER', 'BY', 'winner_rank_points', 'DESC', 'LIMIT', '1']",
    "query_toks_no_value": "['select', 'winner_name', 'from', 'matches', 'where', 'tourney_name', '=', 'value', 'order', 'by', 'winner_rank_points', 'desc', 'limit', 'value']",
    "question": "Find the name of the winner who has the highest rank points and participated in the Australian Open tourney.",
    "question_th": "ค้นหาชื่อผู้ชนะที่มีคะแนนอันดับสูงสุดและเข้าร่วมการแข่งขัน Australian Open",
    "question_toks": "['Find', 'the', 'name', 'of', 'the', 'winner', 'who', 'has', 'the', 'highest', 'rank', 'points', 'and', 'participated', 'in', 'the', 'Australian', 'Open', 'tourney', '.']",
    "sql": "{'from': {'table_units': [['table_unit', 1]], 'conds': []}, 'select': [False, [[0, [0, [0, 34, False], None]]]], 'where': [[False, 2, [0, [0, 27, False], None], '\"Australian Open\"', None]], 'groupBy': [], 'having': [], 'orderBy': ['desc', [[0, [0, 36, False], None]]], 'limit': 1, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "wta_1",
    "query": "SELECT winner_name FROM matches WHERE tourney_name  =  'Australian Open' ORDER BY winner_rank_points DESC LIMIT 1",
    "query_toks": "['SELECT', 'winner_name', 'FROM', 'matches', 'WHERE', 'tourney_name', '=', \"'Australian\", 'Open', \"'\", 'ORDER', 'BY', 'winner_rank_points', 'DESC', 'LIMIT', '1']",
    "query_toks_no_value": "['select', 'winner_name', 'from', 'matches', 'where', 'tourney_name', '=', 'value', 'order', 'by', 'winner_rank_points', 'desc', 'limit', 'value']",
    "question": "What is the name of the winner with the most rank points who participated in the Australian Open tournament?",
    "question_th": "ผู้ชนะที่มีคะแนนอันดับมากที่สุดที่เข้าร่วมการแข่งขัน Australian Open ชื่ออะไร",
    "question_toks": "['What', 'is', 'the', 'name', 'of', 'the', 'winner', 'with', 'the', 'most', 'rank', 'points', 'who', 'participated', 'in', 'the', 'Australian', 'Open', 'tournament', '?']",
    "sql": "{'from': {'table_units': [['table_unit', 1]], 'conds': []}, 'select': [False, [[0, [0, [0, 34, False], None]]]], 'where': [[False, 2, [0, [0, 27, False], None], '\"Australian Open\"', None]], 'groupBy': [], 'having': [], 'orderBy': ['desc', [[0, [0, 36, False], None]]], 'limit': 1, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "wta_1",
    "query": "SELECT winner_name ,  loser_name FROM matches ORDER BY minutes DESC LIMIT 1",
    "query_toks": "['SELECT', 'winner_name', ',', 'loser_name', 'FROM', 'matches', 'ORDER', 'BY', 'minutes', 'DESC', 'LIMIT', '1']",
    "query_toks_no_value": "['select', 'winner_name', ',', 'loser_name', 'from', 'matches', 'order', 'by', 'minutes', 'desc', 'limit', 'value']",
    "question": "find the names of loser and winner who played in the match with greatest number of minutes.",
    "question_th": "ค้นหาชื่อผู้แพ้และผู้ชนะที่เล่นในนัดที่มีจำนวนนาทีมากที่สุด",
    "question_toks": "['find', 'the', 'names', 'of', 'loser', 'and', 'winner', 'who', 'played', 'in', 'the', 'match', 'with', 'greatest', 'number', 'of', 'minutes', '.']",
    "sql": "{'from': {'table_units': [['table_unit', 1]], 'conds': []}, 'select': [False, [[0, [0, [0, 34, False], None]], [0, [0, [0, 15, False], None]]]], 'where': [], 'groupBy': [], 'having': [], 'orderBy': ['desc', [[0, [0, 20, False], None]]], 'limit': 1, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "wta_1",
    "query": "SELECT winner_name ,  loser_name FROM matches ORDER BY minutes DESC LIMIT 1",
    "query_toks": "['SELECT', 'winner_name', ',', 'loser_name', 'FROM', 'matches', 'ORDER', 'BY', 'minutes', 'DESC', 'LIMIT', '1']",
    "query_toks_no_value": "['select', 'winner_name', ',', 'loser_name', 'from', 'matches', 'order', 'by', 'minutes', 'desc', 'limit', 'value']",
    "question": "What are the names of the winner and loser who played in the longest match?",
    "question_th": "ผู้ชนะและผู้แพ้ที่เล่นในนัดที่ยาวที่สุดชื่ออะไร?",
    "question_toks": "['What', 'are', 'the', 'names', 'of', 'the', 'winner', 'and', 'loser', 'who', 'played', 'in', 'the', 'longest', 'match', '?']",
    "sql": "{'from': {'table_units': [['table_unit', 1]], 'conds': []}, 'select': [False, [[0, [0, [0, 34, False], None]], [0, [0, [0, 15, False], None]]]], 'where': [], 'groupBy': [], 'having': [], 'orderBy': ['desc', [[0, [0, 20, False], None]]], 'limit': 1, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "wta_1",
    "query": "SELECT avg(ranking) ,  T1.first_name FROM players AS T1 JOIN rankings AS T2 ON T1.player_id  =  T2.player_id GROUP BY T1.first_name",
    "query_toks": "['SELECT', 'avg', '(', 'ranking', ')', ',', 'T1.first_name', 'FROM', 'players', 'AS', 'T1', 'JOIN', 'rankings', 'AS', 'T2', 'ON', 'T1.player_id', '=', 'T2.player_id', 'GROUP', 'BY', 'T1.first_name']",
    "query_toks_no_value": "['select', 'avg', '(', 'ranking', ')', ',', 't1', '.', 'first_name', 'from', 'players', 'as', 't1', 'join', 'rankings', 'as', 't2', 'on', 't1', '.', 'player_id', '=', 't2', '.', 'player_id', 'group', 'by', 't1', '.', 'first_name']",
    "question": "Find the average ranking for each player and their first name.",
    "question_th": "ค้นหาอันดับเฉลี่ยของผู้เล่นแต่ละคนและชื่อของพวกเขา",
    "question_toks": "['Find', 'the', 'average', 'ranking', 'for', 'each', 'player', 'and', 'their', 'first', 'name', '.']",
    "sql": "{'from': {'table_units': [['table_unit', 0], ['table_unit', 2]], 'conds': [[False, 2, [0, [0, 1, False], None], [0, 41, False], None]]}, 'select': [False, [[5, [0, [0, 40, False], None]], [0, [0, [0, 2, False], None]]]], 'where': [], 'groupBy': [[0, 2, False]], 'having': [], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "wta_1",
    "query": "SELECT avg(ranking) ,  T1.first_name FROM players AS T1 JOIN rankings AS T2 ON T1.player_id  =  T2.player_id GROUP BY T1.first_name",
    "query_toks": "['SELECT', 'avg', '(', 'ranking', ')', ',', 'T1.first_name', 'FROM', 'players', 'AS', 'T1', 'JOIN', 'rankings', 'AS', 'T2', 'ON', 'T1.player_id', '=', 'T2.player_id', 'GROUP', 'BY', 'T1.first_name']",
    "query_toks_no_value": "['select', 'avg', '(', 'ranking', ')', ',', 't1', '.', 'first_name', 'from', 'players', 'as', 't1', 'join', 'rankings', 'as', 't2', 'on', 't1', '.', 'player_id', '=', 't2', '.', 'player_id', 'group', 'by', 't1', '.', 'first_name']",
    "question": "What are the first names of all players, and their average rankings?",
    "question_th": "ผู้เล่นทุกคนชื่ออะไร และอันดับเฉลี่ยของพวกเขาคืออะไร?",
    "question_toks": "['What', 'are', 'the', 'first', 'names', 'of', 'all', 'players', ',', 'and', 'their', 'average', 'rankings', '?']",
    "sql": "{'from': {'table_units': [['table_unit', 0], ['table_unit', 2]], 'conds': [[False, 2, [0, [0, 1, False], None], [0, 41, False], None]]}, 'select': [False, [[5, [0, [0, 40, False], None]], [0, [0, [0, 2, False], None]]]], 'where': [], 'groupBy': [[0, 2, False]], 'having': [], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "wta_1",
    "query": "SELECT sum(ranking_points) ,  T1.first_name FROM players AS T1 JOIN rankings AS T2 ON T1.player_id  =  T2.player_id GROUP BY T1.first_name",
    "query_toks": "['SELECT', 'sum', '(', 'ranking_points', ')', ',', 'T1.first_name', 'FROM', 'players', 'AS', 'T1', 'JOIN', 'rankings', 'AS', 'T2', 'ON', 'T1.player_id', '=', 'T2.player_id', 'GROUP', 'BY', 'T1.first_name']",
    "query_toks_no_value": "['select', 'sum', '(', 'ranking_points', ')', ',', 't1', '.', 'first_name', 'from', 'players', 'as', 't1', 'join', 'rankings', 'as', 't2', 'on', 't1', '.', 'player_id', '=', 't2', '.', 'player_id', 'group', 'by', 't1', '.', 'first_name']",
    "question": "Find the total ranking points for each player and their first name.",
    "question_th": "ค้นหาคะแนนรวมของผู้เล่นแต่ละคนและชื่อของพวกเขา",
    "question_toks": "['Find', 'the', 'total', 'ranking', 'points', 'for', 'each', 'player', 'and', 'their', 'first', 'name', '.']",
    "sql": "{'from': {'table_units': [['table_unit', 0], ['table_unit', 2]], 'conds': [[False, 2, [0, [0, 1, False], None], [0, 41, False], None]]}, 'select': [False, [[4, [0, [0, 42, False], None]], [0, [0, [0, 2, False], None]]]], 'where': [], 'groupBy': [[0, 2, False]], 'having': [], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "wta_1",
    "query": "SELECT sum(ranking_points) ,  T1.first_name FROM players AS T1 JOIN rankings AS T2 ON T1.player_id  =  T2.player_id GROUP BY T1.first_name",
    "query_toks": "['SELECT', 'sum', '(', 'ranking_points', ')', ',', 'T1.first_name', 'FROM', 'players', 'AS', 'T1', 'JOIN', 'rankings', 'AS', 'T2', 'ON', 'T1.player_id', '=', 'T2.player_id', 'GROUP', 'BY', 'T1.first_name']",
    "query_toks_no_value": "['select', 'sum', '(', 'ranking_points', ')', ',', 't1', '.', 'first_name', 'from', 'players', 'as', 't1', 'join', 'rankings', 'as', 't2', 'on', 't1', '.', 'player_id', '=', 't2', '.', 'player_id', 'group', 'by', 't1', '.', 'first_name']",
    "question": "What are the first names of all players, and their total ranking points?",
    "question_th": "ชื่อแรกของผู้เล่นทุกคนคืออะไร และคะแนนอันดับรวมของพวกเขาคืออะไร?",
    "question_toks": "['What', 'are', 'the', 'first', 'names', 'of', 'all', 'players', ',', 'and', 'their', 'total', 'ranking', 'points', '?']",
    "sql": "{'from': {'table_units': [['table_unit', 0], ['table_unit', 2]], 'conds': [[False, 2, [0, [0, 1, False], None], [0, 41, False], None]]}, 'select': [False, [[4, [0, [0, 42, False], None]], [0, [0, [0, 2, False], None]]]], 'where': [], 'groupBy': [[0, 2, False]], 'having': [], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "wta_1",
    "query": "SELECT count(*) ,  country_code FROM players GROUP BY country_code",
    "query_toks": "['SELECT', 'count', '(', '*', ')', ',', 'country_code', 'FROM', 'players', 'GROUP', 'BY', 'country_code']",
    "query_toks_no_value": "['select', 'count', '(', '*', ')', ',', 'country_code', 'from', 'players', 'group', 'by', 'country_code']",
    "question": "find the number of players for each country.",
    "question_th": "ค้นหาจำนวนผู้เล่นในแต่ละประเทศ",
    "question_toks": "['find', 'the', 'number', 'of', 'players', 'for', 'each', 'country', '.']",
    "sql": "{'from': {'table_units': [['table_unit', 0]], 'conds': []}, 'select': [False, [[3, [0, [0, 0, False], None]], [0, [0, [0, 6, False], None]]]], 'where': [], 'groupBy': [[0, 6, False]], 'having': [], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "wta_1",
    "query": "SELECT count(*) ,  country_code FROM players GROUP BY country_code",
    "query_toks": "['SELECT', 'count', '(', '*', ')', ',', 'country_code', 'FROM', 'players', 'GROUP', 'BY', 'country_code']",
    "query_toks_no_value": "['select', 'count', '(', '*', ')', ',', 'country_code', 'from', 'players', 'group', 'by', 'country_code']",
    "question": "How many players are from each country?",
    "question_th": "มีผู้เล่นกี่คนจากแต่ละประเทศ?",
    "question_toks": "['How', 'many', 'players', 'are', 'from', 'each', 'country', '?']",
    "sql": "{'from': {'table_units': [['table_unit', 0]], 'conds': []}, 'select': [False, [[3, [0, [0, 0, False], None]], [0, [0, [0, 6, False], None]]]], 'where': [], 'groupBy': [[0, 6, False]], 'having': [], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "wta_1",
    "query": "SELECT country_code FROM players GROUP BY country_code ORDER BY count(*) DESC LIMIT 1",
    "query_toks": "['SELECT', 'country_code', 'FROM', 'players', 'GROUP', 'BY', 'country_code', 'ORDER', 'BY', 'count', '(', '*', ')', 'DESC', 'LIMIT', '1']",
    "query_toks_no_value": "['select', 'country_code', 'from', 'players', 'group', 'by', 'country_code', 'order', 'by', 'count', '(', '*', ')', 'desc', 'limit', 'value']",
    "question": "find the code of the country where has the greatest number of players.",
    "question_th": "ค้นหารหัสของประเทศที่มีจำนวนผู้เล่นมากที่สุด",
    "question_toks": "['find', 'the', 'code', 'of', 'the', 'country', 'where', 'has', 'the', 'greatest', 'number', 'of', 'players', '.']",
    "sql": "{'from': {'table_units': [['table_unit', 0]], 'conds': []}, 'select': [False, [[0, [0, [0, 6, False], None]]]], 'where': [], 'groupBy': [[0, 6, False]], 'having': [], 'orderBy': ['desc', [[0, [3, 0, False], None]]], 'limit': 1, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "wta_1",
    "query": "SELECT country_code FROM players GROUP BY country_code ORDER BY count(*) DESC LIMIT 1",
    "query_toks": "['SELECT', 'country_code', 'FROM', 'players', 'GROUP', 'BY', 'country_code', 'ORDER', 'BY', 'count', '(', '*', ')', 'DESC', 'LIMIT', '1']",
    "query_toks_no_value": "['select', 'country_code', 'from', 'players', 'group', 'by', 'country_code', 'order', 'by', 'count', '(', '*', ')', 'desc', 'limit', 'value']",
    "question": "What is the code of the country with the most players?",
    "question_th": "รหัสของประเทศที่มีผู้เล่นมากที่สุดคืออะไร?",
    "question_toks": "['What', 'is', 'the', 'code', 'of', 'the', 'country', 'with', 'the', 'most', 'players', '?']",
    "sql": "{'from': {'table_units': [['table_unit', 0]], 'conds': []}, 'select': [False, [[0, [0, [0, 6, False], None]]]], 'where': [], 'groupBy': [[0, 6, False]], 'having': [], 'orderBy': ['desc', [[0, [3, 0, False], None]]], 'limit': 1, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "wta_1",
    "query": "SELECT country_code FROM players GROUP BY country_code HAVING count(*)  >  50",
    "query_toks": "['SELECT', 'country_code', 'FROM', 'players', 'GROUP', 'BY', 'country_code', 'HAVING', 'count', '(', '*', ')', '>', '50']",
    "query_toks_no_value": "['select', 'country_code', 'from', 'players', 'group', 'by', 'country_code', 'having', 'count', '(', '*', ')', '>', 'value']",
    "question": "Find the codes of countries that have more than 50 players.",
    "question_th": "ค้นหารหัสประเทศที่มีผู้เล่นมากกว่า 50 คน",
    "question_toks": "['Find', 'the', 'codes', 'of', 'countries', 'that', 'have', 'more', 'than', '50', 'players', '.']",
    "sql": "{'from': {'table_units': [['table_unit', 0]], 'conds': []}, 'select': [False, [[0, [0, [0, 6, False], None]]]], 'where': [], 'groupBy': [[0, 6, False]], 'having': [[False, 3, [0, [3, 0, False], None], 50.0, None]], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "wta_1",
    "query": "SELECT country_code FROM players GROUP BY country_code HAVING count(*)  >  50",
    "query_toks": "['SELECT', 'country_code', 'FROM', 'players', 'GROUP', 'BY', 'country_code', 'HAVING', 'count', '(', '*', ')', '>', '50']",
    "query_toks_no_value": "['select', 'country_code', 'from', 'players', 'group', 'by', 'country_code', 'having', 'count', '(', '*', ')', '>', 'value']",
    "question": "What are the codes of countries with more than 50 players?",
    "question_th": "รหัสของประเทศที่มีผู้เล่นมากกว่า 50 คนคือรหัสอะไร?",
    "question_toks": "['What', 'are', 'the', 'codes', 'of', 'countries', 'with', 'more', 'than', '50', 'players', '?']",
    "sql": "{'from': {'table_units': [['table_unit', 0]], 'conds': []}, 'select': [False, [[0, [0, [0, 6, False], None]]]], 'where': [], 'groupBy': [[0, 6, False]], 'having': [[False, 3, [0, [3, 0, False], None], 50.0, None]], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "wta_1",
    "query": "SELECT sum(tours) ,  ranking_date FROM rankings GROUP BY ranking_date",
    "query_toks": "['SELECT', 'sum', '(', 'tours', ')', ',', 'ranking_date', 'FROM', 'rankings', 'GROUP', 'BY', 'ranking_date']",
    "query_toks_no_value": "['select', 'sum', '(', 'tours', ')', ',', 'ranking_date', 'from', 'rankings', 'group', 'by', 'ranking_date']",
    "question": "Find the total number of tours for each ranking date.",
    "question_th": "ค้นหาจำนวนทัวร์ทั้งหมดในแต่ละวันที่มีการจัดอันดับ",
    "question_toks": "['Find', 'the', 'total', 'number', 'of', 'tours', 'for', 'each', 'ranking', 'date', '.']",
    "sql": "{'from': {'table_units': [['table_unit', 2]], 'conds': []}, 'select': [False, [[4, [0, [0, 43, False], None]], [0, [0, [0, 39, False], None]]]], 'where': [], 'groupBy': [[0, 39, False]], 'having': [], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "wta_1",
    "query": "SELECT sum(tours) ,  ranking_date FROM rankings GROUP BY ranking_date",
    "query_toks": "['SELECT', 'sum', '(', 'tours', ')', ',', 'ranking_date', 'FROM', 'rankings', 'GROUP', 'BY', 'ranking_date']",
    "query_toks_no_value": "['select', 'sum', '(', 'tours', ')', ',', 'ranking_date', 'from', 'rankings', 'group', 'by', 'ranking_date']",
    "question": "How many total tours were there for each ranking date?",
    "question_th": "มีทัวร์ทั้งหมดกี่ทัวร์ในแต่ละวันที่มีการจัดอันดับ?",
    "question_toks": "['How', 'many', 'total', 'tours', 'were', 'there', 'for', 'each', 'ranking', 'date', '?']",
    "sql": "{'from': {'table_units': [['table_unit', 2]], 'conds': []}, 'select': [False, [[4, [0, [0, 43, False], None]], [0, [0, [0, 39, False], None]]]], 'where': [], 'groupBy': [[0, 39, False]], 'having': [], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "wta_1",
    "query": "SELECT count(*) ,  YEAR FROM matches GROUP BY YEAR",
    "query_toks": "['SELECT', 'count', '(', '*', ')', ',', 'YEAR', 'FROM', 'matches', 'GROUP', 'BY', 'YEAR']",
    "query_toks_no_value": "['select', 'count', '(', '*', ')', ',', 'year', 'from', 'matches', 'group', 'by', 'year']",
    "question": "Find the number of matches happened in each year.",
    "question_th": "ค้นหาจำนวนการแข่งขันที่เกิดขึ้นในแต่ละปี",
    "question_toks": "['Find', 'the', 'number', 'of', 'matches', 'happened', 'in', 'each', 'year', '.']",
    "sql": "{'from': {'table_units': [['table_unit', 1]], 'conds': []}, 'select': [False, [[3, [0, [0, 0, False], None]], [0, [0, [0, 38, False], None]]]], 'where': [], 'groupBy': [[0, 38, False]], 'having': [], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "wta_1",
    "query": "SELECT count(*) ,  YEAR FROM matches GROUP BY YEAR",
    "query_toks": "['SELECT', 'count', '(', '*', ')', ',', 'YEAR', 'FROM', 'matches', 'GROUP', 'BY', 'YEAR']",
    "query_toks_no_value": "['select', 'count', '(', '*', ')', ',', 'year', 'from', 'matches', 'group', 'by', 'year']",
    "question": "How many matches were played in each year?",
    "question_th": "แต่ละปีมีการแข่งขันกี่นัด?",
    "question_toks": "['How', 'many', 'matches', 'were', 'played', 'in', 'each', 'year', '?']",
    "sql": "{'from': {'table_units': [['table_unit', 1]], 'conds': []}, 'select': [False, [[3, [0, [0, 0, False], None]], [0, [0, [0, 38, False], None]]]], 'where': [], 'groupBy': [[0, 38, False]], 'having': [], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "wta_1",
    "query": "SELECT DISTINCT winner_name ,  winner_rank FROM matches ORDER BY winner_age LIMIT 3",
    "query_toks": "['SELECT', 'DISTINCT', 'winner_name', ',', 'winner_rank', 'FROM', 'matches', 'ORDER', 'BY', 'winner_age', 'LIMIT', '3']",
    "query_toks_no_value": "['select', 'distinct', 'winner_name', ',', 'winner_rank', 'from', 'matches', 'order', 'by', 'winner_age', 'limit', 'value']",
    "question": "Find the name and rank of the 3 youngest winners across all matches.",
    "question_th": "ค้นหาชื่อและอันดับของผู้ชนะที่อายุน้อยที่สุด 3 รายจากทุกแมตช์",
    "question_toks": "['Find', 'the', 'name', 'and', 'rank', 'of', 'the', '3', 'youngest', 'winners', 'across', 'all', 'matches', '.']",
    "sql": "{'from': {'table_units': [['table_unit', 1]], 'conds': []}, 'select': [True, [[0, [0, [0, 34, False], None]], [0, [0, [0, 35, False], None]]]], 'where': [], 'groupBy': [], 'having': [], 'orderBy': ['asc', [[0, [0, 28, False], None]]], 'limit': 3, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "wta_1",
    "query": "SELECT DISTINCT winner_name ,  winner_rank FROM matches ORDER BY winner_age LIMIT 3",
    "query_toks": "['SELECT', 'DISTINCT', 'winner_name', ',', 'winner_rank', 'FROM', 'matches', 'ORDER', 'BY', 'winner_age', 'LIMIT', '3']",
    "query_toks_no_value": "['select', 'distinct', 'winner_name', ',', 'winner_rank', 'from', 'matches', 'order', 'by', 'winner_age', 'limit', 'value']",
    "question": "What are the names and ranks of the three youngest winners across all matches?",
    "question_th": "ชื่อและอันดับของผู้ชนะที่อายุน้อยที่สุดสามคนในการแข่งขันทั้งหมดคืออะไร?",
    "question_toks": "['What', 'are', 'the', 'names', 'and', 'ranks', 'of', 'the', 'three', 'youngest', 'winners', 'across', 'all', 'matches', '?']",
    "sql": "{'from': {'table_units': [['table_unit', 1]], 'conds': []}, 'select': [True, [[0, [0, [0, 34, False], None]], [0, [0, [0, 35, False], None]]]], 'where': [], 'groupBy': [], 'having': [], 'orderBy': ['asc', [[0, [0, 28, False], None]]], 'limit': 3, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "wta_1",
    "query": "SELECT count(DISTINCT winner_name) FROM matches WHERE tourney_name  =  'WTA Championships' AND winner_hand  =  'L'",
    "query_toks": "['SELECT', 'count', '(', 'DISTINCT', 'winner_name', ')', 'FROM', 'matches', 'WHERE', 'tourney_name', '=', \"'WTA\", 'Championships', \"'\", 'AND', 'winner_hand', '=', \"'L\", \"'\"]",
    "query_toks_no_value": "['select', 'count', '(', 'distinct', 'winner_name', ')', 'from', 'matches', 'where', 'tourney_name', '=', 'value', 'and', 'winner_hand', '=', 'value']",
    "question": "How many different winners both participated in the WTA Championships and were left handed?",
    "question_th": "มีผู้ชนะที่แตกต่างกันกี่คนที่เข้าร่วมการแข่งขัน WTA Championships และถูกถนัดซ้าย?",
    "question_toks": "['How', 'many', 'different', 'winners', 'both', 'participated', 'in', 'the', 'WTA', 'Championships', 'and', 'were', 'left', 'handed', '?']",
    "sql": "{'from': {'table_units': [['table_unit', 1]], 'conds': []}, 'select': [False, [[3, [0, [0, 34, True], None]]]], 'where': [[False, 2, [0, [0, 27, False], None], '\"WTA Championships\"', None], 'and', [False, 2, [0, [0, 30, False], None], '\"L\"', None]], 'groupBy': [], 'having': [], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "wta_1",
    "query": "SELECT count(DISTINCT winner_name) FROM matches WHERE tourney_name  =  'WTA Championships' AND winner_hand  =  'L'",
    "query_toks": "['SELECT', 'count', '(', 'DISTINCT', 'winner_name', ')', 'FROM', 'matches', 'WHERE', 'tourney_name', '=', \"'WTA\", 'Championships', \"'\", 'AND', 'winner_hand', '=', \"'L\", \"'\"]",
    "query_toks_no_value": "['select', 'count', '(', 'distinct', 'winner_name', ')', 'from', 'matches', 'where', 'tourney_name', '=', 'value', 'and', 'winner_hand', '=', 'value']",
    "question": "Find the number of left handed winners who participated in the WTA Championships.",
    "question_th": "ค้นหาจำนวนผู้ชนะที่ถนัดซ้ายที่เข้าร่วม WTA Championships",
    "question_toks": "['Find', 'the', 'number', 'of', 'left', 'handed', 'winners', 'who', 'participated', 'in', 'the', 'WTA', 'Championships', '.']",
    "sql": "{'from': {'table_units': [['table_unit', 1]], 'conds': []}, 'select': [False, [[3, [0, [0, 34, True], None]]]], 'where': [[False, 2, [0, [0, 27, False], None], '\"WTA Championships\"', None], 'and', [False, 2, [0, [0, 30, False], None], '\"L\"', None]], 'groupBy': [], 'having': [], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "wta_1",
    "query": "SELECT T1.first_name ,  T1.country_code ,  T1.birth_date FROM players AS T1 JOIN matches AS T2 ON T1.player_id  =  T2.winner_id ORDER BY T2.winner_rank_points DESC LIMIT 1",
    "query_toks": "['SELECT', 'T1.first_name', ',', 'T1.country_code', ',', 'T1.birth_date', 'FROM', 'players', 'AS', 'T1', 'JOIN', 'matches', 'AS', 'T2', 'ON', 'T1.player_id', '=', 'T2.winner_id', 'ORDER', 'BY', 'T2.winner_rank_points', 'DESC', 'LIMIT', '1']",
    "query_toks_no_value": "['select', 't1', '.', 'first_name', ',', 't1', '.', 'country_code', ',', 't1', '.', 'birth_date', 'from', 'players', 'as', 't1', 'join', 'matches', 'as', 't2', 'on', 't1', '.', 'player_id', '=', 't2', '.', 'winner_id', 'order', 'by', 't2', '.', 'winner_rank_points', 'desc', 'limit', 'value']",
    "question": "Find the first name, country code and birth date of the winner who has the highest rank points in all matches.",
    "question_th": "ค้นหาชื่อ รหัสประเทศ และวันเกิดของผู้ชนะที่มีแต้มอันดับสูงสุดในทุกแมตช์",
    "question_toks": "['Find', 'the', 'first', 'name', ',', 'country', 'code', 'and', 'birth', 'date', 'of', 'the', 'winner', 'who', 'has', 'the', 'highest', 'rank', 'points', 'in', 'all', 'matches', '.']",
    "sql": "{'from': {'table_units': [['table_unit', 0], ['table_unit', 1]], 'conds': [[False, 2, [0, [0, 1, False], None], [0, 32, False], None]]}, 'select': [False, [[0, [0, [0, 2, False], None]], [0, [0, [0, 6, False], None]], [0, [0, [0, 5, False], None]]]], 'where': [], 'groupBy': [], 'having': [], 'orderBy': ['desc', [[0, [0, 36, False], None]]], 'limit': 1, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "wta_1",
    "query": "SELECT T1.first_name ,  T1.country_code ,  T1.birth_date FROM players AS T1 JOIN matches AS T2 ON T1.player_id  =  T2.winner_id ORDER BY T2.winner_rank_points DESC LIMIT 1",
    "query_toks": "['SELECT', 'T1.first_name', ',', 'T1.country_code', ',', 'T1.birth_date', 'FROM', 'players', 'AS', 'T1', 'JOIN', 'matches', 'AS', 'T2', 'ON', 'T1.player_id', '=', 'T2.winner_id', 'ORDER', 'BY', 'T2.winner_rank_points', 'DESC', 'LIMIT', '1']",
    "query_toks_no_value": "['select', 't1', '.', 'first_name', ',', 't1', '.', 'country_code', ',', 't1', '.', 'birth_date', 'from', 'players', 'as', 't1', 'join', 'matches', 'as', 't2', 'on', 't1', '.', 'player_id', '=', 't2', '.', 'winner_id', 'order', 'by', 't2', '.', 'winner_rank_points', 'desc', 'limit', 'value']",
    "question": "What is the first name, country code, and birth date of the player with the most winner rank points across all matches?",
    "question_th": "ชื่อ, รหัสประเทศ และวันเกิดของผู้เล่นที่มีคะแนนอันดับผู้ชนะมากที่สุดในทุกแมตช์คืออะไร?",
    "question_toks": "['What', 'is', 'the', 'first', 'name', ',', 'country', 'code', ',', 'and', 'birth', 'date', 'of', 'the', 'player', 'with', 'the', 'most', 'winner', 'rank', 'points', 'across', 'all', 'matches', '?']",
    "sql": "{'from': {'table_units': [['table_unit', 0], ['table_unit', 1]], 'conds': [[False, 2, [0, [0, 1, False], None], [0, 32, False], None]]}, 'select': [False, [[0, [0, [0, 2, False], None]], [0, [0, [0, 6, False], None]], [0, [0, [0, 5, False], None]]]], 'where': [], 'groupBy': [], 'having': [], 'orderBy': ['desc', [[0, [0, 36, False], None]]], 'limit': 1, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "wta_1",
    "query": "SELECT count(*) ,  hand FROM players GROUP BY hand",
    "query_toks": "['SELECT', 'count', '(', '*', ')', ',', 'hand', 'FROM', 'players', 'GROUP', 'BY', 'hand']",
    "query_toks_no_value": "['select', 'count', '(', '*', ')', ',', 'hand', 'from', 'players', 'group', 'by', 'hand']",
    "question": "Find the number of players for each hand type.",
    "question_th": "ค้นหาจำนวนผู้เล่นสำหรับแต่ละประเภทมือ",
    "question_toks": "['Find', 'the', 'number', 'of', 'players', 'for', 'each', 'hand', 'type', '.']",
    "sql": "{'from': {'table_units': [['table_unit', 0]], 'conds': []}, 'select': [False, [[3, [0, [0, 0, False], None]], [0, [0, [0, 4, False], None]]]], 'where': [], 'groupBy': [[0, 4, False]], 'having': [], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "wta_1",
    "query": "SELECT count(*) ,  hand FROM players GROUP BY hand",
    "query_toks": "['SELECT', 'count', '(', '*', ')', ',', 'hand', 'FROM', 'players', 'GROUP', 'BY', 'hand']",
    "query_toks_no_value": "['select', 'count', '(', '*', ')', ',', 'hand', 'from', 'players', 'group', 'by', 'hand']",
    "question": "How many players are there for each hand type?",
    "question_th": "แต่ละประเภทมือมีผู้เล่นกี่คน?",
    "question_toks": "['How', 'many', 'players', 'are', 'there', 'for', 'each', 'hand', 'type', '?']",
    "sql": "{'from': {'table_units': [['table_unit', 0]], 'conds': []}, 'select': [False, [[3, [0, [0, 0, False], None]], [0, [0, [0, 4, False], None]]]], 'where': [], 'groupBy': [[0, 4, False]], 'having': [], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "battle_death",
    "query": "SELECT count(*) FROM ship WHERE disposition_of_ship  =  'Captured'",
    "query_toks": "['SELECT', 'count', '(', '*', ')', 'FROM', 'ship', 'WHERE', 'disposition_of_ship', '=', \"'Captured\", \"'\"]",
    "query_toks_no_value": "['select', 'count', '(', '*', ')', 'from', 'ship', 'where', 'disposition_of_ship', '=', 'value']",
    "question": "How many ships ended up being 'Captured'?",
    "question_th": "มีเรือกี่ลำที่ถูก 'ยึด'?",
    "question_toks": "['How', 'many', 'ships', 'ended', 'up', 'being', \"'Captured\", \"'\", '?']",
    "sql": "{'from': {'table_units': [['table_unit', 1]], 'conds': []}, 'select': [False, [[3, [0, [0, 0, False], None]]]], 'where': [[False, 2, [0, [0, 13, False], None], '\"Captured\"', None]], 'groupBy': [], 'having': [], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "battle_death",
    "query": "SELECT name ,  tonnage FROM ship ORDER BY name DESC",
    "query_toks": "['SELECT', 'name', ',', 'tonnage', 'FROM', 'ship', 'ORDER', 'BY', 'name', 'DESC']",
    "query_toks_no_value": "['select', 'name', ',', 'tonnage', 'from', 'ship', 'order', 'by', 'name', 'desc']",
    "question": "List the name and tonnage ordered by in descending alphaetical order for the names.",
    "question_th": "ระบุชื่อและระวางน้ำหนักโดยเรียงลำดับตามตัวอักษรจากมากไปน้อยสำหรับชื่อ",
    "question_toks": "['List', 'the', 'name', 'and', 'tonnage', 'ordered', 'by', 'in', 'descending', 'alphaetical', 'order', 'for', 'the', 'names', '.']",
    "sql": "{'from': {'table_units': [['table_unit', 1]], 'conds': []}, 'select': [False, [[0, [0, [0, 9, False], None]], [0, [0, [0, 10, False], None]]]], 'where': [], 'groupBy': [], 'having': [], 'orderBy': ['desc', [[0, [0, 9, False], None]]], 'limit': None, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "battle_death",
    "query": "SELECT name ,  date FROM battle",
    "query_toks": "['SELECT', 'name', ',', 'date', 'FROM', 'battle']",
    "query_toks_no_value": "['select', 'name', ',', 'date', 'from', 'battle']",
    "question": "List the name, date and result of each battle.",
    "question_th": "ระบุชื่อ วันที่ และผลการต่อสู้แต่ละครั้ง",
    "question_toks": "['List', 'the', 'name', ',', 'date', 'and', 'result', 'of', 'each', 'battle', '.']",
    "sql": "{'from': {'table_units': [['table_unit', 0]], 'conds': []}, 'select': [False, [[0, [0, [0, 2, False], None]], [0, [0, [0, 3, False], None]]]], 'where': [], 'groupBy': [], 'having': [], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "battle_death",
    "query": "SELECT max(killed) ,  min(killed) FROM death",
    "query_toks": "['SELECT', 'max', '(', 'killed', ')', ',', 'min', '(', 'killed', ')', 'FROM', 'death']",
    "query_toks_no_value": "['select', 'max', '(', 'killed', ')', ',', 'min', '(', 'killed', ')', 'from', 'death']",
    "question": "What is maximum and minimum death toll caused each time?",
    "question_th": "ยอดผู้เสียชีวิตสูงสุดและต่ำสุดที่เกิดขึ้นในแต่ละครั้งคือเท่าใด?",
    "question_toks": "['What', 'is', 'maximum', 'and', 'minimum', 'death', 'toll', 'caused', 'each', 'time', '?']",
    "sql": "{'from': {'table_units': [['table_unit', 2]], 'conds': []}, 'select': [False, [[1, [0, [0, 17, False], None]], [2, [0, [0, 17, False], None]]]], 'where': [], 'groupBy': [], 'having': [], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "battle_death",
    "query": "SELECT avg(injured) FROM death",
    "query_toks": "['SELECT', 'avg', '(', 'injured', ')', 'FROM', 'death']",
    "query_toks_no_value": "['select', 'avg', '(', 'injured', ')', 'from', 'death']",
    "question": "What is the average number of injuries caused each time?",
    "question_th": "จำนวนการบาดเจ็บที่เกิดขึ้นในแต่ละครั้งโดยเฉลี่ยคือเท่าใด?",
    "question_toks": "['What', 'is', 'the', 'average', 'number', 'of', 'injuries', 'caused', 'each', 'time', '?']",
    "sql": "{'from': {'table_units': [['table_unit', 2]], 'conds': []}, 'select': [False, [[5, [0, [0, 18, False], None]]]], 'where': [], 'groupBy': [], 'having': [], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "battle_death",
    "query": "SELECT T1.killed ,  T1.injured FROM death AS T1 JOIN ship AS t2 ON T1.caused_by_ship_id  =  T2.id WHERE T2.tonnage  =  't'",
    "query_toks": "['SELECT', 'T1.killed', ',', 'T1.injured', 'FROM', 'death', 'AS', 'T1', 'JOIN', 'ship', 'AS', 't2', 'ON', 'T1.caused_by_ship_id', '=', 'T2.id', 'WHERE', 'T2.tonnage', '=', \"'t\", \"'\"]",
    "query_toks_no_value": "['select', 't1', '.', 'killed', ',', 't1', '.', 'injured', 'from', 'death', 'as', 't1', 'join', 'ship', 'as', 't2', 'on', 't1', '.', 'caused_by_ship_id', '=', 't2', '.', 'id', 'where', 't2', '.', 'tonnage', '=', 'value']",
    "question": "What are the death and injury situations caused by the ship with tonnage 't'?",
    "question_th": "สถานการณ์การเสียชีวิตและการบาดเจ็บที่เกิดจากเรือที่มีน้ำหนัก 't' คืออะไร?",
    "question_toks": "['What', 'are', 'the', 'death', 'and', 'injury', 'situations', 'caused', 'by', 'the', 'ship', 'with', 'tonnage', \"'t\", \"'\", '?']",
    "sql": "{'from': {'table_units': [['table_unit', 2], ['table_unit', 1]], 'conds': [[False, 2, [0, [0, 14, False], None], [0, 8, False], None]]}, 'select': [False, [[0, [0, [0, 17, False], None]], [0, [0, [0, 18, False], None]]]], 'where': [[False, 2, [0, [0, 10, False], None], '\"t\"', None]], 'groupBy': [], 'having': [], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "battle_death",
    "query": "SELECT name ,  RESULT FROM battle WHERE bulgarian_commander != 'Boril'",
    "query_toks": "['SELECT', 'name', ',', 'RESULT', 'FROM', 'battle', 'WHERE', 'bulgarian_commander', '!', '=', \"'Boril\", \"'\"]",
    "query_toks_no_value": "['select', 'name', ',', 'result', 'from', 'battle', 'where', 'bulgarian_commander', '!', '=', 'value']",
    "question": "What are the name and results of the battles when the bulgarian commander is not 'Boril'",
    "question_th": "ชื่อและผลลัพธ์ของการรบคืออะไรเมื่อผู้บัญชาการบัลแกเรียไม่ใช่ 'โบริล'",
    "question_toks": "['What', 'are', 'the', 'name', 'and', 'results', 'of', 'the', 'battles', 'when', 'the', 'bulgarian', 'commander', 'is', 'not', \"'Boril\", \"'\"]",
    "sql": "{'from': {'table_units': [['table_unit', 0]], 'conds': []}, 'select': [False, [[0, [0, [0, 2, False], None]], [0, [0, [0, 6, False], None]]]], 'where': [[False, 7, [0, [0, 4, False], None], '\"Boril\"', None]], 'groupBy': [], 'having': [], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "battle_death",
    "query": "SELECT DISTINCT T1.id ,  T1.name FROM battle AS T1 JOIN ship AS T2 ON T1.id  =  T2.lost_in_battle WHERE T2.ship_type  =  'Brig'",
    "query_toks": "['SELECT', 'DISTINCT', 'T1.id', ',', 'T1.name', 'FROM', 'battle', 'AS', 'T1', 'JOIN', 'ship', 'AS', 'T2', 'ON', 'T1.id', '=', 'T2.lost_in_battle', 'WHERE', 'T2.ship_type', '=', \"'Brig\", \"'\"]",
    "query_toks_no_value": "['select', 'distinct', 't1', '.', 'id', ',', 't1', '.', 'name', 'from', 'battle', 'as', 't1', 'join', 'ship', 'as', 't2', 'on', 't1', '.', 'id', '=', 't2', '.', 'lost_in_battle', 'where', 't2', '.', 'ship_type', '=', 'value']",
    "question": "What are the different ids and names of the battles that lost any 'Brig' type shipes?",
    "question_th": "อะไรคือรหัสและชื่อของการรบที่สูญเสียเรือรบประเภท 'Brig'?",
    "question_toks": "['What', 'are', 'the', 'different', 'ids', 'and', 'names', 'of', 'the', 'battles', 'that', 'lost', 'any', \"'Brig\", \"'\", 'type', 'shipes', '?']",
    "sql": "{'from': {'table_units': [['table_unit', 0], ['table_unit', 1]], 'conds': [[False, 2, [0, [0, 1, False], None], [0, 7, False], None]]}, 'select': [True, [[0, [0, [0, 1, False], None]], [0, [0, [0, 2, False], None]]]], 'where': [[False, 2, [0, [0, 11, False], None], '\"Brig\"', None]], 'groupBy': [], 'having': [], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "battle_death",
    "query": "SELECT T1.id ,  T1.name FROM battle AS T1 JOIN ship AS T2 ON T1.id  =  T2.lost_in_battle JOIN death AS T3 ON T2.id  =  T3.caused_by_ship_id GROUP BY T1.id HAVING sum(T3.killed)  >  10",
    "query_toks": "['SELECT', 'T1.id', ',', 'T1.name', 'FROM', 'battle', 'AS', 'T1', 'JOIN', 'ship', 'AS', 'T2', 'ON', 'T1.id', '=', 'T2.lost_in_battle', 'JOIN', 'death', 'AS', 'T3', 'ON', 'T2.id', '=', 'T3.caused_by_ship_id', 'GROUP', 'BY', 'T1.id', 'HAVING', 'sum', '(', 'T3.killed', ')', '>', '10']",
    "query_toks_no_value": "['select', 't1', '.', 'id', ',', 't1', '.', 'name', 'from', 'battle', 'as', 't1', 'join', 'ship', 'as', 't2', 'on', 't1', '.', 'id', '=', 't2', '.', 'lost_in_battle', 'join', 'death', 'as', 't3', 'on', 't2', '.', 'id', '=', 't3', '.', 'caused_by_ship_id', 'group', 'by', 't1', '.', 'id', 'having', 'sum', '(', 't3', '.', 'killed', ')', '>', 'value']",
    "question": "What are the ids and names of the battles that led to more than 10 people killed in total.",
    "question_th": "รหัสและชื่อของการต่อสู้ที่ทำให้มีผู้เสียชีวิตทั้งหมดมากกว่า 10 รายคืออะไร",
    "question_toks": "['What', 'are', 'the', 'ids', 'and', 'names', 'of', 'the', 'battles', 'that', 'led', 'to', 'more', 'than', '10', 'people', 'killed', 'in', 'total', '.']",
    "sql": "{'from': {'table_units': [['table_unit', 0], ['table_unit', 1], ['table_unit', 2]], 'conds': [[False, 2, [0, [0, 1, False], None], [0, 7, False], None], 'and', [False, 2, [0, [0, 8, False], None], [0, 14, False], None]]}, 'select': [False, [[0, [0, [0, 1, False], None]], [0, [0, [0, 2, False], None]]]], 'where': [], 'groupBy': [[0, 1, False]], 'having': [[False, 3, [0, [4, 17, False], None], 10.0, None]], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "battle_death",
    "query": "SELECT T2.id ,  T2.name FROM death AS T1 JOIN ship AS t2 ON T1.caused_by_ship_id  =  T2.id GROUP BY T2.id ORDER BY count(*) DESC LIMIT 1",
    "query_toks": "['SELECT', 'T2.id', ',', 'T2.name', 'FROM', 'death', 'AS', 'T1', 'JOIN', 'ship', 'AS', 't2', 'ON', 'T1.caused_by_ship_id', '=', 'T2.id', 'GROUP', 'BY', 'T2.id', 'ORDER', 'BY', 'count', '(', '*', ')', 'DESC', 'LIMIT', '1']",
    "query_toks_no_value": "['select', 't2', '.', 'id', ',', 't2', '.', 'name', 'from', 'death', 'as', 't1', 'join', 'ship', 'as', 't2', 'on', 't1', '.', 'caused_by_ship_id', '=', 't2', '.', 'id', 'group', 'by', 't2', '.', 'id', 'order', 'by', 'count', '(', '*', ')', 'desc', 'limit', 'value']",
    "question": "What is the ship id and name that caused most total injuries?",
    "question_th": "รหัสเรือและชื่อใดที่ทำให้เกิดการบาดเจ็บทั้งหมดมากที่สุด?",
    "question_toks": "['What', 'is', 'the', 'ship', 'id', 'and', 'name', 'that', 'caused', 'most', 'total', 'injuries', '?']",
    "sql": "{'from': {'table_units': [['table_unit', 2], ['table_unit', 1]], 'conds': [[False, 2, [0, [0, 14, False], None], [0, 8, False], None]]}, 'select': [False, [[0, [0, [0, 8, False], None]], [0, [0, [0, 9, False], None]]]], 'where': [], 'groupBy': [[0, 8, False]], 'having': [], 'orderBy': ['desc', [[0, [3, 0, False], None]]], 'limit': 1, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "battle_death",
    "query": "SELECT name FROM battle WHERE bulgarian_commander  =  'Kaloyan' AND latin_commander  =  'Baldwin I'",
    "query_toks": "['SELECT', 'name', 'FROM', 'battle', 'WHERE', 'bulgarian_commander', '=', \"'Kaloyan\", \"'\", 'AND', 'latin_commander', '=', \"'Baldwin\", 'I', \"'\"]",
    "query_toks_no_value": "['select', 'name', 'from', 'battle', 'where', 'bulgarian_commander', '=', 'value', 'and', 'latin_commander', '=', 'value']",
    "question": "What are the distinct battle names which are between bulgarian commander 'Kaloyan' and latin commander 'Baldwin I'?",
    "question_th": "ชื่อการต่อสู้ที่แตกต่างกันระหว่างผู้บัญชาการบัลแกเรีย 'Kaloyan' และผู้บัญชาการภาษาละติน 'Baldwin I' คืออะไร",
    "question_toks": "['What', 'are', 'the', 'distinct', 'battle', 'names', 'which', 'are', 'between', 'bulgarian', 'commander', \"'Kaloyan\", \"'\", 'and', 'latin', 'commander', \"'Baldwin\", 'I', \"'\", '?']",
    "sql": "{'from': {'table_units': [['table_unit', 0]], 'conds': []}, 'select': [False, [[0, [0, [0, 2, False], None]]]], 'where': [[False, 2, [0, [0, 4, False], None], '\"Kaloyan\"', None], 'and', [False, 2, [0, [0, 5, False], None], '\"Baldwin I\"', None]], 'groupBy': [], 'having': [], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "battle_death",
    "query": "SELECT count(DISTINCT RESULT) FROM battle",
    "query_toks": "['SELECT', 'count', '(', 'DISTINCT', 'RESULT', ')', 'FROM', 'battle']",
    "query_toks_no_value": "['select', 'count', '(', 'distinct', 'result', ')', 'from', 'battle']",
    "question": "How many different results are there for the battles?",
    "question_th": "มีผลลัพธ์ที่แตกต่างกันกี่แบบสำหรับการต่อสู้?",
    "question_toks": "['How', 'many', 'different', 'results', 'are', 'there', 'for', 'the', 'battles', '?']",
    "sql": "{'from': {'table_units': [['table_unit', 0]], 'conds': []}, 'select': [False, [[3, [0, [0, 6, True], None]]]], 'where': [], 'groupBy': [], 'having': [], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "battle_death",
    "query": "SELECT count(*) FROM battle WHERE id NOT IN ( SELECT lost_in_battle FROM ship WHERE tonnage  =  '225' );",
    "query_toks": "['SELECT', 'count', '(', '*', ')', 'FROM', 'battle', 'WHERE', 'id', 'NOT', 'IN', '(', 'SELECT', 'lost_in_battle', 'FROM', 'ship', 'WHERE', 'tonnage', '=', \"'225\", \"'\", ')', ';']",
    "query_toks_no_value": "['select', 'count', '(', '*', ')', 'from', 'battle', 'where', 'id', 'not', 'in', '(', 'select', 'lost_in_battle', 'from', 'ship', 'where', 'tonnage', '=', 'value', ')']",
    "question": "How many battles did not lose any ship with tonnage '225'?",
    "question_th": "มีกี่การรบที่ไม่แพ้เรือลำใดที่มีน้ำหนัก '225'?",
    "question_toks": "['How', 'many', 'battles', 'did', 'not', 'lose', 'any', 'ship', 'with', 'tonnage', \"'225\", \"'\", '?']",
    "sql": "{'from': {'table_units': [['table_unit', 0]], 'conds': []}, 'select': [False, [[3, [0, [0, 0, False], None]]]], 'where': [[True, 8, [0, [0, 1, False], None], {'from': {'table_units': [['table_unit', 1]], 'conds': []}, 'select': [False, [[0, [0, [0, 7, False], None]]]], 'where': [[False, 2, [0, [0, 10, False], None], '\"225\"', None]], 'groupBy': [], 'having': [], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}, None]], 'groupBy': [], 'having': [], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "battle_death",
    "query": "SELECT T1.name ,  T1.date FROM battle AS T1 JOIN ship AS T2 ON T1.id  =  T2.lost_in_battle WHERE T2.name  =  'Lettice' INTERSECT SELECT T1.name ,  T1.date FROM battle AS T1 JOIN ship AS T2 ON T1.id  =  T2.lost_in_battle WHERE T2.name  =  'HMS Atalanta'",
    "query_toks": "['SELECT', 'T1.name', ',', 'T1.date', 'FROM', 'battle', 'AS', 'T1', 'JOIN', 'ship', 'AS', 'T2', 'ON', 'T1.id', '=', 'T2.lost_in_battle', 'WHERE', 'T2.name', '=', \"'Lettice\", \"'\", 'INTERSECT', 'SELECT', 'T1.name', ',', 'T1.date', 'FROM', 'battle', 'AS', 'T1', 'JOIN', 'ship', 'AS', 'T2', 'ON', 'T1.id', '=', 'T2.lost_in_battle', 'WHERE', 'T2.name', '=', \"'HMS\", 'Atalanta', \"'\"]",
    "query_toks_no_value": "['select', 't1', '.', 'name', ',', 't1', '.', 'date', 'from', 'battle', 'as', 't1', 'join', 'ship', 'as', 't2', 'on', 't1', '.', 'id', '=', 't2', '.', 'lost_in_battle', 'where', 't2', '.', 'name', '=', 'value', 'intersect', 'select', 't1', '.', 'name', ',', 't1', '.', 'date', 'from', 'battle', 'as', 't1', 'join', 'ship', 'as', 't2', 'on', 't1', '.', 'id', '=', 't2', '.', 'lost_in_battle', 'where', 't2', '.', 'name', '=', 'value']",
    "question": "List the name and date the battle that has lost the ship named 'Lettice' and the ship named 'HMS Atalanta'",
    "question_th": "ระบุชื่อและวันที่การรบที่สูญเสียเรือชื่อ 'Lettice' และเรือชื่อ 'HMS Atalanta'",
    "question_toks": "['List', 'the', 'name', 'and', 'date', 'the', 'battle', 'that', 'has', 'lost', 'the', 'ship', 'named', \"'Lettice\", \"'\", 'and', 'the', 'ship', 'named', \"'HMS\", 'Atalanta', \"'\"]",
    "sql": "{'from': {'table_units': [['table_unit', 0], ['table_unit', 1]], 'conds': [[False, 2, [0, [0, 1, False], None], [0, 7, False], None]]}, 'select': [False, [[0, [0, [0, 2, False], None]], [0, [0, [0, 3, False], None]]]], 'where': [[False, 2, [0, [0, 9, False], None], '\"Lettice\"', None]], 'groupBy': [], 'having': [], 'orderBy': [], 'limit': None, 'intersect': {'from': {'table_units': [['table_unit', 0], ['table_unit', 1]], 'conds': [[False, 2, [0, [0, 1, False], None], [0, 7, False], None]]}, 'select': [False, [[0, [0, [0, 2, False], None]], [0, [0, [0, 3, False], None]]]], 'where': [[False, 2, [0, [0, 9, False], None], '\"HMS Atalanta\"', None]], 'groupBy': [], 'having': [], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}, 'union': None, 'except': None}"
  },
  {
    "db_id": "battle_death",
    "query": "SELECT name ,  RESULT ,  bulgarian_commander FROM battle EXCEPT SELECT T1.name ,  T1.result ,  T1.bulgarian_commander FROM battle AS T1 JOIN ship AS T2 ON T1.id  =  T2.lost_in_battle WHERE T2.location  =  'English Channel'",
    "query_toks": "['SELECT', 'name', ',', 'RESULT', ',', 'bulgarian_commander', 'FROM', 'battle', 'EXCEPT', 'SELECT', 'T1.name', ',', 'T1.result', ',', 'T1.bulgarian_commander', 'FROM', 'battle', 'AS', 'T1', 'JOIN', 'ship', 'AS', 'T2', 'ON', 'T1.id', '=', 'T2.lost_in_battle', 'WHERE', 'T2.location', '=', \"'English\", 'Channel', \"'\"]",
    "query_toks_no_value": "['select', 'name', ',', 'result', ',', 'bulgarian_commander', 'from', 'battle', 'except', 'select', 't1', '.', 'name', ',', 't1', '.', 'result', ',', 't1', '.', 'bulgarian_commander', 'from', 'battle', 'as', 't1', 'join', 'ship', 'as', 't2', 'on', 't1', '.', 'id', '=', 't2', '.', 'lost_in_battle', 'where', 't2', '.', 'location', '=', 'value']",
    "question": "Show names, results and bulgarian commanders of the battles with no ships lost in the 'English Channel'.",
    "question_th": "แสดงชื่อ ผลลัพธ์ และผู้บัญชาการการรบบัลแกเรียโดยไม่มีเรือสูญหายใน 'ช่องแคบอังกฤษ'",
    "question_toks": "['Show', 'names', ',', 'results', 'and', 'bulgarian', 'commanders', 'of', 'the', 'battles', 'with', 'no', 'ships', 'lost', 'in', 'the', \"'English\", 'Channel', \"'\", '.']",
    "sql": "{'from': {'table_units': [['table_unit', 0]], 'conds': []}, 'select': [False, [[0, [0, [0, 2, False], None]], [0, [0, [0, 6, False], None]], [0, [0, [0, 4, False], None]]]], 'where': [], 'groupBy': [], 'having': [], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': {'from': {'table_units': [['table_unit', 0], ['table_unit', 1]], 'conds': [[False, 2, [0, [0, 1, False], None], [0, 7, False], None]]}, 'select': [False, [[0, [0, [0, 2, False], None]], [0, [0, [0, 6, False], None]], [0, [0, [0, 4, False], None]]]], 'where': [[False, 2, [0, [0, 12, False], None], '\"English Channel\"', None]], 'groupBy': [], 'having': [], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}}"
  },
  {
    "db_id": "battle_death",
    "query": "SELECT note FROM death WHERE note LIKE '%East%'",
    "query_toks": "['SELECT', 'note', 'FROM', 'death', 'WHERE', 'note', 'LIKE', \"'\", '%', 'East', '%', \"'\"]",
    "query_toks_no_value": "['select', 'note', 'from', 'death', 'where', 'note', 'like', 'value']",
    "question": "What are the notes of the death events which has substring 'East'?",
    "question_th": "บันทึกเหตุการณ์การตายที่มีซับสตริง 'ตะวันออก' คืออะไร?",
    "question_toks": "['What', 'are', 'the', 'notes', 'of', 'the', 'death', 'events', 'which', 'has', 'substring', \"'East\", \"'\", '?']",
    "sql": "{'from': {'table_units': [['table_unit', 2]], 'conds': []}, 'select': [False, [[0, [0, [0, 16, False], None]]]], 'where': [[False, 9, [0, [0, 16, False], None], '\"%East%\"', None]], 'groupBy': [], 'having': [], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "student_transcripts_tracking",
    "query": "SELECT line_1 ,  line_2 FROM addresses",
    "query_toks": "['SELECT', 'line_1', ',', 'line_2', 'FROM', 'addresses']",
    "query_toks_no_value": "['select', 'line_1', ',', 'line_2', 'from', 'addresses']",
    "question": "what are all the addresses including line 1 and line 2?",
    "question_th": "ที่อยู่ทั้งหมดรวมถึงบรรทัด 1 และบรรทัด 2 คืออะไร?",
    "question_toks": "['what', 'are', 'all', 'the', 'addresses', 'including', 'line', '1', 'and', 'line', '2', '?']",
    "sql": "{'from': {'table_units': [['table_unit', 0]], 'conds': []}, 'select': [False, [[0, [0, [0, 2, False], None]], [0, [0, [0, 3, False], None]]]], 'where': [], 'groupBy': [], 'having': [], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "student_transcripts_tracking",
    "query": "SELECT line_1 ,  line_2 FROM addresses",
    "query_toks": "['SELECT', 'line_1', ',', 'line_2', 'FROM', 'addresses']",
    "query_toks_no_value": "['select', 'line_1', ',', 'line_2', 'from', 'addresses']",
    "question": "What is the first and second line for all addresses?",
    "question_th": "บรรทัดแรกและบรรทัดที่สองสำหรับที่อยู่ทั้งหมดคืออะไร",
    "question_toks": "['What', 'is', 'the', 'first', 'and', 'second', 'line', 'for', 'all', 'addresses', '?']",
    "sql": "{'from': {'table_units': [['table_unit', 0]], 'conds': []}, 'select': [False, [[0, [0, [0, 2, False], None]], [0, [0, [0, 3, False], None]]]], 'where': [], 'groupBy': [], 'having': [], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "student_transcripts_tracking",
    "query": "SELECT count(*) FROM Courses",
    "query_toks": "['SELECT', 'count', '(', '*', ')', 'FROM', 'Courses']",
    "query_toks_no_value": "['select', 'count', '(', '*', ')', 'from', 'courses']",
    "question": "How many courses in total are listed?",
    "question_th": "มีรายชื่อหลักสูตรทั้งหมดกี่หลักสูตร?",
    "question_toks": "['How', 'many', 'courses', 'in', 'total', 'are', 'listed', '?']",
    "sql": "{'from': {'table_units': [['table_unit', 1]], 'conds': []}, 'select': [False, [[3, [0, [0, 0, False], None]]]], 'where': [], 'groupBy': [], 'having': [], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "student_transcripts_tracking",
    "query": "SELECT count(*) FROM Courses",
    "query_toks": "['SELECT', 'count', '(', '*', ')', 'FROM', 'Courses']",
    "query_toks_no_value": "['select', 'count', '(', '*', ')', 'from', 'courses']",
    "question": "How many courses are there?",
    "question_th": "มีกี่หลักสูตร?",
    "question_toks": "['How', 'many', 'courses', 'are', 'there', '?']",
    "sql": "{'from': {'table_units': [['table_unit', 1]], 'conds': []}, 'select': [False, [[3, [0, [0, 0, False], None]]]], 'where': [], 'groupBy': [], 'having': [], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "student_transcripts_tracking",
    "query": "SELECT course_description FROM Courses WHERE course_name  =  'math'",
    "query_toks": "['SELECT', 'course_description', 'FROM', 'Courses', 'WHERE', 'course_name', '=', \"'math\", \"'\"]",
    "query_toks_no_value": "['select', 'course_description', 'from', 'courses', 'where', 'course_name', '=', 'value']",
    "question": "How is the math course described?",
    "question_th": "วิชาคณิตศาสตร์อธิบายไว้อย่างไร?",
    "question_toks": "['How', 'is', 'the', 'math', 'course', 'described', '?']",
    "sql": "{'from': {'table_units': [['table_unit', 1]], 'conds': []}, 'select': [False, [[0, [0, [0, 12, False], None]]]], 'where': [[False, 2, [0, [0, 11, False], None], '\"math\"', None]], 'groupBy': [], 'having': [], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "student_transcripts_tracking",
    "query": "SELECT course_description FROM Courses WHERE course_name  =  'math'",
    "query_toks": "['SELECT', 'course_description', 'FROM', 'Courses', 'WHERE', 'course_name', '=', \"'math\", \"'\"]",
    "query_toks_no_value": "['select', 'course_description', 'from', 'courses', 'where', 'course_name', '=', 'value']",
    "question": "What are the descriptions for all the math courses?",
    "question_th": "คำอธิบายหลักสูตรคณิตศาสตร์ทั้งหมดมีอะไรบ้าง",
    "question_toks": "['What', 'are', 'the', 'descriptions', 'for', 'all', 'the', 'math', 'courses', '?']",
    "sql": "{'from': {'table_units': [['table_unit', 1]], 'conds': []}, 'select': [False, [[0, [0, [0, 12, False], None]]]], 'where': [[False, 2, [0, [0, 11, False], None], '\"math\"', None]], 'groupBy': [], 'having': [], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "student_transcripts_tracking",
    "query": "SELECT zip_postcode FROM Addresses WHERE city  =  'Port Chelsea'",
    "query_toks": "['SELECT', 'zip_postcode', 'FROM', 'Addresses', 'WHERE', 'city', '=', \"'Port\", 'Chelsea', \"'\"]",
    "query_toks_no_value": "['select', 'zip_postcode', 'from', 'addresses', 'where', 'city', '=', 'value']",
    "question": "What is the zip code of the address in the city Port Chelsea?",
    "question_th": "รหัสไปรษณีย์ของที่อยู่ในเมือง Port Chelsea คืออะไร?",
    "question_toks": "['What', 'is', 'the', 'zip', 'code', 'of', 'the', 'address', 'in', 'the', 'city', 'Port', 'Chelsea', '?']",
    "sql": "{'from': {'table_units': [['table_unit', 0]], 'conds': []}, 'select': [False, [[0, [0, [0, 6, False], None]]]], 'where': [[False, 2, [0, [0, 5, False], None], '\"Port Chelsea\"', None]], 'groupBy': [], 'having': [], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "student_transcripts_tracking",
    "query": "SELECT zip_postcode FROM Addresses WHERE city  =  'Port Chelsea'",
    "query_toks": "['SELECT', 'zip_postcode', 'FROM', 'Addresses', 'WHERE', 'city', '=', \"'Port\", 'Chelsea', \"'\"]",
    "query_toks_no_value": "['select', 'zip_postcode', 'from', 'addresses', 'where', 'city', '=', 'value']",
    "question": "What is the zip code for Port Chelsea?",
    "question_th": "รหัสไปรษณีย์ของพอร์ตเชลซีคืออะไร?",
    "question_toks": "['What', 'is', 'the', 'zip', 'code', 'for', 'Port', 'Chelsea', '?']",
    "sql": "{'from': {'table_units': [['table_unit', 0]], 'conds': []}, 'select': [False, [[0, [0, [0, 6, False], None]]]], 'where': [[False, 2, [0, [0, 5, False], None], '\"Port Chelsea\"', None]], 'groupBy': [], 'having': [], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "student_transcripts_tracking",
    "query": "SELECT T2.department_name ,  T1.department_id FROM Degree_Programs AS T1 JOIN Departments AS T2 ON T1.department_id  =  T2.department_id GROUP BY T1.department_id ORDER BY count(*) DESC LIMIT 1",
    "query_toks": "['SELECT', 'T2.department_name', ',', 'T1.department_id', 'FROM', 'Degree_Programs', 'AS', 'T1', 'JOIN', 'Departments', 'AS', 'T2', 'ON', 'T1.department_id', '=', 'T2.department_id', 'GROUP', 'BY', 'T1.department_id', 'ORDER', 'BY', 'count', '(', '*', ')', 'DESC', 'LIMIT', '1']",
    "query_toks_no_value": "['select', 't2', '.', 'department_name', ',', 't1', '.', 'department_id', 'from', 'degree_programs', 'as', 't1', 'join', 'departments', 'as', 't2', 'on', 't1', '.', 'department_id', '=', 't2', '.', 'department_id', 'group', 'by', 't1', '.', 'department_id', 'order', 'by', 'count', '(', '*', ')', 'desc', 'limit', 'value']",
    "question": "Which department offers the most number of degrees? List department name and id.",
    "question_th": "แผนกใดเปิดสอนหลักสูตรจำนวนมากที่สุด? รายชื่อแผนกชื่อและรหัส",
    "question_toks": "['Which', 'department', 'offers', 'the', 'most', 'number', 'of', 'degrees', '?', 'List', 'department', 'name', 'and', 'id', '.']",
    "sql": "{'from': {'table_units': [['table_unit', 3], ['table_unit', 2]], 'conds': [[False, 2, [0, [0, 19, False], None], [0, 14, False], None]]}, 'select': [False, [[0, [0, [0, 15, False], None]], [0, [0, [0, 19, False], None]]]], 'where': [], 'groupBy': [[0, 19, False]], 'having': [], 'orderBy': ['desc', [[0, [3, 0, False], None]]], 'limit': 1, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "student_transcripts_tracking",
    "query": "select t2.department_name ,  t1.department_id from degree_programs as t1 join departments as t2 on t1.department_id  =  t2.department_id group by t1.department_id order by count(*) desc limit 1",
    "query_toks": "['select', 't2.department_name', ',', 't1.department_id', 'from', 'degree_programs', 'as', 't1', 'join', 'departments', 'as', 't2', 'on', 't1.department_id', '=', 't2.department_id', 'group', 'by', 't1.department_id', 'order', 'by', 'count', '(', '*', ')', 'desc', 'limit', '1']",
    "query_toks_no_value": "['select', 't2', '.', 'department_name', ',', 't1', '.', 'department_id', 'from', 'degree_programs', 'as', 't1', 'join', 'departments', 'as', 't2', 'on', 't1', '.', 'department_id', '=', 't2', '.', 'department_id', 'group', 'by', 't1', '.', 'department_id', 'order', 'by', 'count', '(', '*', ')', 'desc', 'limit', 'value']",
    "question": "What is the name and id of the department with the most number of degrees ?",
    "question_th": "ชื่อและรหัสของแผนกที่มีจำนวนปริญญามากที่สุดคืออะไร?",
    "question_toks": "['What', 'is', 'the', 'name', 'and', 'id', 'of', 'the', 'department', 'with', 'the', 'most', 'number', 'of', 'degrees', '?']",
    "sql": "{'from': {'table_units': [['table_unit', 3], ['table_unit', 2]], 'conds': [[False, 2, [0, [0, 19, False], None], [0, 14, False], None]]}, 'select': [False, [[0, [0, [0, 15, False], None]], [0, [0, [0, 19, False], None]]]], 'where': [], 'groupBy': [[0, 19, False]], 'having': [], 'orderBy': ['desc', [[0, [3, 0, False], None]]], 'limit': 1, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "student_transcripts_tracking",
    "query": "SELECT count(DISTINCT department_id) FROM Degree_Programs",
    "query_toks": "['SELECT', 'count', '(', 'DISTINCT', 'department_id', ')', 'FROM', 'Degree_Programs']",
    "query_toks_no_value": "['select', 'count', '(', 'distinct', 'department_id', ')', 'from', 'degree_programs']",
    "question": "How many departments offer any degree?",
    "question_th": "มีกี่แผนกที่เปิดสอนระดับปริญญาใด ๆ ?",
    "question_toks": "['How', 'many', 'departments', 'offer', 'any', 'degree', '?']",
    "sql": "{'from': {'table_units': [['table_unit', 3]], 'conds': []}, 'select': [False, [[3, [0, [0, 19, True], None]]]], 'where': [], 'groupBy': [], 'having': [], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "student_transcripts_tracking",
    "query": "SELECT count(DISTINCT department_id) FROM Degree_Programs",
    "query_toks": "['SELECT', 'count', '(', 'DISTINCT', 'department_id', ')', 'FROM', 'Degree_Programs']",
    "query_toks_no_value": "['select', 'count', '(', 'distinct', 'department_id', ')', 'from', 'degree_programs']",
    "question": "How many different departments offer degrees?",
    "question_th": "มีกี่แผนกที่เปิดสอนหลักสูตรปริญญา?",
    "question_toks": "['How', 'many', 'different', 'departments', 'offer', 'degrees', '?']",
    "sql": "{'from': {'table_units': [['table_unit', 3]], 'conds': []}, 'select': [False, [[3, [0, [0, 19, True], None]]]], 'where': [], 'groupBy': [], 'having': [], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "student_transcripts_tracking",
    "query": "SELECT count(DISTINCT degree_summary_name) FROM Degree_Programs",
    "query_toks": "['SELECT', 'count', '(', 'DISTINCT', 'degree_summary_name', ')', 'FROM', 'Degree_Programs']",
    "query_toks_no_value": "['select', 'count', '(', 'distinct', 'degree_summary_name', ')', 'from', 'degree_programs']",
    "question": "How many different degree names are offered?",
    "question_th": "มีการเสนอชื่อปริญญาที่แตกต่างกันกี่ชื่อ?",
    "question_toks": "['How', 'many', 'different', 'degree', 'names', 'are', 'offered', '?']",
    "sql": "{'from': {'table_units': [['table_unit', 3]], 'conds': []}, 'select': [False, [[3, [0, [0, 20, True], None]]]], 'where': [], 'groupBy': [], 'having': [], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "student_transcripts_tracking",
    "query": "SELECT count(DISTINCT degree_summary_name) FROM Degree_Programs",
    "query_toks": "['SELECT', 'count', '(', 'DISTINCT', 'degree_summary_name', ')', 'FROM', 'Degree_Programs']",
    "query_toks_no_value": "['select', 'count', '(', 'distinct', 'degree_summary_name', ')', 'from', 'degree_programs']",
    "question": "How many different degrees are offered?",
    "question_th": "มีกี่องศาที่แตกต่างกัน?",
    "question_toks": "['How', 'many', 'different', 'degrees', 'are', 'offered', '?']",
    "sql": "{'from': {'table_units': [['table_unit', 3]], 'conds': []}, 'select': [False, [[3, [0, [0, 20, True], None]]]], 'where': [], 'groupBy': [], 'having': [], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "student_transcripts_tracking",
    "query": "SELECT count(*) FROM Departments AS T1 JOIN Degree_Programs AS T2 ON T1.department_id  =  T2.department_id WHERE T1.department_name  =  'engineer'",
    "query_toks": "['SELECT', 'count', '(', '*', ')', 'FROM', 'Departments', 'AS', 'T1', 'JOIN', 'Degree_Programs', 'AS', 'T2', 'ON', 'T1.department_id', '=', 'T2.department_id', 'WHERE', 'T1.department_name', '=', \"'engineer\", \"'\"]",
    "query_toks_no_value": "['select', 'count', '(', '*', ')', 'from', 'departments', 'as', 't1', 'join', 'degree_programs', 'as', 't2', 'on', 't1', '.', 'department_id', '=', 't2', '.', 'department_id', 'where', 't1', '.', 'department_name', '=', 'value']",
    "question": "How many degrees does the engineering department offer?",
    "question_th": "คณะวิศวกรรมศาสตร์เปิดสอนกี่ปริญญา?",
    "question_toks": "['How', 'many', 'degrees', 'does', 'the', 'engineering', 'department', 'offer', '?']",
    "sql": "{'from': {'table_units': [['table_unit', 2], ['table_unit', 3]], 'conds': [[False, 2, [0, [0, 14, False], None], [0, 19, False], None]]}, 'select': [False, [[3, [0, [0, 0, False], None]]]], 'where': [[False, 2, [0, [0, 15, False], None], '\"engineer\"', None]], 'groupBy': [], 'having': [], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "student_transcripts_tracking",
    "query": "SELECT count(*) FROM Departments AS T1 JOIN Degree_Programs AS T2 ON T1.department_id  =  T2.department_id WHERE T1.department_name  =  'engineer'",
    "query_toks": "['SELECT', 'count', '(', '*', ')', 'FROM', 'Departments', 'AS', 'T1', 'JOIN', 'Degree_Programs', 'AS', 'T2', 'ON', 'T1.department_id', '=', 'T2.department_id', 'WHERE', 'T1.department_name', '=', \"'engineer\", \"'\"]",
    "query_toks_no_value": "['select', 'count', '(', '*', ')', 'from', 'departments', 'as', 't1', 'join', 'degree_programs', 'as', 't2', 'on', 't1', '.', 'department_id', '=', 't2', '.', 'department_id', 'where', 't1', '.', 'department_name', '=', 'value']",
    "question": "How many degrees does the engineering department have?",
    "question_th": "คณะวิศวกรรมศาสตร์มีกี่องศา?",
    "question_toks": "['How', 'many', 'degrees', 'does', 'the', 'engineering', 'department', 'have', '?']",
    "sql": "{'from': {'table_units': [['table_unit', 2], ['table_unit', 3]], 'conds': [[False, 2, [0, [0, 14, False], None], [0, 19, False], None]]}, 'select': [False, [[3, [0, [0, 0, False], None]]]], 'where': [[False, 2, [0, [0, 15, False], None], '\"engineer\"', None]], 'groupBy': [], 'having': [], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "student_transcripts_tracking",
    "query": "SELECT section_name ,  section_description FROM Sections",
    "query_toks": "['SELECT', 'section_name', ',', 'section_description', 'FROM', 'Sections']",
    "query_toks_no_value": "['select', 'section_name', ',', 'section_description', 'from', 'sections']",
    "question": "What are the names and descriptions of all the sections?",
    "question_th": "ชื่อและคำอธิบายของทุกส่วนคืออะไร?",
    "question_toks": "['What', 'are', 'the', 'names', 'and', 'descriptions', 'of', 'all', 'the', 'sections', '?']",
    "sql": "{'from': {'table_units': [['table_unit', 4]], 'conds': []}, 'select': [False, [[0, [0, [0, 25, False], None]], [0, [0, [0, 26, False], None]]]], 'where': [], 'groupBy': [], 'having': [], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "student_transcripts_tracking",
    "query": "SELECT section_name ,  section_description FROM Sections",
    "query_toks": "['SELECT', 'section_name', ',', 'section_description', 'FROM', 'Sections']",
    "query_toks_no_value": "['select', 'section_name', ',', 'section_description', 'from', 'sections']",
    "question": "What are the names and descriptions for all the sections?",
    "question_th": "ชื่อและคำอธิบายของทุกส่วนคืออะไร?",
    "question_toks": "['What', 'are', 'the', 'names', 'and', 'descriptions', 'for', 'all', 'the', 'sections', '?']",
    "sql": "{'from': {'table_units': [['table_unit', 4]], 'conds': []}, 'select': [False, [[0, [0, [0, 25, False], None]], [0, [0, [0, 26, False], None]]]], 'where': [], 'groupBy': [], 'having': [], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "student_transcripts_tracking",
    "query": "SELECT T1.course_name ,  T1.course_id FROM Courses AS T1 JOIN Sections AS T2 ON T1.course_id  =  T2.course_id GROUP BY T1.course_id HAVING count(*)  <=  2",
    "query_toks": "['SELECT', 'T1.course_name', ',', 'T1.course_id', 'FROM', 'Courses', 'AS', 'T1', 'JOIN', 'Sections', 'AS', 'T2', 'ON', 'T1.course_id', '=', 'T2.course_id', 'GROUP', 'BY', 'T1.course_id', 'HAVING', 'count', '(', '*', ')', '<', '=', '2']",
    "query_toks_no_value": "['select', 't1', '.', 'course_name', ',', 't1', '.', 'course_id', 'from', 'courses', 'as', 't1', 'join', 'sections', 'as', 't2', 'on', 't1', '.', 'course_id', '=', 't2', '.', 'course_id', 'group', 'by', 't1', '.', 'course_id', 'having', 'count', '(', '*', ')', '<', '=', 'value']",
    "question": "What are the names and id of courses having at most 2 sections?",
    "question_th": "ชื่อและรหัสของหลักสูตรที่มีไม่เกิน 2 ส่วนคืออะไร",
    "question_toks": "['What', 'are', 'the', 'names', 'and', 'id', 'of', 'courses', 'having', 'at', 'most', '2', 'sections', '?']",
    "sql": "{'from': {'table_units': [['table_unit', 1], ['table_unit', 4]], 'conds': [[False, 2, [0, [0, 10, False], None], [0, 24, False], None]]}, 'select': [False, [[0, [0, [0, 11, False], None]], [0, [0, [0, 10, False], None]]]], 'where': [], 'groupBy': [[0, 10, False]], 'having': [[False, 6, [0, [3, 0, False], None], 2.0, None]], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "student_transcripts_tracking",
    "query": "SELECT T1.course_name ,  T1.course_id FROM Courses AS T1 JOIN Sections AS T2 ON T1.course_id  =  T2.course_id GROUP BY T1.course_id HAVING count(*)  <=  2",
    "query_toks": "['SELECT', 'T1.course_name', ',', 'T1.course_id', 'FROM', 'Courses', 'AS', 'T1', 'JOIN', 'Sections', 'AS', 'T2', 'ON', 'T1.course_id', '=', 'T2.course_id', 'GROUP', 'BY', 'T1.course_id', 'HAVING', 'count', '(', '*', ')', '<', '=', '2']",
    "query_toks_no_value": "['select', 't1', '.', 'course_name', ',', 't1', '.', 'course_id', 'from', 'courses', 'as', 't1', 'join', 'sections', 'as', 't2', 'on', 't1', '.', 'course_id', '=', 't2', '.', 'course_id', 'group', 'by', 't1', '.', 'course_id', 'having', 'count', '(', '*', ')', '<', '=', 'value']",
    "question": "What are the names and ids of every course with less than 2 sections?",
    "question_th": "ชื่อและรหัสของทุกรายวิชาที่มีน้อยกว่า 2 ส่วนคือข้อใด",
    "question_toks": "['What', 'are', 'the', 'names', 'and', 'ids', 'of', 'every', 'course', 'with', 'less', 'than', '2', 'sections', '?']",
    "sql": "{'from': {'table_units': [['table_unit', 1], ['table_unit', 4]], 'conds': [[False, 2, [0, [0, 10, False], None], [0, 24, False], None]]}, 'select': [False, [[0, [0, [0, 11, False], None]], [0, [0, [0, 10, False], None]]]], 'where': [], 'groupBy': [[0, 10, False]], 'having': [[False, 6, [0, [3, 0, False], None], 2.0, None]], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "student_transcripts_tracking",
    "query": "SELECT section_name FROM Sections ORDER BY section_name DESC",
    "query_toks": "['SELECT', 'section_name', 'FROM', 'Sections', 'ORDER', 'BY', 'section_name', 'DESC']",
    "query_toks_no_value": "['select', 'section_name', 'from', 'sections', 'order', 'by', 'section_name', 'desc']",
    "question": "List the section_name in reversed lexicographical order.",
    "question_th": "แสดงรายการsection_nameตามลำดับพจนานุกรมแบบย้อนกลับ",
    "question_toks": "['List', 'the', 'section_name', 'in', 'reversed', 'lexicographical', 'order', '.']",
    "sql": "{'from': {'table_units': [['table_unit', 4]], 'conds': []}, 'select': [False, [[0, [0, [0, 25, False], None]]]], 'where': [], 'groupBy': [], 'having': [], 'orderBy': ['desc', [[0, [0, 25, False], None]]], 'limit': None, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "student_transcripts_tracking",
    "query": "SELECT section_name FROM Sections ORDER BY section_name DESC",
    "query_toks": "['SELECT', 'section_name', 'FROM', 'Sections', 'ORDER', 'BY', 'section_name', 'DESC']",
    "query_toks_no_value": "['select', 'section_name', 'from', 'sections', 'order', 'by', 'section_name', 'desc']",
    "question": "What are the names of the sections in reverse alphabetical order?",
    "question_th": "ส่วนต่างๆ เรียงตามลำดับตัวอักษรกลับกันชื่ออะไร",
    "question_toks": "['What', 'are', 'the', 'names', 'of', 'the', 'sections', 'in', 'reverse', 'alphabetical', 'order', '?']",
    "sql": "{'from': {'table_units': [['table_unit', 4]], 'conds': []}, 'select': [False, [[0, [0, [0, 25, False], None]]]], 'where': [], 'groupBy': [], 'having': [], 'orderBy': ['desc', [[0, [0, 25, False], None]]], 'limit': None, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "student_transcripts_tracking",
    "query": "SELECT T1.semester_name ,  T1.semester_id FROM Semesters AS T1 JOIN Student_Enrolment AS T2 ON T1.semester_id  =  T2.semester_id GROUP BY T1.semester_id ORDER BY count(*) DESC LIMIT 1",
    "query_toks": "['SELECT', 'T1.semester_name', ',', 'T1.semester_id', 'FROM', 'Semesters', 'AS', 'T1', 'JOIN', 'Student_Enrolment', 'AS', 'T2', 'ON', 'T1.semester_id', '=', 'T2.semester_id', 'GROUP', 'BY', 'T1.semester_id', 'ORDER', 'BY', 'count', '(', '*', ')', 'DESC', 'LIMIT', '1']",
    "query_toks_no_value": "['select', 't1', '.', 'semester_name', ',', 't1', '.', 'semester_id', 'from', 'semesters', 'as', 't1', 'join', 'student_enrolment', 'as', 't2', 'on', 't1', '.', 'semester_id', '=', 't2', '.', 'semester_id', 'group', 'by', 't1', '.', 'semester_id', 'order', 'by', 'count', '(', '*', ')', 'desc', 'limit', 'value']",
    "question": "What is the semester which most student registered in? Show both the name and the id.",
    "question_th": "นักเรียนส่วนใหญ่ลงทะเบียนเรียนในภาคการศึกษาใด? แสดงทั้งชื่อและรหัส",
    "question_toks": "['What', 'is', 'the', 'semester', 'which', 'most', 'student', 'registered', 'in', '?', 'Show', 'both', 'the', 'name', 'and', 'the', 'id', '.']",
    "sql": "{'from': {'table_units': [['table_unit', 5], ['table_unit', 7]], 'conds': [[False, 2, [0, [0, 28, False], None], [0, 46, False], None]]}, 'select': [False, [[0, [0, [0, 29, False], None]], [0, [0, [0, 28, False], None]]]], 'where': [], 'groupBy': [[0, 28, False]], 'having': [], 'orderBy': ['desc', [[0, [3, 0, False], None]]], 'limit': 1, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "student_transcripts_tracking",
    "query": "SELECT T1.semester_name ,  T1.semester_id FROM Semesters AS T1 JOIN Student_Enrolment AS T2 ON T1.semester_id  =  T2.semester_id GROUP BY T1.semester_id ORDER BY count(*) DESC LIMIT 1",
    "query_toks": "['SELECT', 'T1.semester_name', ',', 'T1.semester_id', 'FROM', 'Semesters', 'AS', 'T1', 'JOIN', 'Student_Enrolment', 'AS', 'T2', 'ON', 'T1.semester_id', '=', 'T2.semester_id', 'GROUP', 'BY', 'T1.semester_id', 'ORDER', 'BY', 'count', '(', '*', ')', 'DESC', 'LIMIT', '1']",
    "query_toks_no_value": "['select', 't1', '.', 'semester_name', ',', 't1', '.', 'semester_id', 'from', 'semesters', 'as', 't1', 'join', 'student_enrolment', 'as', 't2', 'on', 't1', '.', 'semester_id', '=', 't2', '.', 'semester_id', 'group', 'by', 't1', '.', 'semester_id', 'order', 'by', 'count', '(', '*', ')', 'desc', 'limit', 'value']",
    "question": "For each semester, what is the name and id of the one with the most students registered?",
    "question_th": "ในแต่ละภาคการศึกษา ชื่อและรหัสของภาคการศึกษาที่มีผู้ลงทะเบียนมากที่สุดคือข้อใด",
    "question_toks": "['For', 'each', 'semester', ',', 'what', 'is', 'the', 'name', 'and', 'id', 'of', 'the', 'one', 'with', 'the', 'most', 'students', 'registered', '?']",
    "sql": "{'from': {'table_units': [['table_unit', 5], ['table_unit', 7]], 'conds': [[False, 2, [0, [0, 28, False], None], [0, 46, False], None]]}, 'select': [False, [[0, [0, [0, 29, False], None]], [0, [0, [0, 28, False], None]]]], 'where': [], 'groupBy': [[0, 28, False]], 'having': [], 'orderBy': ['desc', [[0, [3, 0, False], None]]], 'limit': 1, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "student_transcripts_tracking",
    "query": "SELECT department_description FROM Departments WHERE department_name LIKE '%computer%'",
    "query_toks": "['SELECT', 'department_description', 'FROM', 'Departments', 'WHERE', 'department_name', 'LIKE', \"'\", '%', 'computer', '%', \"'\"]",
    "query_toks_no_value": "['select', 'department_description', 'from', 'departments', 'where', 'department_name', 'like', 'value']",
    "question": "What is the description of the department whose name has the substring the computer?",
    "question_th": "คำอธิบายของแผนกที่มีชื่อย่อยอยู่ในคอมพิวเตอร์คืออะไร?",
    "question_toks": "['What', 'is', 'the', 'description', 'of', 'the', 'department', 'whose', 'name', 'has', 'the', 'substring', 'the', 'computer', '?']",
    "sql": "{'from': {'table_units': [['table_unit', 2]], 'conds': []}, 'select': [False, [[0, [0, [0, 16, False], None]]]], 'where': [[False, 9, [0, [0, 15, False], None], '\"%computer%\"', None]], 'groupBy': [], 'having': [], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "student_transcripts_tracking",
    "query": "SELECT department_description FROM Departments WHERE department_name LIKE '%computer%'",
    "query_toks": "['SELECT', 'department_description', 'FROM', 'Departments', 'WHERE', 'department_name', 'LIKE', \"'\", '%', 'computer', '%', \"'\"]",
    "query_toks_no_value": "['select', 'department_description', 'from', 'departments', 'where', 'department_name', 'like', 'value']",
    "question": "What is the department description for the one whose name has the word computer?",
    "question_th": "แผนกที่มีชื่อเป็นคำว่าคอมพิวเตอร์มีชื่อว่าอะไร?",
    "question_toks": "['What', 'is', 'the', 'department', 'description', 'for', 'the', 'one', 'whose', 'name', 'has', 'the', 'word', 'computer', '?']",
    "sql": "{'from': {'table_units': [['table_unit', 2]], 'conds': []}, 'select': [False, [[0, [0, [0, 16, False], None]]]], 'where': [[False, 9, [0, [0, 15, False], None], '\"%computer%\"', None]], 'groupBy': [], 'having': [], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "student_transcripts_tracking",
    "query": "SELECT T1.first_name ,  T1.middle_name ,  T1.last_name ,  T1.student_id FROM Students AS T1 JOIN Student_Enrolment AS T2 ON T1.student_id  =  T2.student_id GROUP BY T1.student_id HAVING count(*)  =  2",
    "query_toks": "['SELECT', 'T1.first_name', ',', 'T1.middle_name', ',', 'T1.last_name', ',', 'T1.student_id', 'FROM', 'Students', 'AS', 'T1', 'JOIN', 'Student_Enrolment', 'AS', 'T2', 'ON', 'T1.student_id', '=', 'T2.student_id', 'GROUP', 'BY', 'T1.student_id', 'HAVING', 'count', '(', '*', ')', '=', '2']",
    "query_toks_no_value": "['select', 't1', '.', 'first_name', ',', 't1', '.', 'middle_name', ',', 't1', '.', 'last_name', ',', 't1', '.', 'student_id', 'from', 'students', 'as', 't1', 'join', 'student_enrolment', 'as', 't2', 'on', 't1', '.', 'student_id', '=', 't2', '.', 'student_id', 'group', 'by', 't1', '.', 'student_id', 'having', 'count', '(', '*', ')', '=', 'value']",
    "question": "Who are enrolled in 2 degree programs in one semester? List the first name, middle name and last name and the id.",
    "question_th": "ใครบ้างที่ลงทะเบียนเรียนหลักสูตร 2 องศาในหนึ่งภาคการศึกษา? ระบุชื่อ ชื่อกลาง และนามสกุล และรหัสประจำตัว",
    "question_toks": "['Who', 'are', 'enrolled', 'in', '2', 'degree', 'programs', 'in', 'one', 'semester', '?', 'List', 'the', 'first', 'name', ',', 'middle', 'name', 'and', 'last', 'name', 'and', 'the', 'id', '.']",
    "sql": "{'from': {'table_units': [['table_unit', 6], ['table_unit', 7]], 'conds': [[False, 2, [0, [0, 32, False], None], [0, 47, False], None]]}, 'select': [False, [[0, [0, [0, 35, False], None]], [0, [0, [0, 36, False], None]], [0, [0, [0, 37, False], None]], [0, [0, [0, 32, False], None]]]], 'where': [], 'groupBy': [[0, 32, False]], 'having': [[False, 2, [0, [3, 0, False], None], 2.0, None]], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "student_transcripts_tracking",
    "query": "SELECT T1.first_name ,  T1.middle_name ,  T1.last_name ,  T1.student_id FROM Students AS T1 JOIN Student_Enrolment AS T2 ON T1.student_id  =  T2.student_id GROUP BY T1.student_id HAVING count(*)  =  2",
    "query_toks": "['SELECT', 'T1.first_name', ',', 'T1.middle_name', ',', 'T1.last_name', ',', 'T1.student_id', 'FROM', 'Students', 'AS', 'T1', 'JOIN', 'Student_Enrolment', 'AS', 'T2', 'ON', 'T1.student_id', '=', 'T2.student_id', 'GROUP', 'BY', 'T1.student_id', 'HAVING', 'count', '(', '*', ')', '=', '2']",
    "query_toks_no_value": "['select', 't1', '.', 'first_name', ',', 't1', '.', 'middle_name', ',', 't1', '.', 'last_name', ',', 't1', '.', 'student_id', 'from', 'students', 'as', 't1', 'join', 'student_enrolment', 'as', 't2', 'on', 't1', '.', 'student_id', '=', 't2', '.', 'student_id', 'group', 'by', 't1', '.', 'student_id', 'having', 'count', '(', '*', ')', '=', 'value']",
    "question": "What are the first, middle, and last names, along with the ids, of all students who enrolled in 2 degree programs in one semester?",
    "question_th": "ชื่อ นามสกุล นามสกุล พร้อมด้วยรหัส ของนักศึกษาทุกคนที่ลงทะเบียนเรียนหลักสูตร 2 ปริญญา ในหนึ่งภาคการศึกษามีอะไรบ้าง",
    "question_toks": "['What', 'are', 'the', 'first', ',', 'middle', ',', 'and', 'last', 'names', ',', 'along', 'with', 'the', 'ids', ',', 'of', 'all', 'students', 'who', 'enrolled', 'in', '2', 'degree', 'programs', 'in', 'one', 'semester', '?']",
    "sql": "{'from': {'table_units': [['table_unit', 6], ['table_unit', 7]], 'conds': [[False, 2, [0, [0, 32, False], None], [0, 47, False], None]]}, 'select': [False, [[0, [0, [0, 35, False], None]], [0, [0, [0, 36, False], None]], [0, [0, [0, 37, False], None]], [0, [0, [0, 32, False], None]]]], 'where': [], 'groupBy': [[0, 32, False]], 'having': [[False, 2, [0, [3, 0, False], None], 2.0, None]], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "student_transcripts_tracking",
    "query": "SELECT DISTINCT T1.first_name ,  T1.middle_name ,  T1.last_name FROM Students AS T1 JOIN Student_Enrolment AS T2 ON T1.student_id  =  T2.student_id JOIN Degree_Programs AS T3 ON T2.degree_program_id  =  T3.degree_program_id WHERE T3.degree_summary_name  =  'Bachelor'",
    "query_toks": "['SELECT', 'DISTINCT', 'T1.first_name', ',', 'T1.middle_name', ',', 'T1.last_name', 'FROM', 'Students', 'AS', 'T1', 'JOIN', 'Student_Enrolment', 'AS', 'T2', 'ON', 'T1.student_id', '=', 'T2.student_id', 'JOIN', 'Degree_Programs', 'AS', 'T3', 'ON', 'T2.degree_program_id', '=', 'T3.degree_program_id', 'WHERE', 'T3.degree_summary_name', '=', \"'Bachelor\", \"'\"]",
    "query_toks_no_value": "['select', 'distinct', 't1', '.', 'first_name', ',', 't1', '.', 'middle_name', ',', 't1', '.', 'last_name', 'from', 'students', 'as', 't1', 'join', 'student_enrolment', 'as', 't2', 'on', 't1', '.', 'student_id', '=', 't2', '.', 'student_id', 'join', 'degree_programs', 'as', 't3', 'on', 't2', '.', 'degree_program_id', '=', 't3', '.', 'degree_program_id', 'where', 't3', '.', 'degree_summary_name', '=', 'value']",
    "question": "Who is enrolled in a Bachelor degree program? List the first name, middle name, last name.",
    "question_th": "ใครบ้างที่ลงทะเบียนเรียนหลักสูตรปริญญาตรี? ระบุชื่อ ชื่อกลาง นามสกุล.",
    "question_toks": "['Who', 'is', 'enrolled', 'in', 'a', 'Bachelor', 'degree', 'program', '?', 'List', 'the', 'first', 'name', ',', 'middle', 'name', ',', 'last', 'name', '.']",
    "sql": "{'from': {'table_units': [['table_unit', 6], ['table_unit', 7], ['table_unit', 3]], 'conds': [[False, 2, [0, [0, 32, False], None], [0, 47, False], None], 'and', [False, 2, [0, [0, 45, False], None], [0, 18, False], None]]}, 'select': [True, [[0, [0, [0, 35, False], None]], [0, [0, [0, 36, False], None]], [0, [0, [0, 37, False], None]]]], 'where': [[False, 2, [0, [0, 20, False], None], '\"Bachelor\"', None]], 'groupBy': [], 'having': [], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "student_transcripts_tracking",
    "query": "SELECT DISTINCT T1.first_name ,  T1.middle_name ,  T1.last_name FROM Students AS T1 JOIN Student_Enrolment AS T2 ON T1.student_id  =  T2.student_id JOIN Degree_Programs AS T3 ON T2.degree_program_id  =  T3.degree_program_id WHERE T3.degree_summary_name  =  'Bachelor'",
    "query_toks": "['SELECT', 'DISTINCT', 'T1.first_name', ',', 'T1.middle_name', ',', 'T1.last_name', 'FROM', 'Students', 'AS', 'T1', 'JOIN', 'Student_Enrolment', 'AS', 'T2', 'ON', 'T1.student_id', '=', 'T2.student_id', 'JOIN', 'Degree_Programs', 'AS', 'T3', 'ON', 'T2.degree_program_id', '=', 'T3.degree_program_id', 'WHERE', 'T3.degree_summary_name', '=', \"'Bachelor\", \"'\"]",
    "query_toks_no_value": "['select', 'distinct', 't1', '.', 'first_name', ',', 't1', '.', 'middle_name', ',', 't1', '.', 'last_name', 'from', 'students', 'as', 't1', 'join', 'student_enrolment', 'as', 't2', 'on', 't1', '.', 'student_id', '=', 't2', '.', 'student_id', 'join', 'degree_programs', 'as', 't3', 'on', 't2', '.', 'degree_program_id', '=', 't3', '.', 'degree_program_id', 'where', 't3', '.', 'degree_summary_name', '=', 'value']",
    "question": "What are the first, middle, and last names for everybody enrolled in a Bachelors program?",
    "question_th": "ชื่อ ชื่อกลาง และนามสกุลสำหรับทุกคนที่ลงทะเบียนในหลักสูตรปริญญาตรีคืออะไร?",
    "question_toks": "['What', 'are', 'the', 'first', ',', 'middle', ',', 'and', 'last', 'names', 'for', 'everybody', 'enrolled', 'in', 'a', 'Bachelors', 'program', '?']",
    "sql": "{'from': {'table_units': [['table_unit', 6], ['table_unit', 7], ['table_unit', 3]], 'conds': [[False, 2, [0, [0, 32, False], None], [0, 47, False], None], 'and', [False, 2, [0, [0, 45, False], None], [0, 18, False], None]]}, 'select': [True, [[0, [0, [0, 35, False], None]], [0, [0, [0, 36, False], None]], [0, [0, [0, 37, False], None]]]], 'where': [[False, 2, [0, [0, 20, False], None], '\"Bachelor\"', None]], 'groupBy': [], 'having': [], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "student_transcripts_tracking",
    "query": "SELECT T1.degree_summary_name FROM Degree_Programs AS T1 JOIN Student_Enrolment AS T2 ON T1.degree_program_id  =  T2.degree_program_id GROUP BY T1.degree_summary_name ORDER BY count(*) DESC LIMIT 1",
    "query_toks": "['SELECT', 'T1.degree_summary_name', 'FROM', 'Degree_Programs', 'AS', 'T1', 'JOIN', 'Student_Enrolment', 'AS', 'T2', 'ON', 'T1.degree_program_id', '=', 'T2.degree_program_id', 'GROUP', 'BY', 'T1.degree_summary_name', 'ORDER', 'BY', 'count', '(', '*', ')', 'DESC', 'LIMIT', '1']",
    "query_toks_no_value": "['select', 't1', '.', 'degree_summary_name', 'from', 'degree_programs', 'as', 't1', 'join', 'student_enrolment', 'as', 't2', 'on', 't1', '.', 'degree_program_id', '=', 't2', '.', 'degree_program_id', 'group', 'by', 't1', '.', 'degree_summary_name', 'order', 'by', 'count', '(', '*', ')', 'desc', 'limit', 'value']",
    "question": "Find the kind of program which most number of students are enrolled in?",
    "question_th": "ค้นหาโปรแกรมประเภทใดที่มีนักเรียนลงทะเบียนเรียนมากที่สุด?",
    "question_toks": "['Find', 'the', 'kind', 'of', 'program', 'which', 'most', 'number', 'of', 'students', 'are', 'enrolled', 'in', '?']",
    "sql": "{'from': {'table_units': [['table_unit', 3], ['table_unit', 7]], 'conds': [[False, 2, [0, [0, 18, False], None], [0, 45, False], None]]}, 'select': [False, [[0, [0, [0, 20, False], None]]]], 'where': [], 'groupBy': [[0, 20, False]], 'having': [], 'orderBy': ['desc', [[0, [3, 0, False], None]]], 'limit': 1, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "student_transcripts_tracking",
    "query": "SELECT T1.degree_summary_name FROM Degree_Programs AS T1 JOIN Student_Enrolment AS T2 ON T1.degree_program_id  =  T2.degree_program_id GROUP BY T1.degree_summary_name ORDER BY count(*) DESC LIMIT 1",
    "query_toks": "['SELECT', 'T1.degree_summary_name', 'FROM', 'Degree_Programs', 'AS', 'T1', 'JOIN', 'Student_Enrolment', 'AS', 'T2', 'ON', 'T1.degree_program_id', '=', 'T2.degree_program_id', 'GROUP', 'BY', 'T1.degree_summary_name', 'ORDER', 'BY', 'count', '(', '*', ')', 'DESC', 'LIMIT', '1']",
    "query_toks_no_value": "['select', 't1', '.', 'degree_summary_name', 'from', 'degree_programs', 'as', 't1', 'join', 'student_enrolment', 'as', 't2', 'on', 't1', '.', 'degree_program_id', '=', 't2', '.', 'degree_program_id', 'group', 'by', 't1', '.', 'degree_summary_name', 'order', 'by', 'count', '(', '*', ')', 'desc', 'limit', 'value']",
    "question": "What is the degree summary name that has the most number of students enrolled?",
    "question_th": "สรุปปริญญาที่มีจำนวนนักศึกษาลงทะเบียนเรียนมากที่สุดชื่ออะไร?",
    "question_toks": "['What', 'is', 'the', 'degree', 'summary', 'name', 'that', 'has', 'the', 'most', 'number', 'of', 'students', 'enrolled', '?']",
    "sql": "{'from': {'table_units': [['table_unit', 3], ['table_unit', 7]], 'conds': [[False, 2, [0, [0, 18, False], None], [0, 45, False], None]]}, 'select': [False, [[0, [0, [0, 20, False], None]]]], 'where': [], 'groupBy': [[0, 20, False]], 'having': [], 'orderBy': ['desc', [[0, [3, 0, False], None]]], 'limit': 1, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "student_transcripts_tracking",
    "query": "SELECT T1.degree_program_id ,  T1.degree_summary_name FROM Degree_Programs AS T1 JOIN Student_Enrolment AS T2 ON T1.degree_program_id  =  T2.degree_program_id GROUP BY T1.degree_program_id ORDER BY count(*) DESC LIMIT 1",
    "query_toks": "['SELECT', 'T1.degree_program_id', ',', 'T1.degree_summary_name', 'FROM', 'Degree_Programs', 'AS', 'T1', 'JOIN', 'Student_Enrolment', 'AS', 'T2', 'ON', 'T1.degree_program_id', '=', 'T2.degree_program_id', 'GROUP', 'BY', 'T1.degree_program_id', 'ORDER', 'BY', 'count', '(', '*', ')', 'DESC', 'LIMIT', '1']",
    "query_toks_no_value": "['select', 't1', '.', 'degree_program_id', ',', 't1', '.', 'degree_summary_name', 'from', 'degree_programs', 'as', 't1', 'join', 'student_enrolment', 'as', 't2', 'on', 't1', '.', 'degree_program_id', '=', 't2', '.', 'degree_program_id', 'group', 'by', 't1', '.', 'degree_program_id', 'order', 'by', 'count', '(', '*', ')', 'desc', 'limit', 'value']",
    "question": "Find the program which most number of students are enrolled in. List both the id and the summary.",
    "question_th": "ค้นหาโปรแกรมที่มีผู้เรียนมากที่สุด โดยระบุทั้ง ID และสรุป",
    "question_toks": "['Find', 'the', 'program', 'which', 'most', 'number', 'of', 'students', 'are', 'enrolled', 'in', '.', 'List', 'both', 'the', 'id', 'and', 'the', 'summary', '.']",
    "sql": "{'from': {'table_units': [['table_unit', 3], ['table_unit', 7]], 'conds': [[False, 2, [0, [0, 18, False], None], [0, 45, False], None]]}, 'select': [False, [[0, [0, [0, 18, False], None]], [0, [0, [0, 20, False], None]]]], 'where': [], 'groupBy': [[0, 18, False]], 'having': [], 'orderBy': ['desc', [[0, [3, 0, False], None]]], 'limit': 1, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "student_transcripts_tracking",
    "query": "SELECT T1.degree_program_id ,  T1.degree_summary_name FROM Degree_Programs AS T1 JOIN Student_Enrolment AS T2 ON T1.degree_program_id  =  T2.degree_program_id GROUP BY T1.degree_program_id ORDER BY count(*) DESC LIMIT 1",
    "query_toks": "['SELECT', 'T1.degree_program_id', ',', 'T1.degree_summary_name', 'FROM', 'Degree_Programs', 'AS', 'T1', 'JOIN', 'Student_Enrolment', 'AS', 'T2', 'ON', 'T1.degree_program_id', '=', 'T2.degree_program_id', 'GROUP', 'BY', 'T1.degree_program_id', 'ORDER', 'BY', 'count', '(', '*', ')', 'DESC', 'LIMIT', '1']",
    "query_toks_no_value": "['select', 't1', '.', 'degree_program_id', ',', 't1', '.', 'degree_summary_name', 'from', 'degree_programs', 'as', 't1', 'join', 'student_enrolment', 'as', 't2', 'on', 't1', '.', 'degree_program_id', '=', 't2', '.', 'degree_program_id', 'group', 'by', 't1', '.', 'degree_program_id', 'order', 'by', 'count', '(', '*', ')', 'desc', 'limit', 'value']",
    "question": "What is the program id and the summary of the degree that has the most students enrolled?",
    "question_th": "รหัสโปรแกรมและสรุปปริญญาที่มีนักศึกษาลงทะเบียนมากที่สุดคืออะไร?",
    "question_toks": "['What', 'is', 'the', 'program', 'id', 'and', 'the', 'summary', 'of', 'the', 'degree', 'that', 'has', 'the', 'most', 'students', 'enrolled', '?']",
    "sql": "{'from': {'table_units': [['table_unit', 3], ['table_unit', 7]], 'conds': [[False, 2, [0, [0, 18, False], None], [0, 45, False], None]]}, 'select': [False, [[0, [0, [0, 18, False], None]], [0, [0, [0, 20, False], None]]]], 'where': [], 'groupBy': [[0, 18, False]], 'having': [], 'orderBy': ['desc', [[0, [3, 0, False], None]]], 'limit': 1, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "student_transcripts_tracking",
    "query": "SELECT T1.student_id ,  T1.first_name ,  T1.middle_name ,  T1.last_name ,  count(*) ,  T1.student_id FROM Students AS T1 JOIN Student_Enrolment AS T2 ON T1.student_id  =  T2.student_id GROUP BY T1.student_id ORDER BY count(*) DESC LIMIT 1",
    "query_toks": "['SELECT', 'T1.student_id', ',', 'T1.first_name', ',', 'T1.middle_name', ',', 'T1.last_name', ',', 'count', '(', '*', ')', ',', 'T1.student_id', 'FROM', 'Students', 'AS', 'T1', 'JOIN', 'Student_Enrolment', 'AS', 'T2', 'ON', 'T1.student_id', '=', 'T2.student_id', 'GROUP', 'BY', 'T1.student_id', 'ORDER', 'BY', 'count', '(', '*', ')', 'DESC', 'LIMIT', '1']",
    "query_toks_no_value": "['select', 't1', '.', 'student_id', ',', 't1', '.', 'first_name', ',', 't1', '.', 'middle_name', ',', 't1', '.', 'last_name', ',', 'count', '(', '*', ')', ',', 't1', '.', 'student_id', 'from', 'students', 'as', 't1', 'join', 'student_enrolment', 'as', 't2', 'on', 't1', '.', 'student_id', '=', 't2', '.', 'student_id', 'group', 'by', 't1', '.', 'student_id', 'order', 'by', 'count', '(', '*', ')', 'desc', 'limit', 'value']",
    "question": "Which student has enrolled for the most times in any program? List the id, first name, middle name, last name, the number of enrollments and student id.",
    "question_th": "นักเรียนคนไหนที่ลงทะเบียนเรียนในโปรแกรมใด ๆ มากที่สุด? ระบุรหัส ชื่อ ชื่อกลาง นามสกุล จำนวนการลงทะเบียน และรหัสนักศึกษา",
    "question_toks": "['Which', 'student', 'has', 'enrolled', 'for', 'the', 'most', 'times', 'in', 'any', 'program', '?', 'List', 'the', 'id', ',', 'first', 'name', ',', 'middle', 'name', ',', 'last', 'name', ',', 'the', 'number', 'of', 'enrollments', 'and', 'student', 'id', '.']",
    "sql": "{'from': {'table_units': [['table_unit', 6], ['table_unit', 7]], 'conds': [[False, 2, [0, [0, 32, False], None], [0, 47, False], None]]}, 'select': [False, [[0, [0, [0, 32, False], None]], [0, [0, [0, 35, False], None]], [0, [0, [0, 36, False], None]], [0, [0, [0, 37, False], None]], [3, [0, [0, 0, False], None]], [0, [0, [0, 32, False], None]]]], 'where': [], 'groupBy': [[0, 32, False]], 'having': [], 'orderBy': ['desc', [[0, [3, 0, False], None]]], 'limit': 1, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "student_transcripts_tracking",
    "query": "SELECT T1.student_id ,  T1.first_name ,  T1.middle_name ,  T1.last_name ,  count(*) ,  T1.student_id FROM Students AS T1 JOIN Student_Enrolment AS T2 ON T1.student_id  =  T2.student_id GROUP BY T1.student_id ORDER BY count(*) DESC LIMIT 1",
    "query_toks": "['SELECT', 'T1.student_id', ',', 'T1.first_name', ',', 'T1.middle_name', ',', 'T1.last_name', ',', 'count', '(', '*', ')', ',', 'T1.student_id', 'FROM', 'Students', 'AS', 'T1', 'JOIN', 'Student_Enrolment', 'AS', 'T2', 'ON', 'T1.student_id', '=', 'T2.student_id', 'GROUP', 'BY', 'T1.student_id', 'ORDER', 'BY', 'count', '(', '*', ')', 'DESC', 'LIMIT', '1']",
    "query_toks_no_value": "['select', 't1', '.', 'student_id', ',', 't1', '.', 'first_name', ',', 't1', '.', 'middle_name', ',', 't1', '.', 'last_name', ',', 'count', '(', '*', ')', ',', 't1', '.', 'student_id', 'from', 'students', 'as', 't1', 'join', 'student_enrolment', 'as', 't2', 'on', 't1', '.', 'student_id', '=', 't2', '.', 'student_id', 'group', 'by', 't1', '.', 'student_id', 'order', 'by', 'count', '(', '*', ')', 'desc', 'limit', 'value']",
    "question": "What is the first, middle, and last name, along with the id and number of enrollments, for the student who enrolled the most in any program?",
    "question_th": "ชื่อ ชื่อกลาง นามสกุล พร้อมด้วยรหัสและจำนวนการลงทะเบียน สำหรับนักศึกษาที่ลงทะเบียนเรียนในหลักสูตรใดมากที่สุด?",
    "question_toks": "['What', 'is', 'the', 'first', ',', 'middle', ',', 'and', 'last', 'name', ',', 'along', 'with', 'the', 'id', 'and', 'number', 'of', 'enrollments', ',', 'for', 'the', 'student', 'who', 'enrolled', 'the', 'most', 'in', 'any', 'program', '?']",
    "sql": "{'from': {'table_units': [['table_unit', 6], ['table_unit', 7]], 'conds': [[False, 2, [0, [0, 32, False], None], [0, 47, False], None]]}, 'select': [False, [[0, [0, [0, 32, False], None]], [0, [0, [0, 35, False], None]], [0, [0, [0, 36, False], None]], [0, [0, [0, 37, False], None]], [3, [0, [0, 0, False], None]], [0, [0, [0, 32, False], None]]]], 'where': [], 'groupBy': [[0, 32, False]], 'having': [], 'orderBy': ['desc', [[0, [3, 0, False], None]]], 'limit': 1, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "student_transcripts_tracking",
    "query": "SELECT semester_name FROM Semesters WHERE semester_id NOT IN( SELECT semester_id FROM Student_Enrolment )",
    "query_toks": "['SELECT', 'semester_name', 'FROM', 'Semesters', 'WHERE', 'semester_id', 'NOT', 'IN', '(', 'SELECT', 'semester_id', 'FROM', 'Student_Enrolment', ')']",
    "query_toks_no_value": "['select', 'semester_name', 'from', 'semesters', 'where', 'semester_id', 'not', 'in', '(', 'select', 'semester_id', 'from', 'student_enrolment', ')']",
    "question": "Which semesters do not have any student enrolled? List the semester name.",
    "question_th": "ภาคการศึกษาใดไม่มีนักศึกษาลงทะเบียนเรียน? รายชื่อภาคการศึกษา",
    "question_toks": "['Which', 'semesters', 'do', 'not', 'have', 'any', 'student', 'enrolled', '?', 'List', 'the', 'semester', 'name', '.']",
    "sql": "{'from': {'table_units': [['table_unit', 5]], 'conds': []}, 'select': [False, [[0, [0, [0, 29, False], None]]]], 'where': [[True, 8, [0, [0, 28, False], None], {'from': {'table_units': [['table_unit', 7]], 'conds': []}, 'select': [False, [[0, [0, [0, 46, False], None]]]], 'where': [], 'groupBy': [], 'having': [], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}, None]], 'groupBy': [], 'having': [], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "student_transcripts_tracking",
    "query": "SELECT semester_name FROM Semesters WHERE semester_id NOT IN( SELECT semester_id FROM Student_Enrolment )",
    "query_toks": "['SELECT', 'semester_name', 'FROM', 'Semesters', 'WHERE', 'semester_id', 'NOT', 'IN', '(', 'SELECT', 'semester_id', 'FROM', 'Student_Enrolment', ')']",
    "query_toks_no_value": "['select', 'semester_name', 'from', 'semesters', 'where', 'semester_id', 'not', 'in', '(', 'select', 'semester_id', 'from', 'student_enrolment', ')']",
    "question": "What is the name of the semester with no students enrolled?",
    "question_th": "ภาคการศึกษาที่ไม่มีนักเรียนลงทะเบียนชื่ออะไร?",
    "question_toks": "['What', 'is', 'the', 'name', 'of', 'the', 'semester', 'with', 'no', 'students', 'enrolled', '?']",
    "sql": "{'from': {'table_units': [['table_unit', 5]], 'conds': []}, 'select': [False, [[0, [0, [0, 29, False], None]]]], 'where': [[True, 8, [0, [0, 28, False], None], {'from': {'table_units': [['table_unit', 7]], 'conds': []}, 'select': [False, [[0, [0, [0, 46, False], None]]]], 'where': [], 'groupBy': [], 'having': [], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}, None]], 'groupBy': [], 'having': [], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "student_transcripts_tracking",
    "query": "SELECT DISTINCT T1.course_name FROM Courses AS T1 JOIN Student_Enrolment_Courses AS T2 ON T1.course_id  =  T2.course_id",
    "query_toks": "['SELECT', 'DISTINCT', 'T1.course_name', 'FROM', 'Courses', 'AS', 'T1', 'JOIN', 'Student_Enrolment_Courses', 'AS', 'T2', 'ON', 'T1.course_id', '=', 'T2.course_id']",
    "query_toks_no_value": "['select', 'distinct', 't1', '.', 'course_name', 'from', 'courses', 'as', 't1', 'join', 'student_enrolment_courses', 'as', 't2', 'on', 't1', '.', 'course_id', '=', 't2', '.', 'course_id']",
    "question": "What are all the course names of the courses which ever have students enrolled in?",
    "question_th": "ชื่อหลักสูตรของหลักสูตรที่นักศึกษาเคยลงทะเบียนเรียนมีชื่ออะไรบ้าง?",
    "question_toks": "['What', 'are', 'all', 'the', 'course', 'names', 'of', 'the', 'courses', 'which', 'ever', 'have', 'students', 'enrolled', 'in', '?']",
    "sql": "{'from': {'table_units': [['table_unit', 1], ['table_unit', 8]], 'conds': [[False, 2, [0, [0, 10, False], None], [0, 50, False], None]]}, 'select': [True, [[0, [0, [0, 11, False], None]]]], 'where': [], 'groupBy': [], 'having': [], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "student_transcripts_tracking",
    "query": "SELECT DISTINCT T1.course_name FROM Courses AS T1 JOIN Student_Enrolment_Courses AS T2 ON T1.course_id  =  T2.course_id",
    "query_toks": "['SELECT', 'DISTINCT', 'T1.course_name', 'FROM', 'Courses', 'AS', 'T1', 'JOIN', 'Student_Enrolment_Courses', 'AS', 'T2', 'ON', 'T1.course_id', '=', 'T2.course_id']",
    "query_toks_no_value": "['select', 'distinct', 't1', '.', 'course_name', 'from', 'courses', 'as', 't1', 'join', 'student_enrolment_courses', 'as', 't2', 'on', 't1', '.', 'course_id', '=', 't2', '.', 'course_id']",
    "question": "What are the names of all courses that have some students enrolled?",
    "question_th": "หลักสูตรทั้งหมดที่มีนักเรียนบางคนลงทะเบียนชื่ออะไร?",
    "question_toks": "['What', 'are', 'the', 'names', 'of', 'all', 'courses', 'that', 'have', 'some', 'students', 'enrolled', '?']",
    "sql": "{'from': {'table_units': [['table_unit', 1], ['table_unit', 8]], 'conds': [[False, 2, [0, [0, 10, False], None], [0, 50, False], None]]}, 'select': [True, [[0, [0, [0, 11, False], None]]]], 'where': [], 'groupBy': [], 'having': [], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "student_transcripts_tracking",
    "query": "SELECT  T1.course_name FROM Courses AS T1 JOIN Student_Enrolment_Courses AS T2 ON T1.course_id  =  T2.course_id GROUP BY T1.course_name ORDER BY count(*) DESC LIMIT 1",
    "query_toks": "['SELECT', 'T1.course_name', 'FROM', 'Courses', 'AS', 'T1', 'JOIN', 'Student_Enrolment_Courses', 'AS', 'T2', 'ON', 'T1.course_id', '=', 'T2.course_id', 'GROUP', 'BY', 'T1.course_name', 'ORDER', 'BY', 'count', '(', '*', ')', 'DESC', 'LIMIT', '1']",
    "query_toks_no_value": "['select', 't1', '.', 'course_name', 'from', 'courses', 'as', 't1', 'join', 'student_enrolment_courses', 'as', 't2', 'on', 't1', '.', 'course_id', '=', 't2', '.', 'course_id', 'group', 'by', 't1', '.', 'course_name', 'order', 'by', 'count', '(', '*', ')', 'desc', 'limit', 'value']",
    "question": "What's the name of the course with most number of enrollments?",
    "question_th": "สาขาวิชาที่มีผู้ลงทะเบียนเรียนมากที่สุดชื่ออะไร",
    "question_toks": "['What', \"'s\", 'the', 'name', 'of', 'the', 'course', 'with', 'most', 'number', 'of', 'enrollments', '?']",
    "sql": "{'from': {'table_units': [['table_unit', 1], ['table_unit', 8]], 'conds': [[False, 2, [0, [0, 10, False], None], [0, 50, False], None]]}, 'select': [False, [[0, [0, [0, 11, False], None]]]], 'where': [], 'groupBy': [[0, 11, False]], 'having': [], 'orderBy': ['desc', [[0, [3, 0, False], None]]], 'limit': 1, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "student_transcripts_tracking",
    "query": "SELECT  T1.course_name FROM Courses AS T1 JOIN Student_Enrolment_Courses AS T2 ON T1.course_id  =  T2.course_id GROUP BY T1.course_name ORDER BY count(*) DESC LIMIT 1",
    "query_toks": "['SELECT', 'T1.course_name', 'FROM', 'Courses', 'AS', 'T1', 'JOIN', 'Student_Enrolment_Courses', 'AS', 'T2', 'ON', 'T1.course_id', '=', 'T2.course_id', 'GROUP', 'BY', 'T1.course_name', 'ORDER', 'BY', 'count', '(', '*', ')', 'DESC', 'LIMIT', '1']",
    "query_toks_no_value": "['select', 't1', '.', 'course_name', 'from', 'courses', 'as', 't1', 'join', 'student_enrolment_courses', 'as', 't2', 'on', 't1', '.', 'course_id', '=', 't2', '.', 'course_id', 'group', 'by', 't1', '.', 'course_name', 'order', 'by', 'count', '(', '*', ')', 'desc', 'limit', 'value']",
    "question": "What is the name of the course with the most students enrolled?",
    "question_th": "ชื่อหลักสูตรที่มีนักเรียนลงทะเบียนมากที่สุดคืออะไร?",
    "question_toks": "['What', 'is', 'the', 'name', 'of', 'the', 'course', 'with', 'the', 'most', 'students', 'enrolled', '?']",
    "sql": "{'from': {'table_units': [['table_unit', 1], ['table_unit', 8]], 'conds': [[False, 2, [0, [0, 10, False], None], [0, 50, False], None]]}, 'select': [False, [[0, [0, [0, 11, False], None]]]], 'where': [], 'groupBy': [[0, 11, False]], 'having': [], 'orderBy': ['desc', [[0, [3, 0, False], None]]], 'limit': 1, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "student_transcripts_tracking",
    "query": "SELECT T1.last_name FROM Students AS T1 JOIN Addresses AS T2 ON T1.current_address_id  =  T2.address_id WHERE T2.state_province_county  =  'NorthCarolina' EXCEPT SELECT DISTINCT T3.last_name FROM Students AS T3 JOIN Student_Enrolment AS T4 ON T3.student_id  =  T4.student_id",
    "query_toks": "['SELECT', 'T1.last_name', 'FROM', 'Students', 'AS', 'T1', 'JOIN', 'Addresses', 'AS', 'T2', 'ON', 'T1.current_address_id', '=', 'T2.address_id', 'WHERE', 'T2.state_province_county', '=', \"'NorthCarolina\", \"'\", 'EXCEPT', 'SELECT', 'DISTINCT', 'T3.last_name', 'FROM', 'Students', 'AS', 'T3', 'JOIN', 'Student_Enrolment', 'AS', 'T4', 'ON', 'T3.student_id', '=', 'T4.student_id']",
    "query_toks_no_value": "['select', 't1', '.', 'last_name', 'from', 'students', 'as', 't1', 'join', 'addresses', 'as', 't2', 'on', 't1', '.', 'current_address_id', '=', 't2', '.', 'address_id', 'where', 't2', '.', 'state_province_county', '=', 'value', 'except', 'select', 'distinct', 't3', '.', 'last_name', 'from', 'students', 'as', 't3', 'join', 'student_enrolment', 'as', 't4', 'on', 't3', '.', 'student_id', '=', 't4', '.', 'student_id']",
    "question": "Find the last name of the students who currently live in the state of North Carolina but have not registered in any degree program.",
    "question_th": "ค้นหานามสกุลของนักศึกษาที่ปัจจุบันอาศัยอยู่ในรัฐนอร์ธแคโรไลนา แต่ไม่ได้ลงทะเบียนในหลักสูตรปริญญาใดๆ",
    "question_toks": "['Find', 'the', 'last', 'name', 'of', 'the', 'students', 'who', 'currently', 'live', 'in', 'the', 'state', 'of', 'North', 'Carolina', 'but', 'have', 'not', 'registered', 'in', 'any', 'degree', 'program', '.']",
    "sql": "{'from': {'table_units': [['table_unit', 6], ['table_unit', 0]], 'conds': [[False, 2, [0, [0, 33, False], None], [0, 1, False], None]]}, 'select': [False, [[0, [0, [0, 37, False], None]]]], 'where': [[False, 2, [0, [0, 7, False], None], '\"NorthCarolina\"', None]], 'groupBy': [], 'having': [], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': {'from': {'table_units': [['table_unit', 6], ['table_unit', 7]], 'conds': [[False, 2, [0, [0, 32, False], None], [0, 47, False], None]]}, 'select': [True, [[0, [0, [0, 37, False], None]]]], 'where': [], 'groupBy': [], 'having': [], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}}"
  },
  {
    "db_id": "student_transcripts_tracking",
    "query": "SELECT T1.last_name FROM Students AS T1 JOIN Addresses AS T2 ON T1.current_address_id  =  T2.address_id WHERE T2.state_province_county  =  'NorthCarolina' EXCEPT SELECT DISTINCT T3.last_name FROM Students AS T3 JOIN Student_Enrolment AS T4 ON T3.student_id  =  T4.student_id",
    "query_toks": "['SELECT', 'T1.last_name', 'FROM', 'Students', 'AS', 'T1', 'JOIN', 'Addresses', 'AS', 'T2', 'ON', 'T1.current_address_id', '=', 'T2.address_id', 'WHERE', 'T2.state_province_county', '=', \"'NorthCarolina\", \"'\", 'EXCEPT', 'SELECT', 'DISTINCT', 'T3.last_name', 'FROM', 'Students', 'AS', 'T3', 'JOIN', 'Student_Enrolment', 'AS', 'T4', 'ON', 'T3.student_id', '=', 'T4.student_id']",
    "query_toks_no_value": "['select', 't1', '.', 'last_name', 'from', 'students', 'as', 't1', 'join', 'addresses', 'as', 't2', 'on', 't1', '.', 'current_address_id', '=', 't2', '.', 'address_id', 'where', 't2', '.', 'state_province_county', '=', 'value', 'except', 'select', 'distinct', 't3', '.', 'last_name', 'from', 'students', 'as', 't3', 'join', 'student_enrolment', 'as', 't4', 'on', 't3', '.', 'student_id', '=', 't4', '.', 'student_id']",
    "question": "What are the last name of the students who live in North Carolina but have not registered in any degree programs?",
    "question_th": "นามสกุลของนักเรียนที่อาศัยอยู่ใน North Carolina แต่ไม่ได้ลงทะเบียนในหลักสูตรปริญญาใด ๆ คืออะไร?",
    "question_toks": "['What', 'are', 'the', 'last', 'name', 'of', 'the', 'students', 'who', 'live', 'in', 'North', 'Carolina', 'but', 'have', 'not', 'registered', 'in', 'any', 'degree', 'programs', '?']",
    "sql": "{'from': {'table_units': [['table_unit', 6], ['table_unit', 0]], 'conds': [[False, 2, [0, [0, 33, False], None], [0, 1, False], None]]}, 'select': [False, [[0, [0, [0, 37, False], None]]]], 'where': [[False, 2, [0, [0, 7, False], None], '\"NorthCarolina\"', None]], 'groupBy': [], 'having': [], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': {'from': {'table_units': [['table_unit', 6], ['table_unit', 7]], 'conds': [[False, 2, [0, [0, 32, False], None], [0, 47, False], None]]}, 'select': [True, [[0, [0, [0, 37, False], None]]]], 'where': [], 'groupBy': [], 'having': [], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}}"
  },
  {
    "db_id": "student_transcripts_tracking",
    "query": "SELECT T2.transcript_date ,  T1.transcript_id FROM Transcript_Contents AS T1 JOIN Transcripts AS T2 ON T1.transcript_id  =  T2.transcript_id GROUP BY T1.transcript_id HAVING count(*)  >=  2",
    "query_toks": "['SELECT', 'T2.transcript_date', ',', 'T1.transcript_id', 'FROM', 'Transcript_Contents', 'AS', 'T1', 'JOIN', 'Transcripts', 'AS', 'T2', 'ON', 'T1.transcript_id', '=', 'T2.transcript_id', 'GROUP', 'BY', 'T1.transcript_id', 'HAVING', 'count', '(', '*', ')', '>', '=', '2']",
    "query_toks_no_value": "['select', 't2', '.', 'transcript_date', ',', 't1', '.', 'transcript_id', 'from', 'transcript_contents', 'as', 't1', 'join', 'transcripts', 'as', 't2', 'on', 't1', '.', 'transcript_id', '=', 't2', '.', 'transcript_id', 'group', 'by', 't1', '.', 'transcript_id', 'having', 'count', '(', '*', ')', '>', '=', 'value']",
    "question": "Show the date and id of the transcript with at least 2 course results.",
    "question_th": "แสดงวันที่และรหัสของใบรับรองผลการเรียนพร้อมผลการเรียนอย่างน้อย 2 รายการ",
    "question_toks": "['Show', 'the', 'date', 'and', 'id', 'of', 'the', 'transcript', 'with', 'at', 'least', '2', 'course', 'results', '.']",
    "sql": "{'from': {'table_units': [['table_unit', 10], ['table_unit', 9]], 'conds': [[False, 2, [0, [0, 56, False], None], [0, 52, False], None]]}, 'select': [False, [[0, [0, [0, 53, False], None]], [0, [0, [0, 56, False], None]]]], 'where': [], 'groupBy': [[0, 56, False]], 'having': [[False, 5, [0, [3, 0, False], None], 2.0, None]], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "student_transcripts_tracking",
    "query": "SELECT T2.transcript_date ,  T1.transcript_id FROM Transcript_Contents AS T1 JOIN Transcripts AS T2 ON T1.transcript_id  =  T2.transcript_id GROUP BY T1.transcript_id HAVING count(*)  >=  2",
    "query_toks": "['SELECT', 'T2.transcript_date', ',', 'T1.transcript_id', 'FROM', 'Transcript_Contents', 'AS', 'T1', 'JOIN', 'Transcripts', 'AS', 'T2', 'ON', 'T1.transcript_id', '=', 'T2.transcript_id', 'GROUP', 'BY', 'T1.transcript_id', 'HAVING', 'count', '(', '*', ')', '>', '=', '2']",
    "query_toks_no_value": "['select', 't2', '.', 'transcript_date', ',', 't1', '.', 'transcript_id', 'from', 'transcript_contents', 'as', 't1', 'join', 'transcripts', 'as', 't2', 'on', 't1', '.', 'transcript_id', '=', 't2', '.', 'transcript_id', 'group', 'by', 't1', '.', 'transcript_id', 'having', 'count', '(', '*', ')', '>', '=', 'value']",
    "question": "What is the date and id of the transcript with at least 2 courses listed?",
    "question_th": "วันที่และรหัสของใบรับรองผลการเรียนที่มีอย่างน้อย 2 หลักสูตรระบุไว้คือเมื่อใด",
    "question_toks": "['What', 'is', 'the', 'date', 'and', 'id', 'of', 'the', 'transcript', 'with', 'at', 'least', '2', 'courses', 'listed', '?']",
    "sql": "{'from': {'table_units': [['table_unit', 10], ['table_unit', 9]], 'conds': [[False, 2, [0, [0, 56, False], None], [0, 52, False], None]]}, 'select': [False, [[0, [0, [0, 53, False], None]], [0, [0, [0, 56, False], None]]]], 'where': [], 'groupBy': [[0, 56, False]], 'having': [[False, 5, [0, [3, 0, False], None], 2.0, None]], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "student_transcripts_tracking",
    "query": "SELECT cell_mobile_number FROM Students WHERE first_name  =  'Timmothy' AND last_name  =  'Ward'",
    "query_toks": "['SELECT', 'cell_mobile_number', 'FROM', 'Students', 'WHERE', 'first_name', '=', \"'Timmothy\", \"'\", 'AND', 'last_name', '=', \"'Ward\", \"'\"]",
    "query_toks_no_value": "['select', 'cell_mobile_number', 'from', 'students', 'where', 'first_name', '=', 'value', 'and', 'last_name', '=', 'value']",
    "question": "What is the phone number of the man with the first name Timmothy and the last name Ward?",
    "question_th": "หมายเลขโทรศัพท์ของชายชื่อ ทิมโมธี และนามสกุล วอร์ด คืออะไร?",
    "question_toks": "['What', 'is', 'the', 'phone', 'number', 'of', 'the', 'man', 'with', 'the', 'first', 'name', 'Timmothy', 'and', 'the', 'last', 'name', 'Ward', '?']",
    "sql": "{'from': {'table_units': [['table_unit', 6]], 'conds': []}, 'select': [False, [[0, [0, [0, 38, False], None]]]], 'where': [[False, 2, [0, [0, 35, False], None], '\"Timmothy\"', None], 'and', [False, 2, [0, [0, 37, False], None], '\"Ward\"', None]], 'groupBy': [], 'having': [], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "student_transcripts_tracking",
    "query": "select cell_mobile_number from students where first_name  =  'timmothy' and last_name  =  'ward'",
    "query_toks": "['select', 'cell_mobile_number', 'from', 'students', 'where', 'first_name', '=', '\"timmothy\"', 'and', 'last_name', '=', '\"ward\"']",
    "query_toks_no_value": "['select', 'cell_mobile_number', 'from', 'students', 'where', 'first_name', '=', 'value', 'and', 'last_name', '=', 'value']",
    "question": "What is the mobile phone number of the student named Timmothy Ward ?",
    "question_th": "หมายเลขโทรศัพท์มือถือของนักเรียนชื่อ ทิมโมธี วอร์ด คืออะไร?",
    "question_toks": "['What', 'is', 'the', 'mobile', 'phone', 'number', 'of', 'the', 'student', 'named', 'Timmothy', 'Ward', '?']",
    "sql": "{'from': {'table_units': [['table_unit', 6]], 'conds': []}, 'select': [False, [[0, [0, [0, 38, False], None]]]], 'where': [[False, 2, [0, [0, 35, False], None], '\"timmothy\"', None], 'and', [False, 2, [0, [0, 37, False], None], '\"ward\"', None]], 'groupBy': [], 'having': [], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "student_transcripts_tracking",
    "query": "SELECT first_name ,  middle_name ,  last_name FROM Students ORDER BY date_first_registered ASC LIMIT 1",
    "query_toks": "['SELECT', 'first_name', ',', 'middle_name', ',', 'last_name', 'FROM', 'Students', 'ORDER', 'BY', 'date_first_registered', 'ASC', 'LIMIT', '1']",
    "query_toks_no_value": "['select', 'first_name', ',', 'middle_name', ',', 'last_name', 'from', 'students', 'order', 'by', 'date_first_registered', 'asc', 'limit', 'value']",
    "question": "Who is the first student to register? List the first name, middle name and last name.",
    "question_th": "นักเรียนคนแรกที่ลงทะเบียนคือใคร? ระบุชื่อ ชื่อกลาง และนามสกุล.",
    "question_toks": "['Who', 'is', 'the', 'first', 'student', 'to', 'register', '?', 'List', 'the', 'first', 'name', ',', 'middle', 'name', 'and', 'last', 'name', '.']",
    "sql": "{'from': {'table_units': [['table_unit', 6]], 'conds': []}, 'select': [False, [[0, [0, [0, 35, False], None]], [0, [0, [0, 36, False], None]], [0, [0, [0, 37, False], None]]]], 'where': [], 'groupBy': [], 'having': [], 'orderBy': ['asc', [[0, [0, 41, False], None]]], 'limit': 1, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "student_transcripts_tracking",
    "query": "SELECT first_name ,  middle_name ,  last_name FROM Students ORDER BY date_first_registered ASC LIMIT 1",
    "query_toks": "['SELECT', 'first_name', ',', 'middle_name', ',', 'last_name', 'FROM', 'Students', 'ORDER', 'BY', 'date_first_registered', 'ASC', 'LIMIT', '1']",
    "query_toks_no_value": "['select', 'first_name', ',', 'middle_name', ',', 'last_name', 'from', 'students', 'order', 'by', 'date_first_registered', 'asc', 'limit', 'value']",
    "question": "What is the first, middle, and last name of the first student to register?",
    "question_th": "ชื่อ ชื่อกลาง และนามสกุลของนักเรียนคนแรกที่ลงทะเบียนคืออะไร?",
    "question_toks": "['What', 'is', 'the', 'first', ',', 'middle', ',', 'and', 'last', 'name', 'of', 'the', 'first', 'student', 'to', 'register', '?']",
    "sql": "{'from': {'table_units': [['table_unit', 6]], 'conds': []}, 'select': [False, [[0, [0, [0, 35, False], None]], [0, [0, [0, 36, False], None]], [0, [0, [0, 37, False], None]]]], 'where': [], 'groupBy': [], 'having': [], 'orderBy': ['asc', [[0, [0, 41, False], None]]], 'limit': 1, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "student_transcripts_tracking",
    "query": "SELECT first_name ,  middle_name ,  last_name FROM Students ORDER BY date_left ASC LIMIT 1",
    "query_toks": "['SELECT', 'first_name', ',', 'middle_name', ',', 'last_name', 'FROM', 'Students', 'ORDER', 'BY', 'date_left', 'ASC', 'LIMIT', '1']",
    "query_toks_no_value": "['select', 'first_name', ',', 'middle_name', ',', 'last_name', 'from', 'students', 'order', 'by', 'date_left', 'asc', 'limit', 'value']",
    "question": "Who is the earliest graduate of the school? List the first name, middle name and last name.",
    "question_th": "ใครคือผู้ที่สำเร็จการศึกษาเร็วที่สุดในโรงเรียน? ระบุชื่อ ชื่อกลาง และนามสกุล.",
    "question_toks": "['Who', 'is', 'the', 'earliest', 'graduate', 'of', 'the', 'school', '?', 'List', 'the', 'first', 'name', ',', 'middle', 'name', 'and', 'last', 'name', '.']",
    "sql": "{'from': {'table_units': [['table_unit', 6]], 'conds': []}, 'select': [False, [[0, [0, [0, 35, False], None]], [0, [0, [0, 36, False], None]], [0, [0, [0, 37, False], None]]]], 'where': [], 'groupBy': [], 'having': [], 'orderBy': ['asc', [[0, [0, 42, False], None]]], 'limit': 1, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "student_transcripts_tracking",
    "query": "SELECT first_name ,  middle_name ,  last_name FROM Students ORDER BY date_left ASC LIMIT 1",
    "query_toks": "['SELECT', 'first_name', ',', 'middle_name', ',', 'last_name', 'FROM', 'Students', 'ORDER', 'BY', 'date_left', 'ASC', 'LIMIT', '1']",
    "query_toks_no_value": "['select', 'first_name', ',', 'middle_name', ',', 'last_name', 'from', 'students', 'order', 'by', 'date_left', 'asc', 'limit', 'value']",
    "question": "What is the first, middle, and last name of the earliest school graduate?",
    "question_th": "ชื่อ ชื่อกลาง และนามสกุลของบัณฑิตวิทยาลัยคนแรกสุดคืออะไร?",
    "question_toks": "['What', 'is', 'the', 'first', ',', 'middle', ',', 'and', 'last', 'name', 'of', 'the', 'earliest', 'school', 'graduate', '?']",
    "sql": "{'from': {'table_units': [['table_unit', 6]], 'conds': []}, 'select': [False, [[0, [0, [0, 35, False], None]], [0, [0, [0, 36, False], None]], [0, [0, [0, 37, False], None]]]], 'where': [], 'groupBy': [], 'having': [], 'orderBy': ['asc', [[0, [0, 42, False], None]]], 'limit': 1, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "student_transcripts_tracking",
    "query": "SELECT first_name FROM Students WHERE current_address_id != permanent_address_id",
    "query_toks": "['SELECT', 'first_name', 'FROM', 'Students', 'WHERE', 'current_address_id', '!', '=', 'permanent_address_id']",
    "query_toks_no_value": "['select', 'first_name', 'from', 'students', 'where', 'current_address_id', '!', '=', 'permanent_address_id']",
    "question": "Whose permanent address is different from his or her current address? List his or her first name.",
    "question_th": "ที่อยู่ถาวรของใครแตกต่างจากที่อยู่ปัจจุบันของเขาหรือเธอ? ระบุชื่อของเขาหรือเธอ",
    "question_toks": "['Whose', 'permanent', 'address', 'is', 'different', 'from', 'his', 'or', 'her', 'current', 'address', '?', 'List', 'his', 'or', 'her', 'first', 'name', '.']",
    "sql": "{'from': {'table_units': [['table_unit', 6]], 'conds': []}, 'select': [False, [[0, [0, [0, 35, False], None]]]], 'where': [[False, 7, [0, [0, 33, False], None], [0, 34, False], None]], 'groupBy': [], 'having': [], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "student_transcripts_tracking",
    "query": "SELECT first_name FROM Students WHERE current_address_id != permanent_address_id",
    "query_toks": "['SELECT', 'first_name', 'FROM', 'Students', 'WHERE', 'current_address_id', '!', '=', 'permanent_address_id']",
    "query_toks_no_value": "['select', 'first_name', 'from', 'students', 'where', 'current_address_id', '!', '=', 'permanent_address_id']",
    "question": "What is the first name of the student whose permanent address is different from his or her current one?",
    "question_th": "ชื่อของนักเรียนที่มีที่อยู่ถาวรแตกต่างจากที่อยู่ปัจจุบันคืออะไร?",
    "question_toks": "['What', 'is', 'the', 'first', 'name', 'of', 'the', 'student', 'whose', 'permanent', 'address', 'is', 'different', 'from', 'his', 'or', 'her', 'current', 'one', '?']",
    "sql": "{'from': {'table_units': [['table_unit', 6]], 'conds': []}, 'select': [False, [[0, [0, [0, 35, False], None]]]], 'where': [[False, 7, [0, [0, 33, False], None], [0, 34, False], None]], 'groupBy': [], 'having': [], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "student_transcripts_tracking",
    "query": "SELECT T1.address_id ,  T1.line_1 ,  T1.line_2 FROM Addresses AS T1 JOIN Students AS T2 ON T1.address_id  =  T2.current_address_id GROUP BY T1.address_id ORDER BY count(*) DESC LIMIT 1",
    "query_toks": "['SELECT', 'T1.address_id', ',', 'T1.line_1', ',', 'T1.line_2', 'FROM', 'Addresses', 'AS', 'T1', 'JOIN', 'Students', 'AS', 'T2', 'ON', 'T1.address_id', '=', 'T2.current_address_id', 'GROUP', 'BY', 'T1.address_id', 'ORDER', 'BY', 'count', '(', '*', ')', 'DESC', 'LIMIT', '1']",
    "query_toks_no_value": "['select', 't1', '.', 'address_id', ',', 't1', '.', 'line_1', ',', 't1', '.', 'line_2', 'from', 'addresses', 'as', 't1', 'join', 'students', 'as', 't2', 'on', 't1', '.', 'address_id', '=', 't2', '.', 'current_address_id', 'group', 'by', 't1', '.', 'address_id', 'order', 'by', 'count', '(', '*', ')', 'desc', 'limit', 'value']",
    "question": "Which address holds the most number of students currently? List the address id and all lines.",
    "question_th": "ที่อยู่ใดมีนักเรียนจำนวนมากที่สุดในปัจจุบัน ระบุรหัสที่อยู่และบรรทัดทั้งหมด",
    "question_toks": "['Which', 'address', 'holds', 'the', 'most', 'number', 'of', 'students', 'currently', '?', 'List', 'the', 'address', 'id', 'and', 'all', 'lines', '.']",
    "sql": "{'from': {'table_units': [['table_unit', 0], ['table_unit', 6]], 'conds': [[False, 2, [0, [0, 1, False], None], [0, 33, False], None]]}, 'select': [False, [[0, [0, [0, 1, False], None]], [0, [0, [0, 2, False], None]], [0, [0, [0, 3, False], None]]]], 'where': [], 'groupBy': [[0, 1, False]], 'having': [], 'orderBy': ['desc', [[0, [3, 0, False], None]]], 'limit': 1, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "student_transcripts_tracking",
    "query": "SELECT T1.address_id ,  T1.line_1 ,  T1.line_2 FROM Addresses AS T1 JOIN Students AS T2 ON T1.address_id  =  T2.current_address_id GROUP BY T1.address_id ORDER BY count(*) DESC LIMIT 1",
    "query_toks": "['SELECT', 'T1.address_id', ',', 'T1.line_1', ',', 'T1.line_2', 'FROM', 'Addresses', 'AS', 'T1', 'JOIN', 'Students', 'AS', 'T2', 'ON', 'T1.address_id', '=', 'T2.current_address_id', 'GROUP', 'BY', 'T1.address_id', 'ORDER', 'BY', 'count', '(', '*', ')', 'DESC', 'LIMIT', '1']",
    "query_toks_no_value": "['select', 't1', '.', 'address_id', ',', 't1', '.', 'line_1', ',', 't1', '.', 'line_2', 'from', 'addresses', 'as', 't1', 'join', 'students', 'as', 't2', 'on', 't1', '.', 'address_id', '=', 't2', '.', 'current_address_id', 'group', 'by', 't1', '.', 'address_id', 'order', 'by', 'count', '(', '*', ')', 'desc', 'limit', 'value']",
    "question": "What is the id, line 1, and line 2 of the address with the most students?",
    "question_th": "รหัส บรรทัดที่ 1 และบรรทัดที่ 2 ของที่อยู่ที่มีนักเรียนมากที่สุดคืออะไร",
    "question_toks": "['What', 'is', 'the', 'id', ',', 'line', '1', ',', 'and', 'line', '2', 'of', 'the', 'address', 'with', 'the', 'most', 'students', '?']",
    "sql": "{'from': {'table_units': [['table_unit', 0], ['table_unit', 6]], 'conds': [[False, 2, [0, [0, 1, False], None], [0, 33, False], None]]}, 'select': [False, [[0, [0, [0, 1, False], None]], [0, [0, [0, 2, False], None]], [0, [0, [0, 3, False], None]]]], 'where': [], 'groupBy': [[0, 1, False]], 'having': [], 'orderBy': ['desc', [[0, [3, 0, False], None]]], 'limit': 1, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "student_transcripts_tracking",
    "query": "SELECT avg(transcript_date) FROM Transcripts",
    "query_toks": "['SELECT', 'avg', '(', 'transcript_date', ')', 'FROM', 'Transcripts']",
    "query_toks_no_value": "['select', 'avg', '(', 'transcript_date', ')', 'from', 'transcripts']",
    "question": "On average, when were the transcripts printed?",
    "question_th": "โดยเฉลี่ยแล้วใบรับรองผลการเรียนจะถูกพิมพ์เมื่อใด",
    "question_toks": "['On', 'average', ',', 'when', 'were', 'the', 'transcripts', 'printed', '?']",
    "sql": "{'from': {'table_units': [['table_unit', 9]], 'conds': []}, 'select': [False, [[5, [0, [0, 53, False], None]]]], 'where': [], 'groupBy': [], 'having': [], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "student_transcripts_tracking",
    "query": "SELECT avg(transcript_date) FROM Transcripts",
    "query_toks": "['SELECT', 'avg', '(', 'transcript_date', ')', 'FROM', 'Transcripts']",
    "query_toks_no_value": "['select', 'avg', '(', 'transcript_date', ')', 'from', 'transcripts']",
    "question": "What is the average transcript date?",
    "question_th": "วันที่ถอดเสียงโดยเฉลี่ยคือเมื่อใด",
    "question_toks": "['What', 'is', 'the', 'average', 'transcript', 'date', '?']",
    "sql": "{'from': {'table_units': [['table_unit', 9]], 'conds': []}, 'select': [False, [[5, [0, [0, 53, False], None]]]], 'where': [], 'groupBy': [], 'having': [], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "student_transcripts_tracking",
    "query": "SELECT transcript_date ,  other_details FROM Transcripts ORDER BY transcript_date ASC LIMIT 1",
    "query_toks": "['SELECT', 'transcript_date', ',', 'other_details', 'FROM', 'Transcripts', 'ORDER', 'BY', 'transcript_date', 'ASC', 'LIMIT', '1']",
    "query_toks_no_value": "['select', 'transcript_date', ',', 'other_details', 'from', 'transcripts', 'order', 'by', 'transcript_date', 'asc', 'limit', 'value']",
    "question": "When is the first transcript released? List the date and details.",
    "question_th": "Transcript ฉบับแรกจะออกเมื่อใด ระบุวันที่และรายละเอียด",
    "question_toks": "['When', 'is', 'the', 'first', 'transcript', 'released', '?', 'List', 'the', 'date', 'and', 'details', '.']",
    "sql": "{'from': {'table_units': [['table_unit', 9]], 'conds': []}, 'select': [False, [[0, [0, [0, 53, False], None]], [0, [0, [0, 54, False], None]]]], 'where': [], 'groupBy': [], 'having': [], 'orderBy': ['asc', [[0, [0, 53, False], None]]], 'limit': 1, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "student_transcripts_tracking",
    "query": "SELECT transcript_date ,  other_details FROM Transcripts ORDER BY transcript_date ASC LIMIT 1",
    "query_toks": "['SELECT', 'transcript_date', ',', 'other_details', 'FROM', 'Transcripts', 'ORDER', 'BY', 'transcript_date', 'ASC', 'LIMIT', '1']",
    "query_toks_no_value": "['select', 'transcript_date', ',', 'other_details', 'from', 'transcripts', 'order', 'by', 'transcript_date', 'asc', 'limit', 'value']",
    "question": "What is the earliest date of a transcript release, and what details can you tell me?",
    "question_th": "วันที่เผยแพร่เร็วที่สุดคือเมื่อใด และคุณสามารถบอกรายละเอียดอะไรได้บ้าง",
    "question_toks": "['What', 'is', 'the', 'earliest', 'date', 'of', 'a', 'transcript', 'release', ',', 'and', 'what', 'details', 'can', 'you', 'tell', 'me', '?']",
    "sql": "{'from': {'table_units': [['table_unit', 9]], 'conds': []}, 'select': [False, [[0, [0, [0, 53, False], None]], [0, [0, [0, 54, False], None]]]], 'where': [], 'groupBy': [], 'having': [], 'orderBy': ['asc', [[0, [0, 53, False], None]]], 'limit': 1, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "student_transcripts_tracking",
    "query": "SELECT count(*) FROM Transcripts",
    "query_toks": "['SELECT', 'count', '(', '*', ')', 'FROM', 'Transcripts']",
    "query_toks_no_value": "['select', 'count', '(', '*', ')', 'from', 'transcripts']",
    "question": "How many transcripts are released?",
    "question_th": "มีการออกใบรับรองผลการเรียนกี่ฉบับ?",
    "question_toks": "['How', 'many', 'transcripts', 'are', 'released', '?']",
    "sql": "{'from': {'table_units': [['table_unit', 9]], 'conds': []}, 'select': [False, [[3, [0, [0, 0, False], None]]]], 'where': [], 'groupBy': [], 'having': [], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "student_transcripts_tracking",
    "query": "SELECT count(*) FROM Transcripts",
    "query_toks": "['SELECT', 'count', '(', '*', ')', 'FROM', 'Transcripts']",
    "query_toks_no_value": "['select', 'count', '(', '*', ')', 'from', 'transcripts']",
    "question": "How many transcripts are listed?",
    "question_th": "มีหลักฐานการถอดเสียงกี่รายการ?",
    "question_toks": "['How', 'many', 'transcripts', 'are', 'listed', '?']",
    "sql": "{'from': {'table_units': [['table_unit', 9]], 'conds': []}, 'select': [False, [[3, [0, [0, 0, False], None]]]], 'where': [], 'groupBy': [], 'having': [], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "student_transcripts_tracking",
    "query": "SELECT transcript_date FROM Transcripts ORDER BY transcript_date DESC LIMIT 1",
    "query_toks": "['SELECT', 'transcript_date', 'FROM', 'Transcripts', 'ORDER', 'BY', 'transcript_date', 'DESC', 'LIMIT', '1']",
    "query_toks_no_value": "['select', 'transcript_date', 'from', 'transcripts', 'order', 'by', 'transcript_date', 'desc', 'limit', 'value']",
    "question": "What is the last transcript release date?",
    "question_th": "วันที่เผยแพร่การถอดเสียงครั้งสุดท้ายคือเมื่อใด",
    "question_toks": "['What', 'is', 'the', 'last', 'transcript', 'release', 'date', '?']",
    "sql": "{'from': {'table_units': [['table_unit', 9]], 'conds': []}, 'select': [False, [[0, [0, [0, 53, False], None]]]], 'where': [], 'groupBy': [], 'having': [], 'orderBy': ['desc', [[0, [0, 53, False], None]]], 'limit': 1, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "student_transcripts_tracking",
    "query": "SELECT transcript_date FROM Transcripts ORDER BY transcript_date DESC LIMIT 1",
    "query_toks": "['SELECT', 'transcript_date', 'FROM', 'Transcripts', 'ORDER', 'BY', 'transcript_date', 'DESC', 'LIMIT', '1']",
    "query_toks_no_value": "['select', 'transcript_date', 'from', 'transcripts', 'order', 'by', 'transcript_date', 'desc', 'limit', 'value']",
    "question": "When was the last transcript released?",
    "question_th": "บทถอดเสียงล่าสุดถูกปล่อยออกมาเมื่อใด?",
    "question_toks": "['When', 'was', 'the', 'last', 'transcript', 'released', '?']",
    "sql": "{'from': {'table_units': [['table_unit', 9]], 'conds': []}, 'select': [False, [[0, [0, [0, 53, False], None]]]], 'where': [], 'groupBy': [], 'having': [], 'orderBy': ['desc', [[0, [0, 53, False], None]]], 'limit': 1, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "student_transcripts_tracking",
    "query": "SELECT count(*) ,  student_course_id FROM Transcript_Contents GROUP BY student_course_id ORDER BY count(*) DESC LIMIT 1",
    "query_toks": "['SELECT', 'count', '(', '*', ')', ',', 'student_course_id', 'FROM', 'Transcript_Contents', 'GROUP', 'BY', 'student_course_id', 'ORDER', 'BY', 'count', '(', '*', ')', 'DESC', 'LIMIT', '1']",
    "query_toks_no_value": "['select', 'count', '(', '*', ')', ',', 'student_course_id', 'from', 'transcript_contents', 'group', 'by', 'student_course_id', 'order', 'by', 'count', '(', '*', ')', 'desc', 'limit', 'value']",
    "question": "How many times at most can a course enrollment result show in different transcripts? Also show the course enrollment id.",
    "question_th": "ผลการลงทะเบียนหลักสูตรสามารถแสดงในใบรับรองผลการเรียนที่แตกต่างกันได้มากสุดกี่ครั้ง แสดงรหัสการลงทะเบียนหลักสูตรด้วย",
    "question_toks": "['How', 'many', 'times', 'at', 'most', 'can', 'a', 'course', 'enrollment', 'result', 'show', 'in', 'different', 'transcripts', '?', 'Also', 'show', 'the', 'course', 'enrollment', 'id', '.']",
    "sql": "{'from': {'table_units': [['table_unit', 10]], 'conds': []}, 'select': [False, [[3, [0, [0, 0, False], None]], [0, [0, [0, 55, False], None]]]], 'where': [], 'groupBy': [[0, 55, False]], 'having': [], 'orderBy': ['desc', [[0, [3, 0, False], None]]], 'limit': 1, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "student_transcripts_tracking",
    "query": "SELECT count(*) ,  student_course_id FROM Transcript_Contents GROUP BY student_course_id ORDER BY count(*) DESC LIMIT 1",
    "query_toks": "['SELECT', 'count', '(', '*', ')', ',', 'student_course_id', 'FROM', 'Transcript_Contents', 'GROUP', 'BY', 'student_course_id', 'ORDER', 'BY', 'count', '(', '*', ')', 'DESC', 'LIMIT', '1']",
    "query_toks_no_value": "['select', 'count', '(', '*', ')', ',', 'student_course_id', 'from', 'transcript_contents', 'group', 'by', 'student_course_id', 'order', 'by', 'count', '(', '*', ')', 'desc', 'limit', 'value']",
    "question": "What is the maximum number of times that a course shows up in different transcripts and what is that course's enrollment id?",
    "question_th": "จำนวนครั้งสูงสุดที่หลักสูตรปรากฏในใบรับรองผลการเรียนที่แตกต่างกันคือเท่าใด และรหัสการลงทะเบียนของหลักสูตรนั้นคือเท่าใด",
    "question_toks": "['What', 'is', 'the', 'maximum', 'number', 'of', 'times', 'that', 'a', 'course', 'shows', 'up', 'in', 'different', 'transcripts', 'and', 'what', 'is', 'that', 'course', \"'s\", 'enrollment', 'id', '?']",
    "sql": "{'from': {'table_units': [['table_unit', 10]], 'conds': []}, 'select': [False, [[3, [0, [0, 0, False], None]], [0, [0, [0, 55, False], None]]]], 'where': [], 'groupBy': [[0, 55, False]], 'having': [], 'orderBy': ['desc', [[0, [3, 0, False], None]]], 'limit': 1, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "student_transcripts_tracking",
    "query": "SELECT T2.transcript_date ,  T1.transcript_id FROM Transcript_Contents AS T1 JOIN Transcripts AS T2 ON T1.transcript_id  =  T2.transcript_id GROUP BY T1.transcript_id ORDER BY count(*) ASC LIMIT 1",
    "query_toks": "['SELECT', 'T2.transcript_date', ',', 'T1.transcript_id', 'FROM', 'Transcript_Contents', 'AS', 'T1', 'JOIN', 'Transcripts', 'AS', 'T2', 'ON', 'T1.transcript_id', '=', 'T2.transcript_id', 'GROUP', 'BY', 'T1.transcript_id', 'ORDER', 'BY', 'count', '(', '*', ')', 'ASC', 'LIMIT', '1']",
    "query_toks_no_value": "['select', 't2', '.', 'transcript_date', ',', 't1', '.', 'transcript_id', 'from', 'transcript_contents', 'as', 't1', 'join', 'transcripts', 'as', 't2', 'on', 't1', '.', 'transcript_id', '=', 't2', '.', 'transcript_id', 'group', 'by', 't1', '.', 'transcript_id', 'order', 'by', 'count', '(', '*', ')', 'asc', 'limit', 'value']",
    "question": "Show the date of the transcript which shows the least number of results, also list the id.",
    "question_th": "แสดงวันที่ของทรานสคริปต์ซึ่งแสดงผลจำนวนน้อยที่สุดพร้อมระบุรหัสด้วย",
    "question_toks": "['Show', 'the', 'date', 'of', 'the', 'transcript', 'which', 'shows', 'the', 'least', 'number', 'of', 'results', ',', 'also', 'list', 'the', 'id', '.']",
    "sql": "{'from': {'table_units': [['table_unit', 10], ['table_unit', 9]], 'conds': [[False, 2, [0, [0, 56, False], None], [0, 52, False], None]]}, 'select': [False, [[0, [0, [0, 53, False], None]], [0, [0, [0, 56, False], None]]]], 'where': [], 'groupBy': [[0, 56, False]], 'having': [], 'orderBy': ['asc', [[0, [3, 0, False], None]]], 'limit': 1, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "student_transcripts_tracking",
    "query": "SELECT T2.transcript_date ,  T1.transcript_id FROM Transcript_Contents AS T1 JOIN Transcripts AS T2 ON T1.transcript_id  =  T2.transcript_id GROUP BY T1.transcript_id ORDER BY count(*) ASC LIMIT 1",
    "query_toks": "['SELECT', 'T2.transcript_date', ',', 'T1.transcript_id', 'FROM', 'Transcript_Contents', 'AS', 'T1', 'JOIN', 'Transcripts', 'AS', 'T2', 'ON', 'T1.transcript_id', '=', 'T2.transcript_id', 'GROUP', 'BY', 'T1.transcript_id', 'ORDER', 'BY', 'count', '(', '*', ')', 'ASC', 'LIMIT', '1']",
    "query_toks_no_value": "['select', 't2', '.', 'transcript_date', ',', 't1', '.', 'transcript_id', 'from', 'transcript_contents', 'as', 't1', 'join', 'transcripts', 'as', 't2', 'on', 't1', '.', 'transcript_id', '=', 't2', '.', 'transcript_id', 'group', 'by', 't1', '.', 'transcript_id', 'order', 'by', 'count', '(', '*', ')', 'asc', 'limit', 'value']",
    "question": "What is the date and id of the transcript with the least number of results?",
    "question_th": "วันที่และรหัสของใบรับรองผลการเรียนที่มีจำนวนผลลัพธ์น้อยที่สุดคือเมื่อใด",
    "question_toks": "['What', 'is', 'the', 'date', 'and', 'id', 'of', 'the', 'transcript', 'with', 'the', 'least', 'number', 'of', 'results', '?']",
    "sql": "{'from': {'table_units': [['table_unit', 10], ['table_unit', 9]], 'conds': [[False, 2, [0, [0, 56, False], None], [0, 52, False], None]]}, 'select': [False, [[0, [0, [0, 53, False], None]], [0, [0, [0, 56, False], None]]]], 'where': [], 'groupBy': [[0, 56, False]], 'having': [], 'orderBy': ['asc', [[0, [3, 0, False], None]]], 'limit': 1, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "student_transcripts_tracking",
    "query": "SELECT DISTINCT T2.semester_id FROM Degree_Programs AS T1 JOIN Student_Enrolment AS T2 ON T1.degree_program_id  =  T2.degree_program_id WHERE degree_summary_name  =  'Master' INTERSECT SELECT DISTINCT T2.semester_id FROM Degree_Programs AS T1 JOIN Student_Enrolment AS T2 ON T1.degree_program_id  =  T2.degree_program_id WHERE degree_summary_name  =  'Bachelor'",
    "query_toks": "['SELECT', 'DISTINCT', 'T2.semester_id', 'FROM', 'Degree_Programs', 'AS', 'T1', 'JOIN', 'Student_Enrolment', 'AS', 'T2', 'ON', 'T1.degree_program_id', '=', 'T2.degree_program_id', 'WHERE', 'degree_summary_name', '=', \"'Master\", \"'\", 'INTERSECT', 'SELECT', 'DISTINCT', 'T2.semester_id', 'FROM', 'Degree_Programs', 'AS', 'T1', 'JOIN', 'Student_Enrolment', 'AS', 'T2', 'ON', 'T1.degree_program_id', '=', 'T2.degree_program_id', 'WHERE', 'degree_summary_name', '=', \"'Bachelor\", \"'\"]",
    "query_toks_no_value": "['select', 'distinct', 't2', '.', 'semester_id', 'from', 'degree_programs', 'as', 't1', 'join', 'student_enrolment', 'as', 't2', 'on', 't1', '.', 'degree_program_id', '=', 't2', '.', 'degree_program_id', 'where', 'degree_summary_name', '=', 'value', 'intersect', 'select', 'distinct', 't2', '.', 'semester_id', 'from', 'degree_programs', 'as', 't1', 'join', 'student_enrolment', 'as', 't2', 'on', 't1', '.', 'degree_program_id', '=', 't2', '.', 'degree_program_id', 'where', 'degree_summary_name', '=', 'value']",
    "question": "Find the semester when both Master students and Bachelor students got enrolled in.",
    "question_th": "ค้นหาภาคการศึกษาที่นักศึกษาทั้งระดับปริญญาโทและปริญญาตรีลงทะเบียนเรียน",
    "question_toks": "['Find', 'the', 'semester', 'when', 'both', 'Master', 'students', 'and', 'Bachelor', 'students', 'got', 'enrolled', 'in', '.']",
    "sql": "{'from': {'table_units': [['table_unit', 3], ['table_unit', 7]], 'conds': [[False, 2, [0, [0, 18, False], None], [0, 45, False], None]]}, 'select': [True, [[0, [0, [0, 46, False], None]]]], 'where': [[False, 2, [0, [0, 20, False], None], '\"Master\"', None]], 'groupBy': [], 'having': [], 'orderBy': [], 'limit': None, 'intersect': {'from': {'table_units': [['table_unit', 3], ['table_unit', 7]], 'conds': [[False, 2, [0, [0, 18, False], None], [0, 45, False], None]]}, 'select': [True, [[0, [0, [0, 46, False], None]]]], 'where': [[False, 2, [0, [0, 20, False], None], '\"Bachelor\"', None]], 'groupBy': [], 'having': [], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}, 'union': None, 'except': None}"
  },
  {
    "db_id": "student_transcripts_tracking",
    "query": "SELECT DISTINCT T2.semester_id FROM Degree_Programs AS T1 JOIN Student_Enrolment AS T2 ON T1.degree_program_id  =  T2.degree_program_id WHERE degree_summary_name  =  'Master' INTERSECT SELECT DISTINCT T2.semester_id FROM Degree_Programs AS T1 JOIN Student_Enrolment AS T2 ON T1.degree_program_id  =  T2.degree_program_id WHERE degree_summary_name  =  'Bachelor'",
    "query_toks": "['SELECT', 'DISTINCT', 'T2.semester_id', 'FROM', 'Degree_Programs', 'AS', 'T1', 'JOIN', 'Student_Enrolment', 'AS', 'T2', 'ON', 'T1.degree_program_id', '=', 'T2.degree_program_id', 'WHERE', 'degree_summary_name', '=', \"'Master\", \"'\", 'INTERSECT', 'SELECT', 'DISTINCT', 'T2.semester_id', 'FROM', 'Degree_Programs', 'AS', 'T1', 'JOIN', 'Student_Enrolment', 'AS', 'T2', 'ON', 'T1.degree_program_id', '=', 'T2.degree_program_id', 'WHERE', 'degree_summary_name', '=', \"'Bachelor\", \"'\"]",
    "query_toks_no_value": "['select', 'distinct', 't2', '.', 'semester_id', 'from', 'degree_programs', 'as', 't1', 'join', 'student_enrolment', 'as', 't2', 'on', 't1', '.', 'degree_program_id', '=', 't2', '.', 'degree_program_id', 'where', 'degree_summary_name', '=', 'value', 'intersect', 'select', 'distinct', 't2', '.', 'semester_id', 'from', 'degree_programs', 'as', 't1', 'join', 'student_enrolment', 'as', 't2', 'on', 't1', '.', 'degree_program_id', '=', 't2', '.', 'degree_program_id', 'where', 'degree_summary_name', '=', 'value']",
    "question": "What is the id of the semester that had both Masters and Bachelors students enrolled?",
    "question_th": "รหัสของภาคการศึกษาที่มีนักศึกษาทั้งระดับปริญญาโทและปริญญาตรีลงทะเบียนคืออะไร?",
    "question_toks": "['What', 'is', 'the', 'id', 'of', 'the', 'semester', 'that', 'had', 'both', 'Masters', 'and', 'Bachelors', 'students', 'enrolled', '?']",
    "sql": "{'from': {'table_units': [['table_unit', 3], ['table_unit', 7]], 'conds': [[False, 2, [0, [0, 18, False], None], [0, 45, False], None]]}, 'select': [True, [[0, [0, [0, 46, False], None]]]], 'where': [[False, 2, [0, [0, 20, False], None], '\"Master\"', None]], 'groupBy': [], 'having': [], 'orderBy': [], 'limit': None, 'intersect': {'from': {'table_units': [['table_unit', 3], ['table_unit', 7]], 'conds': [[False, 2, [0, [0, 18, False], None], [0, 45, False], None]]}, 'select': [True, [[0, [0, [0, 46, False], None]]]], 'where': [[False, 2, [0, [0, 20, False], None], '\"Bachelor\"', None]], 'groupBy': [], 'having': [], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}, 'union': None, 'except': None}"
  },
  {
    "db_id": "student_transcripts_tracking",
    "query": "SELECT count(DISTINCT current_address_id) FROM Students",
    "query_toks": "['SELECT', 'count', '(', 'DISTINCT', 'current_address_id', ')', 'FROM', 'Students']",
    "query_toks_no_value": "['select', 'count', '(', 'distinct', 'current_address_id', ')', 'from', 'students']",
    "question": "How many different addresses do the students currently live?",
    "question_th": "ปัจจุบันมีที่อยู่ที่แตกต่างกันกี่แห่งที่นักเรียนอาศัยอยู่?",
    "question_toks": "['How', 'many', 'different', 'addresses', 'do', 'the', 'students', 'currently', 'live', '?']",
    "sql": "{'from': {'table_units': [['table_unit', 6]], 'conds': []}, 'select': [False, [[3, [0, [0, 33, True], None]]]], 'where': [], 'groupBy': [], 'having': [], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "student_transcripts_tracking",
    "query": "SELECT count(DISTINCT current_address_id) FROM Students",
    "query_toks": "['SELECT', 'count', '(', 'DISTINCT', 'current_address_id', ')', 'FROM', 'Students']",
    "query_toks_no_value": "['select', 'count', '(', 'distinct', 'current_address_id', ')', 'from', 'students']",
    "question": "What are the different addresses that have students living there?",
    "question_th": "ที่อยู่ต่างๆ ที่มีนักเรียนอาศัยอยู่ที่นั่นมีอะไรบ้าง?",
    "question_toks": "['What', 'are', 'the', 'different', 'addresses', 'that', 'have', 'students', 'living', 'there', '?']",
    "sql": "{'from': {'table_units': [['table_unit', 6]], 'conds': []}, 'select': [False, [[3, [0, [0, 33, True], None]]]], 'where': [], 'groupBy': [], 'having': [], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "student_transcripts_tracking",
    "query": "SELECT other_student_details FROM Students ORDER BY other_student_details DESC",
    "query_toks": "['SELECT', 'other_student_details', 'FROM', 'Students', 'ORDER', 'BY', 'other_student_details', 'DESC']",
    "query_toks_no_value": "['select', 'other_student_details', 'from', 'students', 'order', 'by', 'other_student_details', 'desc']",
    "question": "List all the student details in reversed lexicographical order.",
    "question_th": "ระบุรายละเอียดของนักเรียนทั้งหมดโดยกลับลำดับพจนานุกรม",
    "question_toks": "['List', 'all', 'the', 'student', 'details', 'in', 'reversed', 'lexicographical', 'order', '.']",
    "sql": "{'from': {'table_units': [['table_unit', 6]], 'conds': []}, 'select': [False, [[0, [0, [0, 43, False], None]]]], 'where': [], 'groupBy': [], 'having': [], 'orderBy': ['desc', [[0, [0, 43, False], None]]], 'limit': None, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "student_transcripts_tracking",
    "query": "SELECT other_student_details FROM Students ORDER BY other_student_details DESC",
    "query_toks": "['SELECT', 'other_student_details', 'FROM', 'Students', 'ORDER', 'BY', 'other_student_details', 'DESC']",
    "query_toks_no_value": "['select', 'other_student_details', 'from', 'students', 'order', 'by', 'other_student_details', 'desc']",
    "question": "What other details can you tell me about students in reverse alphabetical order?",
    "question_th": "มีรายละเอียดอะไรอีกบ้างที่คุณสามารถบอกฉันเกี่ยวกับนักเรียนโดยเรียงลำดับตัวอักษรกลับกัน",
    "question_toks": "['What', 'other', 'details', 'can', 'you', 'tell', 'me', 'about', 'students', 'in', 'reverse', 'alphabetical', 'order', '?']",
    "sql": "{'from': {'table_units': [['table_unit', 6]], 'conds': []}, 'select': [False, [[0, [0, [0, 43, False], None]]]], 'where': [], 'groupBy': [], 'having': [], 'orderBy': ['desc', [[0, [0, 43, False], None]]], 'limit': None, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "student_transcripts_tracking",
    "query": "SELECT section_description FROM Sections WHERE section_name  =  'h'",
    "query_toks": "['SELECT', 'section_description', 'FROM', 'Sections', 'WHERE', 'section_name', '=', \"'h\", \"'\"]",
    "query_toks_no_value": "['select', 'section_description', 'from', 'sections', 'where', 'section_name', '=', 'value']",
    "question": "Describe the section h.",
    "question_th": "อธิบายส่วน ซ.",
    "question_toks": "['Describe', 'the', 'section', 'h', '.']",
    "sql": "{'from': {'table_units': [['table_unit', 4]], 'conds': []}, 'select': [False, [[0, [0, [0, 26, False], None]]]], 'where': [[False, 2, [0, [0, 25, False], None], '\"h\"', None]], 'groupBy': [], 'having': [], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "student_transcripts_tracking",
    "query": "SELECT section_description FROM Sections WHERE section_name  =  'h'",
    "query_toks": "['SELECT', 'section_description', 'FROM', 'Sections', 'WHERE', 'section_name', '=', \"'h\", \"'\"]",
    "query_toks_no_value": "['select', 'section_description', 'from', 'sections', 'where', 'section_name', '=', 'value']",
    "question": "What is the description for the section named h?",
    "question_th": "คำอธิบายสำหรับส่วนที่ชื่อ h คืออะไร?",
    "question_toks": "['What', 'is', 'the', 'description', 'for', 'the', 'section', 'named', 'h', '?']",
    "sql": "{'from': {'table_units': [['table_unit', 4]], 'conds': []}, 'select': [False, [[0, [0, [0, 26, False], None]]]], 'where': [[False, 2, [0, [0, 25, False], None], '\"h\"', None]], 'groupBy': [], 'having': [], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "student_transcripts_tracking",
    "query": "select t1.first_name from students as t1 join addresses as t2 on t1.permanent_address_id  =  t2.address_id where t2.country  =  'haiti' or t1.cell_mobile_number  =  '09700166582'",
    "query_toks": "['select', 't1.first_name', 'from', 'students', 'as', 't1', 'join', 'addresses', 'as', 't2', 'on', 't1.permanent_address_id', '=', 't2.address_id', 'where', 't2.country', '=', '\"haiti\"', 'or', 't1.cell_mobile_number', '=', '\"09700166582\"']",
    "query_toks_no_value": "['select', 't1', '.', 'first_name', 'from', 'students', 'as', 't1', 'join', 'addresses', 'as', 't2', 'on', 't1', '.', 'permanent_address_id', '=', 't2', '.', 'address_id', 'where', 't2', '.', 'country', '=', 'value', 'or', 't1', '.', 'cell_mobile_number', '=', 'value']",
    "question": "Find the first name of the students who permanently live in the country Haiti or have the cell phone number 09700166582 .",
    "question_th": "ค้นหาชื่อของนักเรียนที่อาศัยอยู่อย่างถาวรในประเทศเฮติ หรือมีหมายเลขโทรศัพท์มือถือ 09700166582 .",
    "question_toks": "['Find', 'the', 'first', 'name', 'of', 'the', 'students', 'who', 'permanently', 'live', 'in', 'the', 'country', 'Haiti', 'or', 'have', 'the', 'cell', 'phone', 'number', '09700166582', '.']",
    "sql": "{'from': {'table_units': [['table_unit', 6], ['table_unit', 0]], 'conds': [[False, 2, [0, [0, 34, False], None], [0, 1, False], None]]}, 'select': [False, [[0, [0, [0, 35, False], None]]]], 'where': [[False, 2, [0, [0, 8, False], None], '\"haiti\"', None], 'or', [False, 2, [0, [0, 38, False], None], '\"09700166582\"', None]], 'groupBy': [], 'having': [], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "student_transcripts_tracking",
    "query": "select t1.first_name from students as t1 join addresses as t2 on t1.permanent_address_id  =  t2.address_id where t2.country  =  'haiti' or t1.cell_mobile_number  =  '09700166582'",
    "query_toks": "['select', 't1.first_name', 'from', 'students', 'as', 't1', 'join', 'addresses', 'as', 't2', 'on', 't1.permanent_address_id', '=', 't2.address_id', 'where', 't2.country', '=', '\"haiti\"', 'or', 't1.cell_mobile_number', '=', '\"09700166582\"']",
    "query_toks_no_value": "['select', 't1', '.', 'first_name', 'from', 'students', 'as', 't1', 'join', 'addresses', 'as', 't2', 'on', 't1', '.', 'permanent_address_id', '=', 't2', '.', 'address_id', 'where', 't2', '.', 'country', '=', 'value', 'or', 't1', '.', 'cell_mobile_number', '=', 'value']",
    "question": "What are the first names of the students who live in Haiti permanently or have the cell phone number 09700166582 ?",
    "question_th": "นักเรียนที่อาศัยอยู่ในเฮติอย่างถาวรหรือมีหมายเลขโทรศัพท์มือถือ 09700166582 ชื่ออะไร",
    "question_toks": "['What', 'are', 'the', 'first', 'names', 'of', 'the', 'students', 'who', 'live', 'in', 'Haiti', 'permanently', 'or', 'have', 'the', 'cell', 'phone', 'number', '09700166582', '?']",
    "sql": "{'from': {'table_units': [['table_unit', 6], ['table_unit', 0]], 'conds': [[False, 2, [0, [0, 34, False], None], [0, 1, False], None]]}, 'select': [False, [[0, [0, [0, 35, False], None]]]], 'where': [[False, 2, [0, [0, 8, False], None], '\"haiti\"', None], 'or', [False, 2, [0, [0, 38, False], None], '\"09700166582\"', None]], 'groupBy': [], 'having': [], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "tvshow",
    "query": "SELECT Title FROM Cartoon ORDER BY title",
    "query_toks": "['SELECT', 'Title', 'FROM', 'Cartoon', 'ORDER', 'BY', 'title']",
    "query_toks_no_value": "['select', 'title', 'from', 'cartoon', 'order', 'by', 'title']",
    "question": "List the title of all cartoons in alphabetical order.",
    "question_th": "ตั้งชื่อการ์ตูนทั้งหมดตามลำดับตัวอักษร",
    "question_toks": "['List', 'the', 'title', 'of', 'all', 'cartoons', 'in', 'alphabetical', 'order', '.']",
    "sql": "{'from': {'table_units': [['table_unit', 2]], 'conds': []}, 'select': [False, [[0, [0, [0, 20, False], None]]]], 'where': [], 'groupBy': [], 'having': [], 'orderBy': ['asc', [[0, [0, 20, False], None]]], 'limit': None, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "tvshow",
    "query": "SELECT Title FROM Cartoon ORDER BY title",
    "query_toks": "['SELECT', 'Title', 'FROM', 'Cartoon', 'ORDER', 'BY', 'title']",
    "query_toks_no_value": "['select', 'title', 'from', 'cartoon', 'order', 'by', 'title']",
    "question": "What are the titles of the cartoons sorted alphabetically?",
    "question_th": "การ์ตูนชื่ออะไร เรียงตามตัวอักษร?",
    "question_toks": "['What', 'are', 'the', 'titles', 'of', 'the', 'cartoons', 'sorted', 'alphabetically', '?']",
    "sql": "{'from': {'table_units': [['table_unit', 2]], 'conds': []}, 'select': [False, [[0, [0, [0, 20, False], None]]]], 'where': [], 'groupBy': [], 'having': [], 'orderBy': ['asc', [[0, [0, 20, False], None]]], 'limit': None, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "tvshow",
    "query": "SELECT Title FROM Cartoon WHERE Directed_by = \"Ben Jones\";",
    "query_toks": "['SELECT', 'Title', 'FROM', 'Cartoon', 'WHERE', 'Directed_by', '=', '``', 'Ben', 'Jones', \"''\", ';']",
    "query_toks_no_value": "['select', 'title', 'from', 'cartoon', 'where', 'directed_by', '=', 'value']",
    "question": "List all cartoon directed by \"Ben Jones\".",
    "question_th": "รายชื่อการ์ตูนทั้งหมดที่กำกับโดย \"เบน โจนส์\"",
    "question_toks": "['List', 'all', 'cartoon', 'directed', 'by', '``', 'Ben', 'Jones', \"''\", '.']",
    "sql": "{'from': {'table_units': [['table_unit', 2]], 'conds': []}, 'select': [False, [[0, [0, [0, 20, False], None]]]], 'where': [[False, 2, [0, [0, 21, False], None], '\"Ben Jones\"', None]], 'groupBy': [], 'having': [], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "tvshow",
    "query": "SELECT Title FROM Cartoon WHERE Directed_by = \"Ben Jones\";",
    "query_toks": "['SELECT', 'Title', 'FROM', 'Cartoon', 'WHERE', 'Directed_by', '=', '``', 'Ben', 'Jones', \"''\", ';']",
    "query_toks_no_value": "['select', 'title', 'from', 'cartoon', 'where', 'directed_by', '=', 'value']",
    "question": "What are the names of all cartoons directed by Ben Jones?",
    "question_th": "การ์ตูนทั้งหมดที่กำกับโดย Ben Jones ชื่ออะไร?",
    "question_toks": "['What', 'are', 'the', 'names', 'of', 'all', 'cartoons', 'directed', 'by', 'Ben', 'Jones', '?']",
    "sql": "{'from': {'table_units': [['table_unit', 2]], 'conds': []}, 'select': [False, [[0, [0, [0, 20, False], None]]]], 'where': [[False, 2, [0, [0, 21, False], None], '\"Ben Jones\"', None]], 'groupBy': [], 'having': [], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "tvshow",
    "query": "SELECT count(*) FROM Cartoon WHERE Written_by = \"Joseph Kuhr\";",
    "query_toks": "['SELECT', 'count', '(', '*', ')', 'FROM', 'Cartoon', 'WHERE', 'Written_by', '=', '``', 'Joseph', 'Kuhr', \"''\", ';']",
    "query_toks_no_value": "['select', 'count', '(', '*', ')', 'from', 'cartoon', 'where', 'written_by', '=', 'value']",
    "question": "How many cartoons were written by \"Joseph Kuhr\"?",
    "question_th": "มีการ์ตูนกี่เรื่องที่เขียนโดย \"Joseph Kuhr\"?",
    "question_toks": "['How', 'many', 'cartoons', 'were', 'written', 'by', '``', 'Joseph', 'Kuhr', \"''\", '?']",
    "sql": "{'from': {'table_units': [['table_unit', 2]], 'conds': []}, 'select': [False, [[3, [0, [0, 0, False], None]]]], 'where': [[False, 2, [0, [0, 22, False], None], '\"Joseph Kuhr\"', None]], 'groupBy': [], 'having': [], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "tvshow",
    "query": "SELECT count(*) FROM Cartoon WHERE Written_by = \"Joseph Kuhr\";",
    "query_toks": "['SELECT', 'count', '(', '*', ')', 'FROM', 'Cartoon', 'WHERE', 'Written_by', '=', '``', 'Joseph', 'Kuhr', \"''\", ';']",
    "query_toks_no_value": "['select', 'count', '(', '*', ')', 'from', 'cartoon', 'where', 'written_by', '=', 'value']",
    "question": "What is the number of cartoones written by Joseph Kuhr?",
    "question_th": "การ์ตูนที่เขียนโดย Joseph Kuhr มีกี่เรื่อง?",
    "question_toks": "['What', 'is', 'the', 'number', 'of', 'cartoones', 'written', 'by', 'Joseph', 'Kuhr', '?']",
    "sql": "{'from': {'table_units': [['table_unit', 2]], 'conds': []}, 'select': [False, [[3, [0, [0, 0, False], None]]]], 'where': [[False, 2, [0, [0, 22, False], None], '\"Joseph Kuhr\"', None]], 'groupBy': [], 'having': [], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "tvshow",
    "query": "SELECT title ,  Directed_by FROM Cartoon ORDER BY Original_air_date",
    "query_toks": "['SELECT', 'title', ',', 'Directed_by', 'FROM', 'Cartoon', 'ORDER', 'BY', 'Original_air_date']",
    "query_toks_no_value": "['select', 'title', ',', 'directed_by', 'from', 'cartoon', 'order', 'by', 'original_air_date']",
    "question": "list all cartoon titles and their directors ordered by their air date",
    "question_th": "รายชื่อการ์ตูนทั้งหมดและผู้กำกับเรียงตามวันที่ออกอากาศ",
    "question_toks": "['list', 'all', 'cartoon', 'titles', 'and', 'their', 'directors', 'ordered', 'by', 'their', 'air', 'date']",
    "sql": "{'from': {'table_units': [['table_unit', 2]], 'conds': []}, 'select': [False, [[0, [0, [0, 20, False], None]], [0, [0, [0, 21, False], None]]]], 'where': [], 'groupBy': [], 'having': [], 'orderBy': ['asc', [[0, [0, 23, False], None]]], 'limit': None, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "tvshow",
    "query": "SELECT title ,  Directed_by FROM Cartoon ORDER BY Original_air_date",
    "query_toks": "['SELECT', 'title', ',', 'Directed_by', 'FROM', 'Cartoon', 'ORDER', 'BY', 'Original_air_date']",
    "query_toks_no_value": "['select', 'title', ',', 'directed_by', 'from', 'cartoon', 'order', 'by', 'original_air_date']",
    "question": "What is the name and directors of all the cartoons that are ordered by air date?",
    "question_th": "การ์ตูนทั้งหมดชื่ออะไรและกำกับโดยเรียงตามวันที่ออกอากาศ?",
    "question_toks": "['What', 'is', 'the', 'name', 'and', 'directors', 'of', 'all', 'the', 'cartoons', 'that', 'are', 'ordered', 'by', 'air', 'date', '?']",
    "sql": "{'from': {'table_units': [['table_unit', 2]], 'conds': []}, 'select': [False, [[0, [0, [0, 20, False], None]], [0, [0, [0, 21, False], None]]]], 'where': [], 'groupBy': [], 'having': [], 'orderBy': ['asc', [[0, [0, 23, False], None]]], 'limit': None, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "tvshow",
    "query": "SELECT Title FROM Cartoon WHERE Directed_by = \"Ben Jones\" OR Directed_by = \"Brandon Vietti\";",
    "query_toks": "['SELECT', 'Title', 'FROM', 'Cartoon', 'WHERE', 'Directed_by', '=', '``', 'Ben', 'Jones', \"''\", 'OR', 'Directed_by', '=', '``', 'Brandon', 'Vietti', \"''\", ';']",
    "query_toks_no_value": "['select', 'title', 'from', 'cartoon', 'where', 'directed_by', '=', 'value', 'or', 'directed_by', '=', 'value']",
    "question": "List the title of all cartoon directed by \"Ben Jones\" or \"Brandon Vietti\".",
    "question_th": "ระบุชื่อการ์ตูนทั้งหมดที่กำกับโดย \"Ben Jones\" หรือ \"Brandon Vietti\"",
    "question_toks": "['List', 'the', 'title', 'of', 'all', 'cartoon', 'directed', 'by', '``', 'Ben', 'Jones', \"''\", 'or', '``', 'Brandon', 'Vietti', \"''\", '.']",
    "sql": "{'from': {'table_units': [['table_unit', 2]], 'conds': []}, 'select': [False, [[0, [0, [0, 20, False], None]]]], 'where': [[False, 2, [0, [0, 21, False], None], '\"Ben Jones\"', None], 'or', [False, 2, [0, [0, 21, False], None], '\"Brandon Vietti\"', None]], 'groupBy': [], 'having': [], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "tvshow",
    "query": "SELECT Title FROM Cartoon WHERE Directed_by = \"Ben Jones\" OR Directed_by = \"Brandon Vietti\";",
    "query_toks": "['SELECT', 'Title', 'FROM', 'Cartoon', 'WHERE', 'Directed_by', '=', '``', 'Ben', 'Jones', \"''\", 'OR', 'Directed_by', '=', '``', 'Brandon', 'Vietti', \"''\", ';']",
    "query_toks_no_value": "['select', 'title', 'from', 'cartoon', 'where', 'directed_by', '=', 'value', 'or', 'directed_by', '=', 'value']",
    "question": "What are the titles of all cartoons directed by Ben Jones or Brandon Vietti?",
    "question_th": "การ์ตูนทั้งหมดที่กำกับโดย Ben Jones หรือ Brandon Vietti ชื่ออะไร",
    "question_toks": "['What', 'are', 'the', 'titles', 'of', 'all', 'cartoons', 'directed', 'by', 'Ben', 'Jones', 'or', 'Brandon', 'Vietti', '?']",
    "sql": "{'from': {'table_units': [['table_unit', 2]], 'conds': []}, 'select': [False, [[0, [0, [0, 20, False], None]]]], 'where': [[False, 2, [0, [0, 21, False], None], '\"Ben Jones\"', None], 'or', [False, 2, [0, [0, 21, False], None], '\"Brandon Vietti\"', None]], 'groupBy': [], 'having': [], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "tvshow",
    "query": "SELECT Country ,  count(*) FROM TV_Channel GROUP BY Country ORDER BY count(*) DESC LIMIT 1;",
    "query_toks": "['SELECT', 'Country', ',', 'count', '(', '*', ')', 'FROM', 'TV_Channel', 'GROUP', 'BY', 'Country', 'ORDER', 'BY', 'count', '(', '*', ')', 'DESC', 'LIMIT', '1', ';']",
    "query_toks_no_value": "['select', 'country', ',', 'count', '(', '*', ')', 'from', 'tv_channel', 'group', 'by', 'country', 'order', 'by', 'count', '(', '*', ')', 'desc', 'limit', 'value']",
    "question": "Which country has the most of TV Channels? List the country and number of TV Channels it has.",
    "question_th": "ประเทศใดมีช่องทีวีมากที่สุด? ระบุประเทศและจำนวนช่องทีวีที่มี",
    "question_toks": "['Which', 'country', 'has', 'the', 'most', 'of', 'TV', 'Channels', '?', 'List', 'the', 'country', 'and', 'number', 'of', 'TV', 'Channels', 'it', 'has', '.']",
    "sql": "{'from': {'table_units': [['table_unit', 0]], 'conds': []}, 'select': [False, [[0, [0, [0, 3, False], None]], [3, [0, [0, 0, False], None]]]], 'where': [], 'groupBy': [[0, 3, False]], 'having': [], 'orderBy': ['desc', [[0, [3, 0, False], None]]], 'limit': 1, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "tvshow",
    "query": "SELECT Country ,  count(*) FROM TV_Channel GROUP BY Country ORDER BY count(*) DESC LIMIT 1;",
    "query_toks": "['SELECT', 'Country', ',', 'count', '(', '*', ')', 'FROM', 'TV_Channel', 'GROUP', 'BY', 'Country', 'ORDER', 'BY', 'count', '(', '*', ')', 'DESC', 'LIMIT', '1', ';']",
    "query_toks_no_value": "['select', 'country', ',', 'count', '(', '*', ')', 'from', 'tv_channel', 'group', 'by', 'country', 'order', 'by', 'count', '(', '*', ')', 'desc', 'limit', 'value']",
    "question": "What is the country with the most number of TV Channels and how many does it have?",
    "question_th": "ประเทศใดที่มีช่องทีวีมากที่สุดและมีกี่ช่อง?",
    "question_toks": "['What', 'is', 'the', 'country', 'with', 'the', 'most', 'number', 'of', 'TV', 'Channels', 'and', 'how', 'many', 'does', 'it', 'have', '?']",
    "sql": "{'from': {'table_units': [['table_unit', 0]], 'conds': []}, 'select': [False, [[0, [0, [0, 3, False], None]], [3, [0, [0, 0, False], None]]]], 'where': [], 'groupBy': [[0, 3, False]], 'having': [], 'orderBy': ['desc', [[0, [3, 0, False], None]]], 'limit': 1, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "tvshow",
    "query": "SELECT count(DISTINCT series_name) ,  count(DISTINCT content) FROM TV_Channel;",
    "query_toks": "['SELECT', 'count', '(', 'DISTINCT', 'series_name', ')', ',', 'count', '(', 'DISTINCT', 'content', ')', 'FROM', 'TV_Channel', ';']",
    "query_toks_no_value": "['select', 'count', '(', 'distinct', 'series_name', ')', ',', 'count', '(', 'distinct', 'content', ')', 'from', 'tv_channel']",
    "question": "List the number of different series names and contents in the TV Channel table.",
    "question_th": "ระบุจำนวนชื่อซีรีส์และเนื้อหาต่างๆ ในตารางช่องทีวี",
    "question_toks": "['List', 'the', 'number', 'of', 'different', 'series', 'names', 'and', 'contents', 'in', 'the', 'TV', 'Channel', 'table', '.']",
    "sql": "{'from': {'table_units': [['table_unit', 0]], 'conds': []}, 'select': [False, [[3, [0, [0, 2, True], None]], [3, [0, [0, 5, True], None]]]], 'where': [], 'groupBy': [], 'having': [], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "tvshow",
    "query": "SELECT count(DISTINCT series_name) ,  count(DISTINCT content) FROM TV_Channel;",
    "query_toks": "['SELECT', 'count', '(', 'DISTINCT', 'series_name', ')', ',', 'count', '(', 'DISTINCT', 'content', ')', 'FROM', 'TV_Channel', ';']",
    "query_toks_no_value": "['select', 'count', '(', 'distinct', 'series_name', ')', ',', 'count', '(', 'distinct', 'content', ')', 'from', 'tv_channel']",
    "question": "How many different series and contents are listed in the TV Channel table?",
    "question_th": "ตารางช่องทีวีมีซีรีส์และเนื้อหาที่แตกต่างกันกี่รายการ?",
    "question_toks": "['How', 'many', 'different', 'series', 'and', 'contents', 'are', 'listed', 'in', 'the', 'TV', 'Channel', 'table', '?']",
    "sql": "{'from': {'table_units': [['table_unit', 0]], 'conds': []}, 'select': [False, [[3, [0, [0, 2, True], None]], [3, [0, [0, 5, True], None]]]], 'where': [], 'groupBy': [], 'having': [], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "tvshow",
    "query": "SELECT Content FROM TV_Channel WHERE series_name = \"Sky Radio\";",
    "query_toks": "['SELECT', 'Content', 'FROM', 'TV_Channel', 'WHERE', 'series_name', '=', '``', 'Sky', 'Radio', \"''\", ';']",
    "query_toks_no_value": "['select', 'content', 'from', 'tv_channel', 'where', 'series_name', '=', 'value']",
    "question": "What is the content of TV Channel with serial name \"Sky Radio\"?",
    "question_th": "เนื้อหาของช่องทีวีที่มีชื่อซีเรียลว่า \"สกายเรดิโอ\" คืออะไร?",
    "question_toks": "['What', 'is', 'the', 'content', 'of', 'TV', 'Channel', 'with', 'serial', 'name', '``', 'Sky', 'Radio', \"''\", '?']",
    "sql": "{'from': {'table_units': [['table_unit', 0]], 'conds': []}, 'select': [False, [[0, [0, [0, 5, False], None]]]], 'where': [[False, 2, [0, [0, 2, False], None], '\"Sky Radio\"', None]], 'groupBy': [], 'having': [], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "tvshow",
    "query": "SELECT Content FROM TV_Channel WHERE series_name = \"Sky Radio\";",
    "query_toks": "['SELECT', 'Content', 'FROM', 'TV_Channel', 'WHERE', 'series_name', '=', '``', 'Sky', 'Radio', \"''\", ';']",
    "query_toks_no_value": "['select', 'content', 'from', 'tv_channel', 'where', 'series_name', '=', 'value']",
    "question": "What is the content of the series Sky Radio?",
    "question_th": "เนื้อหาของซีรีส์ Sky Radio คืออะไร?",
    "question_toks": "['What', 'is', 'the', 'content', 'of', 'the', 'series', 'Sky', 'Radio', '?']",
    "sql": "{'from': {'table_units': [['table_unit', 0]], 'conds': []}, 'select': [False, [[0, [0, [0, 5, False], None]]]], 'where': [[False, 2, [0, [0, 2, False], None], '\"Sky Radio\"', None]], 'groupBy': [], 'having': [], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "tvshow",
    "query": "SELECT Package_Option FROM TV_Channel WHERE series_name = \"Sky Radio\";",
    "query_toks": "['SELECT', 'Package_Option', 'FROM', 'TV_Channel', 'WHERE', 'series_name', '=', '``', 'Sky', 'Radio', \"''\", ';']",
    "query_toks_no_value": "['select', 'package_option', 'from', 'tv_channel', 'where', 'series_name', '=', 'value']",
    "question": "What is the Package Option of TV Channel with serial name \"Sky Radio\"?",
    "question_th": "Package Option ของช่องทีวีที่มีชื่อซีเรียลว่า \"Sky Radio\" คืออะไร?",
    "question_toks": "['What', 'is', 'the', 'Package', 'Option', 'of', 'TV', 'Channel', 'with', 'serial', 'name', '``', 'Sky', 'Radio', \"''\", '?']",
    "sql": "{'from': {'table_units': [['table_unit', 0]], 'conds': []}, 'select': [False, [[0, [0, [0, 9, False], None]]]], 'where': [[False, 2, [0, [0, 2, False], None], '\"Sky Radio\"', None]], 'groupBy': [], 'having': [], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "tvshow",
    "query": "SELECT Package_Option FROM TV_Channel WHERE series_name = \"Sky Radio\";",
    "query_toks": "['SELECT', 'Package_Option', 'FROM', 'TV_Channel', 'WHERE', 'series_name', '=', '``', 'Sky', 'Radio', \"''\", ';']",
    "query_toks_no_value": "['select', 'package_option', 'from', 'tv_channel', 'where', 'series_name', '=', 'value']",
    "question": "What are the Package Options of the TV Channels whose series names are Sky Radio?",
    "question_th": "ตัวเลือกแพ็คเกจของช่องทีวีที่มีชื่อซีรีย์เป็น Sky Radio มีอะไรบ้าง?",
    "question_toks": "['What', 'are', 'the', 'Package', 'Options', 'of', 'the', 'TV', 'Channels', 'whose', 'series', 'names', 'are', 'Sky', 'Radio', '?']",
    "sql": "{'from': {'table_units': [['table_unit', 0]], 'conds': []}, 'select': [False, [[0, [0, [0, 9, False], None]]]], 'where': [[False, 2, [0, [0, 2, False], None], '\"Sky Radio\"', None]], 'groupBy': [], 'having': [], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "tvshow",
    "query": "SELECT count(*) FROM TV_Channel WHERE LANGUAGE = \"English\";",
    "query_toks": "['SELECT', 'count', '(', '*', ')', 'FROM', 'TV_Channel', 'WHERE', 'LANGUAGE', '=', '``', 'English', \"''\", ';']",
    "query_toks_no_value": "['select', 'count', '(', '*', ')', 'from', 'tv_channel', 'where', 'language', '=', 'value']",
    "question": "How many TV Channel using language English?",
    "question_th": "มีทีวีกี่ช่องที่ใช้ภาษาอังกฤษ?",
    "question_toks": "['How', 'many', 'TV', 'Channel', 'using', 'language', 'English', '?']",
    "sql": "{'from': {'table_units': [['table_unit', 0]], 'conds': []}, 'select': [False, [[3, [0, [0, 0, False], None]]]], 'where': [[False, 2, [0, [0, 4, False], None], '\"English\"', None]], 'groupBy': [], 'having': [], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "tvshow",
    "query": "SELECT count(*) FROM TV_Channel WHERE LANGUAGE = \"English\";",
    "query_toks": "['SELECT', 'count', '(', '*', ')', 'FROM', 'TV_Channel', 'WHERE', 'LANGUAGE', '=', '``', 'English', \"''\", ';']",
    "query_toks_no_value": "['select', 'count', '(', '*', ')', 'from', 'tv_channel', 'where', 'language', '=', 'value']",
    "question": "How many TV Channels use the English language?",
    "question_th": "มีกี่ช่องทีวีที่ใช้ภาษาอังกฤษ?",
    "question_toks": "['How', 'many', 'TV', 'Channels', 'use', 'the', 'English', 'language', '?']",
    "sql": "{'from': {'table_units': [['table_unit', 0]], 'conds': []}, 'select': [False, [[3, [0, [0, 0, False], None]]]], 'where': [[False, 2, [0, [0, 4, False], None], '\"English\"', None]], 'groupBy': [], 'having': [], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "tvshow",
    "query": "SELECT LANGUAGE ,  count(*) FROM TV_Channel GROUP BY LANGUAGE ORDER BY count(*) ASC LIMIT 1;",
    "query_toks": "['SELECT', 'LANGUAGE', ',', 'count', '(', '*', ')', 'FROM', 'TV_Channel', 'GROUP', 'BY', 'LANGUAGE', 'ORDER', 'BY', 'count', '(', '*', ')', 'ASC', 'LIMIT', '1', ';']",
    "query_toks_no_value": "['select', 'language', ',', 'count', '(', '*', ')', 'from', 'tv_channel', 'group', 'by', 'language', 'order', 'by', 'count', '(', '*', ')', 'asc', 'limit', 'value']",
    "question": "List the language used least number of TV Channel. List language and number of TV Channel.",
    "question_th": "รายการภาษาที่ใช้จำนวนช่องทีวีน้อยที่สุด รายการภาษาและหมายเลขช่องทีวี",
    "question_toks": "['List', 'the', 'language', 'used', 'least', 'number', 'of', 'TV', 'Channel', '.', 'List', 'language', 'and', 'number', 'of', 'TV', 'Channel', '.']",
    "sql": "{'from': {'table_units': [['table_unit', 0]], 'conds': []}, 'select': [False, [[0, [0, [0, 4, False], None]], [3, [0, [0, 0, False], None]]]], 'where': [], 'groupBy': [[0, 4, False]], 'having': [], 'orderBy': ['asc', [[0, [3, 0, False], None]]], 'limit': 1, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "tvshow",
    "query": "SELECT LANGUAGE ,  count(*) FROM TV_Channel GROUP BY LANGUAGE ORDER BY count(*) ASC LIMIT 1;",
    "query_toks": "['SELECT', 'LANGUAGE', ',', 'count', '(', '*', ')', 'FROM', 'TV_Channel', 'GROUP', 'BY', 'LANGUAGE', 'ORDER', 'BY', 'count', '(', '*', ')', 'ASC', 'LIMIT', '1', ';']",
    "query_toks_no_value": "['select', 'language', ',', 'count', '(', '*', ')', 'from', 'tv_channel', 'group', 'by', 'language', 'order', 'by', 'count', '(', '*', ')', 'asc', 'limit', 'value']",
    "question": "What are the languages used by the least number of TV Channels and how many channels use it?",
    "question_th": "ช่องทีวีจำนวนน้อยที่สุดใช้ภาษาอะไรและมีกี่ช่องที่ใช้?",
    "question_toks": "['What', 'are', 'the', 'languages', 'used', 'by', 'the', 'least', 'number', 'of', 'TV', 'Channels', 'and', 'how', 'many', 'channels', 'use', 'it', '?']",
    "sql": "{'from': {'table_units': [['table_unit', 0]], 'conds': []}, 'select': [False, [[0, [0, [0, 4, False], None]], [3, [0, [0, 0, False], None]]]], 'where': [], 'groupBy': [[0, 4, False]], 'having': [], 'orderBy': ['asc', [[0, [3, 0, False], None]]], 'limit': 1, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "tvshow",
    "query": "SELECT LANGUAGE ,  count(*) FROM TV_Channel GROUP BY LANGUAGE",
    "query_toks": "['SELECT', 'LANGUAGE', ',', 'count', '(', '*', ')', 'FROM', 'TV_Channel', 'GROUP', 'BY', 'LANGUAGE']",
    "query_toks_no_value": "['select', 'language', ',', 'count', '(', '*', ')', 'from', 'tv_channel', 'group', 'by', 'language']",
    "question": "List each language and the number of TV Channels using it.",
    "question_th": "ระบุแต่ละภาษาและจำนวนช่องทีวีที่ใช้",
    "question_toks": "['List', 'each', 'language', 'and', 'the', 'number', 'of', 'TV', 'Channels', 'using', 'it', '.']",
    "sql": "{'from': {'table_units': [['table_unit', 0]], 'conds': []}, 'select': [False, [[0, [0, [0, 4, False], None]], [3, [0, [0, 0, False], None]]]], 'where': [], 'groupBy': [[0, 4, False]], 'having': [], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "tvshow",
    "query": "SELECT LANGUAGE ,  count(*) FROM TV_Channel GROUP BY LANGUAGE",
    "query_toks": "['SELECT', 'LANGUAGE', ',', 'count', '(', '*', ')', 'FROM', 'TV_Channel', 'GROUP', 'BY', 'LANGUAGE']",
    "query_toks_no_value": "['select', 'language', ',', 'count', '(', '*', ')', 'from', 'tv_channel', 'group', 'by', 'language']",
    "question": "For each language, list the number of TV Channels that use it.",
    "question_th": "สำหรับแต่ละภาษา ให้ระบุจำนวนช่องทีวีที่ใช้",
    "question_toks": "['For', 'each', 'language', ',', 'list', 'the', 'number', 'of', 'TV', 'Channels', 'that', 'use', 'it', '.']",
    "sql": "{'from': {'table_units': [['table_unit', 0]], 'conds': []}, 'select': [False, [[0, [0, [0, 4, False], None]], [3, [0, [0, 0, False], None]]]], 'where': [], 'groupBy': [[0, 4, False]], 'having': [], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "tvshow",
    "query": "SELECT T1.series_name FROM TV_Channel AS T1 JOIN Cartoon AS T2 ON T1.id = T2.Channel WHERE T2.Title = \"The Rise of the Blue Beetle!\";",
    "query_toks": "['SELECT', 'T1.series_name', 'FROM', 'TV_Channel', 'AS', 'T1', 'JOIN', 'Cartoon', 'AS', 'T2', 'ON', 'T1.id', '=', 'T2.Channel', 'WHERE', 'T2.Title', '=', '``', 'The', 'Rise', 'of', 'the', 'Blue', 'Beetle', '!', '``', ';']",
    "query_toks_no_value": "['select', 't1', '.', 'series_name', 'from', 'tv_channel', 'as', 't1', 'join', 'cartoon', 'as', 't2', 'on', 't1', '.', 'id', '=', 't2', '.', 'channel', 'where', 't2', '.', 'title', '=', 'value']",
    "question": "What is the TV Channel that shows the cartoon \"The Rise of the Blue Beetle!\"? List the TV Channel's series name.",
    "question_th": "ช่องทีวีที่แสดงการ์ตูนเรื่อง The Rise of the Blue Beetle! คือช่องอะไร? ระบุชื่อซีรีส์ของช่องทีวี",
    "question_toks": "['What', 'is', 'the', 'TV', 'Channel', 'that', 'shows', 'the', 'cartoon', '``', 'The', 'Rise', 'of', 'the', 'Blue', 'Beetle', '!', \"''\", '?', 'List', 'the', 'TV', 'Channel', \"'s\", 'series', 'name', '.']",
    "sql": "{'from': {'table_units': [['table_unit', 0], ['table_unit', 2]], 'conds': [[False, 2, [0, [0, 1, False], None], [0, 25, False], None]]}, 'select': [False, [[0, [0, [0, 2, False], None]]]], 'where': [[False, 2, [0, [0, 20, False], None], '\"The Rise of the Blue Beetle!\"', None]], 'groupBy': [], 'having': [], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "tvshow",
    "query": "SELECT T1.series_name FROM TV_Channel AS T1 JOIN Cartoon AS T2 ON T1.id = T2.Channel WHERE T2.Title = \"The Rise of the Blue Beetle!\";",
    "query_toks": "['SELECT', 'T1.series_name', 'FROM', 'TV_Channel', 'AS', 'T1', 'JOIN', 'Cartoon', 'AS', 'T2', 'ON', 'T1.id', '=', 'T2.Channel', 'WHERE', 'T2.Title', '=', '``', 'The', 'Rise', 'of', 'the', 'Blue', 'Beetle', '!', '``', ';']",
    "query_toks_no_value": "['select', 't1', '.', 'series_name', 'from', 'tv_channel', 'as', 't1', 'join', 'cartoon', 'as', 't2', 'on', 't1', '.', 'id', '=', 't2', '.', 'channel', 'where', 't2', '.', 'title', '=', 'value']",
    "question": "What is the series name of the TV Channel that shows the cartoon \"The Rise of the Blue Beetle\"?",
    "question_th": "ชื่อซีรีส์ของช่องทีวีที่แสดงการ์ตูนเรื่อง The Rise of the Blue Beetle คืออะไร?",
    "question_toks": "['What', 'is', 'the', 'series', 'name', 'of', 'the', 'TV', 'Channel', 'that', 'shows', 'the', 'cartoon', '``', 'The', 'Rise', 'of', 'the', 'Blue', 'Beetle', \"''\", '?']",
    "sql": "{'from': {'table_units': [['table_unit', 0], ['table_unit', 2]], 'conds': [[False, 2, [0, [0, 1, False], None], [0, 25, False], None]]}, 'select': [False, [[0, [0, [0, 2, False], None]]]], 'where': [[False, 2, [0, [0, 20, False], None], '\"The Rise of the Blue Beetle!\"', None]], 'groupBy': [], 'having': [], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "tvshow",
    "query": "SELECT T2.Title FROM TV_Channel AS T1 JOIN Cartoon AS T2 ON T1.id = T2.Channel WHERE T1.series_name = \"Sky Radio\";",
    "query_toks": "['SELECT', 'T2.Title', 'FROM', 'TV_Channel', 'AS', 'T1', 'JOIN', 'Cartoon', 'AS', 'T2', 'ON', 'T1.id', '=', 'T2.Channel', 'WHERE', 'T1.series_name', '=', '``', 'Sky', 'Radio', \"''\", ';']",
    "query_toks_no_value": "['select', 't2', '.', 'title', 'from', 'tv_channel', 'as', 't1', 'join', 'cartoon', 'as', 't2', 'on', 't1', '.', 'id', '=', 't2', '.', 'channel', 'where', 't1', '.', 'series_name', '=', 'value']",
    "question": "List the title of all  Cartoons showed on TV Channel with series name \"Sky Radio\".",
    "question_th": "รายชื่อการ์ตูนทั้งหมดที่ฉายทางช่องทีวีชื่อซีรีส์ \"สกายเรดิโอ\"",
    "question_toks": "['List', 'the', 'title', 'of', 'all', 'Cartoons', 'showed', 'on', 'TV', 'Channel', 'with', 'series', 'name', '``', 'Sky', 'Radio', \"''\", '.']",
    "sql": "{'from': {'table_units': [['table_unit', 0], ['table_unit', 2]], 'conds': [[False, 2, [0, [0, 1, False], None], [0, 25, False], None]]}, 'select': [False, [[0, [0, [0, 20, False], None]]]], 'where': [[False, 2, [0, [0, 2, False], None], '\"Sky Radio\"', None]], 'groupBy': [], 'having': [], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "tvshow",
    "query": "SELECT T2.Title FROM TV_Channel AS T1 JOIN Cartoon AS T2 ON T1.id = T2.Channel WHERE T1.series_name = \"Sky Radio\";",
    "query_toks": "['SELECT', 'T2.Title', 'FROM', 'TV_Channel', 'AS', 'T1', 'JOIN', 'Cartoon', 'AS', 'T2', 'ON', 'T1.id', '=', 'T2.Channel', 'WHERE', 'T1.series_name', '=', '``', 'Sky', 'Radio', \"''\", ';']",
    "query_toks_no_value": "['select', 't2', '.', 'title', 'from', 'tv_channel', 'as', 't1', 'join', 'cartoon', 'as', 't2', 'on', 't1', '.', 'id', '=', 't2', '.', 'channel', 'where', 't1', '.', 'series_name', '=', 'value']",
    "question": "What is the title of all the cartools that are on the TV Channel with the series name \"Sky Radio\"?",
    "question_th": "รถทั้งหมดที่อยู่ในช่องทีวีชื่อซีรีย์ว่า \"Sky Radio\" ชื่ออะไร?",
    "question_toks": "['What', 'is', 'the', 'title', 'of', 'all', 'the', 'cartools', 'that', 'are', 'on', 'the', 'TV', 'Channel', 'with', 'the', 'series', 'name', '``', 'Sky', 'Radio', \"''\", '?']",
    "sql": "{'from': {'table_units': [['table_unit', 0], ['table_unit', 2]], 'conds': [[False, 2, [0, [0, 1, False], None], [0, 25, False], None]]}, 'select': [False, [[0, [0, [0, 20, False], None]]]], 'where': [[False, 2, [0, [0, 2, False], None], '\"Sky Radio\"', None]], 'groupBy': [], 'having': [], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "tvshow",
    "query": "SELECT Episode FROM TV_series ORDER BY rating",
    "query_toks": "['SELECT', 'Episode', 'FROM', 'TV_series', 'ORDER', 'BY', 'rating']",
    "query_toks_no_value": "['select', 'episode', 'from', 'tv_series', 'order', 'by', 'rating']",
    "question": "List the Episode of all TV series sorted by rating.",
    "question_th": "รายชื่อตอนของซีรีย์ทีวีทั้งหมดเรียงตามเรตติ้ง",
    "question_toks": "['List', 'the', 'Episode', 'of', 'all', 'TV', 'series', 'sorted', 'by', 'rating', '.']",
    "sql": "{'from': {'table_units': [['table_unit', 1]], 'conds': []}, 'select': [False, [[0, [0, [0, 11, False], None]]]], 'where': [], 'groupBy': [], 'having': [], 'orderBy': ['asc', [[0, [0, 13, False], None]]], 'limit': None, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "tvshow",
    "query": "SELECT Episode FROM TV_series ORDER BY rating",
    "query_toks": "['SELECT', 'Episode', 'FROM', 'TV_series', 'ORDER', 'BY', 'rating']",
    "query_toks_no_value": "['select', 'episode', 'from', 'tv_series', 'order', 'by', 'rating']",
    "question": "What are all of the episodes ordered by ratings?",
    "question_th": "ตอนทั้งหมดเรียงลำดับตามเรตติ้งเรื่องไหนคะ?",
    "question_toks": "['What', 'are', 'all', 'of', 'the', 'episodes', 'ordered', 'by', 'ratings', '?']",
    "sql": "{'from': {'table_units': [['table_unit', 1]], 'conds': []}, 'select': [False, [[0, [0, [0, 11, False], None]]]], 'where': [], 'groupBy': [], 'having': [], 'orderBy': ['asc', [[0, [0, 13, False], None]]], 'limit': None, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "tvshow",
    "query": "SELECT Episode ,  Rating FROM TV_series ORDER BY Rating DESC LIMIT 3;",
    "query_toks": "['SELECT', 'Episode', ',', 'Rating', 'FROM', 'TV_series', 'ORDER', 'BY', 'Rating', 'DESC', 'LIMIT', '3', ';']",
    "query_toks_no_value": "['select', 'episode', ',', 'rating', 'from', 'tv_series', 'order', 'by', 'rating', 'desc', 'limit', 'value']",
    "question": "List top 3 highest Rating  TV series. List the TV series's Episode and Rating.",
    "question_th": "รายชื่อซีรีส์ทีวีที่มีเรตติ้งสูงสุด 3 อันดับแรก แสดงรายการตอนและเรตติ้งของซีรีส์ทีวี",
    "question_toks": "['List', 'top', '3', 'highest', 'Rating', 'TV', 'series', '.', 'List', 'the', 'TV', 'series', \"'s\", 'Episode', 'and', 'Rating', '.']",
    "sql": "{'from': {'table_units': [['table_unit', 1]], 'conds': []}, 'select': [False, [[0, [0, [0, 11, False], None]], [0, [0, [0, 13, False], None]]]], 'where': [], 'groupBy': [], 'having': [], 'orderBy': ['desc', [[0, [0, 13, False], None]]], 'limit': 3, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "tvshow",
    "query": "SELECT Episode ,  Rating FROM TV_series ORDER BY Rating DESC LIMIT 3;",
    "query_toks": "['SELECT', 'Episode', ',', 'Rating', 'FROM', 'TV_series', 'ORDER', 'BY', 'Rating', 'DESC', 'LIMIT', '3', ';']",
    "query_toks_no_value": "['select', 'episode', ',', 'rating', 'from', 'tv_series', 'order', 'by', 'rating', 'desc', 'limit', 'value']",
    "question": "What are 3 most highly rated episodes in the TV series table and what were those ratings?",
    "question_th": "3 ตอนที่มีเรตติ้งสูงที่สุดในตารางซีรีย์ทีวีคืออะไร และเรตติ้งเหล่านั้นคือเท่าใด",
    "question_toks": "['What', 'are', '3', 'most', 'highly', 'rated', 'episodes', 'in', 'the', 'TV', 'series', 'table', 'and', 'what', 'were', 'those', 'ratings', '?']",
    "sql": "{'from': {'table_units': [['table_unit', 1]], 'conds': []}, 'select': [False, [[0, [0, [0, 11, False], None]], [0, [0, [0, 13, False], None]]]], 'where': [], 'groupBy': [], 'having': [], 'orderBy': ['desc', [[0, [0, 13, False], None]]], 'limit': 3, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "tvshow",
    "query": "SELECT max(SHARE) , min(SHARE) FROM TV_series;",
    "query_toks": "['SELECT', 'max', '(', 'SHARE', ')', ',', 'min', '(', 'SHARE', ')', 'FROM', 'TV_series', ';']",
    "query_toks_no_value": "['select', 'max', '(', 'share', ')', ',', 'min', '(', 'share', ')', 'from', 'tv_series']",
    "question": "What is minimum and maximum share of TV series?",
    "question_th": "ส่วนแบ่งขั้นต่ำและสูงสุดของซีรีย์ทีวีคือเท่าใด",
    "question_toks": "['What', 'is', 'minimum', 'and', 'maximum', 'share', 'of', 'TV', 'series', '?']",
    "sql": "{'from': {'table_units': [['table_unit', 1]], 'conds': []}, 'select': [False, [[1, [0, [0, 14, False], None]], [2, [0, [0, 14, False], None]]]], 'where': [], 'groupBy': [], 'having': [], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "tvshow",
    "query": "SELECT max(SHARE) , min(SHARE) FROM TV_series;",
    "query_toks": "['SELECT', 'max', '(', 'SHARE', ')', ',', 'min', '(', 'SHARE', ')', 'FROM', 'TV_series', ';']",
    "query_toks_no_value": "['select', 'max', '(', 'share', ')', ',', 'min', '(', 'share', ')', 'from', 'tv_series']",
    "question": "What is the maximum and minimum share for the TV series?",
    "question_th": "ส่วนแบ่งสูงสุดและต่ำสุดสำหรับละครทีวีคือเท่าไร?",
    "question_toks": "['What', 'is', 'the', 'maximum', 'and', 'minimum', 'share', 'for', 'the', 'TV', 'series', '?']",
    "sql": "{'from': {'table_units': [['table_unit', 1]], 'conds': []}, 'select': [False, [[1, [0, [0, 14, False], None]], [2, [0, [0, 14, False], None]]]], 'where': [], 'groupBy': [], 'having': [], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "tvshow",
    "query": "SELECT Air_Date FROM TV_series WHERE Episode = \"A Love of a Lifetime\";",
    "query_toks": "['SELECT', 'Air_Date', 'FROM', 'TV_series', 'WHERE', 'Episode', '=', '``', 'A', 'Love', 'of', 'a', 'Lifetime', \"''\", ';']",
    "query_toks_no_value": "['select', 'air_date', 'from', 'tv_series', 'where', 'episode', '=', 'value']",
    "question": "What is the air date of TV series with Episode \"A Love of a Lifetime\"?",
    "question_th": "ละครโทรทัศน์ที่มีตอน \"A Love of a Lifetime\" ออกอากาศวันไหน?",
    "question_toks": "['What', 'is', 'the', 'air', 'date', 'of', 'TV', 'series', 'with', 'Episode', '``', 'A', 'Love', 'of', 'a', 'Lifetime', \"''\", '?']",
    "sql": "{'from': {'table_units': [['table_unit', 1]], 'conds': []}, 'select': [False, [[0, [0, [0, 12, False], None]]]], 'where': [[False, 2, [0, [0, 11, False], None], '\"A Love of a Lifetime\"', None]], 'groupBy': [], 'having': [], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "tvshow",
    "query": "SELECT Air_Date FROM TV_series WHERE Episode = \"A Love of a Lifetime\";",
    "query_toks": "['SELECT', 'Air_Date', 'FROM', 'TV_series', 'WHERE', 'Episode', '=', '``', 'A', 'Love', 'of', 'a', 'Lifetime', \"''\", ';']",
    "query_toks_no_value": "['select', 'air_date', 'from', 'tv_series', 'where', 'episode', '=', 'value']",
    "question": "When did the episode \"A Love of a Lifetime\" air?",
    "question_th": "ตอน \"A Love of a Lifetime\" ออกอากาศเมื่อไหร่?",
    "question_toks": "['When', 'did', 'the', 'episode', '``', 'A', 'Love', 'of', 'a', 'Lifetime', \"''\", 'air', '?']",
    "sql": "{'from': {'table_units': [['table_unit', 1]], 'conds': []}, 'select': [False, [[0, [0, [0, 12, False], None]]]], 'where': [[False, 2, [0, [0, 11, False], None], '\"A Love of a Lifetime\"', None]], 'groupBy': [], 'having': [], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "tvshow",
    "query": "SELECT Weekly_Rank FROM TV_series WHERE Episode = \"A Love of a Lifetime\";",
    "query_toks": "['SELECT', 'Weekly_Rank', 'FROM', 'TV_series', 'WHERE', 'Episode', '=', '``', 'A', 'Love', 'of', 'a', 'Lifetime', \"''\", ';']",
    "query_toks_no_value": "['select', 'weekly_rank', 'from', 'tv_series', 'where', 'episode', '=', 'value']",
    "question": "What is Weekly Rank of TV series with Episode \"A Love of a Lifetime\"?",
    "question_th": "อันดับรายสัปดาห์ของซีรีส์ทีวีที่มีตอน \"A Love of a Lifetime\" คืออะไร?",
    "question_toks": "['What', 'is', 'Weekly', 'Rank', 'of', 'TV', 'series', 'with', 'Episode', '``', 'A', 'Love', 'of', 'a', 'Lifetime', \"''\", '?']",
    "sql": "{'from': {'table_units': [['table_unit', 1]], 'conds': []}, 'select': [False, [[0, [0, [0, 17, False], None]]]], 'where': [[False, 2, [0, [0, 11, False], None], '\"A Love of a Lifetime\"', None]], 'groupBy': [], 'having': [], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "tvshow",
    "query": "SELECT Weekly_Rank FROM TV_series WHERE Episode = \"A Love of a Lifetime\";",
    "query_toks": "['SELECT', 'Weekly_Rank', 'FROM', 'TV_series', 'WHERE', 'Episode', '=', '``', 'A', 'Love', 'of', 'a', 'Lifetime', \"''\", ';']",
    "query_toks_no_value": "['select', 'weekly_rank', 'from', 'tv_series', 'where', 'episode', '=', 'value']",
    "question": "What is the weekly rank for the episode \"A Love of a Lifetime\"?",
    "question_th": "อันดับรายสัปดาห์ของตอน \"A Love of a Lifetime\" คือเท่าไร?",
    "question_toks": "['What', 'is', 'the', 'weekly', 'rank', 'for', 'the', 'episode', '``', 'A', 'Love', 'of', 'a', 'Lifetime', \"''\", '?']",
    "sql": "{'from': {'table_units': [['table_unit', 1]], 'conds': []}, 'select': [False, [[0, [0, [0, 17, False], None]]]], 'where': [[False, 2, [0, [0, 11, False], None], '\"A Love of a Lifetime\"', None]], 'groupBy': [], 'having': [], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "tvshow",
    "query": "SELECT T1.series_name FROM TV_Channel AS T1 JOIN TV_series AS T2 ON T1.id = T2.Channel WHERE T2.Episode = \"A Love of a Lifetime\";",
    "query_toks": "['SELECT', 'T1.series_name', 'FROM', 'TV_Channel', 'AS', 'T1', 'JOIN', 'TV_series', 'AS', 'T2', 'ON', 'T1.id', '=', 'T2.Channel', 'WHERE', 'T2.Episode', '=', '``', 'A', 'Love', 'of', 'a', 'Lifetime', \"''\", ';']",
    "query_toks_no_value": "['select', 't1', '.', 'series_name', 'from', 'tv_channel', 'as', 't1', 'join', 'tv_series', 'as', 't2', 'on', 't1', '.', 'id', '=', 't2', '.', 'channel', 'where', 't2', '.', 'episode', '=', 'value']",
    "question": "What is the TV Channel of TV series with Episode \"A Love of a Lifetime\"? List the TV Channel's series name.",
    "question_th": "ช่องทีวีของละครโทรทัศน์ที่มีตอน \"รักชั่วชีวิต\" คืออะไร? ระบุชื่อซีรีส์ของช่องทีวี",
    "question_toks": "['What', 'is', 'the', 'TV', 'Channel', 'of', 'TV', 'series', 'with', 'Episode', '``', 'A', 'Love', 'of', 'a', 'Lifetime', \"''\", '?', 'List', 'the', 'TV', 'Channel', \"'s\", 'series', 'name', '.']",
    "sql": "{'from': {'table_units': [['table_unit', 0], ['table_unit', 1]], 'conds': [[False, 2, [0, [0, 1, False], None], [0, 18, False], None]]}, 'select': [False, [[0, [0, [0, 2, False], None]]]], 'where': [[False, 2, [0, [0, 11, False], None], '\"A Love of a Lifetime\"', None]], 'groupBy': [], 'having': [], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "tvshow",
    "query": "SELECT T1.series_name FROM TV_Channel AS T1 JOIN TV_series AS T2 ON T1.id = T2.Channel WHERE T2.Episode = \"A Love of a Lifetime\";",
    "query_toks": "['SELECT', 'T1.series_name', 'FROM', 'TV_Channel', 'AS', 'T1', 'JOIN', 'TV_series', 'AS', 'T2', 'ON', 'T1.id', '=', 'T2.Channel', 'WHERE', 'T2.Episode', '=', '``', 'A', 'Love', 'of', 'a', 'Lifetime', \"''\", ';']",
    "query_toks_no_value": "['select', 't1', '.', 'series_name', 'from', 'tv_channel', 'as', 't1', 'join', 'tv_series', 'as', 't2', 'on', 't1', '.', 'id', '=', 't2', '.', 'channel', 'where', 't2', '.', 'episode', '=', 'value']",
    "question": "What is the name of the series that has the episode \"A Love of a Lifetime\"?",
    "question_th": "ซีรีย์ที่มีตอน \"รักชั่วชีวิต\" ชื่ออะไรคะ?",
    "question_toks": "['What', 'is', 'the', 'name', 'of', 'the', 'series', 'that', 'has', 'the', 'episode', '``', 'A', 'Love', 'of', 'a', 'Lifetime', \"''\", '?']",
    "sql": "{'from': {'table_units': [['table_unit', 0], ['table_unit', 1]], 'conds': [[False, 2, [0, [0, 1, False], None], [0, 18, False], None]]}, 'select': [False, [[0, [0, [0, 2, False], None]]]], 'where': [[False, 2, [0, [0, 11, False], None], '\"A Love of a Lifetime\"', None]], 'groupBy': [], 'having': [], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "tvshow",
    "query": "SELECT T2.Episode FROM TV_Channel AS T1 JOIN TV_series AS T2 ON T1.id = T2.Channel WHERE T1.series_name = \"Sky Radio\";",
    "query_toks": "['SELECT', 'T2.Episode', 'FROM', 'TV_Channel', 'AS', 'T1', 'JOIN', 'TV_series', 'AS', 'T2', 'ON', 'T1.id', '=', 'T2.Channel', 'WHERE', 'T1.series_name', '=', '``', 'Sky', 'Radio', \"''\", ';']",
    "query_toks_no_value": "['select', 't2', '.', 'episode', 'from', 'tv_channel', 'as', 't1', 'join', 'tv_series', 'as', 't2', 'on', 't1', '.', 'id', '=', 't2', '.', 'channel', 'where', 't1', '.', 'series_name', '=', 'value']",
    "question": "List the Episode of all  TV series showed on TV Channel with series name \"Sky Radio\".",
    "question_th": "รายการตอนของละครโทรทัศน์ทั้งหมดที่ฉายทางช่องทีวีชื่อซีรีส์ \"Sky Radio\"",
    "question_toks": "['List', 'the', 'Episode', 'of', 'all', 'TV', 'series', 'showed', 'on', 'TV', 'Channel', 'with', 'series', 'name', '``', 'Sky', 'Radio', \"''\", '.']",
    "sql": "{'from': {'table_units': [['table_unit', 0], ['table_unit', 1]], 'conds': [[False, 2, [0, [0, 1, False], None], [0, 18, False], None]]}, 'select': [False, [[0, [0, [0, 11, False], None]]]], 'where': [[False, 2, [0, [0, 2, False], None], '\"Sky Radio\"', None]], 'groupBy': [], 'having': [], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "tvshow",
    "query": "SELECT T2.Episode FROM TV_Channel AS T1 JOIN TV_series AS T2 ON T1.id = T2.Channel WHERE T1.series_name = \"Sky Radio\";",
    "query_toks": "['SELECT', 'T2.Episode', 'FROM', 'TV_Channel', 'AS', 'T1', 'JOIN', 'TV_series', 'AS', 'T2', 'ON', 'T1.id', '=', 'T2.Channel', 'WHERE', 'T1.series_name', '=', '``', 'Sky', 'Radio', \"''\", ';']",
    "query_toks_no_value": "['select', 't2', '.', 'episode', 'from', 'tv_channel', 'as', 't1', 'join', 'tv_series', 'as', 't2', 'on', 't1', '.', 'id', '=', 't2', '.', 'channel', 'where', 't1', '.', 'series_name', '=', 'value']",
    "question": "What is the episode for the TV series named \"Sky Radio\"?",
    "question_th": "ละครโทรทัศน์เรื่อง Sky Radio มีตอนอะไรบ้าง?",
    "question_toks": "['What', 'is', 'the', 'episode', 'for', 'the', 'TV', 'series', 'named', '``', 'Sky', 'Radio', \"''\", '?']",
    "sql": "{'from': {'table_units': [['table_unit', 0], ['table_unit', 1]], 'conds': [[False, 2, [0, [0, 1, False], None], [0, 18, False], None]]}, 'select': [False, [[0, [0, [0, 11, False], None]]]], 'where': [[False, 2, [0, [0, 2, False], None], '\"Sky Radio\"', None]], 'groupBy': [], 'having': [], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "tvshow",
    "query": "SELECT count(*) ,  Directed_by FROM cartoon GROUP BY Directed_by",
    "query_toks": "['SELECT', 'count', '(', '*', ')', ',', 'Directed_by', 'FROM', 'cartoon', 'GROUP', 'BY', 'Directed_by']",
    "query_toks_no_value": "['select', 'count', '(', '*', ')', ',', 'directed_by', 'from', 'cartoon', 'group', 'by', 'directed_by']",
    "question": "Find the number of cartoons directed by each of the listed directors.",
    "question_th": "ค้นหาจำนวนการ์ตูนที่กำกับโดยผู้กำกับแต่ละคน",
    "question_toks": "['Find', 'the', 'number', 'of', 'cartoons', 'directed', 'by', 'each', 'of', 'the', 'listed', 'directors', '.']",
    "sql": "{'from': {'table_units': [['table_unit', 2]], 'conds': []}, 'select': [False, [[3, [0, [0, 0, False], None]], [0, [0, [0, 21, False], None]]]], 'where': [], 'groupBy': [[0, 21, False]], 'having': [], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "tvshow",
    "query": "SELECT count(*) ,  Directed_by FROM cartoon GROUP BY Directed_by",
    "query_toks": "['SELECT', 'count', '(', '*', ')', ',', 'Directed_by', 'FROM', 'cartoon', 'GROUP', 'BY', 'Directed_by']",
    "query_toks_no_value": "['select', 'count', '(', '*', ')', ',', 'directed_by', 'from', 'cartoon', 'group', 'by', 'directed_by']",
    "question": "How many cartoons did each director create?",
    "question_th": "ผู้กำกับแต่ละคนสร้างการ์ตูนกี่เรื่อง?",
    "question_toks": "['How', 'many', 'cartoons', 'did', 'each', 'director', 'create', '?']",
    "sql": "{'from': {'table_units': [['table_unit', 2]], 'conds': []}, 'select': [False, [[3, [0, [0, 0, False], None]], [0, [0, [0, 21, False], None]]]], 'where': [], 'groupBy': [[0, 21, False]], 'having': [], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "tvshow",
    "query": "select production_code ,  channel from cartoon order by original_air_date desc limit 1",
    "query_toks": "['select', 'production_code', ',', 'channel', 'from', 'cartoon', 'order', 'by', 'original_air_date', 'desc', 'limit', '1']",
    "query_toks_no_value": "['select', 'production_code', ',', 'channel', 'from', 'cartoon', 'order', 'by', 'original_air_date', 'desc', 'limit', 'value']",
    "question": "Find the production code and channel of the most recently aired cartoon .",
    "question_th": "ค้นหารหัสการผลิตและช่องการ์ตูนที่ออกอากาศล่าสุด",
    "question_toks": "['Find', 'the', 'production', 'code', 'and', 'channel', 'of', 'the', 'most', 'recently', 'aired', 'cartoon', '.']",
    "sql": "{'from': {'table_units': [['table_unit', 2]], 'conds': []}, 'select': [False, [[0, [0, [0, 24, False], None]], [0, [0, [0, 25, False], None]]]], 'where': [], 'groupBy': [], 'having': [], 'orderBy': ['desc', [[0, [0, 23, False], None]]], 'limit': 1, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "tvshow",
    "query": "select production_code ,  channel from cartoon order by original_air_date desc limit 1",
    "query_toks": "['select', 'production_code', ',', 'channel', 'from', 'cartoon', 'order', 'by', 'original_air_date', 'desc', 'limit', '1']",
    "query_toks_no_value": "['select', 'production_code', ',', 'channel', 'from', 'cartoon', 'order', 'by', 'original_air_date', 'desc', 'limit', 'value']",
    "question": "What is the produdction code and channel of the most recent cartoon ?",
    "question_th": "รหัสการผลิตและช่องของการ์ตูนเรื่องล่าสุดคืออะไร?",
    "question_toks": "['What', 'is', 'the', 'produdction', 'code', 'and', 'channel', 'of', 'the', 'most', 'recent', 'cartoon', '?']",
    "sql": "{'from': {'table_units': [['table_unit', 2]], 'conds': []}, 'select': [False, [[0, [0, [0, 24, False], None]], [0, [0, [0, 25, False], None]]]], 'where': [], 'groupBy': [], 'having': [], 'orderBy': ['desc', [[0, [0, 23, False], None]]], 'limit': 1, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "tvshow",
    "query": "SELECT package_option ,  series_name FROM TV_Channel WHERE hight_definition_TV  =  \"yes\"",
    "query_toks": "['SELECT', 'package_option', ',', 'series_name', 'FROM', 'TV_Channel', 'WHERE', 'hight_definition_TV', '=', '``', 'yes', \"''\"]",
    "query_toks_no_value": "['select', 'package_option', ',', 'series_name', 'from', 'tv_channel', 'where', 'hight_definition_tv', '=', 'value']",
    "question": "Find the package choice and series name of the TV channel that has high definition TV.",
    "question_th": "ค้นหาตัวเลือกแพ็กเกจและชื่อซีรีส์ของช่องทีวีที่มีทีวีความคมชัดสูง",
    "question_toks": "['Find', 'the', 'package', 'choice', 'and', 'series', 'name', 'of', 'the', 'TV', 'channel', 'that', 'has', 'high', 'definition', 'TV', '.']",
    "sql": "{'from': {'table_units': [['table_unit', 0]], 'conds': []}, 'select': [False, [[0, [0, [0, 9, False], None]], [0, [0, [0, 2, False], None]]]], 'where': [[False, 2, [0, [0, 7, False], None], '\"yes\"', None]], 'groupBy': [], 'having': [], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "tvshow",
    "query": "SELECT package_option ,  series_name FROM TV_Channel WHERE hight_definition_TV  =  \"yes\"",
    "query_toks": "['SELECT', 'package_option', ',', 'series_name', 'FROM', 'TV_Channel', 'WHERE', 'hight_definition_TV', '=', '``', 'yes', \"''\"]",
    "query_toks_no_value": "['select', 'package_option', ',', 'series_name', 'from', 'tv_channel', 'where', 'hight_definition_tv', '=', 'value']",
    "question": "What are the package options and the name of the series for the TV Channel that supports high definition TV?",
    "question_th": "ตัวเลือกแพ็คเกจและชื่อของซีรีส์สำหรับช่องทีวีที่รองรับทีวีความคมชัดสูงมีอะไรบ้าง?",
    "question_toks": "['What', 'are', 'the', 'package', 'options', 'and', 'the', 'name', 'of', 'the', 'series', 'for', 'the', 'TV', 'Channel', 'that', 'supports', 'high', 'definition', 'TV', '?']",
    "sql": "{'from': {'table_units': [['table_unit', 0]], 'conds': []}, 'select': [False, [[0, [0, [0, 9, False], None]], [0, [0, [0, 2, False], None]]]], 'where': [[False, 2, [0, [0, 7, False], None], '\"yes\"', None]], 'groupBy': [], 'having': [], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "tvshow",
    "query": "SELECT T1.country FROM TV_Channel AS T1 JOIN cartoon AS T2 ON T1.id = T2.Channel WHERE T2.written_by  =  'Todd Casey'",
    "query_toks": "['SELECT', 'T1.country', 'FROM', 'TV_Channel', 'AS', 'T1', 'JOIN', 'cartoon', 'AS', 'T2', 'ON', 'T1.id', '=', 'T2.Channel', 'WHERE', 'T2.written_by', '=', \"'Todd\", 'Casey', \"'\"]",
    "query_toks_no_value": "['select', 't1', '.', 'country', 'from', 'tv_channel', 'as', 't1', 'join', 'cartoon', 'as', 't2', 'on', 't1', '.', 'id', '=', 't2', '.', 'channel', 'where', 't2', '.', 'written_by', '=', 'value']",
    "question": "which countries' tv channels are playing some cartoon written by Todd Casey?",
    "question_th": "ช่องทีวีของประเทศใดบ้างที่เปิดดูการ์ตูนที่เขียนโดย Todd Casey",
    "question_toks": "['which', 'countries', \"'\", 'tv', 'channels', 'are', 'playing', 'some', 'cartoon', 'written', 'by', 'Todd', 'Casey', '?']",
    "sql": "{'from': {'table_units': [['table_unit', 0], ['table_unit', 2]], 'conds': [[False, 2, [0, [0, 1, False], None], [0, 25, False], None]]}, 'select': [False, [[0, [0, [0, 3, False], None]]]], 'where': [[False, 2, [0, [0, 22, False], None], '\"Todd Casey\"', None]], 'groupBy': [], 'having': [], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "tvshow",
    "query": "SELECT T1.country FROM TV_Channel AS T1 JOIN cartoon AS T2 ON T1.id = T2.Channel WHERE T2.written_by  =  'Todd Casey'",
    "query_toks": "['SELECT', 'T1.country', 'FROM', 'TV_Channel', 'AS', 'T1', 'JOIN', 'cartoon', 'AS', 'T2', 'ON', 'T1.id', '=', 'T2.Channel', 'WHERE', 'T2.written_by', '=', \"'Todd\", 'Casey', \"'\"]",
    "query_toks_no_value": "['select', 't1', '.', 'country', 'from', 'tv_channel', 'as', 't1', 'join', 'cartoon', 'as', 't2', 'on', 't1', '.', 'id', '=', 't2', '.', 'channel', 'where', 't2', '.', 'written_by', '=', 'value']",
    "question": "What are the countries that have cartoons on TV that were written by Todd Casey?",
    "question_th": "ประเทศใดบ้างที่มีการ์ตูนในทีวีที่เขียนโดย Todd Casey?",
    "question_toks": "['What', 'are', 'the', 'countries', 'that', 'have', 'cartoons', 'on', 'TV', 'that', 'were', 'written', 'by', 'Todd', 'Casey', '?']",
    "sql": "{'from': {'table_units': [['table_unit', 0], ['table_unit', 2]], 'conds': [[False, 2, [0, [0, 1, False], None], [0, 25, False], None]]}, 'select': [False, [[0, [0, [0, 3, False], None]]]], 'where': [[False, 2, [0, [0, 22, False], None], '\"Todd Casey\"', None]], 'groupBy': [], 'having': [], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "tvshow",
    "query": "SELECT country FROM TV_Channel EXCEPT SELECT T1.country FROM TV_Channel AS T1 JOIN cartoon AS T2 ON T1.id = T2.Channel WHERE T2.written_by  =  'Todd Casey'",
    "query_toks": "['SELECT', 'country', 'FROM', 'TV_Channel', 'EXCEPT', 'SELECT', 'T1.country', 'FROM', 'TV_Channel', 'AS', 'T1', 'JOIN', 'cartoon', 'AS', 'T2', 'ON', 'T1.id', '=', 'T2.Channel', 'WHERE', 'T2.written_by', '=', \"'Todd\", 'Casey', \"'\"]",
    "query_toks_no_value": "['select', 'country', 'from', 'tv_channel', 'except', 'select', 't1', '.', 'country', 'from', 'tv_channel', 'as', 't1', 'join', 'cartoon', 'as', 't2', 'on', 't1', '.', 'id', '=', 't2', '.', 'channel', 'where', 't2', '.', 'written_by', '=', 'value']",
    "question": "which countries' tv channels are not playing any cartoon written by Todd Casey?",
    "question_th": "ช่องทีวีของประเทศใดบ้างที่ไม่เปิดดูการ์ตูนที่เขียนโดย Todd Casey",
    "question_toks": "['which', 'countries', \"'\", 'tv', 'channels', 'are', 'not', 'playing', 'any', 'cartoon', 'written', 'by', 'Todd', 'Casey', '?']",
    "sql": "{'from': {'table_units': [['table_unit', 0]], 'conds': []}, 'select': [False, [[0, [0, [0, 3, False], None]]]], 'where': [], 'groupBy': [], 'having': [], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': {'from': {'table_units': [['table_unit', 0], ['table_unit', 2]], 'conds': [[False, 2, [0, [0, 1, False], None], [0, 25, False], None]]}, 'select': [False, [[0, [0, [0, 3, False], None]]]], 'where': [[False, 2, [0, [0, 22, False], None], '\"Todd Casey\"', None]], 'groupBy': [], 'having': [], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}}"
  },
  {
    "db_id": "tvshow",
    "query": "SELECT country FROM TV_Channel EXCEPT SELECT T1.country FROM TV_Channel AS T1 JOIN cartoon AS T2 ON T1.id = T2.Channel WHERE T2.written_by  =  'Todd Casey'",
    "query_toks": "['SELECT', 'country', 'FROM', 'TV_Channel', 'EXCEPT', 'SELECT', 'T1.country', 'FROM', 'TV_Channel', 'AS', 'T1', 'JOIN', 'cartoon', 'AS', 'T2', 'ON', 'T1.id', '=', 'T2.Channel', 'WHERE', 'T2.written_by', '=', \"'Todd\", 'Casey', \"'\"]",
    "query_toks_no_value": "['select', 'country', 'from', 'tv_channel', 'except', 'select', 't1', '.', 'country', 'from', 'tv_channel', 'as', 't1', 'join', 'cartoon', 'as', 't2', 'on', 't1', '.', 'id', '=', 't2', '.', 'channel', 'where', 't2', '.', 'written_by', '=', 'value']",
    "question": "What are the countries that are not playing cartoons written by Todd Casey?",
    "question_th": "ประเทศใดบ้างที่ไม่เล่นการ์ตูนที่เขียนโดย Todd Casey?",
    "question_toks": "['What', 'are', 'the', 'countries', 'that', 'are', 'not', 'playing', 'cartoons', 'written', 'by', 'Todd', 'Casey', '?']",
    "sql": "{'from': {'table_units': [['table_unit', 0]], 'conds': []}, 'select': [False, [[0, [0, [0, 3, False], None]]]], 'where': [], 'groupBy': [], 'having': [], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': {'from': {'table_units': [['table_unit', 0], ['table_unit', 2]], 'conds': [[False, 2, [0, [0, 1, False], None], [0, 25, False], None]]}, 'select': [False, [[0, [0, [0, 3, False], None]]]], 'where': [[False, 2, [0, [0, 22, False], None], '\"Todd Casey\"', None]], 'groupBy': [], 'having': [], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}}"
  },
  {
    "db_id": "tvshow",
    "query": "SELECT T1.series_name ,  T1.country FROM TV_Channel AS T1 JOIN cartoon AS T2 ON T1.id = T2.Channel WHERE T2.directed_by  =  'Michael Chang' INTERSECT SELECT T1.series_name ,  T1.country FROM TV_Channel AS T1 JOIN cartoon AS T2 ON T1.id = T2.Channel WHERE T2.directed_by  =  'Ben Jones'",
    "query_toks": "['SELECT', 'T1.series_name', ',', 'T1.country', 'FROM', 'TV_Channel', 'AS', 'T1', 'JOIN', 'cartoon', 'AS', 'T2', 'ON', 'T1.id', '=', 'T2.Channel', 'WHERE', 'T2.directed_by', '=', \"'Michael\", 'Chang', \"'\", 'INTERSECT', 'SELECT', 'T1.series_name', ',', 'T1.country', 'FROM', 'TV_Channel', 'AS', 'T1', 'JOIN', 'cartoon', 'AS', 'T2', 'ON', 'T1.id', '=', 'T2.Channel', 'WHERE', 'T2.directed_by', '=', \"'Ben\", 'Jones', \"'\"]",
    "query_toks_no_value": "['select', 't1', '.', 'series_name', ',', 't1', '.', 'country', 'from', 'tv_channel', 'as', 't1', 'join', 'cartoon', 'as', 't2', 'on', 't1', '.', 'id', '=', 't2', '.', 'channel', 'where', 't2', '.', 'directed_by', '=', 'value', 'intersect', 'select', 't1', '.', 'series_name', ',', 't1', '.', 'country', 'from', 'tv_channel', 'as', 't1', 'join', 'cartoon', 'as', 't2', 'on', 't1', '.', 'id', '=', 't2', '.', 'channel', 'where', 't2', '.', 'directed_by', '=', 'value']",
    "question": "Find the series name and country of the tv channel that is playing some cartoons directed by Ben Jones and Michael Chang?",
    "question_th": "ค้นหาชื่อซีรีส์และประเทศของช่องทีวีที่กำลังเล่นการ์ตูนที่กำกับโดย Ben Jones และ Michael Chang?",
    "question_toks": "['Find', 'the', 'series', 'name', 'and', 'country', 'of', 'the', 'tv', 'channel', 'that', 'is', 'playing', 'some', 'cartoons', 'directed', 'by', 'Ben', 'Jones', 'and', 'Michael', 'Chang', '?']",
    "sql": "{'from': {'table_units': [['table_unit', 0], ['table_unit', 2]], 'conds': [[False, 2, [0, [0, 1, False], None], [0, 25, False], None]]}, 'select': [False, [[0, [0, [0, 2, False], None]], [0, [0, [0, 3, False], None]]]], 'where': [[False, 2, [0, [0, 21, False], None], '\"Michael Chang\"', None]], 'groupBy': [], 'having': [], 'orderBy': [], 'limit': None, 'intersect': {'from': {'table_units': [['table_unit', 0], ['table_unit', 2]], 'conds': [[False, 2, [0, [0, 1, False], None], [0, 25, False], None]]}, 'select': [False, [[0, [0, [0, 2, False], None]], [0, [0, [0, 3, False], None]]]], 'where': [[False, 2, [0, [0, 21, False], None], '\"Ben Jones\"', None]], 'groupBy': [], 'having': [], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}, 'union': None, 'except': None}"
  },
  {
    "db_id": "tvshow",
    "query": "SELECT T1.series_name ,  T1.country FROM TV_Channel AS T1 JOIN cartoon AS T2 ON T1.id = T2.Channel WHERE T2.directed_by  =  'Michael Chang' INTERSECT SELECT T1.series_name ,  T1.country FROM TV_Channel AS T1 JOIN cartoon AS T2 ON T1.id = T2.Channel WHERE T2.directed_by  =  'Ben Jones'",
    "query_toks": "['SELECT', 'T1.series_name', ',', 'T1.country', 'FROM', 'TV_Channel', 'AS', 'T1', 'JOIN', 'cartoon', 'AS', 'T2', 'ON', 'T1.id', '=', 'T2.Channel', 'WHERE', 'T2.directed_by', '=', \"'Michael\", 'Chang', \"'\", 'INTERSECT', 'SELECT', 'T1.series_name', ',', 'T1.country', 'FROM', 'TV_Channel', 'AS', 'T1', 'JOIN', 'cartoon', 'AS', 'T2', 'ON', 'T1.id', '=', 'T2.Channel', 'WHERE', 'T2.directed_by', '=', \"'Ben\", 'Jones', \"'\"]",
    "query_toks_no_value": "['select', 't1', '.', 'series_name', ',', 't1', '.', 'country', 'from', 'tv_channel', 'as', 't1', 'join', 'cartoon', 'as', 't2', 'on', 't1', '.', 'id', '=', 't2', '.', 'channel', 'where', 't2', '.', 'directed_by', '=', 'value', 'intersect', 'select', 't1', '.', 'series_name', ',', 't1', '.', 'country', 'from', 'tv_channel', 'as', 't1', 'join', 'cartoon', 'as', 't2', 'on', 't1', '.', 'id', '=', 't2', '.', 'channel', 'where', 't2', '.', 'directed_by', '=', 'value']",
    "question": "What is the series name and country of all TV channels that are playing cartoons directed by Ben Jones and cartoons directed by Michael Chang?",
    "question_th": "ชื่อซีรีส์และประเทศของช่องทีวีทั้งหมดที่เล่นการ์ตูนที่กำกับโดย Ben Jones และการ์ตูนที่กำกับโดย Michael Chang คืออะไร",
    "question_toks": "['What', 'is', 'the', 'series', 'name', 'and', 'country', 'of', 'all', 'TV', 'channels', 'that', 'are', 'playing', 'cartoons', 'directed', 'by', 'Ben', 'Jones', 'and', 'cartoons', 'directed', 'by', 'Michael', 'Chang', '?']",
    "sql": "{'from': {'table_units': [['table_unit', 0], ['table_unit', 2]], 'conds': [[False, 2, [0, [0, 1, False], None], [0, 25, False], None]]}, 'select': [False, [[0, [0, [0, 2, False], None]], [0, [0, [0, 3, False], None]]]], 'where': [[False, 2, [0, [0, 21, False], None], '\"Michael Chang\"', None]], 'groupBy': [], 'having': [], 'orderBy': [], 'limit': None, 'intersect': {'from': {'table_units': [['table_unit', 0], ['table_unit', 2]], 'conds': [[False, 2, [0, [0, 1, False], None], [0, 25, False], None]]}, 'select': [False, [[0, [0, [0, 2, False], None]], [0, [0, [0, 3, False], None]]]], 'where': [[False, 2, [0, [0, 21, False], None], '\"Ben Jones\"', None]], 'groupBy': [], 'having': [], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}, 'union': None, 'except': None}"
  },
  {
    "db_id": "tvshow",
    "query": "SELECT Pixel_aspect_ratio_PAR ,  country FROM tv_channel WHERE LANGUAGE != 'English'",
    "query_toks": "['SELECT', 'Pixel_aspect_ratio_PAR', ',', 'country', 'FROM', 'tv_channel', 'WHERE', 'LANGUAGE', '!', '=', \"'English\", \"'\"]",
    "query_toks_no_value": "['select', 'pixel_aspect_ratio_par', ',', 'country', 'from', 'tv_channel', 'where', 'language', '!', '=', 'value']",
    "question": "find the pixel aspect ratio and nation of the tv channels that do not use English.",
    "question_th": "ค้นหาอัตราส่วนพิกเซลและประเทศของช่องทีวีที่ไม่ใช้ภาษาอังกฤษ",
    "question_toks": "['find', 'the', 'pixel', 'aspect', 'ratio', 'and', 'nation', 'of', 'the', 'tv', 'channels', 'that', 'do', 'not', 'use', 'English', '.']",
    "sql": "{'from': {'table_units': [['table_unit', 0]], 'conds': []}, 'select': [False, [[0, [0, [0, 6, False], None]], [0, [0, [0, 3, False], None]]]], 'where': [[False, 7, [0, [0, 4, False], None], '\"English\"', None]], 'groupBy': [], 'having': [], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "tvshow",
    "query": "SELECT Pixel_aspect_ratio_PAR ,  country FROM tv_channel WHERE LANGUAGE != 'English'",
    "query_toks": "['SELECT', 'Pixel_aspect_ratio_PAR', ',', 'country', 'FROM', 'tv_channel', 'WHERE', 'LANGUAGE', '!', '=', \"'English\", \"'\"]",
    "query_toks_no_value": "['select', 'pixel_aspect_ratio_par', ',', 'country', 'from', 'tv_channel', 'where', 'language', '!', '=', 'value']",
    "question": "What is the pixel aspect ratio and country of origin for all TV channels that do not use English?",
    "question_th": "อัตราส่วนพิกเซลและประเทศต้นทางสำหรับช่องทีวีทั้งหมดที่ไม่ได้ใช้ภาษาอังกฤษเป็นเท่าใด?",
    "question_toks": "['What', 'is', 'the', 'pixel', 'aspect', 'ratio', 'and', 'country', 'of', 'origin', 'for', 'all', 'TV', 'channels', 'that', 'do', 'not', 'use', 'English', '?']",
    "sql": "{'from': {'table_units': [['table_unit', 0]], 'conds': []}, 'select': [False, [[0, [0, [0, 6, False], None]], [0, [0, [0, 3, False], None]]]], 'where': [[False, 7, [0, [0, 4, False], None], '\"English\"', None]], 'groupBy': [], 'having': [], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "tvshow",
    "query": "SELECT id FROM tv_channel GROUP BY country HAVING count(*)  >  2",
    "query_toks": "['SELECT', 'id', 'FROM', 'tv_channel', 'GROUP', 'BY', 'country', 'HAVING', 'count', '(', '*', ')', '>', '2']",
    "query_toks_no_value": "['select', 'id', 'from', 'tv_channel', 'group', 'by', 'country', 'having', 'count', '(', '*', ')', '>', 'value']",
    "question": "find id of the tv channels that from the countries where have more than two tv channels.",
    "question_th": "ค้นหารหัสช่องทีวีจากประเทศที่มีช่องทีวีมากกว่าสองช่อง",
    "question_toks": "['find', 'id', 'of', 'the', 'tv', 'channels', 'that', 'from', 'the', 'countries', 'where', 'have', 'more', 'than', 'two', 'tv', 'channels', '.']",
    "sql": "{'from': {'table_units': [['table_unit', 0]], 'conds': []}, 'select': [False, [[0, [0, [0, 1, False], None]]]], 'where': [], 'groupBy': [[0, 3, False]], 'having': [[False, 3, [0, [3, 0, False], None], 2.0, None]], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "tvshow",
    "query": "SELECT id FROM tv_channel GROUP BY country HAVING count(*)  >  2",
    "query_toks": "['SELECT', 'id', 'FROM', 'tv_channel', 'GROUP', 'BY', 'country', 'HAVING', 'count', '(', '*', ')', '>', '2']",
    "query_toks_no_value": "['select', 'id', 'from', 'tv_channel', 'group', 'by', 'country', 'having', 'count', '(', '*', ')', '>', 'value']",
    "question": "What are the ids of all tv channels that have more than 2 TV channels?",
    "question_th": "รหัสของช่องทีวีทั้งหมดที่มีมากกว่า 2 ช่องทีวีคือรหัสอะไร",
    "question_toks": "['What', 'are', 'the', 'ids', 'of', 'all', 'tv', 'channels', 'that', 'have', 'more', 'than', '2', 'TV', 'channels', '?']",
    "sql": "{'from': {'table_units': [['table_unit', 0]], 'conds': []}, 'select': [False, [[0, [0, [0, 1, False], None]]]], 'where': [], 'groupBy': [[0, 3, False]], 'having': [[False, 3, [0, [3, 0, False], None], 2.0, None]], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "tvshow",
    "query": "SELECT id FROM TV_Channel EXCEPT SELECT channel FROM cartoon WHERE directed_by  =  'Ben Jones'",
    "query_toks": "['SELECT', 'id', 'FROM', 'TV_Channel', 'EXCEPT', 'SELECT', 'channel', 'FROM', 'cartoon', 'WHERE', 'directed_by', '=', \"'Ben\", 'Jones', \"'\"]",
    "query_toks_no_value": "['select', 'id', 'from', 'tv_channel', 'except', 'select', 'channel', 'from', 'cartoon', 'where', 'directed_by', '=', 'value']",
    "question": "find the id of tv channels that do not play any cartoon directed by Ben Jones.",
    "question_th": "ค้นหารหัสช่องทีวีที่ไม่เล่นการ์ตูนที่กำกับโดย Ben Jones",
    "question_toks": "['find', 'the', 'id', 'of', 'tv', 'channels', 'that', 'do', 'not', 'play', 'any', 'cartoon', 'directed', 'by', 'Ben', 'Jones', '.']",
    "sql": "{'from': {'table_units': [['table_unit', 0]], 'conds': []}, 'select': [False, [[0, [0, [0, 1, False], None]]]], 'where': [], 'groupBy': [], 'having': [], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': {'from': {'table_units': [['table_unit', 2]], 'conds': []}, 'select': [False, [[0, [0, [0, 25, False], None]]]], 'where': [[False, 2, [0, [0, 21, False], None], '\"Ben Jones\"', None]], 'groupBy': [], 'having': [], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}}"
  },
  {
    "db_id": "tvshow",
    "query": "SELECT id FROM TV_Channel EXCEPT SELECT channel FROM cartoon WHERE directed_by  =  'Ben Jones'",
    "query_toks": "['SELECT', 'id', 'FROM', 'TV_Channel', 'EXCEPT', 'SELECT', 'channel', 'FROM', 'cartoon', 'WHERE', 'directed_by', '=', \"'Ben\", 'Jones', \"'\"]",
    "query_toks_no_value": "['select', 'id', 'from', 'tv_channel', 'except', 'select', 'channel', 'from', 'cartoon', 'where', 'directed_by', '=', 'value']",
    "question": "What are the ids of the TV channels that do not have any cartoons directed by Ben Jones?",
    "question_th": "รหัสช่องทีวีที่ไม่มีการ์ตูนกำกับโดย Ben Jones คืออะไร?",
    "question_toks": "['What', 'are', 'the', 'ids', 'of', 'the', 'TV', 'channels', 'that', 'do', 'not', 'have', 'any', 'cartoons', 'directed', 'by', 'Ben', 'Jones', '?']",
    "sql": "{'from': {'table_units': [['table_unit', 0]], 'conds': []}, 'select': [False, [[0, [0, [0, 1, False], None]]]], 'where': [], 'groupBy': [], 'having': [], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': {'from': {'table_units': [['table_unit', 2]], 'conds': []}, 'select': [False, [[0, [0, [0, 25, False], None]]]], 'where': [[False, 2, [0, [0, 21, False], None], '\"Ben Jones\"', None]], 'groupBy': [], 'having': [], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}}"
  },
  {
    "db_id": "tvshow",
    "query": "SELECT package_option FROM TV_Channel WHERE id NOT IN (SELECT channel FROM cartoon WHERE directed_by  =  'Ben Jones')",
    "query_toks": "['SELECT', 'package_option', 'FROM', 'TV_Channel', 'WHERE', 'id', 'NOT', 'IN', '(', 'SELECT', 'channel', 'FROM', 'cartoon', 'WHERE', 'directed_by', '=', \"'Ben\", 'Jones', \"'\", ')']",
    "query_toks_no_value": "['select', 'package_option', 'from', 'tv_channel', 'where', 'id', 'not', 'in', '(', 'select', 'channel', 'from', 'cartoon', 'where', 'directed_by', '=', 'value', ')']",
    "question": "find the package option of the tv channel that do not have any cartoon directed by Ben Jones.",
    "question_th": "ค้นหาตัวเลือกแพ็กเกจของช่องทีวีที่ไม่มีการ์ตูนกำกับโดย Ben Jones",
    "question_toks": "['find', 'the', 'package', 'option', 'of', 'the', 'tv', 'channel', 'that', 'do', 'not', 'have', 'any', 'cartoon', 'directed', 'by', 'Ben', 'Jones', '.']",
    "sql": "{'from': {'table_units': [['table_unit', 0]], 'conds': []}, 'select': [False, [[0, [0, [0, 9, False], None]]]], 'where': [[True, 8, [0, [0, 1, False], None], {'from': {'table_units': [['table_unit', 2]], 'conds': []}, 'select': [False, [[0, [0, [0, 25, False], None]]]], 'where': [[False, 2, [0, [0, 21, False], None], '\"Ben Jones\"', None]], 'groupBy': [], 'having': [], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}, None]], 'groupBy': [], 'having': [], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "tvshow",
    "query": "SELECT package_option FROM TV_Channel WHERE id NOT IN (SELECT channel FROM cartoon WHERE directed_by  =  'Ben Jones')",
    "query_toks": "['SELECT', 'package_option', 'FROM', 'TV_Channel', 'WHERE', 'id', 'NOT', 'IN', '(', 'SELECT', 'channel', 'FROM', 'cartoon', 'WHERE', 'directed_by', '=', \"'Ben\", 'Jones', \"'\", ')']",
    "query_toks_no_value": "['select', 'package_option', 'from', 'tv_channel', 'where', 'id', 'not', 'in', '(', 'select', 'channel', 'from', 'cartoon', 'where', 'directed_by', '=', 'value', ')']",
    "question": "What are the package options of all tv channels that are not playing any cartoons directed by Ben Jones?",
    "question_th": "ตัวเลือกแพ็คเกจของช่องทีวีทั้งหมดที่ไม่เปิดดูการ์ตูนที่กำกับโดย Ben Jones มีอะไรบ้าง?",
    "question_toks": "['What', 'are', 'the', 'package', 'options', 'of', 'all', 'tv', 'channels', 'that', 'are', 'not', 'playing', 'any', 'cartoons', 'directed', 'by', 'Ben', 'Jones', '?']",
    "sql": "{'from': {'table_units': [['table_unit', 0]], 'conds': []}, 'select': [False, [[0, [0, [0, 9, False], None]]]], 'where': [[True, 8, [0, [0, 1, False], None], {'from': {'table_units': [['table_unit', 2]], 'conds': []}, 'select': [False, [[0, [0, [0, 25, False], None]]]], 'where': [[False, 2, [0, [0, 21, False], None], '\"Ben Jones\"', None]], 'groupBy': [], 'having': [], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}, None]], 'groupBy': [], 'having': [], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "poker_player",
    "query": "SELECT count(*) FROM poker_player",
    "query_toks": "['SELECT', 'count', '(', '*', ')', 'FROM', 'poker_player']",
    "query_toks_no_value": "['select', 'count', '(', '*', ')', 'from', 'poker_player']",
    "question": "How many poker players are there?",
    "question_th": "มีผู้เล่นโป๊กเกอร์กี่คน?",
    "question_toks": "['How', 'many', 'poker', 'players', 'are', 'there', '?']",
    "sql": "{'from': {'table_units': [['table_unit', 0]], 'conds': []}, 'select': [False, [[3, [0, [0, 0, False], None]]]], 'where': [], 'groupBy': [], 'having': [], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "poker_player",
    "query": "SELECT count(*) FROM poker_player",
    "query_toks": "['SELECT', 'count', '(', '*', ')', 'FROM', 'poker_player']",
    "query_toks_no_value": "['select', 'count', '(', '*', ')', 'from', 'poker_player']",
    "question": "Count the number of poker players.",
    "question_th": "นับจำนวนผู้เล่นโป๊กเกอร์",
    "question_toks": "['Count', 'the', 'number', 'of', 'poker', 'players', '.']",
    "sql": "{'from': {'table_units': [['table_unit', 0]], 'conds': []}, 'select': [False, [[3, [0, [0, 0, False], None]]]], 'where': [], 'groupBy': [], 'having': [], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "poker_player",
    "query": "SELECT Earnings FROM poker_player ORDER BY Earnings DESC",
    "query_toks": "['SELECT', 'Earnings', 'FROM', 'poker_player', 'ORDER', 'BY', 'Earnings', 'DESC']",
    "query_toks_no_value": "['select', 'earnings', 'from', 'poker_player', 'order', 'by', 'earnings', 'desc']",
    "question": "List the earnings of poker players in descending order.",
    "question_th": "แสดงรายการรายได้ของผู้เล่นโป๊กเกอร์ตามลำดับจากมากไปน้อย",
    "question_toks": "['List', 'the', 'earnings', 'of', 'poker', 'players', 'in', 'descending', 'order', '.']",
    "sql": "{'from': {'table_units': [['table_unit', 0]], 'conds': []}, 'select': [False, [[0, [0, [0, 6, False], None]]]], 'where': [], 'groupBy': [], 'having': [], 'orderBy': ['desc', [[0, [0, 6, False], None]]], 'limit': None, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "poker_player",
    "query": "SELECT Earnings FROM poker_player ORDER BY Earnings DESC",
    "query_toks": "['SELECT', 'Earnings', 'FROM', 'poker_player', 'ORDER', 'BY', 'Earnings', 'DESC']",
    "query_toks_no_value": "['select', 'earnings', 'from', 'poker_player', 'order', 'by', 'earnings', 'desc']",
    "question": "What are the earnings of poker players, ordered descending by value?",
    "question_th": "รายได้ของผู้เล่นโป๊กเกอร์ เรียงลำดับจากมากไปน้อยตามมูลค่าเป็นเท่าใด?",
    "question_toks": "['What', 'are', 'the', 'earnings', 'of', 'poker', 'players', ',', 'ordered', 'descending', 'by', 'value', '?']",
    "sql": "{'from': {'table_units': [['table_unit', 0]], 'conds': []}, 'select': [False, [[0, [0, [0, 6, False], None]]]], 'where': [], 'groupBy': [], 'having': [], 'orderBy': ['desc', [[0, [0, 6, False], None]]], 'limit': None, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "poker_player",
    "query": "SELECT Final_Table_Made ,  Best_Finish FROM poker_player",
    "query_toks": "['SELECT', 'Final_Table_Made', ',', 'Best_Finish', 'FROM', 'poker_player']",
    "query_toks_no_value": "['select', 'final_table_made', ',', 'best_finish', 'from', 'poker_player']",
    "question": "List the final tables made and the best finishes of poker players.",
    "question_th": "รายชื่อตารางสุดท้ายที่ทำขึ้นและการจบสกอร์ที่ดีที่สุดของผู้เล่นโป๊กเกอร์",
    "question_toks": "['List', 'the', 'final', 'tables', 'made', 'and', 'the', 'best', 'finishes', 'of', 'poker', 'players', '.']",
    "sql": "{'from': {'table_units': [['table_unit', 0]], 'conds': []}, 'select': [False, [[0, [0, [0, 3, False], None]], [0, [0, [0, 4, False], None]]]], 'where': [], 'groupBy': [], 'having': [], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "poker_player",
    "query": "SELECT Final_Table_Made ,  Best_Finish FROM poker_player",
    "query_toks": "['SELECT', 'Final_Table_Made', ',', 'Best_Finish', 'FROM', 'poker_player']",
    "query_toks_no_value": "['select', 'final_table_made', ',', 'best_finish', 'from', 'poker_player']",
    "question": "What are the final tables made and best finishes for all poker players?",
    "question_th": "อะไรคือตารางสุดท้ายที่สร้างขึ้นและจบการแข่งขันได้ดีที่สุดสำหรับผู้เล่นโป๊กเกอร์ทุกคน?",
    "question_toks": "['What', 'are', 'the', 'final', 'tables', 'made', 'and', 'best', 'finishes', 'for', 'all', 'poker', 'players', '?']",
    "sql": "{'from': {'table_units': [['table_unit', 0]], 'conds': []}, 'select': [False, [[0, [0, [0, 3, False], None]], [0, [0, [0, 4, False], None]]]], 'where': [], 'groupBy': [], 'having': [], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "poker_player",
    "query": "SELECT avg(Earnings) FROM poker_player",
    "query_toks": "['SELECT', 'avg', '(', 'Earnings', ')', 'FROM', 'poker_player']",
    "query_toks_no_value": "['select', 'avg', '(', 'earnings', ')', 'from', 'poker_player']",
    "question": "What is the average earnings of poker players?",
    "question_th": "รายได้เฉลี่ยของผู้เล่นโป๊กเกอร์คือเท่าไร?",
    "question_toks": "['What', 'is', 'the', 'average', 'earnings', 'of', 'poker', 'players', '?']",
    "sql": "{'from': {'table_units': [['table_unit', 0]], 'conds': []}, 'select': [False, [[5, [0, [0, 6, False], None]]]], 'where': [], 'groupBy': [], 'having': [], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "poker_player",
    "query": "SELECT avg(Earnings) FROM poker_player",
    "query_toks": "['SELECT', 'avg', '(', 'Earnings', ')', 'FROM', 'poker_player']",
    "query_toks_no_value": "['select', 'avg', '(', 'earnings', ')', 'from', 'poker_player']",
    "question": "Return the average earnings across all poker players.",
    "question_th": "คืนรายได้เฉลี่ยให้กับผู้เล่นโป๊กเกอร์ทุกคน",
    "question_toks": "['Return', 'the', 'average', 'earnings', 'across', 'all', 'poker', 'players', '.']",
    "sql": "{'from': {'table_units': [['table_unit', 0]], 'conds': []}, 'select': [False, [[5, [0, [0, 6, False], None]]]], 'where': [], 'groupBy': [], 'having': [], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "poker_player",
    "query": "SELECT Money_Rank FROM poker_player ORDER BY Earnings DESC LIMIT 1",
    "query_toks": "['SELECT', 'Money_Rank', 'FROM', 'poker_player', 'ORDER', 'BY', 'Earnings', 'DESC', 'LIMIT', '1']",
    "query_toks_no_value": "['select', 'money_rank', 'from', 'poker_player', 'order', 'by', 'earnings', 'desc', 'limit', 'value']",
    "question": "What is the money rank of the poker player with the highest earnings?",
    "question_th": "อันดับเงินของผู้เล่นโป๊กเกอร์ที่มีรายได้สูงสุดคือเท่าไร?",
    "question_toks": "['What', 'is', 'the', 'money', 'rank', 'of', 'the', 'poker', 'player', 'with', 'the', 'highest', 'earnings', '?']",
    "sql": "{'from': {'table_units': [['table_unit', 0]], 'conds': []}, 'select': [False, [[0, [0, [0, 5, False], None]]]], 'where': [], 'groupBy': [], 'having': [], 'orderBy': ['desc', [[0, [0, 6, False], None]]], 'limit': 1, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "poker_player",
    "query": "SELECT Money_Rank FROM poker_player ORDER BY Earnings DESC LIMIT 1",
    "query_toks": "['SELECT', 'Money_Rank', 'FROM', 'poker_player', 'ORDER', 'BY', 'Earnings', 'DESC', 'LIMIT', '1']",
    "query_toks_no_value": "['select', 'money_rank', 'from', 'poker_player', 'order', 'by', 'earnings', 'desc', 'limit', 'value']",
    "question": "Return the money rank of the player with the greatest earnings.",
    "question_th": "คืนอันดับเงินของผู้เล่นที่มีรายได้สูงสุด",
    "question_toks": "['Return', 'the', 'money', 'rank', 'of', 'the', 'player', 'with', 'the', 'greatest', 'earnings', '.']",
    "sql": "{'from': {'table_units': [['table_unit', 0]], 'conds': []}, 'select': [False, [[0, [0, [0, 5, False], None]]]], 'where': [], 'groupBy': [], 'having': [], 'orderBy': ['desc', [[0, [0, 6, False], None]]], 'limit': 1, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "poker_player",
    "query": "SELECT max(Final_Table_Made) FROM poker_player WHERE Earnings  <  200000",
    "query_toks": "['SELECT', 'max', '(', 'Final_Table_Made', ')', 'FROM', 'poker_player', 'WHERE', 'Earnings', '<', '200000']",
    "query_toks_no_value": "['select', 'max', '(', 'final_table_made', ')', 'from', 'poker_player', 'where', 'earnings', '<', 'value']",
    "question": "What is the maximum number of final tables made among poker players with earnings less than 200000?",
    "question_th": "จำนวนโต๊ะสุดท้ายสูงสุดที่เกิดขึ้นในหมู่ผู้เล่นโป๊กเกอร์ที่มีรายได้น้อยกว่า 200,000 คือเท่าไร?",
    "question_toks": "['What', 'is', 'the', 'maximum', 'number', 'of', 'final', 'tables', 'made', 'among', 'poker', 'players', 'with', 'earnings', 'less', 'than', '200000', '?']",
    "sql": "{'from': {'table_units': [['table_unit', 0]], 'conds': []}, 'select': [False, [[1, [0, [0, 3, False], None]]]], 'where': [[False, 4, [0, [0, 6, False], None], 200000.0, None]], 'groupBy': [], 'having': [], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "poker_player",
    "query": "SELECT max(Final_Table_Made) FROM poker_player WHERE Earnings  <  200000",
    "query_toks": "['SELECT', 'max', '(', 'Final_Table_Made', ')', 'FROM', 'poker_player', 'WHERE', 'Earnings', '<', '200000']",
    "query_toks_no_value": "['select', 'max', '(', 'final_table_made', ')', 'from', 'poker_player', 'where', 'earnings', '<', 'value']",
    "question": "Return the maximum final tables made across all poker players who have earnings below 200000.",
    "question_th": "คืนตารางสุดท้ายสูงสุดที่ทำขึ้นสำหรับผู้เล่นโป๊กเกอร์ทุกคนที่มีรายได้ต่ำกว่า 200,000",
    "question_toks": "['Return', 'the', 'maximum', 'final', 'tables', 'made', 'across', 'all', 'poker', 'players', 'who', 'have', 'earnings', 'below', '200000', '.']",
    "sql": "{'from': {'table_units': [['table_unit', 0]], 'conds': []}, 'select': [False, [[1, [0, [0, 3, False], None]]]], 'where': [[False, 4, [0, [0, 6, False], None], 200000.0, None]], 'groupBy': [], 'having': [], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "poker_player",
    "query": "SELECT T1.Name FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID",
    "query_toks": "['SELECT', 'T1.Name', 'FROM', 'people', 'AS', 'T1', 'JOIN', 'poker_player', 'AS', 'T2', 'ON', 'T1.People_ID', '=', 'T2.People_ID']",
    "query_toks_no_value": "['select', 't1', '.', 'name', 'from', 'people', 'as', 't1', 'join', 'poker_player', 'as', 't2', 'on', 't1', '.', 'people_id', '=', 't2', '.', 'people_id']",
    "question": "What are the names of poker players?",
    "question_th": "ผู้เล่นโป๊กเกอร์ชื่ออะไร?",
    "question_toks": "['What', 'are', 'the', 'names', 'of', 'poker', 'players', '?']",
    "sql": "{'from': {'table_units': [['table_unit', 1], ['table_unit', 0]], 'conds': [[False, 2, [0, [0, 7, False], None], [0, 2, False], None]]}, 'select': [False, [[0, [0, [0, 9, False], None]]]], 'where': [], 'groupBy': [], 'having': [], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "poker_player",
    "query": "SELECT T1.Name FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID",
    "query_toks": "['SELECT', 'T1.Name', 'FROM', 'people', 'AS', 'T1', 'JOIN', 'poker_player', 'AS', 'T2', 'ON', 'T1.People_ID', '=', 'T2.People_ID']",
    "query_toks_no_value": "['select', 't1', '.', 'name', 'from', 'people', 'as', 't1', 'join', 'poker_player', 'as', 't2', 'on', 't1', '.', 'people_id', '=', 't2', '.', 'people_id']",
    "question": "Return the names of all the poker players.",
    "question_th": "ส่งกลับชื่อของผู้เล่นโป๊กเกอร์ทั้งหมด",
    "question_toks": "['Return', 'the', 'names', 'of', 'all', 'the', 'poker', 'players', '.']",
    "sql": "{'from': {'table_units': [['table_unit', 1], ['table_unit', 0]], 'conds': [[False, 2, [0, [0, 7, False], None], [0, 2, False], None]]}, 'select': [False, [[0, [0, [0, 9, False], None]]]], 'where': [], 'groupBy': [], 'having': [], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "poker_player",
    "query": "SELECT T1.Name FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID WHERE T2.Earnings  >  300000",
    "query_toks": "['SELECT', 'T1.Name', 'FROM', 'people', 'AS', 'T1', 'JOIN', 'poker_player', 'AS', 'T2', 'ON', 'T1.People_ID', '=', 'T2.People_ID', 'WHERE', 'T2.Earnings', '>', '300000']",
    "query_toks_no_value": "['select', 't1', '.', 'name', 'from', 'people', 'as', 't1', 'join', 'poker_player', 'as', 't2', 'on', 't1', '.', 'people_id', '=', 't2', '.', 'people_id', 'where', 't2', '.', 'earnings', '>', 'value']",
    "question": "What are the names of poker players whose earnings is higher than 300000?",
    "question_th": "ผู้เล่นโป๊กเกอร์ที่มีรายได้มากกว่า 300,000 ชื่ออะไร?",
    "question_toks": "['What', 'are', 'the', 'names', 'of', 'poker', 'players', 'whose', 'earnings', 'is', 'higher', 'than', '300000', '?']",
    "sql": "{'from': {'table_units': [['table_unit', 1], ['table_unit', 0]], 'conds': [[False, 2, [0, [0, 7, False], None], [0, 2, False], None]]}, 'select': [False, [[0, [0, [0, 9, False], None]]]], 'where': [[False, 3, [0, [0, 6, False], None], 300000.0, None]], 'groupBy': [], 'having': [], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "poker_player",
    "query": "SELECT T1.Name FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID WHERE T2.Earnings  >  300000",
    "query_toks": "['SELECT', 'T1.Name', 'FROM', 'people', 'AS', 'T1', 'JOIN', 'poker_player', 'AS', 'T2', 'ON', 'T1.People_ID', '=', 'T2.People_ID', 'WHERE', 'T2.Earnings', '>', '300000']",
    "query_toks_no_value": "['select', 't1', '.', 'name', 'from', 'people', 'as', 't1', 'join', 'poker_player', 'as', 't2', 'on', 't1', '.', 'people_id', '=', 't2', '.', 'people_id', 'where', 't2', '.', 'earnings', '>', 'value']",
    "question": "Give the names of poker players who have earnings above 300000.",
    "question_th": "ระบุชื่อผู้เล่นโป๊กเกอร์ที่มีรายได้มากกว่า 300,000",
    "question_toks": "['Give', 'the', 'names', 'of', 'poker', 'players', 'who', 'have', 'earnings', 'above', '300000', '.']",
    "sql": "{'from': {'table_units': [['table_unit', 1], ['table_unit', 0]], 'conds': [[False, 2, [0, [0, 7, False], None], [0, 2, False], None]]}, 'select': [False, [[0, [0, [0, 9, False], None]]]], 'where': [[False, 3, [0, [0, 6, False], None], 300000.0, None]], 'groupBy': [], 'having': [], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "poker_player",
    "query": "SELECT T1.Name FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID ORDER BY T2.Final_Table_Made",
    "query_toks": "['SELECT', 'T1.Name', 'FROM', 'people', 'AS', 'T1', 'JOIN', 'poker_player', 'AS', 'T2', 'ON', 'T1.People_ID', '=', 'T2.People_ID', 'ORDER', 'BY', 'T2.Final_Table_Made']",
    "query_toks_no_value": "['select', 't1', '.', 'name', 'from', 'people', 'as', 't1', 'join', 'poker_player', 'as', 't2', 'on', 't1', '.', 'people_id', '=', 't2', '.', 'people_id', 'order', 'by', 't2', '.', 'final_table_made']",
    "question": "List the names of poker players ordered by the final tables made in ascending order.",
    "question_th": "รายชื่อผู้เล่นโป๊กเกอร์เรียงตามโต๊ะสุดท้ายตามลำดับจากน้อยไปหามาก",
    "question_toks": "['List', 'the', 'names', 'of', 'poker', 'players', 'ordered', 'by', 'the', 'final', 'tables', 'made', 'in', 'ascending', 'order', '.']",
    "sql": "{'from': {'table_units': [['table_unit', 1], ['table_unit', 0]], 'conds': [[False, 2, [0, [0, 7, False], None], [0, 2, False], None]]}, 'select': [False, [[0, [0, [0, 9, False], None]]]], 'where': [], 'groupBy': [], 'having': [], 'orderBy': ['asc', [[0, [0, 3, False], None]]], 'limit': None, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "poker_player",
    "query": "SELECT T1.Name FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID ORDER BY T2.Final_Table_Made",
    "query_toks": "['SELECT', 'T1.Name', 'FROM', 'people', 'AS', 'T1', 'JOIN', 'poker_player', 'AS', 'T2', 'ON', 'T1.People_ID', '=', 'T2.People_ID', 'ORDER', 'BY', 'T2.Final_Table_Made']",
    "query_toks_no_value": "['select', 't1', '.', 'name', 'from', 'people', 'as', 't1', 'join', 'poker_player', 'as', 't2', 'on', 't1', '.', 'people_id', '=', 't2', '.', 'people_id', 'order', 'by', 't2', '.', 'final_table_made']",
    "question": "What are the names of poker players, ordered ascending by the number of final tables they have made?",
    "question_th": "ผู้เล่นโป๊กเกอร์ชื่ออะไร เรียงลำดับจากน้อยไปหามากตามจำนวนโต๊ะสุดท้ายที่พวกเขาทำ?",
    "question_toks": "['What', 'are', 'the', 'names', 'of', 'poker', 'players', ',', 'ordered', 'ascending', 'by', 'the', 'number', 'of', 'final', 'tables', 'they', 'have', 'made', '?']",
    "sql": "{'from': {'table_units': [['table_unit', 1], ['table_unit', 0]], 'conds': [[False, 2, [0, [0, 7, False], None], [0, 2, False], None]]}, 'select': [False, [[0, [0, [0, 9, False], None]]]], 'where': [], 'groupBy': [], 'having': [], 'orderBy': ['asc', [[0, [0, 3, False], None]]], 'limit': None, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "poker_player",
    "query": "SELECT T1.Birth_Date FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID ORDER BY T2.Earnings ASC LIMIT 1",
    "query_toks": "['SELECT', 'T1.Birth_Date', 'FROM', 'people', 'AS', 'T1', 'JOIN', 'poker_player', 'AS', 'T2', 'ON', 'T1.People_ID', '=', 'T2.People_ID', 'ORDER', 'BY', 'T2.Earnings', 'ASC', 'LIMIT', '1']",
    "query_toks_no_value": "['select', 't1', '.', 'birth_date', 'from', 'people', 'as', 't1', 'join', 'poker_player', 'as', 't2', 'on', 't1', '.', 'people_id', '=', 't2', '.', 'people_id', 'order', 'by', 't2', '.', 'earnings', 'asc', 'limit', 'value']",
    "question": "What is the birth date of the poker player with the lowest earnings?",
    "question_th": "วันเกิดของผู้เล่นโป๊กเกอร์ที่มีรายได้ต่ำที่สุดคือวันที่เท่าไหร่?",
    "question_toks": "['What', 'is', 'the', 'birth', 'date', 'of', 'the', 'poker', 'player', 'with', 'the', 'lowest', 'earnings', '?']",
    "sql": "{'from': {'table_units': [['table_unit', 1], ['table_unit', 0]], 'conds': [[False, 2, [0, [0, 7, False], None], [0, 2, False], None]]}, 'select': [False, [[0, [0, [0, 10, False], None]]]], 'where': [], 'groupBy': [], 'having': [], 'orderBy': ['asc', [[0, [0, 6, False], None]]], 'limit': 1, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "poker_player",
    "query": "SELECT T1.Birth_Date FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID ORDER BY T2.Earnings ASC LIMIT 1",
    "query_toks": "['SELECT', 'T1.Birth_Date', 'FROM', 'people', 'AS', 'T1', 'JOIN', 'poker_player', 'AS', 'T2', 'ON', 'T1.People_ID', '=', 'T2.People_ID', 'ORDER', 'BY', 'T2.Earnings', 'ASC', 'LIMIT', '1']",
    "query_toks_no_value": "['select', 't1', '.', 'birth_date', 'from', 'people', 'as', 't1', 'join', 'poker_player', 'as', 't2', 'on', 't1', '.', 'people_id', '=', 't2', '.', 'people_id', 'order', 'by', 't2', '.', 'earnings', 'asc', 'limit', 'value']",
    "question": "Return the birth date of the poker player with the lowest earnings.",
    "question_th": "กลับวันเกิดของผู้เล่นโป๊กเกอร์ที่มีรายได้ต่ำที่สุด",
    "question_toks": "['Return', 'the', 'birth', 'date', 'of', 'the', 'poker', 'player', 'with', 'the', 'lowest', 'earnings', '.']",
    "sql": "{'from': {'table_units': [['table_unit', 1], ['table_unit', 0]], 'conds': [[False, 2, [0, [0, 7, False], None], [0, 2, False], None]]}, 'select': [False, [[0, [0, [0, 10, False], None]]]], 'where': [], 'groupBy': [], 'having': [], 'orderBy': ['asc', [[0, [0, 6, False], None]]], 'limit': 1, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "poker_player",
    "query": "SELECT T2.Money_Rank FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID ORDER BY T1.Height DESC LIMIT 1",
    "query_toks": "['SELECT', 'T2.Money_Rank', 'FROM', 'people', 'AS', 'T1', 'JOIN', 'poker_player', 'AS', 'T2', 'ON', 'T1.People_ID', '=', 'T2.People_ID', 'ORDER', 'BY', 'T1.Height', 'DESC', 'LIMIT', '1']",
    "query_toks_no_value": "['select', 't2', '.', 'money_rank', 'from', 'people', 'as', 't1', 'join', 'poker_player', 'as', 't2', 'on', 't1', '.', 'people_id', '=', 't2', '.', 'people_id', 'order', 'by', 't1', '.', 'height', 'desc', 'limit', 'value']",
    "question": "What is the money rank of the tallest poker player?",
    "question_th": "อันดับเงินของผู้เล่นโป๊กเกอร์ที่สูงที่สุดคืออะไร?",
    "question_toks": "['What', 'is', 'the', 'money', 'rank', 'of', 'the', 'tallest', 'poker', 'player', '?']",
    "sql": "{'from': {'table_units': [['table_unit', 1], ['table_unit', 0]], 'conds': [[False, 2, [0, [0, 7, False], None], [0, 2, False], None]]}, 'select': [False, [[0, [0, [0, 5, False], None]]]], 'where': [], 'groupBy': [], 'having': [], 'orderBy': ['desc', [[0, [0, 11, False], None]]], 'limit': 1, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "poker_player",
    "query": "SELECT T2.Money_Rank FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID ORDER BY T1.Height DESC LIMIT 1",
    "query_toks": "['SELECT', 'T2.Money_Rank', 'FROM', 'people', 'AS', 'T1', 'JOIN', 'poker_player', 'AS', 'T2', 'ON', 'T1.People_ID', '=', 'T2.People_ID', 'ORDER', 'BY', 'T1.Height', 'DESC', 'LIMIT', '1']",
    "query_toks_no_value": "['select', 't2', '.', 'money_rank', 'from', 'people', 'as', 't1', 'join', 'poker_player', 'as', 't2', 'on', 't1', '.', 'people_id', '=', 't2', '.', 'people_id', 'order', 'by', 't1', '.', 'height', 'desc', 'limit', 'value']",
    "question": "Return the money rank of the poker player with the greatest height.",
    "question_th": "คืนอันดับเงินของผู้เล่นโป๊กเกอร์ที่มีส่วนสูงที่สุด",
    "question_toks": "['Return', 'the', 'money', 'rank', 'of', 'the', 'poker', 'player', 'with', 'the', 'greatest', 'height', '.']",
    "sql": "{'from': {'table_units': [['table_unit', 1], ['table_unit', 0]], 'conds': [[False, 2, [0, [0, 7, False], None], [0, 2, False], None]]}, 'select': [False, [[0, [0, [0, 5, False], None]]]], 'where': [], 'groupBy': [], 'having': [], 'orderBy': ['desc', [[0, [0, 11, False], None]]], 'limit': 1, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "poker_player",
    "query": "SELECT avg(T2.Earnings) FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID WHERE T1.Height  >  200",
    "query_toks": "['SELECT', 'avg', '(', 'T2.Earnings', ')', 'FROM', 'people', 'AS', 'T1', 'JOIN', 'poker_player', 'AS', 'T2', 'ON', 'T1.People_ID', '=', 'T2.People_ID', 'WHERE', 'T1.Height', '>', '200']",
    "query_toks_no_value": "['select', 'avg', '(', 't2', '.', 'earnings', ')', 'from', 'people', 'as', 't1', 'join', 'poker_player', 'as', 't2', 'on', 't1', '.', 'people_id', '=', 't2', '.', 'people_id', 'where', 't1', '.', 'height', '>', 'value']",
    "question": "What is the average earnings of poker players with height higher than 200?",
    "question_th": "รายได้เฉลี่ยของผู้เล่นโป๊กเกอร์ที่มีส่วนสูงมากกว่า 200 เป็นเท่าใด?",
    "question_toks": "['What', 'is', 'the', 'average', 'earnings', 'of', 'poker', 'players', 'with', 'height', 'higher', 'than', '200', '?']",
    "sql": "{'from': {'table_units': [['table_unit', 1], ['table_unit', 0]], 'conds': [[False, 2, [0, [0, 7, False], None], [0, 2, False], None]]}, 'select': [False, [[5, [0, [0, 6, False], None]]]], 'where': [[False, 3, [0, [0, 11, False], None], 200.0, None]], 'groupBy': [], 'having': [], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "poker_player",
    "query": "SELECT avg(T2.Earnings) FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID WHERE T1.Height  >  200",
    "query_toks": "['SELECT', 'avg', '(', 'T2.Earnings', ')', 'FROM', 'people', 'AS', 'T1', 'JOIN', 'poker_player', 'AS', 'T2', 'ON', 'T1.People_ID', '=', 'T2.People_ID', 'WHERE', 'T1.Height', '>', '200']",
    "query_toks_no_value": "['select', 'avg', '(', 't2', '.', 'earnings', ')', 'from', 'people', 'as', 't1', 'join', 'poker_player', 'as', 't2', 'on', 't1', '.', 'people_id', '=', 't2', '.', 'people_id', 'where', 't1', '.', 'height', '>', 'value']",
    "question": "Give average earnings of poker players who are taller than 200.",
    "question_th": "ให้รายได้เฉลี่ยของผู้เล่นโป๊กเกอร์ที่สูงกว่า 200",
    "question_toks": "['Give', 'average', 'earnings', 'of', 'poker', 'players', 'who', 'are', 'taller', 'than', '200', '.']",
    "sql": "{'from': {'table_units': [['table_unit', 1], ['table_unit', 0]], 'conds': [[False, 2, [0, [0, 7, False], None], [0, 2, False], None]]}, 'select': [False, [[5, [0, [0, 6, False], None]]]], 'where': [[False, 3, [0, [0, 11, False], None], 200.0, None]], 'groupBy': [], 'having': [], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "poker_player",
    "query": "SELECT T1.Name FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID ORDER BY T2.Earnings DESC",
    "query_toks": "['SELECT', 'T1.Name', 'FROM', 'people', 'AS', 'T1', 'JOIN', 'poker_player', 'AS', 'T2', 'ON', 'T1.People_ID', '=', 'T2.People_ID', 'ORDER', 'BY', 'T2.Earnings', 'DESC']",
    "query_toks_no_value": "['select', 't1', '.', 'name', 'from', 'people', 'as', 't1', 'join', 'poker_player', 'as', 't2', 'on', 't1', '.', 'people_id', '=', 't2', '.', 'people_id', 'order', 'by', 't2', '.', 'earnings', 'desc']",
    "question": "What are the names of poker players in descending order of earnings?",
    "question_th": "ผู้เล่นโป๊กเกอร์ชื่ออะไรโดยเรียงตามรายรับจากมากไปหาน้อย?",
    "question_toks": "['What', 'are', 'the', 'names', 'of', 'poker', 'players', 'in', 'descending', 'order', 'of', 'earnings', '?']",
    "sql": "{'from': {'table_units': [['table_unit', 1], ['table_unit', 0]], 'conds': [[False, 2, [0, [0, 7, False], None], [0, 2, False], None]]}, 'select': [False, [[0, [0, [0, 9, False], None]]]], 'where': [], 'groupBy': [], 'having': [], 'orderBy': ['desc', [[0, [0, 6, False], None]]], 'limit': None, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "poker_player",
    "query": "SELECT T1.Name FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID ORDER BY T2.Earnings DESC",
    "query_toks": "['SELECT', 'T1.Name', 'FROM', 'people', 'AS', 'T1', 'JOIN', 'poker_player', 'AS', 'T2', 'ON', 'T1.People_ID', '=', 'T2.People_ID', 'ORDER', 'BY', 'T2.Earnings', 'DESC']",
    "query_toks_no_value": "['select', 't1', '.', 'name', 'from', 'people', 'as', 't1', 'join', 'poker_player', 'as', 't2', 'on', 't1', '.', 'people_id', '=', 't2', '.', 'people_id', 'order', 'by', 't2', '.', 'earnings', 'desc']",
    "question": "Return the names of poker players sorted by their earnings descending.",
    "question_th": "ส่งคืนชื่อผู้เล่นโป๊กเกอร์โดยเรียงตามรายได้มากไปหาน้อย",
    "question_toks": "['Return', 'the', 'names', 'of', 'poker', 'players', 'sorted', 'by', 'their', 'earnings', 'descending', '.']",
    "sql": "{'from': {'table_units': [['table_unit', 1], ['table_unit', 0]], 'conds': [[False, 2, [0, [0, 7, False], None], [0, 2, False], None]]}, 'select': [False, [[0, [0, [0, 9, False], None]]]], 'where': [], 'groupBy': [], 'having': [], 'orderBy': ['desc', [[0, [0, 6, False], None]]], 'limit': None, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "poker_player",
    "query": "SELECT Nationality ,  COUNT(*) FROM people GROUP BY Nationality",
    "query_toks": "['SELECT', 'Nationality', ',', 'COUNT', '(', '*', ')', 'FROM', 'people', 'GROUP', 'BY', 'Nationality']",
    "query_toks_no_value": "['select', 'nationality', ',', 'count', '(', '*', ')', 'from', 'people', 'group', 'by', 'nationality']",
    "question": "What are different nationalities of people and the corresponding number of people from each nation?",
    "question_th": "เชื้อชาติของผู้คนและจำนวนผู้คนจากแต่ละประเทศมีอะไรบ้าง?",
    "question_toks": "['What', 'are', 'different', 'nationalities', 'of', 'people', 'and', 'the', 'corresponding', 'number', 'of', 'people', 'from', 'each', 'nation', '?']",
    "sql": "{'from': {'table_units': [['table_unit', 1]], 'conds': []}, 'select': [False, [[0, [0, [0, 8, False], None]], [3, [0, [0, 0, False], None]]]], 'where': [], 'groupBy': [[0, 8, False]], 'having': [], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "poker_player",
    "query": "SELECT Nationality ,  COUNT(*) FROM people GROUP BY Nationality",
    "query_toks": "['SELECT', 'Nationality', ',', 'COUNT', '(', '*', ')', 'FROM', 'people', 'GROUP', 'BY', 'Nationality']",
    "query_toks_no_value": "['select', 'nationality', ',', 'count', '(', '*', ')', 'from', 'people', 'group', 'by', 'nationality']",
    "question": "How many people are there of each nationality?",
    "question_th": "แต่ละสัญชาติมีกี่คน?",
    "question_toks": "['How', 'many', 'people', 'are', 'there', 'of', 'each', 'nationality', '?']",
    "sql": "{'from': {'table_units': [['table_unit', 1]], 'conds': []}, 'select': [False, [[0, [0, [0, 8, False], None]], [3, [0, [0, 0, False], None]]]], 'where': [], 'groupBy': [[0, 8, False]], 'having': [], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "poker_player",
    "query": "SELECT Nationality FROM people GROUP BY Nationality ORDER BY COUNT(*) DESC LIMIT 1",
    "query_toks": "['SELECT', 'Nationality', 'FROM', 'people', 'GROUP', 'BY', 'Nationality', 'ORDER', 'BY', 'COUNT', '(', '*', ')', 'DESC', 'LIMIT', '1']",
    "query_toks_no_value": "['select', 'nationality', 'from', 'people', 'group', 'by', 'nationality', 'order', 'by', 'count', '(', '*', ')', 'desc', 'limit', 'value']",
    "question": "What is the most common nationality of people?",
    "question_th": "คนส่วนใหญ่มีสัญชาติอะไร?",
    "question_toks": "['What', 'is', 'the', 'most', 'common', 'nationality', 'of', 'people', '?']",
    "sql": "{'from': {'table_units': [['table_unit', 1]], 'conds': []}, 'select': [False, [[0, [0, [0, 8, False], None]]]], 'where': [], 'groupBy': [[0, 8, False]], 'having': [], 'orderBy': ['desc', [[0, [3, 0, False], None]]], 'limit': 1, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "poker_player",
    "query": "SELECT Nationality FROM people GROUP BY Nationality ORDER BY COUNT(*) DESC LIMIT 1",
    "query_toks": "['SELECT', 'Nationality', 'FROM', 'people', 'GROUP', 'BY', 'Nationality', 'ORDER', 'BY', 'COUNT', '(', '*', ')', 'DESC', 'LIMIT', '1']",
    "query_toks_no_value": "['select', 'nationality', 'from', 'people', 'group', 'by', 'nationality', 'order', 'by', 'count', '(', '*', ')', 'desc', 'limit', 'value']",
    "question": "Give the nationality that is most common across all people.",
    "question_th": "ให้สัญชาติที่แพร่หลายมากที่สุดสำหรับทุกคน",
    "question_toks": "['Give', 'the', 'nationality', 'that', 'is', 'most', 'common', 'across', 'all', 'people', '.']",
    "sql": "{'from': {'table_units': [['table_unit', 1]], 'conds': []}, 'select': [False, [[0, [0, [0, 8, False], None]]]], 'where': [], 'groupBy': [[0, 8, False]], 'having': [], 'orderBy': ['desc', [[0, [3, 0, False], None]]], 'limit': 1, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "poker_player",
    "query": "SELECT Nationality FROM people GROUP BY Nationality HAVING COUNT(*)  >=  2",
    "query_toks": "['SELECT', 'Nationality', 'FROM', 'people', 'GROUP', 'BY', 'Nationality', 'HAVING', 'COUNT', '(', '*', ')', '>', '=', '2']",
    "query_toks_no_value": "['select', 'nationality', 'from', 'people', 'group', 'by', 'nationality', 'having', 'count', '(', '*', ')', '>', '=', 'value']",
    "question": "What are the nationalities that are shared by at least two people?",
    "question_th": "เชื้อชาติใดบ้างที่มีคนร่วมกันอย่างน้อยสองคน?",
    "question_toks": "['What', 'are', 'the', 'nationalities', 'that', 'are', 'shared', 'by', 'at', 'least', 'two', 'people', '?']",
    "sql": "{'from': {'table_units': [['table_unit', 1]], 'conds': []}, 'select': [False, [[0, [0, [0, 8, False], None]]]], 'where': [], 'groupBy': [[0, 8, False]], 'having': [[False, 5, [0, [3, 0, False], None], 2.0, None]], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "poker_player",
    "query": "SELECT Nationality FROM people GROUP BY Nationality HAVING COUNT(*)  >=  2",
    "query_toks": "['SELECT', 'Nationality', 'FROM', 'people', 'GROUP', 'BY', 'Nationality', 'HAVING', 'COUNT', '(', '*', ')', '>', '=', '2']",
    "query_toks_no_value": "['select', 'nationality', 'from', 'people', 'group', 'by', 'nationality', 'having', 'count', '(', '*', ')', '>', '=', 'value']",
    "question": "Return the nationalities for which there are two or more people.",
    "question_th": "ส่งกลับสัญชาติที่มีคนตั้งแต่สองคนขึ้นไป",
    "question_toks": "['Return', 'the', 'nationalities', 'for', 'which', 'there', 'are', 'two', 'or', 'more', 'people', '.']",
    "sql": "{'from': {'table_units': [['table_unit', 1]], 'conds': []}, 'select': [False, [[0, [0, [0, 8, False], None]]]], 'where': [], 'groupBy': [[0, 8, False]], 'having': [[False, 5, [0, [3, 0, False], None], 2.0, None]], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "poker_player",
    "query": "SELECT Name ,  Birth_Date FROM people ORDER BY Name ASC",
    "query_toks": "['SELECT', 'Name', ',', 'Birth_Date', 'FROM', 'people', 'ORDER', 'BY', 'Name', 'ASC']",
    "query_toks_no_value": "['select', 'name', ',', 'birth_date', 'from', 'people', 'order', 'by', 'name', 'asc']",
    "question": "List the names and birth dates of people in ascending alphabetical order of name.",
    "question_th": "รายชื่อและวันเกิดของบุคคลตามลำดับตัวอักษรจากน้อยไปหามาก",
    "question_toks": "['List', 'the', 'names', 'and', 'birth', 'dates', 'of', 'people', 'in', 'ascending', 'alphabetical', 'order', 'of', 'name', '.']",
    "sql": "{'from': {'table_units': [['table_unit', 1]], 'conds': []}, 'select': [False, [[0, [0, [0, 9, False], None]], [0, [0, [0, 10, False], None]]]], 'where': [], 'groupBy': [], 'having': [], 'orderBy': ['asc', [[0, [0, 9, False], None]]], 'limit': None, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "poker_player",
    "query": "SELECT Name ,  Birth_Date FROM people ORDER BY Name ASC",
    "query_toks": "['SELECT', 'Name', ',', 'Birth_Date', 'FROM', 'people', 'ORDER', 'BY', 'Name', 'ASC']",
    "query_toks_no_value": "['select', 'name', ',', 'birth_date', 'from', 'people', 'order', 'by', 'name', 'asc']",
    "question": "What are the names and birth dates of people, ordered by their names in alphabetical order?",
    "question_th": "ชื่อและวันเกิดของคนคืออะไร เรียงตามชื่อตามลำดับตัวอักษร?",
    "question_toks": "['What', 'are', 'the', 'names', 'and', 'birth', 'dates', 'of', 'people', ',', 'ordered', 'by', 'their', 'names', 'in', 'alphabetical', 'order', '?']",
    "sql": "{'from': {'table_units': [['table_unit', 1]], 'conds': []}, 'select': [False, [[0, [0, [0, 9, False], None]], [0, [0, [0, 10, False], None]]]], 'where': [], 'groupBy': [], 'having': [], 'orderBy': ['asc', [[0, [0, 9, False], None]]], 'limit': None, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "poker_player",
    "query": "SELECT Name FROM people WHERE Nationality != \"Russia\"",
    "query_toks": "['SELECT', 'Name', 'FROM', 'people', 'WHERE', 'Nationality', '!', '=', '``', 'Russia', \"''\"]",
    "query_toks_no_value": "['select', 'name', 'from', 'people', 'where', 'nationality', '!', '=', 'value']",
    "question": "Show names of people whose nationality is not \"Russia\".",
    "question_th": "แสดงชื่อบุคคลซึ่งไม่ใช่สัญชาติ \"รัสเซีย\"",
    "question_toks": "['Show', 'names', 'of', 'people', 'whose', 'nationality', 'is', 'not', '``', 'Russia', \"''\", '.']",
    "sql": "{'from': {'table_units': [['table_unit', 1]], 'conds': []}, 'select': [False, [[0, [0, [0, 9, False], None]]]], 'where': [[False, 7, [0, [0, 8, False], None], '\"Russia\"', None]], 'groupBy': [], 'having': [], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "poker_player",
    "query": "SELECT Name FROM people WHERE Nationality != \"Russia\"",
    "query_toks": "['SELECT', 'Name', 'FROM', 'people', 'WHERE', 'Nationality', '!', '=', '``', 'Russia', \"''\"]",
    "query_toks_no_value": "['select', 'name', 'from', 'people', 'where', 'nationality', '!', '=', 'value']",
    "question": "What are the names of people who are not from Russia?",
    "question_th": "คนที่ไม่ได้มาจากรัสเซียชื่ออะไร?",
    "question_toks": "['What', 'are', 'the', 'names', 'of', 'people', 'who', 'are', 'not', 'from', 'Russia', '?']",
    "sql": "{'from': {'table_units': [['table_unit', 1]], 'conds': []}, 'select': [False, [[0, [0, [0, 9, False], None]]]], 'where': [[False, 7, [0, [0, 8, False], None], '\"Russia\"', None]], 'groupBy': [], 'having': [], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "poker_player",
    "query": "SELECT Name FROM people WHERE People_ID NOT IN (SELECT People_ID FROM poker_player)",
    "query_toks": "['SELECT', 'Name', 'FROM', 'people', 'WHERE', 'People_ID', 'NOT', 'IN', '(', 'SELECT', 'People_ID', 'FROM', 'poker_player', ')']",
    "query_toks_no_value": "['select', 'name', 'from', 'people', 'where', 'people_id', 'not', 'in', '(', 'select', 'people_id', 'from', 'poker_player', ')']",
    "question": "List the names of people that are not poker players.",
    "question_th": "รายชื่อบุคคลที่ไม่ใช่ผู้เล่นโป๊กเกอร์",
    "question_toks": "['List', 'the', 'names', 'of', 'people', 'that', 'are', 'not', 'poker', 'players', '.']",
    "sql": "{'from': {'table_units': [['table_unit', 1]], 'conds': []}, 'select': [False, [[0, [0, [0, 9, False], None]]]], 'where': [[True, 8, [0, [0, 7, False], None], {'from': {'table_units': [['table_unit', 0]], 'conds': []}, 'select': [False, [[0, [0, [0, 2, False], None]]]], 'where': [], 'groupBy': [], 'having': [], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}, None]], 'groupBy': [], 'having': [], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "poker_player",
    "query": "SELECT Name FROM people WHERE People_ID NOT IN (SELECT People_ID FROM poker_player)",
    "query_toks": "['SELECT', 'Name', 'FROM', 'people', 'WHERE', 'People_ID', 'NOT', 'IN', '(', 'SELECT', 'People_ID', 'FROM', 'poker_player', ')']",
    "query_toks_no_value": "['select', 'name', 'from', 'people', 'where', 'people_id', 'not', 'in', '(', 'select', 'people_id', 'from', 'poker_player', ')']",
    "question": "What are the names of people who do not play poker?",
    "question_th": "คนที่ไม่เล่นโป๊กเกอร์ชื่ออะไร?",
    "question_toks": "['What', 'are', 'the', 'names', 'of', 'people', 'who', 'do', 'not', 'play', 'poker', '?']",
    "sql": "{'from': {'table_units': [['table_unit', 1]], 'conds': []}, 'select': [False, [[0, [0, [0, 9, False], None]]]], 'where': [[True, 8, [0, [0, 7, False], None], {'from': {'table_units': [['table_unit', 0]], 'conds': []}, 'select': [False, [[0, [0, [0, 2, False], None]]]], 'where': [], 'groupBy': [], 'having': [], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}, None]], 'groupBy': [], 'having': [], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "poker_player",
    "query": "SELECT count(DISTINCT Nationality) FROM people",
    "query_toks": "['SELECT', 'count', '(', 'DISTINCT', 'Nationality', ')', 'FROM', 'people']",
    "query_toks_no_value": "['select', 'count', '(', 'distinct', 'nationality', ')', 'from', 'people']",
    "question": "How many distinct nationalities are there?",
    "question_th": "มีกี่เชื้อชาติที่แตกต่างกัน?",
    "question_toks": "['How', 'many', 'distinct', 'nationalities', 'are', 'there', '?']",
    "sql": "{'from': {'table_units': [['table_unit', 1]], 'conds': []}, 'select': [False, [[3, [0, [0, 8, True], None]]]], 'where': [], 'groupBy': [], 'having': [], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "poker_player",
    "query": "SELECT count(DISTINCT Nationality) FROM people",
    "query_toks": "['SELECT', 'count', '(', 'DISTINCT', 'Nationality', ')', 'FROM', 'people']",
    "query_toks_no_value": "['select', 'count', '(', 'distinct', 'nationality', ')', 'from', 'people']",
    "question": "Count the number of different nationalities.",
    "question_th": "นับจำนวนเชื้อชาติต่างๆ",
    "question_toks": "['Count', 'the', 'number', 'of', 'different', 'nationalities', '.']",
    "sql": "{'from': {'table_units': [['table_unit', 1]], 'conds': []}, 'select': [False, [[3, [0, [0, 8, True], None]]]], 'where': [], 'groupBy': [], 'having': [], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "voter_1",
    "query": "SELECT count(*) FROM area_code_state",
    "query_toks": "['SELECT', 'count', '(', '*', ')', 'FROM', 'area_code_state']",
    "query_toks_no_value": "['select', 'count', '(', '*', ')', 'from', 'area_code_state']",
    "question": "How many states are there?",
    "question_th": "มีกี่รัฐ?",
    "question_toks": "['How', 'many', 'states', 'are', 'there', '?']",
    "sql": "{'from': {'table_units': [['table_unit', 0]], 'conds': []}, 'select': [False, [[3, [0, [0, 0, False], None]]]], 'where': [], 'groupBy': [], 'having': [], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "voter_1",
    "query": "SELECT contestant_number ,  contestant_name FROM contestants ORDER BY contestant_name DESC",
    "query_toks": "['SELECT', 'contestant_number', ',', 'contestant_name', 'FROM', 'contestants', 'ORDER', 'BY', 'contestant_name', 'DESC']",
    "query_toks_no_value": "['select', 'contestant_number', ',', 'contestant_name', 'from', 'contestants', 'order', 'by', 'contestant_name', 'desc']",
    "question": "List the contestant numbers and names, ordered by contestant name descending.",
    "question_th": "ระบุหมายเลขและชื่อผู้เข้าแข่งขัน เรียงตามชื่อผู้เข้าแข่งขันจากมากไปน้อย",
    "question_toks": "['List', 'the', 'contestant', 'numbers', 'and', 'names', ',', 'ordered', 'by', 'contestant', 'name', 'descending', '.']",
    "sql": "{'from': {'table_units': [['table_unit', 1]], 'conds': []}, 'select': [False, [[0, [0, [0, 3, False], None]], [0, [0, [0, 4, False], None]]]], 'where': [], 'groupBy': [], 'having': [], 'orderBy': ['desc', [[0, [0, 4, False], None]]], 'limit': None, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "voter_1",
    "query": "SELECT vote_id ,  phone_number ,  state FROM votes",
    "query_toks": "['SELECT', 'vote_id', ',', 'phone_number', ',', 'state', 'FROM', 'votes']",
    "query_toks_no_value": "['select', 'vote_id', ',', 'phone_number', ',', 'state', 'from', 'votes']",
    "question": "List the vote ids, phone numbers and states of all votes.",
    "question_th": "ระบุรหัสการลงคะแนน หมายเลขโทรศัพท์ และสถานะของการลงคะแนนทั้งหมด",
    "question_toks": "['List', 'the', 'vote', 'ids', ',', 'phone', 'numbers', 'and', 'states', 'of', 'all', 'votes', '.']",
    "sql": "{'from': {'table_units': [['table_unit', 2]], 'conds': []}, 'select': [False, [[0, [0, [0, 5, False], None]], [0, [0, [0, 6, False], None]], [0, [0, [0, 7, False], None]]]], 'where': [], 'groupBy': [], 'having': [], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "voter_1",
    "query": "SELECT max(area_code) ,  min(area_code) FROM area_code_state",
    "query_toks": "['SELECT', 'max', '(', 'area_code', ')', ',', 'min', '(', 'area_code', ')', 'FROM', 'area_code_state']",
    "query_toks_no_value": "['select', 'max', '(', 'area_code', ')', ',', 'min', '(', 'area_code', ')', 'from', 'area_code_state']",
    "question": "What are the maximum and minimum values of area codes?",
    "question_th": "ค่าสูงสุดและต่ำสุดของรหัสพื้นที่คือเท่าใด",
    "question_toks": "['What', 'are', 'the', 'maximum', 'and', 'minimum', 'values', 'of', 'area', 'codes', '?']",
    "sql": "{'from': {'table_units': [['table_unit', 0]], 'conds': []}, 'select': [False, [[1, [0, [0, 1, False], None]], [2, [0, [0, 1, False], None]]]], 'where': [], 'groupBy': [], 'having': [], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "voter_1",
    "query": "SELECT max(created) FROM votes WHERE state  =  'CA'",
    "query_toks": "['SELECT', 'max', '(', 'created', ')', 'FROM', 'votes', 'WHERE', 'state', '=', \"'CA\", \"'\"]",
    "query_toks_no_value": "['select', 'max', '(', 'created', ')', 'from', 'votes', 'where', 'state', '=', 'value']",
    "question": "What is last date created of votes from the state 'CA'?",
    "question_th": "วันสุดท้ายที่สร้างคะแนนเสียงจากรัฐ 'CA' คืออะไร?",
    "question_toks": "['What', 'is', 'last', 'date', 'created', 'of', 'votes', 'from', 'the', 'state', \"'CA\", \"'\", '?']",
    "sql": "{'from': {'table_units': [['table_unit', 2]], 'conds': []}, 'select': [False, [[1, [0, [0, 9, False], None]]]], 'where': [[False, 2, [0, [0, 7, False], None], '\"CA\"', None]], 'groupBy': [], 'having': [], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "voter_1",
    "query": "SELECT contestant_name FROM contestants WHERE contestant_name != 'Jessie Alloway'",
    "query_toks": "['SELECT', 'contestant_name', 'FROM', 'contestants', 'WHERE', 'contestant_name', '!', '=', \"'Jessie\", 'Alloway', \"'\"]",
    "query_toks_no_value": "['select', 'contestant_name', 'from', 'contestants', 'where', 'contestant_name', '!', '=', 'value']",
    "question": "What are the names of the contestants whose names are not 'Jessie Alloway'",
    "question_th": "ผู้เข้าแข่งขันที่ไม่ใช่ชื่อ 'เจสซี่ อโลเวย์' ชื่ออะไร",
    "question_toks": "['What', 'are', 'the', 'names', 'of', 'the', 'contestants', 'whose', 'names', 'are', 'not', \"'Jessie\", 'Alloway', \"'\"]",
    "sql": "{'from': {'table_units': [['table_unit', 1]], 'conds': []}, 'select': [False, [[0, [0, [0, 4, False], None]]]], 'where': [[False, 7, [0, [0, 4, False], None], '\"Jessie Alloway\"', None]], 'groupBy': [], 'having': [], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "voter_1",
    "query": "SELECT DISTINCT state ,  created FROM votes",
    "query_toks": "['SELECT', 'DISTINCT', 'state', ',', 'created', 'FROM', 'votes']",
    "query_toks_no_value": "['select', 'distinct', 'state', ',', 'created', 'from', 'votes']",
    "question": "What are the distinct states and create time of all votes?",
    "question_th": "รัฐที่แตกต่างและสร้างเวลาของการลงคะแนนเสียงทั้งหมดคืออะไร?",
    "question_toks": "['What', 'are', 'the', 'distinct', 'states', 'and', 'create', 'time', 'of', 'all', 'votes', '?']",
    "sql": "{'from': {'table_units': [['table_unit', 2]], 'conds': []}, 'select': [True, [[0, [0, [0, 7, False], None]], [0, [0, [0, 9, False], None]]]], 'where': [], 'groupBy': [], 'having': [], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "voter_1",
    "query": "SELECT T1.contestant_number , T1.contestant_name FROM contestants AS T1 JOIN votes AS T2 ON T1.contestant_number  =  T2.contestant_number GROUP BY T1.contestant_number HAVING count(*)  >=  2",
    "query_toks": "['SELECT', 'T1.contestant_number', ',', 'T1.contestant_name', 'FROM', 'contestants', 'AS', 'T1', 'JOIN', 'votes', 'AS', 'T2', 'ON', 'T1.contestant_number', '=', 'T2.contestant_number', 'GROUP', 'BY', 'T1.contestant_number', 'HAVING', 'count', '(', '*', ')', '>', '=', '2']",
    "query_toks_no_value": "['select', 't1', '.', 'contestant_number', ',', 't1', '.', 'contestant_name', 'from', 'contestants', 'as', 't1', 'join', 'votes', 'as', 't2', 'on', 't1', '.', 'contestant_number', '=', 't2', '.', 'contestant_number', 'group', 'by', 't1', '.', 'contestant_number', 'having', 'count', '(', '*', ')', '>', '=', 'value']",
    "question": "What are the contestant numbers and names of the contestants who had at least two votes?",
    "question_th": "หมายเลขผู้เข้าแข่งขันและชื่อของผู้เข้าแข่งขันที่ได้รับการโหวตอย่างน้อยสองเสียงคือข้อใด",
    "question_toks": "['What', 'are', 'the', 'contestant', 'numbers', 'and', 'names', 'of', 'the', 'contestants', 'who', 'had', 'at', 'least', 'two', 'votes', '?']",
    "sql": "{'from': {'table_units': [['table_unit', 1], ['table_unit', 2]], 'conds': [[False, 2, [0, [0, 3, False], None], [0, 8, False], None]]}, 'select': [False, [[0, [0, [0, 3, False], None]], [0, [0, [0, 4, False], None]]]], 'where': [], 'groupBy': [[0, 3, False]], 'having': [[False, 5, [0, [3, 0, False], None], 2.0, None]], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "voter_1",
    "query": "SELECT T1.contestant_number , T1.contestant_name FROM contestants AS T1 JOIN votes AS T2 ON T1.contestant_number  =  T2.contestant_number GROUP BY T1.contestant_number ORDER BY count(*) ASC LIMIT 1",
    "query_toks": "['SELECT', 'T1.contestant_number', ',', 'T1.contestant_name', 'FROM', 'contestants', 'AS', 'T1', 'JOIN', 'votes', 'AS', 'T2', 'ON', 'T1.contestant_number', '=', 'T2.contestant_number', 'GROUP', 'BY', 'T1.contestant_number', 'ORDER', 'BY', 'count', '(', '*', ')', 'ASC', 'LIMIT', '1']",
    "query_toks_no_value": "['select', 't1', '.', 'contestant_number', ',', 't1', '.', 'contestant_name', 'from', 'contestants', 'as', 't1', 'join', 'votes', 'as', 't2', 'on', 't1', '.', 'contestant_number', '=', 't2', '.', 'contestant_number', 'group', 'by', 't1', '.', 'contestant_number', 'order', 'by', 'count', '(', '*', ')', 'asc', 'limit', 'value']",
    "question": "Of all the contestants who got voted, what is the contestant number and name of the contestant who got least votes?",
    "question_th": "ในบรรดาผู้เข้าแข่งขันที่ได้รับการโหวตทั้งหมด ผู้เข้าแข่งขันที่ได้รับคะแนนโหวตน้อยที่สุดคือหมายเลขอะไรและชื่อผู้เข้าแข่งขันที่ได้คะแนนน้อยที่สุด?",
    "question_toks": "['Of', 'all', 'the', 'contestants', 'who', 'got', 'voted', ',', 'what', 'is', 'the', 'contestant', 'number', 'and', 'name', 'of', 'the', 'contestant', 'who', 'got', 'least', 'votes', '?']",
    "sql": "{'from': {'table_units': [['table_unit', 1], ['table_unit', 2]], 'conds': [[False, 2, [0, [0, 3, False], None], [0, 8, False], None]]}, 'select': [False, [[0, [0, [0, 3, False], None]], [0, [0, [0, 4, False], None]]]], 'where': [], 'groupBy': [[0, 3, False]], 'having': [], 'orderBy': ['asc', [[0, [3, 0, False], None]]], 'limit': 1, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "voter_1",
    "query": "SELECT count(*) FROM votes WHERE state  =  'NY' OR state  =  'CA'",
    "query_toks": "['SELECT', 'count', '(', '*', ')', 'FROM', 'votes', 'WHERE', 'state', '=', \"'NY\", \"'\", 'OR', 'state', '=', \"'CA\", \"'\"]",
    "query_toks_no_value": "['select', 'count', '(', '*', ')', 'from', 'votes', 'where', 'state', '=', 'value', 'or', 'state', '=', 'value']",
    "question": "What are the number of votes from state 'NY' or 'CA'?",
    "question_th": "จำนวนคะแนนเสียงจากรัฐ 'NY' หรือ 'CA' คือเท่าไร?",
    "question_toks": "['What', 'are', 'the', 'number', 'of', 'votes', 'from', 'state', \"'NY\", \"'\", 'or', \"'CA\", \"'\", '?']",
    "sql": "{'from': {'table_units': [['table_unit', 2]], 'conds': []}, 'select': [False, [[3, [0, [0, 0, False], None]]]], 'where': [[False, 2, [0, [0, 7, False], None], '\"NY\"', None], 'or', [False, 2, [0, [0, 7, False], None], '\"CA\"', None]], 'groupBy': [], 'having': [], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "voter_1",
    "query": "SELECT count(*) FROM contestants WHERE contestant_number NOT IN ( SELECT contestant_number FROM votes )",
    "query_toks": "['SELECT', 'count', '(', '*', ')', 'FROM', 'contestants', 'WHERE', 'contestant_number', 'NOT', 'IN', '(', 'SELECT', 'contestant_number', 'FROM', 'votes', ')']",
    "query_toks_no_value": "['select', 'count', '(', '*', ')', 'from', 'contestants', 'where', 'contestant_number', 'not', 'in', '(', 'select', 'contestant_number', 'from', 'votes', ')']",
    "question": "How many contestants did not get voted?",
    "question_th": "มีผู้เข้าแข่งขันกี่คนที่ไม่ได้รับการโหวต?",
    "question_toks": "['How', 'many', 'contestants', 'did', 'not', 'get', 'voted', '?']",
    "sql": "{'from': {'table_units': [['table_unit', 1]], 'conds': []}, 'select': [False, [[3, [0, [0, 0, False], None]]]], 'where': [[True, 8, [0, [0, 3, False], None], {'from': {'table_units': [['table_unit', 2]], 'conds': []}, 'select': [False, [[0, [0, [0, 8, False], None]]]], 'where': [], 'groupBy': [], 'having': [], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}, None]], 'groupBy': [], 'having': [], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "voter_1",
    "query": "SELECT T1.area_code FROM area_code_state AS T1 JOIN votes AS T2 ON T1.state  =  T2.state GROUP BY T1.area_code ORDER BY count(*) DESC LIMIT 1",
    "query_toks": "['SELECT', 'T1.area_code', 'FROM', 'area_code_state', 'AS', 'T1', 'JOIN', 'votes', 'AS', 'T2', 'ON', 'T1.state', '=', 'T2.state', 'GROUP', 'BY', 'T1.area_code', 'ORDER', 'BY', 'count', '(', '*', ')', 'DESC', 'LIMIT', '1']",
    "query_toks_no_value": "['select', 't1', '.', 'area_code', 'from', 'area_code_state', 'as', 't1', 'join', 'votes', 'as', 't2', 'on', 't1', '.', 'state', '=', 't2', '.', 'state', 'group', 'by', 't1', '.', 'area_code', 'order', 'by', 'count', '(', '*', ')', 'desc', 'limit', 'value']",
    "question": "What is the area code in which the most voters voted?",
    "question_th": "รหัสพื้นที่ที่ผู้ลงคะแนนเสียงลงคะแนนมากที่สุดคืออะไร?",
    "question_toks": "['What', 'is', 'the', 'area', 'code', 'in', 'which', 'the', 'most', 'voters', 'voted', '?']",
    "sql": "{'from': {'table_units': [['table_unit', 0], ['table_unit', 2]], 'conds': [[False, 2, [0, [0, 2, False], None], [0, 7, False], None]]}, 'select': [False, [[0, [0, [0, 1, False], None]]]], 'where': [], 'groupBy': [[0, 1, False]], 'having': [], 'orderBy': ['desc', [[0, [3, 0, False], None]]], 'limit': 1, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "voter_1",
    "query": "SELECT T2.created ,  T2.state ,  T2.phone_number FROM contestants AS T1 JOIN votes AS T2 ON T1.contestant_number  =  T2.contestant_number WHERE T1.contestant_name  =  'Tabatha Gehling'",
    "query_toks": "['SELECT', 'T2.created', ',', 'T2.state', ',', 'T2.phone_number', 'FROM', 'contestants', 'AS', 'T1', 'JOIN', 'votes', 'AS', 'T2', 'ON', 'T1.contestant_number', '=', 'T2.contestant_number', 'WHERE', 'T1.contestant_name', '=', \"'Tabatha\", 'Gehling', \"'\"]",
    "query_toks_no_value": "['select', 't2', '.', 'created', ',', 't2', '.', 'state', ',', 't2', '.', 'phone_number', 'from', 'contestants', 'as', 't1', 'join', 'votes', 'as', 't2', 'on', 't1', '.', 'contestant_number', '=', 't2', '.', 'contestant_number', 'where', 't1', '.', 'contestant_name', '=', 'value']",
    "question": "What are the create dates, states, and phone numbers of the votes that were for the contestant named 'Tabatha Gehling'?",
    "question_th": "วันที่กำหนด รัฐ และหมายเลขโทรศัพท์ของการลงคะแนนเสียงของผู้เข้าแข่งขันชื่อ 'Tabatha Gehling' คือเมื่อใด",
    "question_toks": "['What', 'are', 'the', 'create', 'dates', ',', 'states', ',', 'and', 'phone', 'numbers', 'of', 'the', 'votes', 'that', 'were', 'for', 'the', 'contestant', 'named', \"'Tabatha\", 'Gehling', \"'\", '?']",
    "sql": "{'from': {'table_units': [['table_unit', 1], ['table_unit', 2]], 'conds': [[False, 2, [0, [0, 3, False], None], [0, 8, False], None]]}, 'select': [False, [[0, [0, [0, 9, False], None]], [0, [0, [0, 7, False], None]], [0, [0, [0, 6, False], None]]]], 'where': [[False, 2, [0, [0, 4, False], None], '\"Tabatha Gehling\"', None]], 'groupBy': [], 'having': [], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "voter_1",
    "query": "SELECT T3.area_code FROM contestants AS T1 JOIN votes AS T2 ON T1.contestant_number  =  T2.contestant_number JOIN area_code_state AS T3 ON T2.state  =  T3.state WHERE T1.contestant_name  =  'Tabatha Gehling' INTERSECT SELECT T3.area_code FROM contestants AS T1 JOIN votes AS T2 ON T1.contestant_number  =  T2.contestant_number JOIN area_code_state AS T3 ON T2.state  =  T3.state WHERE T1.contestant_name  =  'Kelly Clauss'",
    "query_toks": "['SELECT', 'T3.area_code', 'FROM', 'contestants', 'AS', 'T1', 'JOIN', 'votes', 'AS', 'T2', 'ON', 'T1.contestant_number', '=', 'T2.contestant_number', 'JOIN', 'area_code_state', 'AS', 'T3', 'ON', 'T2.state', '=', 'T3.state', 'WHERE', 'T1.contestant_name', '=', \"'Tabatha\", 'Gehling', \"'\", 'INTERSECT', 'SELECT', 'T3.area_code', 'FROM', 'contestants', 'AS', 'T1', 'JOIN', 'votes', 'AS', 'T2', 'ON', 'T1.contestant_number', '=', 'T2.contestant_number', 'JOIN', 'area_code_state', 'AS', 'T3', 'ON', 'T2.state', '=', 'T3.state', 'WHERE', 'T1.contestant_name', '=', \"'Kelly\", 'Clauss', \"'\"]",
    "query_toks_no_value": "['select', 't3', '.', 'area_code', 'from', 'contestants', 'as', 't1', 'join', 'votes', 'as', 't2', 'on', 't1', '.', 'contestant_number', '=', 't2', '.', 'contestant_number', 'join', 'area_code_state', 'as', 't3', 'on', 't2', '.', 'state', '=', 't3', '.', 'state', 'where', 't1', '.', 'contestant_name', '=', 'value', 'intersect', 'select', 't3', '.', 'area_code', 'from', 'contestants', 'as', 't1', 'join', 'votes', 'as', 't2', 'on', 't1', '.', 'contestant_number', '=', 't2', '.', 'contestant_number', 'join', 'area_code_state', 'as', 't3', 'on', 't2', '.', 'state', '=', 't3', '.', 'state', 'where', 't1', '.', 'contestant_name', '=', 'value']",
    "question": "List the area codes in which voters voted both for the contestant 'Tabatha Gehling' and the contestant 'Kelly Clauss'.",
    "question_th": "ระบุรหัสพื้นที่ที่ผู้ลงคะแนนโหวตให้ทั้งผู้เข้าแข่งขัน 'Tabatha Gehling' และผู้แข่งขัน 'Kelly Clauss'",
    "question_toks": "['List', 'the', 'area', 'codes', 'in', 'which', 'voters', 'voted', 'both', 'for', 'the', 'contestant', \"'Tabatha\", 'Gehling', \"'\", 'and', 'the', 'contestant', \"'Kelly\", 'Clauss', \"'\", '.']",
    "sql": "{'from': {'table_units': [['table_unit', 1], ['table_unit', 2], ['table_unit', 0]], 'conds': [[False, 2, [0, [0, 3, False], None], [0, 8, False], None], 'and', [False, 2, [0, [0, 7, False], None], [0, 2, False], None]]}, 'select': [False, [[0, [0, [0, 1, False], None]]]], 'where': [[False, 2, [0, [0, 4, False], None], '\"Tabatha Gehling\"', None]], 'groupBy': [], 'having': [], 'orderBy': [], 'limit': None, 'intersect': {'from': {'table_units': [['table_unit', 1], ['table_unit', 2], ['table_unit', 0]], 'conds': [[False, 2, [0, [0, 3, False], None], [0, 8, False], None], 'and', [False, 2, [0, [0, 7, False], None], [0, 2, False], None]]}, 'select': [False, [[0, [0, [0, 1, False], None]]]], 'where': [[False, 2, [0, [0, 4, False], None], '\"Kelly Clauss\"', None]], 'groupBy': [], 'having': [], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}, 'union': None, 'except': None}"
  },
  {
    "db_id": "voter_1",
    "query": "select contestant_name from contestants where contestant_name like \"%al%\"",
    "query_toks": "['select', 'contestant_name', 'from', 'contestants', 'where', 'contestant_name', 'like', '\"%al%\"']",
    "query_toks_no_value": "['select', 'contestant_name', 'from', 'contestants', 'where', 'contestant_name', 'like', 'value']",
    "question": "Return the names of the contestants whose names contain the substring 'Al' .",
    "question_th": "ส่งกลับชื่อของผู้เข้าแข่งขันที่มีชื่อประกอบด้วยสตริงย่อย 'Al'",
    "question_toks": "['Return', 'the', 'names', 'of', 'the', 'contestants', 'whose', 'names', 'contain', 'the', 'substring', \"'Al'\", '.']",
    "sql": "{'from': {'table_units': [['table_unit', 1]], 'conds': []}, 'select': [False, [[0, [0, [0, 4, False], None]]]], 'where': [[False, 9, [0, [0, 4, False], None], '\"%al%\"', None]], 'groupBy': [], 'having': [], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "world_1",
    "query": "SELECT Name FROM country WHERE IndepYear  >  1950",
    "query_toks": "['SELECT', 'Name', 'FROM', 'country', 'WHERE', 'IndepYear', '>', '1950']",
    "query_toks_no_value": "['select', 'name', 'from', 'country', 'where', 'indepyear', '>', 'value']",
    "question": "What are the names of all the countries that became independent after 1950?",
    "question_th": "ประเทศทั้งหมดที่ได้รับเอกราชหลังปี 1950 ชื่ออะไร",
    "question_toks": "['What', 'are', 'the', 'names', 'of', 'all', 'the', 'countries', 'that', 'became', 'independent', 'after', '1950', '?']",
    "sql": "{'from': {'table_units': [['table_unit', 2]], 'conds': []}, 'select': [False, [[0, [0, [0, 9, False], None]]]], 'where': [[False, 3, [0, [0, 13, False], None], 1950.0, None]], 'groupBy': [], 'having': [], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "world_1",
    "query": "SELECT Name FROM country WHERE IndepYear  >  1950",
    "query_toks": "['SELECT', 'Name', 'FROM', 'country', 'WHERE', 'IndepYear', '>', '1950']",
    "query_toks_no_value": "['select', 'name', 'from', 'country', 'where', 'indepyear', '>', 'value']",
    "question": "Give the names of the nations that were founded after 1950.",
    "question_th": "ระบุชื่อประเทศต่างๆ ที่ก่อตั้งหลังปี 1950",
    "question_toks": "['Give', 'the', 'names', 'of', 'the', 'nations', 'that', 'were', 'founded', 'after', '1950', '.']",
    "sql": "{'from': {'table_units': [['table_unit', 2]], 'conds': []}, 'select': [False, [[0, [0, [0, 9, False], None]]]], 'where': [[False, 3, [0, [0, 13, False], None], 1950.0, None]], 'groupBy': [], 'having': [], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "world_1",
    "query": "SELECT count(*) FROM country WHERE GovernmentForm  =  \"Republic\"",
    "query_toks": "['SELECT', 'count', '(', '*', ')', 'FROM', 'country', 'WHERE', 'GovernmentForm', '=', '``', 'Republic', \"''\"]",
    "query_toks_no_value": "['select', 'count', '(', '*', ')', 'from', 'country', 'where', 'governmentform', '=', 'value']",
    "question": "How many countries have a republic as their form of government?",
    "question_th": "มีกี่ประเทศที่มีสาธารณรัฐเป็นรูปแบบการปกครองของตน",
    "question_toks": "['How', 'many', 'countries', 'have', 'a', 'republic', 'as', 'their', 'form', 'of', 'government', '?']",
    "sql": "{'from': {'table_units': [['table_unit', 2]], 'conds': []}, 'select': [False, [[3, [0, [0, 0, False], None]]]], 'where': [[False, 2, [0, [0, 19, False], None], '\"Republic\"', None]], 'groupBy': [], 'having': [], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "world_1",
    "query": "SELECT count(*) FROM country WHERE GovernmentForm  =  \"Republic\"",
    "query_toks": "['SELECT', 'count', '(', '*', ')', 'FROM', 'country', 'WHERE', 'GovernmentForm', '=', '``', 'Republic', \"''\"]",
    "query_toks_no_value": "['select', 'count', '(', '*', ')', 'from', 'country', 'where', 'governmentform', '=', 'value']",
    "question": "How many countries have governments that are republics?",
    "question_th": "มีกี่ประเทศที่มีรัฐบาลที่เป็นสาธารณรัฐ?",
    "question_toks": "['How', 'many', 'countries', 'have', 'governments', 'that', 'are', 'republics', '?']",
    "sql": "{'from': {'table_units': [['table_unit', 2]], 'conds': []}, 'select': [False, [[3, [0, [0, 0, False], None]]]], 'where': [[False, 2, [0, [0, 19, False], None], '\"Republic\"', None]], 'groupBy': [], 'having': [], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "world_1",
    "query": "SELECT sum(SurfaceArea) FROM country WHERE Region  =  \"Caribbean\"",
    "query_toks": "['SELECT', 'sum', '(', 'SurfaceArea', ')', 'FROM', 'country', 'WHERE', 'Region', '=', '``', 'Caribbean', \"''\"]",
    "query_toks_no_value": "['select', 'sum', '(', 'surfacearea', ')', 'from', 'country', 'where', 'region', '=', 'value']",
    "question": "What is the total surface area of the countries in the Caribbean region?",
    "question_th": "พื้นที่ผิวทั้งหมดของประเทศในภูมิภาคแคริบเบียนเป็นเท่าใด",
    "question_toks": "['What', 'is', 'the', 'total', 'surface', 'area', 'of', 'the', 'countries', 'in', 'the', 'Caribbean', 'region', '?']",
    "sql": "{'from': {'table_units': [['table_unit', 2]], 'conds': []}, 'select': [False, [[4, [0, [0, 12, False], None]]]], 'where': [[False, 2, [0, [0, 11, False], None], '\"Caribbean\"', None]], 'groupBy': [], 'having': [], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "world_1",
    "query": "SELECT sum(SurfaceArea) FROM country WHERE Region  =  \"Caribbean\"",
    "query_toks": "['SELECT', 'sum', '(', 'SurfaceArea', ')', 'FROM', 'country', 'WHERE', 'Region', '=', '``', 'Caribbean', \"''\"]",
    "query_toks_no_value": "['select', 'sum', '(', 'surfacearea', ')', 'from', 'country', 'where', 'region', '=', 'value']",
    "question": "How much surface area do the countires in the Carribean cover together?",
    "question_th": "เคาน์ตีร์ในแคริบเบียนครอบคลุมพื้นที่รวมกันเท่าใด",
    "question_toks": "['How', 'much', 'surface', 'area', 'do', 'the', 'countires', 'in', 'the', 'Carribean', 'cover', 'together', '?']",
    "sql": "{'from': {'table_units': [['table_unit', 2]], 'conds': []}, 'select': [False, [[4, [0, [0, 12, False], None]]]], 'where': [[False, 2, [0, [0, 11, False], None], '\"Caribbean\"', None]], 'groupBy': [], 'having': [], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "world_1",
    "query": "SELECT Continent FROM country WHERE Name  =  \"Anguilla\"",
    "query_toks": "['SELECT', 'Continent', 'FROM', 'country', 'WHERE', 'Name', '=', '``', 'Anguilla', \"''\"]",
    "query_toks_no_value": "['select', 'continent', 'from', 'country', 'where', 'name', '=', 'value']",
    "question": "Which continent is Anguilla in?",
    "question_th": "แองกวิลลาอยู่ในทวีปใด",
    "question_toks": "['Which', 'continent', 'is', 'Anguilla', 'in', '?']",
    "sql": "{'from': {'table_units': [['table_unit', 2]], 'conds': []}, 'select': [False, [[0, [0, [0, 10, False], None]]]], 'where': [[False, 2, [0, [0, 9, False], None], '\"Anguilla\"', None]], 'groupBy': [], 'having': [], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "world_1",
    "query": "SELECT Continent FROM country WHERE Name  =  \"Anguilla\"",
    "query_toks": "['SELECT', 'Continent', 'FROM', 'country', 'WHERE', 'Name', '=', '``', 'Anguilla', \"''\"]",
    "query_toks_no_value": "['select', 'continent', 'from', 'country', 'where', 'name', '=', 'value']",
    "question": "What is the continent name which Anguilla belongs to?",
    "question_th": "ชื่อทวีปที่แองกวิลลาอยู่คืออะไร?",
    "question_toks": "['What', 'is', 'the', 'continent', 'name', 'which', 'Anguilla', 'belongs', 'to', '?']",
    "sql": "{'from': {'table_units': [['table_unit', 2]], 'conds': []}, 'select': [False, [[0, [0, [0, 10, False], None]]]], 'where': [[False, 2, [0, [0, 9, False], None], '\"Anguilla\"', None]], 'groupBy': [], 'having': [], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "world_1",
    "query": "SELECT Region FROM country AS T1 JOIN city AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Name  =  \"Kabul\"",
    "query_toks": "['SELECT', 'Region', 'FROM', 'country', 'AS', 'T1', 'JOIN', 'city', 'AS', 'T2', 'ON', 'T1.Code', '=', 'T2.CountryCode', 'WHERE', 'T2.Name', '=', '``', 'Kabul', \"''\"]",
    "query_toks_no_value": "['select', 'region', 'from', 'country', 'as', 't1', 'join', 'city', 'as', 't2', 'on', 't1', '.', 'code', '=', 't2', '.', 'countrycode', 'where', 't2', '.', 'name', '=', 'value']",
    "question": "Which region is the city Kabul located in?",
    "question_th": "เมืองคาบูลตั้งอยู่ในภูมิภาคใด",
    "question_toks": "['Which', 'region', 'is', 'the', 'city', 'Kabul', 'located', 'in', '?']",
    "sql": "{'from': {'table_units': [['table_unit', 2], ['table_unit', 0]], 'conds': [[False, 2, [0, [0, 8, False], None], [0, 3, False], None]]}, 'select': [False, [[0, [0, [0, 11, False], None]]]], 'where': [[False, 2, [0, [0, 2, False], None], '\"Kabul\"', None]], 'groupBy': [], 'having': [], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "world_1",
    "query": "SELECT Region FROM country AS T1 JOIN city AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Name  =  \"Kabul\"",
    "query_toks": "['SELECT', 'Region', 'FROM', 'country', 'AS', 'T1', 'JOIN', 'city', 'AS', 'T2', 'ON', 'T1.Code', '=', 'T2.CountryCode', 'WHERE', 'T2.Name', '=', '``', 'Kabul', \"''\"]",
    "query_toks_no_value": "['select', 'region', 'from', 'country', 'as', 't1', 'join', 'city', 'as', 't2', 'on', 't1', '.', 'code', '=', 't2', '.', 'countrycode', 'where', 't2', '.', 'name', '=', 'value']",
    "question": "What region is Kabul in?",
    "question_th": "คาบูลอยู่ในภูมิภาคใด?",
    "question_toks": "['What', 'region', 'is', 'Kabul', 'in', '?']",
    "sql": "{'from': {'table_units': [['table_unit', 2], ['table_unit', 0]], 'conds': [[False, 2, [0, [0, 8, False], None], [0, 3, False], None]]}, 'select': [False, [[0, [0, [0, 11, False], None]]]], 'where': [[False, 2, [0, [0, 2, False], None], '\"Kabul\"', None]], 'groupBy': [], 'having': [], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "world_1",
    "query": "SELECT T2.Language FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T1.Name  =  \"Aruba\" ORDER BY Percentage DESC LIMIT 1",
    "query_toks": "['SELECT', 'T2.Language', 'FROM', 'country', 'AS', 'T1', 'JOIN', 'countrylanguage', 'AS', 'T2', 'ON', 'T1.Code', '=', 'T2.CountryCode', 'WHERE', 'T1.Name', '=', '``', 'Aruba', \"''\", 'ORDER', 'BY', 'Percentage', 'DESC', 'LIMIT', '1']",
    "query_toks_no_value": "['select', 't2', '.', 'language', 'from', 'country', 'as', 't1', 'join', 'countrylanguage', 'as', 't2', 'on', 't1', '.', 'code', '=', 't2', '.', 'countrycode', 'where', 't1', '.', 'name', '=', 'value', 'order', 'by', 'percentage', 'desc', 'limit', 'value']",
    "question": "Which language is the most popular in Aruba?",
    "question_th": "ภาษาใดที่ได้รับความนิยมมากที่สุดในอารูบา?",
    "question_toks": "['Which', 'language', 'is', 'the', 'most', 'popular', 'in', 'Aruba', '?']",
    "sql": "{'from': {'table_units': [['table_unit', 2], ['table_unit', 3]], 'conds': [[False, 2, [0, [0, 8, False], None], [0, 23, False], None]]}, 'select': [False, [[0, [0, [0, 24, False], None]]]], 'where': [[False, 2, [0, [0, 9, False], None], '\"Aruba\"', None]], 'groupBy': [], 'having': [], 'orderBy': ['desc', [[0, [0, 26, False], None]]], 'limit': 1, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "world_1",
    "query": "SELECT T2.Language FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T1.Name  =  \"Aruba\" ORDER BY Percentage DESC LIMIT 1",
    "query_toks": "['SELECT', 'T2.Language', 'FROM', 'country', 'AS', 'T1', 'JOIN', 'countrylanguage', 'AS', 'T2', 'ON', 'T1.Code', '=', 'T2.CountryCode', 'WHERE', 'T1.Name', '=', '``', 'Aruba', \"''\", 'ORDER', 'BY', 'Percentage', 'DESC', 'LIMIT', '1']",
    "query_toks_no_value": "['select', 't2', '.', 'language', 'from', 'country', 'as', 't1', 'join', 'countrylanguage', 'as', 't2', 'on', 't1', '.', 'code', '=', 't2', '.', 'countrycode', 'where', 't1', '.', 'name', '=', 'value', 'order', 'by', 'percentage', 'desc', 'limit', 'value']",
    "question": "What language is predominantly spoken in Aruba?",
    "question_th": "อารูบาพูดภาษาอะไรเป็นส่วนใหญ่?",
    "question_toks": "['What', 'language', 'is', 'predominantly', 'spoken', 'in', 'Aruba', '?']",
    "sql": "{'from': {'table_units': [['table_unit', 2], ['table_unit', 3]], 'conds': [[False, 2, [0, [0, 8, False], None], [0, 23, False], None]]}, 'select': [False, [[0, [0, [0, 24, False], None]]]], 'where': [[False, 2, [0, [0, 9, False], None], '\"Aruba\"', None]], 'groupBy': [], 'having': [], 'orderBy': ['desc', [[0, [0, 26, False], None]]], 'limit': 1, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "world_1",
    "query": "SELECT Population ,  LifeExpectancy FROM country WHERE Name  =  \"Brazil\"",
    "query_toks": "['SELECT', 'Population', ',', 'LifeExpectancy', 'FROM', 'country', 'WHERE', 'Name', '=', '``', 'Brazil', \"''\"]",
    "query_toks_no_value": "['select', 'population', ',', 'lifeexpectancy', 'from', 'country', 'where', 'name', '=', 'value']",
    "question": "What are the population and life expectancies in Brazil?",
    "question_th": "ประชากรและอายุขัยในบราซิลคือเท่าใด",
    "question_toks": "['What', 'are', 'the', 'population', 'and', 'life', 'expectancies', 'in', 'Brazil', '?']",
    "sql": "{'from': {'table_units': [['table_unit', 2]], 'conds': []}, 'select': [False, [[0, [0, [0, 14, False], None]], [0, [0, [0, 15, False], None]]]], 'where': [[False, 2, [0, [0, 9, False], None], '\"Brazil\"', None]], 'groupBy': [], 'having': [], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "world_1",
    "query": "SELECT Population ,  LifeExpectancy FROM country WHERE Name  =  \"Brazil\"",
    "query_toks": "['SELECT', 'Population', ',', 'LifeExpectancy', 'FROM', 'country', 'WHERE', 'Name', '=', '``', 'Brazil', \"''\"]",
    "query_toks_no_value": "['select', 'population', ',', 'lifeexpectancy', 'from', 'country', 'where', 'name', '=', 'value']",
    "question": "Give me Brazil’s population and life expectancies.",
    "question_th": "บอกอายุขัยและประชากรของบราซิลให้ฉันหน่อย",
    "question_toks": "['Give', 'me', 'Brazil’s', 'population', 'and', 'life', 'expectancies', '.']",
    "sql": "{'from': {'table_units': [['table_unit', 2]], 'conds': []}, 'select': [False, [[0, [0, [0, 14, False], None]], [0, [0, [0, 15, False], None]]]], 'where': [[False, 2, [0, [0, 9, False], None], '\"Brazil\"', None]], 'groupBy': [], 'having': [], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "world_1",
    "query": "SELECT Population ,  Region FROM country WHERE Name  =  \"Angola\"",
    "query_toks": "['SELECT', 'Population', ',', 'Region', 'FROM', 'country', 'WHERE', 'Name', '=', '``', 'Angola', \"''\"]",
    "query_toks_no_value": "['select', 'population', ',', 'region', 'from', 'country', 'where', 'name', '=', 'value']",
    "question": "What are the region and population of Angola?",
    "question_th": "ภูมิภาคและประชากรของแองโกลาคืออะไร?",
    "question_toks": "['What', 'are', 'the', 'region', 'and', 'population', 'of', 'Angola', '?']",
    "sql": "{'from': {'table_units': [['table_unit', 2]], 'conds': []}, 'select': [False, [[0, [0, [0, 14, False], None]], [0, [0, [0, 11, False], None]]]], 'where': [[False, 2, [0, [0, 9, False], None], '\"Angola\"', None]], 'groupBy': [], 'having': [], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "world_1",
    "query": "SELECT Population ,  Region FROM country WHERE Name  =  \"Angola\"",
    "query_toks": "['SELECT', 'Population', ',', 'Region', 'FROM', 'country', 'WHERE', 'Name', '=', '``', 'Angola', \"''\"]",
    "query_toks_no_value": "['select', 'population', ',', 'region', 'from', 'country', 'where', 'name', '=', 'value']",
    "question": "What region does Angola belong to and what is its population?",
    "question_th": "แองโกลาอยู่ในภูมิภาคใดและมีประชากรจำนวนเท่าใด",
    "question_toks": "['What', 'region', 'does', 'Angola', 'belong', 'to', 'and', 'what', 'is', 'its', 'population', '?']",
    "sql": "{'from': {'table_units': [['table_unit', 2]], 'conds': []}, 'select': [False, [[0, [0, [0, 14, False], None]], [0, [0, [0, 11, False], None]]]], 'where': [[False, 2, [0, [0, 9, False], None], '\"Angola\"', None]], 'groupBy': [], 'having': [], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "world_1",
    "query": "SELECT avg(LifeExpectancy) FROM country WHERE Region  =  \"Central Africa\"",
    "query_toks": "['SELECT', 'avg', '(', 'LifeExpectancy', ')', 'FROM', 'country', 'WHERE', 'Region', '=', '``', 'Central', 'Africa', \"''\"]",
    "query_toks_no_value": "['select', 'avg', '(', 'lifeexpectancy', ')', 'from', 'country', 'where', 'region', '=', 'value']",
    "question": "What is the average expected life expectancy for countries in the region of Central Africa?",
    "question_th": "อายุขัยเฉลี่ยที่คาดหวังของประเทศในภูมิภาคแอฟริกากลางคือเท่าไร?",
    "question_toks": "['What', 'is', 'the', 'average', 'expected', 'life', 'expectancy', 'for', 'countries', 'in', 'the', 'region', 'of', 'Central', 'Africa', '?']",
    "sql": "{'from': {'table_units': [['table_unit', 2]], 'conds': []}, 'select': [False, [[5, [0, [0, 15, False], None]]]], 'where': [[False, 2, [0, [0, 11, False], None], '\"Central Africa\"', None]], 'groupBy': [], 'having': [], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "world_1",
    "query": "SELECT avg(LifeExpectancy) FROM country WHERE Region  =  \"Central Africa\"",
    "query_toks": "['SELECT', 'avg', '(', 'LifeExpectancy', ')', 'FROM', 'country', 'WHERE', 'Region', '=', '``', 'Central', 'Africa', \"''\"]",
    "query_toks_no_value": "['select', 'avg', '(', 'lifeexpectancy', ')', 'from', 'country', 'where', 'region', '=', 'value']",
    "question": "How long is the people’s average life expectancy in Central Africa?",
    "question_th": "อายุขัยเฉลี่ยของผู้คนในแอฟริกากลางคือเท่าไร?",
    "question_toks": "['How', 'long', 'is', 'the', 'people’s', 'average', 'life', 'expectancy', 'in', 'Central', 'Africa', '?']",
    "sql": "{'from': {'table_units': [['table_unit', 2]], 'conds': []}, 'select': [False, [[5, [0, [0, 15, False], None]]]], 'where': [[False, 2, [0, [0, 11, False], None], '\"Central Africa\"', None]], 'groupBy': [], 'having': [], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "world_1",
    "query": "SELECT Name FROM country WHERE Continent  =  \"Asia\" ORDER BY LifeExpectancy LIMIT 1",
    "query_toks": "['SELECT', 'Name', 'FROM', 'country', 'WHERE', 'Continent', '=', '``', 'Asia', \"''\", 'ORDER', 'BY', 'LifeExpectancy', 'LIMIT', '1']",
    "query_toks_no_value": "['select', 'name', 'from', 'country', 'where', 'continent', '=', 'value', 'order', 'by', 'lifeexpectancy', 'limit', 'value']",
    "question": "What is the name of country that has the shortest life expectancy in Asia?",
    "question_th": "ประเทศที่มีอายุขัยสั้นที่สุดในเอเชียชื่ออะไร",
    "question_toks": "['What', 'is', 'the', 'name', 'of', 'country', 'that', 'has', 'the', 'shortest', 'life', 'expectancy', 'in', 'Asia', '?']",
    "sql": "{'from': {'table_units': [['table_unit', 2]], 'conds': []}, 'select': [False, [[0, [0, [0, 9, False], None]]]], 'where': [[False, 2, [0, [0, 10, False], None], '\"Asia\"', None]], 'groupBy': [], 'having': [], 'orderBy': ['asc', [[0, [0, 15, False], None]]], 'limit': 1, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "world_1",
    "query": "SELECT Name FROM country WHERE Continent  =  \"Asia\" ORDER BY LifeExpectancy LIMIT 1",
    "query_toks": "['SELECT', 'Name', 'FROM', 'country', 'WHERE', 'Continent', '=', '``', 'Asia', \"''\", 'ORDER', 'BY', 'LifeExpectancy', 'LIMIT', '1']",
    "query_toks_no_value": "['select', 'name', 'from', 'country', 'where', 'continent', '=', 'value', 'order', 'by', 'lifeexpectancy', 'limit', 'value']",
    "question": "Give the name of the country in Asia with the lowest life expectancy.",
    "question_th": "ระบุชื่อประเทศในเอเชียที่มีอายุขัยต่ำที่สุด",
    "question_toks": "['Give', 'the', 'name', 'of', 'the', 'country', 'in', 'Asia', 'with', 'the', 'lowest', 'life', 'expectancy', '.']",
    "sql": "{'from': {'table_units': [['table_unit', 2]], 'conds': []}, 'select': [False, [[0, [0, [0, 9, False], None]]]], 'where': [[False, 2, [0, [0, 10, False], None], '\"Asia\"', None]], 'groupBy': [], 'having': [], 'orderBy': ['asc', [[0, [0, 15, False], None]]], 'limit': 1, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "world_1",
    "query": "SELECT sum(Population) ,  max(GNP) FROM country WHERE Continent  =  \"Asia\"",
    "query_toks": "['SELECT', 'sum', '(', 'Population', ')', ',', 'max', '(', 'GNP', ')', 'FROM', 'country', 'WHERE', 'Continent', '=', '``', 'Asia', \"''\"]",
    "query_toks_no_value": "['select', 'sum', '(', 'population', ')', ',', 'max', '(', 'gnp', ')', 'from', 'country', 'where', 'continent', '=', 'value']",
    "question": "What is the total population and maximum GNP in Asia?",
    "question_th": "ประชากรทั้งหมดและ GNP สูงสุดในเอเชียคือเท่าใด",
    "question_toks": "['What', 'is', 'the', 'total', 'population', 'and', 'maximum', 'GNP', 'in', 'Asia', '?']",
    "sql": "{'from': {'table_units': [['table_unit', 2]], 'conds': []}, 'select': [False, [[4, [0, [0, 14, False], None]], [1, [0, [0, 16, False], None]]]], 'where': [[False, 2, [0, [0, 10, False], None], '\"Asia\"', None]], 'groupBy': [], 'having': [], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "world_1",
    "query": "SELECT sum(Population) ,  max(GNP) FROM country WHERE Continent  =  \"Asia\"",
    "query_toks": "['SELECT', 'sum', '(', 'Population', ')', ',', 'max', '(', 'GNP', ')', 'FROM', 'country', 'WHERE', 'Continent', '=', '``', 'Asia', \"''\"]",
    "query_toks_no_value": "['select', 'sum', '(', 'population', ')', ',', 'max', '(', 'gnp', ')', 'from', 'country', 'where', 'continent', '=', 'value']",
    "question": "How many people live in Asia, and what is the largest GNP among them?",
    "question_th": "มีกี่คนที่อาศัยอยู่ในเอเชีย และ GNP ที่ใหญ่ที่สุดในหมู่พวกเขาคืออะไร",
    "question_toks": "['How', 'many', 'people', 'live', 'in', 'Asia', ',', 'and', 'what', 'is', 'the', 'largest', 'GNP', 'among', 'them', '?']",
    "sql": "{'from': {'table_units': [['table_unit', 2]], 'conds': []}, 'select': [False, [[4, [0, [0, 14, False], None]], [1, [0, [0, 16, False], None]]]], 'where': [[False, 2, [0, [0, 10, False], None], '\"Asia\"', None]], 'groupBy': [], 'having': [], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "world_1",
    "query": "SELECT avg(LifeExpectancy) FROM country WHERE Continent  =  \"Africa\" AND GovernmentForm  =  \"Republic\"",
    "query_toks": "['SELECT', 'avg', '(', 'LifeExpectancy', ')', 'FROM', 'country', 'WHERE', 'Continent', '=', '``', 'Africa', \"''\", 'AND', 'GovernmentForm', '=', '``', 'Republic', \"''\"]",
    "query_toks_no_value": "['select', 'avg', '(', 'lifeexpectancy', ')', 'from', 'country', 'where', 'continent', '=', 'value', 'and', 'governmentform', '=', 'value']",
    "question": "What is the average life expectancy in African countries that are republics?",
    "question_th": "อายุขัยเฉลี่ยในประเทศแอฟริกาที่เป็นสาธารณรัฐคือเท่าใด",
    "question_toks": "['What', 'is', 'the', 'average', 'life', 'expectancy', 'in', 'African', 'countries', 'that', 'are', 'republics', '?']",
    "sql": "{'from': {'table_units': [['table_unit', 2]], 'conds': []}, 'select': [False, [[5, [0, [0, 15, False], None]]]], 'where': [[False, 2, [0, [0, 10, False], None], '\"Africa\"', None], 'and', [False, 2, [0, [0, 19, False], None], '\"Republic\"', None]], 'groupBy': [], 'having': [], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "world_1",
    "query": "SELECT avg(LifeExpectancy) FROM country WHERE Continent  =  \"Africa\" AND GovernmentForm  =  \"Republic\"",
    "query_toks": "['SELECT', 'avg', '(', 'LifeExpectancy', ')', 'FROM', 'country', 'WHERE', 'Continent', '=', '``', 'Africa', \"''\", 'AND', 'GovernmentForm', '=', '``', 'Republic', \"''\"]",
    "query_toks_no_value": "['select', 'avg', '(', 'lifeexpectancy', ')', 'from', 'country', 'where', 'continent', '=', 'value', 'and', 'governmentform', '=', 'value']",
    "question": "Give the average life expectancy for countries in Africa which are republics?",
    "question_th": "ให้อายุขัยเฉลี่ยของประเทศในแอฟริกาที่เป็นสาธารณรัฐ?",
    "question_toks": "['Give', 'the', 'average', 'life', 'expectancy', 'for', 'countries', 'in', 'Africa', 'which', 'are', 'republics', '?']",
    "sql": "{'from': {'table_units': [['table_unit', 2]], 'conds': []}, 'select': [False, [[5, [0, [0, 15, False], None]]]], 'where': [[False, 2, [0, [0, 10, False], None], '\"Africa\"', None], 'and', [False, 2, [0, [0, 19, False], None], '\"Republic\"', None]], 'groupBy': [], 'having': [], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "world_1",
    "query": "SELECT sum(SurfaceArea) FROM country WHERE Continent  =  \"Asia\" OR Continent  =  \"Europe\"",
    "query_toks": "['SELECT', 'sum', '(', 'SurfaceArea', ')', 'FROM', 'country', 'WHERE', 'Continent', '=', '``', 'Asia', \"''\", 'OR', 'Continent', '=', '``', 'Europe', \"''\"]",
    "query_toks_no_value": "['select', 'sum', '(', 'surfacearea', ')', 'from', 'country', 'where', 'continent', '=', 'value', 'or', 'continent', '=', 'value']",
    "question": "What is the total surface area of the continents Asia and Europe?",
    "question_th": "พื้นที่ผิวทั้งหมดของทวีปเอเชียและยุโรปเป็นเท่าใด",
    "question_toks": "['What', 'is', 'the', 'total', 'surface', 'area', 'of', 'the', 'continents', 'Asia', 'and', 'Europe', '?']",
    "sql": "{'from': {'table_units': [['table_unit', 2]], 'conds': []}, 'select': [False, [[4, [0, [0, 12, False], None]]]], 'where': [[False, 2, [0, [0, 10, False], None], '\"Asia\"', None], 'or', [False, 2, [0, [0, 10, False], None], '\"Europe\"', None]], 'groupBy': [], 'having': [], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "world_1",
    "query": "SELECT sum(SurfaceArea) FROM country WHERE Continent  =  \"Asia\" OR Continent  =  \"Europe\"",
    "query_toks": "['SELECT', 'sum', '(', 'SurfaceArea', ')', 'FROM', 'country', 'WHERE', 'Continent', '=', '``', 'Asia', \"''\", 'OR', 'Continent', '=', '``', 'Europe', \"''\"]",
    "query_toks_no_value": "['select', 'sum', '(', 'surfacearea', ')', 'from', 'country', 'where', 'continent', '=', 'value', 'or', 'continent', '=', 'value']",
    "question": "Give the total surface area covered by countries in Asia or Europe.",
    "question_th": "ให้พื้นที่ผิวรวมที่ครอบคลุมโดยประเทศในเอเชียหรือยุโรป",
    "question_toks": "['Give', 'the', 'total', 'surface', 'area', 'covered', 'by', 'countries', 'in', 'Asia', 'or', 'Europe', '.']",
    "sql": "{'from': {'table_units': [['table_unit', 2]], 'conds': []}, 'select': [False, [[4, [0, [0, 12, False], None]]]], 'where': [[False, 2, [0, [0, 10, False], None], '\"Asia\"', None], 'or', [False, 2, [0, [0, 10, False], None], '\"Europe\"', None]], 'groupBy': [], 'having': [], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "world_1",
    "query": "SELECT sum(Population) FROM city WHERE District  =  \"Gelderland\"",
    "query_toks": "['SELECT', 'sum', '(', 'Population', ')', 'FROM', 'city', 'WHERE', 'District', '=', '``', 'Gelderland', \"''\"]",
    "query_toks_no_value": "['select', 'sum', '(', 'population', ')', 'from', 'city', 'where', 'district', '=', 'value']",
    "question": "How many people live in Gelderland district?",
    "question_th": "มีกี่คนที่อาศัยอยู่ในเขต Gelderland?",
    "question_toks": "['How', 'many', 'people', 'live', 'in', 'Gelderland', 'district', '?']",
    "sql": "{'from': {'table_units': [['table_unit', 0]], 'conds': []}, 'select': [False, [[4, [0, [0, 5, False], None]]]], 'where': [[False, 2, [0, [0, 4, False], None], '\"Gelderland\"', None]], 'groupBy': [], 'having': [], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "world_1",
    "query": "SELECT sum(Population) FROM city WHERE District  =  \"Gelderland\"",
    "query_toks": "['SELECT', 'sum', '(', 'Population', ')', 'FROM', 'city', 'WHERE', 'District', '=', '``', 'Gelderland', \"''\"]",
    "query_toks_no_value": "['select', 'sum', '(', 'population', ')', 'from', 'city', 'where', 'district', '=', 'value']",
    "question": "What is the total population of Gelderland district?",
    "question_th": "ประชากรทั้งหมดของเขตเกลเดอร์แลนด์คือเท่าไร?",
    "question_toks": "['What', 'is', 'the', 'total', 'population', 'of', 'Gelderland', 'district', '?']",
    "sql": "{'from': {'table_units': [['table_unit', 0]], 'conds': []}, 'select': [False, [[4, [0, [0, 5, False], None]]]], 'where': [[False, 2, [0, [0, 4, False], None], '\"Gelderland\"', None]], 'groupBy': [], 'having': [], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "world_1",
    "query": "SELECT avg(GNP) ,  sum(population) FROM country WHERE GovernmentForm  =  \"US Territory\"",
    "query_toks": "['SELECT', 'avg', '(', 'GNP', ')', ',', 'sum', '(', 'population', ')', 'FROM', 'country', 'WHERE', 'GovernmentForm', '=', '``', 'US', 'Territory', \"''\"]",
    "query_toks_no_value": "['select', 'avg', '(', 'gnp', ')', ',', 'sum', '(', 'population', ')', 'from', 'country', 'where', 'governmentform', '=', 'value']",
    "question": "What is the average GNP and total population in all nations whose government is US territory?",
    "question_th": "GNP เฉลี่ยและจำนวนประชากรทั้งหมดในทุกประเทศที่มีรัฐบาลอยู่ในดินแดนของสหรัฐอเมริกาคือเท่าใด",
    "question_toks": "['What', 'is', 'the', 'average', 'GNP', 'and', 'total', 'population', 'in', 'all', 'nations', 'whose', 'government', 'is', 'US', 'territory', '?']",
    "sql": "{'from': {'table_units': [['table_unit', 2]], 'conds': []}, 'select': [False, [[5, [0, [0, 16, False], None]], [4, [0, [0, 14, False], None]]]], 'where': [[False, 2, [0, [0, 19, False], None], '\"US Territory\"', None]], 'groupBy': [], 'having': [], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "world_1",
    "query": "SELECT avg(GNP) ,  sum(population) FROM country WHERE GovernmentForm  =  \"US Territory\"",
    "query_toks": "['SELECT', 'avg', '(', 'GNP', ')', ',', 'sum', '(', 'population', ')', 'FROM', 'country', 'WHERE', 'GovernmentForm', '=', '``', 'US', 'Territory', \"''\"]",
    "query_toks_no_value": "['select', 'avg', '(', 'gnp', ')', ',', 'sum', '(', 'population', ')', 'from', 'country', 'where', 'governmentform', '=', 'value']",
    "question": "Give the mean GNP and total population of nations which are considered US territory.",
    "question_th": "ระบุ GNP เฉลี่ยและจำนวนประชากรทั้งหมดของประเทศที่ถือเป็นดินแดนของสหรัฐอเมริกา",
    "question_toks": "['Give', 'the', 'mean', 'GNP', 'and', 'total', 'population', 'of', 'nations', 'which', 'are', 'considered', 'US', 'territory', '.']",
    "sql": "{'from': {'table_units': [['table_unit', 2]], 'conds': []}, 'select': [False, [[5, [0, [0, 16, False], None]], [4, [0, [0, 14, False], None]]]], 'where': [[False, 2, [0, [0, 19, False], None], '\"US Territory\"', None]], 'groupBy': [], 'having': [], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "world_1",
    "query": "SELECT count(DISTINCT LANGUAGE) FROM countrylanguage",
    "query_toks": "['SELECT', 'count', '(', 'DISTINCT', 'LANGUAGE', ')', 'FROM', 'countrylanguage']",
    "query_toks_no_value": "['select', 'count', '(', 'distinct', 'language', ')', 'from', 'countrylanguage']",
    "question": "How many unique languages are spoken in the world?",
    "question_th": "มีภาษาที่พูดกันในโลกนี้กี่ภาษา?",
    "question_toks": "['How', 'many', 'unique', 'languages', 'are', 'spoken', 'in', 'the', 'world', '?']",
    "sql": "{'from': {'table_units': [['table_unit', 3]], 'conds': []}, 'select': [False, [[3, [0, [0, 24, True], None]]]], 'where': [], 'groupBy': [], 'having': [], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "world_1",
    "query": "SELECT count(DISTINCT LANGUAGE) FROM countrylanguage",
    "query_toks": "['SELECT', 'count', '(', 'DISTINCT', 'LANGUAGE', ')', 'FROM', 'countrylanguage']",
    "query_toks_no_value": "['select', 'count', '(', 'distinct', 'language', ')', 'from', 'countrylanguage']",
    "question": "What is the number of distinct languages used around the world?",
    "question_th": "ภาษาต่างๆ ที่ใช้กันทั่วโลกมีกี่ภาษา?",
    "question_toks": "['What', 'is', 'the', 'number', 'of', 'distinct', 'languages', 'used', 'around', 'the', 'world', '?']",
    "sql": "{'from': {'table_units': [['table_unit', 3]], 'conds': []}, 'select': [False, [[3, [0, [0, 24, True], None]]]], 'where': [], 'groupBy': [], 'having': [], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "world_1",
    "query": "SELECT count(DISTINCT GovernmentForm) FROM country WHERE Continent  =  \"Africa\"",
    "query_toks": "['SELECT', 'count', '(', 'DISTINCT', 'GovernmentForm', ')', 'FROM', 'country', 'WHERE', 'Continent', '=', '``', 'Africa', \"''\"]",
    "query_toks_no_value": "['select', 'count', '(', 'distinct', 'governmentform', ')', 'from', 'country', 'where', 'continent', '=', 'value']",
    "question": "How many type of governments are in Africa?",
    "question_th": "รัฐบาลในแอฟริกามีกี่ประเภท?",
    "question_toks": "['How', 'many', 'type', 'of', 'governments', 'are', 'in', 'Africa', '?']",
    "sql": "{'from': {'table_units': [['table_unit', 2]], 'conds': []}, 'select': [False, [[3, [0, [0, 19, True], None]]]], 'where': [[False, 2, [0, [0, 10, False], None], '\"Africa\"', None]], 'groupBy': [], 'having': [], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "world_1",
    "query": "SELECT count(DISTINCT GovernmentForm) FROM country WHERE Continent  =  \"Africa\"",
    "query_toks": "['SELECT', 'count', '(', 'DISTINCT', 'GovernmentForm', ')', 'FROM', 'country', 'WHERE', 'Continent', '=', '``', 'Africa', \"''\"]",
    "query_toks_no_value": "['select', 'count', '(', 'distinct', 'governmentform', ')', 'from', 'country', 'where', 'continent', '=', 'value']",
    "question": "How many different forms of governments are there in Africa?",
    "question_th": "มีรัฐบาลกี่รูปแบบในแอฟริกา?",
    "question_toks": "['How', 'many', 'different', 'forms', 'of', 'governments', 'are', 'there', 'in', 'Africa', '?']",
    "sql": "{'from': {'table_units': [['table_unit', 2]], 'conds': []}, 'select': [False, [[3, [0, [0, 19, True], None]]]], 'where': [[False, 2, [0, [0, 10, False], None], '\"Africa\"', None]], 'groupBy': [], 'having': [], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "world_1",
    "query": "SELECT COUNT(T2.Language) FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T1.Name  =  \"Aruba\"",
    "query_toks": "['SELECT', 'COUNT', '(', 'T2.Language', ')', 'FROM', 'country', 'AS', 'T1', 'JOIN', 'countrylanguage', 'AS', 'T2', 'ON', 'T1.Code', '=', 'T2.CountryCode', 'WHERE', 'T1.Name', '=', '``', 'Aruba', \"''\"]",
    "query_toks_no_value": "['select', 'count', '(', 't2', '.', 'language', ')', 'from', 'country', 'as', 't1', 'join', 'countrylanguage', 'as', 't2', 'on', 't1', '.', 'code', '=', 't2', '.', 'countrycode', 'where', 't1', '.', 'name', '=', 'value']",
    "question": "What is the total number of languages used in Aruba?",
    "question_th": "Aruba มีภาษาใดบ้างที่ใช้ใน Aruba?",
    "question_toks": "['What', 'is', 'the', 'total', 'number', 'of', 'languages', 'used', 'in', 'Aruba', '?']",
    "sql": "{'from': {'table_units': [['table_unit', 2], ['table_unit', 3]], 'conds': [[False, 2, [0, [0, 8, False], None], [0, 23, False], None]]}, 'select': [False, [[3, [0, [0, 24, False], None]]]], 'where': [[False, 2, [0, [0, 9, False], None], '\"Aruba\"', None]], 'groupBy': [], 'having': [], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "world_1",
    "query": "SELECT COUNT(T2.Language) FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T1.Name  =  \"Aruba\"",
    "query_toks": "['SELECT', 'COUNT', '(', 'T2.Language', ')', 'FROM', 'country', 'AS', 'T1', 'JOIN', 'countrylanguage', 'AS', 'T2', 'ON', 'T1.Code', '=', 'T2.CountryCode', 'WHERE', 'T1.Name', '=', '``', 'Aruba', \"''\"]",
    "query_toks_no_value": "['select', 'count', '(', 't2', '.', 'language', ')', 'from', 'country', 'as', 't1', 'join', 'countrylanguage', 'as', 't2', 'on', 't1', '.', 'code', '=', 't2', '.', 'countrycode', 'where', 't1', '.', 'name', '=', 'value']",
    "question": "How many languages are spoken in Aruba?",
    "question_th": "อารูบาพูดได้กี่ภาษา",
    "question_toks": "['How', 'many', 'languages', 'are', 'spoken', 'in', 'Aruba', '?']",
    "sql": "{'from': {'table_units': [['table_unit', 2], ['table_unit', 3]], 'conds': [[False, 2, [0, [0, 8, False], None], [0, 23, False], None]]}, 'select': [False, [[3, [0, [0, 24, False], None]]]], 'where': [[False, 2, [0, [0, 9, False], None], '\"Aruba\"', None]], 'groupBy': [], 'having': [], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "world_1",
    "query": "SELECT COUNT(*) FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T1.Name  =  \"Afghanistan\" AND IsOfficial  =  \"T\"",
    "query_toks": "['SELECT', 'COUNT', '(', '*', ')', 'FROM', 'country', 'AS', 'T1', 'JOIN', 'countrylanguage', 'AS', 'T2', 'ON', 'T1.Code', '=', 'T2.CountryCode', 'WHERE', 'T1.Name', '=', '``', 'Afghanistan', \"''\", 'AND', 'IsOfficial', '=', '``', 'T', \"''\"]",
    "query_toks_no_value": "['select', 'count', '(', '*', ')', 'from', 'country', 'as', 't1', 'join', 'countrylanguage', 'as', 't2', 'on', 't1', '.', 'code', '=', 't2', '.', 'countrycode', 'where', 't1', '.', 'name', '=', 'value', 'and', 'isofficial', '=', 'value']",
    "question": "How many official languages does Afghanistan have?",
    "question_th": "อัฟกานิสถานมีภาษาราชการกี่ภาษา",
    "question_toks": "['How', 'many', 'official', 'languages', 'does', 'Afghanistan', 'have', '?']",
    "sql": "{'from': {'table_units': [['table_unit', 2], ['table_unit', 3]], 'conds': [[False, 2, [0, [0, 8, False], None], [0, 23, False], None]]}, 'select': [False, [[3, [0, [0, 0, False], None]]]], 'where': [[False, 2, [0, [0, 9, False], None], '\"Afghanistan\"', None], 'and', [False, 2, [0, [0, 25, False], None], '\"T\"', None]], 'groupBy': [], 'having': [], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "world_1",
    "query": "SELECT COUNT(*) FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T1.Name  =  \"Afghanistan\" AND IsOfficial  =  \"T\"",
    "query_toks": "['SELECT', 'COUNT', '(', '*', ')', 'FROM', 'country', 'AS', 'T1', 'JOIN', 'countrylanguage', 'AS', 'T2', 'ON', 'T1.Code', '=', 'T2.CountryCode', 'WHERE', 'T1.Name', '=', '``', 'Afghanistan', \"''\", 'AND', 'IsOfficial', '=', '``', 'T', \"''\"]",
    "query_toks_no_value": "['select', 'count', '(', '*', ')', 'from', 'country', 'as', 't1', 'join', 'countrylanguage', 'as', 't2', 'on', 't1', '.', 'code', '=', 't2', '.', 'countrycode', 'where', 't1', '.', 'name', '=', 'value', 'and', 'isofficial', '=', 'value']",
    "question": "How many official languages are spoken in Afghanistan?",
    "question_th": "มีการพูดภาษาราชการกี่ภาษาในอัฟกานิสถาน",
    "question_toks": "['How', 'many', 'official', 'languages', 'are', 'spoken', 'in', 'Afghanistan', '?']",
    "sql": "{'from': {'table_units': [['table_unit', 2], ['table_unit', 3]], 'conds': [[False, 2, [0, [0, 8, False], None], [0, 23, False], None]]}, 'select': [False, [[3, [0, [0, 0, False], None]]]], 'where': [[False, 2, [0, [0, 9, False], None], '\"Afghanistan\"', None], 'and', [False, 2, [0, [0, 25, False], None], '\"T\"', None]], 'groupBy': [], 'having': [], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "world_1",
    "query": "SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode GROUP BY T1.Name ORDER BY COUNT(*) DESC LIMIT 1",
    "query_toks": "['SELECT', 'T1.Name', 'FROM', 'country', 'AS', 'T1', 'JOIN', 'countrylanguage', 'AS', 'T2', 'ON', 'T1.Code', '=', 'T2.CountryCode', 'GROUP', 'BY', 'T1.Name', 'ORDER', 'BY', 'COUNT', '(', '*', ')', 'DESC', 'LIMIT', '1']",
    "query_toks_no_value": "['select', 't1', '.', 'name', 'from', 'country', 'as', 't1', 'join', 'countrylanguage', 'as', 't2', 'on', 't1', '.', 'code', '=', 't2', '.', 'countrycode', 'group', 'by', 't1', '.', 'name', 'order', 'by', 'count', '(', '*', ')', 'desc', 'limit', 'value']",
    "question": "What is name of the country that speaks the largest number of languages?",
    "question_th": "ประเทศที่พูดภาษาได้มากที่สุดชื่ออะไร",
    "question_toks": "['What', 'is', 'name', 'of', 'the', 'country', 'that', 'speaks', 'the', 'largest', 'number', 'of', 'languages', '?']",
    "sql": "{'from': {'table_units': [['table_unit', 2], ['table_unit', 3]], 'conds': [[False, 2, [0, [0, 8, False], None], [0, 23, False], None]]}, 'select': [False, [[0, [0, [0, 9, False], None]]]], 'where': [], 'groupBy': [[0, 9, False]], 'having': [], 'orderBy': ['desc', [[0, [3, 0, False], None]]], 'limit': 1, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "world_1",
    "query": "SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode GROUP BY T1.Name ORDER BY COUNT(*) DESC LIMIT 1",
    "query_toks": "['SELECT', 'T1.Name', 'FROM', 'country', 'AS', 'T1', 'JOIN', 'countrylanguage', 'AS', 'T2', 'ON', 'T1.Code', '=', 'T2.CountryCode', 'GROUP', 'BY', 'T1.Name', 'ORDER', 'BY', 'COUNT', '(', '*', ')', 'DESC', 'LIMIT', '1']",
    "query_toks_no_value": "['select', 't1', '.', 'name', 'from', 'country', 'as', 't1', 'join', 'countrylanguage', 'as', 't2', 'on', 't1', '.', 'code', '=', 't2', '.', 'countrycode', 'group', 'by', 't1', '.', 'name', 'order', 'by', 'count', '(', '*', ')', 'desc', 'limit', 'value']",
    "question": "Give the name of the nation that uses the greatest amount of languages.",
    "question_th": "ระบุชื่อประเทศที่ใช้ภาษามากที่สุด",
    "question_toks": "['Give', 'the', 'name', 'of', 'the', 'nation', 'that', 'uses', 'the', 'greatest', 'amount', 'of', 'languages', '.']",
    "sql": "{'from': {'table_units': [['table_unit', 2], ['table_unit', 3]], 'conds': [[False, 2, [0, [0, 8, False], None], [0, 23, False], None]]}, 'select': [False, [[0, [0, [0, 9, False], None]]]], 'where': [], 'groupBy': [[0, 9, False]], 'having': [], 'orderBy': ['desc', [[0, [3, 0, False], None]]], 'limit': 1, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "world_1",
    "query": "SELECT T1.Continent FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode GROUP BY T1.Continent ORDER BY COUNT(*) DESC LIMIT 1",
    "query_toks": "['SELECT', 'T1.Continent', 'FROM', 'country', 'AS', 'T1', 'JOIN', 'countrylanguage', 'AS', 'T2', 'ON', 'T1.Code', '=', 'T2.CountryCode', 'GROUP', 'BY', 'T1.Continent', 'ORDER', 'BY', 'COUNT', '(', '*', ')', 'DESC', 'LIMIT', '1']",
    "query_toks_no_value": "['select', 't1', '.', 'continent', 'from', 'country', 'as', 't1', 'join', 'countrylanguage', 'as', 't2', 'on', 't1', '.', 'code', '=', 't2', '.', 'countrycode', 'group', 'by', 't1', '.', 'continent', 'order', 'by', 'count', '(', '*', ')', 'desc', 'limit', 'value']",
    "question": "Which continent has the most diverse languages?",
    "question_th": "ทวีปใดมีภาษาที่หลากหลายที่สุด",
    "question_toks": "['Which', 'continent', 'has', 'the', 'most', 'diverse', 'languages', '?']",
    "sql": "{'from': {'table_units': [['table_unit', 2], ['table_unit', 3]], 'conds': [[False, 2, [0, [0, 8, False], None], [0, 23, False], None]]}, 'select': [False, [[0, [0, [0, 10, False], None]]]], 'where': [], 'groupBy': [[0, 10, False]], 'having': [], 'orderBy': ['desc', [[0, [3, 0, False], None]]], 'limit': 1, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "world_1",
    "query": "SELECT T1.Continent FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode GROUP BY T1.Continent ORDER BY COUNT(*) DESC LIMIT 1",
    "query_toks": "['SELECT', 'T1.Continent', 'FROM', 'country', 'AS', 'T1', 'JOIN', 'countrylanguage', 'AS', 'T2', 'ON', 'T1.Code', '=', 'T2.CountryCode', 'GROUP', 'BY', 'T1.Continent', 'ORDER', 'BY', 'COUNT', '(', '*', ')', 'DESC', 'LIMIT', '1']",
    "query_toks_no_value": "['select', 't1', '.', 'continent', 'from', 'country', 'as', 't1', 'join', 'countrylanguage', 'as', 't2', 'on', 't1', '.', 'code', '=', 't2', '.', 'countrycode', 'group', 'by', 't1', '.', 'continent', 'order', 'by', 'count', '(', '*', ')', 'desc', 'limit', 'value']",
    "question": "Which continent speaks the most languages?",
    "question_th": "ทวีปใดพูดภาษาได้มากที่สุด?",
    "question_toks": "['Which', 'continent', 'speaks', 'the', 'most', 'languages', '?']",
    "sql": "{'from': {'table_units': [['table_unit', 2], ['table_unit', 3]], 'conds': [[False, 2, [0, [0, 8, False], None], [0, 23, False], None]]}, 'select': [False, [[0, [0, [0, 10, False], None]]]], 'where': [], 'groupBy': [[0, 10, False]], 'having': [], 'orderBy': ['desc', [[0, [3, 0, False], None]]], 'limit': 1, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "world_1",
    "query": "SELECT COUNT(*) FROM (SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  \"English\" INTERSECT SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  \"Dutch\")",
    "query_toks": "['SELECT', 'COUNT', '(', '*', ')', 'FROM', '(', 'SELECT', 'T1.Name', 'FROM', 'country', 'AS', 'T1', 'JOIN', 'countrylanguage', 'AS', 'T2', 'ON', 'T1.Code', '=', 'T2.CountryCode', 'WHERE', 'T2.Language', '=', '``', 'English', \"''\", 'INTERSECT', 'SELECT', 'T1.Name', 'FROM', 'country', 'AS', 'T1', 'JOIN', 'countrylanguage', 'AS', 'T2', 'ON', 'T1.Code', '=', 'T2.CountryCode', 'WHERE', 'T2.Language', '=', '``', 'Dutch', \"''\", ')']",
    "query_toks_no_value": "['select', 'count', '(', '*', ')', 'from', '(', 'select', 't1', '.', 'name', 'from', 'country', 'as', 't1', 'join', 'countrylanguage', 'as', 't2', 'on', 't1', '.', 'code', '=', 't2', '.', 'countrycode', 'where', 't2', '.', 'language', '=', 'value', 'intersect', 'select', 't1', '.', 'name', 'from', 'country', 'as', 't1', 'join', 'countrylanguage', 'as', 't2', 'on', 't1', '.', 'code', '=', 't2', '.', 'countrycode', 'where', 't2', '.', 'language', '=', 'value', ')']",
    "question": "How many countries speak both English and Dutch?",
    "question_th": "มีกี่ประเทศที่พูดทั้งภาษาอังกฤษและภาษาดัตช์?",
    "question_toks": "['How', 'many', 'countries', 'speak', 'both', 'English', 'and', 'Dutch', '?']",
    "sql": "{'from': {'table_units': [['sql', {'from': {'table_units': [['table_unit', 2], ['table_unit', 3]], 'conds': [[False, 2, [0, [0, 8, False], None], [0, 23, False], None]]}, 'select': [False, [[0, [0, [0, 9, False], None]]]], 'where': [[False, 2, [0, [0, 24, False], None], '\"English\"', None]], 'groupBy': [], 'having': [], 'orderBy': [], 'limit': None, 'intersect': {'from': {'table_units': [['table_unit', 2], ['table_unit', 3]], 'conds': [[False, 2, [0, [0, 8, False], None], [0, 23, False], None]]}, 'select': [False, [[0, [0, [0, 9, False], None]]]], 'where': [[False, 2, [0, [0, 24, False], None], '\"Dutch\"', None]], 'groupBy': [], 'having': [], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}, 'union': None, 'except': None}]], 'conds': []}, 'select': [False, [[3, [0, [0, 0, False], None]]]], 'where': [], 'groupBy': [], 'having': [], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "world_1",
    "query": "SELECT COUNT(*) FROM (SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  \"English\" INTERSECT SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  \"Dutch\")",
    "query_toks": "['SELECT', 'COUNT', '(', '*', ')', 'FROM', '(', 'SELECT', 'T1.Name', 'FROM', 'country', 'AS', 'T1', 'JOIN', 'countrylanguage', 'AS', 'T2', 'ON', 'T1.Code', '=', 'T2.CountryCode', 'WHERE', 'T2.Language', '=', '``', 'English', \"''\", 'INTERSECT', 'SELECT', 'T1.Name', 'FROM', 'country', 'AS', 'T1', 'JOIN', 'countrylanguage', 'AS', 'T2', 'ON', 'T1.Code', '=', 'T2.CountryCode', 'WHERE', 'T2.Language', '=', '``', 'Dutch', \"''\", ')']",
    "query_toks_no_value": "['select', 'count', '(', '*', ')', 'from', '(', 'select', 't1', '.', 'name', 'from', 'country', 'as', 't1', 'join', 'countrylanguage', 'as', 't2', 'on', 't1', '.', 'code', '=', 't2', '.', 'countrycode', 'where', 't2', '.', 'language', '=', 'value', 'intersect', 'select', 't1', '.', 'name', 'from', 'country', 'as', 't1', 'join', 'countrylanguage', 'as', 't2', 'on', 't1', '.', 'code', '=', 't2', '.', 'countrycode', 'where', 't2', '.', 'language', '=', 'value', ')']",
    "question": "What is the number of nations that use English and Dutch?",
    "question_th": "จำนวนประเทศที่ใช้ภาษาอังกฤษและภาษาดัตช์คือเท่าไร?",
    "question_toks": "['What', 'is', 'the', 'number', 'of', 'nations', 'that', 'use', 'English', 'and', 'Dutch', '?']",
    "sql": "{'from': {'table_units': [['sql', {'from': {'table_units': [['table_unit', 2], ['table_unit', 3]], 'conds': [[False, 2, [0, [0, 8, False], None], [0, 23, False], None]]}, 'select': [False, [[0, [0, [0, 9, False], None]]]], 'where': [[False, 2, [0, [0, 24, False], None], '\"English\"', None]], 'groupBy': [], 'having': [], 'orderBy': [], 'limit': None, 'intersect': {'from': {'table_units': [['table_unit', 2], ['table_unit', 3]], 'conds': [[False, 2, [0, [0, 8, False], None], [0, 23, False], None]]}, 'select': [False, [[0, [0, [0, 9, False], None]]]], 'where': [[False, 2, [0, [0, 24, False], None], '\"Dutch\"', None]], 'groupBy': [], 'having': [], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}, 'union': None, 'except': None}]], 'conds': []}, 'select': [False, [[3, [0, [0, 0, False], None]]]], 'where': [], 'groupBy': [], 'having': [], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "world_1",
    "query": "SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  \"English\" INTERSECT SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  \"French\"",
    "query_toks": "['SELECT', 'T1.Name', 'FROM', 'country', 'AS', 'T1', 'JOIN', 'countrylanguage', 'AS', 'T2', 'ON', 'T1.Code', '=', 'T2.CountryCode', 'WHERE', 'T2.Language', '=', '``', 'English', \"''\", 'INTERSECT', 'SELECT', 'T1.Name', 'FROM', 'country', 'AS', 'T1', 'JOIN', 'countrylanguage', 'AS', 'T2', 'ON', 'T1.Code', '=', 'T2.CountryCode', 'WHERE', 'T2.Language', '=', '``', 'French', \"''\"]",
    "query_toks_no_value": "['select', 't1', '.', 'name', 'from', 'country', 'as', 't1', 'join', 'countrylanguage', 'as', 't2', 'on', 't1', '.', 'code', '=', 't2', '.', 'countrycode', 'where', 't2', '.', 'language', '=', 'value', 'intersect', 'select', 't1', '.', 'name', 'from', 'country', 'as', 't1', 'join', 'countrylanguage', 'as', 't2', 'on', 't1', '.', 'code', '=', 't2', '.', 'countrycode', 'where', 't2', '.', 'language', '=', 'value']",
    "question": "What are the names of nations speak both English and French?",
    "question_th": "ชื่อประเทศใดบ้างที่พูดได้ทั้งภาษาอังกฤษและภาษาฝรั่งเศส",
    "question_toks": "['What', 'are', 'the', 'names', 'of', 'nations', 'speak', 'both', 'English', 'and', 'French', '?']",
    "sql": "{'from': {'table_units': [['table_unit', 2], ['table_unit', 3]], 'conds': [[False, 2, [0, [0, 8, False], None], [0, 23, False], None]]}, 'select': [False, [[0, [0, [0, 9, False], None]]]], 'where': [[False, 2, [0, [0, 24, False], None], '\"English\"', None]], 'groupBy': [], 'having': [], 'orderBy': [], 'limit': None, 'intersect': {'from': {'table_units': [['table_unit', 2], ['table_unit', 3]], 'conds': [[False, 2, [0, [0, 8, False], None], [0, 23, False], None]]}, 'select': [False, [[0, [0, [0, 9, False], None]]]], 'where': [[False, 2, [0, [0, 24, False], None], '\"French\"', None]], 'groupBy': [], 'having': [], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}, 'union': None, 'except': None}"
  },
  {
    "db_id": "world_1",
    "query": "SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  \"English\" INTERSECT SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  \"French\"",
    "query_toks": "['SELECT', 'T1.Name', 'FROM', 'country', 'AS', 'T1', 'JOIN', 'countrylanguage', 'AS', 'T2', 'ON', 'T1.Code', '=', 'T2.CountryCode', 'WHERE', 'T2.Language', '=', '``', 'English', \"''\", 'INTERSECT', 'SELECT', 'T1.Name', 'FROM', 'country', 'AS', 'T1', 'JOIN', 'countrylanguage', 'AS', 'T2', 'ON', 'T1.Code', '=', 'T2.CountryCode', 'WHERE', 'T2.Language', '=', '``', 'French', \"''\"]",
    "query_toks_no_value": "['select', 't1', '.', 'name', 'from', 'country', 'as', 't1', 'join', 'countrylanguage', 'as', 't2', 'on', 't1', '.', 'code', '=', 't2', '.', 'countrycode', 'where', 't2', '.', 'language', '=', 'value', 'intersect', 'select', 't1', '.', 'name', 'from', 'country', 'as', 't1', 'join', 'countrylanguage', 'as', 't2', 'on', 't1', '.', 'code', '=', 't2', '.', 'countrycode', 'where', 't2', '.', 'language', '=', 'value']",
    "question": "Give the names of nations that speak both English and French.",
    "question_th": "ระบุชื่อประเทศที่พูดทั้งภาษาอังกฤษและภาษาฝรั่งเศส",
    "question_toks": "['Give', 'the', 'names', 'of', 'nations', 'that', 'speak', 'both', 'English', 'and', 'French', '.']",
    "sql": "{'from': {'table_units': [['table_unit', 2], ['table_unit', 3]], 'conds': [[False, 2, [0, [0, 8, False], None], [0, 23, False], None]]}, 'select': [False, [[0, [0, [0, 9, False], None]]]], 'where': [[False, 2, [0, [0, 24, False], None], '\"English\"', None]], 'groupBy': [], 'having': [], 'orderBy': [], 'limit': None, 'intersect': {'from': {'table_units': [['table_unit', 2], ['table_unit', 3]], 'conds': [[False, 2, [0, [0, 8, False], None], [0, 23, False], None]]}, 'select': [False, [[0, [0, [0, 9, False], None]]]], 'where': [[False, 2, [0, [0, 24, False], None], '\"French\"', None]], 'groupBy': [], 'having': [], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}, 'union': None, 'except': None}"
  },
  {
    "db_id": "world_1",
    "query": "SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  \"English\" AND T2.IsOfficial  =  \"T\" INTERSECT SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  \"French\" AND T2.IsOfficial  =  \"T\"",
    "query_toks": "['SELECT', 'T1.Name', 'FROM', 'country', 'AS', 'T1', 'JOIN', 'countrylanguage', 'AS', 'T2', 'ON', 'T1.Code', '=', 'T2.CountryCode', 'WHERE', 'T2.Language', '=', '``', 'English', \"''\", 'AND', 'T2.IsOfficial', '=', '``', 'T', \"''\", 'INTERSECT', 'SELECT', 'T1.Name', 'FROM', 'country', 'AS', 'T1', 'JOIN', 'countrylanguage', 'AS', 'T2', 'ON', 'T1.Code', '=', 'T2.CountryCode', 'WHERE', 'T2.Language', '=', '``', 'French', \"''\", 'AND', 'T2.IsOfficial', '=', '``', 'T', \"''\"]",
    "query_toks_no_value": "['select', 't1', '.', 'name', 'from', 'country', 'as', 't1', 'join', 'countrylanguage', 'as', 't2', 'on', 't1', '.', 'code', '=', 't2', '.', 'countrycode', 'where', 't2', '.', 'language', '=', 'value', 'and', 't2', '.', 'isofficial', '=', 'value', 'intersect', 'select', 't1', '.', 'name', 'from', 'country', 'as', 't1', 'join', 'countrylanguage', 'as', 't2', 'on', 't1', '.', 'code', '=', 't2', '.', 'countrycode', 'where', 't2', '.', 'language', '=', 'value', 'and', 't2', '.', 'isofficial', '=', 'value']",
    "question": "What are the names of nations where both English and French are official languages?",
    "question_th": "ชื่อของประเทศใดที่มีทั้งภาษาอังกฤษและฝรั่งเศสเป็นภาษาราชการ?",
    "question_toks": "['What', 'are', 'the', 'names', 'of', 'nations', 'where', 'both', 'English', 'and', 'French', 'are', 'official', 'languages', '?']",
    "sql": "{'from': {'table_units': [['table_unit', 2], ['table_unit', 3]], 'conds': [[False, 2, [0, [0, 8, False], None], [0, 23, False], None]]}, 'select': [False, [[0, [0, [0, 9, False], None]]]], 'where': [[False, 2, [0, [0, 24, False], None], '\"English\"', None], 'and', [False, 2, [0, [0, 25, False], None], '\"T\"', None]], 'groupBy': [], 'having': [], 'orderBy': [], 'limit': None, 'intersect': {'from': {'table_units': [['table_unit', 2], ['table_unit', 3]], 'conds': [[False, 2, [0, [0, 8, False], None], [0, 23, False], None]]}, 'select': [False, [[0, [0, [0, 9, False], None]]]], 'where': [[False, 2, [0, [0, 24, False], None], '\"French\"', None], 'and', [False, 2, [0, [0, 25, False], None], '\"T\"', None]], 'groupBy': [], 'having': [], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}, 'union': None, 'except': None}"
  },
  {
    "db_id": "world_1",
    "query": "SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  \"English\" AND T2.IsOfficial  =  \"T\" INTERSECT SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  \"French\" AND T2.IsOfficial  =  \"T\"",
    "query_toks": "['SELECT', 'T1.Name', 'FROM', 'country', 'AS', 'T1', 'JOIN', 'countrylanguage', 'AS', 'T2', 'ON', 'T1.Code', '=', 'T2.CountryCode', 'WHERE', 'T2.Language', '=', '``', 'English', \"''\", 'AND', 'T2.IsOfficial', '=', '``', 'T', \"''\", 'INTERSECT', 'SELECT', 'T1.Name', 'FROM', 'country', 'AS', 'T1', 'JOIN', 'countrylanguage', 'AS', 'T2', 'ON', 'T1.Code', '=', 'T2.CountryCode', 'WHERE', 'T2.Language', '=', '``', 'French', \"''\", 'AND', 'T2.IsOfficial', '=', '``', 'T', \"''\"]",
    "query_toks_no_value": "['select', 't1', '.', 'name', 'from', 'country', 'as', 't1', 'join', 'countrylanguage', 'as', 't2', 'on', 't1', '.', 'code', '=', 't2', '.', 'countrycode', 'where', 't2', '.', 'language', '=', 'value', 'and', 't2', '.', 'isofficial', '=', 'value', 'intersect', 'select', 't1', '.', 'name', 'from', 'country', 'as', 't1', 'join', 'countrylanguage', 'as', 't2', 'on', 't1', '.', 'code', '=', 't2', '.', 'countrycode', 'where', 't2', '.', 'language', '=', 'value', 'and', 't2', '.', 'isofficial', '=', 'value']",
    "question": "Give the names of countries with English and French as official languages.",
    "question_th": "ตั้งชื่อประเทศโดยใช้ภาษาอังกฤษและภาษาฝรั่งเศสเป็นภาษาราชการ",
    "question_toks": "['Give', 'the', 'names', 'of', 'countries', 'with', 'English', 'and', 'French', 'as', 'official', 'languages', '.']",
    "sql": "{'from': {'table_units': [['table_unit', 2], ['table_unit', 3]], 'conds': [[False, 2, [0, [0, 8, False], None], [0, 23, False], None]]}, 'select': [False, [[0, [0, [0, 9, False], None]]]], 'where': [[False, 2, [0, [0, 24, False], None], '\"English\"', None], 'and', [False, 2, [0, [0, 25, False], None], '\"T\"', None]], 'groupBy': [], 'having': [], 'orderBy': [], 'limit': None, 'intersect': {'from': {'table_units': [['table_unit', 2], ['table_unit', 3]], 'conds': [[False, 2, [0, [0, 8, False], None], [0, 23, False], None]]}, 'select': [False, [[0, [0, [0, 9, False], None]]]], 'where': [[False, 2, [0, [0, 24, False], None], '\"French\"', None], 'and', [False, 2, [0, [0, 25, False], None], '\"T\"', None]], 'groupBy': [], 'having': [], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}, 'union': None, 'except': None}"
  },
  {
    "db_id": "world_1",
    "query": "SELECT COUNT( DISTINCT Continent) FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  \"Chinese\"",
    "query_toks": "['SELECT', 'COUNT', '(', 'DISTINCT', 'Continent', ')', 'FROM', 'country', 'AS', 'T1', 'JOIN', 'countrylanguage', 'AS', 'T2', 'ON', 'T1.Code', '=', 'T2.CountryCode', 'WHERE', 'T2.Language', '=', '``', 'Chinese', \"''\"]",
    "query_toks_no_value": "['select', 'count', '(', 'distinct', 'continent', ')', 'from', 'country', 'as', 't1', 'join', 'countrylanguage', 'as', 't2', 'on', 't1', '.', 'code', '=', 't2', '.', 'countrycode', 'where', 't2', '.', 'language', '=', 'value']",
    "question": "What is the number of distinct continents where Chinese is spoken?",
    "question_th": "ทวีปที่พูดภาษาจีนมีกี่ทวีป?",
    "question_toks": "['What', 'is', 'the', 'number', 'of', 'distinct', 'continents', 'where', 'Chinese', 'is', 'spoken', '?']",
    "sql": "{'from': {'table_units': [['table_unit', 2], ['table_unit', 3]], 'conds': [[False, 2, [0, [0, 8, False], None], [0, 23, False], None]]}, 'select': [False, [[3, [0, [0, 10, True], None]]]], 'where': [[False, 2, [0, [0, 24, False], None], '\"Chinese\"', None]], 'groupBy': [], 'having': [], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "world_1",
    "query": "SELECT COUNT( DISTINCT Continent) FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  \"Chinese\"",
    "query_toks": "['SELECT', 'COUNT', '(', 'DISTINCT', 'Continent', ')', 'FROM', 'country', 'AS', 'T1', 'JOIN', 'countrylanguage', 'AS', 'T2', 'ON', 'T1.Code', '=', 'T2.CountryCode', 'WHERE', 'T2.Language', '=', '``', 'Chinese', \"''\"]",
    "query_toks_no_value": "['select', 'count', '(', 'distinct', 'continent', ')', 'from', 'country', 'as', 't1', 'join', 'countrylanguage', 'as', 't2', 'on', 't1', '.', 'code', '=', 't2', '.', 'countrycode', 'where', 't2', '.', 'language', '=', 'value']",
    "question": "How many continents speak Chinese?",
    "question_th": "มีกี่ทวีปที่พูดภาษาจีน",
    "question_toks": "['How', 'many', 'continents', 'speak', 'Chinese', '?']",
    "sql": "{'from': {'table_units': [['table_unit', 2], ['table_unit', 3]], 'conds': [[False, 2, [0, [0, 8, False], None], [0, 23, False], None]]}, 'select': [False, [[3, [0, [0, 10, True], None]]]], 'where': [[False, 2, [0, [0, 24, False], None], '\"Chinese\"', None]], 'groupBy': [], 'having': [], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "world_1",
    "query": "SELECT DISTINCT T1.Region FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  \"English\" OR T2.Language  =  \"Dutch\"",
    "query_toks": "['SELECT', 'DISTINCT', 'T1.Region', 'FROM', 'country', 'AS', 'T1', 'JOIN', 'countrylanguage', 'AS', 'T2', 'ON', 'T1.Code', '=', 'T2.CountryCode', 'WHERE', 'T2.Language', '=', '``', 'English', \"''\", 'OR', 'T2.Language', '=', '``', 'Dutch', \"''\"]",
    "query_toks_no_value": "['select', 'distinct', 't1', '.', 'region', 'from', 'country', 'as', 't1', 'join', 'countrylanguage', 'as', 't2', 'on', 't1', '.', 'code', '=', 't2', '.', 'countrycode', 'where', 't2', '.', 'language', '=', 'value', 'or', 't2', '.', 'language', '=', 'value']",
    "question": "What are the regions that use English or Dutch?",
    "question_th": "ภูมิภาคใดบ้างที่ใช้ภาษาอังกฤษหรือดัตช์?",
    "question_toks": "['What', 'are', 'the', 'regions', 'that', 'use', 'English', 'or', 'Dutch', '?']",
    "sql": "{'from': {'table_units': [['table_unit', 2], ['table_unit', 3]], 'conds': [[False, 2, [0, [0, 8, False], None], [0, 23, False], None]]}, 'select': [True, [[0, [0, [0, 11, False], None]]]], 'where': [[False, 2, [0, [0, 24, False], None], '\"English\"', None], 'or', [False, 2, [0, [0, 24, False], None], '\"Dutch\"', None]], 'groupBy': [], 'having': [], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "world_1",
    "query": "SELECT DISTINCT T1.Region FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  \"English\" OR T2.Language  =  \"Dutch\"",
    "query_toks": "['SELECT', 'DISTINCT', 'T1.Region', 'FROM', 'country', 'AS', 'T1', 'JOIN', 'countrylanguage', 'AS', 'T2', 'ON', 'T1.Code', '=', 'T2.CountryCode', 'WHERE', 'T2.Language', '=', '``', 'English', \"''\", 'OR', 'T2.Language', '=', '``', 'Dutch', \"''\"]",
    "query_toks_no_value": "['select', 'distinct', 't1', '.', 'region', 'from', 'country', 'as', 't1', 'join', 'countrylanguage', 'as', 't2', 'on', 't1', '.', 'code', '=', 't2', '.', 'countrycode', 'where', 't2', '.', 'language', '=', 'value', 'or', 't2', '.', 'language', '=', 'value']",
    "question": "Which regions speak Dutch or English?",
    "question_th": "ภูมิภาคใดที่พูดภาษาดัตช์หรือภาษาอังกฤษ",
    "question_toks": "['Which', 'regions', 'speak', 'Dutch', 'or', 'English', '?']",
    "sql": "{'from': {'table_units': [['table_unit', 2], ['table_unit', 3]], 'conds': [[False, 2, [0, [0, 8, False], None], [0, 23, False], None]]}, 'select': [True, [[0, [0, [0, 11, False], None]]]], 'where': [[False, 2, [0, [0, 24, False], None], '\"English\"', None], 'or', [False, 2, [0, [0, 24, False], None], '\"Dutch\"', None]], 'groupBy': [], 'having': [], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "world_1",
    "query": "select t1.name from country as t1 join countrylanguage as t2 on t1.code  =  t2.countrycode where t2.language  =  \"english\" and isofficial  =  \"t\" union select t1.name from country as t1 join countrylanguage as t2 on t1.code  =  t2.countrycode where t2.language  =  \"dutch\" and isofficial  =  \"t\"",
    "query_toks": "['select', 't1.name', 'from', 'country', 'as', 't1', 'join', 'countrylanguage', 'as', 't2', 'on', 't1.code', '=', 't2.countrycode', 'where', 't2.language', '=', '\"english\"', 'and', 'isofficial', '=', '\"t\"', 'union', 'select', 't1.name', 'from', 'country', 'as', 't1', 'join', 'countrylanguage', 'as', 't2', 'on', 't1.code', '=', 't2.countrycode', 'where', 't2.language', '=', '\"dutch\"', 'and', 'isofficial', '=', '\"t\"']",
    "query_toks_no_value": "['select', 't1', '.', 'name', 'from', 'country', 'as', 't1', 'join', 'countrylanguage', 'as', 't2', 'on', 't1', '.', 'code', '=', 't2', '.', 'countrycode', 'where', 't2', '.', 'language', '=', 'value', 'and', 'isofficial', '=', 'value', 'union', 'select', 't1', '.', 'name', 'from', 'country', 'as', 't1', 'join', 'countrylanguage', 'as', 't2', 'on', 't1', '.', 'code', '=', 't2', '.', 'countrycode', 'where', 't2', '.', 'language', '=', 'value', 'and', 'isofficial', '=', 'value']",
    "question": "What are the countries where either English or Dutch is the official language ?",
    "question_th": "ประเทศใดบ้างที่ภาษาอังกฤษหรือดัตช์เป็นภาษาราชการ?",
    "question_toks": "['What', 'are', 'the', 'countries', 'where', 'either', 'English', 'or', 'Dutch', 'is', 'the', 'official', 'language', '?']",
    "sql": "{'from': {'table_units': [['table_unit', 2], ['table_unit', 3]], 'conds': [[False, 2, [0, [0, 8, False], None], [0, 23, False], None]]}, 'select': [False, [[0, [0, [0, 9, False], None]]]], 'where': [[False, 2, [0, [0, 24, False], None], '\"english\"', None], 'and', [False, 2, [0, [0, 25, False], None], '\"t\"', None]], 'groupBy': [], 'having': [], 'orderBy': [], 'limit': None, 'intersect': None, 'union': {'from': {'table_units': [['table_unit', 2], ['table_unit', 3]], 'conds': [[False, 2, [0, [0, 8, False], None], [0, 23, False], None]]}, 'select': [False, [[0, [0, [0, 9, False], None]]]], 'where': [[False, 2, [0, [0, 24, False], None], '\"dutch\"', None], 'and', [False, 2, [0, [0, 25, False], None], '\"t\"', None]], 'groupBy': [], 'having': [], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}, 'except': None}"
  },
  {
    "db_id": "world_1",
    "query": "SELECT * FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  \"English\" AND IsOfficial  =  \"T\" UNION SELECT * FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  \"Dutch\" AND IsOfficial  =  \"T\"",
    "query_toks": "['SELECT', '*', 'FROM', 'country', 'AS', 'T1', 'JOIN', 'countrylanguage', 'AS', 'T2', 'ON', 'T1.Code', '=', 'T2.CountryCode', 'WHERE', 'T2.Language', '=', '``', 'English', \"''\", 'AND', 'IsOfficial', '=', '``', 'T', \"''\", 'UNION', 'SELECT', '*', 'FROM', 'country', 'AS', 'T1', 'JOIN', 'countrylanguage', 'AS', 'T2', 'ON', 'T1.Code', '=', 'T2.CountryCode', 'WHERE', 'T2.Language', '=', '``', 'Dutch', \"''\", 'AND', 'IsOfficial', '=', '``', 'T', \"''\"]",
    "query_toks_no_value": "['select', '*', 'from', 'country', 'as', 't1', 'join', 'countrylanguage', 'as', 't2', 'on', 't1', '.', 'code', '=', 't2', '.', 'countrycode', 'where', 't2', '.', 'language', '=', 'value', 'and', 'isofficial', '=', 'value', 'union', 'select', '*', 'from', 'country', 'as', 't1', 'join', 'countrylanguage', 'as', 't2', 'on', 't1', '.', 'code', '=', 't2', '.', 'countrycode', 'where', 't2', '.', 'language', '=', 'value', 'and', 'isofficial', '=', 'value']",
    "question": "Which countries have either English or Dutch as an official language?",
    "question_th": "ประเทศใดบ้างที่มีภาษาอังกฤษหรือภาษาดัตช์เป็นภาษาราชการ?",
    "question_toks": "['Which', 'countries', 'have', 'either', 'English', 'or', 'Dutch', 'as', 'an', 'official', 'language', '?']",
    "sql": "{'from': {'table_units': [['table_unit', 2], ['table_unit', 3]], 'conds': [[False, 2, [0, [0, 8, False], None], [0, 23, False], None]]}, 'select': [False, [[0, [0, [0, 0, False], None]]]], 'where': [[False, 2, [0, [0, 24, False], None], '\"English\"', None], 'and', [False, 2, [0, [0, 25, False], None], '\"T\"', None]], 'groupBy': [], 'having': [], 'orderBy': [], 'limit': None, 'intersect': None, 'union': {'from': {'table_units': [['table_unit', 2], ['table_unit', 3]], 'conds': [[False, 2, [0, [0, 8, False], None], [0, 23, False], None]]}, 'select': [False, [[0, [0, [0, 0, False], None]]]], 'where': [[False, 2, [0, [0, 24, False], None], '\"Dutch\"', None], 'and', [False, 2, [0, [0, 25, False], None], '\"T\"', None]], 'groupBy': [], 'having': [], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}, 'except': None}"
  },
  {
    "db_id": "world_1",
    "query": "SELECT T2.Language FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T1.Continent  =  \"Asia\" GROUP BY T2.Language ORDER BY COUNT (*) DESC LIMIT 1",
    "query_toks": "['SELECT', 'T2.Language', 'FROM', 'country', 'AS', 'T1', 'JOIN', 'countrylanguage', 'AS', 'T2', 'ON', 'T1.Code', '=', 'T2.CountryCode', 'WHERE', 'T1.Continent', '=', '``', 'Asia', \"''\", 'GROUP', 'BY', 'T2.Language', 'ORDER', 'BY', 'COUNT', '(', '*', ')', 'DESC', 'LIMIT', '1']",
    "query_toks_no_value": "['select', 't2', '.', 'language', 'from', 'country', 'as', 't1', 'join', 'countrylanguage', 'as', 't2', 'on', 't1', '.', 'code', '=', 't2', '.', 'countrycode', 'where', 't1', '.', 'continent', '=', 'value', 'group', 'by', 't2', '.', 'language', 'order', 'by', 'count', '(', '*', ')', 'desc', 'limit', 'value']",
    "question": "Which language is the most popular on the Asian continent?",
    "question_th": "ภาษาใดที่ได้รับความนิยมมากที่สุดในทวีปเอเชีย",
    "question_toks": "['Which', 'language', 'is', 'the', 'most', 'popular', 'on', 'the', 'Asian', 'continent', '?']",
    "sql": "{'from': {'table_units': [['table_unit', 2], ['table_unit', 3]], 'conds': [[False, 2, [0, [0, 8, False], None], [0, 23, False], None]]}, 'select': [False, [[0, [0, [0, 24, False], None]]]], 'where': [[False, 2, [0, [0, 10, False], None], '\"Asia\"', None]], 'groupBy': [[0, 24, False]], 'having': [], 'orderBy': ['desc', [[0, [3, 0, False], None]]], 'limit': 1, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "world_1",
    "query": "SELECT T2.Language FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T1.Continent  =  \"Asia\" GROUP BY T2.Language ORDER BY COUNT (*) DESC LIMIT 1",
    "query_toks": "['SELECT', 'T2.Language', 'FROM', 'country', 'AS', 'T1', 'JOIN', 'countrylanguage', 'AS', 'T2', 'ON', 'T1.Code', '=', 'T2.CountryCode', 'WHERE', 'T1.Continent', '=', '``', 'Asia', \"''\", 'GROUP', 'BY', 'T2.Language', 'ORDER', 'BY', 'COUNT', '(', '*', ')', 'DESC', 'LIMIT', '1']",
    "query_toks_no_value": "['select', 't2', '.', 'language', 'from', 'country', 'as', 't1', 'join', 'countrylanguage', 'as', 't2', 'on', 't1', '.', 'code', '=', 't2', '.', 'countrycode', 'where', 't1', '.', 'continent', '=', 'value', 'group', 'by', 't2', '.', 'language', 'order', 'by', 'count', '(', '*', ')', 'desc', 'limit', 'value']",
    "question": "What is the language that is used by the largest number of Asian nations?",
    "question_th": "ประเทศในเอเชียจำนวนมากที่สุดใช้ภาษาอะไร?",
    "question_toks": "['What', 'is', 'the', 'language', 'that', 'is', 'used', 'by', 'the', 'largest', 'number', 'of', 'Asian', 'nations', '?']",
    "sql": "{'from': {'table_units': [['table_unit', 2], ['table_unit', 3]], 'conds': [[False, 2, [0, [0, 8, False], None], [0, 23, False], None]]}, 'select': [False, [[0, [0, [0, 24, False], None]]]], 'where': [[False, 2, [0, [0, 10, False], None], '\"Asia\"', None]], 'groupBy': [[0, 24, False]], 'having': [], 'orderBy': ['desc', [[0, [3, 0, False], None]]], 'limit': 1, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "world_1",
    "query": "SELECT T2.Language FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T1.GovernmentForm  =  \"Republic\" GROUP BY T2.Language HAVING COUNT(*)  =  1",
    "query_toks": "['SELECT', 'T2.Language', 'FROM', 'country', 'AS', 'T1', 'JOIN', 'countrylanguage', 'AS', 'T2', 'ON', 'T1.Code', '=', 'T2.CountryCode', 'WHERE', 'T1.GovernmentForm', '=', '``', 'Republic', \"''\", 'GROUP', 'BY', 'T2.Language', 'HAVING', 'COUNT', '(', '*', ')', '=', '1']",
    "query_toks_no_value": "['select', 't2', '.', 'language', 'from', 'country', 'as', 't1', 'join', 'countrylanguage', 'as', 't2', 'on', 't1', '.', 'code', '=', 't2', '.', 'countrycode', 'where', 't1', '.', 'governmentform', '=', 'value', 'group', 'by', 't2', '.', 'language', 'having', 'count', '(', '*', ')', '=', 'value']",
    "question": "Which languages are spoken by only one country in republic governments?",
    "question_th": "ประเทศใดในรัฐบาลสาธารณรัฐเพียงประเทศเดียวที่พูดภาษาใด",
    "question_toks": "['Which', 'languages', 'are', 'spoken', 'by', 'only', 'one', 'country', 'in', 'republic', 'governments', '?']",
    "sql": "{'from': {'table_units': [['table_unit', 2], ['table_unit', 3]], 'conds': [[False, 2, [0, [0, 8, False], None], [0, 23, False], None]]}, 'select': [False, [[0, [0, [0, 24, False], None]]]], 'where': [[False, 2, [0, [0, 19, False], None], '\"Republic\"', None]], 'groupBy': [[0, 24, False]], 'having': [[False, 2, [0, [3, 0, False], None], 1.0, None]], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "world_1",
    "query": "SELECT T2.Language FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T1.GovernmentForm  =  \"Republic\" GROUP BY T2.Language HAVING COUNT(*)  =  1",
    "query_toks": "['SELECT', 'T2.Language', 'FROM', 'country', 'AS', 'T1', 'JOIN', 'countrylanguage', 'AS', 'T2', 'ON', 'T1.Code', '=', 'T2.CountryCode', 'WHERE', 'T1.GovernmentForm', '=', '``', 'Republic', \"''\", 'GROUP', 'BY', 'T2.Language', 'HAVING', 'COUNT', '(', '*', ')', '=', '1']",
    "query_toks_no_value": "['select', 't2', '.', 'language', 'from', 'country', 'as', 't1', 'join', 'countrylanguage', 'as', 't2', 'on', 't1', '.', 'code', '=', 't2', '.', 'countrycode', 'where', 't1', '.', 'governmentform', '=', 'value', 'group', 'by', 't2', '.', 'language', 'having', 'count', '(', '*', ')', '=', 'value']",
    "question": "What languages are only used by a single country with a republic government?",
    "question_th": "ประเทศใดที่มีรัฐบาลสาธารณรัฐใช้ภาษาใดบ้าง",
    "question_toks": "['What', 'languages', 'are', 'only', 'used', 'by', 'a', 'single', 'country', 'with', 'a', 'republic', 'government', '?']",
    "sql": "{'from': {'table_units': [['table_unit', 2], ['table_unit', 3]], 'conds': [[False, 2, [0, [0, 8, False], None], [0, 23, False], None]]}, 'select': [False, [[0, [0, [0, 24, False], None]]]], 'where': [[False, 2, [0, [0, 19, False], None], '\"Republic\"', None]], 'groupBy': [[0, 24, False]], 'having': [[False, 2, [0, [3, 0, False], None], 1.0, None]], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "world_1",
    "query": "SELECT T1.Name ,  T1.Population FROM city AS T1 JOIN countrylanguage AS T2 ON T1.CountryCode  =  T2.CountryCode WHERE T2.Language  =  \"English\" ORDER BY T1.Population DESC LIMIT 1",
    "query_toks": "['SELECT', 'T1.Name', ',', 'T1.Population', 'FROM', 'city', 'AS', 'T1', 'JOIN', 'countrylanguage', 'AS', 'T2', 'ON', 'T1.CountryCode', '=', 'T2.CountryCode', 'WHERE', 'T2.Language', '=', '``', 'English', \"''\", 'ORDER', 'BY', 'T1.Population', 'DESC', 'LIMIT', '1']",
    "query_toks_no_value": "['select', 't1', '.', 'name', ',', 't1', '.', 'population', 'from', 'city', 'as', 't1', 'join', 'countrylanguage', 'as', 't2', 'on', 't1', '.', 'countrycode', '=', 't2', '.', 'countrycode', 'where', 't2', '.', 'language', '=', 'value', 'order', 'by', 't1', '.', 'population', 'desc', 'limit', 'value']",
    "question": "Find the city with the largest population that uses English.",
    "question_th": "ค้นหาเมืองที่มีประชากรใช้ภาษาอังกฤษมากที่สุด",
    "question_toks": "['Find', 'the', 'city', 'with', 'the', 'largest', 'population', 'that', 'uses', 'English', '.']",
    "sql": "{'from': {'table_units': [['table_unit', 0], ['table_unit', 3]], 'conds': [[False, 2, [0, [0, 3, False], None], [0, 23, False], None]]}, 'select': [False, [[0, [0, [0, 2, False], None]], [0, [0, [0, 5, False], None]]]], 'where': [[False, 2, [0, [0, 24, False], None], '\"English\"', None]], 'groupBy': [], 'having': [], 'orderBy': ['desc', [[0, [0, 5, False], None]]], 'limit': 1, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "world_1",
    "query": "SELECT T1.Name ,  T1.Population FROM city AS T1 JOIN countrylanguage AS T2 ON T1.CountryCode  =  T2.CountryCode WHERE T2.Language  =  \"English\" ORDER BY T1.Population DESC LIMIT 1",
    "query_toks": "['SELECT', 'T1.Name', ',', 'T1.Population', 'FROM', 'city', 'AS', 'T1', 'JOIN', 'countrylanguage', 'AS', 'T2', 'ON', 'T1.CountryCode', '=', 'T2.CountryCode', 'WHERE', 'T2.Language', '=', '``', 'English', \"''\", 'ORDER', 'BY', 'T1.Population', 'DESC', 'LIMIT', '1']",
    "query_toks_no_value": "['select', 't1', '.', 'name', ',', 't1', '.', 'population', 'from', 'city', 'as', 't1', 'join', 'countrylanguage', 'as', 't2', 'on', 't1', '.', 'countrycode', '=', 't2', '.', 'countrycode', 'where', 't2', '.', 'language', '=', 'value', 'order', 'by', 't1', '.', 'population', 'desc', 'limit', 'value']",
    "question": "What is the most populace city that speaks English?",
    "question_th": "เมืองใดที่มีประชากรพูดภาษาอังกฤษมากที่สุดคือเมืองใด",
    "question_toks": "['What', 'is', 'the', 'most', 'populace', 'city', 'that', 'speaks', 'English', '?']",
    "sql": "{'from': {'table_units': [['table_unit', 0], ['table_unit', 3]], 'conds': [[False, 2, [0, [0, 3, False], None], [0, 23, False], None]]}, 'select': [False, [[0, [0, [0, 2, False], None]], [0, [0, [0, 5, False], None]]]], 'where': [[False, 2, [0, [0, 24, False], None], '\"English\"', None]], 'groupBy': [], 'having': [], 'orderBy': ['desc', [[0, [0, 5, False], None]]], 'limit': 1, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "world_1",
    "query": "SELECT Name ,  Population ,  LifeExpectancy FROM country WHERE Continent  =  \"Asia\" ORDER BY SurfaceArea DESC LIMIT 1",
    "query_toks": "['SELECT', 'Name', ',', 'Population', ',', 'LifeExpectancy', 'FROM', 'country', 'WHERE', 'Continent', '=', '``', 'Asia', \"''\", 'ORDER', 'BY', 'SurfaceArea', 'DESC', 'LIMIT', '1']",
    "query_toks_no_value": "['select', 'name', ',', 'population', ',', 'lifeexpectancy', 'from', 'country', 'where', 'continent', '=', 'value', 'order', 'by', 'surfacearea', 'desc', 'limit', 'value']",
    "question": "Find the name, population and expected life length of asian country with the largest area?",
    "question_th": "ค้นหาชื่อ ประชากร และอายุขัยที่คาดหวังของประเทศในเอเชียที่มีพื้นที่มากที่สุด?",
    "question_toks": "['Find', 'the', 'name', ',', 'population', 'and', 'expected', 'life', 'length', 'of', 'asian', 'country', 'with', 'the', 'largest', 'area', '?']",
    "sql": "{'from': {'table_units': [['table_unit', 2]], 'conds': []}, 'select': [False, [[0, [0, [0, 9, False], None]], [0, [0, [0, 14, False], None]], [0, [0, [0, 15, False], None]]]], 'where': [[False, 2, [0, [0, 10, False], None], '\"Asia\"', None]], 'groupBy': [], 'having': [], 'orderBy': ['desc', [[0, [0, 12, False], None]]], 'limit': 1, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "world_1",
    "query": "SELECT Name ,  Population ,  LifeExpectancy FROM country WHERE Continent  =  \"Asia\" ORDER BY SurfaceArea DESC LIMIT 1",
    "query_toks": "['SELECT', 'Name', ',', 'Population', ',', 'LifeExpectancy', 'FROM', 'country', 'WHERE', 'Continent', '=', '``', 'Asia', \"''\", 'ORDER', 'BY', 'SurfaceArea', 'DESC', 'LIMIT', '1']",
    "query_toks_no_value": "['select', 'name', ',', 'population', ',', 'lifeexpectancy', 'from', 'country', 'where', 'continent', '=', 'value', 'order', 'by', 'surfacearea', 'desc', 'limit', 'value']",
    "question": "What are the name, population, and life expectancy of the largest Asian country by land?",
    "question_th": "ชื่อ ประชากร และอายุขัยของประเทศในเอเชียที่ใหญ่ที่สุดเมื่อจำแนกตามที่ดินคือเท่าใด",
    "question_toks": "['What', 'are', 'the', 'name', ',', 'population', ',', 'and', 'life', 'expectancy', 'of', 'the', 'largest', 'Asian', 'country', 'by', 'land', '?']",
    "sql": "{'from': {'table_units': [['table_unit', 2]], 'conds': []}, 'select': [False, [[0, [0, [0, 9, False], None]], [0, [0, [0, 14, False], None]], [0, [0, [0, 15, False], None]]]], 'where': [[False, 2, [0, [0, 10, False], None], '\"Asia\"', None]], 'groupBy': [], 'having': [], 'orderBy': ['desc', [[0, [0, 12, False], None]]], 'limit': 1, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "world_1",
    "query": "SELECT avg(LifeExpectancy) FROM country WHERE Name NOT IN (SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  \"English\" AND T2.IsOfficial  =  \"T\")",
    "query_toks": "['SELECT', 'avg', '(', 'LifeExpectancy', ')', 'FROM', 'country', 'WHERE', 'Name', 'NOT', 'IN', '(', 'SELECT', 'T1.Name', 'FROM', 'country', 'AS', 'T1', 'JOIN', 'countrylanguage', 'AS', 'T2', 'ON', 'T1.Code', '=', 'T2.CountryCode', 'WHERE', 'T2.Language', '=', '``', 'English', \"''\", 'AND', 'T2.IsOfficial', '=', '``', 'T', \"''\", ')']",
    "query_toks_no_value": "['select', 'avg', '(', 'lifeexpectancy', ')', 'from', 'country', 'where', 'name', 'not', 'in', '(', 'select', 't1', '.', 'name', 'from', 'country', 'as', 't1', 'join', 'countrylanguage', 'as', 't2', 'on', 't1', '.', 'code', '=', 't2', '.', 'countrycode', 'where', 't2', '.', 'language', '=', 'value', 'and', 't2', '.', 'isofficial', '=', 'value', ')']",
    "question": "What is average life expectancy in the countries where English is not the official language?",
    "question_th": "อายุขัยเฉลี่ยในประเทศที่ภาษาอังกฤษไม่ใช่ภาษาราชการคือเท่าใด",
    "question_toks": "['What', 'is', 'average', 'life', 'expectancy', 'in', 'the', 'countries', 'where', 'English', 'is', 'not', 'the', 'official', 'language', '?']",
    "sql": "{'from': {'table_units': [['table_unit', 2]], 'conds': []}, 'select': [False, [[5, [0, [0, 15, False], None]]]], 'where': [[True, 8, [0, [0, 9, False], None], {'from': {'table_units': [['table_unit', 2], ['table_unit', 3]], 'conds': [[False, 2, [0, [0, 8, False], None], [0, 23, False], None]]}, 'select': [False, [[0, [0, [0, 9, False], None]]]], 'where': [[False, 2, [0, [0, 24, False], None], '\"English\"', None], 'and', [False, 2, [0, [0, 25, False], None], '\"T\"', None]], 'groupBy': [], 'having': [], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}, None]], 'groupBy': [], 'having': [], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "world_1",
    "query": "SELECT avg(LifeExpectancy) FROM country WHERE Name NOT IN (SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  \"English\" AND T2.IsOfficial  =  \"T\")",
    "query_toks": "['SELECT', 'avg', '(', 'LifeExpectancy', ')', 'FROM', 'country', 'WHERE', 'Name', 'NOT', 'IN', '(', 'SELECT', 'T1.Name', 'FROM', 'country', 'AS', 'T1', 'JOIN', 'countrylanguage', 'AS', 'T2', 'ON', 'T1.Code', '=', 'T2.CountryCode', 'WHERE', 'T2.Language', '=', '``', 'English', \"''\", 'AND', 'T2.IsOfficial', '=', '``', 'T', \"''\", ')']",
    "query_toks_no_value": "['select', 'avg', '(', 'lifeexpectancy', ')', 'from', 'country', 'where', 'name', 'not', 'in', '(', 'select', 't1', '.', 'name', 'from', 'country', 'as', 't1', 'join', 'countrylanguage', 'as', 't2', 'on', 't1', '.', 'code', '=', 't2', '.', 'countrycode', 'where', 't2', '.', 'language', '=', 'value', 'and', 't2', '.', 'isofficial', '=', 'value', ')']",
    "question": "Give the mean life expectancy of countries in which English is not the official language.",
    "question_th": "ให้อายุขัยเฉลี่ยของประเทศที่ภาษาอังกฤษไม่ใช่ภาษาราชการ",
    "question_toks": "['Give', 'the', 'mean', 'life', 'expectancy', 'of', 'countries', 'in', 'which', 'English', 'is', 'not', 'the', 'official', 'language', '.']",
    "sql": "{'from': {'table_units': [['table_unit', 2]], 'conds': []}, 'select': [False, [[5, [0, [0, 15, False], None]]]], 'where': [[True, 8, [0, [0, 9, False], None], {'from': {'table_units': [['table_unit', 2], ['table_unit', 3]], 'conds': [[False, 2, [0, [0, 8, False], None], [0, 23, False], None]]}, 'select': [False, [[0, [0, [0, 9, False], None]]]], 'where': [[False, 2, [0, [0, 24, False], None], '\"English\"', None], 'and', [False, 2, [0, [0, 25, False], None], '\"T\"', None]], 'groupBy': [], 'having': [], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}, None]], 'groupBy': [], 'having': [], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "world_1",
    "query": "SELECT sum(Population) FROM country WHERE Name NOT IN (SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  \"English\")",
    "query_toks": "['SELECT', 'sum', '(', 'Population', ')', 'FROM', 'country', 'WHERE', 'Name', 'NOT', 'IN', '(', 'SELECT', 'T1.Name', 'FROM', 'country', 'AS', 'T1', 'JOIN', 'countrylanguage', 'AS', 'T2', 'ON', 'T1.Code', '=', 'T2.CountryCode', 'WHERE', 'T2.Language', '=', '``', 'English', \"''\", ')']",
    "query_toks_no_value": "['select', 'sum', '(', 'population', ')', 'from', 'country', 'where', 'name', 'not', 'in', '(', 'select', 't1', '.', 'name', 'from', 'country', 'as', 't1', 'join', 'countrylanguage', 'as', 't2', 'on', 't1', '.', 'code', '=', 't2', '.', 'countrycode', 'where', 't2', '.', 'language', '=', 'value', ')']",
    "question": "What is the total number of people living in the nations that do not use English?",
    "question_th": "จำนวนประชากรทั้งหมดที่อาศัยอยู่ในประเทศที่ไม่ใช้ภาษาอังกฤษคือเท่าไร?",
    "question_toks": "['What', 'is', 'the', 'total', 'number', 'of', 'people', 'living', 'in', 'the', 'nations', 'that', 'do', 'not', 'use', 'English', '?']",
    "sql": "{'from': {'table_units': [['table_unit', 2]], 'conds': []}, 'select': [False, [[4, [0, [0, 14, False], None]]]], 'where': [[True, 8, [0, [0, 9, False], None], {'from': {'table_units': [['table_unit', 2], ['table_unit', 3]], 'conds': [[False, 2, [0, [0, 8, False], None], [0, 23, False], None]]}, 'select': [False, [[0, [0, [0, 9, False], None]]]], 'where': [[False, 2, [0, [0, 24, False], None], '\"English\"', None]], 'groupBy': [], 'having': [], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}, None]], 'groupBy': [], 'having': [], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "world_1",
    "query": "SELECT sum(Population) FROM country WHERE Name NOT IN (SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  \"English\")",
    "query_toks": "['SELECT', 'sum', '(', 'Population', ')', 'FROM', 'country', 'WHERE', 'Name', 'NOT', 'IN', '(', 'SELECT', 'T1.Name', 'FROM', 'country', 'AS', 'T1', 'JOIN', 'countrylanguage', 'AS', 'T2', 'ON', 'T1.Code', '=', 'T2.CountryCode', 'WHERE', 'T2.Language', '=', '``', 'English', \"''\", ')']",
    "query_toks_no_value": "['select', 'sum', '(', 'population', ')', 'from', 'country', 'where', 'name', 'not', 'in', '(', 'select', 't1', '.', 'name', 'from', 'country', 'as', 't1', 'join', 'countrylanguage', 'as', 't2', 'on', 't1', '.', 'code', '=', 't2', '.', 'countrycode', 'where', 't2', '.', 'language', '=', 'value', ')']",
    "question": "How many people live in countries that do not speak English?",
    "question_th": "มีกี่คนที่อาศัยอยู่ในประเทศที่ไม่พูดภาษาอังกฤษ?",
    "question_toks": "['How', 'many', 'people', 'live', 'in', 'countries', 'that', 'do', 'not', 'speak', 'English', '?']",
    "sql": "{'from': {'table_units': [['table_unit', 2]], 'conds': []}, 'select': [False, [[4, [0, [0, 14, False], None]]]], 'where': [[True, 8, [0, [0, 9, False], None], {'from': {'table_units': [['table_unit', 2], ['table_unit', 3]], 'conds': [[False, 2, [0, [0, 8, False], None], [0, 23, False], None]]}, 'select': [False, [[0, [0, [0, 9, False], None]]]], 'where': [[False, 2, [0, [0, 24, False], None], '\"English\"', None]], 'groupBy': [], 'having': [], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}, None]], 'groupBy': [], 'having': [], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "world_1",
    "query": "SELECT T2.Language FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T1.HeadOfState  =  \"Beatrix\" AND T2.IsOfficial  =  \"T\"",
    "query_toks": "['SELECT', 'T2.Language', 'FROM', 'country', 'AS', 'T1', 'JOIN', 'countrylanguage', 'AS', 'T2', 'ON', 'T1.Code', '=', 'T2.CountryCode', 'WHERE', 'T1.HeadOfState', '=', '``', 'Beatrix', \"''\", 'AND', 'T2.IsOfficial', '=', '``', 'T', \"''\"]",
    "query_toks_no_value": "['select', 't2', '.', 'language', 'from', 'country', 'as', 't1', 'join', 'countrylanguage', 'as', 't2', 'on', 't1', '.', 'code', '=', 't2', '.', 'countrycode', 'where', 't1', '.', 'headofstate', '=', 'value', 'and', 't2', '.', 'isofficial', '=', 'value']",
    "question": "What is the official language spoken in the country whose head of state is Beatrix?",
    "question_th": "ภาษาราชการที่ใช้ในประเทศที่มีประมุขแห่งรัฐคือเบียทริกซ์คือภาษาอะไร",
    "question_toks": "['What', 'is', 'the', 'official', 'language', 'spoken', 'in', 'the', 'country', 'whose', 'head', 'of', 'state', 'is', 'Beatrix', '?']",
    "sql": "{'from': {'table_units': [['table_unit', 2], ['table_unit', 3]], 'conds': [[False, 2, [0, [0, 8, False], None], [0, 23, False], None]]}, 'select': [False, [[0, [0, [0, 24, False], None]]]], 'where': [[False, 2, [0, [0, 20, False], None], '\"Beatrix\"', None], 'and', [False, 2, [0, [0, 25, False], None], '\"T\"', None]], 'groupBy': [], 'having': [], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "world_1",
    "query": "SELECT T2.Language FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T1.HeadOfState  =  \"Beatrix\" AND T2.IsOfficial  =  \"T\"",
    "query_toks": "['SELECT', 'T2.Language', 'FROM', 'country', 'AS', 'T1', 'JOIN', 'countrylanguage', 'AS', 'T2', 'ON', 'T1.Code', '=', 'T2.CountryCode', 'WHERE', 'T1.HeadOfState', '=', '``', 'Beatrix', \"''\", 'AND', 'T2.IsOfficial', '=', '``', 'T', \"''\"]",
    "query_toks_no_value": "['select', 't2', '.', 'language', 'from', 'country', 'as', 't1', 'join', 'countrylanguage', 'as', 't2', 'on', 't1', '.', 'code', '=', 't2', '.', 'countrycode', 'where', 't1', '.', 'headofstate', '=', 'value', 'and', 't2', '.', 'isofficial', '=', 'value']",
    "question": "What is the official language used in the country the name of whose head of state is Beatrix.",
    "question_th": "ภาษาราชการที่ใช้ในประเทศที่มีชื่อประมุขแห่งรัฐคือเบียทริกซ์คืออะไร",
    "question_toks": "['What', 'is', 'the', 'official', 'language', 'used', 'in', 'the', 'country', 'the', 'name', 'of', 'whose', 'head', 'of', 'state', 'is', 'Beatrix', '.']",
    "sql": "{'from': {'table_units': [['table_unit', 2], ['table_unit', 3]], 'conds': [[False, 2, [0, [0, 8, False], None], [0, 23, False], None]]}, 'select': [False, [[0, [0, [0, 24, False], None]]]], 'where': [[False, 2, [0, [0, 20, False], None], '\"Beatrix\"', None], 'and', [False, 2, [0, [0, 25, False], None], '\"T\"', None]], 'groupBy': [], 'having': [], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "world_1",
    "query": "SELECT count(DISTINCT T2.Language) FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE  IndepYear  <  1930 AND T2.IsOfficial  =  \"T\"",
    "query_toks": "['SELECT', 'count', '(', 'DISTINCT', 'T2.Language', ')', 'FROM', 'country', 'AS', 'T1', 'JOIN', 'countrylanguage', 'AS', 'T2', 'ON', 'T1.Code', '=', 'T2.CountryCode', 'WHERE', 'IndepYear', '<', '1930', 'AND', 'T2.IsOfficial', '=', '``', 'T', \"''\"]",
    "query_toks_no_value": "['select', 'count', '(', 'distinct', 't2', '.', 'language', ')', 'from', 'country', 'as', 't1', 'join', 'countrylanguage', 'as', 't2', 'on', 't1', '.', 'code', '=', 't2', '.', 'countrycode', 'where', 'indepyear', '<', 'value', 'and', 't2', '.', 'isofficial', '=', 'value']",
    "question": "What is the total number of unique official languages spoken in the countries that are founded before 1930?",
    "question_th": "จำนวนภาษาราชการที่ไม่ซ้ำกันทั้งหมดที่พูดในประเทศที่ก่อตั้งขึ้นก่อนปี 1930 คือเท่าใด",
    "question_toks": "['What', 'is', 'the', 'total', 'number', 'of', 'unique', 'official', 'languages', 'spoken', 'in', 'the', 'countries', 'that', 'are', 'founded', 'before', '1930', '?']",
    "sql": "{'from': {'table_units': [['table_unit', 2], ['table_unit', 3]], 'conds': [[False, 2, [0, [0, 8, False], None], [0, 23, False], None]]}, 'select': [False, [[3, [0, [0, 24, True], None]]]], 'where': [[False, 4, [0, [0, 13, False], None], 1930.0, None], 'and', [False, 2, [0, [0, 25, False], None], '\"T\"', None]], 'groupBy': [], 'having': [], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "world_1",
    "query": "SELECT count(DISTINCT T2.Language) FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE  IndepYear  <  1930 AND T2.IsOfficial  =  \"T\"",
    "query_toks": "['SELECT', 'count', '(', 'DISTINCT', 'T2.Language', ')', 'FROM', 'country', 'AS', 'T1', 'JOIN', 'countrylanguage', 'AS', 'T2', 'ON', 'T1.Code', '=', 'T2.CountryCode', 'WHERE', 'IndepYear', '<', '1930', 'AND', 'T2.IsOfficial', '=', '``', 'T', \"''\"]",
    "query_toks_no_value": "['select', 'count', '(', 'distinct', 't2', '.', 'language', ')', 'from', 'country', 'as', 't1', 'join', 'countrylanguage', 'as', 't2', 'on', 't1', '.', 'code', '=', 't2', '.', 'countrycode', 'where', 'indepyear', '<', 'value', 'and', 't2', '.', 'isofficial', '=', 'value']",
    "question": "For the countries founded before 1930, what is the total number of distinct official languages?",
    "question_th": "สำหรับประเทศที่ก่อตั้งก่อนปี 1930 ภาษาราชการที่แตกต่างกันมีจำนวนทั้งหมดเท่าใด",
    "question_toks": "['For', 'the', 'countries', 'founded', 'before', '1930', ',', 'what', 'is', 'the', 'total', 'number', 'of', 'distinct', 'official', 'languages', '?']",
    "sql": "{'from': {'table_units': [['table_unit', 2], ['table_unit', 3]], 'conds': [[False, 2, [0, [0, 8, False], None], [0, 23, False], None]]}, 'select': [False, [[3, [0, [0, 24, True], None]]]], 'where': [[False, 4, [0, [0, 13, False], None], 1930.0, None], 'and', [False, 2, [0, [0, 25, False], None], '\"T\"', None]], 'groupBy': [], 'having': [], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "world_1",
    "query": "SELECT Name FROM country WHERE SurfaceArea  >  (SELECT min(SurfaceArea) FROM country WHERE Continent  =  \"Europe\")",
    "query_toks": "['SELECT', 'Name', 'FROM', 'country', 'WHERE', 'SurfaceArea', '>', '(', 'SELECT', 'min', '(', 'SurfaceArea', ')', 'FROM', 'country', 'WHERE', 'Continent', '=', '``', 'Europe', \"''\", ')']",
    "query_toks_no_value": "['select', 'name', 'from', 'country', 'where', 'surfacearea', '>', '(', 'select', 'min', '(', 'surfacearea', ')', 'from', 'country', 'where', 'continent', '=', 'value', ')']",
    "question": "What are the countries that have greater surface area than any country in Europe?",
    "question_th": "ประเทศใดบ้างที่มีพื้นที่ผิวมากกว่าประเทศใดๆ ในยุโรป?",
    "question_toks": "['What', 'are', 'the', 'countries', 'that', 'have', 'greater', 'surface', 'area', 'than', 'any', 'country', 'in', 'Europe', '?']",
    "sql": "{'from': {'table_units': [['table_unit', 2]], 'conds': []}, 'select': [False, [[0, [0, [0, 9, False], None]]]], 'where': [[False, 3, [0, [0, 12, False], None], {'from': {'table_units': [['table_unit', 2]], 'conds': []}, 'select': [False, [[2, [0, [0, 12, False], None]]]], 'where': [[False, 2, [0, [0, 10, False], None], '\"Europe\"', None]], 'groupBy': [], 'having': [], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}, None]], 'groupBy': [], 'having': [], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "world_1",
    "query": "SELECT Name FROM country WHERE SurfaceArea  >  (SELECT min(SurfaceArea) FROM country WHERE Continent  =  \"Europe\")",
    "query_toks": "['SELECT', 'Name', 'FROM', 'country', 'WHERE', 'SurfaceArea', '>', '(', 'SELECT', 'min', '(', 'SurfaceArea', ')', 'FROM', 'country', 'WHERE', 'Continent', '=', '``', 'Europe', \"''\", ')']",
    "query_toks_no_value": "['select', 'name', 'from', 'country', 'where', 'surfacearea', '>', '(', 'select', 'min', '(', 'surfacearea', ')', 'from', 'country', 'where', 'continent', '=', 'value', ')']",
    "question": "Which countries have greater area than that of any country in Europe?",
    "question_th": "ประเทศใดมีพื้นที่มากกว่าประเทศใดๆ ในยุโรป",
    "question_toks": "['Which', 'countries', 'have', 'greater', 'area', 'than', 'that', 'of', 'any', 'country', 'in', 'Europe', '?']",
    "sql": "{'from': {'table_units': [['table_unit', 2]], 'conds': []}, 'select': [False, [[0, [0, [0, 9, False], None]]]], 'where': [[False, 3, [0, [0, 12, False], None], {'from': {'table_units': [['table_unit', 2]], 'conds': []}, 'select': [False, [[2, [0, [0, 12, False], None]]]], 'where': [[False, 2, [0, [0, 10, False], None], '\"Europe\"', None]], 'groupBy': [], 'having': [], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}, None]], 'groupBy': [], 'having': [], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "world_1",
    "query": "SELECT Name FROM country WHERE Continent  =  \"Africa\"  AND population  <  (SELECT max(population) FROM country WHERE Continent  =  \"Asia\")",
    "query_toks": "['SELECT', 'Name', 'FROM', 'country', 'WHERE', 'Continent', '=', '``', 'Africa', \"''\", 'AND', 'population', '<', '(', 'SELECT', 'max', '(', 'population', ')', 'FROM', 'country', 'WHERE', 'Continent', '=', '``', 'Asia', \"''\", ')']",
    "query_toks_no_value": "['select', 'name', 'from', 'country', 'where', 'continent', '=', 'value', 'and', 'population', '<', '(', 'select', 'max', '(', 'population', ')', 'from', 'country', 'where', 'continent', '=', 'value', ')']",
    "question": "What are the African countries that have a  population less than any country in Asia?",
    "question_th": "ประเทศในแอฟริกาที่มีประชากรน้อยกว่าประเทศใดในเอเชียคือประเทศใด",
    "question_toks": "['What', 'are', 'the', 'African', 'countries', 'that', 'have', 'a', 'population', 'less', 'than', 'any', 'country', 'in', 'Asia', '?']",
    "sql": "{'from': {'table_units': [['table_unit', 2]], 'conds': []}, 'select': [False, [[0, [0, [0, 9, False], None]]]], 'where': [[False, 2, [0, [0, 10, False], None], '\"Africa\"', None], 'and', [False, 4, [0, [0, 14, False], None], {'from': {'table_units': [['table_unit', 2]], 'conds': []}, 'select': [False, [[1, [0, [0, 14, False], None]]]], 'where': [[False, 2, [0, [0, 10, False], None], '\"Asia\"', None]], 'groupBy': [], 'having': [], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}, None]], 'groupBy': [], 'having': [], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "world_1",
    "query": "SELECT Name FROM country WHERE Continent  =  \"Africa\"  AND population  <  (SELECT min(population) FROM country WHERE Continent  =  \"Asia\")",
    "query_toks": "['SELECT', 'Name', 'FROM', 'country', 'WHERE', 'Continent', '=', '``', 'Africa', \"''\", 'AND', 'population', '<', '(', 'SELECT', 'min', '(', 'population', ')', 'FROM', 'country', 'WHERE', 'Continent', '=', '``', 'Asia', \"''\", ')']",
    "query_toks_no_value": "['select', 'name', 'from', 'country', 'where', 'continent', '=', 'value', 'and', 'population', '<', '(', 'select', 'min', '(', 'population', ')', 'from', 'country', 'where', 'continent', '=', 'value', ')']",
    "question": "Which African countries have a smaller population than that of any country in Asia?",
    "question_th": "ประเทศใดในแอฟริกาที่มีประชากรน้อยกว่าประเทศใดๆ ในเอเชีย",
    "question_toks": "['Which', 'African', 'countries', 'have', 'a', 'smaller', 'population', 'than', 'that', 'of', 'any', 'country', 'in', 'Asia', '?']",
    "sql": "{'from': {'table_units': [['table_unit', 2]], 'conds': []}, 'select': [False, [[0, [0, [0, 9, False], None]]]], 'where': [[False, 2, [0, [0, 10, False], None], '\"Africa\"', None], 'and', [False, 4, [0, [0, 14, False], None], {'from': {'table_units': [['table_unit', 2]], 'conds': []}, 'select': [False, [[2, [0, [0, 14, False], None]]]], 'where': [[False, 2, [0, [0, 10, False], None], '\"Asia\"', None]], 'groupBy': [], 'having': [], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}, None]], 'groupBy': [], 'having': [], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "world_1",
    "query": "SELECT Name FROM country WHERE Continent  =  \"Asia\"  AND population  >  (SELECT max(population) FROM country WHERE Continent  =  \"Africa\")",
    "query_toks": "['SELECT', 'Name', 'FROM', 'country', 'WHERE', 'Continent', '=', '``', 'Asia', \"''\", 'AND', 'population', '>', '(', 'SELECT', 'max', '(', 'population', ')', 'FROM', 'country', 'WHERE', 'Continent', '=', '``', 'Africa', \"''\", ')']",
    "query_toks_no_value": "['select', 'name', 'from', 'country', 'where', 'continent', '=', 'value', 'and', 'population', '>', '(', 'select', 'max', '(', 'population', ')', 'from', 'country', 'where', 'continent', '=', 'value', ')']",
    "question": "Which Asian countries have a population that is larger than any country in Africa?",
    "question_th": "ประเทศใดในเอเชียมีประชากรมากกว่าประเทศใดๆ ในแอฟริกา",
    "question_toks": "['Which', 'Asian', 'countries', 'have', 'a', 'population', 'that', 'is', 'larger', 'than', 'any', 'country', 'in', 'Africa', '?']",
    "sql": "{'from': {'table_units': [['table_unit', 2]], 'conds': []}, 'select': [False, [[0, [0, [0, 9, False], None]]]], 'where': [[False, 2, [0, [0, 10, False], None], '\"Asia\"', None], 'and', [False, 3, [0, [0, 14, False], None], {'from': {'table_units': [['table_unit', 2]], 'conds': []}, 'select': [False, [[1, [0, [0, 14, False], None]]]], 'where': [[False, 2, [0, [0, 10, False], None], '\"Africa\"', None]], 'groupBy': [], 'having': [], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}, None]], 'groupBy': [], 'having': [], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "world_1",
    "query": "SELECT Name FROM country WHERE Continent  =  \"Asia\"  AND population  >  (SELECT min(population) FROM country WHERE Continent  =  \"Africa\")",
    "query_toks": "['SELECT', 'Name', 'FROM', 'country', 'WHERE', 'Continent', '=', '``', 'Asia', \"''\", 'AND', 'population', '>', '(', 'SELECT', 'min', '(', 'population', ')', 'FROM', 'country', 'WHERE', 'Continent', '=', '``', 'Africa', \"''\", ')']",
    "query_toks_no_value": "['select', 'name', 'from', 'country', 'where', 'continent', '=', 'value', 'and', 'population', '>', '(', 'select', 'min', '(', 'population', ')', 'from', 'country', 'where', 'continent', '=', 'value', ')']",
    "question": "What are the Asian countries which have a population larger than that of any country in Africa?",
    "question_th": "ประเทศใดในเอเชียที่มีประชากรมากกว่าประเทศใดๆ ในแอฟริกา",
    "question_toks": "['What', 'are', 'the', 'Asian', 'countries', 'which', 'have', 'a', 'population', 'larger', 'than', 'that', 'of', 'any', 'country', 'in', 'Africa', '?']",
    "sql": "{'from': {'table_units': [['table_unit', 2]], 'conds': []}, 'select': [False, [[0, [0, [0, 9, False], None]]]], 'where': [[False, 2, [0, [0, 10, False], None], '\"Asia\"', None], 'and', [False, 3, [0, [0, 14, False], None], {'from': {'table_units': [['table_unit', 2]], 'conds': []}, 'select': [False, [[2, [0, [0, 14, False], None]]]], 'where': [[False, 2, [0, [0, 10, False], None], '\"Africa\"', None]], 'groupBy': [], 'having': [], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}, None]], 'groupBy': [], 'having': [], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "world_1",
    "query": "SELECT CountryCode FROM countrylanguage EXCEPT SELECT CountryCode FROM countrylanguage WHERE LANGUAGE  =  \"English\"",
    "query_toks": "['SELECT', 'CountryCode', 'FROM', 'countrylanguage', 'EXCEPT', 'SELECT', 'CountryCode', 'FROM', 'countrylanguage', 'WHERE', 'LANGUAGE', '=', '``', 'English', \"''\"]",
    "query_toks_no_value": "['select', 'countrycode', 'from', 'countrylanguage', 'except', 'select', 'countrycode', 'from', 'countrylanguage', 'where', 'language', '=', 'value']",
    "question": "What are the country codes for countries that do not speak English?",
    "question_th": "รหัสประเทศสำหรับประเทศที่ไม่พูดภาษาอังกฤษคืออะไร?",
    "question_toks": "['What', 'are', 'the', 'country', 'codes', 'for', 'countries', 'that', 'do', 'not', 'speak', 'English', '?']",
    "sql": "{'from': {'table_units': [['table_unit', 3]], 'conds': []}, 'select': [False, [[0, [0, [0, 23, False], None]]]], 'where': [], 'groupBy': [], 'having': [], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': {'from': {'table_units': [['table_unit', 3]], 'conds': []}, 'select': [False, [[0, [0, [0, 23, False], None]]]], 'where': [[False, 2, [0, [0, 24, False], None], '\"English\"', None]], 'groupBy': [], 'having': [], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}}"
  },
  {
    "db_id": "world_1",
    "query": "SELECT CountryCode FROM countrylanguage EXCEPT SELECT CountryCode FROM countrylanguage WHERE LANGUAGE  =  \"English\"",
    "query_toks": "['SELECT', 'CountryCode', 'FROM', 'countrylanguage', 'EXCEPT', 'SELECT', 'CountryCode', 'FROM', 'countrylanguage', 'WHERE', 'LANGUAGE', '=', '``', 'English', \"''\"]",
    "query_toks_no_value": "['select', 'countrycode', 'from', 'countrylanguage', 'except', 'select', 'countrycode', 'from', 'countrylanguage', 'where', 'language', '=', 'value']",
    "question": "Return the country codes for countries that do not speak English.",
    "question_th": "ส่งกลับรหัสประเทศสำหรับประเทศที่ไม่พูดภาษาอังกฤษ",
    "question_toks": "['Return', 'the', 'country', 'codes', 'for', 'countries', 'that', 'do', 'not', 'speak', 'English', '.']",
    "sql": "{'from': {'table_units': [['table_unit', 3]], 'conds': []}, 'select': [False, [[0, [0, [0, 23, False], None]]]], 'where': [], 'groupBy': [], 'having': [], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': {'from': {'table_units': [['table_unit', 3]], 'conds': []}, 'select': [False, [[0, [0, [0, 23, False], None]]]], 'where': [[False, 2, [0, [0, 24, False], None], '\"English\"', None]], 'groupBy': [], 'having': [], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}}"
  },
  {
    "db_id": "world_1",
    "query": "SELECT DISTINCT CountryCode FROM countrylanguage WHERE LANGUAGE != \"English\"",
    "query_toks": "['SELECT', 'DISTINCT', 'CountryCode', 'FROM', 'countrylanguage', 'WHERE', 'LANGUAGE', '!', '=', '``', 'English', \"''\"]",
    "query_toks_no_value": "['select', 'distinct', 'countrycode', 'from', 'countrylanguage', 'where', 'language', '!', '=', 'value']",
    "question": "What are the country codes of countries where people use languages other than English?",
    "question_th": "รหัสประเทศของประเทศใดบ้างที่ผู้คนใช้ภาษาอื่นที่ไม่ใช่ภาษาอังกฤษ",
    "question_toks": "['What', 'are', 'the', 'country', 'codes', 'of', 'countries', 'where', 'people', 'use', 'languages', 'other', 'than', 'English', '?']",
    "sql": "{'from': {'table_units': [['table_unit', 3]], 'conds': []}, 'select': [True, [[0, [0, [0, 23, False], None]]]], 'where': [[False, 7, [0, [0, 24, False], None], '\"English\"', None]], 'groupBy': [], 'having': [], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "world_1",
    "query": "SELECT DISTINCT CountryCode FROM countrylanguage WHERE LANGUAGE != \"English\"",
    "query_toks": "['SELECT', 'DISTINCT', 'CountryCode', 'FROM', 'countrylanguage', 'WHERE', 'LANGUAGE', '!', '=', '``', 'English', \"''\"]",
    "query_toks_no_value": "['select', 'distinct', 'countrycode', 'from', 'countrylanguage', 'where', 'language', '!', '=', 'value']",
    "question": "Give the country codes for countries in which people speak langauges that are not English.",
    "question_th": "ระบุรหัสประเทศสำหรับประเทศที่ผู้คนพูดภาษาที่ไม่ใช่ภาษาอังกฤษ",
    "question_toks": "['Give', 'the', 'country', 'codes', 'for', 'countries', 'in', 'which', 'people', 'speak', 'langauges', 'that', 'are', 'not', 'English', '.']",
    "sql": "{'from': {'table_units': [['table_unit', 3]], 'conds': []}, 'select': [True, [[0, [0, [0, 23, False], None]]]], 'where': [[False, 7, [0, [0, 24, False], None], '\"English\"', None]], 'groupBy': [], 'having': [], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "world_1",
    "query": "SELECT Code FROM country WHERE GovernmentForm != \"Republic\" EXCEPT SELECT CountryCode FROM countrylanguage WHERE LANGUAGE  =  \"English\"",
    "query_toks": "['SELECT', 'Code', 'FROM', 'country', 'WHERE', 'GovernmentForm', '!', '=', '``', 'Republic', \"''\", 'EXCEPT', 'SELECT', 'CountryCode', 'FROM', 'countrylanguage', 'WHERE', 'LANGUAGE', '=', '``', 'English', \"''\"]",
    "query_toks_no_value": "['select', 'code', 'from', 'country', 'where', 'governmentform', '!', '=', 'value', 'except', 'select', 'countrycode', 'from', 'countrylanguage', 'where', 'language', '=', 'value']",
    "question": "What are the codes of the countries that do not speak English and whose government forms are not Republic?",
    "question_th": "รหัสของประเทศที่ไม่พูดภาษาอังกฤษและรูปแบบการปกครองไม่ใช่สาธารณรัฐมีอะไรบ้าง",
    "question_toks": "['What', 'are', 'the', 'codes', 'of', 'the', 'countries', 'that', 'do', 'not', 'speak', 'English', 'and', 'whose', 'government', 'forms', 'are', 'not', 'Republic', '?']",
    "sql": "{'from': {'table_units': [['table_unit', 2]], 'conds': []}, 'select': [False, [[0, [0, [0, 8, False], None]]]], 'where': [[False, 7, [0, [0, 19, False], None], '\"Republic\"', None]], 'groupBy': [], 'having': [], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': {'from': {'table_units': [['table_unit', 3]], 'conds': []}, 'select': [False, [[0, [0, [0, 23, False], None]]]], 'where': [[False, 2, [0, [0, 24, False], None], '\"English\"', None]], 'groupBy': [], 'having': [], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}}"
  },
  {
    "db_id": "world_1",
    "query": "SELECT Code FROM country WHERE GovernmentForm != \"Republic\" EXCEPT SELECT CountryCode FROM countrylanguage WHERE LANGUAGE  =  \"English\"",
    "query_toks": "['SELECT', 'Code', 'FROM', 'country', 'WHERE', 'GovernmentForm', '!', '=', '``', 'Republic', \"''\", 'EXCEPT', 'SELECT', 'CountryCode', 'FROM', 'countrylanguage', 'WHERE', 'LANGUAGE', '=', '``', 'English', \"''\"]",
    "query_toks_no_value": "['select', 'code', 'from', 'country', 'where', 'governmentform', '!', '=', 'value', 'except', 'select', 'countrycode', 'from', 'countrylanguage', 'where', 'language', '=', 'value']",
    "question": "Return the codes of countries that do not speak English and do not have Republics for governments.",
    "question_th": "ส่งกลับรหัสประเทศที่ไม่พูดภาษาอังกฤษและไม่มีสาธารณรัฐสำหรับรัฐบาล",
    "question_toks": "['Return', 'the', 'codes', 'of', 'countries', 'that', 'do', 'not', 'speak', 'English', 'and', 'do', 'not', 'have', 'Republics', 'for', 'governments', '.']",
    "sql": "{'from': {'table_units': [['table_unit', 2]], 'conds': []}, 'select': [False, [[0, [0, [0, 8, False], None]]]], 'where': [[False, 7, [0, [0, 19, False], None], '\"Republic\"', None]], 'groupBy': [], 'having': [], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': {'from': {'table_units': [['table_unit', 3]], 'conds': []}, 'select': [False, [[0, [0, [0, 23, False], None]]]], 'where': [[False, 2, [0, [0, 24, False], None], '\"English\"', None]], 'groupBy': [], 'having': [], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}}"
  },
  {
    "db_id": "world_1",
    "query": "SELECT DISTINCT T2.Name FROM country AS T1 JOIN city AS T2 ON T2.CountryCode  =  T1.Code WHERE T1.Continent  =  'Europe' AND T1.Name NOT IN (SELECT T3.Name FROM country AS T3 JOIN countrylanguage AS T4 ON T3.Code  =  T4.CountryCode WHERE T4.IsOfficial  =  'T' AND T4.Language  =  'English')",
    "query_toks": "['SELECT', 'DISTINCT', 'T2.Name', 'FROM', 'country', 'AS', 'T1', 'JOIN', 'city', 'AS', 'T2', 'ON', 'T2.CountryCode', '=', 'T1.Code', 'WHERE', 'T1.Continent', '=', \"'Europe\", \"'\", 'AND', 'T1.Name', 'NOT', 'IN', '(', 'SELECT', 'T3.Name', 'FROM', 'country', 'AS', 'T3', 'JOIN', 'countrylanguage', 'AS', 'T4', 'ON', 'T3.Code', '=', 'T4.CountryCode', 'WHERE', 'T4.IsOfficial', '=', \"'T\", \"'\", 'AND', 'T4.Language', '=', \"'English\", \"'\", ')']",
    "query_toks_no_value": "['select', 'distinct', 't2', '.', 'name', 'from', 'country', 'as', 't1', 'join', 'city', 'as', 't2', 'on', 't2', '.', 'countrycode', '=', 't1', '.', 'code', 'where', 't1', '.', 'continent', '=', 'value', 'and', 't1', '.', 'name', 'not', 'in', '(', 'select', 't3', '.', 'name', 'from', 'country', 'as', 't3', 'join', 'countrylanguage', 'as', 't4', 'on', 't3', '.', 'code', '=', 't4', '.', 'countrycode', 'where', 't4', '.', 'isofficial', '=', 'value', 'and', 't4', '.', 'language', '=', 'value', ')']",
    "question": "Which cities are in European countries where English is not the official language?",
    "question_th": "เมืองใดบ้างที่อยู่ในประเทศแถบยุโรปที่ภาษาอังกฤษไม่ใช่ภาษาราชการ",
    "question_toks": "['Which', 'cities', 'are', 'in', 'European', 'countries', 'where', 'English', 'is', 'not', 'the', 'official', 'language', '?']",
    "sql": "{'from': {'table_units': [['table_unit', 2], ['table_unit', 0]], 'conds': [[False, 2, [0, [0, 3, False], None], [0, 8, False], None]]}, 'select': [True, [[0, [0, [0, 2, False], None]]]], 'where': [[False, 2, [0, [0, 10, False], None], '\"Europe\"', None], 'and', [True, 8, [0, [0, 9, False], None], {'from': {'table_units': [['table_unit', 2], ['table_unit', 3]], 'conds': [[False, 2, [0, [0, 8, False], None], [0, 23, False], None]]}, 'select': [False, [[0, [0, [0, 9, False], None]]]], 'where': [[False, 2, [0, [0, 25, False], None], '\"T\"', None], 'and', [False, 2, [0, [0, 24, False], None], '\"English\"', None]], 'groupBy': [], 'having': [], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}, None]], 'groupBy': [], 'having': [], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "world_1",
    "query": "SELECT DISTINCT T2.Name FROM country AS T1 JOIN city AS T2 ON T2.CountryCode  =  T1.Code WHERE T1.Continent  =  'Europe' AND T1.Name NOT IN (SELECT T3.Name FROM country AS T3 JOIN countrylanguage AS T4 ON T3.Code  =  T4.CountryCode WHERE T4.IsOfficial  =  'T' AND T4.Language  =  'English')",
    "query_toks": "['SELECT', 'DISTINCT', 'T2.Name', 'FROM', 'country', 'AS', 'T1', 'JOIN', 'city', 'AS', 'T2', 'ON', 'T2.CountryCode', '=', 'T1.Code', 'WHERE', 'T1.Continent', '=', \"'Europe\", \"'\", 'AND', 'T1.Name', 'NOT', 'IN', '(', 'SELECT', 'T3.Name', 'FROM', 'country', 'AS', 'T3', 'JOIN', 'countrylanguage', 'AS', 'T4', 'ON', 'T3.Code', '=', 'T4.CountryCode', 'WHERE', 'T4.IsOfficial', '=', \"'T\", \"'\", 'AND', 'T4.Language', '=', \"'English\", \"'\", ')']",
    "query_toks_no_value": "['select', 'distinct', 't2', '.', 'name', 'from', 'country', 'as', 't1', 'join', 'city', 'as', 't2', 'on', 't2', '.', 'countrycode', '=', 't1', '.', 'code', 'where', 't1', '.', 'continent', '=', 'value', 'and', 't1', '.', 'name', 'not', 'in', '(', 'select', 't3', '.', 'name', 'from', 'country', 'as', 't3', 'join', 'countrylanguage', 'as', 't4', 'on', 't3', '.', 'code', '=', 't4', '.', 'countrycode', 'where', 't4', '.', 'isofficial', '=', 'value', 'and', 't4', '.', 'language', '=', 'value', ')']",
    "question": "What are the names of cities in Europe for which English is not the official language?",
    "question_th": "ชื่อเมืองต่างๆ ในยุโรปที่ภาษาอังกฤษไม่ใช่ภาษาราชการมีชื่ออะไรบ้าง?",
    "question_toks": "['What', 'are', 'the', 'names', 'of', 'cities', 'in', 'Europe', 'for', 'which', 'English', 'is', 'not', 'the', 'official', 'language', '?']",
    "sql": "{'from': {'table_units': [['table_unit', 2], ['table_unit', 0]], 'conds': [[False, 2, [0, [0, 3, False], None], [0, 8, False], None]]}, 'select': [True, [[0, [0, [0, 2, False], None]]]], 'where': [[False, 2, [0, [0, 10, False], None], '\"Europe\"', None], 'and', [True, 8, [0, [0, 9, False], None], {'from': {'table_units': [['table_unit', 2], ['table_unit', 3]], 'conds': [[False, 2, [0, [0, 8, False], None], [0, 23, False], None]]}, 'select': [False, [[0, [0, [0, 9, False], None]]]], 'where': [[False, 2, [0, [0, 25, False], None], '\"T\"', None], 'and', [False, 2, [0, [0, 24, False], None], '\"English\"', None]], 'groupBy': [], 'having': [], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}, None]], 'groupBy': [], 'having': [], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "world_1",
    "query": "select distinct t3.name from country as t1 join countrylanguage as t2 on t1.code  =  t2.countrycode join city as t3 on t1.code  =  t3.countrycode where t2.isofficial  =  't' and t2.language  =  'chinese' and t1.continent  =  \"asia\"",
    "query_toks": "['select', 'distinct', 't3.name', 'from', 'country', 'as', 't1', 'join', 'countrylanguage', 'as', 't2', 'on', 't1.code', '=', 't2.countrycode', 'join', 'city', 'as', 't3', 'on', 't1.code', '=', 't3.countrycode', 'where', 't2.isofficial', '=', '\"t\"', 'and', 't2.language', '=', '\"chinese\"', 'and', 't1.continent', '=', '\"asia\"']",
    "query_toks_no_value": "['select', 'distinct', 't3', '.', 'name', 'from', 'country', 'as', 't1', 'join', 'countrylanguage', 'as', 't2', 'on', 't1', '.', 'code', '=', 't2', '.', 'countrycode', 'join', 'city', 'as', 't3', 'on', 't1', '.', 'code', '=', 't3', '.', 'countrycode', 'where', 't2', '.', 'isofficial', '=', 'value', 'and', 't2', '.', 'language', '=', 'value', 'and', 't1', '.', 'continent', '=', 'value']",
    "question": "Which unique cities are in Asian countries where Chinese is the official language ?",
    "question_th": "เมืองใดที่มีเอกลักษณ์เฉพาะในประเทศแถบเอเชียซึ่งมีภาษาจีนเป็นภาษาราชการ",
    "question_toks": "['Which', 'unique', 'cities', 'are', 'in', 'Asian', 'countries', 'where', 'Chinese', 'is', 'the', 'official', 'language', '?']",
    "sql": "{'from': {'table_units': [['table_unit', 2], ['table_unit', 3], ['table_unit', 0]], 'conds': [[False, 2, [0, [0, 8, False], None], [0, 23, False], None], 'and', [False, 2, [0, [0, 8, False], None], [0, 3, False], None]]}, 'select': [True, [[0, [0, [0, 2, False], None]]]], 'where': [[False, 2, [0, [0, 25, False], None], '\"t\"', None], 'and', [False, 2, [0, [0, 24, False], None], '\"chinese\"', None], 'and', [False, 2, [0, [0, 10, False], None], '\"asia\"', None]], 'groupBy': [], 'having': [], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "world_1",
    "query": "SELECT DISTINCT T3.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode JOIN city AS T3 ON T1.Code  =  T3.CountryCode WHERE T2.IsOfficial  =  'T' AND T2.Language  =  'Chinese' AND T1.Continent  =  \"Asia\"",
    "query_toks": "['SELECT', 'DISTINCT', 'T3.Name', 'FROM', 'country', 'AS', 'T1', 'JOIN', 'countrylanguage', 'AS', 'T2', 'ON', 'T1.Code', '=', 'T2.CountryCode', 'JOIN', 'city', 'AS', 'T3', 'ON', 'T1.Code', '=', 'T3.CountryCode', 'WHERE', 'T2.IsOfficial', '=', \"'T\", \"'\", 'AND', 'T2.Language', '=', \"'Chinese\", \"'\", 'AND', 'T1.Continent', '=', '``', 'Asia', \"''\"]",
    "query_toks_no_value": "['select', 'distinct', 't3', '.', 'name', 'from', 'country', 'as', 't1', 'join', 'countrylanguage', 'as', 't2', 'on', 't1', '.', 'code', '=', 't2', '.', 'countrycode', 'join', 'city', 'as', 't3', 'on', 't1', '.', 'code', '=', 't3', '.', 'countrycode', 'where', 't2', '.', 'isofficial', '=', 'value', 'and', 't2', '.', 'language', '=', 'value', 'and', 't1', '.', 'continent', '=', 'value']",
    "question": "Return the different names of cities that are in Asia and for which Chinese is the official language.",
    "question_th": "ส่งกลับชื่อเมืองต่างๆ ในเอเชีย และภาษาจีนเป็นภาษาราชการ",
    "question_toks": "['Return', 'the', 'different', 'names', 'of', 'cities', 'that', 'are', 'in', 'Asia', 'and', 'for', 'which', 'Chinese', 'is', 'the', 'official', 'language', '.']",
    "sql": "{'from': {'table_units': [['table_unit', 2], ['table_unit', 3], ['table_unit', 0]], 'conds': [[False, 2, [0, [0, 8, False], None], [0, 23, False], None], 'and', [False, 2, [0, [0, 8, False], None], [0, 3, False], None]]}, 'select': [True, [[0, [0, [0, 2, False], None]]]], 'where': [[False, 2, [0, [0, 25, False], None], '\"T\"', None], 'and', [False, 2, [0, [0, 24, False], None], '\"Chinese\"', None], 'and', [False, 2, [0, [0, 10, False], None], '\"Asia\"', None]], 'groupBy': [], 'having': [], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "world_1",
    "query": "SELECT Name ,  SurfaceArea ,  IndepYear FROM country ORDER BY Population LIMIT 1",
    "query_toks": "['SELECT', 'Name', ',', 'SurfaceArea', ',', 'IndepYear', 'FROM', 'country', 'ORDER', 'BY', 'Population', 'LIMIT', '1']",
    "query_toks_no_value": "['select', 'name', ',', 'surfacearea', ',', 'indepyear', 'from', 'country', 'order', 'by', 'population', 'limit', 'value']",
    "question": "What are the name, independence year, and surface area of the country with the smallest population?",
    "question_th": "ชื่ออะไร ปีเอกราช และพื้นที่ผิวของประเทศที่มีประชากรน้อยที่สุดคืออะไร",
    "question_toks": "['What', 'are', 'the', 'name', ',', 'independence', 'year', ',', 'and', 'surface', 'area', 'of', 'the', 'country', 'with', 'the', 'smallest', 'population', '?']",
    "sql": "{'from': {'table_units': [['table_unit', 2]], 'conds': []}, 'select': [False, [[0, [0, [0, 9, False], None]], [0, [0, [0, 12, False], None]], [0, [0, [0, 13, False], None]]]], 'where': [], 'groupBy': [], 'having': [], 'orderBy': ['asc', [[0, [0, 14, False], None]]], 'limit': 1, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "world_1",
    "query": "SELECT Name ,  SurfaceArea ,  IndepYear FROM country ORDER BY Population LIMIT 1",
    "query_toks": "['SELECT', 'Name', ',', 'SurfaceArea', ',', 'IndepYear', 'FROM', 'country', 'ORDER', 'BY', 'Population', 'LIMIT', '1']",
    "query_toks_no_value": "['select', 'name', ',', 'surfacearea', ',', 'indepyear', 'from', 'country', 'order', 'by', 'population', 'limit', 'value']",
    "question": "Give the name, year of independence, and surface area of the country that has the lowest population.",
    "question_th": "ระบุชื่อ ปีที่ได้รับเอกราช และพื้นที่ของประเทศที่มีประชากรน้อยที่สุด",
    "question_toks": "['Give', 'the', 'name', ',', 'year', 'of', 'independence', ',', 'and', 'surface', 'area', 'of', 'the', 'country', 'that', 'has', 'the', 'lowest', 'population', '.']",
    "sql": "{'from': {'table_units': [['table_unit', 2]], 'conds': []}, 'select': [False, [[0, [0, [0, 9, False], None]], [0, [0, [0, 12, False], None]], [0, [0, [0, 13, False], None]]]], 'where': [], 'groupBy': [], 'having': [], 'orderBy': ['asc', [[0, [0, 14, False], None]]], 'limit': 1, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "world_1",
    "query": "SELECT Name ,  population ,  HeadOfState FROM country ORDER BY SurfaceArea DESC LIMIT 1",
    "query_toks": "['SELECT', 'Name', ',', 'population', ',', 'HeadOfState', 'FROM', 'country', 'ORDER', 'BY', 'SurfaceArea', 'DESC', 'LIMIT', '1']",
    "query_toks_no_value": "['select', 'name', ',', 'population', ',', 'headofstate', 'from', 'country', 'order', 'by', 'surfacearea', 'desc', 'limit', 'value']",
    "question": "What are the population, name and leader of the country with the largest area?",
    "question_th": "ประชากร ชื่อ และผู้นำของประเทศที่มีพื้นที่มากที่สุดคือข้อใด",
    "question_toks": "['What', 'are', 'the', 'population', ',', 'name', 'and', 'leader', 'of', 'the', 'country', 'with', 'the', 'largest', 'area', '?']",
    "sql": "{'from': {'table_units': [['table_unit', 2]], 'conds': []}, 'select': [False, [[0, [0, [0, 9, False], None]], [0, [0, [0, 14, False], None]], [0, [0, [0, 20, False], None]]]], 'where': [], 'groupBy': [], 'having': [], 'orderBy': ['desc', [[0, [0, 12, False], None]]], 'limit': 1, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "world_1",
    "query": "SELECT Name ,  population ,  HeadOfState FROM country ORDER BY SurfaceArea DESC LIMIT 1",
    "query_toks": "['SELECT', 'Name', ',', 'population', ',', 'HeadOfState', 'FROM', 'country', 'ORDER', 'BY', 'SurfaceArea', 'DESC', 'LIMIT', '1']",
    "query_toks_no_value": "['select', 'name', ',', 'population', ',', 'headofstate', 'from', 'country', 'order', 'by', 'surfacearea', 'desc', 'limit', 'value']",
    "question": "Give the name, population, and head of state for the country that has the largest area.",
    "question_th": "ระบุชื่อ ประชากร และประมุขของประเทศที่มีพื้นที่มากที่สุด",
    "question_toks": "['Give', 'the', 'name', ',', 'population', ',', 'and', 'head', 'of', 'state', 'for', 'the', 'country', 'that', 'has', 'the', 'largest', 'area', '.']",
    "sql": "{'from': {'table_units': [['table_unit', 2]], 'conds': []}, 'select': [False, [[0, [0, [0, 9, False], None]], [0, [0, [0, 14, False], None]], [0, [0, [0, 20, False], None]]]], 'where': [], 'groupBy': [], 'having': [], 'orderBy': ['desc', [[0, [0, 12, False], None]]], 'limit': 1, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "world_1",
    "query": "SELECT COUNT(T2.Language) ,  T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode GROUP BY T1.Name HAVING COUNT(*)  >  2",
    "query_toks": "['SELECT', 'COUNT', '(', 'T2.Language', ')', ',', 'T1.Name', 'FROM', 'country', 'AS', 'T1', 'JOIN', 'countrylanguage', 'AS', 'T2', 'ON', 'T1.Code', '=', 'T2.CountryCode', 'GROUP', 'BY', 'T1.Name', 'HAVING', 'COUNT', '(', '*', ')', '>', '2']",
    "query_toks_no_value": "['select', 'count', '(', 't2', '.', 'language', ')', ',', 't1', '.', 'name', 'from', 'country', 'as', 't1', 'join', 'countrylanguage', 'as', 't2', 'on', 't1', '.', 'code', '=', 't2', '.', 'countrycode', 'group', 'by', 't1', '.', 'name', 'having', 'count', '(', '*', ')', '>', 'value']",
    "question": "Return the country name and the numbers of languages spoken for each country that speaks at least 3 languages.",
    "question_th": "ส่งกลับชื่อประเทศและจำนวนภาษาที่พูดสำหรับแต่ละประเทศที่พูดอย่างน้อย 3 ภาษา",
    "question_toks": "['Return', 'the', 'country', 'name', 'and', 'the', 'numbers', 'of', 'languages', 'spoken', 'for', 'each', 'country', 'that', 'speaks', 'at', 'least', '3', 'languages', '.']",
    "sql": "{'from': {'table_units': [['table_unit', 2], ['table_unit', 3]], 'conds': [[False, 2, [0, [0, 8, False], None], [0, 23, False], None]]}, 'select': [False, [[3, [0, [0, 24, False], None]], [0, [0, [0, 9, False], None]]]], 'where': [], 'groupBy': [[0, 9, False]], 'having': [[False, 3, [0, [3, 0, False], None], 2.0, None]], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "world_1",
    "query": "SELECT COUNT(T2.Language) ,  T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode GROUP BY T1.Name HAVING COUNT(*)  >  2",
    "query_toks": "['SELECT', 'COUNT', '(', 'T2.Language', ')', ',', 'T1.Name', 'FROM', 'country', 'AS', 'T1', 'JOIN', 'countrylanguage', 'AS', 'T2', 'ON', 'T1.Code', '=', 'T2.CountryCode', 'GROUP', 'BY', 'T1.Name', 'HAVING', 'COUNT', '(', '*', ')', '>', '2']",
    "query_toks_no_value": "['select', 'count', '(', 't2', '.', 'language', ')', ',', 't1', '.', 'name', 'from', 'country', 'as', 't1', 'join', 'countrylanguage', 'as', 't2', 'on', 't1', '.', 'code', '=', 't2', '.', 'countrycode', 'group', 'by', 't1', '.', 'name', 'having', 'count', '(', '*', ')', '>', 'value']",
    "question": "What are the names of countries that speak more than 2 languages, as well as how many languages they speak?",
    "question_th": "ประเทศที่พูดมากกว่า 2 ภาษามีชื่ออะไรบ้าง และพูดได้กี่ภาษา",
    "question_toks": "['What', 'are', 'the', 'names', 'of', 'countries', 'that', 'speak', 'more', 'than', '2', 'languages', ',', 'as', 'well', 'as', 'how', 'many', 'languages', 'they', 'speak', '?']",
    "sql": "{'from': {'table_units': [['table_unit', 2], ['table_unit', 3]], 'conds': [[False, 2, [0, [0, 8, False], None], [0, 23, False], None]]}, 'select': [False, [[3, [0, [0, 24, False], None]], [0, [0, [0, 9, False], None]]]], 'where': [], 'groupBy': [[0, 9, False]], 'having': [[False, 3, [0, [3, 0, False], None], 2.0, None]], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "world_1",
    "query": "SELECT count(*) ,  District FROM city WHERE Population  >  (SELECT avg(Population) FROM city) GROUP BY District",
    "query_toks": "['SELECT', 'count', '(', '*', ')', ',', 'District', 'FROM', 'city', 'WHERE', 'Population', '>', '(', 'SELECT', 'avg', '(', 'Population', ')', 'FROM', 'city', ')', 'GROUP', 'BY', 'District']",
    "query_toks_no_value": "['select', 'count', '(', '*', ')', ',', 'district', 'from', 'city', 'where', 'population', '>', '(', 'select', 'avg', '(', 'population', ')', 'from', 'city', ')', 'group', 'by', 'district']",
    "question": "Find the number of cities in each district whose population is greater than the average population of cities?",
    "question_th": "ค้นหาจำนวนเมืองในแต่ละเขตที่มีประชากรมากกว่าจำนวนประชากรเฉลี่ยของเมือง?",
    "question_toks": "['Find', 'the', 'number', 'of', 'cities', 'in', 'each', 'district', 'whose', 'population', 'is', 'greater', 'than', 'the', 'average', 'population', 'of', 'cities', '?']",
    "sql": "{'from': {'table_units': [['table_unit', 0]], 'conds': []}, 'select': [False, [[3, [0, [0, 0, False], None]], [0, [0, [0, 4, False], None]]]], 'where': [[False, 3, [0, [0, 5, False], None], {'from': {'table_units': [['table_unit', 0]], 'conds': []}, 'select': [False, [[5, [0, [0, 5, False], None]]]], 'where': [], 'groupBy': [], 'having': [], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}, None]], 'groupBy': [[0, 4, False]], 'having': [], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "world_1",
    "query": "SELECT count(*) ,  District FROM city WHERE Population  >  (SELECT avg(Population) FROM city) GROUP BY District",
    "query_toks": "['SELECT', 'count', '(', '*', ')', ',', 'District', 'FROM', 'city', 'WHERE', 'Population', '>', '(', 'SELECT', 'avg', '(', 'Population', ')', 'FROM', 'city', ')', 'GROUP', 'BY', 'District']",
    "query_toks_no_value": "['select', 'count', '(', '*', ')', ',', 'district', 'from', 'city', 'where', 'population', '>', '(', 'select', 'avg', '(', 'population', ')', 'from', 'city', ')', 'group', 'by', 'district']",
    "question": "How many cities in each district have a population that is above the average population across all cities?",
    "question_th": "มีกี่เมืองในแต่ละเขตที่มีประชากรสูงกว่าจำนวนประชากรเฉลี่ยในทุกเมือง",
    "question_toks": "['How', 'many', 'cities', 'in', 'each', 'district', 'have', 'a', 'population', 'that', 'is', 'above', 'the', 'average', 'population', 'across', 'all', 'cities', '?']",
    "sql": "{'from': {'table_units': [['table_unit', 0]], 'conds': []}, 'select': [False, [[3, [0, [0, 0, False], None]], [0, [0, [0, 4, False], None]]]], 'where': [[False, 3, [0, [0, 5, False], None], {'from': {'table_units': [['table_unit', 0]], 'conds': []}, 'select': [False, [[5, [0, [0, 5, False], None]]]], 'where': [], 'groupBy': [], 'having': [], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}, None]], 'groupBy': [[0, 4, False]], 'having': [], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "world_1",
    "query": "SELECT sum(Population) ,  GovernmentForm FROM country GROUP BY GovernmentForm HAVING avg(LifeExpectancy)  >  72",
    "query_toks": "['SELECT', 'sum', '(', 'Population', ')', ',', 'GovernmentForm', 'FROM', 'country', 'GROUP', 'BY', 'GovernmentForm', 'HAVING', 'avg', '(', 'LifeExpectancy', ')', '>', '72']",
    "query_toks_no_value": "['select', 'sum', '(', 'population', ')', ',', 'governmentform', 'from', 'country', 'group', 'by', 'governmentform', 'having', 'avg', '(', 'lifeexpectancy', ')', '>', 'value']",
    "question": "Find the government form name and total population for each government form whose average life expectancy is longer than 72.",
    "question_th": "ค้นหาชื่อแบบฟอร์มรัฐบาลและจำนวนประชากรทั้งหมดสำหรับแบบฟอร์มรัฐบาลแต่ละรูปแบบที่มีอายุขัยเฉลี่ยมากกว่า 72",
    "question_toks": "['Find', 'the', 'government', 'form', 'name', 'and', 'total', 'population', 'for', 'each', 'government', 'form', 'whose', 'average', 'life', 'expectancy', 'is', 'longer', 'than', '72', '.']",
    "sql": "{'from': {'table_units': [['table_unit', 2]], 'conds': []}, 'select': [False, [[4, [0, [0, 14, False], None]], [0, [0, [0, 19, False], None]]]], 'where': [], 'groupBy': [[0, 19, False]], 'having': [[False, 3, [0, [5, 15, False], None], 72.0, None]], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "world_1",
    "query": "SELECT sum(Population) ,  GovernmentForm FROM country GROUP BY GovernmentForm HAVING avg(LifeExpectancy)  >  72",
    "query_toks": "['SELECT', 'sum', '(', 'Population', ')', ',', 'GovernmentForm', 'FROM', 'country', 'GROUP', 'BY', 'GovernmentForm', 'HAVING', 'avg', '(', 'LifeExpectancy', ')', '>', '72']",
    "query_toks_no_value": "['select', 'sum', '(', 'population', ')', ',', 'governmentform', 'from', 'country', 'group', 'by', 'governmentform', 'having', 'avg', '(', 'lifeexpectancy', ')', '>', 'value']",
    "question": "What are the different government forms and what is the total population of each for government forms that have an average life expectancy greater than 72?",
    "question_th": "รูปแบบของรัฐบาลที่แตกต่างกันคืออะไร และจำนวนประชากรทั้งหมดของแต่ละรูปแบบสำหรับรูปแบบของรัฐบาลที่มีอายุขัยเฉลี่ยมากกว่า 72 เป็นเท่าใด",
    "question_toks": "['What', 'are', 'the', 'different', 'government', 'forms', 'and', 'what', 'is', 'the', 'total', 'population', 'of', 'each', 'for', 'government', 'forms', 'that', 'have', 'an', 'average', 'life', 'expectancy', 'greater', 'than', '72', '?']",
    "sql": "{'from': {'table_units': [['table_unit', 2]], 'conds': []}, 'select': [False, [[4, [0, [0, 14, False], None]], [0, [0, [0, 19, False], None]]]], 'where': [], 'groupBy': [[0, 19, False]], 'having': [[False, 3, [0, [5, 15, False], None], 72.0, None]], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "world_1",
    "query": "SELECT sum(Population) ,  avg(LifeExpectancy) ,  Continent FROM country GROUP BY Continent HAVING avg(LifeExpectancy)  <  72",
    "query_toks": "['SELECT', 'sum', '(', 'Population', ')', ',', 'avg', '(', 'LifeExpectancy', ')', ',', 'Continent', 'FROM', 'country', 'GROUP', 'BY', 'Continent', 'HAVING', 'avg', '(', 'LifeExpectancy', ')', '<', '72']",
    "query_toks_no_value": "['select', 'sum', '(', 'population', ')', ',', 'avg', '(', 'lifeexpectancy', ')', ',', 'continent', 'from', 'country', 'group', 'by', 'continent', 'having', 'avg', '(', 'lifeexpectancy', ')', '<', 'value']",
    "question": "Find the average life expectancy and total population for each continent where the average life expectancy is shorter than 72?",
    "question_th": "ค้นหาอายุขัยเฉลี่ยและจำนวนประชากรทั้งหมดในแต่ละทวีปที่มีอายุขัยเฉลี่ยน้อยกว่า 72?",
    "question_toks": "['Find', 'the', 'average', 'life', 'expectancy', 'and', 'total', 'population', 'for', 'each', 'continent', 'where', 'the', 'average', 'life', 'expectancy', 'is', 'shorter', 'than', '72', '?']",
    "sql": "{'from': {'table_units': [['table_unit', 2]], 'conds': []}, 'select': [False, [[4, [0, [0, 14, False], None]], [5, [0, [0, 15, False], None]], [0, [0, [0, 10, False], None]]]], 'where': [], 'groupBy': [[0, 10, False]], 'having': [[False, 4, [0, [5, 15, False], None], 72.0, None]], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "world_1",
    "query": "SELECT sum(Population) ,  avg(LifeExpectancy) ,  Continent FROM country GROUP BY Continent HAVING avg(LifeExpectancy)  <  72",
    "query_toks": "['SELECT', 'sum', '(', 'Population', ')', ',', 'avg', '(', 'LifeExpectancy', ')', ',', 'Continent', 'FROM', 'country', 'GROUP', 'BY', 'Continent', 'HAVING', 'avg', '(', 'LifeExpectancy', ')', '<', '72']",
    "query_toks_no_value": "['select', 'sum', '(', 'population', ')', ',', 'avg', '(', 'lifeexpectancy', ')', ',', 'continent', 'from', 'country', 'group', 'by', 'continent', 'having', 'avg', '(', 'lifeexpectancy', ')', '<', 'value']",
    "question": "What are the different continents and the total popuation and average life expectancy corresponding to each, for continents that have an average life expectancy less than 72?",
    "question_th": "ทวีปต่างๆ และจำนวนประชากรทั้งหมดและอายุขัยเฉลี่ยที่สอดคล้องกับแต่ละทวีปสำหรับทวีปที่มีอายุขัยเฉลี่ยน้อยกว่า 72 มีอะไรบ้าง",
    "question_toks": "['What', 'are', 'the', 'different', 'continents', 'and', 'the', 'total', 'popuation', 'and', 'average', 'life', 'expectancy', 'corresponding', 'to', 'each', ',', 'for', 'continents', 'that', 'have', 'an', 'average', 'life', 'expectancy', 'less', 'than', '72', '?']",
    "sql": "{'from': {'table_units': [['table_unit', 2]], 'conds': []}, 'select': [False, [[4, [0, [0, 14, False], None]], [5, [0, [0, 15, False], None]], [0, [0, [0, 10, False], None]]]], 'where': [], 'groupBy': [[0, 10, False]], 'having': [[False, 4, [0, [5, 15, False], None], 72.0, None]], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "world_1",
    "query": "SELECT Name ,  SurfaceArea FROM country ORDER BY SurfaceArea DESC LIMIT 5",
    "query_toks": "['SELECT', 'Name', ',', 'SurfaceArea', 'FROM', 'country', 'ORDER', 'BY', 'SurfaceArea', 'DESC', 'LIMIT', '5']",
    "query_toks_no_value": "['select', 'name', ',', 'surfacearea', 'from', 'country', 'order', 'by', 'surfacearea', 'desc', 'limit', 'value']",
    "question": "What are the names and areas of countries with the top 5 largest area?",
    "question_th": "ชื่อและพื้นที่ของประเทศที่มีพื้นที่ใหญ่ที่สุด 5 อันดับแรกคืออะไร?",
    "question_toks": "['What', 'are', 'the', 'names', 'and', 'areas', 'of', 'countries', 'with', 'the', 'top', '5', 'largest', 'area', '?']",
    "sql": "{'from': {'table_units': [['table_unit', 2]], 'conds': []}, 'select': [False, [[0, [0, [0, 9, False], None]], [0, [0, [0, 12, False], None]]]], 'where': [], 'groupBy': [], 'having': [], 'orderBy': ['desc', [[0, [0, 12, False], None]]], 'limit': 5, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "world_1",
    "query": "SELECT Name ,  SurfaceArea FROM country ORDER BY SurfaceArea DESC LIMIT 5",
    "query_toks": "['SELECT', 'Name', ',', 'SurfaceArea', 'FROM', 'country', 'ORDER', 'BY', 'SurfaceArea', 'DESC', 'LIMIT', '5']",
    "query_toks_no_value": "['select', 'name', ',', 'surfacearea', 'from', 'country', 'order', 'by', 'surfacearea', 'desc', 'limit', 'value']",
    "question": "Return the names and surface areas of the 5 largest countries.",
    "question_th": "ส่งกลับชื่อและพื้นที่ผิวของประเทศที่ใหญ่ที่สุด 5 ประเทศ",
    "question_toks": "['Return', 'the', 'names', 'and', 'surface', 'areas', 'of', 'the', '5', 'largest', 'countries', '.']",
    "sql": "{'from': {'table_units': [['table_unit', 2]], 'conds': []}, 'select': [False, [[0, [0, [0, 9, False], None]], [0, [0, [0, 12, False], None]]]], 'where': [], 'groupBy': [], 'having': [], 'orderBy': ['desc', [[0, [0, 12, False], None]]], 'limit': 5, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "world_1",
    "query": "SELECT Name FROM country ORDER BY Population DESC LIMIT 3",
    "query_toks": "['SELECT', 'Name', 'FROM', 'country', 'ORDER', 'BY', 'Population', 'DESC', 'LIMIT', '3']",
    "query_toks_no_value": "['select', 'name', 'from', 'country', 'order', 'by', 'population', 'desc', 'limit', 'value']",
    "question": "What are names of countries with the top 3 largest population?",
    "question_th": "ประเทศที่มีประชากรมากที่สุด 3 อันดับแรกชื่ออะไร?",
    "question_toks": "['What', 'are', 'names', 'of', 'countries', 'with', 'the', 'top', '3', 'largest', 'population', '?']",
    "sql": "{'from': {'table_units': [['table_unit', 2]], 'conds': []}, 'select': [False, [[0, [0, [0, 9, False], None]]]], 'where': [], 'groupBy': [], 'having': [], 'orderBy': ['desc', [[0, [0, 14, False], None]]], 'limit': 3, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "world_1",
    "query": "SELECT Name FROM country ORDER BY Population DESC LIMIT 3",
    "query_toks": "['SELECT', 'Name', 'FROM', 'country', 'ORDER', 'BY', 'Population', 'DESC', 'LIMIT', '3']",
    "query_toks_no_value": "['select', 'name', 'from', 'country', 'order', 'by', 'population', 'desc', 'limit', 'value']",
    "question": "Return the names of the 3 most populated countries.",
    "question_th": "ส่งกลับชื่อประเทศที่มีประชากรมากที่สุด 3 ประเทศ",
    "question_toks": "['Return', 'the', 'names', 'of', 'the', '3', 'most', 'populated', 'countries', '.']",
    "sql": "{'from': {'table_units': [['table_unit', 2]], 'conds': []}, 'select': [False, [[0, [0, [0, 9, False], None]]]], 'where': [], 'groupBy': [], 'having': [], 'orderBy': ['desc', [[0, [0, 14, False], None]]], 'limit': 3, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "world_1",
    "query": "SELECT Name FROM country ORDER BY Population ASC LIMIT 3",
    "query_toks": "['SELECT', 'Name', 'FROM', 'country', 'ORDER', 'BY', 'Population', 'ASC', 'LIMIT', '3']",
    "query_toks_no_value": "['select', 'name', 'from', 'country', 'order', 'by', 'population', 'asc', 'limit', 'value']",
    "question": "What are the names of the nations with the 3 lowest populations?",
    "question_th": "ประเทศที่มีประชากรน้อยที่สุด 3 อันดับแรกมีชื่ออะไรบ้าง?",
    "question_toks": "['What', 'are', 'the', 'names', 'of', 'the', 'nations', 'with', 'the', '3', 'lowest', 'populations', '?']",
    "sql": "{'from': {'table_units': [['table_unit', 2]], 'conds': []}, 'select': [False, [[0, [0, [0, 9, False], None]]]], 'where': [], 'groupBy': [], 'having': [], 'orderBy': ['asc', [[0, [0, 14, False], None]]], 'limit': 3, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "world_1",
    "query": "SELECT Name FROM country ORDER BY Population ASC LIMIT 3",
    "query_toks": "['SELECT', 'Name', 'FROM', 'country', 'ORDER', 'BY', 'Population', 'ASC', 'LIMIT', '3']",
    "query_toks_no_value": "['select', 'name', 'from', 'country', 'order', 'by', 'population', 'asc', 'limit', 'value']",
    "question": "Return the names of the 3 countries with the fewest people.",
    "question_th": "กลับรายชื่อ 3 ประเทศที่มีคนน้อยที่สุด",
    "question_toks": "['Return', 'the', 'names', 'of', 'the', '3', 'countries', 'with', 'the', 'fewest', 'people', '.']",
    "sql": "{'from': {'table_units': [['table_unit', 2]], 'conds': []}, 'select': [False, [[0, [0, [0, 9, False], None]]]], 'where': [], 'groupBy': [], 'having': [], 'orderBy': ['asc', [[0, [0, 14, False], None]]], 'limit': 3, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "world_1",
    "query": "SELECT count(*) FROM country WHERE continent  =  \"Asia\"",
    "query_toks": "['SELECT', 'count', '(', '*', ')', 'FROM', 'country', 'WHERE', 'continent', '=', '``', 'Asia', \"''\"]",
    "query_toks_no_value": "['select', 'count', '(', '*', ')', 'from', 'country', 'where', 'continent', '=', 'value']",
    "question": "how many countries are in Asia?",
    "question_th": "มีกี่ประเทศในเอเชีย?",
    "question_toks": "['how', 'many', 'countries', 'are', 'in', 'Asia', '?']",
    "sql": "{'from': {'table_units': [['table_unit', 2]], 'conds': []}, 'select': [False, [[3, [0, [0, 0, False], None]]]], 'where': [[False, 2, [0, [0, 10, False], None], '\"Asia\"', None]], 'groupBy': [], 'having': [], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "world_1",
    "query": "SELECT count(*) FROM country WHERE continent  =  \"Asia\"",
    "query_toks": "['SELECT', 'count', '(', '*', ')', 'FROM', 'country', 'WHERE', 'continent', '=', '``', 'Asia', \"''\"]",
    "query_toks_no_value": "['select', 'count', '(', '*', ')', 'from', 'country', 'where', 'continent', '=', 'value']",
    "question": "Count the number of countries in Asia.",
    "question_th": "นับจำนวนประเทศในเอเชีย",
    "question_toks": "['Count', 'the', 'number', 'of', 'countries', 'in', 'Asia', '.']",
    "sql": "{'from': {'table_units': [['table_unit', 2]], 'conds': []}, 'select': [False, [[3, [0, [0, 0, False], None]]]], 'where': [[False, 2, [0, [0, 10, False], None], '\"Asia\"', None]], 'groupBy': [], 'having': [], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "world_1",
    "query": "SELECT Name FROM country WHERE continent  =  \"Europe\" AND Population  =  \"80000\"",
    "query_toks": "['SELECT', 'Name', 'FROM', 'country', 'WHERE', 'continent', '=', '``', 'Europe', \"''\", 'AND', 'Population', '=', '``', '80000', \"''\"]",
    "query_toks_no_value": "['select', 'name', 'from', 'country', 'where', 'continent', '=', 'value', 'and', 'population', '=', 'value']",
    "question": "What are the names of the countries that are in the continent of Europe and have a population of 80000?",
    "question_th": "ประเทศที่อยู่ในทวีปยุโรปและมีประชากร 80,000 ชื่อประเทศอะไร",
    "question_toks": "['What', 'are', 'the', 'names', 'of', 'the', 'countries', 'that', 'are', 'in', 'the', 'continent', 'of', 'Europe', 'and', 'have', 'a', 'population', 'of', '80000', '?']",
    "sql": "{'from': {'table_units': [['table_unit', 2]], 'conds': []}, 'select': [False, [[0, [0, [0, 9, False], None]]]], 'where': [[False, 2, [0, [0, 10, False], None], '\"Europe\"', None], 'and', [False, 2, [0, [0, 14, False], None], '\"80000\"', None]], 'groupBy': [], 'having': [], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "world_1",
    "query": "SELECT Name FROM country WHERE continent  =  \"Europe\" AND Population  =  \"80000\"",
    "query_toks": "['SELECT', 'Name', 'FROM', 'country', 'WHERE', 'continent', '=', '``', 'Europe', \"''\", 'AND', 'Population', '=', '``', '80000', \"''\"]",
    "query_toks_no_value": "['select', 'name', 'from', 'country', 'where', 'continent', '=', 'value', 'and', 'population', '=', 'value']",
    "question": "Give the names of countries that are in Europe and have a population equal to 80000.",
    "question_th": "ระบุชื่อประเทศที่อยู่ในยุโรปและมีประชากรเท่ากับ 80000",
    "question_toks": "['Give', 'the', 'names', 'of', 'countries', 'that', 'are', 'in', 'Europe', 'and', 'have', 'a', 'population', 'equal', 'to', '80000', '.']",
    "sql": "{'from': {'table_units': [['table_unit', 2]], 'conds': []}, 'select': [False, [[0, [0, [0, 9, False], None]]]], 'where': [[False, 2, [0, [0, 10, False], None], '\"Europe\"', None], 'and', [False, 2, [0, [0, 14, False], None], '\"80000\"', None]], 'groupBy': [], 'having': [], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "world_1",
    "query": "select sum(population) ,  avg(surfacearea) from country where continent  =  \"north america\" and surfacearea  >  3000",
    "query_toks": "['select', 'sum', '(', 'population', ')', ',', 'avg', '(', 'surfacearea', ')', 'from', 'country', 'where', 'continent', '=', '\"north america\"', 'and', 'surfacearea', '>', '3000']",
    "query_toks_no_value": "['select', 'sum', '(', 'population', ')', ',', 'avg', '(', 'surfacearea', ')', 'from', 'country', 'where', 'continent', '=', 'value', 'and', 'surfacearea', '>', 'value']",
    "question": "What is the total population and average area of countries in the continent of North America whose area is bigger than 3000 ?",
    "question_th": "ประชากรทั้งหมดและพื้นที่เฉลี่ยของประเทศในทวีปอเมริกาเหนือซึ่งมีพื้นที่มากกว่า 3,000 คือเท่าใด",
    "question_toks": "['What', 'is', 'the', 'total', 'population', 'and', 'average', 'area', 'of', 'countries', 'in', 'the', 'continent', 'of', 'North', 'America', 'whose', 'area', 'is', 'bigger', 'than', '3000', '?']",
    "sql": "{'from': {'table_units': [['table_unit', 2]], 'conds': []}, 'select': [False, [[4, [0, [0, 14, False], None]], [5, [0, [0, 12, False], None]]]], 'where': [[False, 2, [0, [0, 10, False], None], '\"north america\"', None], 'and', [False, 3, [0, [0, 12, False], None], 3000.0, None]], 'groupBy': [], 'having': [], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "world_1",
    "query": "select sum(population) ,  avg(surfacearea) from country where continent  =  \"north america\" and surfacearea  >  3000",
    "query_toks": "['select', 'sum', '(', 'population', ')', ',', 'avg', '(', 'surfacearea', ')', 'from', 'country', 'where', 'continent', '=', '\"north america\"', 'and', 'surfacearea', '>', '3000']",
    "query_toks_no_value": "['select', 'sum', '(', 'population', ')', ',', 'avg', '(', 'surfacearea', ')', 'from', 'country', 'where', 'continent', '=', 'value', 'and', 'surfacearea', '>', 'value']",
    "question": "Give the total population and average surface area corresponding to countries in North America that have a surface area greater than 3000 .",
    "question_th": "ให้จำนวนประชากรทั้งหมดและพื้นที่ผิวเฉลี่ยที่สอดคล้องกับประเทศในทวีปอเมริกาเหนือที่มีพื้นที่ผิวมากกว่า 3000",
    "question_toks": "['Give', 'the', 'total', 'population', 'and', 'average', 'surface', 'area', 'corresponding', 'to', 'countries', 'in', 'North', 'America', 'that', 'have', 'a', 'surface', 'area', 'greater', 'than', '3000', '.']",
    "sql": "{'from': {'table_units': [['table_unit', 2]], 'conds': []}, 'select': [False, [[4, [0, [0, 14, False], None]], [5, [0, [0, 12, False], None]]]], 'where': [[False, 2, [0, [0, 10, False], None], '\"north america\"', None], 'and', [False, 3, [0, [0, 12, False], None], 3000.0, None]], 'groupBy': [], 'having': [], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "world_1",
    "query": "SELECT name FROM city WHERE Population BETWEEN 160000 AND 900000",
    "query_toks": "['SELECT', 'name', 'FROM', 'city', 'WHERE', 'Population', 'BETWEEN', '160000', 'AND', '900000']",
    "query_toks_no_value": "['select', 'name', 'from', 'city', 'where', 'population', 'between', 'value', 'and', 'value']",
    "question": "What are the cities whose population is between 160000 and 900000?",
    "question_th": "เมืองใดบ้างที่มีประชากรระหว่าง 160,000 ถึง 900,000 คน",
    "question_toks": "['What', 'are', 'the', 'cities', 'whose', 'population', 'is', 'between', '160000', 'and', '900000', '?']",
    "sql": "{'from': {'table_units': [['table_unit', 0]], 'conds': []}, 'select': [False, [[0, [0, [0, 2, False], None]]]], 'where': [[False, 1, [0, [0, 5, False], None], 160000.0, 900000.0]], 'groupBy': [], 'having': [], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "world_1",
    "query": "select name from city where population between 160000 and 900000",
    "query_toks": "['select', 'name', 'from', 'city', 'where', 'population', 'between', '160000', 'and', '900000']",
    "query_toks_no_value": "['select', 'name', 'from', 'city', 'where', 'population', 'between', 'value', 'and', 'value']",
    "question": "Return the names of cities that have a population between 160000 and 900000 .",
    "question_th": "ส่งกลับชื่อเมืองที่มีประชากรระหว่าง 160000 ถึง 900000",
    "question_toks": "['Return', 'the', 'names', 'of', 'cities', 'that', 'have', 'a', 'population', 'between', '160000', 'and', '900000', '.']",
    "sql": "{'from': {'table_units': [['table_unit', 0]], 'conds': []}, 'select': [False, [[0, [0, [0, 2, False], None]]]], 'where': [[False, 1, [0, [0, 5, False], None], 160000.0, 900000.0]], 'groupBy': [], 'having': [], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "world_1",
    "query": "SELECT LANGUAGE FROM countrylanguage GROUP BY LANGUAGE ORDER BY count(*) DESC LIMIT 1",
    "query_toks": "['SELECT', 'LANGUAGE', 'FROM', 'countrylanguage', 'GROUP', 'BY', 'LANGUAGE', 'ORDER', 'BY', 'count', '(', '*', ')', 'DESC', 'LIMIT', '1']",
    "query_toks_no_value": "['select', 'language', 'from', 'countrylanguage', 'group', 'by', 'language', 'order', 'by', 'count', '(', '*', ')', 'desc', 'limit', 'value']",
    "question": "Which language is spoken by the largest number of countries?",
    "question_th": "ประเทศใดพูดภาษาใดมากที่สุด?",
    "question_toks": "['Which', 'language', 'is', 'spoken', 'by', 'the', 'largest', 'number', 'of', 'countries', '?']",
    "sql": "{'from': {'table_units': [['table_unit', 3]], 'conds': []}, 'select': [False, [[0, [0, [0, 24, False], None]]]], 'where': [], 'groupBy': [[0, 24, False]], 'having': [], 'orderBy': ['desc', [[0, [3, 0, False], None]]], 'limit': 1, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "world_1",
    "query": "SELECT LANGUAGE FROM countrylanguage GROUP BY LANGUAGE ORDER BY count(*) DESC LIMIT 1",
    "query_toks": "['SELECT', 'LANGUAGE', 'FROM', 'countrylanguage', 'GROUP', 'BY', 'LANGUAGE', 'ORDER', 'BY', 'count', '(', '*', ')', 'DESC', 'LIMIT', '1']",
    "query_toks_no_value": "['select', 'language', 'from', 'countrylanguage', 'group', 'by', 'language', 'order', 'by', 'count', '(', '*', ')', 'desc', 'limit', 'value']",
    "question": "Give the language that is spoken in the most countries.",
    "question_th": "ให้ภาษาที่พูดกันในประเทศส่วนใหญ่",
    "question_toks": "['Give', 'the', 'language', 'that', 'is', 'spoken', 'in', 'the', 'most', 'countries', '.']",
    "sql": "{'from': {'table_units': [['table_unit', 3]], 'conds': []}, 'select': [False, [[0, [0, [0, 24, False], None]]]], 'where': [], 'groupBy': [[0, 24, False]], 'having': [], 'orderBy': ['desc', [[0, [3, 0, False], None]]], 'limit': 1, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "world_1",
    "query": "SELECT LANGUAGE ,  CountryCode ,  max(Percentage) FROM countrylanguage GROUP BY CountryCode",
    "query_toks": "['SELECT', 'LANGUAGE', ',', 'CountryCode', ',', 'max', '(', 'Percentage', ')', 'FROM', 'countrylanguage', 'GROUP', 'BY', 'CountryCode']",
    "query_toks_no_value": "['select', 'language', ',', 'countrycode', ',', 'max', '(', 'percentage', ')', 'from', 'countrylanguage', 'group', 'by', 'countrycode']",
    "question": "What is the language spoken by the largest percentage of people in each country?",
    "question_th": "ผู้คนส่วนใหญ่ในแต่ละประเทศพูดภาษาอะไร",
    "question_toks": "['What', 'is', 'the', 'language', 'spoken', 'by', 'the', 'largest', 'percentage', 'of', 'people', 'in', 'each', 'country', '?']",
    "sql": "{'from': {'table_units': [['table_unit', 3]], 'conds': []}, 'select': [False, [[0, [0, [0, 24, False], None]], [0, [0, [0, 23, False], None]], [1, [0, [0, 26, False], None]]]], 'where': [], 'groupBy': [[0, 23, False]], 'having': [], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "world_1",
    "query": "SELECT LANGUAGE ,  CountryCode ,  max(Percentage) FROM countrylanguage GROUP BY CountryCode",
    "query_toks": "['SELECT', 'LANGUAGE', ',', 'CountryCode', ',', 'max', '(', 'Percentage', ')', 'FROM', 'countrylanguage', 'GROUP', 'BY', 'CountryCode']",
    "query_toks_no_value": "['select', 'language', ',', 'countrycode', ',', 'max', '(', 'percentage', ')', 'from', 'countrylanguage', 'group', 'by', 'countrycode']",
    "question": "What are the country codes of the different countries, and what are the languages spoken by the greatest percentage of people for each?",
    "question_th": "รหัสประเทศของประเทศต่างๆ คืออะไร และภาษาใดบ้างที่มีคนพูดมากที่สุดในแต่ละประเทศ",
    "question_toks": "['What', 'are', 'the', 'country', 'codes', 'of', 'the', 'different', 'countries', ',', 'and', 'what', 'are', 'the', 'languages', 'spoken', 'by', 'the', 'greatest', 'percentage', 'of', 'people', 'for', 'each', '?']",
    "sql": "{'from': {'table_units': [['table_unit', 3]], 'conds': []}, 'select': [False, [[0, [0, [0, 24, False], None]], [0, [0, [0, 23, False], None]], [1, [0, [0, 26, False], None]]]], 'where': [], 'groupBy': [[0, 23, False]], 'having': [], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "world_1",
    "query": "SELECT count(*) ,   max(Percentage) FROM countrylanguage WHERE LANGUAGE  =  \"Spanish\" GROUP BY CountryCode",
    "query_toks": "['SELECT', 'count', '(', '*', ')', ',', 'max', '(', 'Percentage', ')', 'FROM', 'countrylanguage', 'WHERE', 'LANGUAGE', '=', '``', 'Spanish', \"''\", 'GROUP', 'BY', 'CountryCode']",
    "query_toks_no_value": "['select', 'count', '(', '*', ')', ',', 'max', '(', 'percentage', ')', 'from', 'countrylanguage', 'where', 'language', '=', 'value', 'group', 'by', 'countrycode']",
    "question": "What is the total number of countries where Spanish is spoken by the largest percentage of people?",
    "question_th": "จำนวนประเทศที่มีผู้พูดภาษาสเปนมากที่สุดคือจำนวนเท่าใด",
    "question_toks": "['What', 'is', 'the', 'total', 'number', 'of', 'countries', 'where', 'Spanish', 'is', 'spoken', 'by', 'the', 'largest', 'percentage', 'of', 'people', '?']",
    "sql": "{'from': {'table_units': [['table_unit', 3]], 'conds': []}, 'select': [False, [[3, [0, [0, 0, False], None]], [1, [0, [0, 26, False], None]]]], 'where': [[False, 2, [0, [0, 24, False], None], '\"Spanish\"', None]], 'groupBy': [[0, 23, False]], 'having': [], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "world_1",
    "query": "SELECT count(*) ,   max(Percentage) FROM countrylanguage WHERE LANGUAGE  =  \"Spanish\" GROUP BY CountryCode",
    "query_toks": "['SELECT', 'count', '(', '*', ')', ',', 'max', '(', 'Percentage', ')', 'FROM', 'countrylanguage', 'WHERE', 'LANGUAGE', '=', '``', 'Spanish', \"''\", 'GROUP', 'BY', 'CountryCode']",
    "query_toks_no_value": "['select', 'count', '(', '*', ')', ',', 'max', '(', 'percentage', ')', 'from', 'countrylanguage', 'where', 'language', '=', 'value', 'group', 'by', 'countrycode']",
    "question": "Count the number of countries for which Spanish is the predominantly spoken language.",
    "question_th": "นับจำนวนประเทศที่ใช้ภาษาสเปนเป็นภาษาพูดส่วนใหญ่",
    "question_toks": "['Count', 'the', 'number', 'of', 'countries', 'for', 'which', 'Spanish', 'is', 'the', 'predominantly', 'spoken', 'language', '.']",
    "sql": "{'from': {'table_units': [['table_unit', 3]], 'conds': []}, 'select': [False, [[3, [0, [0, 0, False], None]], [1, [0, [0, 26, False], None]]]], 'where': [[False, 2, [0, [0, 24, False], None], '\"Spanish\"', None]], 'groupBy': [[0, 23, False]], 'having': [], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "world_1",
    "query": "SELECT CountryCode ,  max(Percentage) FROM countrylanguage WHERE LANGUAGE  =  \"Spanish\" GROUP BY CountryCode",
    "query_toks": "['SELECT', 'CountryCode', ',', 'max', '(', 'Percentage', ')', 'FROM', 'countrylanguage', 'WHERE', 'LANGUAGE', '=', '``', 'Spanish', \"''\", 'GROUP', 'BY', 'CountryCode']",
    "query_toks_no_value": "['select', 'countrycode', ',', 'max', '(', 'percentage', ')', 'from', 'countrylanguage', 'where', 'language', '=', 'value', 'group', 'by', 'countrycode']",
    "question": "What are the codes of countries where Spanish is spoken by the largest percentage of people?",
    "question_th": "รหัสของประเทศใดที่ผู้คนพูดภาษาสเปนมากที่สุดคือรหัสอะไร",
    "question_toks": "['What', 'are', 'the', 'codes', 'of', 'countries', 'where', 'Spanish', 'is', 'spoken', 'by', 'the', 'largest', 'percentage', 'of', 'people', '?']",
    "sql": "{'from': {'table_units': [['table_unit', 3]], 'conds': []}, 'select': [False, [[0, [0, [0, 23, False], None]], [1, [0, [0, 26, False], None]]]], 'where': [[False, 2, [0, [0, 24, False], None], '\"Spanish\"', None]], 'groupBy': [[0, 23, False]], 'having': [], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "world_1",
    "query": "SELECT CountryCode ,  max(Percentage) FROM countrylanguage WHERE LANGUAGE  =  \"Spanish\" GROUP BY CountryCode",
    "query_toks": "['SELECT', 'CountryCode', ',', 'max', '(', 'Percentage', ')', 'FROM', 'countrylanguage', 'WHERE', 'LANGUAGE', '=', '``', 'Spanish', \"''\", 'GROUP', 'BY', 'CountryCode']",
    "query_toks_no_value": "['select', 'countrycode', ',', 'max', '(', 'percentage', ')', 'from', 'countrylanguage', 'where', 'language', '=', 'value', 'group', 'by', 'countrycode']",
    "question": "Return the codes of countries for which Spanish is the predominantly spoken language.",
    "question_th": "ส่งกลับรหัสประเทศที่ใช้ภาษาสเปนเป็นภาษาพูดส่วนใหญ่",
    "question_toks": "['Return', 'the', 'codes', 'of', 'countries', 'for', 'which', 'Spanish', 'is', 'the', 'predominantly', 'spoken', 'language', '.']",
    "sql": "{'from': {'table_units': [['table_unit', 3]], 'conds': []}, 'select': [False, [[0, [0, [0, 23, False], None]], [1, [0, [0, 26, False], None]]]], 'where': [[False, 2, [0, [0, 24, False], None], '\"Spanish\"', None]], 'groupBy': [[0, 23, False]], 'having': [], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "orchestra",
    "query": "SELECT count(*) FROM conductor",
    "query_toks": "['SELECT', 'count', '(', '*', ')', 'FROM', 'conductor']",
    "query_toks_no_value": "['select', 'count', '(', '*', ')', 'from', 'conductor']",
    "question": "How many conductors are there?",
    "question_th": "มีตัวนำกี่ตัว?",
    "question_toks": "['How', 'many', 'conductors', 'are', 'there', '?']",
    "sql": "{'from': {'table_units': [['table_unit', 0]], 'conds': []}, 'select': [False, [[3, [0, [0, 0, False], None]]]], 'where': [], 'groupBy': [], 'having': [], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "orchestra",
    "query": "SELECT count(*) FROM conductor",
    "query_toks": "['SELECT', 'count', '(', '*', ')', 'FROM', 'conductor']",
    "query_toks_no_value": "['select', 'count', '(', '*', ')', 'from', 'conductor']",
    "question": "Count the number of conductors.",
    "question_th": "นับจำนวนตัวนำ",
    "question_toks": "['Count', 'the', 'number', 'of', 'conductors', '.']",
    "sql": "{'from': {'table_units': [['table_unit', 0]], 'conds': []}, 'select': [False, [[3, [0, [0, 0, False], None]]]], 'where': [], 'groupBy': [], 'having': [], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "orchestra",
    "query": "SELECT Name FROM conductor ORDER BY Age ASC",
    "query_toks": "['SELECT', 'Name', 'FROM', 'conductor', 'ORDER', 'BY', 'Age', 'ASC']",
    "query_toks_no_value": "['select', 'name', 'from', 'conductor', 'order', 'by', 'age', 'asc']",
    "question": "List the names of conductors in ascending order of age.",
    "question_th": "รายชื่อผู้ควบคุมวงเรียงตามอายุจากน้อยไปหามาก",
    "question_toks": "['List', 'the', 'names', 'of', 'conductors', 'in', 'ascending', 'order', 'of', 'age', '.']",
    "sql": "{'from': {'table_units': [['table_unit', 0]], 'conds': []}, 'select': [False, [[0, [0, [0, 2, False], None]]]], 'where': [], 'groupBy': [], 'having': [], 'orderBy': ['asc', [[0, [0, 3, False], None]]], 'limit': None, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "orchestra",
    "query": "SELECT Name FROM conductor ORDER BY Age ASC",
    "query_toks": "['SELECT', 'Name', 'FROM', 'conductor', 'ORDER', 'BY', 'Age', 'ASC']",
    "query_toks_no_value": "['select', 'name', 'from', 'conductor', 'order', 'by', 'age', 'asc']",
    "question": "What are the names of conductors, ordered by age?",
    "question_th": "ตัวนำชื่ออะไร เรียงตามอายุ?",
    "question_toks": "['What', 'are', 'the', 'names', 'of', 'conductors', ',', 'ordered', 'by', 'age', '?']",
    "sql": "{'from': {'table_units': [['table_unit', 0]], 'conds': []}, 'select': [False, [[0, [0, [0, 2, False], None]]]], 'where': [], 'groupBy': [], 'having': [], 'orderBy': ['asc', [[0, [0, 3, False], None]]], 'limit': None, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "orchestra",
    "query": "SELECT Name FROM conductor WHERE Nationality != 'USA'",
    "query_toks": "['SELECT', 'Name', 'FROM', 'conductor', 'WHERE', 'Nationality', '!', '=', \"'USA\", \"'\"]",
    "query_toks_no_value": "['select', 'name', 'from', 'conductor', 'where', 'nationality', '!', '=', 'value']",
    "question": "What are the names of conductors whose nationalities are not \"USA\"?",
    "question_th": "ชื่อของผู้ควบคุมวงที่ไม่ใช่สัญชาติ \"สหรัฐอเมริกา\" คืออะไร?",
    "question_toks": "['What', 'are', 'the', 'names', 'of', 'conductors', 'whose', 'nationalities', 'are', 'not', '``', 'USA', \"''\", '?']",
    "sql": "{'from': {'table_units': [['table_unit', 0]], 'conds': []}, 'select': [False, [[0, [0, [0, 2, False], None]]]], 'where': [[False, 7, [0, [0, 4, False], None], '\"USA\"', None]], 'groupBy': [], 'having': [], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "orchestra",
    "query": "SELECT Name FROM conductor WHERE Nationality != 'USA'",
    "query_toks": "['SELECT', 'Name', 'FROM', 'conductor', 'WHERE', 'Nationality', '!', '=', \"'USA\", \"'\"]",
    "query_toks_no_value": "['select', 'name', 'from', 'conductor', 'where', 'nationality', '!', '=', 'value']",
    "question": "Return the names of conductors that do not have the nationality \"USA\".",
    "question_th": "กลับชื่อผู้ควบคุมวงที่ไม่มีสัญชาติ \"USA\"",
    "question_toks": "['Return', 'the', 'names', 'of', 'conductors', 'that', 'do', 'not', 'have', 'the', 'nationality', '``', 'USA', \"''\", '.']",
    "sql": "{'from': {'table_units': [['table_unit', 0]], 'conds': []}, 'select': [False, [[0, [0, [0, 2, False], None]]]], 'where': [[False, 7, [0, [0, 4, False], None], '\"USA\"', None]], 'groupBy': [], 'having': [], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "orchestra",
    "query": "SELECT Record_Company FROM orchestra ORDER BY Year_of_Founded DESC",
    "query_toks": "['SELECT', 'Record_Company', 'FROM', 'orchestra', 'ORDER', 'BY', 'Year_of_Founded', 'DESC']",
    "query_toks_no_value": "['select', 'record_company', 'from', 'orchestra', 'order', 'by', 'year_of_founded', 'desc']",
    "question": "What are the record companies of orchestras in descending order of years in which they were founded?",
    "question_th": "บริษัทแผ่นเสียงของวงออเคสตราโดยเรียงตามปีที่พวกเขาก่อตั้งขึ้นจากมากไปหาน้อยคืออะไร?",
    "question_toks": "['What', 'are', 'the', 'record', 'companies', 'of', 'orchestras', 'in', 'descending', 'order', 'of', 'years', 'in', 'which', 'they', 'were', 'founded', '?']",
    "sql": "{'from': {'table_units': [['table_unit', 1]], 'conds': []}, 'select': [False, [[0, [0, [0, 9, False], None]]]], 'where': [], 'groupBy': [], 'having': [], 'orderBy': ['desc', [[0, [0, 10, False], None]]], 'limit': None, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "orchestra",
    "query": "SELECT Record_Company FROM orchestra ORDER BY Year_of_Founded DESC",
    "query_toks": "['SELECT', 'Record_Company', 'FROM', 'orchestra', 'ORDER', 'BY', 'Year_of_Founded', 'DESC']",
    "query_toks_no_value": "['select', 'record_company', 'from', 'orchestra', 'order', 'by', 'year_of_founded', 'desc']",
    "question": "Return the record companies of orchestras, sorted descending by the years in which they were founded.",
    "question_th": "ส่งคืนคณะแผ่นเสียงของวงออเคสตรา เรียงตามปีที่พวกเขาก่อตั้ง",
    "question_toks": "['Return', 'the', 'record', 'companies', 'of', 'orchestras', ',', 'sorted', 'descending', 'by', 'the', 'years', 'in', 'which', 'they', 'were', 'founded', '.']",
    "sql": "{'from': {'table_units': [['table_unit', 1]], 'conds': []}, 'select': [False, [[0, [0, [0, 9, False], None]]]], 'where': [], 'groupBy': [], 'having': [], 'orderBy': ['desc', [[0, [0, 10, False], None]]], 'limit': None, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "orchestra",
    "query": "SELECT avg(Attendance) FROM SHOW",
    "query_toks": "['SELECT', 'avg', '(', 'Attendance', ')', 'FROM', 'SHOW']",
    "query_toks_no_value": "['select', 'avg', '(', 'attendance', ')', 'from', 'show']",
    "question": "What is the average attendance of shows?",
    "question_th": "ผู้เข้าชมการแสดงโดยเฉลี่ยคือเท่าไร?",
    "question_toks": "['What', 'is', 'the', 'average', 'attendance', 'of', 'shows', '?']",
    "sql": "{'from': {'table_units': [['table_unit', 3]], 'conds': []}, 'select': [False, [[5, [0, [0, 23, False], None]]]], 'where': [], 'groupBy': [], 'having': [], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "orchestra",
    "query": "SELECT avg(Attendance) FROM SHOW",
    "query_toks": "['SELECT', 'avg', '(', 'Attendance', ')', 'FROM', 'SHOW']",
    "query_toks_no_value": "['select', 'avg', '(', 'attendance', ')', 'from', 'show']",
    "question": "Return the average attendance across all shows.",
    "question_th": "ส่งคืนจำนวนผู้เข้าร่วมเฉลี่ยของการแสดงทั้งหมด",
    "question_toks": "['Return', 'the', 'average', 'attendance', 'across', 'all', 'shows', '.']",
    "sql": "{'from': {'table_units': [['table_unit', 3]], 'conds': []}, 'select': [False, [[5, [0, [0, 23, False], None]]]], 'where': [], 'groupBy': [], 'having': [], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "orchestra",
    "query": "SELECT max(SHARE) ,  min(SHARE) FROM performance WHERE TYPE != \"Live final\"",
    "query_toks": "['SELECT', 'max', '(', 'SHARE', ')', ',', 'min', '(', 'SHARE', ')', 'FROM', 'performance', 'WHERE', 'TYPE', '!', '=', '``', 'Live', 'final', \"''\"]",
    "query_toks_no_value": "['select', 'max', '(', 'share', ')', ',', 'min', '(', 'share', ')', 'from', 'performance', 'where', 'type', '!', '=', 'value']",
    "question": "What are the maximum and minimum share of performances whose type is not \"Live final\".",
    "question_th": "ส่วนแบ่งสูงสุดและต่ำสุดของการแสดงที่ไม่ใช่ประเภท \"รอบชิงชนะเลิศสด\" คือเท่าใด",
    "question_toks": "['What', 'are', 'the', 'maximum', 'and', 'minimum', 'share', 'of', 'performances', 'whose', 'type', 'is', 'not', '``', 'Live', 'final', \"''\", '.']",
    "sql": "{'from': {'table_units': [['table_unit', 2]], 'conds': []}, 'select': [False, [[1, [0, [0, 18, False], None]], [2, [0, [0, 18, False], None]]]], 'where': [[False, 7, [0, [0, 14, False], None], '\"Live final\"', None]], 'groupBy': [], 'having': [], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "orchestra",
    "query": "SELECT max(SHARE) ,  min(SHARE) FROM performance WHERE TYPE != \"Live final\"",
    "query_toks": "['SELECT', 'max', '(', 'SHARE', ')', ',', 'min', '(', 'SHARE', ')', 'FROM', 'performance', 'WHERE', 'TYPE', '!', '=', '``', 'Live', 'final', \"''\"]",
    "query_toks_no_value": "['select', 'max', '(', 'share', ')', ',', 'min', '(', 'share', ')', 'from', 'performance', 'where', 'type', '!', '=', 'value']",
    "question": "Return the maximum and minimum shares for performances that do not have the type \"Live final\".",
    "question_th": "คืนส่วนแบ่งสูงสุดและต่ำสุดสำหรับผลงานที่ไม่มีประเภท \"Live Final\"",
    "question_toks": "['Return', 'the', 'maximum', 'and', 'minimum', 'shares', 'for', 'performances', 'that', 'do', 'not', 'have', 'the', 'type', '``', 'Live', 'final', \"''\", '.']",
    "sql": "{'from': {'table_units': [['table_unit', 2]], 'conds': []}, 'select': [False, [[1, [0, [0, 18, False], None]], [2, [0, [0, 18, False], None]]]], 'where': [[False, 7, [0, [0, 14, False], None], '\"Live final\"', None]], 'groupBy': [], 'having': [], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "orchestra",
    "query": "SELECT count(DISTINCT Nationality) FROM conductor",
    "query_toks": "['SELECT', 'count', '(', 'DISTINCT', 'Nationality', ')', 'FROM', 'conductor']",
    "query_toks_no_value": "['select', 'count', '(', 'distinct', 'nationality', ')', 'from', 'conductor']",
    "question": "How many different nationalities do conductors have?",
    "question_th": "วาทยากรมีกี่สัญชาติ?",
    "question_toks": "['How', 'many', 'different', 'nationalities', 'do', 'conductors', 'have', '?']",
    "sql": "{'from': {'table_units': [['table_unit', 0]], 'conds': []}, 'select': [False, [[3, [0, [0, 4, True], None]]]], 'where': [], 'groupBy': [], 'having': [], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "orchestra",
    "query": "SELECT count(DISTINCT Nationality) FROM conductor",
    "query_toks": "['SELECT', 'count', '(', 'DISTINCT', 'Nationality', ')', 'FROM', 'conductor']",
    "query_toks_no_value": "['select', 'count', '(', 'distinct', 'nationality', ')', 'from', 'conductor']",
    "question": "Count the number of different nationalities of conductors.",
    "question_th": "นับจำนวนผู้ควบคุมสัญชาติต่างๆ",
    "question_toks": "['Count', 'the', 'number', 'of', 'different', 'nationalities', 'of', 'conductors', '.']",
    "sql": "{'from': {'table_units': [['table_unit', 0]], 'conds': []}, 'select': [False, [[3, [0, [0, 4, True], None]]]], 'where': [], 'groupBy': [], 'having': [], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "orchestra",
    "query": "SELECT Name FROM conductor ORDER BY Year_of_Work DESC",
    "query_toks": "['SELECT', 'Name', 'FROM', 'conductor', 'ORDER', 'BY', 'Year_of_Work', 'DESC']",
    "query_toks_no_value": "['select', 'name', 'from', 'conductor', 'order', 'by', 'year_of_work', 'desc']",
    "question": "List names of conductors in descending order of years of work.",
    "question_th": "รายชื่อผู้ควบคุมวงตามลำดับอายุงานจากมากไปหาน้อย",
    "question_toks": "['List', 'names', 'of', 'conductors', 'in', 'descending', 'order', 'of', 'years', 'of', 'work', '.']",
    "sql": "{'from': {'table_units': [['table_unit', 0]], 'conds': []}, 'select': [False, [[0, [0, [0, 2, False], None]]]], 'where': [], 'groupBy': [], 'having': [], 'orderBy': ['desc', [[0, [0, 5, False], None]]], 'limit': None, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "orchestra",
    "query": "SELECT Name FROM conductor ORDER BY Year_of_Work DESC",
    "query_toks": "['SELECT', 'Name', 'FROM', 'conductor', 'ORDER', 'BY', 'Year_of_Work', 'DESC']",
    "query_toks_no_value": "['select', 'name', 'from', 'conductor', 'order', 'by', 'year_of_work', 'desc']",
    "question": "What are the names of conductors, sorted descending by the number of years they have worked?",
    "question_th": "ตัวนำชื่ออะไร เรียงตามจำนวนปีที่ทำงานมากไปน้อย?",
    "question_toks": "['What', 'are', 'the', 'names', 'of', 'conductors', ',', 'sorted', 'descending', 'by', 'the', 'number', 'of', 'years', 'they', 'have', 'worked', '?']",
    "sql": "{'from': {'table_units': [['table_unit', 0]], 'conds': []}, 'select': [False, [[0, [0, [0, 2, False], None]]]], 'where': [], 'groupBy': [], 'having': [], 'orderBy': ['desc', [[0, [0, 5, False], None]]], 'limit': None, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "orchestra",
    "query": "SELECT Name FROM conductor ORDER BY Year_of_Work DESC LIMIT 1",
    "query_toks": "['SELECT', 'Name', 'FROM', 'conductor', 'ORDER', 'BY', 'Year_of_Work', 'DESC', 'LIMIT', '1']",
    "query_toks_no_value": "['select', 'name', 'from', 'conductor', 'order', 'by', 'year_of_work', 'desc', 'limit', 'value']",
    "question": "List the name of the conductor with the most years of work.",
    "question_th": "รายชื่อผู้ควบคุมวงที่มีผลงานมากที่สุด",
    "question_toks": "['List', 'the', 'name', 'of', 'the', 'conductor', 'with', 'the', 'most', 'years', 'of', 'work', '.']",
    "sql": "{'from': {'table_units': [['table_unit', 0]], 'conds': []}, 'select': [False, [[0, [0, [0, 2, False], None]]]], 'where': [], 'groupBy': [], 'having': [], 'orderBy': ['desc', [[0, [0, 5, False], None]]], 'limit': 1, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "orchestra",
    "query": "SELECT Name FROM conductor ORDER BY Year_of_Work DESC LIMIT 1",
    "query_toks": "['SELECT', 'Name', 'FROM', 'conductor', 'ORDER', 'BY', 'Year_of_Work', 'DESC', 'LIMIT', '1']",
    "query_toks_no_value": "['select', 'name', 'from', 'conductor', 'order', 'by', 'year_of_work', 'desc', 'limit', 'value']",
    "question": "What is the name of the conductor who has worked the greatest number of years?",
    "question_th": "วาทยากรที่ทำงานมายาวนานที่สุดชื่ออะไร?",
    "question_toks": "['What', 'is', 'the', 'name', 'of', 'the', 'conductor', 'who', 'has', 'worked', 'the', 'greatest', 'number', 'of', 'years', '?']",
    "sql": "{'from': {'table_units': [['table_unit', 0]], 'conds': []}, 'select': [False, [[0, [0, [0, 2, False], None]]]], 'where': [], 'groupBy': [], 'having': [], 'orderBy': ['desc', [[0, [0, 5, False], None]]], 'limit': 1, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "orchestra",
    "query": "SELECT T1.Name ,  T2.Orchestra FROM conductor AS T1 JOIN orchestra AS T2 ON T1.Conductor_ID  =  T2.Conductor_ID",
    "query_toks": "['SELECT', 'T1.Name', ',', 'T2.Orchestra', 'FROM', 'conductor', 'AS', 'T1', 'JOIN', 'orchestra', 'AS', 'T2', 'ON', 'T1.Conductor_ID', '=', 'T2.Conductor_ID']",
    "query_toks_no_value": "['select', 't1', '.', 'name', ',', 't2', '.', 'orchestra', 'from', 'conductor', 'as', 't1', 'join', 'orchestra', 'as', 't2', 'on', 't1', '.', 'conductor_id', '=', 't2', '.', 'conductor_id']",
    "question": "Show the names of conductors and the orchestras they have conducted.",
    "question_th": "แสดงชื่อวาทยกรและวงออเคสตราที่พวกเขาแสดง",
    "question_toks": "['Show', 'the', 'names', 'of', 'conductors', 'and', 'the', 'orchestras', 'they', 'have', 'conducted', '.']",
    "sql": "{'from': {'table_units': [['table_unit', 0], ['table_unit', 1]], 'conds': [[False, 2, [0, [0, 1, False], None], [0, 8, False], None]]}, 'select': [False, [[0, [0, [0, 2, False], None]], [0, [0, [0, 7, False], None]]]], 'where': [], 'groupBy': [], 'having': [], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "orchestra",
    "query": "SELECT T1.Name ,  T2.Orchestra FROM conductor AS T1 JOIN orchestra AS T2 ON T1.Conductor_ID  =  T2.Conductor_ID",
    "query_toks": "['SELECT', 'T1.Name', ',', 'T2.Orchestra', 'FROM', 'conductor', 'AS', 'T1', 'JOIN', 'orchestra', 'AS', 'T2', 'ON', 'T1.Conductor_ID', '=', 'T2.Conductor_ID']",
    "query_toks_no_value": "['select', 't1', '.', 'name', ',', 't2', '.', 'orchestra', 'from', 'conductor', 'as', 't1', 'join', 'orchestra', 'as', 't2', 'on', 't1', '.', 'conductor_id', '=', 't2', '.', 'conductor_id']",
    "question": "What are the names of conductors as well as the corresonding orchestras that they have conducted?",
    "question_th": "วาทยกรและวงออร์เคสตราที่เกี่ยวข้องที่พวกเขาเคยแสดงชื่ออะไร",
    "question_toks": "['What', 'are', 'the', 'names', 'of', 'conductors', 'as', 'well', 'as', 'the', 'corresonding', 'orchestras', 'that', 'they', 'have', 'conducted', '?']",
    "sql": "{'from': {'table_units': [['table_unit', 0], ['table_unit', 1]], 'conds': [[False, 2, [0, [0, 1, False], None], [0, 8, False], None]]}, 'select': [False, [[0, [0, [0, 2, False], None]], [0, [0, [0, 7, False], None]]]], 'where': [], 'groupBy': [], 'having': [], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "orchestra",
    "query": "SELECT T1.Name FROM conductor AS T1 JOIN orchestra AS T2 ON T1.Conductor_ID  =  T2.Conductor_ID GROUP BY T2.Conductor_ID HAVING COUNT(*)  >  1",
    "query_toks": "['SELECT', 'T1.Name', 'FROM', 'conductor', 'AS', 'T1', 'JOIN', 'orchestra', 'AS', 'T2', 'ON', 'T1.Conductor_ID', '=', 'T2.Conductor_ID', 'GROUP', 'BY', 'T2.Conductor_ID', 'HAVING', 'COUNT', '(', '*', ')', '>', '1']",
    "query_toks_no_value": "['select', 't1', '.', 'name', 'from', 'conductor', 'as', 't1', 'join', 'orchestra', 'as', 't2', 'on', 't1', '.', 'conductor_id', '=', 't2', '.', 'conductor_id', 'group', 'by', 't2', '.', 'conductor_id', 'having', 'count', '(', '*', ')', '>', 'value']",
    "question": "Show the names of conductors that have conducted more than one orchestras.",
    "question_th": "แสดงชื่อวาทยากรที่เคยเล่นออเคสตรามากกว่าหนึ่งวง",
    "question_toks": "['Show', 'the', 'names', 'of', 'conductors', 'that', 'have', 'conducted', 'more', 'than', 'one', 'orchestras', '.']",
    "sql": "{'from': {'table_units': [['table_unit', 0], ['table_unit', 1]], 'conds': [[False, 2, [0, [0, 1, False], None], [0, 8, False], None]]}, 'select': [False, [[0, [0, [0, 2, False], None]]]], 'where': [], 'groupBy': [[0, 8, False]], 'having': [[False, 3, [0, [3, 0, False], None], 1.0, None]], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "orchestra",
    "query": "SELECT T1.Name FROM conductor AS T1 JOIN orchestra AS T2 ON T1.Conductor_ID  =  T2.Conductor_ID GROUP BY T2.Conductor_ID HAVING COUNT(*)  >  1",
    "query_toks": "['SELECT', 'T1.Name', 'FROM', 'conductor', 'AS', 'T1', 'JOIN', 'orchestra', 'AS', 'T2', 'ON', 'T1.Conductor_ID', '=', 'T2.Conductor_ID', 'GROUP', 'BY', 'T2.Conductor_ID', 'HAVING', 'COUNT', '(', '*', ')', '>', '1']",
    "query_toks_no_value": "['select', 't1', '.', 'name', 'from', 'conductor', 'as', 't1', 'join', 'orchestra', 'as', 't2', 'on', 't1', '.', 'conductor_id', '=', 't2', '.', 'conductor_id', 'group', 'by', 't2', '.', 'conductor_id', 'having', 'count', '(', '*', ')', '>', 'value']",
    "question": "What are the names of conductors who have conducted at more than one orchestra?",
    "question_th": "วาทยากรที่เคยแสดงในวงออเคสตรามากกว่าหนึ่งวงชื่ออะไร",
    "question_toks": "['What', 'are', 'the', 'names', 'of', 'conductors', 'who', 'have', 'conducted', 'at', 'more', 'than', 'one', 'orchestra', '?']",
    "sql": "{'from': {'table_units': [['table_unit', 0], ['table_unit', 1]], 'conds': [[False, 2, [0, [0, 1, False], None], [0, 8, False], None]]}, 'select': [False, [[0, [0, [0, 2, False], None]]]], 'where': [], 'groupBy': [[0, 8, False]], 'having': [[False, 3, [0, [3, 0, False], None], 1.0, None]], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "orchestra",
    "query": "SELECT T1.Name FROM conductor AS T1 JOIN orchestra AS T2 ON T1.Conductor_ID  =  T2.Conductor_ID GROUP BY T2.Conductor_ID ORDER BY COUNT(*) DESC LIMIT 1",
    "query_toks": "['SELECT', 'T1.Name', 'FROM', 'conductor', 'AS', 'T1', 'JOIN', 'orchestra', 'AS', 'T2', 'ON', 'T1.Conductor_ID', '=', 'T2.Conductor_ID', 'GROUP', 'BY', 'T2.Conductor_ID', 'ORDER', 'BY', 'COUNT', '(', '*', ')', 'DESC', 'LIMIT', '1']",
    "query_toks_no_value": "['select', 't1', '.', 'name', 'from', 'conductor', 'as', 't1', 'join', 'orchestra', 'as', 't2', 'on', 't1', '.', 'conductor_id', '=', 't2', '.', 'conductor_id', 'group', 'by', 't2', '.', 'conductor_id', 'order', 'by', 'count', '(', '*', ')', 'desc', 'limit', 'value']",
    "question": "Show the name of the conductor that has conducted the most number of orchestras.",
    "question_th": "แสดงชื่อวาทยากรที่เล่นออเคสตรามากที่สุด",
    "question_toks": "['Show', 'the', 'name', 'of', 'the', 'conductor', 'that', 'has', 'conducted', 'the', 'most', 'number', 'of', 'orchestras', '.']",
    "sql": "{'from': {'table_units': [['table_unit', 0], ['table_unit', 1]], 'conds': [[False, 2, [0, [0, 1, False], None], [0, 8, False], None]]}, 'select': [False, [[0, [0, [0, 2, False], None]]]], 'where': [], 'groupBy': [[0, 8, False]], 'having': [], 'orderBy': ['desc', [[0, [3, 0, False], None]]], 'limit': 1, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "orchestra",
    "query": "SELECT T1.Name FROM conductor AS T1 JOIN orchestra AS T2 ON T1.Conductor_ID  =  T2.Conductor_ID GROUP BY T2.Conductor_ID ORDER BY COUNT(*) DESC LIMIT 1",
    "query_toks": "['SELECT', 'T1.Name', 'FROM', 'conductor', 'AS', 'T1', 'JOIN', 'orchestra', 'AS', 'T2', 'ON', 'T1.Conductor_ID', '=', 'T2.Conductor_ID', 'GROUP', 'BY', 'T2.Conductor_ID', 'ORDER', 'BY', 'COUNT', '(', '*', ')', 'DESC', 'LIMIT', '1']",
    "query_toks_no_value": "['select', 't1', '.', 'name', 'from', 'conductor', 'as', 't1', 'join', 'orchestra', 'as', 't2', 'on', 't1', '.', 'conductor_id', '=', 't2', '.', 'conductor_id', 'group', 'by', 't2', '.', 'conductor_id', 'order', 'by', 'count', '(', '*', ')', 'desc', 'limit', 'value']",
    "question": "What is the name of the conductor who has conducted the most orchestras?",
    "question_th": "วาทยากรที่เล่นออเคสตร้ามากที่สุดชื่ออะไร?",
    "question_toks": "['What', 'is', 'the', 'name', 'of', 'the', 'conductor', 'who', 'has', 'conducted', 'the', 'most', 'orchestras', '?']",
    "sql": "{'from': {'table_units': [['table_unit', 0], ['table_unit', 1]], 'conds': [[False, 2, [0, [0, 1, False], None], [0, 8, False], None]]}, 'select': [False, [[0, [0, [0, 2, False], None]]]], 'where': [], 'groupBy': [[0, 8, False]], 'having': [], 'orderBy': ['desc', [[0, [3, 0, False], None]]], 'limit': 1, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "orchestra",
    "query": "SELECT T1.Name FROM conductor AS T1 JOIN orchestra AS T2 ON T1.Conductor_ID  =  T2.Conductor_ID WHERE Year_of_Founded  >  2008",
    "query_toks": "['SELECT', 'T1.Name', 'FROM', 'conductor', 'AS', 'T1', 'JOIN', 'orchestra', 'AS', 'T2', 'ON', 'T1.Conductor_ID', '=', 'T2.Conductor_ID', 'WHERE', 'Year_of_Founded', '>', '2008']",
    "query_toks_no_value": "['select', 't1', '.', 'name', 'from', 'conductor', 'as', 't1', 'join', 'orchestra', 'as', 't2', 'on', 't1', '.', 'conductor_id', '=', 't2', '.', 'conductor_id', 'where', 'year_of_founded', '>', 'value']",
    "question": "Please show the name of the conductor that has conducted orchestras founded after 2008.",
    "question_th": "กรุณาแสดงชื่อวาทยากรที่เคยเล่นวงออเคสตราที่ก่อตั้งหลังปี 2551",
    "question_toks": "['Please', 'show', 'the', 'name', 'of', 'the', 'conductor', 'that', 'has', 'conducted', 'orchestras', 'founded', 'after', '2008', '.']",
    "sql": "{'from': {'table_units': [['table_unit', 0], ['table_unit', 1]], 'conds': [[False, 2, [0, [0, 1, False], None], [0, 8, False], None]]}, 'select': [False, [[0, [0, [0, 2, False], None]]]], 'where': [[False, 3, [0, [0, 10, False], None], 2008.0, None]], 'groupBy': [], 'having': [], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "orchestra",
    "query": "SELECT T1.Name FROM conductor AS T1 JOIN orchestra AS T2 ON T1.Conductor_ID  =  T2.Conductor_ID WHERE Year_of_Founded  >  2008",
    "query_toks": "['SELECT', 'T1.Name', 'FROM', 'conductor', 'AS', 'T1', 'JOIN', 'orchestra', 'AS', 'T2', 'ON', 'T1.Conductor_ID', '=', 'T2.Conductor_ID', 'WHERE', 'Year_of_Founded', '>', '2008']",
    "query_toks_no_value": "['select', 't1', '.', 'name', 'from', 'conductor', 'as', 't1', 'join', 'orchestra', 'as', 't2', 'on', 't1', '.', 'conductor_id', '=', 't2', '.', 'conductor_id', 'where', 'year_of_founded', '>', 'value']",
    "question": "What are the names of conductors who have conducted orchestras founded after the year 2008?",
    "question_th": "วาทยากรที่เคยเล่นออเคสตร้าที่ก่อตั้งหลังปี 2551 ชื่ออะไร",
    "question_toks": "['What', 'are', 'the', 'names', 'of', 'conductors', 'who', 'have', 'conducted', 'orchestras', 'founded', 'after', 'the', 'year', '2008', '?']",
    "sql": "{'from': {'table_units': [['table_unit', 0], ['table_unit', 1]], 'conds': [[False, 2, [0, [0, 1, False], None], [0, 8, False], None]]}, 'select': [False, [[0, [0, [0, 2, False], None]]]], 'where': [[False, 3, [0, [0, 10, False], None], 2008.0, None]], 'groupBy': [], 'having': [], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "orchestra",
    "query": "SELECT Record_Company ,  COUNT(*) FROM orchestra GROUP BY Record_Company",
    "query_toks": "['SELECT', 'Record_Company', ',', 'COUNT', '(', '*', ')', 'FROM', 'orchestra', 'GROUP', 'BY', 'Record_Company']",
    "query_toks_no_value": "['select', 'record_company', ',', 'count', '(', '*', ')', 'from', 'orchestra', 'group', 'by', 'record_company']",
    "question": "Please show the different record companies and the corresponding number of orchestras.",
    "question_th": "โปรดแสดงบริษัทแผ่นเสียงต่างๆ และจำนวนออร์เคสตราที่เกี่ยวข้อง",
    "question_toks": "['Please', 'show', 'the', 'different', 'record', 'companies', 'and', 'the', 'corresponding', 'number', 'of', 'orchestras', '.']",
    "sql": "{'from': {'table_units': [['table_unit', 1]], 'conds': []}, 'select': [False, [[0, [0, [0, 9, False], None]], [3, [0, [0, 0, False], None]]]], 'where': [], 'groupBy': [[0, 9, False]], 'having': [], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "orchestra",
    "query": "SELECT Record_Company ,  COUNT(*) FROM orchestra GROUP BY Record_Company",
    "query_toks": "['SELECT', 'Record_Company', ',', 'COUNT', '(', '*', ')', 'FROM', 'orchestra', 'GROUP', 'BY', 'Record_Company']",
    "query_toks_no_value": "['select', 'record_company', ',', 'count', '(', '*', ')', 'from', 'orchestra', 'group', 'by', 'record_company']",
    "question": "How many orchestras does each record company manage?",
    "question_th": "บริษัทแผ่นเสียงแต่ละแห่งจัดการวงออเคสตรากี่วง?",
    "question_toks": "['How', 'many', 'orchestras', 'does', 'each', 'record', 'company', 'manage', '?']",
    "sql": "{'from': {'table_units': [['table_unit', 1]], 'conds': []}, 'select': [False, [[0, [0, [0, 9, False], None]], [3, [0, [0, 0, False], None]]]], 'where': [], 'groupBy': [[0, 9, False]], 'having': [], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "orchestra",
    "query": "SELECT Major_Record_Format FROM orchestra GROUP BY Major_Record_Format ORDER BY COUNT(*) ASC",
    "query_toks": "['SELECT', 'Major_Record_Format', 'FROM', 'orchestra', 'GROUP', 'BY', 'Major_Record_Format', 'ORDER', 'BY', 'COUNT', '(', '*', ')', 'ASC']",
    "query_toks_no_value": "['select', 'major_record_format', 'from', 'orchestra', 'group', 'by', 'major_record_format', 'order', 'by', 'count', '(', '*', ')', 'asc']",
    "question": "Please show the record formats of orchestras in ascending order of count.",
    "question_th": "กรุณาแสดงรูปแบบการบันทึกของวงออเคสตราโดยเรียงลำดับจากน้อยไปหามาก",
    "question_toks": "['Please', 'show', 'the', 'record', 'formats', 'of', 'orchestras', 'in', 'ascending', 'order', 'of', 'count', '.']",
    "sql": "{'from': {'table_units': [['table_unit', 1]], 'conds': []}, 'select': [False, [[0, [0, [0, 11, False], None]]]], 'where': [], 'groupBy': [[0, 11, False]], 'having': [], 'orderBy': ['asc', [[0, [3, 0, False], None]]], 'limit': None, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "orchestra",
    "query": "SELECT Major_Record_Format FROM orchestra GROUP BY Major_Record_Format ORDER BY COUNT(*) ASC",
    "query_toks": "['SELECT', 'Major_Record_Format', 'FROM', 'orchestra', 'GROUP', 'BY', 'Major_Record_Format', 'ORDER', 'BY', 'COUNT', '(', '*', ')', 'ASC']",
    "query_toks_no_value": "['select', 'major_record_format', 'from', 'orchestra', 'group', 'by', 'major_record_format', 'order', 'by', 'count', '(', '*', ')', 'asc']",
    "question": "What are the major record formats of orchestras, sorted by their frequency?",
    "question_th": "รูปแบบการบันทึกที่สำคัญของวงออร์เคสตรา เรียงตามความถี่มีอะไรบ้าง",
    "question_toks": "['What', 'are', 'the', 'major', 'record', 'formats', 'of', 'orchestras', ',', 'sorted', 'by', 'their', 'frequency', '?']",
    "sql": "{'from': {'table_units': [['table_unit', 1]], 'conds': []}, 'select': [False, [[0, [0, [0, 11, False], None]]]], 'where': [], 'groupBy': [[0, 11, False]], 'having': [], 'orderBy': ['asc', [[0, [3, 0, False], None]]], 'limit': None, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "orchestra",
    "query": "SELECT Record_Company FROM orchestra GROUP BY Record_Company ORDER BY COUNT(*) DESC LIMIT 1",
    "query_toks": "['SELECT', 'Record_Company', 'FROM', 'orchestra', 'GROUP', 'BY', 'Record_Company', 'ORDER', 'BY', 'COUNT', '(', '*', ')', 'DESC', 'LIMIT', '1']",
    "query_toks_no_value": "['select', 'record_company', 'from', 'orchestra', 'group', 'by', 'record_company', 'order', 'by', 'count', '(', '*', ')', 'desc', 'limit', 'value']",
    "question": "List the record company shared by the most number of orchestras.",
    "question_th": "รายชื่อบริษัทแผ่นเสียงที่มีวงออเคสตราแบ่งปันมากที่สุด",
    "question_toks": "['List', 'the', 'record', 'company', 'shared', 'by', 'the', 'most', 'number', 'of', 'orchestras', '.']",
    "sql": "{'from': {'table_units': [['table_unit', 1]], 'conds': []}, 'select': [False, [[0, [0, [0, 9, False], None]]]], 'where': [], 'groupBy': [[0, 9, False]], 'having': [], 'orderBy': ['desc', [[0, [3, 0, False], None]]], 'limit': 1, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "orchestra",
    "query": "SELECT Record_Company FROM orchestra GROUP BY Record_Company ORDER BY COUNT(*) DESC LIMIT 1",
    "query_toks": "['SELECT', 'Record_Company', 'FROM', 'orchestra', 'GROUP', 'BY', 'Record_Company', 'ORDER', 'BY', 'COUNT', '(', '*', ')', 'DESC', 'LIMIT', '1']",
    "query_toks_no_value": "['select', 'record_company', 'from', 'orchestra', 'group', 'by', 'record_company', 'order', 'by', 'count', '(', '*', ')', 'desc', 'limit', 'value']",
    "question": "What is the record company used by the greatest number of orchestras?",
    "question_th": "บริษัทแผ่นเสียงใดที่ใช้โดยวงออเคสตราจำนวนมากที่สุด?",
    "question_toks": "['What', 'is', 'the', 'record', 'company', 'used', 'by', 'the', 'greatest', 'number', 'of', 'orchestras', '?']",
    "sql": "{'from': {'table_units': [['table_unit', 1]], 'conds': []}, 'select': [False, [[0, [0, [0, 9, False], None]]]], 'where': [], 'groupBy': [[0, 9, False]], 'having': [], 'orderBy': ['desc', [[0, [3, 0, False], None]]], 'limit': 1, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "orchestra",
    "query": "SELECT Orchestra FROM orchestra WHERE Orchestra_ID NOT IN (SELECT Orchestra_ID FROM performance)",
    "query_toks": "['SELECT', 'Orchestra', 'FROM', 'orchestra', 'WHERE', 'Orchestra_ID', 'NOT', 'IN', '(', 'SELECT', 'Orchestra_ID', 'FROM', 'performance', ')']",
    "query_toks_no_value": "['select', 'orchestra', 'from', 'orchestra', 'where', 'orchestra_id', 'not', 'in', '(', 'select', 'orchestra_id', 'from', 'performance', ')']",
    "question": "List the names of orchestras that have no performance.",
    "question_th": "รายชื่อวงออเคสตราที่ไม่มีการแสดง",
    "question_toks": "['List', 'the', 'names', 'of', 'orchestras', 'that', 'have', 'no', 'performance', '.']",
    "sql": "{'from': {'table_units': [['table_unit', 1]], 'conds': []}, 'select': [False, [[0, [0, [0, 7, False], None]]]], 'where': [[True, 8, [0, [0, 6, False], None], {'from': {'table_units': [['table_unit', 2]], 'conds': []}, 'select': [False, [[0, [0, [0, 13, False], None]]]], 'where': [], 'groupBy': [], 'having': [], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}, None]], 'groupBy': [], 'having': [], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "orchestra",
    "query": "SELECT Orchestra FROM orchestra WHERE Orchestra_ID NOT IN (SELECT Orchestra_ID FROM performance)",
    "query_toks": "['SELECT', 'Orchestra', 'FROM', 'orchestra', 'WHERE', 'Orchestra_ID', 'NOT', 'IN', '(', 'SELECT', 'Orchestra_ID', 'FROM', 'performance', ')']",
    "query_toks_no_value": "['select', 'orchestra', 'from', 'orchestra', 'where', 'orchestra_id', 'not', 'in', '(', 'select', 'orchestra_id', 'from', 'performance', ')']",
    "question": "What are the orchestras that do not have any performances?",
    "question_th": "วงออร์เคสตราใดบ้างที่ไม่มีการแสดง?",
    "question_toks": "['What', 'are', 'the', 'orchestras', 'that', 'do', 'not', 'have', 'any', 'performances', '?']",
    "sql": "{'from': {'table_units': [['table_unit', 1]], 'conds': []}, 'select': [False, [[0, [0, [0, 7, False], None]]]], 'where': [[True, 8, [0, [0, 6, False], None], {'from': {'table_units': [['table_unit', 2]], 'conds': []}, 'select': [False, [[0, [0, [0, 13, False], None]]]], 'where': [], 'groupBy': [], 'having': [], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}, None]], 'groupBy': [], 'having': [], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "orchestra",
    "query": "SELECT Record_Company FROM orchestra WHERE Year_of_Founded  <  2003 INTERSECT SELECT Record_Company FROM orchestra WHERE Year_of_Founded  >  2003",
    "query_toks": "['SELECT', 'Record_Company', 'FROM', 'orchestra', 'WHERE', 'Year_of_Founded', '<', '2003', 'INTERSECT', 'SELECT', 'Record_Company', 'FROM', 'orchestra', 'WHERE', 'Year_of_Founded', '>', '2003']",
    "query_toks_no_value": "['select', 'record_company', 'from', 'orchestra', 'where', 'year_of_founded', '<', 'value', 'intersect', 'select', 'record_company', 'from', 'orchestra', 'where', 'year_of_founded', '>', 'value']",
    "question": "Show the record companies shared by orchestras founded before 2003 and after 2003.",
    "question_th": "แสดงบริษัทแผ่นเสียงที่ใช้ร่วมกันโดยวงออเคสตราที่ก่อตั้งก่อนปี 2003 และหลังปี 2003",
    "question_toks": "['Show', 'the', 'record', 'companies', 'shared', 'by', 'orchestras', 'founded', 'before', '2003', 'and', 'after', '2003', '.']",
    "sql": "{'from': {'table_units': [['table_unit', 1]], 'conds': []}, 'select': [False, [[0, [0, [0, 9, False], None]]]], 'where': [[False, 4, [0, [0, 10, False], None], 2003.0, None]], 'groupBy': [], 'having': [], 'orderBy': [], 'limit': None, 'intersect': {'from': {'table_units': [['table_unit', 1]], 'conds': []}, 'select': [False, [[0, [0, [0, 9, False], None]]]], 'where': [[False, 3, [0, [0, 10, False], None], 2003.0, None]], 'groupBy': [], 'having': [], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}, 'union': None, 'except': None}"
  },
  {
    "db_id": "orchestra",
    "query": "SELECT Record_Company FROM orchestra WHERE Year_of_Founded  <  2003 INTERSECT SELECT Record_Company FROM orchestra WHERE Year_of_Founded  >  2003",
    "query_toks": "['SELECT', 'Record_Company', 'FROM', 'orchestra', 'WHERE', 'Year_of_Founded', '<', '2003', 'INTERSECT', 'SELECT', 'Record_Company', 'FROM', 'orchestra', 'WHERE', 'Year_of_Founded', '>', '2003']",
    "query_toks_no_value": "['select', 'record_company', 'from', 'orchestra', 'where', 'year_of_founded', '<', 'value', 'intersect', 'select', 'record_company', 'from', 'orchestra', 'where', 'year_of_founded', '>', 'value']",
    "question": "What are the record companies that are used by both orchestras founded before 2003 and those founded after 2003?",
    "question_th": "บริษัทแผ่นเสียงใดบ้างที่วงออเคสตราทั้งสองก่อตั้งก่อนปี 2003 และก่อตั้งหลังปี 2003 ใช้บริษัทแผ่นเสียงใดบ้าง",
    "question_toks": "['What', 'are', 'the', 'record', 'companies', 'that', 'are', 'used', 'by', 'both', 'orchestras', 'founded', 'before', '2003', 'and', 'those', 'founded', 'after', '2003', '?']",
    "sql": "{'from': {'table_units': [['table_unit', 1]], 'conds': []}, 'select': [False, [[0, [0, [0, 9, False], None]]]], 'where': [[False, 4, [0, [0, 10, False], None], 2003.0, None]], 'groupBy': [], 'having': [], 'orderBy': [], 'limit': None, 'intersect': {'from': {'table_units': [['table_unit', 1]], 'conds': []}, 'select': [False, [[0, [0, [0, 9, False], None]]]], 'where': [[False, 3, [0, [0, 10, False], None], 2003.0, None]], 'groupBy': [], 'having': [], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}, 'union': None, 'except': None}"
  },
  {
    "db_id": "orchestra",
    "query": "SELECT COUNT(*) FROM orchestra WHERE Major_Record_Format  =  \"CD\" OR Major_Record_Format  =  \"DVD\"",
    "query_toks": "['SELECT', 'COUNT', '(', '*', ')', 'FROM', 'orchestra', 'WHERE', 'Major_Record_Format', '=', '``', 'CD', \"''\", 'OR', 'Major_Record_Format', '=', '``', 'DVD', \"''\"]",
    "query_toks_no_value": "['select', 'count', '(', '*', ')', 'from', 'orchestra', 'where', 'major_record_format', '=', 'value', 'or', 'major_record_format', '=', 'value']",
    "question": "Find the number of orchestras whose record format is \"CD\" or \"DVD\".",
    "question_th": "ค้นหาจำนวนออเคสตราที่มีรูปแบบบันทึกเป็น \"CD\" หรือ \"DVD\"",
    "question_toks": "['Find', 'the', 'number', 'of', 'orchestras', 'whose', 'record', 'format', 'is', '``', 'CD', \"''\", 'or', '``', 'DVD', \"''\", '.']",
    "sql": "{'from': {'table_units': [['table_unit', 1]], 'conds': []}, 'select': [False, [[3, [0, [0, 0, False], None]]]], 'where': [[False, 2, [0, [0, 11, False], None], '\"CD\"', None], 'or', [False, 2, [0, [0, 11, False], None], '\"DVD\"', None]], 'groupBy': [], 'having': [], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "orchestra",
    "query": "SELECT COUNT(*) FROM orchestra WHERE Major_Record_Format  =  \"CD\" OR Major_Record_Format  =  \"DVD\"",
    "query_toks": "['SELECT', 'COUNT', '(', '*', ')', 'FROM', 'orchestra', 'WHERE', 'Major_Record_Format', '=', '``', 'CD', \"''\", 'OR', 'Major_Record_Format', '=', '``', 'DVD', \"''\"]",
    "query_toks_no_value": "['select', 'count', '(', '*', ')', 'from', 'orchestra', 'where', 'major_record_format', '=', 'value', 'or', 'major_record_format', '=', 'value']",
    "question": "Count the number of orchestras that have CD or DVD as their record format.",
    "question_th": "นับจำนวนออเคสตราที่มีซีดีหรือดีวีดีเป็นรูปแบบการบันทึก",
    "question_toks": "['Count', 'the', 'number', 'of', 'orchestras', 'that', 'have', 'CD', 'or', 'DVD', 'as', 'their', 'record', 'format', '.']",
    "sql": "{'from': {'table_units': [['table_unit', 1]], 'conds': []}, 'select': [False, [[3, [0, [0, 0, False], None]]]], 'where': [[False, 2, [0, [0, 11, False], None], '\"CD\"', None], 'or', [False, 2, [0, [0, 11, False], None], '\"DVD\"', None]], 'groupBy': [], 'having': [], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "orchestra",
    "query": "SELECT Year_of_Founded FROM orchestra AS T1 JOIN performance AS T2 ON T1.Orchestra_ID  =  T2.Orchestra_ID GROUP BY T2.Orchestra_ID HAVING COUNT(*)  >  1",
    "query_toks": "['SELECT', 'Year_of_Founded', 'FROM', 'orchestra', 'AS', 'T1', 'JOIN', 'performance', 'AS', 'T2', 'ON', 'T1.Orchestra_ID', '=', 'T2.Orchestra_ID', 'GROUP', 'BY', 'T2.Orchestra_ID', 'HAVING', 'COUNT', '(', '*', ')', '>', '1']",
    "query_toks_no_value": "['select', 'year_of_founded', 'from', 'orchestra', 'as', 't1', 'join', 'performance', 'as', 't2', 'on', 't1', '.', 'orchestra_id', '=', 't2', '.', 'orchestra_id', 'group', 'by', 't2', '.', 'orchestra_id', 'having', 'count', '(', '*', ')', '>', 'value']",
    "question": "Show the years in which orchestras that have given more than one performance are founded.",
    "question_th": "แสดงปีที่มีการก่อตั้งวงออร์เคสตราที่มีการแสดงมากกว่าหนึ่งรายการ",
    "question_toks": "['Show', 'the', 'years', 'in', 'which', 'orchestras', 'that', 'have', 'given', 'more', 'than', 'one', 'performance', 'are', 'founded', '.']",
    "sql": "{'from': {'table_units': [['table_unit', 1], ['table_unit', 2]], 'conds': [[False, 2, [0, [0, 6, False], None], [0, 13, False], None]]}, 'select': [False, [[0, [0, [0, 10, False], None]]]], 'where': [], 'groupBy': [[0, 13, False]], 'having': [[False, 3, [0, [3, 0, False], None], 1.0, None]], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "orchestra",
    "query": "SELECT Year_of_Founded FROM orchestra AS T1 JOIN performance AS T2 ON T1.Orchestra_ID  =  T2.Orchestra_ID GROUP BY T2.Orchestra_ID HAVING COUNT(*)  >  1",
    "query_toks": "['SELECT', 'Year_of_Founded', 'FROM', 'orchestra', 'AS', 'T1', 'JOIN', 'performance', 'AS', 'T2', 'ON', 'T1.Orchestra_ID', '=', 'T2.Orchestra_ID', 'GROUP', 'BY', 'T2.Orchestra_ID', 'HAVING', 'COUNT', '(', '*', ')', '>', '1']",
    "query_toks_no_value": "['select', 'year_of_founded', 'from', 'orchestra', 'as', 't1', 'join', 'performance', 'as', 't2', 'on', 't1', '.', 'orchestra_id', '=', 't2', '.', 'orchestra_id', 'group', 'by', 't2', '.', 'orchestra_id', 'having', 'count', '(', '*', ')', '>', 'value']",
    "question": "What are years of founding for orchestras that have had more than a single performance?",
    "question_th": "วงออเคสตราที่มีการแสดงมากกว่าหนึ่งครั้งก่อตั้งมาหลายปีกี่ปี?",
    "question_toks": "['What', 'are', 'years', 'of', 'founding', 'for', 'orchestras', 'that', 'have', 'had', 'more', 'than', 'a', 'single', 'performance', '?']",
    "sql": "{'from': {'table_units': [['table_unit', 1], ['table_unit', 2]], 'conds': [[False, 2, [0, [0, 6, False], None], [0, 13, False], None]]}, 'select': [False, [[0, [0, [0, 10, False], None]]]], 'where': [], 'groupBy': [[0, 13, False]], 'having': [[False, 3, [0, [3, 0, False], None], 1.0, None]], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "network_1",
    "query": "SELECT count(*) FROM Highschooler",
    "query_toks": "['SELECT', 'count', '(', '*', ')', 'FROM', 'Highschooler']",
    "query_toks_no_value": "['select', 'count', '(', '*', ')', 'from', 'highschooler']",
    "question": "How many high schoolers are there?",
    "question_th": "มีนักเรียนมัธยมปลายกี่คน?",
    "question_toks": "['How', 'many', 'high', 'schoolers', 'are', 'there', '?']",
    "sql": "{'from': {'table_units': [['table_unit', 0]], 'conds': []}, 'select': [False, [[3, [0, [0, 0, False], None]]]], 'where': [], 'groupBy': [], 'having': [], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "network_1",
    "query": "SELECT count(*) FROM Highschooler",
    "query_toks": "['SELECT', 'count', '(', '*', ')', 'FROM', 'Highschooler']",
    "query_toks_no_value": "['select', 'count', '(', '*', ')', 'from', 'highschooler']",
    "question": "Count the number of high schoolers.",
    "question_th": "นับจำนวนนักเรียนมัธยมปลาย",
    "question_toks": "['Count', 'the', 'number', 'of', 'high', 'schoolers', '.']",
    "sql": "{'from': {'table_units': [['table_unit', 0]], 'conds': []}, 'select': [False, [[3, [0, [0, 0, False], None]]]], 'where': [], 'groupBy': [], 'having': [], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "network_1",
    "query": "SELECT name ,  grade FROM Highschooler",
    "query_toks": "['SELECT', 'name', ',', 'grade', 'FROM', 'Highschooler']",
    "query_toks_no_value": "['select', 'name', ',', 'grade', 'from', 'highschooler']",
    "question": "Show the names and grades of each high schooler.",
    "question_th": "แสดงชื่อและเกรดของนักเรียนมัธยมปลายแต่ละคน",
    "question_toks": "['Show', 'the', 'names', 'and', 'grades', 'of', 'each', 'high', 'schooler', '.']",
    "sql": "{'from': {'table_units': [['table_unit', 0]], 'conds': []}, 'select': [False, [[0, [0, [0, 2, False], None]], [0, [0, [0, 3, False], None]]]], 'where': [], 'groupBy': [], 'having': [], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "network_1",
    "query": "SELECT name ,  grade FROM Highschooler",
    "query_toks": "['SELECT', 'name', ',', 'grade', 'FROM', 'Highschooler']",
    "query_toks_no_value": "['select', 'name', ',', 'grade', 'from', 'highschooler']",
    "question": "What are the names and grades for each high schooler?",
    "question_th": "นักเรียนมัธยมปลายแต่ละคนมีชื่อและเกรดอะไรบ้าง?",
    "question_toks": "['What', 'are', 'the', 'names', 'and', 'grades', 'for', 'each', 'high', 'schooler', '?']",
    "sql": "{'from': {'table_units': [['table_unit', 0]], 'conds': []}, 'select': [False, [[0, [0, [0, 2, False], None]], [0, [0, [0, 3, False], None]]]], 'where': [], 'groupBy': [], 'having': [], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "network_1",
    "query": "SELECT grade FROM Highschooler",
    "query_toks": "['SELECT', 'grade', 'FROM', 'Highschooler']",
    "query_toks_no_value": "['select', 'grade', 'from', 'highschooler']",
    "question": "Show all the grades of the high schoolers.",
    "question_th": "แสดงคะแนนทั้งหมดของนักเรียนมัธยมปลาย",
    "question_toks": "['Show', 'all', 'the', 'grades', 'of', 'the', 'high', 'schoolers', '.']",
    "sql": "{'from': {'table_units': [['table_unit', 0]], 'conds': []}, 'select': [False, [[0, [0, [0, 3, False], None]]]], 'where': [], 'groupBy': [], 'having': [], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "network_1",
    "query": "SELECT grade FROM Highschooler",
    "query_toks": "['SELECT', 'grade', 'FROM', 'Highschooler']",
    "query_toks_no_value": "['select', 'grade', 'from', 'highschooler']",
    "question": "What is the grade of each high schooler?",
    "question_th": "นักเรียนมัธยมปลายแต่ละคนได้เกรดเท่าไหร่?",
    "question_toks": "['What', 'is', 'the', 'grade', 'of', 'each', 'high', 'schooler', '?']",
    "sql": "{'from': {'table_units': [['table_unit', 0]], 'conds': []}, 'select': [False, [[0, [0, [0, 3, False], None]]]], 'where': [], 'groupBy': [], 'having': [], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "network_1",
    "query": "SELECT grade FROM Highschooler WHERE name  =  \"Kyle\"",
    "query_toks": "['SELECT', 'grade', 'FROM', 'Highschooler', 'WHERE', 'name', '=', '``', 'Kyle', \"''\"]",
    "query_toks_no_value": "['select', 'grade', 'from', 'highschooler', 'where', 'name', '=', 'value']",
    "question": "What grade is Kyle in?",
    "question_th": "ไคล์อยู่ชั้นไหน?",
    "question_toks": "['What', 'grade', 'is', 'Kyle', 'in', '?']",
    "sql": "{'from': {'table_units': [['table_unit', 0]], 'conds': []}, 'select': [False, [[0, [0, [0, 3, False], None]]]], 'where': [[False, 2, [0, [0, 2, False], None], '\"Kyle\"', None]], 'groupBy': [], 'having': [], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "network_1",
    "query": "SELECT grade FROM Highschooler WHERE name  =  \"Kyle\"",
    "query_toks": "['SELECT', 'grade', 'FROM', 'Highschooler', 'WHERE', 'name', '=', '``', 'Kyle', \"''\"]",
    "query_toks_no_value": "['select', 'grade', 'from', 'highschooler', 'where', 'name', '=', 'value']",
    "question": "Return the grade for the high schooler named Kyle.",
    "question_th": "คืนเกรดให้กับนักเรียนมัธยมปลายชื่อไคล์",
    "question_toks": "['Return', 'the', 'grade', 'for', 'the', 'high', 'schooler', 'named', 'Kyle', '.']",
    "sql": "{'from': {'table_units': [['table_unit', 0]], 'conds': []}, 'select': [False, [[0, [0, [0, 3, False], None]]]], 'where': [[False, 2, [0, [0, 2, False], None], '\"Kyle\"', None]], 'groupBy': [], 'having': [], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "network_1",
    "query": "SELECT name FROM Highschooler WHERE grade  =  10",
    "query_toks": "['SELECT', 'name', 'FROM', 'Highschooler', 'WHERE', 'grade', '=', '10']",
    "query_toks_no_value": "['select', 'name', 'from', 'highschooler', 'where', 'grade', '=', 'value']",
    "question": "Show the names of all high schoolers in grade 10.",
    "question_th": "แสดงชื่อนักเรียนมัธยมปลายทุกคนในชั้นประถมศึกษาปีที่ 10",
    "question_toks": "['Show', 'the', 'names', 'of', 'all', 'high', 'schoolers', 'in', 'grade', '10', '.']",
    "sql": "{'from': {'table_units': [['table_unit', 0]], 'conds': []}, 'select': [False, [[0, [0, [0, 2, False], None]]]], 'where': [[False, 2, [0, [0, 3, False], None], 10.0, None]], 'groupBy': [], 'having': [], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "network_1",
    "query": "SELECT name FROM Highschooler WHERE grade  =  10",
    "query_toks": "['SELECT', 'name', 'FROM', 'Highschooler', 'WHERE', 'grade', '=', '10']",
    "query_toks_no_value": "['select', 'name', 'from', 'highschooler', 'where', 'grade', '=', 'value']",
    "question": "What are the names of all high schoolers in grade 10?",
    "question_th": "นักเรียนมัธยมปลายทุกคนในชั้นประถมศึกษาปีที่ 10 ชื่ออะไร?",
    "question_toks": "['What', 'are', 'the', 'names', 'of', 'all', 'high', 'schoolers', 'in', 'grade', '10', '?']",
    "sql": "{'from': {'table_units': [['table_unit', 0]], 'conds': []}, 'select': [False, [[0, [0, [0, 2, False], None]]]], 'where': [[False, 2, [0, [0, 3, False], None], 10.0, None]], 'groupBy': [], 'having': [], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "network_1",
    "query": "SELECT ID FROM Highschooler WHERE name  =  \"Kyle\"",
    "query_toks": "['SELECT', 'ID', 'FROM', 'Highschooler', 'WHERE', 'name', '=', '``', 'Kyle', \"''\"]",
    "query_toks_no_value": "['select', 'id', 'from', 'highschooler', 'where', 'name', '=', 'value']",
    "question": "Show the ID of the high schooler named Kyle.",
    "question_th": "แสดงบัตรประจำตัวของนักเรียนมัธยมปลายชื่อไคล์",
    "question_toks": "['Show', 'the', 'ID', 'of', 'the', 'high', 'schooler', 'named', 'Kyle', '.']",
    "sql": "{'from': {'table_units': [['table_unit', 0]], 'conds': []}, 'select': [False, [[0, [0, [0, 1, False], None]]]], 'where': [[False, 2, [0, [0, 2, False], None], '\"Kyle\"', None]], 'groupBy': [], 'having': [], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "network_1",
    "query": "SELECT ID FROM Highschooler WHERE name  =  \"Kyle\"",
    "query_toks": "['SELECT', 'ID', 'FROM', 'Highschooler', 'WHERE', 'name', '=', '``', 'Kyle', \"''\"]",
    "query_toks_no_value": "['select', 'id', 'from', 'highschooler', 'where', 'name', '=', 'value']",
    "question": "What is Kyle's id?",
    "question_th": "ID ของ Kyle คืออะไร?",
    "question_toks": "['What', 'is', 'Kyle', \"'s\", 'id', '?']",
    "sql": "{'from': {'table_units': [['table_unit', 0]], 'conds': []}, 'select': [False, [[0, [0, [0, 1, False], None]]]], 'where': [[False, 2, [0, [0, 2, False], None], '\"Kyle\"', None]], 'groupBy': [], 'having': [], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "network_1",
    "query": "SELECT count(*) FROM Highschooler WHERE grade  =  9 OR grade  =  10",
    "query_toks": "['SELECT', 'count', '(', '*', ')', 'FROM', 'Highschooler', 'WHERE', 'grade', '=', '9', 'OR', 'grade', '=', '10']",
    "query_toks_no_value": "['select', 'count', '(', '*', ')', 'from', 'highschooler', 'where', 'grade', '=', 'value', 'or', 'grade', '=', 'value']",
    "question": "How many high schoolers are there in grade 9 or 10?",
    "question_th": "มีนักเรียนมัธยมปลายกี่คนในเกรด 9 หรือ 10",
    "question_toks": "['How', 'many', 'high', 'schoolers', 'are', 'there', 'in', 'grade', '9', 'or', '10', '?']",
    "sql": "{'from': {'table_units': [['table_unit', 0]], 'conds': []}, 'select': [False, [[3, [0, [0, 0, False], None]]]], 'where': [[False, 2, [0, [0, 3, False], None], 9.0, None], 'or', [False, 2, [0, [0, 3, False], None], 10.0, None]], 'groupBy': [], 'having': [], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "network_1",
    "query": "SELECT count(*) FROM Highschooler WHERE grade  =  9 OR grade  =  10",
    "query_toks": "['SELECT', 'count', '(', '*', ')', 'FROM', 'Highschooler', 'WHERE', 'grade', '=', '9', 'OR', 'grade', '=', '10']",
    "query_toks_no_value": "['select', 'count', '(', '*', ')', 'from', 'highschooler', 'where', 'grade', '=', 'value', 'or', 'grade', '=', 'value']",
    "question": "Count the number of high schoolers in grades 9 or 10.",
    "question_th": "นับจำนวนนักเรียนมัธยมปลายในเกรด 9 หรือ 10",
    "question_toks": "['Count', 'the', 'number', 'of', 'high', 'schoolers', 'in', 'grades', '9', 'or', '10', '.']",
    "sql": "{'from': {'table_units': [['table_unit', 0]], 'conds': []}, 'select': [False, [[3, [0, [0, 0, False], None]]]], 'where': [[False, 2, [0, [0, 3, False], None], 9.0, None], 'or', [False, 2, [0, [0, 3, False], None], 10.0, None]], 'groupBy': [], 'having': [], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "network_1",
    "query": "SELECT grade ,  count(*) FROM Highschooler GROUP BY grade",
    "query_toks": "['SELECT', 'grade', ',', 'count', '(', '*', ')', 'FROM', 'Highschooler', 'GROUP', 'BY', 'grade']",
    "query_toks_no_value": "['select', 'grade', ',', 'count', '(', '*', ')', 'from', 'highschooler', 'group', 'by', 'grade']",
    "question": "Show the number of high schoolers for each grade.",
    "question_th": "แสดงจำนวนนักเรียนมัธยมปลายในแต่ละชั้น",
    "question_toks": "['Show', 'the', 'number', 'of', 'high', 'schoolers', 'for', 'each', 'grade', '.']",
    "sql": "{'from': {'table_units': [['table_unit', 0]], 'conds': []}, 'select': [False, [[0, [0, [0, 3, False], None]], [3, [0, [0, 0, False], None]]]], 'where': [], 'groupBy': [[0, 3, False]], 'having': [], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "network_1",
    "query": "SELECT grade ,  count(*) FROM Highschooler GROUP BY grade",
    "query_toks": "['SELECT', 'grade', ',', 'count', '(', '*', ')', 'FROM', 'Highschooler', 'GROUP', 'BY', 'grade']",
    "query_toks_no_value": "['select', 'grade', ',', 'count', '(', '*', ')', 'from', 'highschooler', 'group', 'by', 'grade']",
    "question": "How many high schoolers are in each grade?",
    "question_th": "แต่ละชั้นมีนักเรียนมัธยมปลายกี่คน?",
    "question_toks": "['How', 'many', 'high', 'schoolers', 'are', 'in', 'each', 'grade', '?']",
    "sql": "{'from': {'table_units': [['table_unit', 0]], 'conds': []}, 'select': [False, [[0, [0, [0, 3, False], None]], [3, [0, [0, 0, False], None]]]], 'where': [], 'groupBy': [[0, 3, False]], 'having': [], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "network_1",
    "query": "SELECT grade FROM Highschooler GROUP BY grade ORDER BY count(*) DESC LIMIT 1",
    "query_toks": "['SELECT', 'grade', 'FROM', 'Highschooler', 'GROUP', 'BY', 'grade', 'ORDER', 'BY', 'count', '(', '*', ')', 'DESC', 'LIMIT', '1']",
    "query_toks_no_value": "['select', 'grade', 'from', 'highschooler', 'group', 'by', 'grade', 'order', 'by', 'count', '(', '*', ')', 'desc', 'limit', 'value']",
    "question": "Which grade has the most high schoolers?",
    "question_th": "เกรดไหนมีนักเรียนมัธยมปลายมากที่สุด?",
    "question_toks": "['Which', 'grade', 'has', 'the', 'most', 'high', 'schoolers', '?']",
    "sql": "{'from': {'table_units': [['table_unit', 0]], 'conds': []}, 'select': [False, [[0, [0, [0, 3, False], None]]]], 'where': [], 'groupBy': [[0, 3, False]], 'having': [], 'orderBy': ['desc', [[0, [3, 0, False], None]]], 'limit': 1, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "network_1",
    "query": "SELECT grade FROM Highschooler GROUP BY grade ORDER BY count(*) DESC LIMIT 1",
    "query_toks": "['SELECT', 'grade', 'FROM', 'Highschooler', 'GROUP', 'BY', 'grade', 'ORDER', 'BY', 'count', '(', '*', ')', 'DESC', 'LIMIT', '1']",
    "query_toks_no_value": "['select', 'grade', 'from', 'highschooler', 'group', 'by', 'grade', 'order', 'by', 'count', '(', '*', ')', 'desc', 'limit', 'value']",
    "question": "Return the grade that has the greatest number of high schoolers.",
    "question_th": "ส่งกลับเกรดที่มีจำนวนนักเรียนมัธยมปลายมากที่สุด",
    "question_toks": "['Return', 'the', 'grade', 'that', 'has', 'the', 'greatest', 'number', 'of', 'high', 'schoolers', '.']",
    "sql": "{'from': {'table_units': [['table_unit', 0]], 'conds': []}, 'select': [False, [[0, [0, [0, 3, False], None]]]], 'where': [], 'groupBy': [[0, 3, False]], 'having': [], 'orderBy': ['desc', [[0, [3, 0, False], None]]], 'limit': 1, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "network_1",
    "query": "SELECT grade FROM Highschooler GROUP BY grade HAVING count(*)  >=  4",
    "query_toks": "['SELECT', 'grade', 'FROM', 'Highschooler', 'GROUP', 'BY', 'grade', 'HAVING', 'count', '(', '*', ')', '>', '=', '4']",
    "query_toks_no_value": "['select', 'grade', 'from', 'highschooler', 'group', 'by', 'grade', 'having', 'count', '(', '*', ')', '>', '=', 'value']",
    "question": "Show me all grades that have at least 4 students.",
    "question_th": "แสดงเกรดทั้งหมดที่มีนักเรียนอย่างน้อย 4 คนให้ฉันดู",
    "question_toks": "['Show', 'me', 'all', 'grades', 'that', 'have', 'at', 'least', '4', 'students', '.']",
    "sql": "{'from': {'table_units': [['table_unit', 0]], 'conds': []}, 'select': [False, [[0, [0, [0, 3, False], None]]]], 'where': [], 'groupBy': [[0, 3, False]], 'having': [[False, 5, [0, [3, 0, False], None], 4.0, None]], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "network_1",
    "query": "SELECT grade FROM Highschooler GROUP BY grade HAVING count(*)  >=  4",
    "query_toks": "['SELECT', 'grade', 'FROM', 'Highschooler', 'GROUP', 'BY', 'grade', 'HAVING', 'count', '(', '*', ')', '>', '=', '4']",
    "query_toks_no_value": "['select', 'grade', 'from', 'highschooler', 'group', 'by', 'grade', 'having', 'count', '(', '*', ')', '>', '=', 'value']",
    "question": "Which grades have 4 or more high schoolers?",
    "question_th": "เกรดใดที่มีนักเรียนมัธยมปลาย 4 คนขึ้นไป",
    "question_toks": "['Which', 'grades', 'have', '4', 'or', 'more', 'high', 'schoolers', '?']",
    "sql": "{'from': {'table_units': [['table_unit', 0]], 'conds': []}, 'select': [False, [[0, [0, [0, 3, False], None]]]], 'where': [], 'groupBy': [[0, 3, False]], 'having': [[False, 5, [0, [3, 0, False], None], 4.0, None]], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "network_1",
    "query": "SELECT student_id ,  count(*) FROM Friend GROUP BY student_id",
    "query_toks": "['SELECT', 'student_id', ',', 'count', '(', '*', ')', 'FROM', 'Friend', 'GROUP', 'BY', 'student_id']",
    "query_toks_no_value": "['select', 'student_id', ',', 'count', '(', '*', ')', 'from', 'friend', 'group', 'by', 'student_id']",
    "question": "Show the student IDs and numbers of friends corresponding to each.",
    "question_th": "แสดงบัตรประจำตัวนักศึกษาและจำนวนเพื่อนที่ตรงกัน",
    "question_toks": "['Show', 'the', 'student', 'IDs', 'and', 'numbers', 'of', 'friends', 'corresponding', 'to', 'each', '.']",
    "sql": "{'from': {'table_units': [['table_unit', 1]], 'conds': []}, 'select': [False, [[0, [0, [0, 4, False], None]], [3, [0, [0, 0, False], None]]]], 'where': [], 'groupBy': [[0, 4, False]], 'having': [], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "network_1",
    "query": "SELECT student_id ,  count(*) FROM Friend GROUP BY student_id",
    "query_toks": "['SELECT', 'student_id', ',', 'count', '(', '*', ')', 'FROM', 'Friend', 'GROUP', 'BY', 'student_id']",
    "query_toks_no_value": "['select', 'student_id', ',', 'count', '(', '*', ')', 'from', 'friend', 'group', 'by', 'student_id']",
    "question": "How many friends does each student have?",
    "question_th": "นักเรียนแต่ละคนมีเพื่อนกี่คน?",
    "question_toks": "['How', 'many', 'friends', 'does', 'each', 'student', 'have', '?']",
    "sql": "{'from': {'table_units': [['table_unit', 1]], 'conds': []}, 'select': [False, [[0, [0, [0, 4, False], None]], [3, [0, [0, 0, False], None]]]], 'where': [], 'groupBy': [[0, 4, False]], 'having': [], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "network_1",
    "query": "SELECT T2.name ,  count(*) FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id GROUP BY T1.student_id",
    "query_toks": "['SELECT', 'T2.name', ',', 'count', '(', '*', ')', 'FROM', 'Friend', 'AS', 'T1', 'JOIN', 'Highschooler', 'AS', 'T2', 'ON', 'T1.student_id', '=', 'T2.id', 'GROUP', 'BY', 'T1.student_id']",
    "query_toks_no_value": "['select', 't2', '.', 'name', ',', 'count', '(', '*', ')', 'from', 'friend', 'as', 't1', 'join', 'highschooler', 'as', 't2', 'on', 't1', '.', 'student_id', '=', 't2', '.', 'id', 'group', 'by', 't1', '.', 'student_id']",
    "question": "Show the names of high school students and their corresponding number of friends.",
    "question_th": "แสดงชื่อนักเรียนมัธยมปลายและจำนวนเพื่อนที่ตรงกัน",
    "question_toks": "['Show', 'the', 'names', 'of', 'high', 'school', 'students', 'and', 'their', 'corresponding', 'number', 'of', 'friends', '.']",
    "sql": "{'from': {'table_units': [['table_unit', 1], ['table_unit', 0]], 'conds': [[False, 2, [0, [0, 4, False], None], [0, 1, False], None]]}, 'select': [False, [[0, [0, [0, 2, False], None]], [3, [0, [0, 0, False], None]]]], 'where': [], 'groupBy': [[0, 4, False]], 'having': [], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "network_1",
    "query": "SELECT T2.name ,  count(*) FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id GROUP BY T1.student_id",
    "query_toks": "['SELECT', 'T2.name', ',', 'count', '(', '*', ')', 'FROM', 'Friend', 'AS', 'T1', 'JOIN', 'Highschooler', 'AS', 'T2', 'ON', 'T1.student_id', '=', 'T2.id', 'GROUP', 'BY', 'T1.student_id']",
    "query_toks_no_value": "['select', 't2', '.', 'name', ',', 'count', '(', '*', ')', 'from', 'friend', 'as', 't1', 'join', 'highschooler', 'as', 't2', 'on', 't1', '.', 'student_id', '=', 't2', '.', 'id', 'group', 'by', 't1', '.', 'student_id']",
    "question": "What are the names of the high schoolers and how many friends does each have?",
    "question_th": "นักเรียนมัธยมปลายชื่ออะไร และแต่ละคนมีเพื่อนกี่คน?",
    "question_toks": "['What', 'are', 'the', 'names', 'of', 'the', 'high', 'schoolers', 'and', 'how', 'many', 'friends', 'does', 'each', 'have', '?']",
    "sql": "{'from': {'table_units': [['table_unit', 1], ['table_unit', 0]], 'conds': [[False, 2, [0, [0, 4, False], None], [0, 1, False], None]]}, 'select': [False, [[0, [0, [0, 2, False], None]], [3, [0, [0, 0, False], None]]]], 'where': [], 'groupBy': [[0, 4, False]], 'having': [], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "network_1",
    "query": "SELECT T2.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id GROUP BY T1.student_id ORDER BY count(*) DESC LIMIT 1",
    "query_toks": "['SELECT', 'T2.name', 'FROM', 'Friend', 'AS', 'T1', 'JOIN', 'Highschooler', 'AS', 'T2', 'ON', 'T1.student_id', '=', 'T2.id', 'GROUP', 'BY', 'T1.student_id', 'ORDER', 'BY', 'count', '(', '*', ')', 'DESC', 'LIMIT', '1']",
    "query_toks_no_value": "['select', 't2', '.', 'name', 'from', 'friend', 'as', 't1', 'join', 'highschooler', 'as', 't2', 'on', 't1', '.', 'student_id', '=', 't2', '.', 'id', 'group', 'by', 't1', '.', 'student_id', 'order', 'by', 'count', '(', '*', ')', 'desc', 'limit', 'value']",
    "question": "What is the name of the high schooler who has the greatest number of friends?",
    "question_th": "นักเรียนมัธยมปลายที่มีเพื่อนมากที่สุดชื่ออะไร?",
    "question_toks": "['What', 'is', 'the', 'name', 'of', 'the', 'high', 'schooler', 'who', 'has', 'the', 'greatest', 'number', 'of', 'friends', '?']",
    "sql": "{'from': {'table_units': [['table_unit', 1], ['table_unit', 0]], 'conds': [[False, 2, [0, [0, 4, False], None], [0, 1, False], None]]}, 'select': [False, [[0, [0, [0, 2, False], None]]]], 'where': [], 'groupBy': [[0, 4, False]], 'having': [], 'orderBy': ['desc', [[0, [3, 0, False], None]]], 'limit': 1, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "network_1",
    "query": "SELECT T2.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id GROUP BY T1.student_id ORDER BY count(*) DESC LIMIT 1",
    "query_toks": "['SELECT', 'T2.name', 'FROM', 'Friend', 'AS', 'T1', 'JOIN', 'Highschooler', 'AS', 'T2', 'ON', 'T1.student_id', '=', 'T2.id', 'GROUP', 'BY', 'T1.student_id', 'ORDER', 'BY', 'count', '(', '*', ')', 'DESC', 'LIMIT', '1']",
    "query_toks_no_value": "['select', 't2', '.', 'name', 'from', 'friend', 'as', 't1', 'join', 'highschooler', 'as', 't2', 'on', 't1', '.', 'student_id', '=', 't2', '.', 'id', 'group', 'by', 't1', '.', 'student_id', 'order', 'by', 'count', '(', '*', ')', 'desc', 'limit', 'value']",
    "question": "Return the name of the high school student with the most friends.",
    "question_th": "กลับชื่อนักเรียนมัธยมปลายที่มีเพื่อนมากที่สุด",
    "question_toks": "['Return', 'the', 'name', 'of', 'the', 'high', 'school', 'student', 'with', 'the', 'most', 'friends', '.']",
    "sql": "{'from': {'table_units': [['table_unit', 1], ['table_unit', 0]], 'conds': [[False, 2, [0, [0, 4, False], None], [0, 1, False], None]]}, 'select': [False, [[0, [0, [0, 2, False], None]]]], 'where': [], 'groupBy': [[0, 4, False]], 'having': [], 'orderBy': ['desc', [[0, [3, 0, False], None]]], 'limit': 1, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "network_1",
    "query": "SELECT T2.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id GROUP BY T1.student_id HAVING count(*)  >=  3",
    "query_toks": "['SELECT', 'T2.name', 'FROM', 'Friend', 'AS', 'T1', 'JOIN', 'Highschooler', 'AS', 'T2', 'ON', 'T1.student_id', '=', 'T2.id', 'GROUP', 'BY', 'T1.student_id', 'HAVING', 'count', '(', '*', ')', '>', '=', '3']",
    "query_toks_no_value": "['select', 't2', '.', 'name', 'from', 'friend', 'as', 't1', 'join', 'highschooler', 'as', 't2', 'on', 't1', '.', 'student_id', '=', 't2', '.', 'id', 'group', 'by', 't1', '.', 'student_id', 'having', 'count', '(', '*', ')', '>', '=', 'value']",
    "question": "Show the names of high schoolers who have at least 3 friends.",
    "question_th": "แสดงรายชื่อนักเรียนมัธยมปลายที่มีเพื่อนอย่างน้อย 3 คน",
    "question_toks": "['Show', 'the', 'names', 'of', 'high', 'schoolers', 'who', 'have', 'at', 'least', '3', 'friends', '.']",
    "sql": "{'from': {'table_units': [['table_unit', 1], ['table_unit', 0]], 'conds': [[False, 2, [0, [0, 4, False], None], [0, 1, False], None]]}, 'select': [False, [[0, [0, [0, 2, False], None]]]], 'where': [], 'groupBy': [[0, 4, False]], 'having': [[False, 5, [0, [3, 0, False], None], 3.0, None]], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "network_1",
    "query": "SELECT T2.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id GROUP BY T1.student_id HAVING count(*)  >=  3",
    "query_toks": "['SELECT', 'T2.name', 'FROM', 'Friend', 'AS', 'T1', 'JOIN', 'Highschooler', 'AS', 'T2', 'ON', 'T1.student_id', '=', 'T2.id', 'GROUP', 'BY', 'T1.student_id', 'HAVING', 'count', '(', '*', ')', '>', '=', '3']",
    "query_toks_no_value": "['select', 't2', '.', 'name', 'from', 'friend', 'as', 't1', 'join', 'highschooler', 'as', 't2', 'on', 't1', '.', 'student_id', '=', 't2', '.', 'id', 'group', 'by', 't1', '.', 'student_id', 'having', 'count', '(', '*', ')', '>', '=', 'value']",
    "question": "What are the names of high schoolers who have 3 or more friends?",
    "question_th": "นักเรียนมัธยมปลายที่มีเพื่อนตั้งแต่ 3 คนขึ้นไปชื่ออะไร",
    "question_toks": "['What', 'are', 'the', 'names', 'of', 'high', 'schoolers', 'who', 'have', '3', 'or', 'more', 'friends', '?']",
    "sql": "{'from': {'table_units': [['table_unit', 1], ['table_unit', 0]], 'conds': [[False, 2, [0, [0, 4, False], None], [0, 1, False], None]]}, 'select': [False, [[0, [0, [0, 2, False], None]]]], 'where': [], 'groupBy': [[0, 4, False]], 'having': [[False, 5, [0, [3, 0, False], None], 3.0, None]], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "network_1",
    "query": "SELECT T3.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id JOIN Highschooler AS T3 ON T1.friend_id  =  T3.id WHERE T2.name  =  \"Kyle\"",
    "query_toks": "['SELECT', 'T3.name', 'FROM', 'Friend', 'AS', 'T1', 'JOIN', 'Highschooler', 'AS', 'T2', 'ON', 'T1.student_id', '=', 'T2.id', 'JOIN', 'Highschooler', 'AS', 'T3', 'ON', 'T1.friend_id', '=', 'T3.id', 'WHERE', 'T2.name', '=', '``', 'Kyle', \"''\"]",
    "query_toks_no_value": "['select', 't3', '.', 'name', 'from', 'friend', 'as', 't1', 'join', 'highschooler', 'as', 't2', 'on', 't1', '.', 'student_id', '=', 't2', '.', 'id', 'join', 'highschooler', 'as', 't3', 'on', 't1', '.', 'friend_id', '=', 't3', '.', 'id', 'where', 't2', '.', 'name', '=', 'value']",
    "question": "Show the names of all of the high schooler Kyle's friends.",
    "question_th": "แสดงชื่อเพื่อนของ Kyle นักเรียนมัธยมปลายทุกคน",
    "question_toks": "['Show', 'the', 'names', 'of', 'all', 'of', 'the', 'high', 'schooler', 'Kyle', \"'s\", 'friends', '.']",
    "sql": "{'from': {'table_units': [['table_unit', 1], ['table_unit', 0], ['table_unit', 0]], 'conds': [[False, 2, [0, [0, 4, False], None], [0, 1, False], None], 'and', [False, 2, [0, [0, 5, False], None], [0, 1, False], None]]}, 'select': [False, [[0, [0, [0, 2, False], None]]]], 'where': [[False, 2, [0, [0, 2, False], None], '\"Kyle\"', None]], 'groupBy': [], 'having': [], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "network_1",
    "query": "SELECT T3.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id JOIN Highschooler AS T3 ON T1.friend_id  =  T3.id WHERE T2.name  =  \"Kyle\"",
    "query_toks": "['SELECT', 'T3.name', 'FROM', 'Friend', 'AS', 'T1', 'JOIN', 'Highschooler', 'AS', 'T2', 'ON', 'T1.student_id', '=', 'T2.id', 'JOIN', 'Highschooler', 'AS', 'T3', 'ON', 'T1.friend_id', '=', 'T3.id', 'WHERE', 'T2.name', '=', '``', 'Kyle', \"''\"]",
    "query_toks_no_value": "['select', 't3', '.', 'name', 'from', 'friend', 'as', 't1', 'join', 'highschooler', 'as', 't2', 'on', 't1', '.', 'student_id', '=', 't2', '.', 'id', 'join', 'highschooler', 'as', 't3', 'on', 't1', '.', 'friend_id', '=', 't3', '.', 'id', 'where', 't2', '.', 'name', '=', 'value']",
    "question": "Return the names of friends of the high school student Kyle.",
    "question_th": "คืนชื่อเพื่อนของนักเรียนมัธยมปลายไคล์",
    "question_toks": "['Return', 'the', 'names', 'of', 'friends', 'of', 'the', 'high', 'school', 'student', 'Kyle', '.']",
    "sql": "{'from': {'table_units': [['table_unit', 1], ['table_unit', 0], ['table_unit', 0]], 'conds': [[False, 2, [0, [0, 4, False], None], [0, 1, False], None], 'and', [False, 2, [0, [0, 5, False], None], [0, 1, False], None]]}, 'select': [False, [[0, [0, [0, 2, False], None]]]], 'where': [[False, 2, [0, [0, 2, False], None], '\"Kyle\"', None]], 'groupBy': [], 'having': [], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "network_1",
    "query": "SELECT count(*) FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id WHERE T2.name  =  \"Kyle\"",
    "query_toks": "['SELECT', 'count', '(', '*', ')', 'FROM', 'Friend', 'AS', 'T1', 'JOIN', 'Highschooler', 'AS', 'T2', 'ON', 'T1.student_id', '=', 'T2.id', 'WHERE', 'T2.name', '=', '``', 'Kyle', \"''\"]",
    "query_toks_no_value": "['select', 'count', '(', '*', ')', 'from', 'friend', 'as', 't1', 'join', 'highschooler', 'as', 't2', 'on', 't1', '.', 'student_id', '=', 't2', '.', 'id', 'where', 't2', '.', 'name', '=', 'value']",
    "question": "How many friends does the high school student Kyle have?",
    "question_th": "ไคล์ นักเรียนมัธยมปลายมีเพื่อนกี่คน?",
    "question_toks": "['How', 'many', 'friends', 'does', 'the', 'high', 'school', 'student', 'Kyle', 'have', '?']",
    "sql": "{'from': {'table_units': [['table_unit', 1], ['table_unit', 0]], 'conds': [[False, 2, [0, [0, 4, False], None], [0, 1, False], None]]}, 'select': [False, [[3, [0, [0, 0, False], None]]]], 'where': [[False, 2, [0, [0, 2, False], None], '\"Kyle\"', None]], 'groupBy': [], 'having': [], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "network_1",
    "query": "SELECT count(*) FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id WHERE T2.name  =  \"Kyle\"",
    "query_toks": "['SELECT', 'count', '(', '*', ')', 'FROM', 'Friend', 'AS', 'T1', 'JOIN', 'Highschooler', 'AS', 'T2', 'ON', 'T1.student_id', '=', 'T2.id', 'WHERE', 'T2.name', '=', '``', 'Kyle', \"''\"]",
    "query_toks_no_value": "['select', 'count', '(', '*', ')', 'from', 'friend', 'as', 't1', 'join', 'highschooler', 'as', 't2', 'on', 't1', '.', 'student_id', '=', 't2', '.', 'id', 'where', 't2', '.', 'name', '=', 'value']",
    "question": "Count the number of friends Kyle has.",
    "question_th": "นับจำนวนเพื่อนที่ไคล์มี",
    "question_toks": "['Count', 'the', 'number', 'of', 'friends', 'Kyle', 'has', '.']",
    "sql": "{'from': {'table_units': [['table_unit', 1], ['table_unit', 0]], 'conds': [[False, 2, [0, [0, 4, False], None], [0, 1, False], None]]}, 'select': [False, [[3, [0, [0, 0, False], None]]]], 'where': [[False, 2, [0, [0, 2, False], None], '\"Kyle\"', None]], 'groupBy': [], 'having': [], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "network_1",
    "query": "SELECT id FROM Highschooler EXCEPT SELECT student_id FROM Friend",
    "query_toks": "['SELECT', 'id', 'FROM', 'Highschooler', 'EXCEPT', 'SELECT', 'student_id', 'FROM', 'Friend']",
    "query_toks_no_value": "['select', 'id', 'from', 'highschooler', 'except', 'select', 'student_id', 'from', 'friend']",
    "question": "Show ids of all students who do not have any friends.",
    "question_th": "แสดงรหัสนักเรียนทุกคนที่ไม่มีเพื่อน",
    "question_toks": "['Show', 'ids', 'of', 'all', 'students', 'who', 'do', 'not', 'have', 'any', 'friends', '.']",
    "sql": "{'from': {'table_units': [['table_unit', 0]], 'conds': []}, 'select': [False, [[0, [0, [0, 1, False], None]]]], 'where': [], 'groupBy': [], 'having': [], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': {'from': {'table_units': [['table_unit', 1]], 'conds': []}, 'select': [False, [[0, [0, [0, 4, False], None]]]], 'where': [], 'groupBy': [], 'having': [], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}}"
  },
  {
    "db_id": "network_1",
    "query": "SELECT id FROM Highschooler EXCEPT SELECT student_id FROM Friend",
    "query_toks": "['SELECT', 'id', 'FROM', 'Highschooler', 'EXCEPT', 'SELECT', 'student_id', 'FROM', 'Friend']",
    "query_toks_no_value": "['select', 'id', 'from', 'highschooler', 'except', 'select', 'student_id', 'from', 'friend']",
    "question": "What are the ids of high school students who do not have friends?",
    "question_th": "นักเรียนมัธยมปลายที่ไม่มีเพื่อนมีรหัสอะไรบ้าง?",
    "question_toks": "['What', 'are', 'the', 'ids', 'of', 'high', 'school', 'students', 'who', 'do', 'not', 'have', 'friends', '?']",
    "sql": "{'from': {'table_units': [['table_unit', 0]], 'conds': []}, 'select': [False, [[0, [0, [0, 1, False], None]]]], 'where': [], 'groupBy': [], 'having': [], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': {'from': {'table_units': [['table_unit', 1]], 'conds': []}, 'select': [False, [[0, [0, [0, 4, False], None]]]], 'where': [], 'groupBy': [], 'having': [], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}}"
  },
  {
    "db_id": "network_1",
    "query": "SELECT name FROM Highschooler EXCEPT SELECT T2.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id",
    "query_toks": "['SELECT', 'name', 'FROM', 'Highschooler', 'EXCEPT', 'SELECT', 'T2.name', 'FROM', 'Friend', 'AS', 'T1', 'JOIN', 'Highschooler', 'AS', 'T2', 'ON', 'T1.student_id', '=', 'T2.id']",
    "query_toks_no_value": "['select', 'name', 'from', 'highschooler', 'except', 'select', 't2', '.', 'name', 'from', 'friend', 'as', 't1', 'join', 'highschooler', 'as', 't2', 'on', 't1', '.', 'student_id', '=', 't2', '.', 'id']",
    "question": "Show names of all high school students who do not have any friends.",
    "question_th": "แสดงรายชื่อนักเรียนมัธยมปลายทุกคนที่ไม่มีเพื่อน",
    "question_toks": "['Show', 'names', 'of', 'all', 'high', 'school', 'students', 'who', 'do', 'not', 'have', 'any', 'friends', '.']",
    "sql": "{'from': {'table_units': [['table_unit', 0]], 'conds': []}, 'select': [False, [[0, [0, [0, 2, False], None]]]], 'where': [], 'groupBy': [], 'having': [], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': {'from': {'table_units': [['table_unit', 1], ['table_unit', 0]], 'conds': [[False, 2, [0, [0, 4, False], None], [0, 1, False], None]]}, 'select': [False, [[0, [0, [0, 2, False], None]]]], 'where': [], 'groupBy': [], 'having': [], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}}"
  },
  {
    "db_id": "network_1",
    "query": "SELECT name FROM Highschooler EXCEPT SELECT T2.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id",
    "query_toks": "['SELECT', 'name', 'FROM', 'Highschooler', 'EXCEPT', 'SELECT', 'T2.name', 'FROM', 'Friend', 'AS', 'T1', 'JOIN', 'Highschooler', 'AS', 'T2', 'ON', 'T1.student_id', '=', 'T2.id']",
    "query_toks_no_value": "['select', 'name', 'from', 'highschooler', 'except', 'select', 't2', '.', 'name', 'from', 'friend', 'as', 't1', 'join', 'highschooler', 'as', 't2', 'on', 't1', '.', 'student_id', '=', 't2', '.', 'id']",
    "question": "What are the names of students who have no friends?",
    "question_th": "นักเรียนที่ไม่มีเพื่อนชื่ออะไร?",
    "question_toks": "['What', 'are', 'the', 'names', 'of', 'students', 'who', 'have', 'no', 'friends', '?']",
    "sql": "{'from': {'table_units': [['table_unit', 0]], 'conds': []}, 'select': [False, [[0, [0, [0, 2, False], None]]]], 'where': [], 'groupBy': [], 'having': [], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': {'from': {'table_units': [['table_unit', 1], ['table_unit', 0]], 'conds': [[False, 2, [0, [0, 4, False], None], [0, 1, False], None]]}, 'select': [False, [[0, [0, [0, 2, False], None]]]], 'where': [], 'groupBy': [], 'having': [], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}}"
  },
  {
    "db_id": "network_1",
    "query": "SELECT student_id FROM Friend INTERSECT SELECT liked_id FROM Likes",
    "query_toks": "['SELECT', 'student_id', 'FROM', 'Friend', 'INTERSECT', 'SELECT', 'liked_id', 'FROM', 'Likes']",
    "query_toks_no_value": "['select', 'student_id', 'from', 'friend', 'intersect', 'select', 'liked_id', 'from', 'likes']",
    "question": "Show the ids of high schoolers who have friends and are also liked by someone else.",
    "question_th": "แสดงรหัสของนักเรียนมัธยมปลายที่มีเพื่อนและเป็นที่ชื่นชอบของคนอื่นด้วย",
    "question_toks": "['Show', 'the', 'ids', 'of', 'high', 'schoolers', 'who', 'have', 'friends', 'and', 'are', 'also', 'liked', 'by', 'someone', 'else', '.']",
    "sql": "{'from': {'table_units': [['table_unit', 1]], 'conds': []}, 'select': [False, [[0, [0, [0, 4, False], None]]]], 'where': [], 'groupBy': [], 'having': [], 'orderBy': [], 'limit': None, 'intersect': {'from': {'table_units': [['table_unit', 2]], 'conds': []}, 'select': [False, [[0, [0, [0, 7, False], None]]]], 'where': [], 'groupBy': [], 'having': [], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}, 'union': None, 'except': None}"
  },
  {
    "db_id": "network_1",
    "query": "SELECT student_id FROM Friend INTERSECT SELECT liked_id FROM Likes",
    "query_toks": "['SELECT', 'student_id', 'FROM', 'Friend', 'INTERSECT', 'SELECT', 'liked_id', 'FROM', 'Likes']",
    "query_toks_no_value": "['select', 'student_id', 'from', 'friend', 'intersect', 'select', 'liked_id', 'from', 'likes']",
    "question": "What are the ids of students who both have friends and are liked?",
    "question_th": "นักศึกษาที่ทั้งมีเพื่อนและชอบมีไอดีอะไรกันบ้าง?",
    "question_toks": "['What', 'are', 'the', 'ids', 'of', 'students', 'who', 'both', 'have', 'friends', 'and', 'are', 'liked', '?']",
    "sql": "{'from': {'table_units': [['table_unit', 1]], 'conds': []}, 'select': [False, [[0, [0, [0, 4, False], None]]]], 'where': [], 'groupBy': [], 'having': [], 'orderBy': [], 'limit': None, 'intersect': {'from': {'table_units': [['table_unit', 2]], 'conds': []}, 'select': [False, [[0, [0, [0, 7, False], None]]]], 'where': [], 'groupBy': [], 'having': [], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}, 'union': None, 'except': None}"
  },
  {
    "db_id": "network_1",
    "query": "SELECT T2.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id INTERSECT SELECT T2.name FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.liked_id  =  T2.id",
    "query_toks": "['SELECT', 'T2.name', 'FROM', 'Friend', 'AS', 'T1', 'JOIN', 'Highschooler', 'AS', 'T2', 'ON', 'T1.student_id', '=', 'T2.id', 'INTERSECT', 'SELECT', 'T2.name', 'FROM', 'Likes', 'AS', 'T1', 'JOIN', 'Highschooler', 'AS', 'T2', 'ON', 'T1.liked_id', '=', 'T2.id']",
    "query_toks_no_value": "['select', 't2', '.', 'name', 'from', 'friend', 'as', 't1', 'join', 'highschooler', 'as', 't2', 'on', 't1', '.', 'student_id', '=', 't2', '.', 'id', 'intersect', 'select', 't2', '.', 'name', 'from', 'likes', 'as', 't1', 'join', 'highschooler', 'as', 't2', 'on', 't1', '.', 'liked_id', '=', 't2', '.', 'id']",
    "question": "Show name of all students who have some friends and also are liked by someone else.",
    "question_th": "แสดงชื่อนักเรียนทุกคนที่มีเพื่อนและมีคนอื่นชื่นชอบด้วย",
    "question_toks": "['Show', 'name', 'of', 'all', 'students', 'who', 'have', 'some', 'friends', 'and', 'also', 'are', 'liked', 'by', 'someone', 'else', '.']",
    "sql": "{'from': {'table_units': [['table_unit', 1], ['table_unit', 0]], 'conds': [[False, 2, [0, [0, 6, False], None], [0, 1, False], None]]}, 'select': [False, [[0, [0, [0, 2, False], None]]]], 'where': [], 'groupBy': [], 'having': [], 'orderBy': [], 'limit': None, 'intersect': {'from': {'table_units': [['table_unit', 2], ['table_unit', 0]], 'conds': [[False, 2, [0, [0, 7, False], None], [0, 1, False], None]]}, 'select': [False, [[0, [0, [0, 2, False], None]]]], 'where': [], 'groupBy': [], 'having': [], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}, 'union': None, 'except': None}"
  },
  {
    "db_id": "network_1",
    "query": "SELECT T2.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id INTERSECT SELECT T2.name FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.liked_id  =  T2.id",
    "query_toks": "['SELECT', 'T2.name', 'FROM', 'Friend', 'AS', 'T1', 'JOIN', 'Highschooler', 'AS', 'T2', 'ON', 'T1.student_id', '=', 'T2.id', 'INTERSECT', 'SELECT', 'T2.name', 'FROM', 'Likes', 'AS', 'T1', 'JOIN', 'Highschooler', 'AS', 'T2', 'ON', 'T1.liked_id', '=', 'T2.id']",
    "query_toks_no_value": "['select', 't2', '.', 'name', 'from', 'friend', 'as', 't1', 'join', 'highschooler', 'as', 't2', 'on', 't1', '.', 'student_id', '=', 't2', '.', 'id', 'intersect', 'select', 't2', '.', 'name', 'from', 'likes', 'as', 't1', 'join', 'highschooler', 'as', 't2', 'on', 't1', '.', 'liked_id', '=', 't2', '.', 'id']",
    "question": "What are the names of high schoolers who both have friends and are liked?",
    "question_th": "เด็กม.ปลายที่ทั้งมีเพื่อนและชอบชื่ออะไร?",
    "question_toks": "['What', 'are', 'the', 'names', 'of', 'high', 'schoolers', 'who', 'both', 'have', 'friends', 'and', 'are', 'liked', '?']",
    "sql": "{'from': {'table_units': [['table_unit', 1], ['table_unit', 0]], 'conds': [[False, 2, [0, [0, 6, False], None], [0, 1, False], None]]}, 'select': [False, [[0, [0, [0, 2, False], None]]]], 'where': [], 'groupBy': [], 'having': [], 'orderBy': [], 'limit': None, 'intersect': {'from': {'table_units': [['table_unit', 2], ['table_unit', 0]], 'conds': [[False, 2, [0, [0, 7, False], None], [0, 1, False], None]]}, 'select': [False, [[0, [0, [0, 2, False], None]]]], 'where': [], 'groupBy': [], 'having': [], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}, 'union': None, 'except': None}"
  },
  {
    "db_id": "network_1",
    "query": "SELECT student_id ,  count(*) FROM Likes GROUP BY student_id",
    "query_toks": "['SELECT', 'student_id', ',', 'count', '(', '*', ')', 'FROM', 'Likes', 'GROUP', 'BY', 'student_id']",
    "query_toks_no_value": "['select', 'student_id', ',', 'count', '(', '*', ')', 'from', 'likes', 'group', 'by', 'student_id']",
    "question": "Count the number of likes for each student id.",
    "question_th": "นับจำนวนไลค์สำหรับรหัสนักเรียนแต่ละคน",
    "question_toks": "['Count', 'the', 'number', 'of', 'likes', 'for', 'each', 'student', 'id', '.']",
    "sql": "{'from': {'table_units': [['table_unit', 2]], 'conds': []}, 'select': [False, [[0, [0, [0, 6, False], None]], [3, [0, [0, 0, False], None]]]], 'where': [], 'groupBy': [[0, 6, False]], 'having': [], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "network_1",
    "query": "SELECT student_id ,  count(*) FROM Likes GROUP BY student_id",
    "query_toks": "['SELECT', 'student_id', ',', 'count', '(', '*', ')', 'FROM', 'Likes', 'GROUP', 'BY', 'student_id']",
    "query_toks_no_value": "['select', 'student_id', ',', 'count', '(', '*', ')', 'from', 'likes', 'group', 'by', 'student_id']",
    "question": "How many likes correspond to each student id?",
    "question_th": "รหัสนักเรียนแต่ละคนมียอดไลค์กี่ไลค์?",
    "question_toks": "['How', 'many', 'likes', 'correspond', 'to', 'each', 'student', 'id', '?']",
    "sql": "{'from': {'table_units': [['table_unit', 2]], 'conds': []}, 'select': [False, [[0, [0, [0, 6, False], None]], [3, [0, [0, 0, False], None]]]], 'where': [], 'groupBy': [[0, 6, False]], 'having': [], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "network_1",
    "query": "SELECT T2.name ,  count(*) FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id GROUP BY T1.student_id",
    "query_toks": "['SELECT', 'T2.name', ',', 'count', '(', '*', ')', 'FROM', 'Likes', 'AS', 'T1', 'JOIN', 'Highschooler', 'AS', 'T2', 'ON', 'T1.student_id', '=', 'T2.id', 'GROUP', 'BY', 'T1.student_id']",
    "query_toks_no_value": "['select', 't2', '.', 'name', ',', 'count', '(', '*', ')', 'from', 'likes', 'as', 't1', 'join', 'highschooler', 'as', 't2', 'on', 't1', '.', 'student_id', '=', 't2', '.', 'id', 'group', 'by', 't1', '.', 'student_id']",
    "question": "Show the names of high schoolers who have likes, and numbers of likes for each.",
    "question_th": "แสดงรายชื่อนักเรียนมัธยมปลายที่มียอดไลค์ และจำนวนไลค์ของแต่ละคน",
    "question_toks": "['Show', 'the', 'names', 'of', 'high', 'schoolers', 'who', 'have', 'likes', ',', 'and', 'numbers', 'of', 'likes', 'for', 'each', '.']",
    "sql": "{'from': {'table_units': [['table_unit', 2], ['table_unit', 0]], 'conds': [[False, 2, [0, [0, 6, False], None], [0, 1, False], None]]}, 'select': [False, [[0, [0, [0, 2, False], None]], [3, [0, [0, 0, False], None]]]], 'where': [], 'groupBy': [[0, 6, False]], 'having': [], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "network_1",
    "query": "SELECT T2.name ,  count(*) FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id GROUP BY T1.student_id",
    "query_toks": "['SELECT', 'T2.name', ',', 'count', '(', '*', ')', 'FROM', 'Likes', 'AS', 'T1', 'JOIN', 'Highschooler', 'AS', 'T2', 'ON', 'T1.student_id', '=', 'T2.id', 'GROUP', 'BY', 'T1.student_id']",
    "query_toks_no_value": "['select', 't2', '.', 'name', ',', 'count', '(', '*', ')', 'from', 'likes', 'as', 't1', 'join', 'highschooler', 'as', 't2', 'on', 't1', '.', 'student_id', '=', 't2', '.', 'id', 'group', 'by', 't1', '.', 'student_id']",
    "question": "What are the names of high schoolers who have likes, and how many likes does each have?",
    "question_th": "เด็กม.ปลายที่ชอบชื่ออะไร และแต่ละคนมีกี่ไลค์?",
    "question_toks": "['What', 'are', 'the', 'names', 'of', 'high', 'schoolers', 'who', 'have', 'likes', ',', 'and', 'how', 'many', 'likes', 'does', 'each', 'have', '?']",
    "sql": "{'from': {'table_units': [['table_unit', 2], ['table_unit', 0]], 'conds': [[False, 2, [0, [0, 6, False], None], [0, 1, False], None]]}, 'select': [False, [[0, [0, [0, 2, False], None]], [3, [0, [0, 0, False], None]]]], 'where': [], 'groupBy': [[0, 6, False]], 'having': [], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "network_1",
    "query": "SELECT T2.name FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id GROUP BY T1.student_id ORDER BY count(*) DESC LIMIT 1",
    "query_toks": "['SELECT', 'T2.name', 'FROM', 'Likes', 'AS', 'T1', 'JOIN', 'Highschooler', 'AS', 'T2', 'ON', 'T1.student_id', '=', 'T2.id', 'GROUP', 'BY', 'T1.student_id', 'ORDER', 'BY', 'count', '(', '*', ')', 'DESC', 'LIMIT', '1']",
    "query_toks_no_value": "['select', 't2', '.', 'name', 'from', 'likes', 'as', 't1', 'join', 'highschooler', 'as', 't2', 'on', 't1', '.', 'student_id', '=', 't2', '.', 'id', 'group', 'by', 't1', '.', 'student_id', 'order', 'by', 'count', '(', '*', ')', 'desc', 'limit', 'value']",
    "question": "What is the name of the high schooler who has the greatest number of likes?",
    "question_th": "นักเรียนมัธยมปลายที่มียอดไลค์มากที่สุดชื่ออะไร?",
    "question_toks": "['What', 'is', 'the', 'name', 'of', 'the', 'high', 'schooler', 'who', 'has', 'the', 'greatest', 'number', 'of', 'likes', '?']",
    "sql": "{'from': {'table_units': [['table_unit', 2], ['table_unit', 0]], 'conds': [[False, 2, [0, [0, 6, False], None], [0, 1, False], None]]}, 'select': [False, [[0, [0, [0, 2, False], None]]]], 'where': [], 'groupBy': [[0, 6, False]], 'having': [], 'orderBy': ['desc', [[0, [3, 0, False], None]]], 'limit': 1, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "network_1",
    "query": "SELECT T2.name FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id GROUP BY T1.student_id ORDER BY count(*) DESC LIMIT 1",
    "query_toks": "['SELECT', 'T2.name', 'FROM', 'Likes', 'AS', 'T1', 'JOIN', 'Highschooler', 'AS', 'T2', 'ON', 'T1.student_id', '=', 'T2.id', 'GROUP', 'BY', 'T1.student_id', 'ORDER', 'BY', 'count', '(', '*', ')', 'DESC', 'LIMIT', '1']",
    "query_toks_no_value": "['select', 't2', '.', 'name', 'from', 'likes', 'as', 't1', 'join', 'highschooler', 'as', 't2', 'on', 't1', '.', 'student_id', '=', 't2', '.', 'id', 'group', 'by', 't1', '.', 'student_id', 'order', 'by', 'count', '(', '*', ')', 'desc', 'limit', 'value']",
    "question": "Give the name of the student with the most likes.",
    "question_th": "ระบุชื่อนักเรียนที่มีการถูกใจมากที่สุด",
    "question_toks": "['Give', 'the', 'name', 'of', 'the', 'student', 'with', 'the', 'most', 'likes', '.']",
    "sql": "{'from': {'table_units': [['table_unit', 2], ['table_unit', 0]], 'conds': [[False, 2, [0, [0, 6, False], None], [0, 1, False], None]]}, 'select': [False, [[0, [0, [0, 2, False], None]]]], 'where': [], 'groupBy': [[0, 6, False]], 'having': [], 'orderBy': ['desc', [[0, [3, 0, False], None]]], 'limit': 1, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "network_1",
    "query": "SELECT T2.name FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id GROUP BY T1.student_id HAVING count(*)  >=  2",
    "query_toks": "['SELECT', 'T2.name', 'FROM', 'Likes', 'AS', 'T1', 'JOIN', 'Highschooler', 'AS', 'T2', 'ON', 'T1.student_id', '=', 'T2.id', 'GROUP', 'BY', 'T1.student_id', 'HAVING', 'count', '(', '*', ')', '>', '=', '2']",
    "query_toks_no_value": "['select', 't2', '.', 'name', 'from', 'likes', 'as', 't1', 'join', 'highschooler', 'as', 't2', 'on', 't1', '.', 'student_id', '=', 't2', '.', 'id', 'group', 'by', 't1', '.', 'student_id', 'having', 'count', '(', '*', ')', '>', '=', 'value']",
    "question": "Show the names of students who have at least 2 likes.",
    "question_th": "แสดงรายชื่อนักเรียนที่มีการถูกใจอย่างน้อย 2 ครั้ง",
    "question_toks": "['Show', 'the', 'names', 'of', 'students', 'who', 'have', 'at', 'least', '2', 'likes', '.']",
    "sql": "{'from': {'table_units': [['table_unit', 2], ['table_unit', 0]], 'conds': [[False, 2, [0, [0, 6, False], None], [0, 1, False], None]]}, 'select': [False, [[0, [0, [0, 2, False], None]]]], 'where': [], 'groupBy': [[0, 6, False]], 'having': [[False, 5, [0, [3, 0, False], None], 2.0, None]], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "network_1",
    "query": "SELECT T2.name FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id GROUP BY T1.student_id HAVING count(*)  >=  2",
    "query_toks": "['SELECT', 'T2.name', 'FROM', 'Likes', 'AS', 'T1', 'JOIN', 'Highschooler', 'AS', 'T2', 'ON', 'T1.student_id', '=', 'T2.id', 'GROUP', 'BY', 'T1.student_id', 'HAVING', 'count', '(', '*', ')', '>', '=', '2']",
    "query_toks_no_value": "['select', 't2', '.', 'name', 'from', 'likes', 'as', 't1', 'join', 'highschooler', 'as', 't2', 'on', 't1', '.', 'student_id', '=', 't2', '.', 'id', 'group', 'by', 't1', '.', 'student_id', 'having', 'count', '(', '*', ')', '>', '=', 'value']",
    "question": "What are the names of students who have 2 or more likes?",
    "question_th": "นักเรียนที่มียอดไลค์ 2 ไลค์ขึ้นไปมีชื่อว่าอะไร?",
    "question_toks": "['What', 'are', 'the', 'names', 'of', 'students', 'who', 'have', '2', 'or', 'more', 'likes', '?']",
    "sql": "{'from': {'table_units': [['table_unit', 2], ['table_unit', 0]], 'conds': [[False, 2, [0, [0, 6, False], None], [0, 1, False], None]]}, 'select': [False, [[0, [0, [0, 2, False], None]]]], 'where': [], 'groupBy': [[0, 6, False]], 'having': [[False, 5, [0, [3, 0, False], None], 2.0, None]], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "network_1",
    "query": "SELECT T2.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id WHERE T2.grade  >  5 GROUP BY T1.student_id HAVING count(*)  >=  2",
    "query_toks": "['SELECT', 'T2.name', 'FROM', 'Friend', 'AS', 'T1', 'JOIN', 'Highschooler', 'AS', 'T2', 'ON', 'T1.student_id', '=', 'T2.id', 'WHERE', 'T2.grade', '>', '5', 'GROUP', 'BY', 'T1.student_id', 'HAVING', 'count', '(', '*', ')', '>', '=', '2']",
    "query_toks_no_value": "['select', 't2', '.', 'name', 'from', 'friend', 'as', 't1', 'join', 'highschooler', 'as', 't2', 'on', 't1', '.', 'student_id', '=', 't2', '.', 'id', 'where', 't2', '.', 'grade', '>', 'value', 'group', 'by', 't1', '.', 'student_id', 'having', 'count', '(', '*', ')', '>', '=', 'value']",
    "question": "Show the names of students who have a grade higher than 5 and have at least 2 friends.",
    "question_th": "แสดงรายชื่อนักเรียนที่มีเกรดมากกว่า 5 และมีเพื่อนอย่างน้อย 2 คน",
    "question_toks": "['Show', 'the', 'names', 'of', 'students', 'who', 'have', 'a', 'grade', 'higher', 'than', '5', 'and', 'have', 'at', 'least', '2', 'friends', '.']",
    "sql": "{'from': {'table_units': [['table_unit', 1], ['table_unit', 0]], 'conds': [[False, 2, [0, [0, 4, False], None], [0, 1, False], None]]}, 'select': [False, [[0, [0, [0, 2, False], None]]]], 'where': [[False, 3, [0, [0, 3, False], None], 5.0, None]], 'groupBy': [[0, 4, False]], 'having': [[False, 5, [0, [3, 0, False], None], 2.0, None]], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "network_1",
    "query": "SELECT T2.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id WHERE T2.grade  >  5 GROUP BY T1.student_id HAVING count(*)  >=  2",
    "query_toks": "['SELECT', 'T2.name', 'FROM', 'Friend', 'AS', 'T1', 'JOIN', 'Highschooler', 'AS', 'T2', 'ON', 'T1.student_id', '=', 'T2.id', 'WHERE', 'T2.grade', '>', '5', 'GROUP', 'BY', 'T1.student_id', 'HAVING', 'count', '(', '*', ')', '>', '=', '2']",
    "query_toks_no_value": "['select', 't2', '.', 'name', 'from', 'friend', 'as', 't1', 'join', 'highschooler', 'as', 't2', 'on', 't1', '.', 'student_id', '=', 't2', '.', 'id', 'where', 't2', '.', 'grade', '>', 'value', 'group', 'by', 't1', '.', 'student_id', 'having', 'count', '(', '*', ')', '>', '=', 'value']",
    "question": "What are the names of high schoolers who have a grade of over 5 and have 2 or more friends?",
    "question_th": "นักเรียนมัธยมปลายที่มีเกรดเกิน 5 และมีเพื่อนตั้งแต่ 2 คนขึ้นไปชื่ออะไร",
    "question_toks": "['What', 'are', 'the', 'names', 'of', 'high', 'schoolers', 'who', 'have', 'a', 'grade', 'of', 'over', '5', 'and', 'have', '2', 'or', 'more', 'friends', '?']",
    "sql": "{'from': {'table_units': [['table_unit', 1], ['table_unit', 0]], 'conds': [[False, 2, [0, [0, 4, False], None], [0, 1, False], None]]}, 'select': [False, [[0, [0, [0, 2, False], None]]]], 'where': [[False, 3, [0, [0, 3, False], None], 5.0, None]], 'groupBy': [[0, 4, False]], 'having': [[False, 5, [0, [3, 0, False], None], 2.0, None]], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "network_1",
    "query": "SELECT count(*) FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id WHERE T2.name  =  \"Kyle\"",
    "query_toks": "['SELECT', 'count', '(', '*', ')', 'FROM', 'Likes', 'AS', 'T1', 'JOIN', 'Highschooler', 'AS', 'T2', 'ON', 'T1.student_id', '=', 'T2.id', 'WHERE', 'T2.name', '=', '``', 'Kyle', \"''\"]",
    "query_toks_no_value": "['select', 'count', '(', '*', ')', 'from', 'likes', 'as', 't1', 'join', 'highschooler', 'as', 't2', 'on', 't1', '.', 'student_id', '=', 't2', '.', 'id', 'where', 't2', '.', 'name', '=', 'value']",
    "question": "How many likes does Kyle have?",
    "question_th": "ไคล์มีคนกดไลค์กี่คน?",
    "question_toks": "['How', 'many', 'likes', 'does', 'Kyle', 'have', '?']",
    "sql": "{'from': {'table_units': [['table_unit', 2], ['table_unit', 0]], 'conds': [[False, 2, [0, [0, 6, False], None], [0, 1, False], None]]}, 'select': [False, [[3, [0, [0, 0, False], None]]]], 'where': [[False, 2, [0, [0, 2, False], None], '\"Kyle\"', None]], 'groupBy': [], 'having': [], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "network_1",
    "query": "SELECT count(*) FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id WHERE T2.name  =  \"Kyle\"",
    "query_toks": "['SELECT', 'count', '(', '*', ')', 'FROM', 'Likes', 'AS', 'T1', 'JOIN', 'Highschooler', 'AS', 'T2', 'ON', 'T1.student_id', '=', 'T2.id', 'WHERE', 'T2.name', '=', '``', 'Kyle', \"''\"]",
    "query_toks_no_value": "['select', 'count', '(', '*', ')', 'from', 'likes', 'as', 't1', 'join', 'highschooler', 'as', 't2', 'on', 't1', '.', 'student_id', '=', 't2', '.', 'id', 'where', 't2', '.', 'name', '=', 'value']",
    "question": "Return the number of likes that the high schooler named Kyle has.",
    "question_th": "คืนจำนวนไลค์ที่นักเรียนม.ปลายชื่อไคล์มี",
    "question_toks": "['Return', 'the', 'number', 'of', 'likes', 'that', 'the', 'high', 'schooler', 'named', 'Kyle', 'has', '.']",
    "sql": "{'from': {'table_units': [['table_unit', 2], ['table_unit', 0]], 'conds': [[False, 2, [0, [0, 6, False], None], [0, 1, False], None]]}, 'select': [False, [[3, [0, [0, 0, False], None]]]], 'where': [[False, 2, [0, [0, 2, False], None], '\"Kyle\"', None]], 'groupBy': [], 'having': [], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "network_1",
    "query": "SELECT avg(grade) FROM Highschooler WHERE id IN (SELECT T1.student_id FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id)",
    "query_toks": "['SELECT', 'avg', '(', 'grade', ')', 'FROM', 'Highschooler', 'WHERE', 'id', 'IN', '(', 'SELECT', 'T1.student_id', 'FROM', 'Friend', 'AS', 'T1', 'JOIN', 'Highschooler', 'AS', 'T2', 'ON', 'T1.student_id', '=', 'T2.id', ')']",
    "query_toks_no_value": "['select', 'avg', '(', 'grade', ')', 'from', 'highschooler', 'where', 'id', 'in', '(', 'select', 't1', '.', 'student_id', 'from', 'friend', 'as', 't1', 'join', 'highschooler', 'as', 't2', 'on', 't1', '.', 'student_id', '=', 't2', '.', 'id', ')']",
    "question": "Find the average grade of all students who have some friends.",
    "question_th": "หาเกรดเฉลี่ยของนักเรียนทุกคนที่มีเพื่อนบ้าง",
    "question_toks": "['Find', 'the', 'average', 'grade', 'of', 'all', 'students', 'who', 'have', 'some', 'friends', '.']",
    "sql": "{'from': {'table_units': [['table_unit', 0]], 'conds': []}, 'select': [False, [[5, [0, [0, 3, False], None]]]], 'where': [[False, 8, [0, [0, 1, False], None], {'from': {'table_units': [['table_unit', 1], ['table_unit', 0]], 'conds': [[False, 2, [0, [0, 4, False], None], [0, 1, False], None]]}, 'select': [False, [[0, [0, [0, 4, False], None]]]], 'where': [], 'groupBy': [], 'having': [], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}, None]], 'groupBy': [], 'having': [], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "network_1",
    "query": "SELECT avg(grade) FROM Highschooler WHERE id IN (SELECT T1.student_id FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id)",
    "query_toks": "['SELECT', 'avg', '(', 'grade', ')', 'FROM', 'Highschooler', 'WHERE', 'id', 'IN', '(', 'SELECT', 'T1.student_id', 'FROM', 'Friend', 'AS', 'T1', 'JOIN', 'Highschooler', 'AS', 'T2', 'ON', 'T1.student_id', '=', 'T2.id', ')']",
    "query_toks_no_value": "['select', 'avg', '(', 'grade', ')', 'from', 'highschooler', 'where', 'id', 'in', '(', 'select', 't1', '.', 'student_id', 'from', 'friend', 'as', 't1', 'join', 'highschooler', 'as', 't2', 'on', 't1', '.', 'student_id', '=', 't2', '.', 'id', ')']",
    "question": "What is the average grade of students who have friends?",
    "question_th": "นักเรียนที่มีเพื่อนได้เกรดเฉลี่ยเท่าไหร่?",
    "question_toks": "['What', 'is', 'the', 'average', 'grade', 'of', 'students', 'who', 'have', 'friends', '?']",
    "sql": "{'from': {'table_units': [['table_unit', 0]], 'conds': []}, 'select': [False, [[5, [0, [0, 3, False], None]]]], 'where': [[False, 8, [0, [0, 1, False], None], {'from': {'table_units': [['table_unit', 1], ['table_unit', 0]], 'conds': [[False, 2, [0, [0, 4, False], None], [0, 1, False], None]]}, 'select': [False, [[0, [0, [0, 4, False], None]]]], 'where': [], 'groupBy': [], 'having': [], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}, None]], 'groupBy': [], 'having': [], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "network_1",
    "query": "SELECT min(grade) FROM Highschooler WHERE id NOT IN (SELECT T1.student_id FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id)",
    "query_toks": "['SELECT', 'min', '(', 'grade', ')', 'FROM', 'Highschooler', 'WHERE', 'id', 'NOT', 'IN', '(', 'SELECT', 'T1.student_id', 'FROM', 'Friend', 'AS', 'T1', 'JOIN', 'Highschooler', 'AS', 'T2', 'ON', 'T1.student_id', '=', 'T2.id', ')']",
    "query_toks_no_value": "['select', 'min', '(', 'grade', ')', 'from', 'highschooler', 'where', 'id', 'not', 'in', '(', 'select', 't1', '.', 'student_id', 'from', 'friend', 'as', 't1', 'join', 'highschooler', 'as', 't2', 'on', 't1', '.', 'student_id', '=', 't2', '.', 'id', ')']",
    "question": "Find the minimum grade of students who have no friends.",
    "question_th": "ค้นหาเกรดขั้นต่ำของนักเรียนที่ไม่มีเพื่อน",
    "question_toks": "['Find', 'the', 'minimum', 'grade', 'of', 'students', 'who', 'have', 'no', 'friends', '.']",
    "sql": "{'from': {'table_units': [['table_unit', 0]], 'conds': []}, 'select': [False, [[2, [0, [0, 3, False], None]]]], 'where': [[True, 8, [0, [0, 1, False], None], {'from': {'table_units': [['table_unit', 1], ['table_unit', 0]], 'conds': [[False, 2, [0, [0, 4, False], None], [0, 1, False], None]]}, 'select': [False, [[0, [0, [0, 4, False], None]]]], 'where': [], 'groupBy': [], 'having': [], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}, None]], 'groupBy': [], 'having': [], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "network_1",
    "query": "SELECT min(grade) FROM Highschooler WHERE id NOT IN (SELECT T1.student_id FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id)",
    "query_toks": "['SELECT', 'min', '(', 'grade', ')', 'FROM', 'Highschooler', 'WHERE', 'id', 'NOT', 'IN', '(', 'SELECT', 'T1.student_id', 'FROM', 'Friend', 'AS', 'T1', 'JOIN', 'Highschooler', 'AS', 'T2', 'ON', 'T1.student_id', '=', 'T2.id', ')']",
    "query_toks_no_value": "['select', 'min', '(', 'grade', ')', 'from', 'highschooler', 'where', 'id', 'not', 'in', '(', 'select', 't1', '.', 'student_id', 'from', 'friend', 'as', 't1', 'join', 'highschooler', 'as', 't2', 'on', 't1', '.', 'student_id', '=', 't2', '.', 'id', ')']",
    "question": "What is the lowest grade of students who do not have any friends?",
    "question_th": "นักเรียนที่ไม่มีเพื่อนได้เกรดต่ำสุดคือเท่าไหร่?",
    "question_toks": "['What', 'is', 'the', 'lowest', 'grade', 'of', 'students', 'who', 'do', 'not', 'have', 'any', 'friends', '?']",
    "sql": "{'from': {'table_units': [['table_unit', 0]], 'conds': []}, 'select': [False, [[2, [0, [0, 3, False], None]]]], 'where': [[True, 8, [0, [0, 1, False], None], {'from': {'table_units': [['table_unit', 1], ['table_unit', 0]], 'conds': [[False, 2, [0, [0, 4, False], None], [0, 1, False], None]]}, 'select': [False, [[0, [0, [0, 4, False], None]]]], 'where': [], 'groupBy': [], 'having': [], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}, None]], 'groupBy': [], 'having': [], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "dog_kennels",
    "query": "SELECT state FROM Owners INTERSECT SELECT state FROM Professionals",
    "query_toks": "['SELECT', 'state', 'FROM', 'Owners', 'INTERSECT', 'SELECT', 'state', 'FROM', 'Professionals']",
    "query_toks_no_value": "['select', 'state', 'from', 'owners', 'intersect', 'select', 'state', 'from', 'professionals']",
    "question": "Which states have both owners and professionals living there?",
    "question_th": "รัฐใดที่มีทั้งเจ้าของและผู้เชี่ยวชาญอาศัยอยู่ที่นั่น",
    "question_toks": "['Which', 'states', 'have', 'both', 'owners', 'and', 'professionals', 'living', 'there', '?']",
    "sql": "{'from': {'table_units': [['table_unit', 4]], 'conds': []}, 'select': [False, [[0, [0, [0, 15, False], None]]]], 'where': [], 'groupBy': [], 'having': [], 'orderBy': [], 'limit': None, 'intersect': {'from': {'table_units': [['table_unit', 6]], 'conds': []}, 'select': [False, [[0, [0, [0, 38, False], None]]]], 'where': [], 'groupBy': [], 'having': [], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}, 'union': None, 'except': None}"
  },
  {
    "db_id": "dog_kennels",
    "query": "SELECT state FROM Owners INTERSECT SELECT state FROM Professionals",
    "query_toks": "['SELECT', 'state', 'FROM', 'Owners', 'INTERSECT', 'SELECT', 'state', 'FROM', 'Professionals']",
    "query_toks_no_value": "['select', 'state', 'from', 'owners', 'intersect', 'select', 'state', 'from', 'professionals']",
    "question": "Find the states where both owners and professionals live.",
    "question_th": "ค้นหารัฐที่ทั้งเจ้าของและผู้เชี่ยวชาญอาศัยอยู่",
    "question_toks": "['Find', 'the', 'states', 'where', 'both', 'owners', 'and', 'professionals', 'live', '.']",
    "sql": "{'from': {'table_units': [['table_unit', 4]], 'conds': []}, 'select': [False, [[0, [0, [0, 15, False], None]]]], 'where': [], 'groupBy': [], 'having': [], 'orderBy': [], 'limit': None, 'intersect': {'from': {'table_units': [['table_unit', 6]], 'conds': []}, 'select': [False, [[0, [0, [0, 38, False], None]]]], 'where': [], 'groupBy': [], 'having': [], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}, 'union': None, 'except': None}"
  },
  {
    "db_id": "dog_kennels",
    "query": "SELECT avg(age) FROM Dogs WHERE dog_id IN ( SELECT dog_id FROM Treatments )",
    "query_toks": "['SELECT', 'avg', '(', 'age', ')', 'FROM', 'Dogs', 'WHERE', 'dog_id', 'IN', '(', 'SELECT', 'dog_id', 'FROM', 'Treatments', ')']",
    "query_toks_no_value": "['select', 'avg', '(', 'age', ')', 'from', 'dogs', 'where', 'dog_id', 'in', '(', 'select', 'dog_id', 'from', 'treatments', ')']",
    "question": "What is the average age of the dogs who have gone through any treatments?",
    "question_th": "อายุเฉลี่ยของสุนัขที่ผ่านการรักษาใดๆ คือเท่าไร?",
    "question_toks": "['What', 'is', 'the', 'average', 'age', 'of', 'the', 'dogs', 'who', 'have', 'gone', 'through', 'any', 'treatments', '?']",
    "sql": "{'from': {'table_units': [['table_unit', 5]], 'conds': []}, 'select': [False, [[5, [0, [0, 26, False], None]]]], 'where': [[False, 8, [0, [0, 20, False], None], {'from': {'table_units': [['table_unit', 7]], 'conds': []}, 'select': [False, [[0, [0, [0, 45, False], None]]]], 'where': [], 'groupBy': [], 'having': [], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}, None]], 'groupBy': [], 'having': [], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "dog_kennels",
    "query": "SELECT avg(age) FROM Dogs WHERE dog_id IN ( SELECT dog_id FROM Treatments )",
    "query_toks": "['SELECT', 'avg', '(', 'age', ')', 'FROM', 'Dogs', 'WHERE', 'dog_id', 'IN', '(', 'SELECT', 'dog_id', 'FROM', 'Treatments', ')']",
    "query_toks_no_value": "['select', 'avg', '(', 'age', ')', 'from', 'dogs', 'where', 'dog_id', 'in', '(', 'select', 'dog_id', 'from', 'treatments', ')']",
    "question": "Find the average age of the dogs who went through treatments.",
    "question_th": "ค้นหาอายุเฉลี่ยของสุนัขที่เข้ารับการรักษา",
    "question_toks": "['Find', 'the', 'average', 'age', 'of', 'the', 'dogs', 'who', 'went', 'through', 'treatments', '.']",
    "sql": "{'from': {'table_units': [['table_unit', 5]], 'conds': []}, 'select': [False, [[5, [0, [0, 26, False], None]]]], 'where': [[False, 8, [0, [0, 20, False], None], {'from': {'table_units': [['table_unit', 7]], 'conds': []}, 'select': [False, [[0, [0, [0, 45, False], None]]]], 'where': [], 'groupBy': [], 'having': [], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}, None]], 'groupBy': [], 'having': [], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "dog_kennels",
    "query": "SELECT professional_id ,  last_name ,  cell_number FROM Professionals WHERE state  =  'Indiana' UNION SELECT T1.professional_id ,  T1.last_name ,  T1.cell_number FROM Professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id  =  T2.professional_id GROUP BY T1.professional_id HAVING count(*)  >  2",
    "query_toks": "['SELECT', 'professional_id', ',', 'last_name', ',', 'cell_number', 'FROM', 'Professionals', 'WHERE', 'state', '=', \"'Indiana\", \"'\", 'UNION', 'SELECT', 'T1.professional_id', ',', 'T1.last_name', ',', 'T1.cell_number', 'FROM', 'Professionals', 'AS', 'T1', 'JOIN', 'Treatments', 'AS', 'T2', 'ON', 'T1.professional_id', '=', 'T2.professional_id', 'GROUP', 'BY', 'T1.professional_id', 'HAVING', 'count', '(', '*', ')', '>', '2']",
    "query_toks_no_value": "['select', 'professional_id', ',', 'last_name', ',', 'cell_number', 'from', 'professionals', 'where', 'state', '=', 'value', 'union', 'select', 't1', '.', 'professional_id', ',', 't1', '.', 'last_name', ',', 't1', '.', 'cell_number', 'from', 'professionals', 'as', 't1', 'join', 'treatments', 'as', 't2', 'on', 't1', '.', 'professional_id', '=', 't2', '.', 'professional_id', 'group', 'by', 't1', '.', 'professional_id', 'having', 'count', '(', '*', ')', '>', 'value']",
    "question": "Which professionals live in the state of Indiana or have done treatment on more than 2 treatments? List his or her id, last name and cell phone.",
    "question_th": "ผู้เชี่ยวชาญคนไหนที่อาศัยอยู่ในรัฐอินเดียนาหรือเคยทำการรักษามากกว่า 2 ครั้ง? ระบุรหัส นามสกุล และโทรศัพท์มือถือของเขาหรือเธอ",
    "question_toks": "['Which', 'professionals', 'live', 'in', 'the', 'state', 'of', 'Indiana', 'or', 'have', 'done', 'treatment', 'on', 'more', 'than', '2', 'treatments', '?', 'List', 'his', 'or', 'her', 'id', ',', 'last', 'name', 'and', 'cell', 'phone', '.']",
    "sql": "{'from': {'table_units': [['table_unit', 6]], 'conds': []}, 'select': [False, [[0, [0, [0, 33, False], None]], [0, [0, [0, 40, False], None]], [0, [0, [0, 43, False], None]]]], 'where': [[False, 2, [0, [0, 38, False], None], '\"Indiana\"', None]], 'groupBy': [], 'having': [], 'orderBy': [], 'limit': None, 'intersect': None, 'union': {'from': {'table_units': [['table_unit', 6], ['table_unit', 7]], 'conds': [[False, 2, [0, [0, 33, False], None], [0, 46, False], None]]}, 'select': [False, [[0, [0, [0, 33, False], None]], [0, [0, [0, 40, False], None]], [0, [0, [0, 43, False], None]]]], 'where': [], 'groupBy': [[0, 33, False]], 'having': [[False, 3, [0, [3, 0, False], None], 2.0, None]], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}, 'except': None}"
  },
  {
    "db_id": "dog_kennels",
    "query": "SELECT professional_id ,  last_name ,  cell_number FROM Professionals WHERE state  =  'Indiana' UNION SELECT T1.professional_id ,  T1.last_name ,  T1.cell_number FROM Professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id  =  T2.professional_id GROUP BY T1.professional_id HAVING count(*)  >  2",
    "query_toks": "['SELECT', 'professional_id', ',', 'last_name', ',', 'cell_number', 'FROM', 'Professionals', 'WHERE', 'state', '=', \"'Indiana\", \"'\", 'UNION', 'SELECT', 'T1.professional_id', ',', 'T1.last_name', ',', 'T1.cell_number', 'FROM', 'Professionals', 'AS', 'T1', 'JOIN', 'Treatments', 'AS', 'T2', 'ON', 'T1.professional_id', '=', 'T2.professional_id', 'GROUP', 'BY', 'T1.professional_id', 'HAVING', 'count', '(', '*', ')', '>', '2']",
    "query_toks_no_value": "['select', 'professional_id', ',', 'last_name', ',', 'cell_number', 'from', 'professionals', 'where', 'state', '=', 'value', 'union', 'select', 't1', '.', 'professional_id', ',', 't1', '.', 'last_name', ',', 't1', '.', 'cell_number', 'from', 'professionals', 'as', 't1', 'join', 'treatments', 'as', 't2', 'on', 't1', '.', 'professional_id', '=', 't2', '.', 'professional_id', 'group', 'by', 't1', '.', 'professional_id', 'having', 'count', '(', '*', ')', '>', 'value']",
    "question": "Find the id, last name and cell phone of the professionals who live in the state of Indiana or have performed more than two treatments.",
    "question_th": "ค้นหารหัส นามสกุล และโทรศัพท์มือถือของผู้เชี่ยวชาญที่อาศัยอยู่ในรัฐอินเดียนา หรือเคยทำการรักษามากกว่าสองครั้ง",
    "question_toks": "['Find', 'the', 'id', ',', 'last', 'name', 'and', 'cell', 'phone', 'of', 'the', 'professionals', 'who', 'live', 'in', 'the', 'state', 'of', 'Indiana', 'or', 'have', 'performed', 'more', 'than', 'two', 'treatments', '.']",
    "sql": "{'from': {'table_units': [['table_unit', 6]], 'conds': []}, 'select': [False, [[0, [0, [0, 33, False], None]], [0, [0, [0, 40, False], None]], [0, [0, [0, 43, False], None]]]], 'where': [[False, 2, [0, [0, 38, False], None], '\"Indiana\"', None]], 'groupBy': [], 'having': [], 'orderBy': [], 'limit': None, 'intersect': None, 'union': {'from': {'table_units': [['table_unit', 6], ['table_unit', 7]], 'conds': [[False, 2, [0, [0, 33, False], None], [0, 46, False], None]]}, 'select': [False, [[0, [0, [0, 33, False], None]], [0, [0, [0, 40, False], None]], [0, [0, [0, 43, False], None]]]], 'where': [], 'groupBy': [[0, 33, False]], 'having': [[False, 3, [0, [3, 0, False], None], 2.0, None]], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}, 'except': None}"
  },
  {
    "db_id": "dog_kennels",
    "query": "select name from dogs where dog_id not in ( select dog_id from treatments group by dog_id having sum(cost_of_treatment)  >  1000 )",
    "query_toks": "['select', 'name', 'from', 'dogs', 'where', 'dog_id', 'not', 'in', '(', 'select', 'dog_id', 'from', 'treatments', 'group', 'by', 'dog_id', 'having', 'sum', '(', 'cost_of_treatment', ')', '>', '1000', ')']",
    "query_toks_no_value": "['select', 'name', 'from', 'dogs', 'where', 'dog_id', 'not', 'in', '(', 'select', 'dog_id', 'from', 'treatments', 'group', 'by', 'dog_id', 'having', 'sum', '(', 'cost_of_treatment', ')', '>', 'value', ')']",
    "question": "Which dogs have not cost their owner more than 1000 for treatment ? List the dog names .",
    "question_th": "สุนัขตัวไหนที่เจ้าของไม่เสียค่ารักษาเกิน 1,000 ? รายชื่อสุนัข.",
    "question_toks": "['Which', 'dogs', 'have', 'not', 'cost', 'their', 'owner', 'more', 'than', '1000', 'for', 'treatment', '?', 'List', 'the', 'dog', 'names', '.']",
    "sql": "{'from': {'table_units': [['table_unit', 5]], 'conds': []}, 'select': [False, [[0, [0, [0, 25, False], None]]]], 'where': [[True, 8, [0, [0, 20, False], None], {'from': {'table_units': [['table_unit', 7]], 'conds': []}, 'select': [False, [[0, [0, [0, 45, False], None]]]], 'where': [], 'groupBy': [[0, 45, False]], 'having': [[False, 3, [0, [4, 49, False], None], 1000.0, None]], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}, None]], 'groupBy': [], 'having': [], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "dog_kennels",
    "query": "select name from dogs where dog_id not in ( select dog_id from treatments group by dog_id having sum(cost_of_treatment)  >  1000 )",
    "query_toks": "['select', 'name', 'from', 'dogs', 'where', 'dog_id', 'not', 'in', '(', 'select', 'dog_id', 'from', 'treatments', 'group', 'by', 'dog_id', 'having', 'sum', '(', 'cost_of_treatment', ')', '>', '1000', ')']",
    "query_toks_no_value": "['select', 'name', 'from', 'dogs', 'where', 'dog_id', 'not', 'in', '(', 'select', 'dog_id', 'from', 'treatments', 'group', 'by', 'dog_id', 'having', 'sum', '(', 'cost_of_treatment', ')', '>', 'value', ')']",
    "question": "What are the names of the dogs for which the owner has not spend more than 1000 for treatment ?",
    "question_th": "สุนัขที่เจ้าของใช้เงินค่ารักษาไม่เกิน 1,000 ชื่ออะไร?",
    "question_toks": "['What', 'are', 'the', 'names', 'of', 'the', 'dogs', 'for', 'which', 'the', 'owner', 'has', 'not', 'spend', 'more', 'than', '1000', 'for', 'treatment', '?']",
    "sql": "{'from': {'table_units': [['table_unit', 5]], 'conds': []}, 'select': [False, [[0, [0, [0, 25, False], None]]]], 'where': [[True, 8, [0, [0, 20, False], None], {'from': {'table_units': [['table_unit', 7]], 'conds': []}, 'select': [False, [[0, [0, [0, 45, False], None]]]], 'where': [], 'groupBy': [[0, 45, False]], 'having': [[False, 3, [0, [4, 49, False], None], 1000.0, None]], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}, None]], 'groupBy': [], 'having': [], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "dog_kennels",
    "query": "SELECT first_name FROM Professionals UNION SELECT first_name FROM Owners EXCEPT SELECT name FROM Dogs",
    "query_toks": "['SELECT', 'first_name', 'FROM', 'Professionals', 'UNION', 'SELECT', 'first_name', 'FROM', 'Owners', 'EXCEPT', 'SELECT', 'name', 'FROM', 'Dogs']",
    "query_toks_no_value": "['select', 'first_name', 'from', 'professionals', 'union', 'select', 'first_name', 'from', 'owners', 'except', 'select', 'name', 'from', 'dogs']",
    "question": "Which first names are used for professionals or owners but are not used as dog names?",
    "question_th": "ชื่อใดที่ใช้สำหรับมืออาชีพหรือเจ้าของ แต่ไม่ได้ใช้เป็นชื่อสุนัข",
    "question_toks": "['Which', 'first', 'names', 'are', 'used', 'for', 'professionals', 'or', 'owners', 'but', 'are', 'not', 'used', 'as', 'dog', 'names', '?']",
    "sql": "{'from': {'table_units': [['table_unit', 6]], 'conds': []}, 'select': [False, [[0, [0, [0, 35, False], None]]]], 'where': [], 'groupBy': [], 'having': [], 'orderBy': [], 'limit': None, 'intersect': None, 'union': {'from': {'table_units': [['table_unit', 4]], 'conds': []}, 'select': [False, [[0, [0, [0, 11, False], None]]]], 'where': [], 'groupBy': [], 'having': [], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': {'from': {'table_units': [['table_unit', 5]], 'conds': []}, 'select': [False, [[0, [0, [0, 25, False], None]]]], 'where': [], 'groupBy': [], 'having': [], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}}, 'except': None}"
  },
  {
    "db_id": "dog_kennels",
    "query": "SELECT first_name FROM Professionals UNION SELECT first_name FROM Owners EXCEPT SELECT name FROM Dogs",
    "query_toks": "['SELECT', 'first_name', 'FROM', 'Professionals', 'UNION', 'SELECT', 'first_name', 'FROM', 'Owners', 'EXCEPT', 'SELECT', 'name', 'FROM', 'Dogs']",
    "query_toks_no_value": "['select', 'first_name', 'from', 'professionals', 'union', 'select', 'first_name', 'from', 'owners', 'except', 'select', 'name', 'from', 'dogs']",
    "question": "Find the first names that are used for professionals or owners but are not used as dog names.",
    "question_th": "ค้นหาชื่อที่ใช้สำหรับมืออาชีพหรือเจ้าของ แต่ไม่ได้ใช้เป็นชื่อสุนัข",
    "question_toks": "['Find', 'the', 'first', 'names', 'that', 'are', 'used', 'for', 'professionals', 'or', 'owners', 'but', 'are', 'not', 'used', 'as', 'dog', 'names', '.']",
    "sql": "{'from': {'table_units': [['table_unit', 6]], 'conds': []}, 'select': [False, [[0, [0, [0, 35, False], None]]]], 'where': [], 'groupBy': [], 'having': [], 'orderBy': [], 'limit': None, 'intersect': None, 'union': {'from': {'table_units': [['table_unit', 4]], 'conds': []}, 'select': [False, [[0, [0, [0, 11, False], None]]]], 'where': [], 'groupBy': [], 'having': [], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': {'from': {'table_units': [['table_unit', 5]], 'conds': []}, 'select': [False, [[0, [0, [0, 25, False], None]]]], 'where': [], 'groupBy': [], 'having': [], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}}, 'except': None}"
  },
  {
    "db_id": "dog_kennels",
    "query": "SELECT professional_id ,  role_code ,  email_address FROM Professionals EXCEPT SELECT T1.professional_id ,  T1.role_code ,  T1.email_address FROM Professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id  =  T2.professional_id",
    "query_toks": "['SELECT', 'professional_id', ',', 'role_code', ',', 'email_address', 'FROM', 'Professionals', 'EXCEPT', 'SELECT', 'T1.professional_id', ',', 'T1.role_code', ',', 'T1.email_address', 'FROM', 'Professionals', 'AS', 'T1', 'JOIN', 'Treatments', 'AS', 'T2', 'ON', 'T1.professional_id', '=', 'T2.professional_id']",
    "query_toks_no_value": "['select', 'professional_id', ',', 'role_code', ',', 'email_address', 'from', 'professionals', 'except', 'select', 't1', '.', 'professional_id', ',', 't1', '.', 'role_code', ',', 't1', '.', 'email_address', 'from', 'professionals', 'as', 't1', 'join', 'treatments', 'as', 't2', 'on', 't1', '.', 'professional_id', '=', 't2', '.', 'professional_id']",
    "question": "Which professional did not operate any treatment on dogs? List the professional's id, role and email.",
    "question_th": "มืออาชีพคนไหนที่ไม่ได้ทำการรักษาสุนัขเลย? ระบุ ID บทบาท และอีเมลของผู้เชี่ยวชาญ",
    "question_toks": "['Which', 'professional', 'did', 'not', 'operate', 'any', 'treatment', 'on', 'dogs', '?', 'List', 'the', 'professional', \"'s\", 'id', ',', 'role', 'and', 'email', '.']",
    "sql": "{'from': {'table_units': [['table_unit', 6]], 'conds': []}, 'select': [False, [[0, [0, [0, 33, False], None]], [0, [0, [0, 34, False], None]], [0, [0, [0, 41, False], None]]]], 'where': [], 'groupBy': [], 'having': [], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': {'from': {'table_units': [['table_unit', 6], ['table_unit', 7]], 'conds': [[False, 2, [0, [0, 33, False], None], [0, 46, False], None]]}, 'select': [False, [[0, [0, [0, 33, False], None]], [0, [0, [0, 34, False], None]], [0, [0, [0, 41, False], None]]]], 'where': [], 'groupBy': [], 'having': [], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}}"
  },
  {
    "db_id": "dog_kennels",
    "query": "SELECT professional_id ,  role_code ,  email_address FROM Professionals EXCEPT SELECT T1.professional_id ,  T1.role_code ,  T1.email_address FROM Professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id  =  T2.professional_id",
    "query_toks": "['SELECT', 'professional_id', ',', 'role_code', ',', 'email_address', 'FROM', 'Professionals', 'EXCEPT', 'SELECT', 'T1.professional_id', ',', 'T1.role_code', ',', 'T1.email_address', 'FROM', 'Professionals', 'AS', 'T1', 'JOIN', 'Treatments', 'AS', 'T2', 'ON', 'T1.professional_id', '=', 'T2.professional_id']",
    "query_toks_no_value": "['select', 'professional_id', ',', 'role_code', ',', 'email_address', 'from', 'professionals', 'except', 'select', 't1', '.', 'professional_id', ',', 't1', '.', 'role_code', ',', 't1', '.', 'email_address', 'from', 'professionals', 'as', 't1', 'join', 'treatments', 'as', 't2', 'on', 't1', '.', 'professional_id', '=', 't2', '.', 'professional_id']",
    "question": "Give me the id, role and email of the professionals who did not perform any treatment on dogs.",
    "question_th": "ให้รหัส บทบาท และอีเมลของผู้เชี่ยวชาญที่ไม่ได้รักษาสุนัขเลย",
    "question_toks": "['Give', 'me', 'the', 'id', ',', 'role', 'and', 'email', 'of', 'the', 'professionals', 'who', 'did', 'not', 'perform', 'any', 'treatment', 'on', 'dogs', '.']",
    "sql": "{'from': {'table_units': [['table_unit', 6]], 'conds': []}, 'select': [False, [[0, [0, [0, 33, False], None]], [0, [0, [0, 34, False], None]], [0, [0, [0, 41, False], None]]]], 'where': [], 'groupBy': [], 'having': [], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': {'from': {'table_units': [['table_unit', 6], ['table_unit', 7]], 'conds': [[False, 2, [0, [0, 33, False], None], [0, 46, False], None]]}, 'select': [False, [[0, [0, [0, 33, False], None]], [0, [0, [0, 34, False], None]], [0, [0, [0, 41, False], None]]]], 'where': [], 'groupBy': [], 'having': [], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}}"
  },
  {
    "db_id": "dog_kennels",
    "query": "SELECT T1.owner_id ,  T2.first_name ,  T2.last_name FROM Dogs AS T1 JOIN Owners AS T2 ON T1.owner_id  =  T2.owner_id GROUP BY T1.owner_id ORDER BY count(*) DESC LIMIT 1",
    "query_toks": "['SELECT', 'T1.owner_id', ',', 'T2.first_name', ',', 'T2.last_name', 'FROM', 'Dogs', 'AS', 'T1', 'JOIN', 'Owners', 'AS', 'T2', 'ON', 'T1.owner_id', '=', 'T2.owner_id', 'GROUP', 'BY', 'T1.owner_id', 'ORDER', 'BY', 'count', '(', '*', ')', 'DESC', 'LIMIT', '1']",
    "query_toks_no_value": "['select', 't1', '.', 'owner_id', ',', 't2', '.', 'first_name', ',', 't2', '.', 'last_name', 'from', 'dogs', 'as', 't1', 'join', 'owners', 'as', 't2', 'on', 't1', '.', 'owner_id', '=', 't2', '.', 'owner_id', 'group', 'by', 't1', '.', 'owner_id', 'order', 'by', 'count', '(', '*', ')', 'desc', 'limit', 'value']",
    "question": "Which owner owns the most dogs? List the owner id, first name and last name.",
    "question_th": "เจ้าของคนไหนเลี้ยงสุนัขมากที่สุด? ระบุรหัสเจ้าของ ชื่อ และนามสกุล",
    "question_toks": "['Which', 'owner', 'owns', 'the', 'most', 'dogs', '?', 'List', 'the', 'owner', 'id', ',', 'first', 'name', 'and', 'last', 'name', '.']",
    "sql": "{'from': {'table_units': [['table_unit', 5], ['table_unit', 4]], 'conds': [[False, 2, [0, [0, 21, False], None], [0, 10, False], None]]}, 'select': [False, [[0, [0, [0, 21, False], None]], [0, [0, [0, 11, False], None]], [0, [0, [0, 12, False], None]]]], 'where': [], 'groupBy': [[0, 21, False]], 'having': [], 'orderBy': ['desc', [[0, [3, 0, False], None]]], 'limit': 1, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "dog_kennels",
    "query": "SELECT T1.owner_id ,  T2.first_name ,  T2.last_name FROM Dogs AS T1 JOIN Owners AS T2 ON T1.owner_id  =  T2.owner_id GROUP BY T1.owner_id ORDER BY count(*) DESC LIMIT 1",
    "query_toks": "['SELECT', 'T1.owner_id', ',', 'T2.first_name', ',', 'T2.last_name', 'FROM', 'Dogs', 'AS', 'T1', 'JOIN', 'Owners', 'AS', 'T2', 'ON', 'T1.owner_id', '=', 'T2.owner_id', 'GROUP', 'BY', 'T1.owner_id', 'ORDER', 'BY', 'count', '(', '*', ')', 'DESC', 'LIMIT', '1']",
    "query_toks_no_value": "['select', 't1', '.', 'owner_id', ',', 't2', '.', 'first_name', ',', 't2', '.', 'last_name', 'from', 'dogs', 'as', 't1', 'join', 'owners', 'as', 't2', 'on', 't1', '.', 'owner_id', '=', 't2', '.', 'owner_id', 'group', 'by', 't1', '.', 'owner_id', 'order', 'by', 'count', '(', '*', ')', 'desc', 'limit', 'value']",
    "question": "Return the owner id, first name and last name of the owner who has the most dogs.",
    "question_th": "คืนรหัสเจ้าของ ชื่อ และนามสกุลของเจ้าของที่มีสุนัขมากที่สุด",
    "question_toks": "['Return', 'the', 'owner', 'id', ',', 'first', 'name', 'and', 'last', 'name', 'of', 'the', 'owner', 'who', 'has', 'the', 'most', 'dogs', '.']",
    "sql": "{'from': {'table_units': [['table_unit', 5], ['table_unit', 4]], 'conds': [[False, 2, [0, [0, 21, False], None], [0, 10, False], None]]}, 'select': [False, [[0, [0, [0, 21, False], None]], [0, [0, [0, 11, False], None]], [0, [0, [0, 12, False], None]]]], 'where': [], 'groupBy': [[0, 21, False]], 'having': [], 'orderBy': ['desc', [[0, [3, 0, False], None]]], 'limit': 1, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "dog_kennels",
    "query": "SELECT T1.professional_id ,  T1.role_code ,  T1.first_name FROM Professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id  =  T2.professional_id GROUP BY T1.professional_id HAVING count(*)  >=  2",
    "query_toks": "['SELECT', 'T1.professional_id', ',', 'T1.role_code', ',', 'T1.first_name', 'FROM', 'Professionals', 'AS', 'T1', 'JOIN', 'Treatments', 'AS', 'T2', 'ON', 'T1.professional_id', '=', 'T2.professional_id', 'GROUP', 'BY', 'T1.professional_id', 'HAVING', 'count', '(', '*', ')', '>', '=', '2']",
    "query_toks_no_value": "['select', 't1', '.', 'professional_id', ',', 't1', '.', 'role_code', ',', 't1', '.', 'first_name', 'from', 'professionals', 'as', 't1', 'join', 'treatments', 'as', 't2', 'on', 't1', '.', 'professional_id', '=', 't2', '.', 'professional_id', 'group', 'by', 't1', '.', 'professional_id', 'having', 'count', '(', '*', ')', '>', '=', 'value']",
    "question": "Which professionals have done at least two treatments? List the professional's id, role, and first name.",
    "question_th": "ผู้เชี่ยวชาญคนไหนเคยทำการรักษามาแล้วอย่างน้อยสองครั้ง? ระบุรหัส บทบาท และชื่อของผู้เชี่ยวชาญ",
    "question_toks": "['Which', 'professionals', 'have', 'done', 'at', 'least', 'two', 'treatments', '?', 'List', 'the', 'professional', \"'s\", 'id', ',', 'role', ',', 'and', 'first', 'name', '.']",
    "sql": "{'from': {'table_units': [['table_unit', 6], ['table_unit', 7]], 'conds': [[False, 2, [0, [0, 33, False], None], [0, 46, False], None]]}, 'select': [False, [[0, [0, [0, 33, False], None]], [0, [0, [0, 34, False], None]], [0, [0, [0, 35, False], None]]]], 'where': [], 'groupBy': [[0, 33, False]], 'having': [[False, 5, [0, [3, 0, False], None], 2.0, None]], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "dog_kennels",
    "query": "SELECT T1.professional_id ,  T1.role_code ,  T1.first_name FROM Professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id  =  T2.professional_id GROUP BY T1.professional_id HAVING count(*)  >=  2",
    "query_toks": "['SELECT', 'T1.professional_id', ',', 'T1.role_code', ',', 'T1.first_name', 'FROM', 'Professionals', 'AS', 'T1', 'JOIN', 'Treatments', 'AS', 'T2', 'ON', 'T1.professional_id', '=', 'T2.professional_id', 'GROUP', 'BY', 'T1.professional_id', 'HAVING', 'count', '(', '*', ')', '>', '=', '2']",
    "query_toks_no_value": "['select', 't1', '.', 'professional_id', ',', 't1', '.', 'role_code', ',', 't1', '.', 'first_name', 'from', 'professionals', 'as', 't1', 'join', 'treatments', 'as', 't2', 'on', 't1', '.', 'professional_id', '=', 't2', '.', 'professional_id', 'group', 'by', 't1', '.', 'professional_id', 'having', 'count', '(', '*', ')', '>', '=', 'value']",
    "question": "What are the id, role, and first name of the professionals who have performed two or more treatments?",
    "question_th": "รหัส บทบาท และชื่อของผู้เชี่ยวชาญที่ทำการรักษาตั้งแต่สองครั้งขึ้นไปมีอะไรบ้าง?",
    "question_toks": "['What', 'are', 'the', 'id', ',', 'role', ',', 'and', 'first', 'name', 'of', 'the', 'professionals', 'who', 'have', 'performed', 'two', 'or', 'more', 'treatments', '?']",
    "sql": "{'from': {'table_units': [['table_unit', 6], ['table_unit', 7]], 'conds': [[False, 2, [0, [0, 33, False], None], [0, 46, False], None]]}, 'select': [False, [[0, [0, [0, 33, False], None]], [0, [0, [0, 34, False], None]], [0, [0, [0, 35, False], None]]]], 'where': [], 'groupBy': [[0, 33, False]], 'having': [[False, 5, [0, [3, 0, False], None], 2.0, None]], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "dog_kennels",
    "query": "SELECT T1.breed_name FROM Breeds AS T1 JOIN Dogs AS T2 ON T1.breed_code  =  T2.breed_code GROUP BY T1.breed_name ORDER BY count(*) DESC LIMIT 1",
    "query_toks": "['SELECT', 'T1.breed_name', 'FROM', 'Breeds', 'AS', 'T1', 'JOIN', 'Dogs', 'AS', 'T2', 'ON', 'T1.breed_code', '=', 'T2.breed_code', 'GROUP', 'BY', 'T1.breed_name', 'ORDER', 'BY', 'count', '(', '*', ')', 'DESC', 'LIMIT', '1']",
    "query_toks_no_value": "['select', 't1', '.', 'breed_name', 'from', 'breeds', 'as', 't1', 'join', 'dogs', 'as', 't2', 'on', 't1', '.', 'breed_code', '=', 't2', '.', 'breed_code', 'group', 'by', 't1', '.', 'breed_name', 'order', 'by', 'count', '(', '*', ')', 'desc', 'limit', 'value']",
    "question": "What is the name of the breed with the most dogs?",
    "question_th": "ชื่อพันธุ์อะไรมีสุนัขมากที่สุด?",
    "question_toks": "['What', 'is', 'the', 'name', 'of', 'the', 'breed', 'with', 'the', 'most', 'dogs', '?']",
    "sql": "{'from': {'table_units': [['table_unit', 0], ['table_unit', 5]], 'conds': [[False, 2, [0, [0, 1, False], None], [0, 23, False], None]]}, 'select': [False, [[0, [0, [0, 2, False], None]]]], 'where': [], 'groupBy': [[0, 2, False]], 'having': [], 'orderBy': ['desc', [[0, [3, 0, False], None]]], 'limit': 1, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "dog_kennels",
    "query": "SELECT T1.breed_name FROM Breeds AS T1 JOIN Dogs AS T2 ON T1.breed_code  =  T2.breed_code GROUP BY T1.breed_name ORDER BY count(*) DESC LIMIT 1",
    "query_toks": "['SELECT', 'T1.breed_name', 'FROM', 'Breeds', 'AS', 'T1', 'JOIN', 'Dogs', 'AS', 'T2', 'ON', 'T1.breed_code', '=', 'T2.breed_code', 'GROUP', 'BY', 'T1.breed_name', 'ORDER', 'BY', 'count', '(', '*', ')', 'DESC', 'LIMIT', '1']",
    "query_toks_no_value": "['select', 't1', '.', 'breed_name', 'from', 'breeds', 'as', 't1', 'join', 'dogs', 'as', 't2', 'on', 't1', '.', 'breed_code', '=', 't2', '.', 'breed_code', 'group', 'by', 't1', '.', 'breed_name', 'order', 'by', 'count', '(', '*', ')', 'desc', 'limit', 'value']",
    "question": "Which breed do the most dogs have? Give me the breed name.",
    "question_th": "สุนัขพันธุ์ไหนมีมากที่สุด? แจ้งชื่อพันธุ์ครับ.",
    "question_toks": "['Which', 'breed', 'do', 'the', 'most', 'dogs', 'have', '?', 'Give', 'me', 'the', 'breed', 'name', '.']",
    "sql": "{'from': {'table_units': [['table_unit', 0], ['table_unit', 5]], 'conds': [[False, 2, [0, [0, 1, False], None], [0, 23, False], None]]}, 'select': [False, [[0, [0, [0, 2, False], None]]]], 'where': [], 'groupBy': [[0, 2, False]], 'having': [], 'orderBy': ['desc', [[0, [3, 0, False], None]]], 'limit': 1, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "dog_kennels",
    "query": "SELECT T1.owner_id ,  T1.last_name FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id JOIN Treatments AS T3 ON T2.dog_id  =  T3.dog_id GROUP BY T1.owner_id ORDER BY count(*) DESC LIMIT 1",
    "query_toks": "['SELECT', 'T1.owner_id', ',', 'T1.last_name', 'FROM', 'Owners', 'AS', 'T1', 'JOIN', 'Dogs', 'AS', 'T2', 'ON', 'T1.owner_id', '=', 'T2.owner_id', 'JOIN', 'Treatments', 'AS', 'T3', 'ON', 'T2.dog_id', '=', 'T3.dog_id', 'GROUP', 'BY', 'T1.owner_id', 'ORDER', 'BY', 'count', '(', '*', ')', 'DESC', 'LIMIT', '1']",
    "query_toks_no_value": "['select', 't1', '.', 'owner_id', ',', 't1', '.', 'last_name', 'from', 'owners', 'as', 't1', 'join', 'dogs', 'as', 't2', 'on', 't1', '.', 'owner_id', '=', 't2', '.', 'owner_id', 'join', 'treatments', 'as', 't3', 'on', 't2', '.', 'dog_id', '=', 't3', '.', 'dog_id', 'group', 'by', 't1', '.', 'owner_id', 'order', 'by', 'count', '(', '*', ')', 'desc', 'limit', 'value']",
    "question": "Which owner has paid for the most treatments on his or her dogs? List the owner id and last name.",
    "question_th": "เจ้าของคนไหนที่จ่ายค่ารักษาสุนัขของตนมากที่สุด? ระบุรหัสเจ้าของและนามสกุล",
    "question_toks": "['Which', 'owner', 'has', 'paid', 'for', 'the', 'most', 'treatments', 'on', 'his', 'or', 'her', 'dogs', '?', 'List', 'the', 'owner', 'id', 'and', 'last', 'name', '.']",
    "sql": "{'from': {'table_units': [['table_unit', 4], ['table_unit', 5], ['table_unit', 7]], 'conds': [[False, 2, [0, [0, 10, False], None], [0, 21, False], None], 'and', [False, 2, [0, [0, 20, False], None], [0, 45, False], None]]}, 'select': [False, [[0, [0, [0, 10, False], None]], [0, [0, [0, 12, False], None]]]], 'where': [], 'groupBy': [[0, 10, False]], 'having': [], 'orderBy': ['desc', [[0, [3, 0, False], None]]], 'limit': 1, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "dog_kennels",
    "query": "SELECT T1.owner_id ,  T1.last_name FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id JOIN Treatments AS T3 ON T2.dog_id  =  T3.dog_id GROUP BY T1.owner_id ORDER BY count(*) DESC LIMIT 1",
    "query_toks": "['SELECT', 'T1.owner_id', ',', 'T1.last_name', 'FROM', 'Owners', 'AS', 'T1', 'JOIN', 'Dogs', 'AS', 'T2', 'ON', 'T1.owner_id', '=', 'T2.owner_id', 'JOIN', 'Treatments', 'AS', 'T3', 'ON', 'T2.dog_id', '=', 'T3.dog_id', 'GROUP', 'BY', 'T1.owner_id', 'ORDER', 'BY', 'count', '(', '*', ')', 'DESC', 'LIMIT', '1']",
    "query_toks_no_value": "['select', 't1', '.', 'owner_id', ',', 't1', '.', 'last_name', 'from', 'owners', 'as', 't1', 'join', 'dogs', 'as', 't2', 'on', 't1', '.', 'owner_id', '=', 't2', '.', 'owner_id', 'join', 'treatments', 'as', 't3', 'on', 't2', '.', 'dog_id', '=', 't3', '.', 'dog_id', 'group', 'by', 't1', '.', 'owner_id', 'order', 'by', 'count', '(', '*', ')', 'desc', 'limit', 'value']",
    "question": "Tell me the owner id and last name of the owner who spent the most on treatments of his or her dogs.",
    "question_th": "บอกรหัสเจ้าของและนามสกุลของเจ้าของที่ใช้เงินมากที่สุดในการรักษาสุนัขของตน",
    "question_toks": "['Tell', 'me', 'the', 'owner', 'id', 'and', 'last', 'name', 'of', 'the', 'owner', 'who', 'spent', 'the', 'most', 'on', 'treatments', 'of', 'his', 'or', 'her', 'dogs', '.']",
    "sql": "{'from': {'table_units': [['table_unit', 4], ['table_unit', 5], ['table_unit', 7]], 'conds': [[False, 2, [0, [0, 10, False], None], [0, 21, False], None], 'and', [False, 2, [0, [0, 20, False], None], [0, 45, False], None]]}, 'select': [False, [[0, [0, [0, 10, False], None]], [0, [0, [0, 12, False], None]]]], 'where': [], 'groupBy': [[0, 10, False]], 'having': [], 'orderBy': ['desc', [[0, [3, 0, False], None]]], 'limit': 1, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "dog_kennels",
    "query": "SELECT T1.treatment_type_description FROM Treatment_types AS T1 JOIN Treatments AS T2 ON T1.treatment_type_code  =  T2.treatment_type_code GROUP BY T1.treatment_type_code ORDER BY sum(cost_of_treatment) ASC LIMIT 1",
    "query_toks": "['SELECT', 'T1.treatment_type_description', 'FROM', 'Treatment_types', 'AS', 'T1', 'JOIN', 'Treatments', 'AS', 'T2', 'ON', 'T1.treatment_type_code', '=', 'T2.treatment_type_code', 'GROUP', 'BY', 'T1.treatment_type_code', 'ORDER', 'BY', 'sum', '(', 'cost_of_treatment', ')', 'ASC', 'LIMIT', '1']",
    "query_toks_no_value": "['select', 't1', '.', 'treatment_type_description', 'from', 'treatment_types', 'as', 't1', 'join', 'treatments', 'as', 't2', 'on', 't1', '.', 'treatment_type_code', '=', 't2', '.', 'treatment_type_code', 'group', 'by', 't1', '.', 'treatment_type_code', 'order', 'by', 'sum', '(', 'cost_of_treatment', ')', 'asc', 'limit', 'value']",
    "question": "What is the description of the treatment type that costs the least money in total?",
    "question_th": "คำอธิบายประเภทการรักษาที่มีค่าใช้จ่ายรวมน้อยที่สุดคืออะไร?",
    "question_toks": "['What', 'is', 'the', 'description', 'of', 'the', 'treatment', 'type', 'that', 'costs', 'the', 'least', 'money', 'in', 'total', '?']",
    "sql": "{'from': {'table_units': [['table_unit', 3], ['table_unit', 7]], 'conds': [[False, 2, [0, [0, 8, False], None], [0, 47, False], None]]}, 'select': [False, [[0, [0, [0, 9, False], None]]]], 'where': [], 'groupBy': [[0, 8, False]], 'having': [], 'orderBy': ['asc', [[0, [4, 49, False], None]]], 'limit': 1, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "dog_kennels",
    "query": "SELECT T1.treatment_type_description FROM Treatment_types AS T1 JOIN Treatments AS T2 ON T1.treatment_type_code  =  T2.treatment_type_code GROUP BY T1.treatment_type_code ORDER BY sum(cost_of_treatment) ASC LIMIT 1",
    "query_toks": "['SELECT', 'T1.treatment_type_description', 'FROM', 'Treatment_types', 'AS', 'T1', 'JOIN', 'Treatments', 'AS', 'T2', 'ON', 'T1.treatment_type_code', '=', 'T2.treatment_type_code', 'GROUP', 'BY', 'T1.treatment_type_code', 'ORDER', 'BY', 'sum', '(', 'cost_of_treatment', ')', 'ASC', 'LIMIT', '1']",
    "query_toks_no_value": "['select', 't1', '.', 'treatment_type_description', 'from', 'treatment_types', 'as', 't1', 'join', 'treatments', 'as', 't2', 'on', 't1', '.', 'treatment_type_code', '=', 't2', '.', 'treatment_type_code', 'group', 'by', 't1', '.', 'treatment_type_code', 'order', 'by', 'sum', '(', 'cost_of_treatment', ')', 'asc', 'limit', 'value']",
    "question": "Give me the description of the treatment type whose total cost is the lowest.",
    "question_th": "ขอคำอธิบายประเภทการรักษาที่มีต้นทุนรวมต่ำที่สุด",
    "question_toks": "['Give', 'me', 'the', 'description', 'of', 'the', 'treatment', 'type', 'whose', 'total', 'cost', 'is', 'the', 'lowest', '.']",
    "sql": "{'from': {'table_units': [['table_unit', 3], ['table_unit', 7]], 'conds': [[False, 2, [0, [0, 8, False], None], [0, 47, False], None]]}, 'select': [False, [[0, [0, [0, 9, False], None]]]], 'where': [], 'groupBy': [[0, 8, False]], 'having': [], 'orderBy': ['asc', [[0, [4, 49, False], None]]], 'limit': 1, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "dog_kennels",
    "query": "SELECT T1.owner_id ,  T1.zip_code FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id JOIN Treatments AS T3 ON T2.dog_id  =  T3.dog_id GROUP BY T1.owner_id ORDER BY sum(T3.cost_of_treatment) DESC LIMIT 1",
    "query_toks": "['SELECT', 'T1.owner_id', ',', 'T1.zip_code', 'FROM', 'Owners', 'AS', 'T1', 'JOIN', 'Dogs', 'AS', 'T2', 'ON', 'T1.owner_id', '=', 'T2.owner_id', 'JOIN', 'Treatments', 'AS', 'T3', 'ON', 'T2.dog_id', '=', 'T3.dog_id', 'GROUP', 'BY', 'T1.owner_id', 'ORDER', 'BY', 'sum', '(', 'T3.cost_of_treatment', ')', 'DESC', 'LIMIT', '1']",
    "query_toks_no_value": "['select', 't1', '.', 'owner_id', ',', 't1', '.', 'zip_code', 'from', 'owners', 'as', 't1', 'join', 'dogs', 'as', 't2', 'on', 't1', '.', 'owner_id', '=', 't2', '.', 'owner_id', 'join', 'treatments', 'as', 't3', 'on', 't2', '.', 'dog_id', '=', 't3', '.', 'dog_id', 'group', 'by', 't1', '.', 'owner_id', 'order', 'by', 'sum', '(', 't3', '.', 'cost_of_treatment', ')', 'desc', 'limit', 'value']",
    "question": "Which owner has paid the largest amount of money in total for their dogs? Show the owner id and zip code.",
    "question_th": "เจ้าของคนไหนที่จ่ายเงินให้กับสุนัขของตนมากที่สุด? แสดงรหัสเจ้าของและรหัสไปรษณีย์",
    "question_toks": "['Which', 'owner', 'has', 'paid', 'the', 'largest', 'amount', 'of', 'money', 'in', 'total', 'for', 'their', 'dogs', '?', 'Show', 'the', 'owner', 'id', 'and', 'zip', 'code', '.']",
    "sql": "{'from': {'table_units': [['table_unit', 4], ['table_unit', 5], ['table_unit', 7]], 'conds': [[False, 2, [0, [0, 10, False], None], [0, 21, False], None], 'and', [False, 2, [0, [0, 20, False], None], [0, 45, False], None]]}, 'select': [False, [[0, [0, [0, 10, False], None]], [0, [0, [0, 16, False], None]]]], 'where': [], 'groupBy': [[0, 10, False]], 'having': [], 'orderBy': ['desc', [[0, [4, 49, False], None]]], 'limit': 1, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "dog_kennels",
    "query": "SELECT T1.owner_id ,  T1.zip_code FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id JOIN Treatments AS T3 ON T2.dog_id  =  T3.dog_id GROUP BY T1.owner_id ORDER BY sum(T3.cost_of_treatment) DESC LIMIT 1",
    "query_toks": "['SELECT', 'T1.owner_id', ',', 'T1.zip_code', 'FROM', 'Owners', 'AS', 'T1', 'JOIN', 'Dogs', 'AS', 'T2', 'ON', 'T1.owner_id', '=', 'T2.owner_id', 'JOIN', 'Treatments', 'AS', 'T3', 'ON', 'T2.dog_id', '=', 'T3.dog_id', 'GROUP', 'BY', 'T1.owner_id', 'ORDER', 'BY', 'sum', '(', 'T3.cost_of_treatment', ')', 'DESC', 'LIMIT', '1']",
    "query_toks_no_value": "['select', 't1', '.', 'owner_id', ',', 't1', '.', 'zip_code', 'from', 'owners', 'as', 't1', 'join', 'dogs', 'as', 't2', 'on', 't1', '.', 'owner_id', '=', 't2', '.', 'owner_id', 'join', 'treatments', 'as', 't3', 'on', 't2', '.', 'dog_id', '=', 't3', '.', 'dog_id', 'group', 'by', 't1', '.', 'owner_id', 'order', 'by', 'sum', '(', 't3', '.', 'cost_of_treatment', ')', 'desc', 'limit', 'value']",
    "question": "Find the owner id and zip code of the owner who spent the most money in total for his or her dogs.",
    "question_th": "ค้นหารหัสเจ้าของและรหัสไปรษณีย์ของเจ้าของที่ใช้เงินทั้งหมดเพื่อสุนัขของเขาหรือเธอมากที่สุด",
    "question_toks": "['Find', 'the', 'owner', 'id', 'and', 'zip', 'code', 'of', 'the', 'owner', 'who', 'spent', 'the', 'most', 'money', 'in', 'total', 'for', 'his', 'or', 'her', 'dogs', '.']",
    "sql": "{'from': {'table_units': [['table_unit', 4], ['table_unit', 5], ['table_unit', 7]], 'conds': [[False, 2, [0, [0, 10, False], None], [0, 21, False], None], 'and', [False, 2, [0, [0, 20, False], None], [0, 45, False], None]]}, 'select': [False, [[0, [0, [0, 10, False], None]], [0, [0, [0, 16, False], None]]]], 'where': [], 'groupBy': [[0, 10, False]], 'having': [], 'orderBy': ['desc', [[0, [4, 49, False], None]]], 'limit': 1, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "dog_kennels",
    "query": "SELECT T1.professional_id ,  T1.cell_number FROM Professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id  =  T2.professional_id GROUP BY T1.professional_id HAVING count(*)  >=  2",
    "query_toks": "['SELECT', 'T1.professional_id', ',', 'T1.cell_number', 'FROM', 'Professionals', 'AS', 'T1', 'JOIN', 'Treatments', 'AS', 'T2', 'ON', 'T1.professional_id', '=', 'T2.professional_id', 'GROUP', 'BY', 'T1.professional_id', 'HAVING', 'count', '(', '*', ')', '>', '=', '2']",
    "query_toks_no_value": "['select', 't1', '.', 'professional_id', ',', 't1', '.', 'cell_number', 'from', 'professionals', 'as', 't1', 'join', 'treatments', 'as', 't2', 'on', 't1', '.', 'professional_id', '=', 't2', '.', 'professional_id', 'group', 'by', 't1', '.', 'professional_id', 'having', 'count', '(', '*', ')', '>', '=', 'value']",
    "question": "Which professionals have done at least two types of treatments? List the professional id and cell phone.",
    "question_th": "ผู้เชี่ยวชาญคนไหนเคยทำการรักษามาแล้วอย่างน้อย 2 ประเภท? ระบุ ID มืออาชีพและโทรศัพท์มือถือ",
    "question_toks": "['Which', 'professionals', 'have', 'done', 'at', 'least', 'two', 'types', 'of', 'treatments', '?', 'List', 'the', 'professional', 'id', 'and', 'cell', 'phone', '.']",
    "sql": "{'from': {'table_units': [['table_unit', 6], ['table_unit', 7]], 'conds': [[False, 2, [0, [0, 33, False], None], [0, 46, False], None]]}, 'select': [False, [[0, [0, [0, 33, False], None]], [0, [0, [0, 43, False], None]]]], 'where': [], 'groupBy': [[0, 33, False]], 'having': [[False, 5, [0, [3, 0, False], None], 2.0, None]], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "dog_kennels",
    "query": "SELECT T1.professional_id ,  T1.cell_number FROM Professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id  =  T2.professional_id GROUP BY T1.professional_id HAVING count(*)  >=  2",
    "query_toks": "['SELECT', 'T1.professional_id', ',', 'T1.cell_number', 'FROM', 'Professionals', 'AS', 'T1', 'JOIN', 'Treatments', 'AS', 'T2', 'ON', 'T1.professional_id', '=', 'T2.professional_id', 'GROUP', 'BY', 'T1.professional_id', 'HAVING', 'count', '(', '*', ')', '>', '=', '2']",
    "query_toks_no_value": "['select', 't1', '.', 'professional_id', ',', 't1', '.', 'cell_number', 'from', 'professionals', 'as', 't1', 'join', 'treatments', 'as', 't2', 'on', 't1', '.', 'professional_id', '=', 't2', '.', 'professional_id', 'group', 'by', 't1', '.', 'professional_id', 'having', 'count', '(', '*', ')', '>', '=', 'value']",
    "question": "Find the id and cell phone of the professionals who operate two or more types of treatments.",
    "question_th": "ค้นหารหัสและโทรศัพท์มือถือของผู้เชี่ยวชาญที่ทำการรักษาตั้งแต่สองประเภทขึ้นไป",
    "question_toks": "['Find', 'the', 'id', 'and', 'cell', 'phone', 'of', 'the', 'professionals', 'who', 'operate', 'two', 'or', 'more', 'types', 'of', 'treatments', '.']",
    "sql": "{'from': {'table_units': [['table_unit', 6], ['table_unit', 7]], 'conds': [[False, 2, [0, [0, 33, False], None], [0, 46, False], None]]}, 'select': [False, [[0, [0, [0, 33, False], None]], [0, [0, [0, 43, False], None]]]], 'where': [], 'groupBy': [[0, 33, False]], 'having': [[False, 5, [0, [3, 0, False], None], 2.0, None]], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "dog_kennels",
    "query": "SELECT DISTINCT T1.first_name ,  T1.last_name FROM Professionals AS T1 JOIN Treatments AS T2 WHERE cost_of_treatment  <  ( SELECT avg(cost_of_treatment) FROM Treatments )",
    "query_toks": "['SELECT', 'DISTINCT', 'T1.first_name', ',', 'T1.last_name', 'FROM', 'Professionals', 'AS', 'T1', 'JOIN', 'Treatments', 'AS', 'T2', 'WHERE', 'cost_of_treatment', '<', '(', 'SELECT', 'avg', '(', 'cost_of_treatment', ')', 'FROM', 'Treatments', ')']",
    "query_toks_no_value": "['select', 'distinct', 't1', '.', 'first_name', ',', 't1', '.', 'last_name', 'from', 'professionals', 'as', 't1', 'join', 'treatments', 'as', 't2', 'where', 'cost_of_treatment', '<', '(', 'select', 'avg', '(', 'cost_of_treatment', ')', 'from', 'treatments', ')']",
    "question": "What are the first name and last name of the professionals who have done treatment with cost below average?",
    "question_th": "ชื่อและนามสกุลของผู้เชี่ยวชาญที่ทำการรักษาโดยมีค่าใช้จ่ายต่ำกว่าค่าเฉลี่ยคืออะไร?",
    "question_toks": "['What', 'are', 'the', 'first', 'name', 'and', 'last', 'name', 'of', 'the', 'professionals', 'who', 'have', 'done', 'treatment', 'with', 'cost', 'below', 'average', '?']",
    "sql": "{'from': {'table_units': [['table_unit', 6], ['table_unit', 7]], 'conds': []}, 'select': [True, [[0, [0, [0, 35, False], None]], [0, [0, [0, 40, False], None]]]], 'where': [[False, 4, [0, [0, 49, False], None], {'from': {'table_units': [['table_unit', 7]], 'conds': []}, 'select': [False, [[5, [0, [0, 49, False], None]]]], 'where': [], 'groupBy': [], 'having': [], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}, None]], 'groupBy': [], 'having': [], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "dog_kennels",
    "query": "SELECT DISTINCT T1.first_name ,  T1.last_name FROM Professionals AS T1 JOIN Treatments AS T2 WHERE cost_of_treatment  <  ( SELECT avg(cost_of_treatment) FROM Treatments )",
    "query_toks": "['SELECT', 'DISTINCT', 'T1.first_name', ',', 'T1.last_name', 'FROM', 'Professionals', 'AS', 'T1', 'JOIN', 'Treatments', 'AS', 'T2', 'WHERE', 'cost_of_treatment', '<', '(', 'SELECT', 'avg', '(', 'cost_of_treatment', ')', 'FROM', 'Treatments', ')']",
    "query_toks_no_value": "['select', 'distinct', 't1', '.', 'first_name', ',', 't1', '.', 'last_name', 'from', 'professionals', 'as', 't1', 'join', 'treatments', 'as', 't2', 'where', 'cost_of_treatment', '<', '(', 'select', 'avg', '(', 'cost_of_treatment', ')', 'from', 'treatments', ')']",
    "question": "Which professionals have operated a treatment that costs less than the average? Give me theor first names and last names.",
    "question_th": "ผู้เชี่ยวชาญคนไหนเคยทำการรักษาที่มีค่าใช้จ่ายน้อยกว่าค่าเฉลี่ยบ้าง? บอกชื่อและนามสกุลทางทฤษฎีให้ฉันด้วย",
    "question_toks": "['Which', 'professionals', 'have', 'operated', 'a', 'treatment', 'that', 'costs', 'less', 'than', 'the', 'average', '?', 'Give', 'me', 'theor', 'first', 'names', 'and', 'last', 'names', '.']",
    "sql": "{'from': {'table_units': [['table_unit', 6], ['table_unit', 7]], 'conds': []}, 'select': [True, [[0, [0, [0, 35, False], None]], [0, [0, [0, 40, False], None]]]], 'where': [[False, 4, [0, [0, 49, False], None], {'from': {'table_units': [['table_unit', 7]], 'conds': []}, 'select': [False, [[5, [0, [0, 49, False], None]]]], 'where': [], 'groupBy': [], 'having': [], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}, None]], 'groupBy': [], 'having': [], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "dog_kennels",
    "query": "SELECT T1.date_of_treatment ,  T2.first_name FROM Treatments AS T1 JOIN Professionals AS T2 ON T1.professional_id  =  T2.professional_id",
    "query_toks": "['SELECT', 'T1.date_of_treatment', ',', 'T2.first_name', 'FROM', 'Treatments', 'AS', 'T1', 'JOIN', 'Professionals', 'AS', 'T2', 'ON', 'T1.professional_id', '=', 'T2.professional_id']",
    "query_toks_no_value": "['select', 't1', '.', 'date_of_treatment', ',', 't2', '.', 'first_name', 'from', 'treatments', 'as', 't1', 'join', 'professionals', 'as', 't2', 'on', 't1', '.', 'professional_id', '=', 't2', '.', 'professional_id']",
    "question": "List the date of each treatment, together with the first name of the professional who operated it.",
    "question_th": "ระบุวันที่ของการรักษาแต่ละครั้ง พร้อมด้วยชื่อของผู้เชี่ยวชาญที่ดำเนินการ",
    "question_toks": "['List', 'the', 'date', 'of', 'each', 'treatment', ',', 'together', 'with', 'the', 'first', 'name', 'of', 'the', 'professional', 'who', 'operated', 'it', '.']",
    "sql": "{'from': {'table_units': [['table_unit', 7], ['table_unit', 6]], 'conds': [[False, 2, [0, [0, 46, False], None], [0, 33, False], None]]}, 'select': [False, [[0, [0, [0, 48, False], None]], [0, [0, [0, 35, False], None]]]], 'where': [], 'groupBy': [], 'having': [], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "dog_kennels",
    "query": "SELECT T1.date_of_treatment ,  T2.first_name FROM Treatments AS T1 JOIN Professionals AS T2 ON T1.professional_id  =  T2.professional_id",
    "query_toks": "['SELECT', 'T1.date_of_treatment', ',', 'T2.first_name', 'FROM', 'Treatments', 'AS', 'T1', 'JOIN', 'Professionals', 'AS', 'T2', 'ON', 'T1.professional_id', '=', 'T2.professional_id']",
    "query_toks_no_value": "['select', 't1', '.', 'date_of_treatment', ',', 't2', '.', 'first_name', 'from', 'treatments', 'as', 't1', 'join', 'professionals', 'as', 't2', 'on', 't1', '.', 'professional_id', '=', 't2', '.', 'professional_id']",
    "question": "What are the date and the operating professional's first name of each treatment?",
    "question_th": "วันที่เท่าไหร่และชื่อของแพทย์ผู้เชี่ยวชาญในการรักษาแต่ละครั้งคือเมื่อใด?",
    "question_toks": "['What', 'are', 'the', 'date', 'and', 'the', 'operating', 'professional', \"'s\", 'first', 'name', 'of', 'each', 'treatment', '?']",
    "sql": "{'from': {'table_units': [['table_unit', 7], ['table_unit', 6]], 'conds': [[False, 2, [0, [0, 46, False], None], [0, 33, False], None]]}, 'select': [False, [[0, [0, [0, 48, False], None]], [0, [0, [0, 35, False], None]]]], 'where': [], 'groupBy': [], 'having': [], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "dog_kennels",
    "query": "SELECT T1.cost_of_treatment ,  T2.treatment_type_description FROM Treatments AS T1 JOIN treatment_types AS T2 ON T1.treatment_type_code  =  T2.treatment_type_code",
    "query_toks": "['SELECT', 'T1.cost_of_treatment', ',', 'T2.treatment_type_description', 'FROM', 'Treatments', 'AS', 'T1', 'JOIN', 'treatment_types', 'AS', 'T2', 'ON', 'T1.treatment_type_code', '=', 'T2.treatment_type_code']",
    "query_toks_no_value": "['select', 't1', '.', 'cost_of_treatment', ',', 't2', '.', 'treatment_type_description', 'from', 'treatments', 'as', 't1', 'join', 'treatment_types', 'as', 't2', 'on', 't1', '.', 'treatment_type_code', '=', 't2', '.', 'treatment_type_code']",
    "question": "List the cost of each treatment and the corresponding treatment type description.",
    "question_th": "ระบุค่าใช้จ่ายของการรักษาแต่ละครั้งและคำอธิบายประเภทการรักษาที่เกี่ยวข้อง",
    "question_toks": "['List', 'the', 'cost', 'of', 'each', 'treatment', 'and', 'the', 'corresponding', 'treatment', 'type', 'description', '.']",
    "sql": "{'from': {'table_units': [['table_unit', 7], ['table_unit', 3]], 'conds': [[False, 2, [0, [0, 47, False], None], [0, 8, False], None]]}, 'select': [False, [[0, [0, [0, 49, False], None]], [0, [0, [0, 9, False], None]]]], 'where': [], 'groupBy': [], 'having': [], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "dog_kennels",
    "query": "SELECT T1.cost_of_treatment ,  T2.treatment_type_description FROM Treatments AS T1 JOIN treatment_types AS T2 ON T1.treatment_type_code  =  T2.treatment_type_code",
    "query_toks": "['SELECT', 'T1.cost_of_treatment', ',', 'T2.treatment_type_description', 'FROM', 'Treatments', 'AS', 'T1', 'JOIN', 'treatment_types', 'AS', 'T2', 'ON', 'T1.treatment_type_code', '=', 'T2.treatment_type_code']",
    "query_toks_no_value": "['select', 't1', '.', 'cost_of_treatment', ',', 't2', '.', 'treatment_type_description', 'from', 'treatments', 'as', 't1', 'join', 'treatment_types', 'as', 't2', 'on', 't1', '.', 'treatment_type_code', '=', 't2', '.', 'treatment_type_code']",
    "question": "What are the cost and treatment type description of each treatment?",
    "question_th": "ค่าใช้จ่ายและประเภทการรักษาของการรักษาแต่ละครั้งเป็นอย่างไรบ้าง?",
    "question_toks": "['What', 'are', 'the', 'cost', 'and', 'treatment', 'type', 'description', 'of', 'each', 'treatment', '?']",
    "sql": "{'from': {'table_units': [['table_unit', 7], ['table_unit', 3]], 'conds': [[False, 2, [0, [0, 47, False], None], [0, 8, False], None]]}, 'select': [False, [[0, [0, [0, 49, False], None]], [0, [0, [0, 9, False], None]]]], 'where': [], 'groupBy': [], 'having': [], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "dog_kennels",
    "query": "SELECT T1.first_name ,  T1.last_name ,  T2.size_code FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id",
    "query_toks": "['SELECT', 'T1.first_name', ',', 'T1.last_name', ',', 'T2.size_code', 'FROM', 'Owners', 'AS', 'T1', 'JOIN', 'Dogs', 'AS', 'T2', 'ON', 'T1.owner_id', '=', 'T2.owner_id']",
    "query_toks_no_value": "['select', 't1', '.', 'first_name', ',', 't1', '.', 'last_name', ',', 't2', '.', 'size_code', 'from', 'owners', 'as', 't1', 'join', 'dogs', 'as', 't2', 'on', 't1', '.', 'owner_id', '=', 't2', '.', 'owner_id']",
    "question": "List each owner's first name, last name, and the size of his for her dog.",
    "question_th": "ระบุชื่อ นามสกุล และขนาดสุนัขของเจ้าของแต่ละคน",
    "question_toks": "['List', 'each', 'owner', \"'s\", 'first', 'name', ',', 'last', 'name', ',', 'and', 'the', 'size', 'of', 'his', 'for', 'her', 'dog', '.']",
    "sql": "{'from': {'table_units': [['table_unit', 4], ['table_unit', 5]], 'conds': [[False, 2, [0, [0, 10, False], None], [0, 21, False], None]]}, 'select': [False, [[0, [0, [0, 11, False], None]], [0, [0, [0, 12, False], None]], [0, [0, [0, 24, False], None]]]], 'where': [], 'groupBy': [], 'having': [], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "dog_kennels",
    "query": "SELECT T1.first_name ,  T1.last_name ,  T2.size_code FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id",
    "query_toks": "['SELECT', 'T1.first_name', ',', 'T1.last_name', ',', 'T2.size_code', 'FROM', 'Owners', 'AS', 'T1', 'JOIN', 'Dogs', 'AS', 'T2', 'ON', 'T1.owner_id', '=', 'T2.owner_id']",
    "query_toks_no_value": "['select', 't1', '.', 'first_name', ',', 't1', '.', 'last_name', ',', 't2', '.', 'size_code', 'from', 'owners', 'as', 't1', 'join', 'dogs', 'as', 't2', 'on', 't1', '.', 'owner_id', '=', 't2', '.', 'owner_id']",
    "question": "What are each owner's first name, last name, and the size of their dog?",
    "question_th": "ชื่อ นามสกุล และขนาดของสุนัขของเจ้าของแต่ละคนคืออะไร?",
    "question_toks": "['What', 'are', 'each', 'owner', \"'s\", 'first', 'name', ',', 'last', 'name', ',', 'and', 'the', 'size', 'of', 'their', 'dog', '?']",
    "sql": "{'from': {'table_units': [['table_unit', 4], ['table_unit', 5]], 'conds': [[False, 2, [0, [0, 10, False], None], [0, 21, False], None]]}, 'select': [False, [[0, [0, [0, 11, False], None]], [0, [0, [0, 12, False], None]], [0, [0, [0, 24, False], None]]]], 'where': [], 'groupBy': [], 'having': [], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "dog_kennels",
    "query": "SELECT T1.first_name ,  T2.name FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id",
    "query_toks": "['SELECT', 'T1.first_name', ',', 'T2.name', 'FROM', 'Owners', 'AS', 'T1', 'JOIN', 'Dogs', 'AS', 'T2', 'ON', 'T1.owner_id', '=', 'T2.owner_id']",
    "query_toks_no_value": "['select', 't1', '.', 'first_name', ',', 't2', '.', 'name', 'from', 'owners', 'as', 't1', 'join', 'dogs', 'as', 't2', 'on', 't1', '.', 'owner_id', '=', 't2', '.', 'owner_id']",
    "question": "List pairs of the owner's first name and the dogs's name.",
    "question_th": "ระบุคู่ชื่อเจ้าของและชื่อสุนัข",
    "question_toks": "['List', 'pairs', 'of', 'the', 'owner', \"'s\", 'first', 'name', 'and', 'the', 'dogs', \"'s\", 'name', '.']",
    "sql": "{'from': {'table_units': [['table_unit', 4], ['table_unit', 5]], 'conds': [[False, 2, [0, [0, 10, False], None], [0, 21, False], None]]}, 'select': [False, [[0, [0, [0, 11, False], None]], [0, [0, [0, 25, False], None]]]], 'where': [], 'groupBy': [], 'having': [], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "dog_kennels",
    "query": "SELECT T1.first_name ,  T2.name FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id",
    "query_toks": "['SELECT', 'T1.first_name', ',', 'T2.name', 'FROM', 'Owners', 'AS', 'T1', 'JOIN', 'Dogs', 'AS', 'T2', 'ON', 'T1.owner_id', '=', 'T2.owner_id']",
    "query_toks_no_value": "['select', 't1', '.', 'first_name', ',', 't2', '.', 'name', 'from', 'owners', 'as', 't1', 'join', 'dogs', 'as', 't2', 'on', 't1', '.', 'owner_id', '=', 't2', '.', 'owner_id']",
    "question": "What are each owner's first name and their dogs's name?",
    "question_th": "ชื่อเจ้าของแต่ละคนและชื่อสุนัขของพวกเขาคืออะไร?",
    "question_toks": "['What', 'are', 'each', 'owner', \"'s\", 'first', 'name', 'and', 'their', 'dogs', \"'s\", 'name', '?']",
    "sql": "{'from': {'table_units': [['table_unit', 4], ['table_unit', 5]], 'conds': [[False, 2, [0, [0, 10, False], None], [0, 21, False], None]]}, 'select': [False, [[0, [0, [0, 11, False], None]], [0, [0, [0, 25, False], None]]]], 'where': [], 'groupBy': [], 'having': [], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "dog_kennels",
    "query": "SELECT T1.name ,  T2.date_of_treatment FROM Dogs AS T1 JOIN Treatments AS T2 ON T1.dog_id  =  T2.dog_id WHERE T1.breed_code  =  ( SELECT breed_code FROM Dogs GROUP BY breed_code ORDER BY count(*) ASC LIMIT 1 )",
    "query_toks": "['SELECT', 'T1.name', ',', 'T2.date_of_treatment', 'FROM', 'Dogs', 'AS', 'T1', 'JOIN', 'Treatments', 'AS', 'T2', 'ON', 'T1.dog_id', '=', 'T2.dog_id', 'WHERE', 'T1.breed_code', '=', '(', 'SELECT', 'breed_code', 'FROM', 'Dogs', 'GROUP', 'BY', 'breed_code', 'ORDER', 'BY', 'count', '(', '*', ')', 'ASC', 'LIMIT', '1', ')']",
    "query_toks_no_value": "['select', 't1', '.', 'name', ',', 't2', '.', 'date_of_treatment', 'from', 'dogs', 'as', 't1', 'join', 'treatments', 'as', 't2', 'on', 't1', '.', 'dog_id', '=', 't2', '.', 'dog_id', 'where', 't1', '.', 'breed_code', '=', '(', 'select', 'breed_code', 'from', 'dogs', 'group', 'by', 'breed_code', 'order', 'by', 'count', '(', '*', ')', 'asc', 'limit', 'value', ')']",
    "question": "List the names of the dogs of the rarest breed and the treatment dates of them.",
    "question_th": "ระบุชื่อสุนัขสายพันธุ์ที่หายากที่สุดและวันที่ได้รับการรักษา",
    "question_toks": "['List', 'the', 'names', 'of', 'the', 'dogs', 'of', 'the', 'rarest', 'breed', 'and', 'the', 'treatment', 'dates', 'of', 'them', '.']",
    "sql": "{'from': {'table_units': [['table_unit', 5], ['table_unit', 7]], 'conds': [[False, 2, [0, [0, 20, False], None], [0, 45, False], None]]}, 'select': [False, [[0, [0, [0, 25, False], None]], [0, [0, [0, 48, False], None]]]], 'where': [[False, 2, [0, [0, 23, False], None], {'from': {'table_units': [['table_unit', 5]], 'conds': []}, 'select': [False, [[0, [0, [0, 23, False], None]]]], 'where': [], 'groupBy': [[0, 23, False]], 'having': [], 'orderBy': ['asc', [[0, [3, 0, False], None]]], 'limit': 1, 'intersect': None, 'union': None, 'except': None}, None]], 'groupBy': [], 'having': [], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "dog_kennels",
    "query": "SELECT T1.name ,  T2.date_of_treatment FROM Dogs AS T1 JOIN Treatments AS T2 ON T1.dog_id  =  T2.dog_id WHERE T1.breed_code  =  ( SELECT breed_code FROM Dogs GROUP BY breed_code ORDER BY count(*) ASC LIMIT 1 )",
    "query_toks": "['SELECT', 'T1.name', ',', 'T2.date_of_treatment', 'FROM', 'Dogs', 'AS', 'T1', 'JOIN', 'Treatments', 'AS', 'T2', 'ON', 'T1.dog_id', '=', 'T2.dog_id', 'WHERE', 'T1.breed_code', '=', '(', 'SELECT', 'breed_code', 'FROM', 'Dogs', 'GROUP', 'BY', 'breed_code', 'ORDER', 'BY', 'count', '(', '*', ')', 'ASC', 'LIMIT', '1', ')']",
    "query_toks_no_value": "['select', 't1', '.', 'name', ',', 't2', '.', 'date_of_treatment', 'from', 'dogs', 'as', 't1', 'join', 'treatments', 'as', 't2', 'on', 't1', '.', 'dog_id', '=', 't2', '.', 'dog_id', 'where', 't1', '.', 'breed_code', '=', '(', 'select', 'breed_code', 'from', 'dogs', 'group', 'by', 'breed_code', 'order', 'by', 'count', '(', '*', ')', 'asc', 'limit', 'value', ')']",
    "question": "Which dogs are of the rarest breed? Show their names and treatment dates.",
    "question_th": "สุนัขตัวไหนเป็นสายพันธุ์ที่หายากที่สุด? แสดงชื่อและวันที่เข้ารับการรักษา",
    "question_toks": "['Which', 'dogs', 'are', 'of', 'the', 'rarest', 'breed', '?', 'Show', 'their', 'names', 'and', 'treatment', 'dates', '.']",
    "sql": "{'from': {'table_units': [['table_unit', 5], ['table_unit', 7]], 'conds': [[False, 2, [0, [0, 20, False], None], [0, 45, False], None]]}, 'select': [False, [[0, [0, [0, 25, False], None]], [0, [0, [0, 48, False], None]]]], 'where': [[False, 2, [0, [0, 23, False], None], {'from': {'table_units': [['table_unit', 5]], 'conds': []}, 'select': [False, [[0, [0, [0, 23, False], None]]]], 'where': [], 'groupBy': [[0, 23, False]], 'having': [], 'orderBy': ['asc', [[0, [3, 0, False], None]]], 'limit': 1, 'intersect': None, 'union': None, 'except': None}, None]], 'groupBy': [], 'having': [], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "dog_kennels",
    "query": "SELECT T1.first_name ,  T2.name FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id WHERE T1.state  =  'Virginia'",
    "query_toks": "['SELECT', 'T1.first_name', ',', 'T2.name', 'FROM', 'Owners', 'AS', 'T1', 'JOIN', 'Dogs', 'AS', 'T2', 'ON', 'T1.owner_id', '=', 'T2.owner_id', 'WHERE', 'T1.state', '=', \"'Virginia\", \"'\"]",
    "query_toks_no_value": "['select', 't1', '.', 'first_name', ',', 't2', '.', 'name', 'from', 'owners', 'as', 't1', 'join', 'dogs', 'as', 't2', 'on', 't1', '.', 'owner_id', '=', 't2', '.', 'owner_id', 'where', 't1', '.', 'state', '=', 'value']",
    "question": "Which dogs are owned by someone who lives in Virginia? List the owner's first name and the dog's name.",
    "question_th": "สุนัขตัวไหนเป็นของคนที่อาศัยอยู่ในเวอร์จิเนีย? ระบุชื่อเจ้าของและชื่อสุนัข",
    "question_toks": "['Which', 'dogs', 'are', 'owned', 'by', 'someone', 'who', 'lives', 'in', 'Virginia', '?', 'List', 'the', 'owner', \"'s\", 'first', 'name', 'and', 'the', 'dog', \"'s\", 'name', '.']",
    "sql": "{'from': {'table_units': [['table_unit', 4], ['table_unit', 5]], 'conds': [[False, 2, [0, [0, 10, False], None], [0, 21, False], None]]}, 'select': [False, [[0, [0, [0, 11, False], None]], [0, [0, [0, 25, False], None]]]], 'where': [[False, 2, [0, [0, 15, False], None], '\"Virginia\"', None]], 'groupBy': [], 'having': [], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "dog_kennels",
    "query": "SELECT T1.first_name ,  T2.name FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id WHERE T1.state  =  'Virginia'",
    "query_toks": "['SELECT', 'T1.first_name', ',', 'T2.name', 'FROM', 'Owners', 'AS', 'T1', 'JOIN', 'Dogs', 'AS', 'T2', 'ON', 'T1.owner_id', '=', 'T2.owner_id', 'WHERE', 'T1.state', '=', \"'Virginia\", \"'\"]",
    "query_toks_no_value": "['select', 't1', '.', 'first_name', ',', 't2', '.', 'name', 'from', 'owners', 'as', 't1', 'join', 'dogs', 'as', 't2', 'on', 't1', '.', 'owner_id', '=', 't2', '.', 'owner_id', 'where', 't1', '.', 'state', '=', 'value']",
    "question": "Find the first names of owners living in Virginia and the names of dogs they own.",
    "question_th": "ค้นหาชื่อเจ้าของที่อาศัยอยู่ในเวอร์จิเนียและชื่อสุนัขที่พวกเขาเป็นเจ้าของ",
    "question_toks": "['Find', 'the', 'first', 'names', 'of', 'owners', 'living', 'in', 'Virginia', 'and', 'the', 'names', 'of', 'dogs', 'they', 'own', '.']",
    "sql": "{'from': {'table_units': [['table_unit', 4], ['table_unit', 5]], 'conds': [[False, 2, [0, [0, 10, False], None], [0, 21, False], None]]}, 'select': [False, [[0, [0, [0, 11, False], None]], [0, [0, [0, 25, False], None]]]], 'where': [[False, 2, [0, [0, 15, False], None], '\"Virginia\"', None]], 'groupBy': [], 'having': [], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "dog_kennels",
    "query": "SELECT DISTINCT T1.date_arrived ,  T1.date_departed FROM Dogs AS T1 JOIN Treatments AS T2 ON T1.dog_id  =  T2.dog_id",
    "query_toks": "['SELECT', 'DISTINCT', 'T1.date_arrived', ',', 'T1.date_departed', 'FROM', 'Dogs', 'AS', 'T1', 'JOIN', 'Treatments', 'AS', 'T2', 'ON', 'T1.dog_id', '=', 'T2.dog_id']",
    "query_toks_no_value": "['select', 'distinct', 't1', '.', 'date_arrived', ',', 't1', '.', 'date_departed', 'from', 'dogs', 'as', 't1', 'join', 'treatments', 'as', 't2', 'on', 't1', '.', 'dog_id', '=', 't2', '.', 'dog_id']",
    "question": "What are the arriving date and the departing date of the dogs who have gone through a treatment?",
    "question_th": "วันที่มาถึงและวันที่ออกจากสุนัขที่เข้ารับการรักษาคือเมื่อใด",
    "question_toks": "['What', 'are', 'the', 'arriving', 'date', 'and', 'the', 'departing', 'date', 'of', 'the', 'dogs', 'who', 'have', 'gone', 'through', 'a', 'treatment', '?']",
    "sql": "{'from': {'table_units': [['table_unit', 5], ['table_unit', 7]], 'conds': [[False, 2, [0, [0, 20, False], None], [0, 45, False], None]]}, 'select': [True, [[0, [0, [0, 30, False], None]], [0, [0, [0, 32, False], None]]]], 'where': [], 'groupBy': [], 'having': [], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "dog_kennels",
    "query": "SELECT DISTINCT T1.date_arrived ,  T1.date_departed FROM Dogs AS T1 JOIN Treatments AS T2 ON T1.dog_id  =  T2.dog_id",
    "query_toks": "['SELECT', 'DISTINCT', 'T1.date_arrived', ',', 'T1.date_departed', 'FROM', 'Dogs', 'AS', 'T1', 'JOIN', 'Treatments', 'AS', 'T2', 'ON', 'T1.dog_id', '=', 'T2.dog_id']",
    "query_toks_no_value": "['select', 'distinct', 't1', '.', 'date_arrived', ',', 't1', '.', 'date_departed', 'from', 'dogs', 'as', 't1', 'join', 'treatments', 'as', 't2', 'on', 't1', '.', 'dog_id', '=', 't2', '.', 'dog_id']",
    "question": "Find the arriving date and the departing date of the dogs that received a treatment.",
    "question_th": "ค้นหาวันที่มาถึงและวันที่ออกจากสุนัขที่ได้รับการรักษา",
    "question_toks": "['Find', 'the', 'arriving', 'date', 'and', 'the', 'departing', 'date', 'of', 'the', 'dogs', 'that', 'received', 'a', 'treatment', '.']",
    "sql": "{'from': {'table_units': [['table_unit', 5], ['table_unit', 7]], 'conds': [[False, 2, [0, [0, 20, False], None], [0, 45, False], None]]}, 'select': [True, [[0, [0, [0, 30, False], None]], [0, [0, [0, 32, False], None]]]], 'where': [], 'groupBy': [], 'having': [], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "dog_kennels",
    "query": "SELECT T1.last_name FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id WHERE T2.age  =  ( SELECT max(age) FROM Dogs )",
    "query_toks": "['SELECT', 'T1.last_name', 'FROM', 'Owners', 'AS', 'T1', 'JOIN', 'Dogs', 'AS', 'T2', 'ON', 'T1.owner_id', '=', 'T2.owner_id', 'WHERE', 'T2.age', '=', '(', 'SELECT', 'max', '(', 'age', ')', 'FROM', 'Dogs', ')']",
    "query_toks_no_value": "['select', 't1', '.', 'last_name', 'from', 'owners', 'as', 't1', 'join', 'dogs', 'as', 't2', 'on', 't1', '.', 'owner_id', '=', 't2', '.', 'owner_id', 'where', 't2', '.', 'age', '=', '(', 'select', 'max', '(', 'age', ')', 'from', 'dogs', ')']",
    "question": "List the last name of the owner owning the youngest dog.",
    "question_th": "ระบุนามสกุลของเจ้าของสุนัขที่อายุน้อยที่สุด",
    "question_toks": "['List', 'the', 'last', 'name', 'of', 'the', 'owner', 'owning', 'the', 'youngest', 'dog', '.']",
    "sql": "{'from': {'table_units': [['table_unit', 4], ['table_unit', 5]], 'conds': [[False, 2, [0, [0, 10, False], None], [0, 21, False], None]]}, 'select': [False, [[0, [0, [0, 12, False], None]]]], 'where': [[False, 2, [0, [0, 26, False], None], {'from': {'table_units': [['table_unit', 5]], 'conds': []}, 'select': [False, [[1, [0, [0, 26, False], None]]]], 'where': [], 'groupBy': [], 'having': [], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}, None]], 'groupBy': [], 'having': [], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "dog_kennels",
    "query": "SELECT T1.last_name FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id WHERE T2.age  =  ( SELECT max(age) FROM Dogs )",
    "query_toks": "['SELECT', 'T1.last_name', 'FROM', 'Owners', 'AS', 'T1', 'JOIN', 'Dogs', 'AS', 'T2', 'ON', 'T1.owner_id', '=', 'T2.owner_id', 'WHERE', 'T2.age', '=', '(', 'SELECT', 'max', '(', 'age', ')', 'FROM', 'Dogs', ')']",
    "query_toks_no_value": "['select', 't1', '.', 'last_name', 'from', 'owners', 'as', 't1', 'join', 'dogs', 'as', 't2', 'on', 't1', '.', 'owner_id', '=', 't2', '.', 'owner_id', 'where', 't2', '.', 'age', '=', '(', 'select', 'max', '(', 'age', ')', 'from', 'dogs', ')']",
    "question": "Who owns the youngest dog? Give me his or her last name.",
    "question_th": "ใครเป็นเจ้าของสุนัขที่อายุน้อยที่สุด? บอกนามสกุลของเขาให้ฉันด้วย",
    "question_toks": "['Who', 'owns', 'the', 'youngest', 'dog', '?', 'Give', 'me', 'his', 'or', 'her', 'last', 'name', '.']",
    "sql": "{'from': {'table_units': [['table_unit', 4], ['table_unit', 5]], 'conds': [[False, 2, [0, [0, 10, False], None], [0, 21, False], None]]}, 'select': [False, [[0, [0, [0, 12, False], None]]]], 'where': [[False, 2, [0, [0, 26, False], None], {'from': {'table_units': [['table_unit', 5]], 'conds': []}, 'select': [False, [[1, [0, [0, 26, False], None]]]], 'where': [], 'groupBy': [], 'having': [], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}, None]], 'groupBy': [], 'having': [], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "dog_kennels",
    "query": "SELECT email_address FROM Professionals WHERE state  =  'Hawaii' OR state  =  'Wisconsin'",
    "query_toks": "['SELECT', 'email_address', 'FROM', 'Professionals', 'WHERE', 'state', '=', \"'Hawaii\", \"'\", 'OR', 'state', '=', \"'Wisconsin\", \"'\"]",
    "query_toks_no_value": "['select', 'email_address', 'from', 'professionals', 'where', 'state', '=', 'value', 'or', 'state', '=', 'value']",
    "question": "List the emails of the professionals who live in the state of Hawaii or the state of Wisconsin.",
    "question_th": "ระบุอีเมลของผู้เชี่ยวชาญที่อาศัยอยู่ในรัฐฮาวายหรือรัฐวิสคอนซิน",
    "question_toks": "['List', 'the', 'emails', 'of', 'the', 'professionals', 'who', 'live', 'in', 'the', 'state', 'of', 'Hawaii', 'or', 'the', 'state', 'of', 'Wisconsin', '.']",
    "sql": "{'from': {'table_units': [['table_unit', 6]], 'conds': []}, 'select': [False, [[0, [0, [0, 41, False], None]]]], 'where': [[False, 2, [0, [0, 38, False], None], '\"Hawaii\"', None], 'or', [False, 2, [0, [0, 38, False], None], '\"Wisconsin\"', None]], 'groupBy': [], 'having': [], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "dog_kennels",
    "query": "SELECT email_address FROM Professionals WHERE state  =  'Hawaii' OR state  =  'Wisconsin'",
    "query_toks": "['SELECT', 'email_address', 'FROM', 'Professionals', 'WHERE', 'state', '=', \"'Hawaii\", \"'\", 'OR', 'state', '=', \"'Wisconsin\", \"'\"]",
    "query_toks_no_value": "['select', 'email_address', 'from', 'professionals', 'where', 'state', '=', 'value', 'or', 'state', '=', 'value']",
    "question": "What are the emails of the professionals living in either the state of Hawaii or the state of Wisconsin?",
    "question_th": "อีเมลของผู้เชี่ยวชาญที่อาศัยอยู่ในรัฐฮาวายหรือรัฐวิสคอนซินคืออะไร",
    "question_toks": "['What', 'are', 'the', 'emails', 'of', 'the', 'professionals', 'living', 'in', 'either', 'the', 'state', 'of', 'Hawaii', 'or', 'the', 'state', 'of', 'Wisconsin', '?']",
    "sql": "{'from': {'table_units': [['table_unit', 6]], 'conds': []}, 'select': [False, [[0, [0, [0, 41, False], None]]]], 'where': [[False, 2, [0, [0, 38, False], None], '\"Hawaii\"', None], 'or', [False, 2, [0, [0, 38, False], None], '\"Wisconsin\"', None]], 'groupBy': [], 'having': [], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "dog_kennels",
    "query": "SELECT date_arrived ,  date_departed FROM Dogs",
    "query_toks": "['SELECT', 'date_arrived', ',', 'date_departed', 'FROM', 'Dogs']",
    "query_toks_no_value": "['select', 'date_arrived', ',', 'date_departed', 'from', 'dogs']",
    "question": "What are the arriving date and the departing date of all the dogs?",
    "question_th": "วันที่มาถึงและวันที่จากไปของสุนัขทุกตัวคือเมื่อใด",
    "question_toks": "['What', 'are', 'the', 'arriving', 'date', 'and', 'the', 'departing', 'date', 'of', 'all', 'the', 'dogs', '?']",
    "sql": "{'from': {'table_units': [['table_unit', 5]], 'conds': []}, 'select': [False, [[0, [0, [0, 30, False], None]], [0, [0, [0, 32, False], None]]]], 'where': [], 'groupBy': [], 'having': [], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "dog_kennels",
    "query": "SELECT date_arrived ,  date_departed FROM Dogs",
    "query_toks": "['SELECT', 'date_arrived', ',', 'date_departed', 'FROM', 'Dogs']",
    "query_toks_no_value": "['select', 'date_arrived', ',', 'date_departed', 'from', 'dogs']",
    "question": "List the arrival date and the departure date for all the dogs.",
    "question_th": "ระบุวันที่มาถึงและวันที่ออกเดินทางของสุนัขทุกตัว",
    "question_toks": "['List', 'the', 'arrival', 'date', 'and', 'the', 'departure', 'date', 'for', 'all', 'the', 'dogs', '.']",
    "sql": "{'from': {'table_units': [['table_unit', 5]], 'conds': []}, 'select': [False, [[0, [0, [0, 30, False], None]], [0, [0, [0, 32, False], None]]]], 'where': [], 'groupBy': [], 'having': [], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "dog_kennels",
    "query": "SELECT count(DISTINCT dog_id) FROM Treatments",
    "query_toks": "['SELECT', 'count', '(', 'DISTINCT', 'dog_id', ')', 'FROM', 'Treatments']",
    "query_toks_no_value": "['select', 'count', '(', 'distinct', 'dog_id', ')', 'from', 'treatments']",
    "question": "How many dogs went through any treatments?",
    "question_th": "มีสุนัขกี่ตัวที่เข้ารับการรักษา?",
    "question_toks": "['How', 'many', 'dogs', 'went', 'through', 'any', 'treatments', '?']",
    "sql": "{'from': {'table_units': [['table_unit', 7]], 'conds': []}, 'select': [False, [[3, [0, [0, 45, True], None]]]], 'where': [], 'groupBy': [], 'having': [], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "dog_kennels",
    "query": "SELECT count(DISTINCT dog_id) FROM Treatments",
    "query_toks": "['SELECT', 'count', '(', 'DISTINCT', 'dog_id', ')', 'FROM', 'Treatments']",
    "query_toks_no_value": "['select', 'count', '(', 'distinct', 'dog_id', ')', 'from', 'treatments']",
    "question": "Count the number of dogs that went through a treatment.",
    "question_th": "นับจำนวนสุนัขที่เข้ารับการรักษา",
    "question_toks": "['Count', 'the', 'number', 'of', 'dogs', 'that', 'went', 'through', 'a', 'treatment', '.']",
    "sql": "{'from': {'table_units': [['table_unit', 7]], 'conds': []}, 'select': [False, [[3, [0, [0, 45, True], None]]]], 'where': [], 'groupBy': [], 'having': [], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "dog_kennels",
    "query": "SELECT count(DISTINCT professional_id) FROM Treatments",
    "query_toks": "['SELECT', 'count', '(', 'DISTINCT', 'professional_id', ')', 'FROM', 'Treatments']",
    "query_toks_no_value": "['select', 'count', '(', 'distinct', 'professional_id', ')', 'from', 'treatments']",
    "question": "How many professionals have performed any treatment to dogs?",
    "question_th": "มีผู้เชี่ยวชาญกี่คนที่ทำการรักษาสุนัข?",
    "question_toks": "['How', 'many', 'professionals', 'have', 'performed', 'any', 'treatment', 'to', 'dogs', '?']",
    "sql": "{'from': {'table_units': [['table_unit', 7]], 'conds': []}, 'select': [False, [[3, [0, [0, 46, True], None]]]], 'where': [], 'groupBy': [], 'having': [], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "dog_kennels",
    "query": "SELECT count(DISTINCT professional_id) FROM Treatments",
    "query_toks": "['SELECT', 'count', '(', 'DISTINCT', 'professional_id', ')', 'FROM', 'Treatments']",
    "query_toks_no_value": "['select', 'count', '(', 'distinct', 'professional_id', ')', 'from', 'treatments']",
    "question": "Find the number of professionals who have ever treated dogs.",
    "question_th": "ค้นหาจำนวนมืออาชีพที่เคยเลี้ยงสุนัข",
    "question_toks": "['Find', 'the', 'number', 'of', 'professionals', 'who', 'have', 'ever', 'treated', 'dogs', '.']",
    "sql": "{'from': {'table_units': [['table_unit', 7]], 'conds': []}, 'select': [False, [[3, [0, [0, 46, True], None]]]], 'where': [], 'groupBy': [], 'having': [], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "dog_kennels",
    "query": "SELECT role_code ,  street ,  city ,  state FROM professionals WHERE city LIKE '%West%'",
    "query_toks": "['SELECT', 'role_code', ',', 'street', ',', 'city', ',', 'state', 'FROM', 'professionals', 'WHERE', 'city', 'LIKE', \"'\", '%', 'West', '%', \"'\"]",
    "query_toks_no_value": "['select', 'role_code', ',', 'street', ',', 'city', ',', 'state', 'from', 'professionals', 'where', 'city', 'like', 'value']",
    "question": "Which professionals live in a city containing the substring 'West'? List his or her role, street, city and state.",
    "question_th": "มืออาชีพคนไหนที่อาศัยอยู่ในเมืองที่มีอักษรย่อย 'ตะวันตก' ระบุบทบาท ถนน เมือง และรัฐของเขาหรือเธอ",
    "question_toks": "['Which', 'professionals', 'live', 'in', 'a', 'city', 'containing', 'the', 'substring', \"'West\", \"'\", '?', 'List', 'his', 'or', 'her', 'role', ',', 'street', ',', 'city', 'and', 'state', '.']",
    "sql": "{'from': {'table_units': [['table_unit', 6]], 'conds': []}, 'select': [False, [[0, [0, [0, 34, False], None]], [0, [0, [0, 36, False], None]], [0, [0, [0, 37, False], None]], [0, [0, [0, 38, False], None]]]], 'where': [[False, 9, [0, [0, 37, False], None], '\"%West%\"', None]], 'groupBy': [], 'having': [], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "dog_kennels",
    "query": "SELECT role_code ,  street ,  city ,  state FROM professionals WHERE city LIKE '%West%'",
    "query_toks": "['SELECT', 'role_code', ',', 'street', ',', 'city', ',', 'state', 'FROM', 'professionals', 'WHERE', 'city', 'LIKE', \"'\", '%', 'West', '%', \"'\"]",
    "query_toks_no_value": "['select', 'role_code', ',', 'street', ',', 'city', ',', 'state', 'from', 'professionals', 'where', 'city', 'like', 'value']",
    "question": "Find the role, street, city and state of the professionals living in a city that contains the substring 'West'.",
    "question_th": "ค้นหาบทบาท ถนน เมือง และสถานะของมืออาชีพที่อาศัยอยู่ในเมืองที่ประกอบด้วยสตริงย่อย 'ตะวันตก'",
    "question_toks": "['Find', 'the', 'role', ',', 'street', ',', 'city', 'and', 'state', 'of', 'the', 'professionals', 'living', 'in', 'a', 'city', 'that', 'contains', 'the', 'substring', \"'West\", \"'\", '.']",
    "sql": "{'from': {'table_units': [['table_unit', 6]], 'conds': []}, 'select': [False, [[0, [0, [0, 34, False], None]], [0, [0, [0, 36, False], None]], [0, [0, [0, 37, False], None]], [0, [0, [0, 38, False], None]]]], 'where': [[False, 9, [0, [0, 37, False], None], '\"%West%\"', None]], 'groupBy': [], 'having': [], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "dog_kennels",
    "query": "SELECT first_name ,  last_name ,  email_address FROM Owners WHERE state LIKE '%North%'",
    "query_toks": "['SELECT', 'first_name', ',', 'last_name', ',', 'email_address', 'FROM', 'Owners', 'WHERE', 'state', 'LIKE', \"'\", '%', 'North', '%', \"'\"]",
    "query_toks_no_value": "['select', 'first_name', ',', 'last_name', ',', 'email_address', 'from', 'owners', 'where', 'state', 'like', 'value']",
    "question": "Which owners live in the state whose name contains the substring 'North'? List his first name, last name and email.",
    "question_th": "เจ้าของรายใดอาศัยอยู่ในรัฐที่ชื่อมีสตริงย่อย 'ภาคเหนือ'? ระบุชื่อ นามสกุล และอีเมลของเขา",
    "question_toks": "['Which', 'owners', 'live', 'in', 'the', 'state', 'whose', 'name', 'contains', 'the', 'substring', \"'North\", \"'\", '?', 'List', 'his', 'first', 'name', ',', 'last', 'name', 'and', 'email', '.']",
    "sql": "{'from': {'table_units': [['table_unit', 4]], 'conds': []}, 'select': [False, [[0, [0, [0, 11, False], None]], [0, [0, [0, 12, False], None]], [0, [0, [0, 17, False], None]]]], 'where': [[False, 9, [0, [0, 15, False], None], '\"%North%\"', None]], 'groupBy': [], 'having': [], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "dog_kennels",
    "query": "SELECT first_name ,  last_name ,  email_address FROM Owners WHERE state LIKE '%North%'",
    "query_toks": "['SELECT', 'first_name', ',', 'last_name', ',', 'email_address', 'FROM', 'Owners', 'WHERE', 'state', 'LIKE', \"'\", '%', 'North', '%', \"'\"]",
    "query_toks_no_value": "['select', 'first_name', ',', 'last_name', ',', 'email_address', 'from', 'owners', 'where', 'state', 'like', 'value']",
    "question": "Return the first name, last name and email of the owners living in a state whose name contains the substring 'North'.",
    "question_th": "ส่งกลับชื่อ นามสกุล และอีเมลของเจ้าของที่อาศัยอยู่ในรัฐที่ชื่อมีสตริงย่อย 'ภาคเหนือ'",
    "question_toks": "['Return', 'the', 'first', 'name', ',', 'last', 'name', 'and', 'email', 'of', 'the', 'owners', 'living', 'in', 'a', 'state', 'whose', 'name', 'contains', 'the', 'substring', \"'North\", \"'\", '.']",
    "sql": "{'from': {'table_units': [['table_unit', 4]], 'conds': []}, 'select': [False, [[0, [0, [0, 11, False], None]], [0, [0, [0, 12, False], None]], [0, [0, [0, 17, False], None]]]], 'where': [[False, 9, [0, [0, 15, False], None], '\"%North%\"', None]], 'groupBy': [], 'having': [], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "dog_kennels",
    "query": "SELECT count(*) FROM Dogs WHERE age  <  ( SELECT avg(age) FROM Dogs )",
    "query_toks": "['SELECT', 'count', '(', '*', ')', 'FROM', 'Dogs', 'WHERE', 'age', '<', '(', 'SELECT', 'avg', '(', 'age', ')', 'FROM', 'Dogs', ')']",
    "query_toks_no_value": "['select', 'count', '(', '*', ')', 'from', 'dogs', 'where', 'age', '<', '(', 'select', 'avg', '(', 'age', ')', 'from', 'dogs', ')']",
    "question": "How many dogs have an age below the average?",
    "question_th": "มีสุนัขกี่ตัวที่มีอายุต่ำกว่าค่าเฉลี่ย?",
    "question_toks": "['How', 'many', 'dogs', 'have', 'an', 'age', 'below', 'the', 'average', '?']",
    "sql": "{'from': {'table_units': [['table_unit', 5]], 'conds': []}, 'select': [False, [[3, [0, [0, 0, False], None]]]], 'where': [[False, 4, [0, [0, 26, False], None], {'from': {'table_units': [['table_unit', 5]], 'conds': []}, 'select': [False, [[5, [0, [0, 26, False], None]]]], 'where': [], 'groupBy': [], 'having': [], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}, None]], 'groupBy': [], 'having': [], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "dog_kennels",
    "query": "SELECT count(*) FROM Dogs WHERE age  <  ( SELECT avg(age) FROM Dogs )",
    "query_toks": "['SELECT', 'count', '(', '*', ')', 'FROM', 'Dogs', 'WHERE', 'age', '<', '(', 'SELECT', 'avg', '(', 'age', ')', 'FROM', 'Dogs', ')']",
    "query_toks_no_value": "['select', 'count', '(', '*', ')', 'from', 'dogs', 'where', 'age', '<', '(', 'select', 'avg', '(', 'age', ')', 'from', 'dogs', ')']",
    "question": "Count the number of dogs of an age below the average.",
    "question_th": "นับจำนวนสุนัขในช่วงอายุที่ต่ำกว่าค่าเฉลี่ย",
    "question_toks": "['Count', 'the', 'number', 'of', 'dogs', 'of', 'an', 'age', 'below', 'the', 'average', '.']",
    "sql": "{'from': {'table_units': [['table_unit', 5]], 'conds': []}, 'select': [False, [[3, [0, [0, 0, False], None]]]], 'where': [[False, 4, [0, [0, 26, False], None], {'from': {'table_units': [['table_unit', 5]], 'conds': []}, 'select': [False, [[5, [0, [0, 26, False], None]]]], 'where': [], 'groupBy': [], 'having': [], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}, None]], 'groupBy': [], 'having': [], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "dog_kennels",
    "query": "SELECT cost_of_treatment FROM Treatments ORDER BY date_of_treatment DESC LIMIT 1",
    "query_toks": "['SELECT', 'cost_of_treatment', 'FROM', 'Treatments', 'ORDER', 'BY', 'date_of_treatment', 'DESC', 'LIMIT', '1']",
    "query_toks_no_value": "['select', 'cost_of_treatment', 'from', 'treatments', 'order', 'by', 'date_of_treatment', 'desc', 'limit', 'value']",
    "question": "How much does the most recent treatment cost?",
    "question_th": "ค่ารักษาล่าสุดเท่าไหร่?",
    "question_toks": "['How', 'much', 'does', 'the', 'most', 'recent', 'treatment', 'cost', '?']",
    "sql": "{'from': {'table_units': [['table_unit', 7]], 'conds': []}, 'select': [False, [[0, [0, [0, 49, False], None]]]], 'where': [], 'groupBy': [], 'having': [], 'orderBy': ['desc', [[0, [0, 48, False], None]]], 'limit': 1, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "dog_kennels",
    "query": "SELECT cost_of_treatment FROM Treatments ORDER BY date_of_treatment DESC LIMIT 1",
    "query_toks": "['SELECT', 'cost_of_treatment', 'FROM', 'Treatments', 'ORDER', 'BY', 'date_of_treatment', 'DESC', 'LIMIT', '1']",
    "query_toks_no_value": "['select', 'cost_of_treatment', 'from', 'treatments', 'order', 'by', 'date_of_treatment', 'desc', 'limit', 'value']",
    "question": "Show me the cost of the most recently performed treatment.",
    "question_th": "แสดงค่าใช้จ่ายของการรักษาที่ทำล่าสุดให้ฉันดู",
    "question_toks": "['Show', 'me', 'the', 'cost', 'of', 'the', 'most', 'recently', 'performed', 'treatment', '.']",
    "sql": "{'from': {'table_units': [['table_unit', 7]], 'conds': []}, 'select': [False, [[0, [0, [0, 49, False], None]]]], 'where': [], 'groupBy': [], 'having': [], 'orderBy': ['desc', [[0, [0, 48, False], None]]], 'limit': 1, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "dog_kennels",
    "query": "SELECT count(*) FROM Dogs WHERE dog_id NOT IN ( SELECT dog_id FROM Treatments )",
    "query_toks": "['SELECT', 'count', '(', '*', ')', 'FROM', 'Dogs', 'WHERE', 'dog_id', 'NOT', 'IN', '(', 'SELECT', 'dog_id', 'FROM', 'Treatments', ')']",
    "query_toks_no_value": "['select', 'count', '(', '*', ')', 'from', 'dogs', 'where', 'dog_id', 'not', 'in', '(', 'select', 'dog_id', 'from', 'treatments', ')']",
    "question": "How many dogs have not gone through any treatment?",
    "question_th": "มีสุนัขกี่ตัวที่ไม่ได้รับการรักษาเลย?",
    "question_toks": "['How', 'many', 'dogs', 'have', 'not', 'gone', 'through', 'any', 'treatment', '?']",
    "sql": "{'from': {'table_units': [['table_unit', 5]], 'conds': []}, 'select': [False, [[3, [0, [0, 0, False], None]]]], 'where': [[True, 8, [0, [0, 20, False], None], {'from': {'table_units': [['table_unit', 7]], 'conds': []}, 'select': [False, [[0, [0, [0, 45, False], None]]]], 'where': [], 'groupBy': [], 'having': [], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}, None]], 'groupBy': [], 'having': [], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "dog_kennels",
    "query": "select count(*) from dogs where dog_id not in ( select dog_id from treatments )",
    "query_toks": "['select', 'count', '(', '*', ')', 'from', 'dogs', 'where', 'dog_id', 'not', 'in', '(', 'select', 'dog_id', 'from', 'treatments', ')']",
    "query_toks_no_value": "['select', 'count', '(', '*', ')', 'from', 'dogs', 'where', 'dog_id', 'not', 'in', '(', 'select', 'dog_id', 'from', 'treatments', ')']",
    "question": "Tell me the number of dogs that have not received any treatment .",
    "question_th": "แจ้งจำนวนสุนัขที่ไม่ได้รับการรักษาใดๆ",
    "question_toks": "['Tell', 'me', 'the', 'number', 'of', 'dogs', 'that', 'have', 'not', 'received', 'any', 'treatment', '.']",
    "sql": "{'from': {'table_units': [['table_unit', 5]], 'conds': []}, 'select': [False, [[3, [0, [0, 0, False], None]]]], 'where': [[True, 8, [0, [0, 20, False], None], {'from': {'table_units': [['table_unit', 7]], 'conds': []}, 'select': [False, [[0, [0, [0, 45, False], None]]]], 'where': [], 'groupBy': [], 'having': [], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}, None]], 'groupBy': [], 'having': [], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "dog_kennels",
    "query": "SELECT count(*) FROM Owners WHERE owner_id NOT IN ( SELECT owner_id FROM Dogs )",
    "query_toks": "['SELECT', 'count', '(', '*', ')', 'FROM', 'Owners', 'WHERE', 'owner_id', 'NOT', 'IN', '(', 'SELECT', 'owner_id', 'FROM', 'Dogs', ')']",
    "query_toks_no_value": "['select', 'count', '(', '*', ')', 'from', 'owners', 'where', 'owner_id', 'not', 'in', '(', 'select', 'owner_id', 'from', 'dogs', ')']",
    "question": "How many owners temporarily do not have any dogs?",
    "question_th": "มีเจ้าของกี่คนที่ไม่มีสุนัขชั่วคราว?",
    "question_toks": "['How', 'many', 'owners', 'temporarily', 'do', 'not', 'have', 'any', 'dogs', '?']",
    "sql": "{'from': {'table_units': [['table_unit', 4]], 'conds': []}, 'select': [False, [[3, [0, [0, 0, False], None]]]], 'where': [[True, 8, [0, [0, 10, False], None], {'from': {'table_units': [['table_unit', 5]], 'conds': []}, 'select': [False, [[0, [0, [0, 21, False], None]]]], 'where': [], 'groupBy': [], 'having': [], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}, None]], 'groupBy': [], 'having': [], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "dog_kennels",
    "query": "SELECT count(*) FROM Owners WHERE owner_id NOT IN ( SELECT owner_id FROM Dogs )",
    "query_toks": "['SELECT', 'count', '(', '*', ')', 'FROM', 'Owners', 'WHERE', 'owner_id', 'NOT', 'IN', '(', 'SELECT', 'owner_id', 'FROM', 'Dogs', ')']",
    "query_toks_no_value": "['select', 'count', '(', '*', ')', 'from', 'owners', 'where', 'owner_id', 'not', 'in', '(', 'select', 'owner_id', 'from', 'dogs', ')']",
    "question": "Find the number of owners who do not own any dogs at this moment.",
    "question_th": "ค้นหาจำนวนเจ้าของที่ไม่มีสุนัขอยู่ในขณะนี้",
    "question_toks": "['Find', 'the', 'number', 'of', 'owners', 'who', 'do', 'not', 'own', 'any', 'dogs', 'at', 'this', 'moment', '.']",
    "sql": "{'from': {'table_units': [['table_unit', 4]], 'conds': []}, 'select': [False, [[3, [0, [0, 0, False], None]]]], 'where': [[True, 8, [0, [0, 10, False], None], {'from': {'table_units': [['table_unit', 5]], 'conds': []}, 'select': [False, [[0, [0, [0, 21, False], None]]]], 'where': [], 'groupBy': [], 'having': [], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}, None]], 'groupBy': [], 'having': [], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "dog_kennels",
    "query": "SELECT count(*) FROM Professionals WHERE professional_id NOT IN ( SELECT professional_id FROM Treatments )",
    "query_toks": "['SELECT', 'count', '(', '*', ')', 'FROM', 'Professionals', 'WHERE', 'professional_id', 'NOT', 'IN', '(', 'SELECT', 'professional_id', 'FROM', 'Treatments', ')']",
    "query_toks_no_value": "['select', 'count', '(', '*', ')', 'from', 'professionals', 'where', 'professional_id', 'not', 'in', '(', 'select', 'professional_id', 'from', 'treatments', ')']",
    "question": "How many professionals did not operate any treatment on dogs?",
    "question_th": "มีผู้เชี่ยวชาญกี่คนที่ไม่ได้ทำการรักษาสุนัขเลย?",
    "question_toks": "['How', 'many', 'professionals', 'did', 'not', 'operate', 'any', 'treatment', 'on', 'dogs', '?']",
    "sql": "{'from': {'table_units': [['table_unit', 6]], 'conds': []}, 'select': [False, [[3, [0, [0, 0, False], None]]]], 'where': [[True, 8, [0, [0, 33, False], None], {'from': {'table_units': [['table_unit', 7]], 'conds': []}, 'select': [False, [[0, [0, [0, 46, False], None]]]], 'where': [], 'groupBy': [], 'having': [], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}, None]], 'groupBy': [], 'having': [], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "dog_kennels",
    "query": "SELECT count(*) FROM Professionals WHERE professional_id NOT IN ( SELECT professional_id FROM Treatments )",
    "query_toks": "['SELECT', 'count', '(', '*', ')', 'FROM', 'Professionals', 'WHERE', 'professional_id', 'NOT', 'IN', '(', 'SELECT', 'professional_id', 'FROM', 'Treatments', ')']",
    "query_toks_no_value": "['select', 'count', '(', '*', ')', 'from', 'professionals', 'where', 'professional_id', 'not', 'in', '(', 'select', 'professional_id', 'from', 'treatments', ')']",
    "question": "Find the number of professionals who have not treated any dogs.",
    "question_th": "ค้นหาจำนวนผู้เชี่ยวชาญที่ไม่เคยเลี้ยงสุนัขเลย",
    "question_toks": "['Find', 'the', 'number', 'of', 'professionals', 'who', 'have', 'not', 'treated', 'any', 'dogs', '.']",
    "sql": "{'from': {'table_units': [['table_unit', 6]], 'conds': []}, 'select': [False, [[3, [0, [0, 0, False], None]]]], 'where': [[True, 8, [0, [0, 33, False], None], {'from': {'table_units': [['table_unit', 7]], 'conds': []}, 'select': [False, [[0, [0, [0, 46, False], None]]]], 'where': [], 'groupBy': [], 'having': [], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}, None]], 'groupBy': [], 'having': [], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "dog_kennels",
    "query": "SELECT name ,  age ,  weight FROM Dogs WHERE abandoned_yn  =  1",
    "query_toks": "['SELECT', 'name', ',', 'age', ',', 'weight', 'FROM', 'Dogs', 'WHERE', 'abandoned_yn', '=', '1']",
    "query_toks_no_value": "['select', 'name', ',', 'age', ',', 'weight', 'from', 'dogs', 'where', 'abandoned_yn', '=', 'value']",
    "question": "List the dog name, age and weight of the dogs who have been abandoned? 1 stands for yes, and 0 stands for no.",
    "question_th": "ระบุชื่อสุนัข อายุ และน้ำหนักของสุนัขที่ถูกทิ้ง? 1 ย่อมาจากใช่ และ 0 ย่อมาจากไม่ใช่",
    "question_toks": "['List', 'the', 'dog', 'name', ',', 'age', 'and', 'weight', 'of', 'the', 'dogs', 'who', 'have', 'been', 'abandoned', '?', '1', 'stands', 'for', 'yes', ',', 'and', '0', 'stands', 'for', 'no', '.']",
    "sql": "{'from': {'table_units': [['table_unit', 5]], 'conds': []}, 'select': [False, [[0, [0, [0, 25, False], None]], [0, [0, [0, 26, False], None]], [0, [0, [0, 29, False], None]]]], 'where': [[False, 2, [0, [0, 22, False], None], 1.0, None]], 'groupBy': [], 'having': [], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "dog_kennels",
    "query": "SELECT name ,  age ,  weight FROM Dogs WHERE abandoned_yn  =  1",
    "query_toks": "['SELECT', 'name', ',', 'age', ',', 'weight', 'FROM', 'Dogs', 'WHERE', 'abandoned_yn', '=', '1']",
    "query_toks_no_value": "['select', 'name', ',', 'age', ',', 'weight', 'from', 'dogs', 'where', 'abandoned_yn', '=', 'value']",
    "question": "What are the dog name, age and weight of the dogs that were abandoned? Note that 1 stands for yes, and 0 stands for no in the tables.",
    "question_th": "สุนัขที่ถูกทิ้งชื่ออะไร อายุ และน้ำหนักเท่าไหร่? โปรดทราบว่า 1 ย่อมาจากใช่ และ 0 ย่อมาจากไม่ใช่ในตาราง",
    "question_toks": "['What', 'are', 'the', 'dog', 'name', ',', 'age', 'and', 'weight', 'of', 'the', 'dogs', 'that', 'were', 'abandoned', '?', 'Note', 'that', '1', 'stands', 'for', 'yes', ',', 'and', '0', 'stands', 'for', 'no', 'in', 'the', 'tables', '.']",
    "sql": "{'from': {'table_units': [['table_unit', 5]], 'conds': []}, 'select': [False, [[0, [0, [0, 25, False], None]], [0, [0, [0, 26, False], None]], [0, [0, [0, 29, False], None]]]], 'where': [[False, 2, [0, [0, 22, False], None], 1.0, None]], 'groupBy': [], 'having': [], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "dog_kennels",
    "query": "SELECT avg(age) FROM Dogs",
    "query_toks": "['SELECT', 'avg', '(', 'age', ')', 'FROM', 'Dogs']",
    "query_toks_no_value": "['select', 'avg', '(', 'age', ')', 'from', 'dogs']",
    "question": "What is the average age of all the dogs?",
    "question_th": "อายุเฉลี่ยของสุนัขทุกตัวคือเท่าไร?",
    "question_toks": "['What', 'is', 'the', 'average', 'age', 'of', 'all', 'the', 'dogs', '?']",
    "sql": "{'from': {'table_units': [['table_unit', 5]], 'conds': []}, 'select': [False, [[5, [0, [0, 26, False], None]]]], 'where': [], 'groupBy': [], 'having': [], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "dog_kennels",
    "query": "SELECT avg(age) FROM Dogs",
    "query_toks": "['SELECT', 'avg', '(', 'age', ')', 'FROM', 'Dogs']",
    "query_toks_no_value": "['select', 'avg', '(', 'age', ')', 'from', 'dogs']",
    "question": "Compute the average age of all the dogs.",
    "question_th": "คำนวณอายุเฉลี่ยของสุนัขทุกตัว",
    "question_toks": "['Compute', 'the', 'average', 'age', 'of', 'all', 'the', 'dogs', '.']",
    "sql": "{'from': {'table_units': [['table_unit', 5]], 'conds': []}, 'select': [False, [[5, [0, [0, 26, False], None]]]], 'where': [], 'groupBy': [], 'having': [], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "dog_kennels",
    "query": "SELECT max(age) FROM Dogs",
    "query_toks": "['SELECT', 'max', '(', 'age', ')', 'FROM', 'Dogs']",
    "query_toks_no_value": "['select', 'max', '(', 'age', ')', 'from', 'dogs']",
    "question": "What is the age of the oldest dog?",
    "question_th": "สุนัขที่เก่าแก่ที่สุดอายุเท่าไหร่?",
    "question_toks": "['What', 'is', 'the', 'age', 'of', 'the', 'oldest', 'dog', '?']",
    "sql": "{'from': {'table_units': [['table_unit', 5]], 'conds': []}, 'select': [False, [[1, [0, [0, 26, False], None]]]], 'where': [], 'groupBy': [], 'having': [], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "dog_kennels",
    "query": "SELECT max(age) FROM Dogs",
    "query_toks": "['SELECT', 'max', '(', 'age', ')', 'FROM', 'Dogs']",
    "query_toks_no_value": "['select', 'max', '(', 'age', ')', 'from', 'dogs']",
    "question": "Tell me the age of the oldest dog.",
    "question_th": "บอกอายุของสุนัขที่เก่าแก่ที่สุด",
    "question_toks": "['Tell', 'me', 'the', 'age', 'of', 'the', 'oldest', 'dog', '.']",
    "sql": "{'from': {'table_units': [['table_unit', 5]], 'conds': []}, 'select': [False, [[1, [0, [0, 26, False], None]]]], 'where': [], 'groupBy': [], 'having': [], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "dog_kennels",
    "query": "SELECT charge_type ,  charge_amount FROM Charges",
    "query_toks": "['SELECT', 'charge_type', ',', 'charge_amount', 'FROM', 'Charges']",
    "query_toks_no_value": "['select', 'charge_type', ',', 'charge_amount', 'from', 'charges']",
    "question": "How much does each charge type costs? List both charge type and amount.",
    "question_th": "ค่าบริการแต่ละประเภทมีค่าใช้จ่ายเท่าไร? ระบุทั้งประเภทการเรียกเก็บเงินและจำนวนเงิน",
    "question_toks": "['How', 'much', 'does', 'each', 'charge', 'type', 'costs', '?', 'List', 'both', 'charge', 'type', 'and', 'amount', '.']",
    "sql": "{'from': {'table_units': [['table_unit', 1]], 'conds': []}, 'select': [False, [[0, [0, [0, 4, False], None]], [0, [0, [0, 5, False], None]]]], 'where': [], 'groupBy': [], 'having': [], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "dog_kennels",
    "query": "SELECT charge_type ,  charge_amount FROM Charges",
    "query_toks": "['SELECT', 'charge_type', ',', 'charge_amount', 'FROM', 'Charges']",
    "query_toks_no_value": "['select', 'charge_type', ',', 'charge_amount', 'from', 'charges']",
    "question": "List each charge type and its amount.",
    "question_th": "ระบุค่าธรรมเนียมแต่ละประเภทและจำนวนเงิน",
    "question_toks": "['List', 'each', 'charge', 'type', 'and', 'its', 'amount', '.']",
    "sql": "{'from': {'table_units': [['table_unit', 1]], 'conds': []}, 'select': [False, [[0, [0, [0, 4, False], None]], [0, [0, [0, 5, False], None]]]], 'where': [], 'groupBy': [], 'having': [], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "dog_kennels",
    "query": "SELECT max(charge_amount) FROM Charges",
    "query_toks": "['SELECT', 'max', '(', 'charge_amount', ')', 'FROM', 'Charges']",
    "query_toks_no_value": "['select', 'max', '(', 'charge_amount', ')', 'from', 'charges']",
    "question": "How much does the most expensive charge type costs?",
    "question_th": "ประเภทการเรียกเก็บเงินที่แพงที่สุดมีค่าใช้จ่ายเท่าไร?",
    "question_toks": "['How', 'much', 'does', 'the', 'most', 'expensive', 'charge', 'type', 'costs', '?']",
    "sql": "{'from': {'table_units': [['table_unit', 1]], 'conds': []}, 'select': [False, [[1, [0, [0, 5, False], None]]]], 'where': [], 'groupBy': [], 'having': [], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "dog_kennels",
    "query": "SELECT max(charge_amount) FROM Charges",
    "query_toks": "['SELECT', 'max', '(', 'charge_amount', ')', 'FROM', 'Charges']",
    "query_toks_no_value": "['select', 'max', '(', 'charge_amount', ')', 'from', 'charges']",
    "question": "What is the charge amount of the most expensive charge type?",
    "question_th": "จำนวนเงินค่าธรรมเนียมของประเภทค่าธรรมเนียมที่แพงที่สุดคือเท่าไร?",
    "question_toks": "['What', 'is', 'the', 'charge', 'amount', 'of', 'the', 'most', 'expensive', 'charge', 'type', '?']",
    "sql": "{'from': {'table_units': [['table_unit', 1]], 'conds': []}, 'select': [False, [[1, [0, [0, 5, False], None]]]], 'where': [], 'groupBy': [], 'having': [], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "dog_kennels",
    "query": "SELECT email_address ,  cell_number ,  home_phone FROM professionals",
    "query_toks": "['SELECT', 'email_address', ',', 'cell_number', ',', 'home_phone', 'FROM', 'professionals']",
    "query_toks_no_value": "['select', 'email_address', ',', 'cell_number', ',', 'home_phone', 'from', 'professionals']",
    "question": "List the email, cell phone and home phone of all the professionals.",
    "question_th": "ระบุอีเมล โทรศัพท์มือถือ และโทรศัพท์บ้านของมืออาชีพทั้งหมด",
    "question_toks": "['List', 'the', 'email', ',', 'cell', 'phone', 'and', 'home', 'phone', 'of', 'all', 'the', 'professionals', '.']",
    "sql": "{'from': {'table_units': [['table_unit', 6]], 'conds': []}, 'select': [False, [[0, [0, [0, 41, False], None]], [0, [0, [0, 43, False], None]], [0, [0, [0, 42, False], None]]]], 'where': [], 'groupBy': [], 'having': [], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "dog_kennels",
    "query": "SELECT email_address ,  cell_number ,  home_phone FROM professionals",
    "query_toks": "['SELECT', 'email_address', ',', 'cell_number', ',', 'home_phone', 'FROM', 'professionals']",
    "query_toks_no_value": "['select', 'email_address', ',', 'cell_number', ',', 'home_phone', 'from', 'professionals']",
    "question": "What are the email, cell phone and home phone of each professional?",
    "question_th": "อีเมล โทรศัพท์มือถือ และโทรศัพท์บ้านของมืออาชีพแต่ละรายคืออะไร?",
    "question_toks": "['What', 'are', 'the', 'email', ',', 'cell', 'phone', 'and', 'home', 'phone', 'of', 'each', 'professional', '?']",
    "sql": "{'from': {'table_units': [['table_unit', 6]], 'conds': []}, 'select': [False, [[0, [0, [0, 41, False], None]], [0, [0, [0, 43, False], None]], [0, [0, [0, 42, False], None]]]], 'where': [], 'groupBy': [], 'having': [], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "dog_kennels",
    "query": "SELECT DISTINCT breed_code ,  size_code FROM dogs",
    "query_toks": "['SELECT', 'DISTINCT', 'breed_code', ',', 'size_code', 'FROM', 'dogs']",
    "query_toks_no_value": "['select', 'distinct', 'breed_code', ',', 'size_code', 'from', 'dogs']",
    "question": "What are all the possible breed type and size type combinations?",
    "question_th": "การผสมพันธุ์ประเภทและขนาดที่เป็นไปได้ทั้งหมดคืออะไร?",
    "question_toks": "['What', 'are', 'all', 'the', 'possible', 'breed', 'type', 'and', 'size', 'type', 'combinations', '?']",
    "sql": "{'from': {'table_units': [['table_unit', 5]], 'conds': []}, 'select': [True, [[0, [0, [0, 23, False], None]], [0, [0, [0, 24, False], None]]]], 'where': [], 'groupBy': [], 'having': [], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "dog_kennels",
    "query": "SELECT DISTINCT breed_code ,  size_code FROM dogs",
    "query_toks": "['SELECT', 'DISTINCT', 'breed_code', ',', 'size_code', 'FROM', 'dogs']",
    "query_toks_no_value": "['select', 'distinct', 'breed_code', ',', 'size_code', 'from', 'dogs']",
    "question": "Find the distinct breed type and size type combinations for dogs.",
    "question_th": "ค้นหาการผสมพันธุ์ประเภทและขนาดที่แตกต่างกันสำหรับสุนัข",
    "question_toks": "['Find', 'the', 'distinct', 'breed', 'type', 'and', 'size', 'type', 'combinations', 'for', 'dogs', '.']",
    "sql": "{'from': {'table_units': [['table_unit', 5]], 'conds': []}, 'select': [True, [[0, [0, [0, 23, False], None]], [0, [0, [0, 24, False], None]]]], 'where': [], 'groupBy': [], 'having': [], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "dog_kennels",
    "query": "SELECT DISTINCT T1.first_name ,  T3.treatment_type_description FROM professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id  =  T2.professional_id JOIN Treatment_types AS T3 ON T2.treatment_type_code  =  T3.treatment_type_code",
    "query_toks": "['SELECT', 'DISTINCT', 'T1.first_name', ',', 'T3.treatment_type_description', 'FROM', 'professionals', 'AS', 'T1', 'JOIN', 'Treatments', 'AS', 'T2', 'ON', 'T1.professional_id', '=', 'T2.professional_id', 'JOIN', 'Treatment_types', 'AS', 'T3', 'ON', 'T2.treatment_type_code', '=', 'T3.treatment_type_code']",
    "query_toks_no_value": "['select', 'distinct', 't1', '.', 'first_name', ',', 't3', '.', 'treatment_type_description', 'from', 'professionals', 'as', 't1', 'join', 'treatments', 'as', 't2', 'on', 't1', '.', 'professional_id', '=', 't2', '.', 'professional_id', 'join', 'treatment_types', 'as', 't3', 'on', 't2', '.', 'treatment_type_code', '=', 't3', '.', 'treatment_type_code']",
    "question": "List the first name of all the professionals along with the description of the treatment they have done.",
    "question_th": "ระบุชื่อผู้เชี่ยวชาญทั้งหมดพร้อมกับคำอธิบายการรักษาที่พวกเขาทำ",
    "question_toks": "['List', 'the', 'first', 'name', 'of', 'all', 'the', 'professionals', 'along', 'with', 'the', 'description', 'of', 'the', 'treatment', 'they', 'have', 'done', '.']",
    "sql": "{'from': {'table_units': [['table_unit', 6], ['table_unit', 7], ['table_unit', 3]], 'conds': [[False, 2, [0, [0, 33, False], None], [0, 46, False], None], 'and', [False, 2, [0, [0, 47, False], None], [0, 8, False], None]]}, 'select': [True, [[0, [0, [0, 35, False], None]], [0, [0, [0, 9, False], None]]]], 'where': [], 'groupBy': [], 'having': [], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "dog_kennels",
    "query": "SELECT DISTINCT T1.first_name ,  T3.treatment_type_description FROM professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id  =  T2.professional_id JOIN Treatment_types AS T3 ON T2.treatment_type_code  =  T3.treatment_type_code",
    "query_toks": "['SELECT', 'DISTINCT', 'T1.first_name', ',', 'T3.treatment_type_description', 'FROM', 'professionals', 'AS', 'T1', 'JOIN', 'Treatments', 'AS', 'T2', 'ON', 'T1.professional_id', '=', 'T2.professional_id', 'JOIN', 'Treatment_types', 'AS', 'T3', 'ON', 'T2.treatment_type_code', '=', 'T3.treatment_type_code']",
    "query_toks_no_value": "['select', 'distinct', 't1', '.', 'first_name', ',', 't3', '.', 'treatment_type_description', 'from', 'professionals', 'as', 't1', 'join', 'treatments', 'as', 't2', 'on', 't1', '.', 'professional_id', '=', 't2', '.', 'professional_id', 'join', 'treatment_types', 'as', 't3', 'on', 't2', '.', 'treatment_type_code', '=', 't3', '.', 'treatment_type_code']",
    "question": "What are each professional's first name and description of the treatment they have performed?",
    "question_th": "ชื่อและคำอธิบายของผู้เชี่ยวชาญแต่ละคนเกี่ยวกับการรักษาที่พวกเขาทำคืออะไร?",
    "question_toks": "['What', 'are', 'each', 'professional', \"'s\", 'first', 'name', 'and', 'description', 'of', 'the', 'treatment', 'they', 'have', 'performed', '?']",
    "sql": "{'from': {'table_units': [['table_unit', 6], ['table_unit', 7], ['table_unit', 3]], 'conds': [[False, 2, [0, [0, 33, False], None], [0, 46, False], None], 'and', [False, 2, [0, [0, 47, False], None], [0, 8, False], None]]}, 'select': [True, [[0, [0, [0, 35, False], None]], [0, [0, [0, 9, False], None]]]], 'where': [], 'groupBy': [], 'having': [], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "singer",
    "query": "SELECT count(*) FROM singer",
    "query_toks": "['SELECT', 'count', '(', '*', ')', 'FROM', 'singer']",
    "query_toks_no_value": "['select', 'count', '(', '*', ')', 'from', 'singer']",
    "question": "How many singers are there?",
    "question_th": "มีนักร้องกี่คน?",
    "question_toks": "['How', 'many', 'singers', 'are', 'there', '?']",
    "sql": "{'from': {'table_units': [['table_unit', 0]], 'conds': []}, 'select': [False, [[3, [0, [0, 0, False], None]]]], 'where': [], 'groupBy': [], 'having': [], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "singer",
    "query": "SELECT count(*) FROM singer",
    "query_toks": "['SELECT', 'count', '(', '*', ')', 'FROM', 'singer']",
    "query_toks_no_value": "['select', 'count', '(', '*', ')', 'from', 'singer']",
    "question": "What is the count of singers?",
    "question_th": "นักร้องมีจำนวนเท่าไร?",
    "question_toks": "['What', 'is', 'the', 'count', 'of', 'singers', '?']",
    "sql": "{'from': {'table_units': [['table_unit', 0]], 'conds': []}, 'select': [False, [[3, [0, [0, 0, False], None]]]], 'where': [], 'groupBy': [], 'having': [], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "singer",
    "query": "SELECT Name FROM singer ORDER BY Net_Worth_Millions ASC",
    "query_toks": "['SELECT', 'Name', 'FROM', 'singer', 'ORDER', 'BY', 'Net_Worth_Millions', 'ASC']",
    "query_toks_no_value": "['select', 'name', 'from', 'singer', 'order', 'by', 'net_worth_millions', 'asc']",
    "question": "List the name of singers in ascending order of net worth.",
    "question_th": "รายชื่อนักร้องเรียงตามมูลค่าสุทธิจากน้อยไปมาก",
    "question_toks": "['List', 'the', 'name', 'of', 'singers', 'in', 'ascending', 'order', 'of', 'net', 'worth', '.']",
    "sql": "{'from': {'table_units': [['table_unit', 0]], 'conds': []}, 'select': [False, [[0, [0, [0, 2, False], None]]]], 'where': [], 'groupBy': [], 'having': [], 'orderBy': ['asc', [[0, [0, 4, False], None]]], 'limit': None, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "singer",
    "query": "SELECT Name FROM singer ORDER BY Net_Worth_Millions ASC",
    "query_toks": "['SELECT', 'Name', 'FROM', 'singer', 'ORDER', 'BY', 'Net_Worth_Millions', 'ASC']",
    "query_toks_no_value": "['select', 'name', 'from', 'singer', 'order', 'by', 'net_worth_millions', 'asc']",
    "question": "What are the names of singers ordered by ascending net worth?",
    "question_th": "นักร้องชื่ออะไรเรียงลำดับตามมูลค่าสุทธิจากน้อยไปหามาก?",
    "question_toks": "['What', 'are', 'the', 'names', 'of', 'singers', 'ordered', 'by', 'ascending', 'net', 'worth', '?']",
    "sql": "{'from': {'table_units': [['table_unit', 0]], 'conds': []}, 'select': [False, [[0, [0, [0, 2, False], None]]]], 'where': [], 'groupBy': [], 'having': [], 'orderBy': ['asc', [[0, [0, 4, False], None]]], 'limit': None, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "singer",
    "query": "SELECT Birth_Year ,  Citizenship FROM singer",
    "query_toks": "['SELECT', 'Birth_Year', ',', 'Citizenship', 'FROM', 'singer']",
    "query_toks_no_value": "['select', 'birth_year', ',', 'citizenship', 'from', 'singer']",
    "question": "What are the birth year and citizenship of singers?",
    "question_th": "นักร้องเกิดปีอะไรและสัญชาติอะไร",
    "question_toks": "['What', 'are', 'the', 'birth', 'year', 'and', 'citizenship', 'of', 'singers', '?']",
    "sql": "{'from': {'table_units': [['table_unit', 0]], 'conds': []}, 'select': [False, [[0, [0, [0, 3, False], None]], [0, [0, [0, 5, False], None]]]], 'where': [], 'groupBy': [], 'having': [], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "singer",
    "query": "SELECT Birth_Year ,  Citizenship FROM singer",
    "query_toks": "['SELECT', 'Birth_Year', ',', 'Citizenship', 'FROM', 'singer']",
    "query_toks_no_value": "['select', 'birth_year', ',', 'citizenship', 'from', 'singer']",
    "question": "What are the birth years and citizenships of the singers?",
    "question_th": "นักร้องเกิดปีอะไรและสัญชาติอะไร",
    "question_toks": "['What', 'are', 'the', 'birth', 'years', 'and', 'citizenships', 'of', 'the', 'singers', '?']",
    "sql": "{'from': {'table_units': [['table_unit', 0]], 'conds': []}, 'select': [False, [[0, [0, [0, 3, False], None]], [0, [0, [0, 5, False], None]]]], 'where': [], 'groupBy': [], 'having': [], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "singer",
    "query": "SELECT Name FROM singer WHERE Citizenship != \"France\"",
    "query_toks": "['SELECT', 'Name', 'FROM', 'singer', 'WHERE', 'Citizenship', '!', '=', '``', 'France', \"''\"]",
    "query_toks_no_value": "['select', 'name', 'from', 'singer', 'where', 'citizenship', '!', '=', 'value']",
    "question": "List the name of singers whose citizenship is not \"France\".",
    "question_th": "รายชื่อนักร้องที่ไม่มีสัญชาติ \"ฝรั่งเศส\"",
    "question_toks": "['List', 'the', 'name', 'of', 'singers', 'whose', 'citizenship', 'is', 'not', '``', 'France', \"''\", '.']",
    "sql": "{'from': {'table_units': [['table_unit', 0]], 'conds': []}, 'select': [False, [[0, [0, [0, 2, False], None]]]], 'where': [[False, 7, [0, [0, 5, False], None], '\"France\"', None]], 'groupBy': [], 'having': [], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "singer",
    "query": "SELECT Name FROM singer WHERE Citizenship != \"France\"",
    "query_toks": "['SELECT', 'Name', 'FROM', 'singer', 'WHERE', 'Citizenship', '!', '=', '``', 'France', \"''\"]",
    "query_toks_no_value": "['select', 'name', 'from', 'singer', 'where', 'citizenship', '!', '=', 'value']",
    "question": "What are the names of the singers who are not French citizens?",
    "question_th": "นักร้องที่ไม่ใช่ชาวฝรั่งเศสชื่ออะไร?",
    "question_toks": "['What', 'are', 'the', 'names', 'of', 'the', 'singers', 'who', 'are', 'not', 'French', 'citizens', '?']",
    "sql": "{'from': {'table_units': [['table_unit', 0]], 'conds': []}, 'select': [False, [[0, [0, [0, 2, False], None]]]], 'where': [[False, 7, [0, [0, 5, False], None], '\"France\"', None]], 'groupBy': [], 'having': [], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "singer",
    "query": "SELECT Name FROM singer WHERE Birth_Year  =  1948 OR Birth_Year  =  1949",
    "query_toks": "['SELECT', 'Name', 'FROM', 'singer', 'WHERE', 'Birth_Year', '=', '1948', 'OR', 'Birth_Year', '=', '1949']",
    "query_toks_no_value": "['select', 'name', 'from', 'singer', 'where', 'birth_year', '=', 'value', 'or', 'birth_year', '=', 'value']",
    "question": "Show the name of singers whose birth year is either 1948 or 1949?",
    "question_th": "แสดงชื่อนักร้องที่มีปีเกิดคือ พ.ศ. 2491 หรือ พ.ศ. 2492?",
    "question_toks": "['Show', 'the', 'name', 'of', 'singers', 'whose', 'birth', 'year', 'is', 'either', '1948', 'or', '1949', '?']",
    "sql": "{'from': {'table_units': [['table_unit', 0]], 'conds': []}, 'select': [False, [[0, [0, [0, 2, False], None]]]], 'where': [[False, 2, [0, [0, 3, False], None], 1948.0, None], 'or', [False, 2, [0, [0, 3, False], None], 1949.0, None]], 'groupBy': [], 'having': [], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "singer",
    "query": "SELECT Name FROM singer WHERE Birth_Year  =  1948 OR Birth_Year  =  1949",
    "query_toks": "['SELECT', 'Name', 'FROM', 'singer', 'WHERE', 'Birth_Year', '=', '1948', 'OR', 'Birth_Year', '=', '1949']",
    "query_toks_no_value": "['select', 'name', 'from', 'singer', 'where', 'birth_year', '=', 'value', 'or', 'birth_year', '=', 'value']",
    "question": "What are the names of the singers whose birth years are either 1948 or 1949?",
    "question_th": "นักร้องที่มีปีเกิดคือ พ.ศ. 2491 หรือ พ.ศ. 2492 ชื่ออะไร",
    "question_toks": "['What', 'are', 'the', 'names', 'of', 'the', 'singers', 'whose', 'birth', 'years', 'are', 'either', '1948', 'or', '1949', '?']",
    "sql": "{'from': {'table_units': [['table_unit', 0]], 'conds': []}, 'select': [False, [[0, [0, [0, 2, False], None]]]], 'where': [[False, 2, [0, [0, 3, False], None], 1948.0, None], 'or', [False, 2, [0, [0, 3, False], None], 1949.0, None]], 'groupBy': [], 'having': [], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "singer",
    "query": "SELECT Name FROM singer ORDER BY Net_Worth_Millions DESC LIMIT 1",
    "query_toks": "['SELECT', 'Name', 'FROM', 'singer', 'ORDER', 'BY', 'Net_Worth_Millions', 'DESC', 'LIMIT', '1']",
    "query_toks_no_value": "['select', 'name', 'from', 'singer', 'order', 'by', 'net_worth_millions', 'desc', 'limit', 'value']",
    "question": "What is the name of the singer with the largest net worth?",
    "question_th": "นักร้องที่มีมูลค่าสุทธิมากที่สุดชื่ออะไร?",
    "question_toks": "['What', 'is', 'the', 'name', 'of', 'the', 'singer', 'with', 'the', 'largest', 'net', 'worth', '?']",
    "sql": "{'from': {'table_units': [['table_unit', 0]], 'conds': []}, 'select': [False, [[0, [0, [0, 2, False], None]]]], 'where': [], 'groupBy': [], 'having': [], 'orderBy': ['desc', [[0, [0, 4, False], None]]], 'limit': 1, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "singer",
    "query": "SELECT Name FROM singer ORDER BY Net_Worth_Millions DESC LIMIT 1",
    "query_toks": "['SELECT', 'Name', 'FROM', 'singer', 'ORDER', 'BY', 'Net_Worth_Millions', 'DESC', 'LIMIT', '1']",
    "query_toks_no_value": "['select', 'name', 'from', 'singer', 'order', 'by', 'net_worth_millions', 'desc', 'limit', 'value']",
    "question": "What is the name of the singer who is worth the most?",
    "question_th": "นักร้องคนไหนที่คุ้มค่าที่สุดชื่ออะไร?",
    "question_toks": "['What', 'is', 'the', 'name', 'of', 'the', 'singer', 'who', 'is', 'worth', 'the', 'most', '?']",
    "sql": "{'from': {'table_units': [['table_unit', 0]], 'conds': []}, 'select': [False, [[0, [0, [0, 2, False], None]]]], 'where': [], 'groupBy': [], 'having': [], 'orderBy': ['desc', [[0, [0, 4, False], None]]], 'limit': 1, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "singer",
    "query": "SELECT Citizenship ,  COUNT(*) FROM singer GROUP BY Citizenship",
    "query_toks": "['SELECT', 'Citizenship', ',', 'COUNT', '(', '*', ')', 'FROM', 'singer', 'GROUP', 'BY', 'Citizenship']",
    "query_toks_no_value": "['select', 'citizenship', ',', 'count', '(', '*', ')', 'from', 'singer', 'group', 'by', 'citizenship']",
    "question": "Show different citizenship of singers and the number of singers of each citizenship.",
    "question_th": "แสดงสัญชาติของนักร้องที่แตกต่างกันและจำนวนนักร้องของแต่ละสัญชาติ",
    "question_toks": "['Show', 'different', 'citizenship', 'of', 'singers', 'and', 'the', 'number', 'of', 'singers', 'of', 'each', 'citizenship', '.']",
    "sql": "{'from': {'table_units': [['table_unit', 0]], 'conds': []}, 'select': [False, [[0, [0, [0, 5, False], None]], [3, [0, [0, 0, False], None]]]], 'where': [], 'groupBy': [[0, 5, False]], 'having': [], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "singer",
    "query": "SELECT Citizenship ,  COUNT(*) FROM singer GROUP BY Citizenship",
    "query_toks": "['SELECT', 'Citizenship', ',', 'COUNT', '(', '*', ')', 'FROM', 'singer', 'GROUP', 'BY', 'Citizenship']",
    "query_toks_no_value": "['select', 'citizenship', ',', 'count', '(', '*', ')', 'from', 'singer', 'group', 'by', 'citizenship']",
    "question": "For each citizenship, how many singers are from that country?",
    "question_th": "ในแต่ละสัญชาติ มีนักร้องจากประเทศนั้นกี่คน?",
    "question_toks": "['For', 'each', 'citizenship', ',', 'how', 'many', 'singers', 'are', 'from', 'that', 'country', '?']",
    "sql": "{'from': {'table_units': [['table_unit', 0]], 'conds': []}, 'select': [False, [[0, [0, [0, 5, False], None]], [3, [0, [0, 0, False], None]]]], 'where': [], 'groupBy': [[0, 5, False]], 'having': [], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "singer",
    "query": "SELECT Citizenship FROM singer GROUP BY Citizenship ORDER BY COUNT(*) DESC LIMIT 1",
    "query_toks": "['SELECT', 'Citizenship', 'FROM', 'singer', 'GROUP', 'BY', 'Citizenship', 'ORDER', 'BY', 'COUNT', '(', '*', ')', 'DESC', 'LIMIT', '1']",
    "query_toks_no_value": "['select', 'citizenship', 'from', 'singer', 'group', 'by', 'citizenship', 'order', 'by', 'count', '(', '*', ')', 'desc', 'limit', 'value']",
    "question": "Please show the most common citizenship of singers.",
    "question_th": "กรุณาแสดงสัญชาติของนักร้องที่พบบ่อยที่สุด",
    "question_toks": "['Please', 'show', 'the', 'most', 'common', 'citizenship', 'of', 'singers', '.']",
    "sql": "{'from': {'table_units': [['table_unit', 0]], 'conds': []}, 'select': [False, [[0, [0, [0, 5, False], None]]]], 'where': [], 'groupBy': [[0, 5, False]], 'having': [], 'orderBy': ['desc', [[0, [3, 0, False], None]]], 'limit': 1, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "singer",
    "query": "select citizenship from singer group by citizenship order by count(*) desc limit 1",
    "query_toks": "['select', 'citizenship', 'from', 'singer', 'group', 'by', 'citizenship', 'order', 'by', 'count', '(', '*', ')', 'desc', 'limit', '1']",
    "query_toks_no_value": "['select', 'citizenship', 'from', 'singer', 'group', 'by', 'citizenship', 'order', 'by', 'count', '(', '*', ')', 'desc', 'limit', 'value']",
    "question": "What is the most common singer citizenship ?",
    "question_th": "สัญชาตินักร้องที่พบบ่อยที่สุดคืออะไร?",
    "question_toks": "['What', 'is', 'the', 'most', 'common', 'singer', 'citizenship', '?']",
    "sql": "{'from': {'table_units': [['table_unit', 0]], 'conds': []}, 'select': [False, [[0, [0, [0, 5, False], None]]]], 'where': [], 'groupBy': [[0, 5, False]], 'having': [], 'orderBy': ['desc', [[0, [3, 0, False], None]]], 'limit': 1, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "singer",
    "query": "SELECT Citizenship ,  max(Net_Worth_Millions) FROM singer GROUP BY Citizenship",
    "query_toks": "['SELECT', 'Citizenship', ',', 'max', '(', 'Net_Worth_Millions', ')', 'FROM', 'singer', 'GROUP', 'BY', 'Citizenship']",
    "query_toks_no_value": "['select', 'citizenship', ',', 'max', '(', 'net_worth_millions', ')', 'from', 'singer', 'group', 'by', 'citizenship']",
    "question": "Show different citizenships and the maximum net worth of singers of each citizenship.",
    "question_th": "แสดงสัญชาติที่แตกต่างกันและมูลค่าสุทธิสูงสุดของนักร้องในแต่ละสัญชาติ",
    "question_toks": "['Show', 'different', 'citizenships', 'and', 'the', 'maximum', 'net', 'worth', 'of', 'singers', 'of', 'each', 'citizenship', '.']",
    "sql": "{'from': {'table_units': [['table_unit', 0]], 'conds': []}, 'select': [False, [[0, [0, [0, 5, False], None]], [1, [0, [0, 4, False], None]]]], 'where': [], 'groupBy': [[0, 5, False]], 'having': [], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "singer",
    "query": "SELECT Citizenship ,  max(Net_Worth_Millions) FROM singer GROUP BY Citizenship",
    "query_toks": "['SELECT', 'Citizenship', ',', 'max', '(', 'Net_Worth_Millions', ')', 'FROM', 'singer', 'GROUP', 'BY', 'Citizenship']",
    "query_toks_no_value": "['select', 'citizenship', ',', 'max', '(', 'net_worth_millions', ')', 'from', 'singer', 'group', 'by', 'citizenship']",
    "question": "For each citizenship, what is the maximum net worth?",
    "question_th": "สำหรับแต่ละสัญชาติ มูลค่าสุทธิสูงสุดคือเท่าใด?",
    "question_toks": "['For', 'each', 'citizenship', ',', 'what', 'is', 'the', 'maximum', 'net', 'worth', '?']",
    "sql": "{'from': {'table_units': [['table_unit', 0]], 'conds': []}, 'select': [False, [[0, [0, [0, 5, False], None]], [1, [0, [0, 4, False], None]]]], 'where': [], 'groupBy': [[0, 5, False]], 'having': [], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "singer",
    "query": "SELECT T2.Title ,  T1.Name FROM singer AS T1 JOIN song AS T2 ON T1.Singer_ID  =  T2.Singer_ID",
    "query_toks": "['SELECT', 'T2.Title', ',', 'T1.Name', 'FROM', 'singer', 'AS', 'T1', 'JOIN', 'song', 'AS', 'T2', 'ON', 'T1.Singer_ID', '=', 'T2.Singer_ID']",
    "query_toks_no_value": "['select', 't2', '.', 'title', ',', 't1', '.', 'name', 'from', 'singer', 'as', 't1', 'join', 'song', 'as', 't2', 'on', 't1', '.', 'singer_id', '=', 't2', '.', 'singer_id']",
    "question": "Show titles of songs and names of singers.",
    "question_th": "แสดงชื่อเพลงและชื่อนักร้อง",
    "question_toks": "['Show', 'titles', 'of', 'songs', 'and', 'names', 'of', 'singers', '.']",
    "sql": "{'from': {'table_units': [['table_unit', 0], ['table_unit', 1]], 'conds': [[False, 2, [0, [0, 1, False], None], [0, 8, False], None]]}, 'select': [False, [[0, [0, [0, 7, False], None]], [0, [0, [0, 2, False], None]]]], 'where': [], 'groupBy': [], 'having': [], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "singer",
    "query": "SELECT T2.Title ,  T1.Name FROM singer AS T1 JOIN song AS T2 ON T1.Singer_ID  =  T2.Singer_ID",
    "query_toks": "['SELECT', 'T2.Title', ',', 'T1.Name', 'FROM', 'singer', 'AS', 'T1', 'JOIN', 'song', 'AS', 'T2', 'ON', 'T1.Singer_ID', '=', 'T2.Singer_ID']",
    "query_toks_no_value": "['select', 't2', '.', 'title', ',', 't1', '.', 'name', 'from', 'singer', 'as', 't1', 'join', 'song', 'as', 't2', 'on', 't1', '.', 'singer_id', '=', 't2', '.', 'singer_id']",
    "question": "What are the song titles and singer names?",
    "question_th": "ชื่อเพลงและชื่อนักร้องคืออะไร?",
    "question_toks": "['What', 'are', 'the', 'song', 'titles', 'and', 'singer', 'names', '?']",
    "sql": "{'from': {'table_units': [['table_unit', 0], ['table_unit', 1]], 'conds': [[False, 2, [0, [0, 1, False], None], [0, 8, False], None]]}, 'select': [False, [[0, [0, [0, 7, False], None]], [0, [0, [0, 2, False], None]]]], 'where': [], 'groupBy': [], 'having': [], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "singer",
    "query": "SELECT DISTINCT T1.Name FROM singer AS T1 JOIN song AS T2 ON T1.Singer_ID  =  T2.Singer_ID WHERE T2.Sales  >  300000",
    "query_toks": "['SELECT', 'DISTINCT', 'T1.Name', 'FROM', 'singer', 'AS', 'T1', 'JOIN', 'song', 'AS', 'T2', 'ON', 'T1.Singer_ID', '=', 'T2.Singer_ID', 'WHERE', 'T2.Sales', '>', '300000']",
    "query_toks_no_value": "['select', 'distinct', 't1', '.', 'name', 'from', 'singer', 'as', 't1', 'join', 'song', 'as', 't2', 'on', 't1', '.', 'singer_id', '=', 't2', '.', 'singer_id', 'where', 't2', '.', 'sales', '>', 'value']",
    "question": "Show distinct names of singers that have songs with sales more than 300000.",
    "question_th": "แสดงรายชื่อนักร้องที่มีเพลงที่มียอดขายมากกว่า 300,000 เพลง",
    "question_toks": "['Show', 'distinct', 'names', 'of', 'singers', 'that', 'have', 'songs', 'with', 'sales', 'more', 'than', '300000', '.']",
    "sql": "{'from': {'table_units': [['table_unit', 0], ['table_unit', 1]], 'conds': [[False, 2, [0, [0, 1, False], None], [0, 8, False], None]]}, 'select': [True, [[0, [0, [0, 2, False], None]]]], 'where': [[False, 3, [0, [0, 9, False], None], 300000.0, None]], 'groupBy': [], 'having': [], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "singer",
    "query": "SELECT DISTINCT T1.Name FROM singer AS T1 JOIN song AS T2 ON T1.Singer_ID  =  T2.Singer_ID WHERE T2.Sales  >  300000",
    "query_toks": "['SELECT', 'DISTINCT', 'T1.Name', 'FROM', 'singer', 'AS', 'T1', 'JOIN', 'song', 'AS', 'T2', 'ON', 'T1.Singer_ID', '=', 'T2.Singer_ID', 'WHERE', 'T2.Sales', '>', '300000']",
    "query_toks_no_value": "['select', 'distinct', 't1', '.', 'name', 'from', 'singer', 'as', 't1', 'join', 'song', 'as', 't2', 'on', 't1', '.', 'singer_id', '=', 't2', '.', 'singer_id', 'where', 't2', '.', 'sales', '>', 'value']",
    "question": "what are the different names of the singers that have sales more than 300000?",
    "question_th": "นักร้องที่มียอดขายเกิน 300,000 ชื่อแตกต่างกันอย่างไร?",
    "question_toks": "['what', 'are', 'the', 'different', 'names', 'of', 'the', 'singers', 'that', 'have', 'sales', 'more', 'than', '300000', '?']",
    "sql": "{'from': {'table_units': [['table_unit', 0], ['table_unit', 1]], 'conds': [[False, 2, [0, [0, 1, False], None], [0, 8, False], None]]}, 'select': [True, [[0, [0, [0, 2, False], None]]]], 'where': [[False, 3, [0, [0, 9, False], None], 300000.0, None]], 'groupBy': [], 'having': [], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "singer",
    "query": "SELECT T1.Name FROM singer AS T1 JOIN song AS T2 ON T1.Singer_ID  =  T2.Singer_ID GROUP BY T1.Name HAVING COUNT(*)  >  1",
    "query_toks": "['SELECT', 'T1.Name', 'FROM', 'singer', 'AS', 'T1', 'JOIN', 'song', 'AS', 'T2', 'ON', 'T1.Singer_ID', '=', 'T2.Singer_ID', 'GROUP', 'BY', 'T1.Name', 'HAVING', 'COUNT', '(', '*', ')', '>', '1']",
    "query_toks_no_value": "['select', 't1', '.', 'name', 'from', 'singer', 'as', 't1', 'join', 'song', 'as', 't2', 'on', 't1', '.', 'singer_id', '=', 't2', '.', 'singer_id', 'group', 'by', 't1', '.', 'name', 'having', 'count', '(', '*', ')', '>', 'value']",
    "question": "Show the names of singers that have more than one song.",
    "question_th": "แสดงชื่อนักร้องที่มีมากกว่าหนึ่งเพลง",
    "question_toks": "['Show', 'the', 'names', 'of', 'singers', 'that', 'have', 'more', 'than', 'one', 'song', '.']",
    "sql": "{'from': {'table_units': [['table_unit', 0], ['table_unit', 1]], 'conds': [[False, 2, [0, [0, 1, False], None], [0, 8, False], None]]}, 'select': [False, [[0, [0, [0, 2, False], None]]]], 'where': [], 'groupBy': [[0, 2, False]], 'having': [[False, 3, [0, [3, 0, False], None], 1.0, None]], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "singer",
    "query": "SELECT T1.Name FROM singer AS T1 JOIN song AS T2 ON T1.Singer_ID  =  T2.Singer_ID GROUP BY T1.Name HAVING COUNT(*)  >  1",
    "query_toks": "['SELECT', 'T1.Name', 'FROM', 'singer', 'AS', 'T1', 'JOIN', 'song', 'AS', 'T2', 'ON', 'T1.Singer_ID', '=', 'T2.Singer_ID', 'GROUP', 'BY', 'T1.Name', 'HAVING', 'COUNT', '(', '*', ')', '>', '1']",
    "query_toks_no_value": "['select', 't1', '.', 'name', 'from', 'singer', 'as', 't1', 'join', 'song', 'as', 't2', 'on', 't1', '.', 'singer_id', '=', 't2', '.', 'singer_id', 'group', 'by', 't1', '.', 'name', 'having', 'count', '(', '*', ')', '>', 'value']",
    "question": "What are the names of the singers that have more than one songs?",
    "question_th": "นักร้องที่มีมากกว่าหนึ่งเพลงชื่ออะไร?",
    "question_toks": "['What', 'are', 'the', 'names', 'of', 'the', 'singers', 'that', 'have', 'more', 'than', 'one', 'songs', '?']",
    "sql": "{'from': {'table_units': [['table_unit', 0], ['table_unit', 1]], 'conds': [[False, 2, [0, [0, 1, False], None], [0, 8, False], None]]}, 'select': [False, [[0, [0, [0, 2, False], None]]]], 'where': [], 'groupBy': [[0, 2, False]], 'having': [[False, 3, [0, [3, 0, False], None], 1.0, None]], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "singer",
    "query": "SELECT T1.Name ,  sum(T2.Sales) FROM singer AS T1 JOIN song AS T2 ON T1.Singer_ID  =  T2.Singer_ID GROUP BY T1.Name",
    "query_toks": "['SELECT', 'T1.Name', ',', 'sum', '(', 'T2.Sales', ')', 'FROM', 'singer', 'AS', 'T1', 'JOIN', 'song', 'AS', 'T2', 'ON', 'T1.Singer_ID', '=', 'T2.Singer_ID', 'GROUP', 'BY', 'T1.Name']",
    "query_toks_no_value": "['select', 't1', '.', 'name', ',', 'sum', '(', 't2', '.', 'sales', ')', 'from', 'singer', 'as', 't1', 'join', 'song', 'as', 't2', 'on', 't1', '.', 'singer_id', '=', 't2', '.', 'singer_id', 'group', 'by', 't1', '.', 'name']",
    "question": "Show the names of singers and the total sales of their songs.",
    "question_th": "แสดงชื่อนักร้องและยอดขายรวมของเพลง",
    "question_toks": "['Show', 'the', 'names', 'of', 'singers', 'and', 'the', 'total', 'sales', 'of', 'their', 'songs', '.']",
    "sql": "{'from': {'table_units': [['table_unit', 0], ['table_unit', 1]], 'conds': [[False, 2, [0, [0, 1, False], None], [0, 8, False], None]]}, 'select': [False, [[0, [0, [0, 2, False], None]], [4, [0, [0, 9, False], None]]]], 'where': [], 'groupBy': [[0, 2, False]], 'having': [], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "singer",
    "query": "SELECT T1.Name ,  sum(T2.Sales) FROM singer AS T1 JOIN song AS T2 ON T1.Singer_ID  =  T2.Singer_ID GROUP BY T1.Name",
    "query_toks": "['SELECT', 'T1.Name', ',', 'sum', '(', 'T2.Sales', ')', 'FROM', 'singer', 'AS', 'T1', 'JOIN', 'song', 'AS', 'T2', 'ON', 'T1.Singer_ID', '=', 'T2.Singer_ID', 'GROUP', 'BY', 'T1.Name']",
    "query_toks_no_value": "['select', 't1', '.', 'name', ',', 'sum', '(', 't2', '.', 'sales', ')', 'from', 'singer', 'as', 't1', 'join', 'song', 'as', 't2', 'on', 't1', '.', 'singer_id', '=', 't2', '.', 'singer_id', 'group', 'by', 't1', '.', 'name']",
    "question": "For each singer name, what is the total sales for their songs?",
    "question_th": "นักร้องแต่ละคนมียอดขายรวมเพลงเท่าไหร่?",
    "question_toks": "['For', 'each', 'singer', 'name', ',', 'what', 'is', 'the', 'total', 'sales', 'for', 'their', 'songs', '?']",
    "sql": "{'from': {'table_units': [['table_unit', 0], ['table_unit', 1]], 'conds': [[False, 2, [0, [0, 1, False], None], [0, 8, False], None]]}, 'select': [False, [[0, [0, [0, 2, False], None]], [4, [0, [0, 9, False], None]]]], 'where': [], 'groupBy': [[0, 2, False]], 'having': [], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "singer",
    "query": "SELECT Name FROM singer WHERE Singer_ID NOT IN (SELECT Singer_ID FROM song)",
    "query_toks": "['SELECT', 'Name', 'FROM', 'singer', 'WHERE', 'Singer_ID', 'NOT', 'IN', '(', 'SELECT', 'Singer_ID', 'FROM', 'song', ')']",
    "query_toks_no_value": "['select', 'name', 'from', 'singer', 'where', 'singer_id', 'not', 'in', '(', 'select', 'singer_id', 'from', 'song', ')']",
    "question": "List the name of singers that do not have any song.",
    "question_th": "รายชื่อนักร้องที่ไม่มีเพลงใดๆ",
    "question_toks": "['List', 'the', 'name', 'of', 'singers', 'that', 'do', 'not', 'have', 'any', 'song', '.']",
    "sql": "{'from': {'table_units': [['table_unit', 0]], 'conds': []}, 'select': [False, [[0, [0, [0, 2, False], None]]]], 'where': [[True, 8, [0, [0, 1, False], None], {'from': {'table_units': [['table_unit', 1]], 'conds': []}, 'select': [False, [[0, [0, [0, 8, False], None]]]], 'where': [], 'groupBy': [], 'having': [], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}, None]], 'groupBy': [], 'having': [], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "singer",
    "query": "SELECT Name FROM singer WHERE Singer_ID NOT IN (SELECT Singer_ID FROM song)",
    "query_toks": "['SELECT', 'Name', 'FROM', 'singer', 'WHERE', 'Singer_ID', 'NOT', 'IN', '(', 'SELECT', 'Singer_ID', 'FROM', 'song', ')']",
    "query_toks_no_value": "['select', 'name', 'from', 'singer', 'where', 'singer_id', 'not', 'in', '(', 'select', 'singer_id', 'from', 'song', ')']",
    "question": "What is the sname of every sing that does not have any song?",
    "question_th": "ทุกเพลงที่ไม่มีเพลงชื่ออะไรคะ?",
    "question_toks": "['What', 'is', 'the', 'sname', 'of', 'every', 'sing', 'that', 'does', 'not', 'have', 'any', 'song', '?']",
    "sql": "{'from': {'table_units': [['table_unit', 0]], 'conds': []}, 'select': [False, [[0, [0, [0, 2, False], None]]]], 'where': [[True, 8, [0, [0, 1, False], None], {'from': {'table_units': [['table_unit', 1]], 'conds': []}, 'select': [False, [[0, [0, [0, 8, False], None]]]], 'where': [], 'groupBy': [], 'having': [], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}, None]], 'groupBy': [], 'having': [], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "singer",
    "query": "SELECT Citizenship FROM singer WHERE Birth_Year  <  1945 INTERSECT SELECT Citizenship FROM singer WHERE Birth_Year  >  1955",
    "query_toks": "['SELECT', 'Citizenship', 'FROM', 'singer', 'WHERE', 'Birth_Year', '<', '1945', 'INTERSECT', 'SELECT', 'Citizenship', 'FROM', 'singer', 'WHERE', 'Birth_Year', '>', '1955']",
    "query_toks_no_value": "['select', 'citizenship', 'from', 'singer', 'where', 'birth_year', '<', 'value', 'intersect', 'select', 'citizenship', 'from', 'singer', 'where', 'birth_year', '>', 'value']",
    "question": "Show the citizenship shared by singers with birth year before 1945 and after 1955.",
    "question_th": "แสดงสัญชาติของนักร้องที่เกิดก่อนปี พ.ศ. 2488 และหลังปี พ.ศ. 2498",
    "question_toks": "['Show', 'the', 'citizenship', 'shared', 'by', 'singers', 'with', 'birth', 'year', 'before', '1945', 'and', 'after', '1955', '.']",
    "sql": "{'from': {'table_units': [['table_unit', 0]], 'conds': []}, 'select': [False, [[0, [0, [0, 5, False], None]]]], 'where': [[False, 4, [0, [0, 3, False], None], 1945.0, None]], 'groupBy': [], 'having': [], 'orderBy': [], 'limit': None, 'intersect': {'from': {'table_units': [['table_unit', 0]], 'conds': []}, 'select': [False, [[0, [0, [0, 5, False], None]]]], 'where': [[False, 3, [0, [0, 3, False], None], 1955.0, None]], 'groupBy': [], 'having': [], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}, 'union': None, 'except': None}"
  },
  {
    "db_id": "singer",
    "query": "SELECT Citizenship FROM singer WHERE Birth_Year  <  1945 INTERSECT SELECT Citizenship FROM singer WHERE Birth_Year  >  1955",
    "query_toks": "['SELECT', 'Citizenship', 'FROM', 'singer', 'WHERE', 'Birth_Year', '<', '1945', 'INTERSECT', 'SELECT', 'Citizenship', 'FROM', 'singer', 'WHERE', 'Birth_Year', '>', '1955']",
    "query_toks_no_value": "['select', 'citizenship', 'from', 'singer', 'where', 'birth_year', '<', 'value', 'intersect', 'select', 'citizenship', 'from', 'singer', 'where', 'birth_year', '>', 'value']",
    "question": "What are the citizenships that are shared by singers with a birth year before 1945 and after 1955?",
    "question_th": "นักร้องที่เกิดก่อนปี 1945 และหลังปี 1955 ถือสัญชาติอะไรบ้าง",
    "question_toks": "['What', 'are', 'the', 'citizenships', 'that', 'are', 'shared', 'by', 'singers', 'with', 'a', 'birth', 'year', 'before', '1945', 'and', 'after', '1955', '?']",
    "sql": "{'from': {'table_units': [['table_unit', 0]], 'conds': []}, 'select': [False, [[0, [0, [0, 5, False], None]]]], 'where': [[False, 4, [0, [0, 3, False], None], 1945.0, None]], 'groupBy': [], 'having': [], 'orderBy': [], 'limit': None, 'intersect': {'from': {'table_units': [['table_unit', 0]], 'conds': []}, 'select': [False, [[0, [0, [0, 5, False], None]]]], 'where': [[False, 3, [0, [0, 3, False], None], 1955.0, None]], 'groupBy': [], 'having': [], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}, 'union': None, 'except': None}"
  },
  {
    "db_id": "real_estate_properties",
    "query": "SELECT count(*) FROM Other_Available_Features",
    "query_toks": "['SELECT', 'count', '(', '*', ')', 'FROM', 'Other_Available_Features']",
    "query_toks_no_value": "['select', 'count', '(', '*', ')', 'from', 'other_available_features']",
    "question": "How many available features are there in total?",
    "question_th": "มีทั้งหมดกี่คุณสมบัติที่มีอยู่?",
    "question_toks": "['How', 'many', 'available', 'features', 'are', 'there', 'in', 'total', '?']",
    "sql": "{'from': {'table_units': [['table_unit', 2]], 'conds': []}, 'select': [False, [[3, [0, [0, 0, False], None]]]], 'where': [], 'groupBy': [], 'having': [], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "real_estate_properties",
    "query": "SELECT T2.feature_type_name FROM Other_Available_Features AS T1 JOIN Ref_Feature_Types AS T2 ON T1.feature_type_code  =  T2.feature_type_code WHERE T1.feature_name  =  \"AirCon\"",
    "query_toks": "['SELECT', 'T2.feature_type_name', 'FROM', 'Other_Available_Features', 'AS', 'T1', 'JOIN', 'Ref_Feature_Types', 'AS', 'T2', 'ON', 'T1.feature_type_code', '=', 'T2.feature_type_code', 'WHERE', 'T1.feature_name', '=', '``', 'AirCon', \"''\"]",
    "query_toks_no_value": "['select', 't2', '.', 'feature_type_name', 'from', 'other_available_features', 'as', 't1', 'join', 'ref_feature_types', 'as', 't2', 'on', 't1', '.', 'feature_type_code', '=', 't2', '.', 'feature_type_code', 'where', 't1', '.', 'feature_name', '=', 'value']",
    "question": "What is the feature type name of feature AirCon?",
    "question_th": "ชื่อฟีเจอร์ของฟีเจอร์ AirCon คืออะไร?",
    "question_toks": "['What', 'is', 'the', 'feature', 'type', 'name', 'of', 'feature', 'AirCon', '?']",
    "sql": "{'from': {'table_units': [['table_unit', 2], ['table_unit', 0]], 'conds': [[False, 2, [0, [0, 6, False], None], [0, 1, False], None]]}, 'select': [False, [[0, [0, [0, 2, False], None]]]], 'where': [[False, 2, [0, [0, 7, False], None], '\"AirCon\"', None]], 'groupBy': [], 'having': [], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "real_estate_properties",
    "query": "SELECT T2.property_type_description FROM Properties AS T1 JOIN Ref_Property_Types AS T2 ON T1.property_type_code  =  T2.property_type_code GROUP BY T1.property_type_code",
    "query_toks": "['SELECT', 'T2.property_type_description', 'FROM', 'Properties', 'AS', 'T1', 'JOIN', 'Ref_Property_Types', 'AS', 'T2', 'ON', 'T1.property_type_code', '=', 'T2.property_type_code', 'GROUP', 'BY', 'T1.property_type_code']",
    "query_toks_no_value": "['select', 't2', '.', 'property_type_description', 'from', 'properties', 'as', 't1', 'join', 'ref_property_types', 'as', 't2', 'on', 't1', '.', 'property_type_code', '=', 't2', '.', 'property_type_code', 'group', 'by', 't1', '.', 'property_type_code']",
    "question": "Show the property type descriptions of properties belonging to that code.",
    "question_th": "แสดงคำอธิบายประเภทคุณสมบัติของคุณสมบัติที่เป็นของรหัสนั้น",
    "question_toks": "['Show', 'the', 'property', 'type', 'descriptions', 'of', 'properties', 'belonging', 'to', 'that', 'code', '.']",
    "sql": "{'from': {'table_units': [['table_unit', 3], ['table_unit', 1]], 'conds': [[False, 2, [0, [0, 10, False], None], [0, 3, False], None]]}, 'select': [False, [[0, [0, [0, 4, False], None]]]], 'where': [], 'groupBy': [[0, 10, False]], 'having': [], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}"
  },
  {
    "db_id": "real_estate_properties",
    "query": "SELECT property_name FROM Properties WHERE property_type_code  =  \"House\" UNION SELECT property_name FROM Properties WHERE property_type_code  =  \"Apartment\" AND room_count  >  1",
    "query_toks": "['SELECT', 'property_name', 'FROM', 'Properties', 'WHERE', 'property_type_code', '=', '``', 'House', \"''\", 'UNION', 'SELECT', 'property_name', 'FROM', 'Properties', 'WHERE', 'property_type_code', '=', '``', 'Apartment', \"''\", 'AND', 'room_count', '>', '1']",
    "query_toks_no_value": "['select', 'property_name', 'from', 'properties', 'where', 'property_type_code', '=', 'value', 'union', 'select', 'property_name', 'from', 'properties', 'where', 'property_type_code', '=', 'value', 'and', 'room_count', '>', 'value']",
    "question": "What are the names of properties that are either houses or apartments with more than 1 room?",
    "question_th": "คุณสมบัติที่เป็นบ้านหรืออพาร์ตเมนต์ที่มีมากกว่า 1 ห้องชื่ออะไร",
    "question_toks": "['What', 'are', 'the', 'names', 'of', 'properties', 'that', 'are', 'either', 'houses', 'or', 'apartments', 'with', 'more', 'than', '1', 'room', '?']",
    "sql": "{'from': {'table_units': [['table_unit', 3]], 'conds': []}, 'select': [False, [[0, [0, [0, 13, False], None]]]], 'where': [[False, 2, [0, [0, 10, False], None], '\"House\"', None]], 'groupBy': [], 'having': [], 'orderBy': [], 'limit': None, 'intersect': None, 'union': {'from': {'table_units': [['table_unit', 3]], 'conds': []}, 'select': [False, [[0, [0, [0, 13, False], None]]]], 'where': [[False, 2, [0, [0, 10, False], None], '\"Apartment\"', None], 'and', [False, 3, [0, [0, 15, False], None], 1.0, None]], 'groupBy': [], 'having': [], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}, 'except': None}"
  }
]