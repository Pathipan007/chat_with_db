[
  {
    "db_id": "concert_singer",
    "query": "SELECT count(*) FROM singer",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "singer"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "singer"
    ],
    "question": "How many singers do we have?",
    "question_toks": [
      "How",
      "many",
      "singers",
      "do",
      "we",
      "have",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "concert_singer",
    "query": "SELECT count(*) FROM singer",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "singer"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "singer"
    ],
    "question": "What is the total number of singers?",
    "question_toks": [
      "What",
      "is",
      "the",
      "total",
      "number",
      "of",
      "singers",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "concert_singer",
    "query": "SELECT name ,  country ,  age FROM singer ORDER BY age DESC",
    "query_toks": [
      "SELECT",
      "name",
      ",",
      "country",
      ",",
      "age",
      "FROM",
      "singer",
      "ORDER",
      "BY",
      "age",
      "DESC"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      ",",
      "country",
      ",",
      "age",
      "from",
      "singer",
      "order",
      "by",
      "age",
      "desc"
    ],
    "question": "Show name, country, age for all singers ordered by age from the oldest to the youngest.",
    "question_toks": [
      "Show",
      "name",
      ",",
      "country",
      ",",
      "age",
      "for",
      "all",
      "singers",
      "ordered",
      "by",
      "age",
      "from",
      "the",
      "oldest",
      "to",
      "the",
      "youngest",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                9,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                10,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                13,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [
        "desc",
        [
          [
            0,
            [
              0,
              13,
              false
            ],
            null
          ]
        ]
      ],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "concert_singer",
    "query": "SELECT name ,  country ,  age FROM singer ORDER BY age DESC",
    "query_toks": [
      "SELECT",
      "name",
      ",",
      "country",
      ",",
      "age",
      "FROM",
      "singer",
      "ORDER",
      "BY",
      "age",
      "DESC"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      ",",
      "country",
      ",",
      "age",
      "from",
      "singer",
      "order",
      "by",
      "age",
      "desc"
    ],
    "question": "What are the names, countries, and ages for every singer in descending order of age?",
    "question_toks": [
      "What",
      "are",
      "the",
      "names",
      ",",
      "countries",
      ",",
      "and",
      "ages",
      "for",
      "every",
      "singer",
      "in",
      "descending",
      "order",
      "of",
      "age",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                9,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                10,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                13,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [
        "desc",
        [
          [
            0,
            [
              0,
              13,
              false
            ],
            null
          ]
        ]
      ],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "concert_singer",
    "query": "SELECT avg(age) ,  min(age) ,  max(age) FROM singer WHERE country  =  'France'",
    "query_toks": [
      "SELECT",
      "avg",
      "(",
      "age",
      ")",
      ",",
      "min",
      "(",
      "age",
      ")",
      ",",
      "max",
      "(",
      "age",
      ")",
      "FROM",
      "singer",
      "WHERE",
      "country",
      "=",
      "'France",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "avg",
      "(",
      "age",
      ")",
      ",",
      "min",
      "(",
      "age",
      ")",
      ",",
      "max",
      "(",
      "age",
      ")",
      "from",
      "singer",
      "where",
      "country",
      "=",
      "value"
    ],
    "question": "What is the average, minimum, and maximum age of all singers from France?",
    "question_toks": [
      "What",
      "is",
      "the",
      "average",
      ",",
      "minimum",
      ",",
      "and",
      "maximum",
      "age",
      "of",
      "all",
      "singers",
      "from",
      "France",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            5,
            [
              0,
              [
                0,
                13,
                false
              ],
              null
            ]
          ],
          [
            2,
            [
              0,
              [
                0,
                13,
                false
              ],
              null
            ]
          ],
          [
            1,
            [
              0,
              [
                0,
                13,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              10,
              false
            ],
            null
          ],
          "\"France\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "concert_singer",
    "query": "SELECT avg(age) ,  min(age) ,  max(age) FROM singer WHERE country  =  'France'",
    "query_toks": [
      "SELECT",
      "avg",
      "(",
      "age",
      ")",
      ",",
      "min",
      "(",
      "age",
      ")",
      ",",
      "max",
      "(",
      "age",
      ")",
      "FROM",
      "singer",
      "WHERE",
      "country",
      "=",
      "'France",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "avg",
      "(",
      "age",
      ")",
      ",",
      "min",
      "(",
      "age",
      ")",
      ",",
      "max",
      "(",
      "age",
      ")",
      "from",
      "singer",
      "where",
      "country",
      "=",
      "value"
    ],
    "question": "What is the average, minimum, and maximum age for all French singers?",
    "question_toks": [
      "What",
      "is",
      "the",
      "average",
      ",",
      "minimum",
      ",",
      "and",
      "maximum",
      "age",
      "for",
      "all",
      "French",
      "singers",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            5,
            [
              0,
              [
                0,
                13,
                false
              ],
              null
            ]
          ],
          [
            2,
            [
              0,
              [
                0,
                13,
                false
              ],
              null
            ]
          ],
          [
            1,
            [
              0,
              [
                0,
                13,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              10,
              false
            ],
            null
          ],
          "\"France\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "concert_singer",
    "query": "SELECT song_name ,  song_release_year FROM singer ORDER BY age LIMIT 1",
    "query_toks": [
      "SELECT",
      "song_name",
      ",",
      "song_release_year",
      "FROM",
      "singer",
      "ORDER",
      "BY",
      "age",
      "LIMIT",
      "1"
    ],
    "query_toks_no_value": [
      "select",
      "song_name",
      ",",
      "song_release_year",
      "from",
      "singer",
      "order",
      "by",
      "age",
      "limit",
      "value"
    ],
    "question": "Show the name and the release year of the song by the youngest singer.",
    "question_toks": [
      "Show",
      "the",
      "name",
      "and",
      "the",
      "release",
      "year",
      "of",
      "the",
      "song",
      "by",
      "the",
      "youngest",
      "singer",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                11,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                12,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [
        "asc",
        [
          [
            0,
            [
              0,
              13,
              false
            ],
            null
          ]
        ]
      ],
      "limit": 1,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "concert_singer",
    "query": "SELECT song_name ,  song_release_year FROM singer ORDER BY age LIMIT 1",
    "query_toks": [
      "SELECT",
      "song_name",
      ",",
      "song_release_year",
      "FROM",
      "singer",
      "ORDER",
      "BY",
      "age",
      "LIMIT",
      "1"
    ],
    "query_toks_no_value": [
      "select",
      "song_name",
      ",",
      "song_release_year",
      "from",
      "singer",
      "order",
      "by",
      "age",
      "limit",
      "value"
    ],
    "question": "What are the names and release years for all the songs of the youngest singer?",
    "question_toks": [
      "What",
      "are",
      "the",
      "names",
      "and",
      "release",
      "years",
      "for",
      "all",
      "the",
      "songs",
      "of",
      "the",
      "youngest",
      "singer",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                11,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                12,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [
        "asc",
        [
          [
            0,
            [
              0,
              13,
              false
            ],
            null
          ]
        ]
      ],
      "limit": 1,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "concert_singer",
    "query": "SELECT DISTINCT country FROM singer WHERE age  >  20",
    "query_toks": [
      "SELECT",
      "DISTINCT",
      "country",
      "FROM",
      "singer",
      "WHERE",
      "age",
      ">",
      "20"
    ],
    "query_toks_no_value": [
      "select",
      "distinct",
      "country",
      "from",
      "singer",
      "where",
      "age",
      ">",
      "value"
    ],
    "question": "What are all distinct countries where singers above age 20 are from?",
    "question_toks": [
      "What",
      "are",
      "all",
      "distinct",
      "countries",
      "where",
      "singers",
      "above",
      "age",
      "20",
      "are",
      "from",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        true,
        [
          [
            0,
            [
              0,
              [
                0,
                10,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          3,
          [
            0,
            [
              0,
              13,
              false
            ],
            null
          ],
          20.0,
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "concert_singer",
    "query": "SELECT DISTINCT country FROM singer WHERE age  >  20",
    "query_toks": [
      "SELECT",
      "DISTINCT",
      "country",
      "FROM",
      "singer",
      "WHERE",
      "age",
      ">",
      "20"
    ],
    "query_toks_no_value": [
      "select",
      "distinct",
      "country",
      "from",
      "singer",
      "where",
      "age",
      ">",
      "value"
    ],
    "question": "What are  the different countries with singers above age 20?",
    "question_toks": [
      "What",
      "are",
      "the",
      "different",
      "countries",
      "with",
      "singers",
      "above",
      "age",
      "20",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        true,
        [
          [
            0,
            [
              0,
              [
                0,
                10,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          3,
          [
            0,
            [
              0,
              13,
              false
            ],
            null
          ],
          20.0,
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "concert_singer",
    "query": "SELECT country ,  count(*) FROM singer GROUP BY country",
    "query_toks": [
      "SELECT",
      "country",
      ",",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "singer",
      "GROUP",
      "BY",
      "country"
    ],
    "query_toks_no_value": [
      "select",
      "country",
      ",",
      "count",
      "(",
      "*",
      ")",
      "from",
      "singer",
      "group",
      "by",
      "country"
    ],
    "question": "Show all countries and the number of singers in each country.",
    "question_toks": [
      "Show",
      "all",
      "countries",
      "and",
      "the",
      "number",
      "of",
      "singers",
      "in",
      "each",
      "country",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                10,
                false
              ],
              null
            ]
          ],
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [
        [
          0,
          10,
          false
        ]
      ],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "concert_singer",
    "query": "SELECT country ,  count(*) FROM singer GROUP BY country",
    "query_toks": [
      "SELECT",
      "country",
      ",",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "singer",
      "GROUP",
      "BY",
      "country"
    ],
    "query_toks_no_value": [
      "select",
      "country",
      ",",
      "count",
      "(",
      "*",
      ")",
      "from",
      "singer",
      "group",
      "by",
      "country"
    ],
    "question": "How many singers are from each country?",
    "question_toks": [
      "How",
      "many",
      "singers",
      "are",
      "from",
      "each",
      "country",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                10,
                false
              ],
              null
            ]
          ],
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [
        [
          0,
          10,
          false
        ]
      ],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "concert_singer",
    "query": "SELECT song_name FROM singer WHERE age  >  (SELECT avg(age) FROM singer)",
    "query_toks": [
      "SELECT",
      "song_name",
      "FROM",
      "singer",
      "WHERE",
      "age",
      ">",
      "(",
      "SELECT",
      "avg",
      "(",
      "age",
      ")",
      "FROM",
      "singer",
      ")"
    ],
    "query_toks_no_value": [
      "select",
      "song_name",
      "from",
      "singer",
      "where",
      "age",
      ">",
      "(",
      "select",
      "avg",
      "(",
      "age",
      ")",
      "from",
      "singer",
      ")"
    ],
    "question": "List all song names by singers above the average age.",
    "question_toks": [
      "List",
      "all",
      "song",
      "names",
      "by",
      "singers",
      "above",
      "the",
      "average",
      "age",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                11,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          3,
          [
            0,
            [
              0,
              13,
              false
            ],
            null
          ],
          {
            "from": {
              "table_units": [
                [
                  "table_unit",
                  1
                ]
              ],
              "conds": []
            },
            "select": [
              false,
              [
                [
                  5,
                  [
                    0,
                    [
                      0,
                      13,
                      false
                    ],
                    null
                  ]
                ]
              ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
          },
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "concert_singer",
    "query": "SELECT song_name FROM singer WHERE age  >  (SELECT avg(age) FROM singer)",
    "query_toks": [
      "SELECT",
      "song_name",
      "FROM",
      "singer",
      "WHERE",
      "age",
      ">",
      "(",
      "SELECT",
      "avg",
      "(",
      "age",
      ")",
      "FROM",
      "singer",
      ")"
    ],
    "query_toks_no_value": [
      "select",
      "song_name",
      "from",
      "singer",
      "where",
      "age",
      ">",
      "(",
      "select",
      "avg",
      "(",
      "age",
      ")",
      "from",
      "singer",
      ")"
    ],
    "question": "What are all the song names by singers who are older than average?",
    "question_toks": [
      "What",
      "are",
      "all",
      "the",
      "song",
      "names",
      "by",
      "singers",
      "who",
      "are",
      "older",
      "than",
      "average",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                11,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          3,
          [
            0,
            [
              0,
              13,
              false
            ],
            null
          ],
          {
            "from": {
              "table_units": [
                [
                  "table_unit",
                  1
                ]
              ],
              "conds": []
            },
            "select": [
              false,
              [
                [
                  5,
                  [
                    0,
                    [
                      0,
                      13,
                      false
                    ],
                    null
                  ]
                ]
              ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
          },
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "concert_singer",
    "query": "SELECT LOCATION ,  name FROM stadium WHERE capacity BETWEEN 5000 AND 10000",
    "query_toks": [
      "SELECT",
      "LOCATION",
      ",",
      "name",
      "FROM",
      "stadium",
      "WHERE",
      "capacity",
      "BETWEEN",
      "5000",
      "AND",
      "10000"
    ],
    "query_toks_no_value": [
      "select",
      "location",
      ",",
      "name",
      "from",
      "stadium",
      "where",
      "capacity",
      "between",
      "value",
      "and",
      "value"
    ],
    "question": "Show location and name for all stadiums with a capacity between 5000 and 10000.",
    "question_toks": [
      "Show",
      "location",
      "and",
      "name",
      "for",
      "all",
      "stadiums",
      "with",
      "a",
      "capacity",
      "between",
      "5000",
      "and",
      "10000",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                2,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                3,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          1,
          [
            0,
            [
              0,
              4,
              false
            ],
            null
          ],
          5000.0,
          10000.0
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "concert_singer",
    "query": "SELECT LOCATION ,  name FROM stadium WHERE capacity BETWEEN 5000 AND 10000",
    "query_toks": [
      "SELECT",
      "LOCATION",
      ",",
      "name",
      "FROM",
      "stadium",
      "WHERE",
      "capacity",
      "BETWEEN",
      "5000",
      "AND",
      "10000"
    ],
    "query_toks_no_value": [
      "select",
      "location",
      ",",
      "name",
      "from",
      "stadium",
      "where",
      "capacity",
      "between",
      "value",
      "and",
      "value"
    ],
    "question": "What are the locations and names of all stations with capacity between 5000 and 10000?",
    "question_toks": [
      "What",
      "are",
      "the",
      "locations",
      "and",
      "names",
      "of",
      "all",
      "stations",
      "with",
      "capacity",
      "between",
      "5000",
      "and",
      "10000",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                2,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                3,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          1,
          [
            0,
            [
              0,
              4,
              false
            ],
            null
          ],
          5000.0,
          10000.0
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "concert_singer",
    "query": "select max(capacity), average from stadium",
    "query_toks": [
      "select",
      "max",
      "(",
      "capacity",
      ")",
      ",",
      "average",
      "from",
      "stadium"
    ],
    "query_toks_no_value": [
      "select",
      "max",
      "(",
      "capacity",
      ")",
      ",",
      "average",
      "from",
      "stadium"
    ],
    "question": "What is the maximum capacity and the average of all stadiums ?",
    "question_toks": [
      "What",
      "is",
      "the",
      "maximum",
      "capacity",
      "and",
      "the",
      "average",
      "of",
      "all",
      "stadiums",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            1,
            [
              0,
              [
                0,
                4,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                7,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "concert_singer",
    "query": "select avg(capacity) ,  max(capacity) from stadium",
    "query_toks": [
      "select",
      "avg",
      "(",
      "capacity",
      ")",
      ",",
      "max",
      "(",
      "capacity",
      ")",
      "from",
      "stadium"
    ],
    "query_toks_no_value": [
      "select",
      "avg",
      "(",
      "capacity",
      ")",
      ",",
      "max",
      "(",
      "capacity",
      ")",
      "from",
      "stadium"
    ],
    "question": "What is the average and maximum capacities for all stadiums ?",
    "question_toks": [
      "What",
      "is",
      "the",
      "average",
      "and",
      "maximum",
      "capacities",
      "for",
      "all",
      "stadiums",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            5,
            [
              0,
              [
                0,
                4,
                false
              ],
              null
            ]
          ],
          [
            1,
            [
              0,
              [
                0,
                4,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "concert_singer",
    "query": "SELECT name ,  capacity FROM stadium ORDER BY average DESC LIMIT 1",
    "query_toks": [
      "SELECT",
      "name",
      ",",
      "capacity",
      "FROM",
      "stadium",
      "ORDER",
      "BY",
      "average",
      "DESC",
      "LIMIT",
      "1"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      ",",
      "capacity",
      "from",
      "stadium",
      "order",
      "by",
      "average",
      "desc",
      "limit",
      "value"
    ],
    "question": "What is the name and capacity for the stadium with highest average attendance?",
    "question_toks": [
      "What",
      "is",
      "the",
      "name",
      "and",
      "capacity",
      "for",
      "the",
      "stadium",
      "with",
      "highest",
      "average",
      "attendance",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                3,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                4,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [
        "desc",
        [
          [
            0,
            [
              0,
              7,
              false
            ],
            null
          ]
        ]
      ],
      "limit": 1,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "concert_singer",
    "query": "SELECT name ,  capacity FROM stadium ORDER BY average DESC LIMIT 1",
    "query_toks": [
      "SELECT",
      "name",
      ",",
      "capacity",
      "FROM",
      "stadium",
      "ORDER",
      "BY",
      "average",
      "DESC",
      "LIMIT",
      "1"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      ",",
      "capacity",
      "from",
      "stadium",
      "order",
      "by",
      "average",
      "desc",
      "limit",
      "value"
    ],
    "question": "What is the name and capacity for the stadium with the highest average attendance?",
    "question_toks": [
      "What",
      "is",
      "the",
      "name",
      "and",
      "capacity",
      "for",
      "the",
      "stadium",
      "with",
      "the",
      "highest",
      "average",
      "attendance",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                3,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                4,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [
        "desc",
        [
          [
            0,
            [
              0,
              7,
              false
            ],
            null
          ]
        ]
      ],
      "limit": 1,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "concert_singer",
    "query": "SELECT count(*) FROM concert WHERE YEAR  =  2014 OR YEAR  =  2015",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "concert",
      "WHERE",
      "YEAR",
      "=",
      "2014",
      "OR",
      "YEAR",
      "=",
      "2015"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "concert",
      "where",
      "year",
      "=",
      "value",
      "or",
      "year",
      "=",
      "value"
    ],
    "question": "How many concerts are there in year 2014 or 2015?",
    "question_toks": [
      "How",
      "many",
      "concerts",
      "are",
      "there",
      "in",
      "year",
      "2014",
      "or",
      "2015",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            2
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              19,
              false
            ],
            null
          ],
          2014.0,
          null
        ],
        "or",
        [
          false,
          2,
          [
            0,
            [
              0,
              19,
              false
            ],
            null
          ],
          2015.0,
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "concert_singer",
    "query": "SELECT count(*) FROM concert WHERE YEAR  =  2014 OR YEAR  =  2015",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "concert",
      "WHERE",
      "YEAR",
      "=",
      "2014",
      "OR",
      "YEAR",
      "=",
      "2015"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "concert",
      "where",
      "year",
      "=",
      "value",
      "or",
      "year",
      "=",
      "value"
    ],
    "question": "How many concerts occurred in 2014 or 2015?",
    "question_toks": [
      "How",
      "many",
      "concerts",
      "occurred",
      "in",
      "2014",
      "or",
      "2015",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            2
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              19,
              false
            ],
            null
          ],
          2014.0,
          null
        ],
        "or",
        [
          false,
          2,
          [
            0,
            [
              0,
              19,
              false
            ],
            null
          ],
          2015.0,
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "concert_singer",
    "query": "SELECT T2.name ,  count(*) FROM concert AS T1 JOIN stadium AS T2 ON T1.stadium_id  =  T2.stadium_id GROUP BY T1.stadium_id",
    "query_toks": [
      "SELECT",
      "T2.name",
      ",",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "concert",
      "AS",
      "T1",
      "JOIN",
      "stadium",
      "AS",
      "T2",
      "ON",
      "T1.stadium_id",
      "=",
      "T2.stadium_id",
      "GROUP",
      "BY",
      "T1.stadium_id"
    ],
    "query_toks_no_value": [
      "select",
      "t2",
      ".",
      "name",
      ",",
      "count",
      "(",
      "*",
      ")",
      "from",
      "concert",
      "as",
      "t1",
      "join",
      "stadium",
      "as",
      "t2",
      "on",
      "t1",
      ".",
      "stadium_id",
      "=",
      "t2",
      ".",
      "stadium_id",
      "group",
      "by",
      "t1",
      ".",
      "stadium_id"
    ],
    "question": "Show the stadium name and the number of concerts in each stadium.",
    "question_toks": [
      "Show",
      "the",
      "stadium",
      "name",
      "and",
      "the",
      "number",
      "of",
      "concerts",
      "in",
      "each",
      "stadium",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            2
          ],
          [
            "table_unit",
            0
          ]
        ],
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                18,
                false
              ],
              null
            ],
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                3,
                false
              ],
              null
            ]
          ],
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [
        [
          0,
          18,
          false
        ]
      ],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "concert_singer",
    "query": "SELECT T2.name ,  count(*) FROM concert AS T1 JOIN stadium AS T2 ON T1.stadium_id  =  T2.stadium_id GROUP BY T1.stadium_id",
    "query_toks": [
      "SELECT",
      "T2.name",
      ",",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "concert",
      "AS",
      "T1",
      "JOIN",
      "stadium",
      "AS",
      "T2",
      "ON",
      "T1.stadium_id",
      "=",
      "T2.stadium_id",
      "GROUP",
      "BY",
      "T1.stadium_id"
    ],
    "query_toks_no_value": [
      "select",
      "t2",
      ".",
      "name",
      ",",
      "count",
      "(",
      "*",
      ")",
      "from",
      "concert",
      "as",
      "t1",
      "join",
      "stadium",
      "as",
      "t2",
      "on",
      "t1",
      ".",
      "stadium_id",
      "=",
      "t2",
      ".",
      "stadium_id",
      "group",
      "by",
      "t1",
      ".",
      "stadium_id"
    ],
    "question": "For each stadium, how many concerts play there?",
    "question_toks": [
      "For",
      "each",
      "stadium",
      ",",
      "how",
      "many",
      "concerts",
      "play",
      "there",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            2
          ],
          [
            "table_unit",
            0
          ]
        ],
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                18,
                false
              ],
              null
            ],
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                3,
                false
              ],
              null
            ]
          ],
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [
        [
          0,
          18,
          false
        ]
      ],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "concert_singer",
    "query": "SELECT T2.name ,  T2.capacity FROM concert AS T1 JOIN stadium AS T2 ON T1.stadium_id  =  T2.stadium_id WHERE T1.year  >=  2014 GROUP BY T2.stadium_id ORDER BY count(*) DESC LIMIT 1",
    "query_toks": [
      "SELECT",
      "T2.name",
      ",",
      "T2.capacity",
      "FROM",
      "concert",
      "AS",
      "T1",
      "JOIN",
      "stadium",
      "AS",
      "T2",
      "ON",
      "T1.stadium_id",
      "=",
      "T2.stadium_id",
      "WHERE",
      "T1.year",
      ">",
      "=",
      "2014",
      "GROUP",
      "BY",
      "T2.stadium_id",
      "ORDER",
      "BY",
      "count",
      "(",
      "*",
      ")",
      "DESC",
      "LIMIT",
      "1"
    ],
    "query_toks_no_value": [
      "select",
      "t2",
      ".",
      "name",
      ",",
      "t2",
      ".",
      "capacity",
      "from",
      "concert",
      "as",
      "t1",
      "join",
      "stadium",
      "as",
      "t2",
      "on",
      "t1",
      ".",
      "stadium_id",
      "=",
      "t2",
      ".",
      "stadium_id",
      "where",
      "t1",
      ".",
      "year",
      ">",
      "=",
      "value",
      "group",
      "by",
      "t2",
      ".",
      "stadium_id",
      "order",
      "by",
      "count",
      "(",
      "*",
      ")",
      "desc",
      "limit",
      "value"
    ],
    "question": "Show the stadium name and capacity with most number of concerts in year 2014 or after.",
    "question_toks": [
      "Show",
      "the",
      "stadium",
      "name",
      "and",
      "capacity",
      "with",
      "most",
      "number",
      "of",
      "concerts",
      "in",
      "year",
      "2014",
      "or",
      "after",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            2
          ],
          [
            "table_unit",
            0
          ]
        ],
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                18,
                false
              ],
              null
            ],
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                3,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                4,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          5,
          [
            0,
            [
              0,
              19,
              false
            ],
            null
          ],
          2014.0,
          null
        ]
      ],
      "groupBy": [
        [
          0,
          1,
          false
        ]
      ],
      "having": [],
      "orderBy": [
        "desc",
        [
          [
            0,
            [
              3,
              0,
              false
            ],
            null
          ]
        ]
      ],
      "limit": 1,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "concert_singer",
    "query": "select t2.name ,  t2.capacity from concert as t1 join stadium as t2 on t1.stadium_id  =  t2.stadium_id where t1.year  >  2013 group by t2.stadium_id order by count(*) desc limit 1",
    "query_toks": [
      "select",
      "t2.name",
      ",",
      "t2.capacity",
      "from",
      "concert",
      "as",
      "t1",
      "join",
      "stadium",
      "as",
      "t2",
      "on",
      "t1.stadium_id",
      "=",
      "t2.stadium_id",
      "where",
      "t1.year",
      ">",
      "2013",
      "group",
      "by",
      "t2.stadium_id",
      "order",
      "by",
      "count",
      "(",
      "*",
      ")",
      "desc",
      "limit",
      "1"
    ],
    "query_toks_no_value": [
      "select",
      "t2",
      ".",
      "name",
      ",",
      "t2",
      ".",
      "capacity",
      "from",
      "concert",
      "as",
      "t1",
      "join",
      "stadium",
      "as",
      "t2",
      "on",
      "t1",
      ".",
      "stadium_id",
      "=",
      "t2",
      ".",
      "stadium_id",
      "where",
      "t1",
      ".",
      "year",
      ">",
      "value",
      "group",
      "by",
      "t2",
      ".",
      "stadium_id",
      "order",
      "by",
      "count",
      "(",
      "*",
      ")",
      "desc",
      "limit",
      "value"
    ],
    "question": "What is the name and capacity of the stadium with the most concerts after 2013 ?",
    "question_toks": [
      "What",
      "is",
      "the",
      "name",
      "and",
      "capacity",
      "of",
      "the",
      "stadium",
      "with",
      "the",
      "most",
      "concerts",
      "after",
      "2013",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            2
          ],
          [
            "table_unit",
            0
          ]
        ],
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                18,
                false
              ],
              null
            ],
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                3,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                4,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          3,
          [
            0,
            [
              0,
              19,
              false
            ],
            null
          ],
          2013.0,
          null
        ]
      ],
      "groupBy": [
        [
          0,
          1,
          false
        ]
      ],
      "having": [],
      "orderBy": [
        "desc",
        [
          [
            0,
            [
              3,
              0,
              false
            ],
            null
          ]
        ]
      ],
      "limit": 1,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "concert_singer",
    "query": "SELECT YEAR FROM concert GROUP BY YEAR ORDER BY count(*) DESC LIMIT 1",
    "query_toks": [
      "SELECT",
      "YEAR",
      "FROM",
      "concert",
      "GROUP",
      "BY",
      "YEAR",
      "ORDER",
      "BY",
      "count",
      "(",
      "*",
      ")",
      "DESC",
      "LIMIT",
      "1"
    ],
    "query_toks_no_value": [
      "select",
      "year",
      "from",
      "concert",
      "group",
      "by",
      "year",
      "order",
      "by",
      "count",
      "(",
      "*",
      ")",
      "desc",
      "limit",
      "value"
    ],
    "question": "Which year has most number of concerts?",
    "question_toks": [
      "Which",
      "year",
      "has",
      "most",
      "number",
      "of",
      "concerts",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            2
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                19,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [
        [
          0,
          19,
          false
        ]
      ],
      "having": [],
      "orderBy": [
        "desc",
        [
          [
            0,
            [
              3,
              0,
              false
            ],
            null
          ]
        ]
      ],
      "limit": 1,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "concert_singer",
    "query": "SELECT YEAR FROM concert GROUP BY YEAR ORDER BY count(*) DESC LIMIT 1",
    "query_toks": [
      "SELECT",
      "YEAR",
      "FROM",
      "concert",
      "GROUP",
      "BY",
      "YEAR",
      "ORDER",
      "BY",
      "count",
      "(",
      "*",
      ")",
      "DESC",
      "LIMIT",
      "1"
    ],
    "query_toks_no_value": [
      "select",
      "year",
      "from",
      "concert",
      "group",
      "by",
      "year",
      "order",
      "by",
      "count",
      "(",
      "*",
      ")",
      "desc",
      "limit",
      "value"
    ],
    "question": "What is the year that had the most concerts?",
    "question_toks": [
      "What",
      "is",
      "the",
      "year",
      "that",
      "had",
      "the",
      "most",
      "concerts",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            2
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                19,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [
        [
          0,
          19,
          false
        ]
      ],
      "having": [],
      "orderBy": [
        "desc",
        [
          [
            0,
            [
              3,
              0,
              false
            ],
            null
          ]
        ]
      ],
      "limit": 1,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "concert_singer",
    "query": "SELECT name FROM stadium WHERE stadium_id NOT IN (SELECT stadium_id FROM concert)",
    "query_toks": [
      "SELECT",
      "name",
      "FROM",
      "stadium",
      "WHERE",
      "stadium_id",
      "NOT",
      "IN",
      "(",
      "SELECT",
      "stadium_id",
      "FROM",
      "concert",
      ")"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      "from",
      "stadium",
      "where",
      "stadium_id",
      "not",
      "in",
      "(",
      "select",
      "stadium_id",
      "from",
      "concert",
      ")"
    ],
    "question": "Show the stadium names without any concert.",
    "question_toks": [
      "Show",
      "the",
      "stadium",
      "names",
      "without",
      "any",
      "concert",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                3,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          true,
          8,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ],
          {
            "from": {
              "table_units": [
                [
                  "table_unit",
                  2
                ]
              ],
              "conds": []
            },
            "select": [
              false,
              [
                [
                  0,
                  [
                    0,
                    [
                      0,
                      18,
                      false
                    ],
                    null
                  ]
                ]
              ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
          },
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "concert_singer",
    "query": "SELECT name FROM stadium WHERE stadium_id NOT IN (SELECT stadium_id FROM concert)",
    "query_toks": [
      "SELECT",
      "name",
      "FROM",
      "stadium",
      "WHERE",
      "stadium_id",
      "NOT",
      "IN",
      "(",
      "SELECT",
      "stadium_id",
      "FROM",
      "concert",
      ")"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      "from",
      "stadium",
      "where",
      "stadium_id",
      "not",
      "in",
      "(",
      "select",
      "stadium_id",
      "from",
      "concert",
      ")"
    ],
    "question": "What are the names of the stadiums without any concerts?",
    "question_toks": [
      "What",
      "are",
      "the",
      "names",
      "of",
      "the",
      "stadiums",
      "without",
      "any",
      "concerts",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                3,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          true,
          8,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ],
          {
            "from": {
              "table_units": [
                [
                  "table_unit",
                  2
                ]
              ],
              "conds": []
            },
            "select": [
              false,
              [
                [
                  0,
                  [
                    0,
                    [
                      0,
                      18,
                      false
                    ],
                    null
                  ]
                ]
              ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
          },
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "concert_singer",
    "query": "SELECT country FROM singer WHERE age  >  40 INTERSECT SELECT country FROM singer WHERE age  <  30",
    "query_toks": [
      "SELECT",
      "country",
      "FROM",
      "singer",
      "WHERE",
      "age",
      ">",
      "40",
      "INTERSECT",
      "SELECT",
      "country",
      "FROM",
      "singer",
      "WHERE",
      "age",
      "<",
      "30"
    ],
    "query_toks_no_value": [
      "select",
      "country",
      "from",
      "singer",
      "where",
      "age",
      ">",
      "value",
      "intersect",
      "select",
      "country",
      "from",
      "singer",
      "where",
      "age",
      "<",
      "value"
    ],
    "question": "Show countries where a singer above age 40 and a singer below 30 are from.",
    "question_toks": [
      "Show",
      "countries",
      "where",
      "a",
      "singer",
      "above",
      "age",
      "40",
      "and",
      "a",
      "singer",
      "below",
      "30",
      "are",
      "from",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                10,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          3,
          [
            0,
            [
              0,
              13,
              false
            ],
            null
          ],
          40.0,
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": {
        "from": {
          "table_units": [
            [
              "table_unit",
              1
            ]
          ],
          "conds": []
        },
        "select": [
          false,
          [
            [
              0,
              [
                0,
                [
                  0,
                  10,
                  false
                ],
                null
              ]
            ]
          ]
        ],
        "where": [
          [
            false,
            4,
            [
              0,
              [
                0,
                13,
                false
              ],
              null
            ],
            30.0,
            null
          ]
        ],
        "groupBy": [],
        "having": [],
        "orderBy": [],
        "limit": null,
        "intersect": null,
        "union": null,
        "except": null
      },
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "concert_singer",
    "query": "SELECT name FROM stadium EXCEPT SELECT T2.name FROM concert AS T1 JOIN stadium AS T2 ON T1.stadium_id  =  T2.stadium_id WHERE T1.year  =  2014",
    "query_toks": [
      "SELECT",
      "name",
      "FROM",
      "stadium",
      "EXCEPT",
      "SELECT",
      "T2.name",
      "FROM",
      "concert",
      "AS",
      "T1",
      "JOIN",
      "stadium",
      "AS",
      "T2",
      "ON",
      "T1.stadium_id",
      "=",
      "T2.stadium_id",
      "WHERE",
      "T1.year",
      "=",
      "2014"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      "from",
      "stadium",
      "except",
      "select",
      "t2",
      ".",
      "name",
      "from",
      "concert",
      "as",
      "t1",
      "join",
      "stadium",
      "as",
      "t2",
      "on",
      "t1",
      ".",
      "stadium_id",
      "=",
      "t2",
      ".",
      "stadium_id",
      "where",
      "t1",
      ".",
      "year",
      "=",
      "value"
    ],
    "question": "Show names for all stadiums except for stadiums having a concert in year 2014.",
    "question_toks": [
      "Show",
      "names",
      "for",
      "all",
      "stadiums",
      "except",
      "for",
      "stadiums",
      "having",
      "a",
      "concert",
      "in",
      "year",
      "2014",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                3,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": {
        "from": {
          "table_units": [
            [
              "table_unit",
              2
            ],
            [
              "table_unit",
              0
            ]
          ],
          "conds": [
            [
              false,
              2,
              [
                0,
                [
                  0,
                  18,
                  false
                ],
                null
              ],
              [
                0,
                1,
                false
              ],
              null
            ]
          ]
        },
        "select": [
          false,
          [
            [
              0,
              [
                0,
                [
                  0,
                  3,
                  false
                ],
                null
              ]
            ]
          ]
        ],
        "where": [
          [
            false,
            2,
            [
              0,
              [
                0,
                19,
                false
              ],
              null
            ],
            2014.0,
            null
          ]
        ],
        "groupBy": [],
        "having": [],
        "orderBy": [],
        "limit": null,
        "intersect": null,
        "union": null,
        "except": null
      }
    }
  },
  {
    "db_id": "concert_singer",
    "query": "SELECT name FROM stadium EXCEPT SELECT T2.name FROM concert AS T1 JOIN stadium AS T2 ON T1.stadium_id  =  T2.stadium_id WHERE T1.year  =  2014",
    "query_toks": [
      "SELECT",
      "name",
      "FROM",
      "stadium",
      "EXCEPT",
      "SELECT",
      "T2.name",
      "FROM",
      "concert",
      "AS",
      "T1",
      "JOIN",
      "stadium",
      "AS",
      "T2",
      "ON",
      "T1.stadium_id",
      "=",
      "T2.stadium_id",
      "WHERE",
      "T1.year",
      "=",
      "2014"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      "from",
      "stadium",
      "except",
      "select",
      "t2",
      ".",
      "name",
      "from",
      "concert",
      "as",
      "t1",
      "join",
      "stadium",
      "as",
      "t2",
      "on",
      "t1",
      ".",
      "stadium_id",
      "=",
      "t2",
      ".",
      "stadium_id",
      "where",
      "t1",
      ".",
      "year",
      "=",
      "value"
    ],
    "question": "What are the names of all stadiums that did not have a concert in 2014?",
    "question_toks": [
      "What",
      "are",
      "the",
      "names",
      "of",
      "all",
      "stadiums",
      "that",
      "did",
      "not",
      "have",
      "a",
      "concert",
      "in",
      "2014",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                3,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": {
        "from": {
          "table_units": [
            [
              "table_unit",
              2
            ],
            [
              "table_unit",
              0
            ]
          ],
          "conds": [
            [
              false,
              2,
              [
                0,
                [
                  0,
                  18,
                  false
                ],
                null
              ],
              [
                0,
                1,
                false
              ],
              null
            ]
          ]
        },
        "select": [
          false,
          [
            [
              0,
              [
                0,
                [
                  0,
                  3,
                  false
                ],
                null
              ]
            ]
          ]
        ],
        "where": [
          [
            false,
            2,
            [
              0,
              [
                0,
                19,
                false
              ],
              null
            ],
            2014.0,
            null
          ]
        ],
        "groupBy": [],
        "having": [],
        "orderBy": [],
        "limit": null,
        "intersect": null,
        "union": null,
        "except": null
      }
    }
  },
  {
    "db_id": "concert_singer",
    "query": "SELECT T2.concert_name ,  T2.theme ,  count(*) FROM singer_in_concert AS T1 JOIN concert AS T2 ON T1.concert_id  =  T2.concert_id GROUP BY T2.concert_id",
    "query_toks": [
      "SELECT",
      "T2.concert_name",
      ",",
      "T2.theme",
      ",",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "singer_in_concert",
      "AS",
      "T1",
      "JOIN",
      "concert",
      "AS",
      "T2",
      "ON",
      "T1.concert_id",
      "=",
      "T2.concert_id",
      "GROUP",
      "BY",
      "T2.concert_id"
    ],
    "query_toks_no_value": [
      "select",
      "t2",
      ".",
      "concert_name",
      ",",
      "t2",
      ".",
      "theme",
      ",",
      "count",
      "(",
      "*",
      ")",
      "from",
      "singer_in_concert",
      "as",
      "t1",
      "join",
      "concert",
      "as",
      "t2",
      "on",
      "t1",
      ".",
      "concert_id",
      "=",
      "t2",
      ".",
      "concert_id",
      "group",
      "by",
      "t2",
      ".",
      "concert_id"
    ],
    "question": "Show the name and theme for all concerts and the number of singers in each concert.",
    "question_toks": [
      "Show",
      "the",
      "name",
      "and",
      "theme",
      "for",
      "all",
      "concerts",
      "and",
      "the",
      "number",
      "of",
      "singers",
      "in",
      "each",
      "concert",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            3
          ],
          [
            "table_unit",
            2
          ]
        ],
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                20,
                false
              ],
              null
            ],
            [
              0,
              15,
              false
            ],
            null
          ]
        ]
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                16,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                17,
                false
              ],
              null
            ]
          ],
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [
        [
          0,
          15,
          false
        ]
      ],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "concert_singer",
    "query": "select t2.concert_name ,  t2.theme ,  count(*) from singer_in_concert as t1 join concert as t2 on t1.concert_id  =  t2.concert_id group by t2.concert_id",
    "query_toks": [
      "select",
      "t2.concert_name",
      ",",
      "t2.theme",
      ",",
      "count",
      "(",
      "*",
      ")",
      "from",
      "singer_in_concert",
      "as",
      "t1",
      "join",
      "concert",
      "as",
      "t2",
      "on",
      "t1.concert_id",
      "=",
      "t2.concert_id",
      "group",
      "by",
      "t2.concert_id"
    ],
    "query_toks_no_value": [
      "select",
      "t2",
      ".",
      "concert_name",
      ",",
      "t2",
      ".",
      "theme",
      ",",
      "count",
      "(",
      "*",
      ")",
      "from",
      "singer_in_concert",
      "as",
      "t1",
      "join",
      "concert",
      "as",
      "t2",
      "on",
      "t1",
      ".",
      "concert_id",
      "=",
      "t2",
      ".",
      "concert_id",
      "group",
      "by",
      "t2",
      ".",
      "concert_id"
    ],
    "question": "What are the names , themes , and number of singers for every concert ?",
    "question_toks": [
      "What",
      "are",
      "the",
      "names",
      ",",
      "themes",
      ",",
      "and",
      "number",
      "of",
      "singers",
      "for",
      "every",
      "concert",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            3
          ],
          [
            "table_unit",
            2
          ]
        ],
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                20,
                false
              ],
              null
            ],
            [
              0,
              15,
              false
            ],
            null
          ]
        ]
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                16,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                17,
                false
              ],
              null
            ]
          ],
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [
        [
          0,
          15,
          false
        ]
      ],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "concert_singer",
    "query": "SELECT T2.name ,  count(*) FROM singer_in_concert AS T1 JOIN singer AS T2 ON T1.singer_id  =  T2.singer_id GROUP BY T2.singer_id",
    "query_toks": [
      "SELECT",
      "T2.name",
      ",",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "singer_in_concert",
      "AS",
      "T1",
      "JOIN",
      "singer",
      "AS",
      "T2",
      "ON",
      "T1.singer_id",
      "=",
      "T2.singer_id",
      "GROUP",
      "BY",
      "T2.singer_id"
    ],
    "query_toks_no_value": [
      "select",
      "t2",
      ".",
      "name",
      ",",
      "count",
      "(",
      "*",
      ")",
      "from",
      "singer_in_concert",
      "as",
      "t1",
      "join",
      "singer",
      "as",
      "t2",
      "on",
      "t1",
      ".",
      "singer_id",
      "=",
      "t2",
      ".",
      "singer_id",
      "group",
      "by",
      "t2",
      ".",
      "singer_id"
    ],
    "question": "List singer names and number of concerts for each singer.",
    "question_toks": [
      "List",
      "singer",
      "names",
      "and",
      "number",
      "of",
      "concerts",
      "for",
      "each",
      "singer",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            3
          ],
          [
            "table_unit",
            1
          ]
        ],
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                21,
                false
              ],
              null
            ],
            [
              0,
              8,
              false
            ],
            null
          ]
        ]
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                9,
                false
              ],
              null
            ]
          ],
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [
        [
          0,
          8,
          false
        ]
      ],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "concert_singer",
    "query": "SELECT T2.name ,  count(*) FROM singer_in_concert AS T1 JOIN singer AS T2 ON T1.singer_id  =  T2.singer_id GROUP BY T2.singer_id",
    "query_toks": [
      "SELECT",
      "T2.name",
      ",",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "singer_in_concert",
      "AS",
      "T1",
      "JOIN",
      "singer",
      "AS",
      "T2",
      "ON",
      "T1.singer_id",
      "=",
      "T2.singer_id",
      "GROUP",
      "BY",
      "T2.singer_id"
    ],
    "query_toks_no_value": [
      "select",
      "t2",
      ".",
      "name",
      ",",
      "count",
      "(",
      "*",
      ")",
      "from",
      "singer_in_concert",
      "as",
      "t1",
      "join",
      "singer",
      "as",
      "t2",
      "on",
      "t1",
      ".",
      "singer_id",
      "=",
      "t2",
      ".",
      "singer_id",
      "group",
      "by",
      "t2",
      ".",
      "singer_id"
    ],
    "question": "What are the names of the singers and number of concerts for each person?",
    "question_toks": [
      "What",
      "are",
      "the",
      "names",
      "of",
      "the",
      "singers",
      "and",
      "number",
      "of",
      "concerts",
      "for",
      "each",
      "person",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            3
          ],
          [
            "table_unit",
            1
          ]
        ],
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                21,
                false
              ],
              null
            ],
            [
              0,
              8,
              false
            ],
            null
          ]
        ]
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                9,
                false
              ],
              null
            ]
          ],
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [
        [
          0,
          8,
          false
        ]
      ],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "concert_singer",
    "query": "SELECT T2.name FROM singer_in_concert AS T1 JOIN singer AS T2 ON T1.singer_id  =  T2.singer_id JOIN concert AS T3 ON T1.concert_id  =  T3.concert_id WHERE T3.year  =  2014",
    "query_toks": [
      "SELECT",
      "T2.name",
      "FROM",
      "singer_in_concert",
      "AS",
      "T1",
      "JOIN",
      "singer",
      "AS",
      "T2",
      "ON",
      "T1.singer_id",
      "=",
      "T2.singer_id",
      "JOIN",
      "concert",
      "AS",
      "T3",
      "ON",
      "T1.concert_id",
      "=",
      "T3.concert_id",
      "WHERE",
      "T3.year",
      "=",
      "2014"
    ],
    "query_toks_no_value": [
      "select",
      "t2",
      ".",
      "name",
      "from",
      "singer_in_concert",
      "as",
      "t1",
      "join",
      "singer",
      "as",
      "t2",
      "on",
      "t1",
      ".",
      "singer_id",
      "=",
      "t2",
      ".",
      "singer_id",
      "join",
      "concert",
      "as",
      "t3",
      "on",
      "t1",
      ".",
      "concert_id",
      "=",
      "t3",
      ".",
      "concert_id",
      "where",
      "t3",
      ".",
      "year",
      "=",
      "value"
    ],
    "question": "List all singer names in concerts in year 2014.",
    "question_toks": [
      "List",
      "all",
      "singer",
      "names",
      "in",
      "concerts",
      "in",
      "year",
      "2014",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            3
          ],
          [
            "table_unit",
            1
          ],
          [
            "table_unit",
            2
          ]
        ],
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                21,
                false
              ],
              null
            ],
            [
              0,
              8,
              false
            ],
            null
          ],
          "and",
          [
            false,
            2,
            [
              0,
              [
                0,
                20,
                false
              ],
              null
            ],
            [
              0,
              15,
              false
            ],
            null
          ]
        ]
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                9,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              19,
              false
            ],
            null
          ],
          2014.0,
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "concert_singer",
    "query": "SELECT T2.name FROM singer_in_concert AS T1 JOIN singer AS T2 ON T1.singer_id  =  T2.singer_id JOIN concert AS T3 ON T1.concert_id  =  T3.concert_id WHERE T3.year  =  2014",
    "query_toks": [
      "SELECT",
      "T2.name",
      "FROM",
      "singer_in_concert",
      "AS",
      "T1",
      "JOIN",
      "singer",
      "AS",
      "T2",
      "ON",
      "T1.singer_id",
      "=",
      "T2.singer_id",
      "JOIN",
      "concert",
      "AS",
      "T3",
      "ON",
      "T1.concert_id",
      "=",
      "T3.concert_id",
      "WHERE",
      "T3.year",
      "=",
      "2014"
    ],
    "query_toks_no_value": [
      "select",
      "t2",
      ".",
      "name",
      "from",
      "singer_in_concert",
      "as",
      "t1",
      "join",
      "singer",
      "as",
      "t2",
      "on",
      "t1",
      ".",
      "singer_id",
      "=",
      "t2",
      ".",
      "singer_id",
      "join",
      "concert",
      "as",
      "t3",
      "on",
      "t1",
      ".",
      "concert_id",
      "=",
      "t3",
      ".",
      "concert_id",
      "where",
      "t3",
      ".",
      "year",
      "=",
      "value"
    ],
    "question": "What are the names of the singers who performed in a concert in 2014?",
    "question_toks": [
      "What",
      "are",
      "the",
      "names",
      "of",
      "the",
      "singers",
      "who",
      "performed",
      "in",
      "a",
      "concert",
      "in",
      "2014",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            3
          ],
          [
            "table_unit",
            1
          ],
          [
            "table_unit",
            2
          ]
        ],
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                21,
                false
              ],
              null
            ],
            [
              0,
              8,
              false
            ],
            null
          ],
          "and",
          [
            false,
            2,
            [
              0,
              [
                0,
                20,
                false
              ],
              null
            ],
            [
              0,
              15,
              false
            ],
            null
          ]
        ]
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                9,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              19,
              false
            ],
            null
          ],
          2014.0,
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "concert_singer",
    "query": "SELECT name ,  country FROM singer WHERE song_name LIKE '%Hey%'",
    "query_toks": [
      "SELECT",
      "name",
      ",",
      "country",
      "FROM",
      "singer",
      "WHERE",
      "song_name",
      "LIKE",
      "'",
      "%",
      "Hey",
      "%",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      ",",
      "country",
      "from",
      "singer",
      "where",
      "song_name",
      "like",
      "value"
    ],
    "question": "what is the name and nation of the singer who have a song having 'Hey' in its name?",
    "question_toks": [
      "what",
      "is",
      "the",
      "name",
      "and",
      "nation",
      "of",
      "the",
      "singer",
      "who",
      "have",
      "a",
      "song",
      "having",
      "'Hey",
      "'",
      "in",
      "its",
      "name",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                9,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                10,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          9,
          [
            0,
            [
              0,
              11,
              false
            ],
            null
          ],
          "\"%Hey%\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "concert_singer",
    "query": "SELECT name ,  country FROM singer WHERE song_name LIKE '%Hey%'",
    "query_toks": [
      "SELECT",
      "name",
      ",",
      "country",
      "FROM",
      "singer",
      "WHERE",
      "song_name",
      "LIKE",
      "'",
      "%",
      "Hey",
      "%",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      ",",
      "country",
      "from",
      "singer",
      "where",
      "song_name",
      "like",
      "value"
    ],
    "question": "What is the name and country of origin of every singer who has a song with the word 'Hey' in its title?",
    "question_toks": [
      "What",
      "is",
      "the",
      "name",
      "and",
      "country",
      "of",
      "origin",
      "of",
      "every",
      "singer",
      "who",
      "has",
      "a",
      "song",
      "with",
      "the",
      "word",
      "'Hey",
      "'",
      "in",
      "its",
      "title",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                9,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                10,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          9,
          [
            0,
            [
              0,
              11,
              false
            ],
            null
          ],
          "\"%Hey%\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "concert_singer",
    "query": "SELECT T2.name ,  T2.location FROM concert AS T1 JOIN stadium AS T2 ON T1.stadium_id  =  T2.stadium_id WHERE T1.Year  =  2014 INTERSECT SELECT T2.name ,  T2.location FROM concert AS T1 JOIN stadium AS T2 ON T1.stadium_id  =  T2.stadium_id WHERE T1.Year  =  2015",
    "query_toks": [
      "SELECT",
      "T2.name",
      ",",
      "T2.location",
      "FROM",
      "concert",
      "AS",
      "T1",
      "JOIN",
      "stadium",
      "AS",
      "T2",
      "ON",
      "T1.stadium_id",
      "=",
      "T2.stadium_id",
      "WHERE",
      "T1.Year",
      "=",
      "2014",
      "INTERSECT",
      "SELECT",
      "T2.name",
      ",",
      "T2.location",
      "FROM",
      "concert",
      "AS",
      "T1",
      "JOIN",
      "stadium",
      "AS",
      "T2",
      "ON",
      "T1.stadium_id",
      "=",
      "T2.stadium_id",
      "WHERE",
      "T1.Year",
      "=",
      "2015"
    ],
    "query_toks_no_value": [
      "select",
      "t2",
      ".",
      "name",
      ",",
      "t2",
      ".",
      "location",
      "from",
      "concert",
      "as",
      "t1",
      "join",
      "stadium",
      "as",
      "t2",
      "on",
      "t1",
      ".",
      "stadium_id",
      "=",
      "t2",
      ".",
      "stadium_id",
      "where",
      "t1",
      ".",
      "year",
      "=",
      "value",
      "intersect",
      "select",
      "t2",
      ".",
      "name",
      ",",
      "t2",
      ".",
      "location",
      "from",
      "concert",
      "as",
      "t1",
      "join",
      "stadium",
      "as",
      "t2",
      "on",
      "t1",
      ".",
      "stadium_id",
      "=",
      "t2",
      ".",
      "stadium_id",
      "where",
      "t1",
      ".",
      "year",
      "=",
      "value"
    ],
    "question": "Find the name and location of the stadiums which some concerts happened in the years of both 2014 and 2015.",
    "question_toks": [
      "Find",
      "the",
      "name",
      "and",
      "location",
      "of",
      "the",
      "stadiums",
      "which",
      "some",
      "concerts",
      "happened",
      "in",
      "the",
      "years",
      "of",
      "both",
      "2014",
      "and",
      "2015",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            2
          ],
          [
            "table_unit",
            0
          ]
        ],
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                18,
                false
              ],
              null
            ],
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                3,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                2,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              19,
              false
            ],
            null
          ],
          2014.0,
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": {
        "from": {
          "table_units": [
            [
              "table_unit",
              2
            ],
            [
              "table_unit",
              0
            ]
          ],
          "conds": [
            [
              false,
              2,
              [
                0,
                [
                  0,
                  18,
                  false
                ],
                null
              ],
              [
                0,
                1,
                false
              ],
              null
            ]
          ]
        },
        "select": [
          false,
          [
            [
              0,
              [
                0,
                [
                  0,
                  3,
                  false
                ],
                null
              ]
            ],
            [
              0,
              [
                0,
                [
                  0,
                  2,
                  false
                ],
                null
              ]
            ]
          ]
        ],
        "where": [
          [
            false,
            2,
            [
              0,
              [
                0,
                19,
                false
              ],
              null
            ],
            2015.0,
            null
          ]
        ],
        "groupBy": [],
        "having": [],
        "orderBy": [],
        "limit": null,
        "intersect": null,
        "union": null,
        "except": null
      },
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "concert_singer",
    "query": "SELECT T2.name ,  T2.location FROM concert AS T1 JOIN stadium AS T2 ON T1.stadium_id  =  T2.stadium_id WHERE T1.Year  =  2014 INTERSECT SELECT T2.name ,  T2.location FROM concert AS T1 JOIN stadium AS T2 ON T1.stadium_id  =  T2.stadium_id WHERE T1.Year  =  2015",
    "query_toks": [
      "SELECT",
      "T2.name",
      ",",
      "T2.location",
      "FROM",
      "concert",
      "AS",
      "T1",
      "JOIN",
      "stadium",
      "AS",
      "T2",
      "ON",
      "T1.stadium_id",
      "=",
      "T2.stadium_id",
      "WHERE",
      "T1.Year",
      "=",
      "2014",
      "INTERSECT",
      "SELECT",
      "T2.name",
      ",",
      "T2.location",
      "FROM",
      "concert",
      "AS",
      "T1",
      "JOIN",
      "stadium",
      "AS",
      "T2",
      "ON",
      "T1.stadium_id",
      "=",
      "T2.stadium_id",
      "WHERE",
      "T1.Year",
      "=",
      "2015"
    ],
    "query_toks_no_value": [
      "select",
      "t2",
      ".",
      "name",
      ",",
      "t2",
      ".",
      "location",
      "from",
      "concert",
      "as",
      "t1",
      "join",
      "stadium",
      "as",
      "t2",
      "on",
      "t1",
      ".",
      "stadium_id",
      "=",
      "t2",
      ".",
      "stadium_id",
      "where",
      "t1",
      ".",
      "year",
      "=",
      "value",
      "intersect",
      "select",
      "t2",
      ".",
      "name",
      ",",
      "t2",
      ".",
      "location",
      "from",
      "concert",
      "as",
      "t1",
      "join",
      "stadium",
      "as",
      "t2",
      "on",
      "t1",
      ".",
      "stadium_id",
      "=",
      "t2",
      ".",
      "stadium_id",
      "where",
      "t1",
      ".",
      "year",
      "=",
      "value"
    ],
    "question": "What are the names and locations of the stadiums that had concerts that occurred in both 2014 and 2015?",
    "question_toks": [
      "What",
      "are",
      "the",
      "names",
      "and",
      "locations",
      "of",
      "the",
      "stadiums",
      "that",
      "had",
      "concerts",
      "that",
      "occurred",
      "in",
      "both",
      "2014",
      "and",
      "2015",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            2
          ],
          [
            "table_unit",
            0
          ]
        ],
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                18,
                false
              ],
              null
            ],
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                3,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                2,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              19,
              false
            ],
            null
          ],
          2014.0,
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": {
        "from": {
          "table_units": [
            [
              "table_unit",
              2
            ],
            [
              "table_unit",
              0
            ]
          ],
          "conds": [
            [
              false,
              2,
              [
                0,
                [
                  0,
                  18,
                  false
                ],
                null
              ],
              [
                0,
                1,
                false
              ],
              null
            ]
          ]
        },
        "select": [
          false,
          [
            [
              0,
              [
                0,
                [
                  0,
                  3,
                  false
                ],
                null
              ]
            ],
            [
              0,
              [
                0,
                [
                  0,
                  2,
                  false
                ],
                null
              ]
            ]
          ]
        ],
        "where": [
          [
            false,
            2,
            [
              0,
              [
                0,
                19,
                false
              ],
              null
            ],
            2015.0,
            null
          ]
        ],
        "groupBy": [],
        "having": [],
        "orderBy": [],
        "limit": null,
        "intersect": null,
        "union": null,
        "except": null
      },
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "concert_singer",
    "query": "select count(*) from concert where stadium_id = (select stadium_id from stadium order by capacity desc limit 1)",
    "query_toks": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "concert",
      "where",
      "stadium_id",
      "=",
      "(",
      "select",
      "stadium_id",
      "from",
      "stadium",
      "order",
      "by",
      "capacity",
      "desc",
      "limit",
      "1",
      ")"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "concert",
      "where",
      "stadium_id",
      "=",
      "(",
      "select",
      "stadium_id",
      "from",
      "stadium",
      "order",
      "by",
      "capacity",
      "desc",
      "limit",
      "value",
      ")"
    ],
    "question": "Find the number of concerts happened in the stadium with the highest capacity .",
    "question_toks": [
      "Find",
      "the",
      "number",
      "of",
      "concerts",
      "happened",
      "in",
      "the",
      "stadium",
      "with",
      "the",
      "highest",
      "capacity",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            2
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              18,
              false
            ],
            null
          ],
          {
            "from": {
              "table_units": [
                [
                  "table_unit",
                  0
                ]
              ],
              "conds": []
            },
            "select": [
              false,
              [
                [
                  0,
                  [
                    0,
                    [
                      0,
                      1,
                      false
                    ],
                    null
                  ]
                ]
              ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [
              "desc",
              [
                [
                  0,
                  [
                    0,
                    4,
                    false
                  ],
                  null
                ]
              ]
            ],
            "limit": 1,
            "intersect": null,
            "union": null,
            "except": null
          },
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "concert_singer",
    "query": "select count(*) from concert where stadium_id = (select stadium_id from stadium order by capacity desc limit 1)",
    "query_toks": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "concert",
      "where",
      "stadium_id",
      "=",
      "(",
      "select",
      "stadium_id",
      "from",
      "stadium",
      "order",
      "by",
      "capacity",
      "desc",
      "limit",
      "1",
      ")"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "concert",
      "where",
      "stadium_id",
      "=",
      "(",
      "select",
      "stadium_id",
      "from",
      "stadium",
      "order",
      "by",
      "capacity",
      "desc",
      "limit",
      "value",
      ")"
    ],
    "question": "What are the number of concerts that occurred in the stadium with the largest capacity ?",
    "question_toks": [
      "What",
      "are",
      "the",
      "number",
      "of",
      "concerts",
      "that",
      "occurred",
      "in",
      "the",
      "stadium",
      "with",
      "the",
      "largest",
      "capacity",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            2
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              18,
              false
            ],
            null
          ],
          {
            "from": {
              "table_units": [
                [
                  "table_unit",
                  0
                ]
              ],
              "conds": []
            },
            "select": [
              false,
              [
                [
                  0,
                  [
                    0,
                    [
                      0,
                      1,
                      false
                    ],
                    null
                  ]
                ]
              ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [
              "desc",
              [
                [
                  0,
                  [
                    0,
                    4,
                    false
                  ],
                  null
                ]
              ]
            ],
            "limit": 1,
            "intersect": null,
            "union": null,
            "except": null
          },
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "pets_1",
    "query": "SELECT count(*) FROM pets WHERE weight  >  10",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "pets",
      "WHERE",
      "weight",
      ">",
      "10"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "pets",
      "where",
      "weight",
      ">",
      "value"
    ],
    "question": "Find the number of pets whose weight is heavier than 10.",
    "question_toks": [
      "Find",
      "the",
      "number",
      "of",
      "pets",
      "whose",
      "weight",
      "is",
      "heavier",
      "than",
      "10",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            2
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          3,
          [
            0,
            [
              0,
              14,
              false
            ],
            null
          ],
          10.0,
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "pets_1",
    "query": "SELECT count(*) FROM pets WHERE weight  >  10",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "pets",
      "WHERE",
      "weight",
      ">",
      "10"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "pets",
      "where",
      "weight",
      ">",
      "value"
    ],
    "question": "How many pets have a greater weight than 10?",
    "question_toks": [
      "How",
      "many",
      "pets",
      "have",
      "a",
      "greater",
      "weight",
      "than",
      "10",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            2
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          3,
          [
            0,
            [
              0,
              14,
              false
            ],
            null
          ],
          10.0,
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "pets_1",
    "query": "SELECT weight FROM pets ORDER BY pet_age LIMIT 1",
    "query_toks": [
      "SELECT",
      "weight",
      "FROM",
      "pets",
      "ORDER",
      "BY",
      "pet_age",
      "LIMIT",
      "1"
    ],
    "query_toks_no_value": [
      "select",
      "weight",
      "from",
      "pets",
      "order",
      "by",
      "pet_age",
      "limit",
      "value"
    ],
    "question": "Find the weight of the youngest dog.",
    "question_toks": [
      "Find",
      "the",
      "weight",
      "of",
      "the",
      "youngest",
      "dog",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            2
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                14,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [
        "asc",
        [
          [
            0,
            [
              0,
              13,
              false
            ],
            null
          ]
        ]
      ],
      "limit": 1,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "pets_1",
    "query": "SELECT weight FROM pets ORDER BY pet_age LIMIT 1",
    "query_toks": [
      "SELECT",
      "weight",
      "FROM",
      "pets",
      "ORDER",
      "BY",
      "pet_age",
      "LIMIT",
      "1"
    ],
    "query_toks_no_value": [
      "select",
      "weight",
      "from",
      "pets",
      "order",
      "by",
      "pet_age",
      "limit",
      "value"
    ],
    "question": "How much does the youngest dog weigh?",
    "question_toks": [
      "How",
      "much",
      "does",
      "the",
      "youngest",
      "dog",
      "weigh",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            2
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                14,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [
        "asc",
        [
          [
            0,
            [
              0,
              13,
              false
            ],
            null
          ]
        ]
      ],
      "limit": 1,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "pets_1",
    "query": "SELECT max(weight) ,  petType FROM pets GROUP BY petType",
    "query_toks": [
      "SELECT",
      "max",
      "(",
      "weight",
      ")",
      ",",
      "petType",
      "FROM",
      "pets",
      "GROUP",
      "BY",
      "petType"
    ],
    "query_toks_no_value": [
      "select",
      "max",
      "(",
      "weight",
      ")",
      ",",
      "pettype",
      "from",
      "pets",
      "group",
      "by",
      "pettype"
    ],
    "question": "Find the maximum weight for each type of pet. List the maximum weight and pet type.",
    "question_toks": [
      "Find",
      "the",
      "maximum",
      "weight",
      "for",
      "each",
      "type",
      "of",
      "pet",
      ".",
      "List",
      "the",
      "maximum",
      "weight",
      "and",
      "pet",
      "type",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            2
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            1,
            [
              0,
              [
                0,
                14,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                12,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [
        [
          0,
          12,
          false
        ]
      ],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "pets_1",
    "query": "SELECT max(weight) ,  petType FROM pets GROUP BY petType",
    "query_toks": [
      "SELECT",
      "max",
      "(",
      "weight",
      ")",
      ",",
      "petType",
      "FROM",
      "pets",
      "GROUP",
      "BY",
      "petType"
    ],
    "query_toks_no_value": [
      "select",
      "max",
      "(",
      "weight",
      ")",
      ",",
      "pettype",
      "from",
      "pets",
      "group",
      "by",
      "pettype"
    ],
    "question": "List the maximum weight and type for each type of pet.",
    "question_toks": [
      "List",
      "the",
      "maximum",
      "weight",
      "and",
      "type",
      "for",
      "each",
      "type",
      "of",
      "pet",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            2
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            1,
            [
              0,
              [
                0,
                14,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                12,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [
        [
          0,
          12,
          false
        ]
      ],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "pets_1",
    "query": "SELECT count(*) FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid WHERE T1.age  >  20",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "student",
      "AS",
      "T1",
      "JOIN",
      "has_pet",
      "AS",
      "T2",
      "ON",
      "T1.stuid",
      "=",
      "T2.stuid",
      "WHERE",
      "T1.age",
      ">",
      "20"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "student",
      "as",
      "t1",
      "join",
      "has_pet",
      "as",
      "t2",
      "on",
      "t1",
      ".",
      "stuid",
      "=",
      "t2",
      ".",
      "stuid",
      "where",
      "t1",
      ".",
      "age",
      ">",
      "value"
    ],
    "question": "Find number of pets owned by students who are older than 20.",
    "question_toks": [
      "Find",
      "number",
      "of",
      "pets",
      "owned",
      "by",
      "students",
      "who",
      "are",
      "older",
      "than",
      "20",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ],
          [
            "table_unit",
            1
          ]
        ],
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                1,
                false
              ],
              null
            ],
            [
              0,
              9,
              false
            ],
            null
          ]
        ]
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          3,
          [
            0,
            [
              0,
              4,
              false
            ],
            null
          ],
          20.0,
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "pets_1",
    "query": "SELECT count(*) FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid WHERE T1.age  >  20",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "student",
      "AS",
      "T1",
      "JOIN",
      "has_pet",
      "AS",
      "T2",
      "ON",
      "T1.stuid",
      "=",
      "T2.stuid",
      "WHERE",
      "T1.age",
      ">",
      "20"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "student",
      "as",
      "t1",
      "join",
      "has_pet",
      "as",
      "t2",
      "on",
      "t1",
      ".",
      "stuid",
      "=",
      "t2",
      ".",
      "stuid",
      "where",
      "t1",
      ".",
      "age",
      ">",
      "value"
    ],
    "question": "How many pets are owned by students that have an age greater than 20?",
    "question_toks": [
      "How",
      "many",
      "pets",
      "are",
      "owned",
      "by",
      "students",
      "that",
      "have",
      "an",
      "age",
      "greater",
      "than",
      "20",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ],
          [
            "table_unit",
            1
          ]
        ],
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                1,
                false
              ],
              null
            ],
            [
              0,
              9,
              false
            ],
            null
          ]
        ]
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          3,
          [
            0,
            [
              0,
              4,
              false
            ],
            null
          ],
          20.0,
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "pets_1",
    "query": "SELECT count(*) FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T2.petid  =  T3.petid WHERE T1.sex  =  'F' AND T3.pettype  =  'dog'",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "student",
      "AS",
      "T1",
      "JOIN",
      "has_pet",
      "AS",
      "T2",
      "ON",
      "T1.stuid",
      "=",
      "T2.stuid",
      "JOIN",
      "pets",
      "AS",
      "T3",
      "ON",
      "T2.petid",
      "=",
      "T3.petid",
      "WHERE",
      "T1.sex",
      "=",
      "'F",
      "'",
      "AND",
      "T3.pettype",
      "=",
      "'dog",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "student",
      "as",
      "t1",
      "join",
      "has_pet",
      "as",
      "t2",
      "on",
      "t1",
      ".",
      "stuid",
      "=",
      "t2",
      ".",
      "stuid",
      "join",
      "pets",
      "as",
      "t3",
      "on",
      "t2",
      ".",
      "petid",
      "=",
      "t3",
      ".",
      "petid",
      "where",
      "t1",
      ".",
      "sex",
      "=",
      "value",
      "and",
      "t3",
      ".",
      "pettype",
      "=",
      "value"
    ],
    "question": "Find the number of dog pets that are raised by female students (with sex F).",
    "question_toks": [
      "Find",
      "the",
      "number",
      "of",
      "dog",
      "pets",
      "that",
      "are",
      "raised",
      "by",
      "female",
      "students",
      "(",
      "with",
      "sex",
      "F",
      ")",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ],
          [
            "table_unit",
            1
          ],
          [
            "table_unit",
            2
          ]
        ],
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                1,
                false
              ],
              null
            ],
            [
              0,
              9,
              false
            ],
            null
          ],
          "and",
          [
            false,
            2,
            [
              0,
              [
                0,
                10,
                false
              ],
              null
            ],
            [
              0,
              11,
              false
            ],
            null
          ]
        ]
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              5,
              false
            ],
            null
          ],
          "\"F\"",
          null
        ],
        "and",
        [
          false,
          2,
          [
            0,
            [
              0,
              12,
              false
            ],
            null
          ],
          "\"dog\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "pets_1",
    "query": "SELECT count(*) FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T2.petid  =  T3.petid WHERE T1.sex  =  'F' AND T3.pettype  =  'dog'",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "student",
      "AS",
      "T1",
      "JOIN",
      "has_pet",
      "AS",
      "T2",
      "ON",
      "T1.stuid",
      "=",
      "T2.stuid",
      "JOIN",
      "pets",
      "AS",
      "T3",
      "ON",
      "T2.petid",
      "=",
      "T3.petid",
      "WHERE",
      "T1.sex",
      "=",
      "'F",
      "'",
      "AND",
      "T3.pettype",
      "=",
      "'dog",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "student",
      "as",
      "t1",
      "join",
      "has_pet",
      "as",
      "t2",
      "on",
      "t1",
      ".",
      "stuid",
      "=",
      "t2",
      ".",
      "stuid",
      "join",
      "pets",
      "as",
      "t3",
      "on",
      "t2",
      ".",
      "petid",
      "=",
      "t3",
      ".",
      "petid",
      "where",
      "t1",
      ".",
      "sex",
      "=",
      "value",
      "and",
      "t3",
      ".",
      "pettype",
      "=",
      "value"
    ],
    "question": "How many dog pets are raised by female students?",
    "question_toks": [
      "How",
      "many",
      "dog",
      "pets",
      "are",
      "raised",
      "by",
      "female",
      "students",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ],
          [
            "table_unit",
            1
          ],
          [
            "table_unit",
            2
          ]
        ],
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                1,
                false
              ],
              null
            ],
            [
              0,
              9,
              false
            ],
            null
          ],
          "and",
          [
            false,
            2,
            [
              0,
              [
                0,
                10,
                false
              ],
              null
            ],
            [
              0,
              11,
              false
            ],
            null
          ]
        ]
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              5,
              false
            ],
            null
          ],
          "\"F\"",
          null
        ],
        "and",
        [
          false,
          2,
          [
            0,
            [
              0,
              12,
              false
            ],
            null
          ],
          "\"dog\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "pets_1",
    "query": "SELECT count(DISTINCT pettype) FROM pets",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "DISTINCT",
      "pettype",
      ")",
      "FROM",
      "pets"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "distinct",
      "pettype",
      ")",
      "from",
      "pets"
    ],
    "question": "Find the number of distinct type of pets.",
    "question_toks": [
      "Find",
      "the",
      "number",
      "of",
      "distinct",
      "type",
      "of",
      "pets",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            2
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                12,
                true
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "pets_1",
    "query": "SELECT count(DISTINCT pettype) FROM pets",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "DISTINCT",
      "pettype",
      ")",
      "FROM",
      "pets"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "distinct",
      "pettype",
      ")",
      "from",
      "pets"
    ],
    "question": "How many different types of pet are there?",
    "question_toks": [
      "How",
      "many",
      "different",
      "types",
      "of",
      "pet",
      "are",
      "there",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            2
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                12,
                true
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "pets_1",
    "query": "SELECT DISTINCT T1.Fname FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'cat' OR T3.pettype  =  'dog'",
    "query_toks": [
      "SELECT",
      "DISTINCT",
      "T1.Fname",
      "FROM",
      "student",
      "AS",
      "T1",
      "JOIN",
      "has_pet",
      "AS",
      "T2",
      "ON",
      "T1.stuid",
      "=",
      "T2.stuid",
      "JOIN",
      "pets",
      "AS",
      "T3",
      "ON",
      "T3.petid",
      "=",
      "T2.petid",
      "WHERE",
      "T3.pettype",
      "=",
      "'cat",
      "'",
      "OR",
      "T3.pettype",
      "=",
      "'dog",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "distinct",
      "t1",
      ".",
      "fname",
      "from",
      "student",
      "as",
      "t1",
      "join",
      "has_pet",
      "as",
      "t2",
      "on",
      "t1",
      ".",
      "stuid",
      "=",
      "t2",
      ".",
      "stuid",
      "join",
      "pets",
      "as",
      "t3",
      "on",
      "t3",
      ".",
      "petid",
      "=",
      "t2",
      ".",
      "petid",
      "where",
      "t3",
      ".",
      "pettype",
      "=",
      "value",
      "or",
      "t3",
      ".",
      "pettype",
      "=",
      "value"
    ],
    "question": "Find the first name of students who have cat or dog pet.",
    "question_toks": [
      "Find",
      "the",
      "first",
      "name",
      "of",
      "students",
      "who",
      "have",
      "cat",
      "or",
      "dog",
      "pet",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ],
          [
            "table_unit",
            1
          ],
          [
            "table_unit",
            2
          ]
        ],
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                1,
                false
              ],
              null
            ],
            [
              0,
              9,
              false
            ],
            null
          ],
          "and",
          [
            false,
            2,
            [
              0,
              [
                0,
                11,
                false
              ],
              null
            ],
            [
              0,
              10,
              false
            ],
            null
          ]
        ]
      },
      "select": [
        true,
        [
          [
            0,
            [
              0,
              [
                0,
                3,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              12,
              false
            ],
            null
          ],
          "\"cat\"",
          null
        ],
        "or",
        [
          false,
          2,
          [
            0,
            [
              0,
              12,
              false
            ],
            null
          ],
          "\"dog\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "pets_1",
    "query": "SELECT DISTINCT T1.Fname FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'cat' OR T3.pettype  =  'dog'",
    "query_toks": [
      "SELECT",
      "DISTINCT",
      "T1.Fname",
      "FROM",
      "student",
      "AS",
      "T1",
      "JOIN",
      "has_pet",
      "AS",
      "T2",
      "ON",
      "T1.stuid",
      "=",
      "T2.stuid",
      "JOIN",
      "pets",
      "AS",
      "T3",
      "ON",
      "T3.petid",
      "=",
      "T2.petid",
      "WHERE",
      "T3.pettype",
      "=",
      "'cat",
      "'",
      "OR",
      "T3.pettype",
      "=",
      "'dog",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "distinct",
      "t1",
      ".",
      "fname",
      "from",
      "student",
      "as",
      "t1",
      "join",
      "has_pet",
      "as",
      "t2",
      "on",
      "t1",
      ".",
      "stuid",
      "=",
      "t2",
      ".",
      "stuid",
      "join",
      "pets",
      "as",
      "t3",
      "on",
      "t3",
      ".",
      "petid",
      "=",
      "t2",
      ".",
      "petid",
      "where",
      "t3",
      ".",
      "pettype",
      "=",
      "value",
      "or",
      "t3",
      ".",
      "pettype",
      "=",
      "value"
    ],
    "question": "What are the first names of every student who has a cat or dog as a pet?",
    "question_toks": [
      "What",
      "are",
      "the",
      "first",
      "names",
      "of",
      "every",
      "student",
      "who",
      "has",
      "a",
      "cat",
      "or",
      "dog",
      "as",
      "a",
      "pet",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ],
          [
            "table_unit",
            1
          ],
          [
            "table_unit",
            2
          ]
        ],
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                1,
                false
              ],
              null
            ],
            [
              0,
              9,
              false
            ],
            null
          ],
          "and",
          [
            false,
            2,
            [
              0,
              [
                0,
                11,
                false
              ],
              null
            ],
            [
              0,
              10,
              false
            ],
            null
          ]
        ]
      },
      "select": [
        true,
        [
          [
            0,
            [
              0,
              [
                0,
                3,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              12,
              false
            ],
            null
          ],
          "\"cat\"",
          null
        ],
        "or",
        [
          false,
          2,
          [
            0,
            [
              0,
              12,
              false
            ],
            null
          ],
          "\"dog\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "pets_1",
    "query": "select t1.fname from student as t1 join has_pet as t2 on t1.stuid  =  t2.stuid join pets as t3 on t3.petid  =  t2.petid where t3.pettype  =  'cat' intersect select t1.fname from student as t1 join has_pet as t2 on t1.stuid  =  t2.stuid join pets as t3 on t3.petid  =  t2.petid where t3.pettype  =  'dog'",
    "query_toks": [
      "select",
      "t1.fname",
      "from",
      "student",
      "as",
      "t1",
      "join",
      "has_pet",
      "as",
      "t2",
      "on",
      "t1.stuid",
      "=",
      "t2.stuid",
      "join",
      "pets",
      "as",
      "t3",
      "on",
      "t3.petid",
      "=",
      "t2.petid",
      "where",
      "t3.pettype",
      "=",
      "\"cat\"",
      "intersect",
      "select",
      "t1.fname",
      "from",
      "student",
      "as",
      "t1",
      "join",
      "has_pet",
      "as",
      "t2",
      "on",
      "t1.stuid",
      "=",
      "t2.stuid",
      "join",
      "pets",
      "as",
      "t3",
      "on",
      "t3.petid",
      "=",
      "t2.petid",
      "where",
      "t3.pettype",
      "=",
      "\"dog\""
    ],
    "query_toks_no_value": [
      "select",
      "t1",
      ".",
      "fname",
      "from",
      "student",
      "as",
      "t1",
      "join",
      "has_pet",
      "as",
      "t2",
      "on",
      "t1",
      ".",
      "stuid",
      "=",
      "t2",
      ".",
      "stuid",
      "join",
      "pets",
      "as",
      "t3",
      "on",
      "t3",
      ".",
      "petid",
      "=",
      "t2",
      ".",
      "petid",
      "where",
      "t3",
      ".",
      "pettype",
      "=",
      "value",
      "intersect",
      "select",
      "t1",
      ".",
      "fname",
      "from",
      "student",
      "as",
      "t1",
      "join",
      "has_pet",
      "as",
      "t2",
      "on",
      "t1",
      ".",
      "stuid",
      "=",
      "t2",
      ".",
      "stuid",
      "join",
      "pets",
      "as",
      "t3",
      "on",
      "t3",
      ".",
      "petid",
      "=",
      "t2",
      ".",
      "petid",
      "where",
      "t3",
      ".",
      "pettype",
      "=",
      "value"
    ],
    "question": "Find the first name of students who have both cat and dog pets .",
    "question_toks": [
      "Find",
      "the",
      "first",
      "name",
      "of",
      "students",
      "who",
      "have",
      "both",
      "cat",
      "and",
      "dog",
      "pets",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ],
          [
            "table_unit",
            1
          ],
          [
            "table_unit",
            2
          ]
        ],
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                1,
                false
              ],
              null
            ],
            [
              0,
              9,
              false
            ],
            null
          ],
          "and",
          [
            false,
            2,
            [
              0,
              [
                0,
                11,
                false
              ],
              null
            ],
            [
              0,
              10,
              false
            ],
            null
          ]
        ]
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                3,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              12,
              false
            ],
            null
          ],
          "\"cat\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": {
        "from": {
          "table_units": [
            [
              "table_unit",
              0
            ],
            [
              "table_unit",
              1
            ],
            [
              "table_unit",
              2
            ]
          ],
          "conds": [
            [
              false,
              2,
              [
                0,
                [
                  0,
                  1,
                  false
                ],
                null
              ],
              [
                0,
                9,
                false
              ],
              null
            ],
            "and",
            [
              false,
              2,
              [
                0,
                [
                  0,
                  11,
                  false
                ],
                null
              ],
              [
                0,
                10,
                false
              ],
              null
            ]
          ]
        },
        "select": [
          false,
          [
            [
              0,
              [
                0,
                [
                  0,
                  3,
                  false
                ],
                null
              ]
            ]
          ]
        ],
        "where": [
          [
            false,
            2,
            [
              0,
              [
                0,
                12,
                false
              ],
              null
            ],
            "\"dog\"",
            null
          ]
        ],
        "groupBy": [],
        "having": [],
        "orderBy": [],
        "limit": null,
        "intersect": null,
        "union": null,
        "except": null
      },
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "pets_1",
    "query": "SELECT T1.Fname FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'cat' INTERSECT SELECT T1.Fname FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'dog'",
    "query_toks": [
      "SELECT",
      "T1.Fname",
      "FROM",
      "student",
      "AS",
      "T1",
      "JOIN",
      "has_pet",
      "AS",
      "T2",
      "ON",
      "T1.stuid",
      "=",
      "T2.stuid",
      "JOIN",
      "pets",
      "AS",
      "T3",
      "ON",
      "T3.petid",
      "=",
      "T2.petid",
      "WHERE",
      "T3.pettype",
      "=",
      "'cat",
      "'",
      "INTERSECT",
      "SELECT",
      "T1.Fname",
      "FROM",
      "student",
      "AS",
      "T1",
      "JOIN",
      "has_pet",
      "AS",
      "T2",
      "ON",
      "T1.stuid",
      "=",
      "T2.stuid",
      "JOIN",
      "pets",
      "AS",
      "T3",
      "ON",
      "T3.petid",
      "=",
      "T2.petid",
      "WHERE",
      "T3.pettype",
      "=",
      "'dog",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "t1",
      ".",
      "fname",
      "from",
      "student",
      "as",
      "t1",
      "join",
      "has_pet",
      "as",
      "t2",
      "on",
      "t1",
      ".",
      "stuid",
      "=",
      "t2",
      ".",
      "stuid",
      "join",
      "pets",
      "as",
      "t3",
      "on",
      "t3",
      ".",
      "petid",
      "=",
      "t2",
      ".",
      "petid",
      "where",
      "t3",
      ".",
      "pettype",
      "=",
      "value",
      "intersect",
      "select",
      "t1",
      ".",
      "fname",
      "from",
      "student",
      "as",
      "t1",
      "join",
      "has_pet",
      "as",
      "t2",
      "on",
      "t1",
      ".",
      "stuid",
      "=",
      "t2",
      ".",
      "stuid",
      "join",
      "pets",
      "as",
      "t3",
      "on",
      "t3",
      ".",
      "petid",
      "=",
      "t2",
      ".",
      "petid",
      "where",
      "t3",
      ".",
      "pettype",
      "=",
      "value"
    ],
    "question": "What are the students' first names who have both cats and dogs as pets?",
    "question_toks": [
      "What",
      "are",
      "the",
      "students",
      "'",
      "first",
      "names",
      "who",
      "have",
      "both",
      "cats",
      "and",
      "dogs",
      "as",
      "pets",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ],
          [
            "table_unit",
            1
          ],
          [
            "table_unit",
            2
          ]
        ],
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                1,
                false
              ],
              null
            ],
            [
              0,
              9,
              false
            ],
            null
          ],
          "and",
          [
            false,
            2,
            [
              0,
              [
                0,
                11,
                false
              ],
              null
            ],
            [
              0,
              10,
              false
            ],
            null
          ]
        ]
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                3,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              12,
              false
            ],
            null
          ],
          "\"cat\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": {
        "from": {
          "table_units": [
            [
              "table_unit",
              0
            ],
            [
              "table_unit",
              1
            ],
            [
              "table_unit",
              2
            ]
          ],
          "conds": [
            [
              false,
              2,
              [
                0,
                [
                  0,
                  1,
                  false
                ],
                null
              ],
              [
                0,
                9,
                false
              ],
              null
            ],
            "and",
            [
              false,
              2,
              [
                0,
                [
                  0,
                  11,
                  false
                ],
                null
              ],
              [
                0,
                10,
                false
              ],
              null
            ]
          ]
        },
        "select": [
          false,
          [
            [
              0,
              [
                0,
                [
                  0,
                  3,
                  false
                ],
                null
              ]
            ]
          ]
        ],
        "where": [
          [
            false,
            2,
            [
              0,
              [
                0,
                12,
                false
              ],
              null
            ],
            "\"dog\"",
            null
          ]
        ],
        "groupBy": [],
        "having": [],
        "orderBy": [],
        "limit": null,
        "intersect": null,
        "union": null,
        "except": null
      },
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "pets_1",
    "query": "SELECT major ,  age FROM student WHERE stuid NOT IN (SELECT T1.stuid FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'cat')",
    "query_toks": [
      "SELECT",
      "major",
      ",",
      "age",
      "FROM",
      "student",
      "WHERE",
      "stuid",
      "NOT",
      "IN",
      "(",
      "SELECT",
      "T1.stuid",
      "FROM",
      "student",
      "AS",
      "T1",
      "JOIN",
      "has_pet",
      "AS",
      "T2",
      "ON",
      "T1.stuid",
      "=",
      "T2.stuid",
      "JOIN",
      "pets",
      "AS",
      "T3",
      "ON",
      "T3.petid",
      "=",
      "T2.petid",
      "WHERE",
      "T3.pettype",
      "=",
      "'cat",
      "'",
      ")"
    ],
    "query_toks_no_value": [
      "select",
      "major",
      ",",
      "age",
      "from",
      "student",
      "where",
      "stuid",
      "not",
      "in",
      "(",
      "select",
      "t1",
      ".",
      "stuid",
      "from",
      "student",
      "as",
      "t1",
      "join",
      "has_pet",
      "as",
      "t2",
      "on",
      "t1",
      ".",
      "stuid",
      "=",
      "t2",
      ".",
      "stuid",
      "join",
      "pets",
      "as",
      "t3",
      "on",
      "t3",
      ".",
      "petid",
      "=",
      "t2",
      ".",
      "petid",
      "where",
      "t3",
      ".",
      "pettype",
      "=",
      "value",
      ")"
    ],
    "question": "Find the major and age of students who do not have a cat pet.",
    "question_toks": [
      "Find",
      "the",
      "major",
      "and",
      "age",
      "of",
      "students",
      "who",
      "do",
      "not",
      "have",
      "a",
      "cat",
      "pet",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                6,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                4,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          true,
          8,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ],
          {
            "from": {
              "table_units": [
                [
                  "table_unit",
                  0
                ],
                [
                  "table_unit",
                  1
                ],
                [
                  "table_unit",
                  2
                ]
              ],
              "conds": [
                [
                  false,
                  2,
                  [
                    0,
                    [
                      0,
                      1,
                      false
                    ],
                    null
                  ],
                  [
                    0,
                    9,
                    false
                  ],
                  null
                ],
                "and",
                [
                  false,
                  2,
                  [
                    0,
                    [
                      0,
                      11,
                      false
                    ],
                    null
                  ],
                  [
                    0,
                    10,
                    false
                  ],
                  null
                ]
              ]
            },
            "select": [
              false,
              [
                [
                  0,
                  [
                    0,
                    [
                      0,
                      1,
                      false
                    ],
                    null
                  ]
                ]
              ]
            ],
            "where": [
              [
                false,
                2,
                [
                  0,
                  [
                    0,
                    12,
                    false
                  ],
                  null
                ],
                "\"cat\"",
                null
              ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
          },
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "pets_1",
    "query": "SELECT major ,  age FROM student WHERE stuid NOT IN (SELECT T1.stuid FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'cat')",
    "query_toks": [
      "SELECT",
      "major",
      ",",
      "age",
      "FROM",
      "student",
      "WHERE",
      "stuid",
      "NOT",
      "IN",
      "(",
      "SELECT",
      "T1.stuid",
      "FROM",
      "student",
      "AS",
      "T1",
      "JOIN",
      "has_pet",
      "AS",
      "T2",
      "ON",
      "T1.stuid",
      "=",
      "T2.stuid",
      "JOIN",
      "pets",
      "AS",
      "T3",
      "ON",
      "T3.petid",
      "=",
      "T2.petid",
      "WHERE",
      "T3.pettype",
      "=",
      "'cat",
      "'",
      ")"
    ],
    "query_toks_no_value": [
      "select",
      "major",
      ",",
      "age",
      "from",
      "student",
      "where",
      "stuid",
      "not",
      "in",
      "(",
      "select",
      "t1",
      ".",
      "stuid",
      "from",
      "student",
      "as",
      "t1",
      "join",
      "has_pet",
      "as",
      "t2",
      "on",
      "t1",
      ".",
      "stuid",
      "=",
      "t2",
      ".",
      "stuid",
      "join",
      "pets",
      "as",
      "t3",
      "on",
      "t3",
      ".",
      "petid",
      "=",
      "t2",
      ".",
      "petid",
      "where",
      "t3",
      ".",
      "pettype",
      "=",
      "value",
      ")"
    ],
    "question": "What major is every student who does not own a cat as a pet, and also how old are they?",
    "question_toks": [
      "What",
      "major",
      "is",
      "every",
      "student",
      "who",
      "does",
      "not",
      "own",
      "a",
      "cat",
      "as",
      "a",
      "pet",
      ",",
      "and",
      "also",
      "how",
      "old",
      "are",
      "they",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                6,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                4,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          true,
          8,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ],
          {
            "from": {
              "table_units": [
                [
                  "table_unit",
                  0
                ],
                [
                  "table_unit",
                  1
                ],
                [
                  "table_unit",
                  2
                ]
              ],
              "conds": [
                [
                  false,
                  2,
                  [
                    0,
                    [
                      0,
                      1,
                      false
                    ],
                    null
                  ],
                  [
                    0,
                    9,
                    false
                  ],
                  null
                ],
                "and",
                [
                  false,
                  2,
                  [
                    0,
                    [
                      0,
                      11,
                      false
                    ],
                    null
                  ],
                  [
                    0,
                    10,
                    false
                  ],
                  null
                ]
              ]
            },
            "select": [
              false,
              [
                [
                  0,
                  [
                    0,
                    [
                      0,
                      1,
                      false
                    ],
                    null
                  ]
                ]
              ]
            ],
            "where": [
              [
                false,
                2,
                [
                  0,
                  [
                    0,
                    12,
                    false
                  ],
                  null
                ],
                "\"cat\"",
                null
              ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
          },
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "pets_1",
    "query": "SELECT stuid FROM student EXCEPT SELECT T1.stuid FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'cat'",
    "query_toks": [
      "SELECT",
      "stuid",
      "FROM",
      "student",
      "EXCEPT",
      "SELECT",
      "T1.stuid",
      "FROM",
      "student",
      "AS",
      "T1",
      "JOIN",
      "has_pet",
      "AS",
      "T2",
      "ON",
      "T1.stuid",
      "=",
      "T2.stuid",
      "JOIN",
      "pets",
      "AS",
      "T3",
      "ON",
      "T3.petid",
      "=",
      "T2.petid",
      "WHERE",
      "T3.pettype",
      "=",
      "'cat",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "stuid",
      "from",
      "student",
      "except",
      "select",
      "t1",
      ".",
      "stuid",
      "from",
      "student",
      "as",
      "t1",
      "join",
      "has_pet",
      "as",
      "t2",
      "on",
      "t1",
      ".",
      "stuid",
      "=",
      "t2",
      ".",
      "stuid",
      "join",
      "pets",
      "as",
      "t3",
      "on",
      "t3",
      ".",
      "petid",
      "=",
      "t2",
      ".",
      "petid",
      "where",
      "t3",
      ".",
      "pettype",
      "=",
      "value"
    ],
    "question": "Find the id of students who do not have a cat pet.",
    "question_toks": [
      "Find",
      "the",
      "id",
      "of",
      "students",
      "who",
      "do",
      "not",
      "have",
      "a",
      "cat",
      "pet",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                1,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": {
        "from": {
          "table_units": [
            [
              "table_unit",
              0
            ],
            [
              "table_unit",
              1
            ],
            [
              "table_unit",
              2
            ]
          ],
          "conds": [
            [
              false,
              2,
              [
                0,
                [
                  0,
                  1,
                  false
                ],
                null
              ],
              [
                0,
                9,
                false
              ],
              null
            ],
            "and",
            [
              false,
              2,
              [
                0,
                [
                  0,
                  11,
                  false
                ],
                null
              ],
              [
                0,
                10,
                false
              ],
              null
            ]
          ]
        },
        "select": [
          false,
          [
            [
              0,
              [
                0,
                [
                  0,
                  1,
                  false
                ],
                null
              ]
            ]
          ]
        ],
        "where": [
          [
            false,
            2,
            [
              0,
              [
                0,
                12,
                false
              ],
              null
            ],
            "\"cat\"",
            null
          ]
        ],
        "groupBy": [],
        "having": [],
        "orderBy": [],
        "limit": null,
        "intersect": null,
        "union": null,
        "except": null
      }
    }
  },
  {
    "db_id": "pets_1",
    "query": "SELECT stuid FROM student EXCEPT SELECT T1.stuid FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'cat'",
    "query_toks": [
      "SELECT",
      "stuid",
      "FROM",
      "student",
      "EXCEPT",
      "SELECT",
      "T1.stuid",
      "FROM",
      "student",
      "AS",
      "T1",
      "JOIN",
      "has_pet",
      "AS",
      "T2",
      "ON",
      "T1.stuid",
      "=",
      "T2.stuid",
      "JOIN",
      "pets",
      "AS",
      "T3",
      "ON",
      "T3.petid",
      "=",
      "T2.petid",
      "WHERE",
      "T3.pettype",
      "=",
      "'cat",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "stuid",
      "from",
      "student",
      "except",
      "select",
      "t1",
      ".",
      "stuid",
      "from",
      "student",
      "as",
      "t1",
      "join",
      "has_pet",
      "as",
      "t2",
      "on",
      "t1",
      ".",
      "stuid",
      "=",
      "t2",
      ".",
      "stuid",
      "join",
      "pets",
      "as",
      "t3",
      "on",
      "t3",
      ".",
      "petid",
      "=",
      "t2",
      ".",
      "petid",
      "where",
      "t3",
      ".",
      "pettype",
      "=",
      "value"
    ],
    "question": "What are the ids of the students who do not own cats as pets?",
    "question_toks": [
      "What",
      "are",
      "the",
      "ids",
      "of",
      "the",
      "students",
      "who",
      "do",
      "not",
      "own",
      "cats",
      "as",
      "pets",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                1,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": {
        "from": {
          "table_units": [
            [
              "table_unit",
              0
            ],
            [
              "table_unit",
              1
            ],
            [
              "table_unit",
              2
            ]
          ],
          "conds": [
            [
              false,
              2,
              [
                0,
                [
                  0,
                  1,
                  false
                ],
                null
              ],
              [
                0,
                9,
                false
              ],
              null
            ],
            "and",
            [
              false,
              2,
              [
                0,
                [
                  0,
                  11,
                  false
                ],
                null
              ],
              [
                0,
                10,
                false
              ],
              null
            ]
          ]
        },
        "select": [
          false,
          [
            [
              0,
              [
                0,
                [
                  0,
                  1,
                  false
                ],
                null
              ]
            ]
          ]
        ],
        "where": [
          [
            false,
            2,
            [
              0,
              [
                0,
                12,
                false
              ],
              null
            ],
            "\"cat\"",
            null
          ]
        ],
        "groupBy": [],
        "having": [],
        "orderBy": [],
        "limit": null,
        "intersect": null,
        "union": null,
        "except": null
      }
    }
  },
  {
    "db_id": "pets_1",
    "query": "SELECT T1.fname ,  T1.age FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'dog' AND T1.stuid NOT IN (SELECT T1.stuid FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'cat')",
    "query_toks": [
      "SELECT",
      "T1.fname",
      ",",
      "T1.age",
      "FROM",
      "student",
      "AS",
      "T1",
      "JOIN",
      "has_pet",
      "AS",
      "T2",
      "ON",
      "T1.stuid",
      "=",
      "T2.stuid",
      "JOIN",
      "pets",
      "AS",
      "T3",
      "ON",
      "T3.petid",
      "=",
      "T2.petid",
      "WHERE",
      "T3.pettype",
      "=",
      "'dog",
      "'",
      "AND",
      "T1.stuid",
      "NOT",
      "IN",
      "(",
      "SELECT",
      "T1.stuid",
      "FROM",
      "student",
      "AS",
      "T1",
      "JOIN",
      "has_pet",
      "AS",
      "T2",
      "ON",
      "T1.stuid",
      "=",
      "T2.stuid",
      "JOIN",
      "pets",
      "AS",
      "T3",
      "ON",
      "T3.petid",
      "=",
      "T2.petid",
      "WHERE",
      "T3.pettype",
      "=",
      "'cat",
      "'",
      ")"
    ],
    "query_toks_no_value": [
      "select",
      "t1",
      ".",
      "fname",
      ",",
      "t1",
      ".",
      "age",
      "from",
      "student",
      "as",
      "t1",
      "join",
      "has_pet",
      "as",
      "t2",
      "on",
      "t1",
      ".",
      "stuid",
      "=",
      "t2",
      ".",
      "stuid",
      "join",
      "pets",
      "as",
      "t3",
      "on",
      "t3",
      ".",
      "petid",
      "=",
      "t2",
      ".",
      "petid",
      "where",
      "t3",
      ".",
      "pettype",
      "=",
      "value",
      "and",
      "t1",
      ".",
      "stuid",
      "not",
      "in",
      "(",
      "select",
      "t1",
      ".",
      "stuid",
      "from",
      "student",
      "as",
      "t1",
      "join",
      "has_pet",
      "as",
      "t2",
      "on",
      "t1",
      ".",
      "stuid",
      "=",
      "t2",
      ".",
      "stuid",
      "join",
      "pets",
      "as",
      "t3",
      "on",
      "t3",
      ".",
      "petid",
      "=",
      "t2",
      ".",
      "petid",
      "where",
      "t3",
      ".",
      "pettype",
      "=",
      "value",
      ")"
    ],
    "question": "Find the first name and age of students who have a dog but do not have a cat as a pet.",
    "question_toks": [
      "Find",
      "the",
      "first",
      "name",
      "and",
      "age",
      "of",
      "students",
      "who",
      "have",
      "a",
      "dog",
      "but",
      "do",
      "not",
      "have",
      "a",
      "cat",
      "as",
      "a",
      "pet",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ],
          [
            "table_unit",
            1
          ],
          [
            "table_unit",
            2
          ]
        ],
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                1,
                false
              ],
              null
            ],
            [
              0,
              9,
              false
            ],
            null
          ],
          "and",
          [
            false,
            2,
            [
              0,
              [
                0,
                11,
                false
              ],
              null
            ],
            [
              0,
              10,
              false
            ],
            null
          ]
        ]
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                3,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                4,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              12,
              false
            ],
            null
          ],
          "\"dog\"",
          null
        ],
        "and",
        [
          true,
          8,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ],
          {
            "from": {
              "table_units": [
                [
                  "table_unit",
                  0
                ],
                [
                  "table_unit",
                  1
                ],
                [
                  "table_unit",
                  2
                ]
              ],
              "conds": [
                [
                  false,
                  2,
                  [
                    0,
                    [
                      0,
                      1,
                      false
                    ],
                    null
                  ],
                  [
                    0,
                    9,
                    false
                  ],
                  null
                ],
                "and",
                [
                  false,
                  2,
                  [
                    0,
                    [
                      0,
                      11,
                      false
                    ],
                    null
                  ],
                  [
                    0,
                    10,
                    false
                  ],
                  null
                ]
              ]
            },
            "select": [
              false,
              [
                [
                  0,
                  [
                    0,
                    [
                      0,
                      1,
                      false
                    ],
                    null
                  ]
                ]
              ]
            ],
            "where": [
              [
                false,
                2,
                [
                  0,
                  [
                    0,
                    12,
                    false
                  ],
                  null
                ],
                "\"cat\"",
                null
              ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
          },
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "pets_1",
    "query": "SELECT T1.fname ,  T1.age FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'dog' AND T1.stuid NOT IN (SELECT T1.stuid FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'cat')",
    "query_toks": [
      "SELECT",
      "T1.fname",
      ",",
      "T1.age",
      "FROM",
      "student",
      "AS",
      "T1",
      "JOIN",
      "has_pet",
      "AS",
      "T2",
      "ON",
      "T1.stuid",
      "=",
      "T2.stuid",
      "JOIN",
      "pets",
      "AS",
      "T3",
      "ON",
      "T3.petid",
      "=",
      "T2.petid",
      "WHERE",
      "T3.pettype",
      "=",
      "'dog",
      "'",
      "AND",
      "T1.stuid",
      "NOT",
      "IN",
      "(",
      "SELECT",
      "T1.stuid",
      "FROM",
      "student",
      "AS",
      "T1",
      "JOIN",
      "has_pet",
      "AS",
      "T2",
      "ON",
      "T1.stuid",
      "=",
      "T2.stuid",
      "JOIN",
      "pets",
      "AS",
      "T3",
      "ON",
      "T3.petid",
      "=",
      "T2.petid",
      "WHERE",
      "T3.pettype",
      "=",
      "'cat",
      "'",
      ")"
    ],
    "query_toks_no_value": [
      "select",
      "t1",
      ".",
      "fname",
      ",",
      "t1",
      ".",
      "age",
      "from",
      "student",
      "as",
      "t1",
      "join",
      "has_pet",
      "as",
      "t2",
      "on",
      "t1",
      ".",
      "stuid",
      "=",
      "t2",
      ".",
      "stuid",
      "join",
      "pets",
      "as",
      "t3",
      "on",
      "t3",
      ".",
      "petid",
      "=",
      "t2",
      ".",
      "petid",
      "where",
      "t3",
      ".",
      "pettype",
      "=",
      "value",
      "and",
      "t1",
      ".",
      "stuid",
      "not",
      "in",
      "(",
      "select",
      "t1",
      ".",
      "stuid",
      "from",
      "student",
      "as",
      "t1",
      "join",
      "has_pet",
      "as",
      "t2",
      "on",
      "t1",
      ".",
      "stuid",
      "=",
      "t2",
      ".",
      "stuid",
      "join",
      "pets",
      "as",
      "t3",
      "on",
      "t3",
      ".",
      "petid",
      "=",
      "t2",
      ".",
      "petid",
      "where",
      "t3",
      ".",
      "pettype",
      "=",
      "value",
      ")"
    ],
    "question": "What is the first name of every student who has a dog but does not have a cat?",
    "question_toks": [
      "What",
      "is",
      "the",
      "first",
      "name",
      "of",
      "every",
      "student",
      "who",
      "has",
      "a",
      "dog",
      "but",
      "does",
      "not",
      "have",
      "a",
      "cat",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ],
          [
            "table_unit",
            1
          ],
          [
            "table_unit",
            2
          ]
        ],
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                1,
                false
              ],
              null
            ],
            [
              0,
              9,
              false
            ],
            null
          ],
          "and",
          [
            false,
            2,
            [
              0,
              [
                0,
                11,
                false
              ],
              null
            ],
            [
              0,
              10,
              false
            ],
            null
          ]
        ]
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                3,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                4,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              12,
              false
            ],
            null
          ],
          "\"dog\"",
          null
        ],
        "and",
        [
          true,
          8,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ],
          {
            "from": {
              "table_units": [
                [
                  "table_unit",
                  0
                ],
                [
                  "table_unit",
                  1
                ],
                [
                  "table_unit",
                  2
                ]
              ],
              "conds": [
                [
                  false,
                  2,
                  [
                    0,
                    [
                      0,
                      1,
                      false
                    ],
                    null
                  ],
                  [
                    0,
                    9,
                    false
                  ],
                  null
                ],
                "and",
                [
                  false,
                  2,
                  [
                    0,
                    [
                      0,
                      11,
                      false
                    ],
                    null
                  ],
                  [
                    0,
                    10,
                    false
                  ],
                  null
                ]
              ]
            },
            "select": [
              false,
              [
                [
                  0,
                  [
                    0,
                    [
                      0,
                      1,
                      false
                    ],
                    null
                  ]
                ]
              ]
            ],
            "where": [
              [
                false,
                2,
                [
                  0,
                  [
                    0,
                    12,
                    false
                  ],
                  null
                ],
                "\"cat\"",
                null
              ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
          },
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "pets_1",
    "query": "SELECT pettype ,  weight FROM pets ORDER BY pet_age LIMIT 1",
    "query_toks": [
      "SELECT",
      "pettype",
      ",",
      "weight",
      "FROM",
      "pets",
      "ORDER",
      "BY",
      "pet_age",
      "LIMIT",
      "1"
    ],
    "query_toks_no_value": [
      "select",
      "pettype",
      ",",
      "weight",
      "from",
      "pets",
      "order",
      "by",
      "pet_age",
      "limit",
      "value"
    ],
    "question": "Find the type and weight of the youngest pet.",
    "question_toks": [
      "Find",
      "the",
      "type",
      "and",
      "weight",
      "of",
      "the",
      "youngest",
      "pet",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            2
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                12,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                14,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [
        "asc",
        [
          [
            0,
            [
              0,
              13,
              false
            ],
            null
          ]
        ]
      ],
      "limit": 1,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "pets_1",
    "query": "SELECT pettype ,  weight FROM pets ORDER BY pet_age LIMIT 1",
    "query_toks": [
      "SELECT",
      "pettype",
      ",",
      "weight",
      "FROM",
      "pets",
      "ORDER",
      "BY",
      "pet_age",
      "LIMIT",
      "1"
    ],
    "query_toks_no_value": [
      "select",
      "pettype",
      ",",
      "weight",
      "from",
      "pets",
      "order",
      "by",
      "pet_age",
      "limit",
      "value"
    ],
    "question": "What type of pet is the youngest animal, and how much does it weigh?",
    "question_toks": [
      "What",
      "type",
      "of",
      "pet",
      "is",
      "the",
      "youngest",
      "animal",
      ",",
      "and",
      "how",
      "much",
      "does",
      "it",
      "weigh",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            2
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                12,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                14,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [
        "asc",
        [
          [
            0,
            [
              0,
              13,
              false
            ],
            null
          ]
        ]
      ],
      "limit": 1,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "pets_1",
    "query": "SELECT petid ,  weight FROM pets WHERE pet_age  >  1",
    "query_toks": [
      "SELECT",
      "petid",
      ",",
      "weight",
      "FROM",
      "pets",
      "WHERE",
      "pet_age",
      ">",
      "1"
    ],
    "query_toks_no_value": [
      "select",
      "petid",
      ",",
      "weight",
      "from",
      "pets",
      "where",
      "pet_age",
      ">",
      "value"
    ],
    "question": "Find the id and weight of all pets whose age is older than 1.",
    "question_toks": [
      "Find",
      "the",
      "id",
      "and",
      "weight",
      "of",
      "all",
      "pets",
      "whose",
      "age",
      "is",
      "older",
      "than",
      "1",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            2
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                11,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                14,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          3,
          [
            0,
            [
              0,
              13,
              false
            ],
            null
          ],
          1.0,
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "pets_1",
    "query": "SELECT petid ,  weight FROM pets WHERE pet_age  >  1",
    "query_toks": [
      "SELECT",
      "petid",
      ",",
      "weight",
      "FROM",
      "pets",
      "WHERE",
      "pet_age",
      ">",
      "1"
    ],
    "query_toks_no_value": [
      "select",
      "petid",
      ",",
      "weight",
      "from",
      "pets",
      "where",
      "pet_age",
      ">",
      "value"
    ],
    "question": "What is the id and weight of every pet who is older than 1?",
    "question_toks": [
      "What",
      "is",
      "the",
      "id",
      "and",
      "weight",
      "of",
      "every",
      "pet",
      "who",
      "is",
      "older",
      "than",
      "1",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            2
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                11,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                14,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          3,
          [
            0,
            [
              0,
              13,
              false
            ],
            null
          ],
          1.0,
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "pets_1",
    "query": "SELECT avg(pet_age) ,  max(pet_age) ,  pettype FROM pets GROUP BY pettype",
    "query_toks": [
      "SELECT",
      "avg",
      "(",
      "pet_age",
      ")",
      ",",
      "max",
      "(",
      "pet_age",
      ")",
      ",",
      "pettype",
      "FROM",
      "pets",
      "GROUP",
      "BY",
      "pettype"
    ],
    "query_toks_no_value": [
      "select",
      "avg",
      "(",
      "pet_age",
      ")",
      ",",
      "max",
      "(",
      "pet_age",
      ")",
      ",",
      "pettype",
      "from",
      "pets",
      "group",
      "by",
      "pettype"
    ],
    "question": "Find the average and maximum age for each type of pet.",
    "question_toks": [
      "Find",
      "the",
      "average",
      "and",
      "maximum",
      "age",
      "for",
      "each",
      "type",
      "of",
      "pet",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            2
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            5,
            [
              0,
              [
                0,
                13,
                false
              ],
              null
            ]
          ],
          [
            1,
            [
              0,
              [
                0,
                13,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                12,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [
        [
          0,
          12,
          false
        ]
      ],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "pets_1",
    "query": "SELECT avg(pet_age) ,  max(pet_age) ,  pettype FROM pets GROUP BY pettype",
    "query_toks": [
      "SELECT",
      "avg",
      "(",
      "pet_age",
      ")",
      ",",
      "max",
      "(",
      "pet_age",
      ")",
      ",",
      "pettype",
      "FROM",
      "pets",
      "GROUP",
      "BY",
      "pettype"
    ],
    "query_toks_no_value": [
      "select",
      "avg",
      "(",
      "pet_age",
      ")",
      ",",
      "max",
      "(",
      "pet_age",
      ")",
      ",",
      "pettype",
      "from",
      "pets",
      "group",
      "by",
      "pettype"
    ],
    "question": "What is the average and maximum age for each pet type?",
    "question_toks": [
      "What",
      "is",
      "the",
      "average",
      "and",
      "maximum",
      "age",
      "for",
      "each",
      "pet",
      "type",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            2
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            5,
            [
              0,
              [
                0,
                13,
                false
              ],
              null
            ]
          ],
          [
            1,
            [
              0,
              [
                0,
                13,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                12,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [
        [
          0,
          12,
          false
        ]
      ],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "pets_1",
    "query": "SELECT avg(weight) ,  pettype FROM pets GROUP BY pettype",
    "query_toks": [
      "SELECT",
      "avg",
      "(",
      "weight",
      ")",
      ",",
      "pettype",
      "FROM",
      "pets",
      "GROUP",
      "BY",
      "pettype"
    ],
    "query_toks_no_value": [
      "select",
      "avg",
      "(",
      "weight",
      ")",
      ",",
      "pettype",
      "from",
      "pets",
      "group",
      "by",
      "pettype"
    ],
    "question": "Find the average weight for each pet type.",
    "question_toks": [
      "Find",
      "the",
      "average",
      "weight",
      "for",
      "each",
      "pet",
      "type",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            2
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            5,
            [
              0,
              [
                0,
                14,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                12,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [
        [
          0,
          12,
          false
        ]
      ],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "pets_1",
    "query": "SELECT avg(weight) ,  pettype FROM pets GROUP BY pettype",
    "query_toks": [
      "SELECT",
      "avg",
      "(",
      "weight",
      ")",
      ",",
      "pettype",
      "FROM",
      "pets",
      "GROUP",
      "BY",
      "pettype"
    ],
    "query_toks_no_value": [
      "select",
      "avg",
      "(",
      "weight",
      ")",
      ",",
      "pettype",
      "from",
      "pets",
      "group",
      "by",
      "pettype"
    ],
    "question": "What is the average weight for each type of pet?",
    "question_toks": [
      "What",
      "is",
      "the",
      "average",
      "weight",
      "for",
      "each",
      "type",
      "of",
      "pet",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            2
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            5,
            [
              0,
              [
                0,
                14,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                12,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [
        [
          0,
          12,
          false
        ]
      ],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "pets_1",
    "query": "SELECT DISTINCT T1.fname ,  T1.age FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid",
    "query_toks": [
      "SELECT",
      "DISTINCT",
      "T1.fname",
      ",",
      "T1.age",
      "FROM",
      "student",
      "AS",
      "T1",
      "JOIN",
      "has_pet",
      "AS",
      "T2",
      "ON",
      "T1.stuid",
      "=",
      "T2.stuid"
    ],
    "query_toks_no_value": [
      "select",
      "distinct",
      "t1",
      ".",
      "fname",
      ",",
      "t1",
      ".",
      "age",
      "from",
      "student",
      "as",
      "t1",
      "join",
      "has_pet",
      "as",
      "t2",
      "on",
      "t1",
      ".",
      "stuid",
      "=",
      "t2",
      ".",
      "stuid"
    ],
    "question": "Find the first name and age of students who have a pet.",
    "question_toks": [
      "Find",
      "the",
      "first",
      "name",
      "and",
      "age",
      "of",
      "students",
      "who",
      "have",
      "a",
      "pet",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ],
          [
            "table_unit",
            1
          ]
        ],
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                1,
                false
              ],
              null
            ],
            [
              0,
              9,
              false
            ],
            null
          ]
        ]
      },
      "select": [
        true,
        [
          [
            0,
            [
              0,
              [
                0,
                3,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                4,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "pets_1",
    "query": "SELECT DISTINCT T1.fname ,  T1.age FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid",
    "query_toks": [
      "SELECT",
      "DISTINCT",
      "T1.fname",
      ",",
      "T1.age",
      "FROM",
      "student",
      "AS",
      "T1",
      "JOIN",
      "has_pet",
      "AS",
      "T2",
      "ON",
      "T1.stuid",
      "=",
      "T2.stuid"
    ],
    "query_toks_no_value": [
      "select",
      "distinct",
      "t1",
      ".",
      "fname",
      ",",
      "t1",
      ".",
      "age",
      "from",
      "student",
      "as",
      "t1",
      "join",
      "has_pet",
      "as",
      "t2",
      "on",
      "t1",
      ".",
      "stuid",
      "=",
      "t2",
      ".",
      "stuid"
    ],
    "question": "What are the different first names and ages of the students who do have pets?",
    "question_toks": [
      "What",
      "are",
      "the",
      "different",
      "first",
      "names",
      "and",
      "ages",
      "of",
      "the",
      "students",
      "who",
      "do",
      "have",
      "pets",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ],
          [
            "table_unit",
            1
          ]
        ],
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                1,
                false
              ],
              null
            ],
            [
              0,
              9,
              false
            ],
            null
          ]
        ]
      },
      "select": [
        true,
        [
          [
            0,
            [
              0,
              [
                0,
                3,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                4,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "pets_1",
    "query": "SELECT T2.petid FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid WHERE T1.Lname  =  'Smith'",
    "query_toks": [
      "SELECT",
      "T2.petid",
      "FROM",
      "student",
      "AS",
      "T1",
      "JOIN",
      "has_pet",
      "AS",
      "T2",
      "ON",
      "T1.stuid",
      "=",
      "T2.stuid",
      "WHERE",
      "T1.Lname",
      "=",
      "'Smith",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "t2",
      ".",
      "petid",
      "from",
      "student",
      "as",
      "t1",
      "join",
      "has_pet",
      "as",
      "t2",
      "on",
      "t1",
      ".",
      "stuid",
      "=",
      "t2",
      ".",
      "stuid",
      "where",
      "t1",
      ".",
      "lname",
      "=",
      "value"
    ],
    "question": "Find the id of the pet owned by student whose last name is \u2018Smith\u2019.",
    "question_toks": [
      "Find",
      "the",
      "id",
      "of",
      "the",
      "pet",
      "owned",
      "by",
      "student",
      "whose",
      "last",
      "name",
      "is",
      "\u2018Smith\u2019",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ],
          [
            "table_unit",
            1
          ]
        ],
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                1,
                false
              ],
              null
            ],
            [
              0,
              9,
              false
            ],
            null
          ]
        ]
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                10,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              2,
              false
            ],
            null
          ],
          "\"Smith\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "pets_1",
    "query": "SELECT T2.petid FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid WHERE T1.Lname  =  'Smith'",
    "query_toks": [
      "SELECT",
      "T2.petid",
      "FROM",
      "student",
      "AS",
      "T1",
      "JOIN",
      "has_pet",
      "AS",
      "T2",
      "ON",
      "T1.stuid",
      "=",
      "T2.stuid",
      "WHERE",
      "T1.Lname",
      "=",
      "'Smith",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "t2",
      ".",
      "petid",
      "from",
      "student",
      "as",
      "t1",
      "join",
      "has_pet",
      "as",
      "t2",
      "on",
      "t1",
      ".",
      "stuid",
      "=",
      "t2",
      ".",
      "stuid",
      "where",
      "t1",
      ".",
      "lname",
      "=",
      "value"
    ],
    "question": "What is the id of the pet owned by the student whose last name is 'Smith'?",
    "question_toks": [
      "What",
      "is",
      "the",
      "id",
      "of",
      "the",
      "pet",
      "owned",
      "by",
      "the",
      "student",
      "whose",
      "last",
      "name",
      "is",
      "'Smith",
      "'",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ],
          [
            "table_unit",
            1
          ]
        ],
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                1,
                false
              ],
              null
            ],
            [
              0,
              9,
              false
            ],
            null
          ]
        ]
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                10,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              2,
              false
            ],
            null
          ],
          "\"Smith\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "pets_1",
    "query": "SELECT count(*) ,  T1.stuid FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid GROUP BY T1.stuid",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      ",",
      "T1.stuid",
      "FROM",
      "student",
      "AS",
      "T1",
      "JOIN",
      "has_pet",
      "AS",
      "T2",
      "ON",
      "T1.stuid",
      "=",
      "T2.stuid",
      "GROUP",
      "BY",
      "T1.stuid"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      ",",
      "t1",
      ".",
      "stuid",
      "from",
      "student",
      "as",
      "t1",
      "join",
      "has_pet",
      "as",
      "t2",
      "on",
      "t1",
      ".",
      "stuid",
      "=",
      "t2",
      ".",
      "stuid",
      "group",
      "by",
      "t1",
      ".",
      "stuid"
    ],
    "question": "Find the number of pets for each student who has any pet and student id.",
    "question_toks": [
      "Find",
      "the",
      "number",
      "of",
      "pets",
      "for",
      "each",
      "student",
      "who",
      "has",
      "any",
      "pet",
      "and",
      "student",
      "id",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ],
          [
            "table_unit",
            1
          ]
        ],
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                1,
                false
              ],
              null
            ],
            [
              0,
              9,
              false
            ],
            null
          ]
        ]
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                1,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [
        [
          0,
          1,
          false
        ]
      ],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "pets_1",
    "query": "select count(*) ,  t1.stuid from student as t1 join has_pet as t2 on t1.stuid  =  t2.stuid group by t1.stuid",
    "query_toks": [
      "select",
      "count",
      "(",
      "*",
      ")",
      ",",
      "t1.stuid",
      "from",
      "student",
      "as",
      "t1",
      "join",
      "has_pet",
      "as",
      "t2",
      "on",
      "t1.stuid",
      "=",
      "t2.stuid",
      "group",
      "by",
      "t1.stuid"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      ",",
      "t1",
      ".",
      "stuid",
      "from",
      "student",
      "as",
      "t1",
      "join",
      "has_pet",
      "as",
      "t2",
      "on",
      "t1",
      ".",
      "stuid",
      "=",
      "t2",
      ".",
      "stuid",
      "group",
      "by",
      "t1",
      ".",
      "stuid"
    ],
    "question": "For students who have pets , how many pets does each student have ? list their ids instead of names .",
    "question_toks": [
      "For",
      "students",
      "who",
      "have",
      "pets",
      ",",
      "how",
      "many",
      "pets",
      "does",
      "each",
      "student",
      "have",
      "?",
      "list",
      "their",
      "ids",
      "instead",
      "of",
      "names",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ],
          [
            "table_unit",
            1
          ]
        ],
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                1,
                false
              ],
              null
            ],
            [
              0,
              9,
              false
            ],
            null
          ]
        ]
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                1,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [
        [
          0,
          1,
          false
        ]
      ],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "pets_1",
    "query": "SELECT T1.fname ,  T1.sex FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid GROUP BY T1.stuid HAVING count(*)  >  1",
    "query_toks": [
      "SELECT",
      "T1.fname",
      ",",
      "T1.sex",
      "FROM",
      "student",
      "AS",
      "T1",
      "JOIN",
      "has_pet",
      "AS",
      "T2",
      "ON",
      "T1.stuid",
      "=",
      "T2.stuid",
      "GROUP",
      "BY",
      "T1.stuid",
      "HAVING",
      "count",
      "(",
      "*",
      ")",
      ">",
      "1"
    ],
    "query_toks_no_value": [
      "select",
      "t1",
      ".",
      "fname",
      ",",
      "t1",
      ".",
      "sex",
      "from",
      "student",
      "as",
      "t1",
      "join",
      "has_pet",
      "as",
      "t2",
      "on",
      "t1",
      ".",
      "stuid",
      "=",
      "t2",
      ".",
      "stuid",
      "group",
      "by",
      "t1",
      ".",
      "stuid",
      "having",
      "count",
      "(",
      "*",
      ")",
      ">",
      "value"
    ],
    "question": "Find the first name and gender of student who have more than one pet.",
    "question_toks": [
      "Find",
      "the",
      "first",
      "name",
      "and",
      "gender",
      "of",
      "student",
      "who",
      "have",
      "more",
      "than",
      "one",
      "pet",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ],
          [
            "table_unit",
            1
          ]
        ],
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                1,
                false
              ],
              null
            ],
            [
              0,
              9,
              false
            ],
            null
          ]
        ]
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                3,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                5,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [
        [
          0,
          1,
          false
        ]
      ],
      "having": [
        [
          false,
          3,
          [
            0,
            [
              3,
              0,
              false
            ],
            null
          ],
          1.0,
          null
        ]
      ],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "pets_1",
    "query": "SELECT T1.fname ,  T1.sex FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid GROUP BY T1.stuid HAVING count(*)  >  1",
    "query_toks": [
      "SELECT",
      "T1.fname",
      ",",
      "T1.sex",
      "FROM",
      "student",
      "AS",
      "T1",
      "JOIN",
      "has_pet",
      "AS",
      "T2",
      "ON",
      "T1.stuid",
      "=",
      "T2.stuid",
      "GROUP",
      "BY",
      "T1.stuid",
      "HAVING",
      "count",
      "(",
      "*",
      ")",
      ">",
      "1"
    ],
    "query_toks_no_value": [
      "select",
      "t1",
      ".",
      "fname",
      ",",
      "t1",
      ".",
      "sex",
      "from",
      "student",
      "as",
      "t1",
      "join",
      "has_pet",
      "as",
      "t2",
      "on",
      "t1",
      ".",
      "stuid",
      "=",
      "t2",
      ".",
      "stuid",
      "group",
      "by",
      "t1",
      ".",
      "stuid",
      "having",
      "count",
      "(",
      "*",
      ")",
      ">",
      "value"
    ],
    "question": "What is the first name and gender of the all the students who have more than one pet?",
    "question_toks": [
      "What",
      "is",
      "the",
      "first",
      "name",
      "and",
      "gender",
      "of",
      "the",
      "all",
      "the",
      "students",
      "who",
      "have",
      "more",
      "than",
      "one",
      "pet",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ],
          [
            "table_unit",
            1
          ]
        ],
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                1,
                false
              ],
              null
            ],
            [
              0,
              9,
              false
            ],
            null
          ]
        ]
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                3,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                5,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [
        [
          0,
          1,
          false
        ]
      ],
      "having": [
        [
          false,
          3,
          [
            0,
            [
              3,
              0,
              false
            ],
            null
          ],
          1.0,
          null
        ]
      ],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "pets_1",
    "query": "SELECT T1.lname FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pet_age  =  3 AND T3.pettype  =  'cat'",
    "query_toks": [
      "SELECT",
      "T1.lname",
      "FROM",
      "student",
      "AS",
      "T1",
      "JOIN",
      "has_pet",
      "AS",
      "T2",
      "ON",
      "T1.stuid",
      "=",
      "T2.stuid",
      "JOIN",
      "pets",
      "AS",
      "T3",
      "ON",
      "T3.petid",
      "=",
      "T2.petid",
      "WHERE",
      "T3.pet_age",
      "=",
      "3",
      "AND",
      "T3.pettype",
      "=",
      "'cat",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "t1",
      ".",
      "lname",
      "from",
      "student",
      "as",
      "t1",
      "join",
      "has_pet",
      "as",
      "t2",
      "on",
      "t1",
      ".",
      "stuid",
      "=",
      "t2",
      ".",
      "stuid",
      "join",
      "pets",
      "as",
      "t3",
      "on",
      "t3",
      ".",
      "petid",
      "=",
      "t2",
      ".",
      "petid",
      "where",
      "t3",
      ".",
      "pet_age",
      "=",
      "value",
      "and",
      "t3",
      ".",
      "pettype",
      "=",
      "value"
    ],
    "question": "Find the last name of the student who has a cat that is age 3.",
    "question_toks": [
      "Find",
      "the",
      "last",
      "name",
      "of",
      "the",
      "student",
      "who",
      "has",
      "a",
      "cat",
      "that",
      "is",
      "age",
      "3",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ],
          [
            "table_unit",
            1
          ],
          [
            "table_unit",
            2
          ]
        ],
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                1,
                false
              ],
              null
            ],
            [
              0,
              9,
              false
            ],
            null
          ],
          "and",
          [
            false,
            2,
            [
              0,
              [
                0,
                11,
                false
              ],
              null
            ],
            [
              0,
              10,
              false
            ],
            null
          ]
        ]
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                2,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              13,
              false
            ],
            null
          ],
          3.0,
          null
        ],
        "and",
        [
          false,
          2,
          [
            0,
            [
              0,
              12,
              false
            ],
            null
          ],
          "\"cat\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "pets_1",
    "query": "SELECT T1.lname FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pet_age  =  3 AND T3.pettype  =  'cat'",
    "query_toks": [
      "SELECT",
      "T1.lname",
      "FROM",
      "student",
      "AS",
      "T1",
      "JOIN",
      "has_pet",
      "AS",
      "T2",
      "ON",
      "T1.stuid",
      "=",
      "T2.stuid",
      "JOIN",
      "pets",
      "AS",
      "T3",
      "ON",
      "T3.petid",
      "=",
      "T2.petid",
      "WHERE",
      "T3.pet_age",
      "=",
      "3",
      "AND",
      "T3.pettype",
      "=",
      "'cat",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "t1",
      ".",
      "lname",
      "from",
      "student",
      "as",
      "t1",
      "join",
      "has_pet",
      "as",
      "t2",
      "on",
      "t1",
      ".",
      "stuid",
      "=",
      "t2",
      ".",
      "stuid",
      "join",
      "pets",
      "as",
      "t3",
      "on",
      "t3",
      ".",
      "petid",
      "=",
      "t2",
      ".",
      "petid",
      "where",
      "t3",
      ".",
      "pet_age",
      "=",
      "value",
      "and",
      "t3",
      ".",
      "pettype",
      "=",
      "value"
    ],
    "question": "What is the last name of the student who has a cat that is 3 years old?",
    "question_toks": [
      "What",
      "is",
      "the",
      "last",
      "name",
      "of",
      "the",
      "student",
      "who",
      "has",
      "a",
      "cat",
      "that",
      "is",
      "3",
      "years",
      "old",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ],
          [
            "table_unit",
            1
          ],
          [
            "table_unit",
            2
          ]
        ],
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                1,
                false
              ],
              null
            ],
            [
              0,
              9,
              false
            ],
            null
          ],
          "and",
          [
            false,
            2,
            [
              0,
              [
                0,
                11,
                false
              ],
              null
            ],
            [
              0,
              10,
              false
            ],
            null
          ]
        ]
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                2,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              13,
              false
            ],
            null
          ],
          3.0,
          null
        ],
        "and",
        [
          false,
          2,
          [
            0,
            [
              0,
              12,
              false
            ],
            null
          ],
          "\"cat\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "pets_1",
    "query": "select avg(age) from student where stuid not in (select stuid from has_pet)",
    "query_toks": [
      "select",
      "avg",
      "(",
      "age",
      ")",
      "from",
      "student",
      "where",
      "stuid",
      "not",
      "in",
      "(",
      "select",
      "stuid",
      "from",
      "has_pet",
      ")"
    ],
    "query_toks_no_value": [
      "select",
      "avg",
      "(",
      "age",
      ")",
      "from",
      "student",
      "where",
      "stuid",
      "not",
      "in",
      "(",
      "select",
      "stuid",
      "from",
      "has_pet",
      ")"
    ],
    "question": "Find the average age of students who do not have any pet .",
    "question_toks": [
      "Find",
      "the",
      "average",
      "age",
      "of",
      "students",
      "who",
      "do",
      "not",
      "have",
      "any",
      "pet",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            5,
            [
              0,
              [
                0,
                4,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          true,
          8,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ],
          {
            "from": {
              "table_units": [
                [
                  "table_unit",
                  1
                ]
              ],
              "conds": []
            },
            "select": [
              false,
              [
                [
                  0,
                  [
                    0,
                    [
                      0,
                      9,
                      false
                    ],
                    null
                  ]
                ]
              ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
          },
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "pets_1",
    "query": "select avg(age) from student where stuid not in (select stuid from has_pet)",
    "query_toks": [
      "select",
      "avg",
      "(",
      "age",
      ")",
      "from",
      "student",
      "where",
      "stuid",
      "not",
      "in",
      "(",
      "select",
      "stuid",
      "from",
      "has_pet",
      ")"
    ],
    "query_toks_no_value": [
      "select",
      "avg",
      "(",
      "age",
      ")",
      "from",
      "student",
      "where",
      "stuid",
      "not",
      "in",
      "(",
      "select",
      "stuid",
      "from",
      "has_pet",
      ")"
    ],
    "question": "What is the average age for all students who do not own any pets ?",
    "question_toks": [
      "What",
      "is",
      "the",
      "average",
      "age",
      "for",
      "all",
      "students",
      "who",
      "do",
      "not",
      "own",
      "any",
      "pets",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            5,
            [
              0,
              [
                0,
                4,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          true,
          8,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ],
          {
            "from": {
              "table_units": [
                [
                  "table_unit",
                  1
                ]
              ],
              "conds": []
            },
            "select": [
              false,
              [
                [
                  0,
                  [
                    0,
                    [
                      0,
                      9,
                      false
                    ],
                    null
                  ]
                ]
              ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
          },
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "car_1",
    "query": "SELECT count(*) FROM CONTINENTS;",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "CONTINENTS",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "continents"
    ],
    "question": "How many continents are there?",
    "question_toks": [
      "How",
      "many",
      "continents",
      "are",
      "there",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "car_1",
    "query": "SELECT count(*) FROM CONTINENTS;",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "CONTINENTS",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "continents"
    ],
    "question": "What is the number of continents?",
    "question_toks": [
      "What",
      "is",
      "the",
      "number",
      "of",
      "continents",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "car_1",
    "query": "SELECT T1.ContId ,  T1.Continent ,  count(*) FROM CONTINENTS AS T1 JOIN COUNTRIES AS T2 ON T1.ContId  =  T2.Continent GROUP BY T1.ContId;",
    "query_toks": [
      "SELECT",
      "T1.ContId",
      ",",
      "T1.Continent",
      ",",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "CONTINENTS",
      "AS",
      "T1",
      "JOIN",
      "COUNTRIES",
      "AS",
      "T2",
      "ON",
      "T1.ContId",
      "=",
      "T2.Continent",
      "GROUP",
      "BY",
      "T1.ContId",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "t1",
      ".",
      "contid",
      ",",
      "t1",
      ".",
      "continent",
      ",",
      "count",
      "(",
      "*",
      ")",
      "from",
      "continents",
      "as",
      "t1",
      "join",
      "countries",
      "as",
      "t2",
      "on",
      "t1",
      ".",
      "contid",
      "=",
      "t2",
      ".",
      "continent",
      "group",
      "by",
      "t1",
      ".",
      "contid"
    ],
    "question": "How many countries does each continent have? List the continent id, continent name and the number of countries.",
    "question_toks": [
      "How",
      "many",
      "countries",
      "does",
      "each",
      "continent",
      "have",
      "?",
      "List",
      "the",
      "continent",
      "id",
      ",",
      "continent",
      "name",
      "and",
      "the",
      "number",
      "of",
      "countries",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ],
          [
            "table_unit",
            1
          ]
        ],
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                1,
                false
              ],
              null
            ],
            [
              0,
              5,
              false
            ],
            null
          ]
        ]
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                1,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                2,
                false
              ],
              null
            ]
          ],
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [
        [
          0,
          1,
          false
        ]
      ],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "car_1",
    "query": "SELECT T1.ContId ,  T1.Continent ,  count(*) FROM CONTINENTS AS T1 JOIN COUNTRIES AS T2 ON T1.ContId  =  T2.Continent GROUP BY T1.ContId;",
    "query_toks": [
      "SELECT",
      "T1.ContId",
      ",",
      "T1.Continent",
      ",",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "CONTINENTS",
      "AS",
      "T1",
      "JOIN",
      "COUNTRIES",
      "AS",
      "T2",
      "ON",
      "T1.ContId",
      "=",
      "T2.Continent",
      "GROUP",
      "BY",
      "T1.ContId",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "t1",
      ".",
      "contid",
      ",",
      "t1",
      ".",
      "continent",
      ",",
      "count",
      "(",
      "*",
      ")",
      "from",
      "continents",
      "as",
      "t1",
      "join",
      "countries",
      "as",
      "t2",
      "on",
      "t1",
      ".",
      "contid",
      "=",
      "t2",
      ".",
      "continent",
      "group",
      "by",
      "t1",
      ".",
      "contid"
    ],
    "question": "For each continent, list its id, name, and how many countries it has?",
    "question_toks": [
      "For",
      "each",
      "continent",
      ",",
      "list",
      "its",
      "id",
      ",",
      "name",
      ",",
      "and",
      "how",
      "many",
      "countries",
      "it",
      "has",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ],
          [
            "table_unit",
            1
          ]
        ],
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                1,
                false
              ],
              null
            ],
            [
              0,
              5,
              false
            ],
            null
          ]
        ]
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                1,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                2,
                false
              ],
              null
            ]
          ],
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [
        [
          0,
          1,
          false
        ]
      ],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "car_1",
    "query": "SELECT count(*) FROM COUNTRIES;",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "COUNTRIES",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "countries"
    ],
    "question": "How many countries are listed?",
    "question_toks": [
      "How",
      "many",
      "countries",
      "are",
      "listed",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "car_1",
    "query": "SELECT count(*) FROM COUNTRIES;",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "COUNTRIES",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "countries"
    ],
    "question": "How many countries exist?",
    "question_toks": [
      "How",
      "many",
      "countries",
      "exist",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "car_1",
    "query": "SELECT T1.FullName ,  T1.Id ,  count(*) FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id  =  T2.Maker GROUP BY T1.Id;",
    "query_toks": [
      "SELECT",
      "T1.FullName",
      ",",
      "T1.Id",
      ",",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "CAR_MAKERS",
      "AS",
      "T1",
      "JOIN",
      "MODEL_LIST",
      "AS",
      "T2",
      "ON",
      "T1.Id",
      "=",
      "T2.Maker",
      "GROUP",
      "BY",
      "T1.Id",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "t1",
      ".",
      "fullname",
      ",",
      "t1",
      ".",
      "id",
      ",",
      "count",
      "(",
      "*",
      ")",
      "from",
      "car_makers",
      "as",
      "t1",
      "join",
      "model_list",
      "as",
      "t2",
      "on",
      "t1",
      ".",
      "id",
      "=",
      "t2",
      ".",
      "maker",
      "group",
      "by",
      "t1",
      ".",
      "id"
    ],
    "question": "How many models does each car maker produce? List maker full name, id and the number.",
    "question_toks": [
      "How",
      "many",
      "models",
      "does",
      "each",
      "car",
      "maker",
      "produce",
      "?",
      "List",
      "maker",
      "full",
      "name",
      ",",
      "id",
      "and",
      "the",
      "number",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            2
          ],
          [
            "table_unit",
            3
          ]
        ],
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                6,
                false
              ],
              null
            ],
            [
              0,
              11,
              false
            ],
            null
          ]
        ]
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                8,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                6,
                false
              ],
              null
            ]
          ],
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [
        [
          0,
          6,
          false
        ]
      ],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "car_1",
    "query": "SELECT T1.FullName ,  T1.Id ,  count(*) FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id  =  T2.Maker GROUP BY T1.Id;",
    "query_toks": [
      "SELECT",
      "T1.FullName",
      ",",
      "T1.Id",
      ",",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "CAR_MAKERS",
      "AS",
      "T1",
      "JOIN",
      "MODEL_LIST",
      "AS",
      "T2",
      "ON",
      "T1.Id",
      "=",
      "T2.Maker",
      "GROUP",
      "BY",
      "T1.Id",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "t1",
      ".",
      "fullname",
      ",",
      "t1",
      ".",
      "id",
      ",",
      "count",
      "(",
      "*",
      ")",
      "from",
      "car_makers",
      "as",
      "t1",
      "join",
      "model_list",
      "as",
      "t2",
      "on",
      "t1",
      ".",
      "id",
      "=",
      "t2",
      ".",
      "maker",
      "group",
      "by",
      "t1",
      ".",
      "id"
    ],
    "question": "What is the full name of each car maker, along with its id and how many models it produces?",
    "question_toks": [
      "What",
      "is",
      "the",
      "full",
      "name",
      "of",
      "each",
      "car",
      "maker",
      ",",
      "along",
      "with",
      "its",
      "id",
      "and",
      "how",
      "many",
      "models",
      "it",
      "produces",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            2
          ],
          [
            "table_unit",
            3
          ]
        ],
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                6,
                false
              ],
              null
            ],
            [
              0,
              11,
              false
            ],
            null
          ]
        ]
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                8,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                6,
                false
              ],
              null
            ]
          ],
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [
        [
          0,
          6,
          false
        ]
      ],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "car_1",
    "query": "SELECT T1.Model FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id ORDER BY T2.horsepower ASC LIMIT 1;",
    "query_toks": [
      "SELECT",
      "T1.Model",
      "FROM",
      "CAR_NAMES",
      "AS",
      "T1",
      "JOIN",
      "CARS_DATA",
      "AS",
      "T2",
      "ON",
      "T1.MakeId",
      "=",
      "T2.Id",
      "ORDER",
      "BY",
      "T2.horsepower",
      "ASC",
      "LIMIT",
      "1",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "t1",
      ".",
      "model",
      "from",
      "car_names",
      "as",
      "t1",
      "join",
      "cars_data",
      "as",
      "t2",
      "on",
      "t1",
      ".",
      "makeid",
      "=",
      "t2",
      ".",
      "id",
      "order",
      "by",
      "t2",
      ".",
      "horsepower",
      "asc",
      "limit",
      "value"
    ],
    "question": "Which model of the car has the minimum horsepower?",
    "question_toks": [
      "Which",
      "model",
      "of",
      "the",
      "car",
      "has",
      "the",
      "minimum",
      "horsepower",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            4
          ],
          [
            "table_unit",
            5
          ]
        ],
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                13,
                false
              ],
              null
            ],
            [
              0,
              16,
              false
            ],
            null
          ]
        ]
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                14,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [
        "asc",
        [
          [
            0,
            [
              0,
              20,
              false
            ],
            null
          ]
        ]
      ],
      "limit": 1,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "car_1",
    "query": "SELECT T1.Model FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id ORDER BY T2.horsepower ASC LIMIT 1;",
    "query_toks": [
      "SELECT",
      "T1.Model",
      "FROM",
      "CAR_NAMES",
      "AS",
      "T1",
      "JOIN",
      "CARS_DATA",
      "AS",
      "T2",
      "ON",
      "T1.MakeId",
      "=",
      "T2.Id",
      "ORDER",
      "BY",
      "T2.horsepower",
      "ASC",
      "LIMIT",
      "1",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "t1",
      ".",
      "model",
      "from",
      "car_names",
      "as",
      "t1",
      "join",
      "cars_data",
      "as",
      "t2",
      "on",
      "t1",
      ".",
      "makeid",
      "=",
      "t2",
      ".",
      "id",
      "order",
      "by",
      "t2",
      ".",
      "horsepower",
      "asc",
      "limit",
      "value"
    ],
    "question": "What is the model of the car with the smallest amount of horsepower?",
    "question_toks": [
      "What",
      "is",
      "the",
      "model",
      "of",
      "the",
      "car",
      "with",
      "the",
      "smallest",
      "amount",
      "of",
      "horsepower",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            4
          ],
          [
            "table_unit",
            5
          ]
        ],
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                13,
                false
              ],
              null
            ],
            [
              0,
              16,
              false
            ],
            null
          ]
        ]
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                14,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [
        "asc",
        [
          [
            0,
            [
              0,
              20,
              false
            ],
            null
          ]
        ]
      ],
      "limit": 1,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "car_1",
    "query": "SELECT T1.model FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id WHERE T2.Weight  <  (SELECT avg(Weight) FROM CARS_DATA)",
    "query_toks": [
      "SELECT",
      "T1.model",
      "FROM",
      "CAR_NAMES",
      "AS",
      "T1",
      "JOIN",
      "CARS_DATA",
      "AS",
      "T2",
      "ON",
      "T1.MakeId",
      "=",
      "T2.Id",
      "WHERE",
      "T2.Weight",
      "<",
      "(",
      "SELECT",
      "avg",
      "(",
      "Weight",
      ")",
      "FROM",
      "CARS_DATA",
      ")"
    ],
    "query_toks_no_value": [
      "select",
      "t1",
      ".",
      "model",
      "from",
      "car_names",
      "as",
      "t1",
      "join",
      "cars_data",
      "as",
      "t2",
      "on",
      "t1",
      ".",
      "makeid",
      "=",
      "t2",
      ".",
      "id",
      "where",
      "t2",
      ".",
      "weight",
      "<",
      "(",
      "select",
      "avg",
      "(",
      "weight",
      ")",
      "from",
      "cars_data",
      ")"
    ],
    "question": "Find the model of the car whose weight is below the average weight.",
    "question_toks": [
      "Find",
      "the",
      "model",
      "of",
      "the",
      "car",
      "whose",
      "weight",
      "is",
      "below",
      "the",
      "average",
      "weight",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            4
          ],
          [
            "table_unit",
            5
          ]
        ],
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                13,
                false
              ],
              null
            ],
            [
              0,
              16,
              false
            ],
            null
          ]
        ]
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                14,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          4,
          [
            0,
            [
              0,
              21,
              false
            ],
            null
          ],
          {
            "from": {
              "table_units": [
                [
                  "table_unit",
                  5
                ]
              ],
              "conds": []
            },
            "select": [
              false,
              [
                [
                  5,
                  [
                    0,
                    [
                      0,
                      21,
                      false
                    ],
                    null
                  ]
                ]
              ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
          },
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "car_1",
    "query": "SELECT T1.model FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id WHERE T2.Weight  <  (SELECT avg(Weight) FROM CARS_DATA)",
    "query_toks": [
      "SELECT",
      "T1.model",
      "FROM",
      "CAR_NAMES",
      "AS",
      "T1",
      "JOIN",
      "CARS_DATA",
      "AS",
      "T2",
      "ON",
      "T1.MakeId",
      "=",
      "T2.Id",
      "WHERE",
      "T2.Weight",
      "<",
      "(",
      "SELECT",
      "avg",
      "(",
      "Weight",
      ")",
      "FROM",
      "CARS_DATA",
      ")"
    ],
    "query_toks_no_value": [
      "select",
      "t1",
      ".",
      "model",
      "from",
      "car_names",
      "as",
      "t1",
      "join",
      "cars_data",
      "as",
      "t2",
      "on",
      "t1",
      ".",
      "makeid",
      "=",
      "t2",
      ".",
      "id",
      "where",
      "t2",
      ".",
      "weight",
      "<",
      "(",
      "select",
      "avg",
      "(",
      "weight",
      ")",
      "from",
      "cars_data",
      ")"
    ],
    "question": "What is the model for the car with a weight smaller than the average?",
    "question_toks": [
      "What",
      "is",
      "the",
      "model",
      "for",
      "the",
      "car",
      "with",
      "a",
      "weight",
      "smaller",
      "than",
      "the",
      "average",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            4
          ],
          [
            "table_unit",
            5
          ]
        ],
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                13,
                false
              ],
              null
            ],
            [
              0,
              16,
              false
            ],
            null
          ]
        ]
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                14,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          4,
          [
            0,
            [
              0,
              21,
              false
            ],
            null
          ],
          {
            "from": {
              "table_units": [
                [
                  "table_unit",
                  5
                ]
              ],
              "conds": []
            },
            "select": [
              false,
              [
                [
                  5,
                  [
                    0,
                    [
                      0,
                      21,
                      false
                    ],
                    null
                  ]
                ]
              ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
          },
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "car_1",
    "query": "SELECT DISTINCT T1.Maker FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id  =  T2.Maker JOIN CAR_NAMES AS T3 ON T2.model  =  T3.model JOIN CARS_DATA AS T4 ON T3.MakeId  =  T4.id WHERE T4.year  =  '1970';",
    "query_toks": [
      "SELECT",
      "DISTINCT",
      "T1.Maker",
      "FROM",
      "CAR_MAKERS",
      "AS",
      "T1",
      "JOIN",
      "MODEL_LIST",
      "AS",
      "T2",
      "ON",
      "T1.Id",
      "=",
      "T2.Maker",
      "JOIN",
      "CAR_NAMES",
      "AS",
      "T3",
      "ON",
      "T2.model",
      "=",
      "T3.model",
      "JOIN",
      "CARS_DATA",
      "AS",
      "T4",
      "ON",
      "T3.MakeId",
      "=",
      "T4.id",
      "WHERE",
      "T4.year",
      "=",
      "'1970",
      "'",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "distinct",
      "t1",
      ".",
      "maker",
      "from",
      "car_makers",
      "as",
      "t1",
      "join",
      "model_list",
      "as",
      "t2",
      "on",
      "t1",
      ".",
      "id",
      "=",
      "t2",
      ".",
      "maker",
      "join",
      "car_names",
      "as",
      "t3",
      "on",
      "t2",
      ".",
      "model",
      "=",
      "t3",
      ".",
      "model",
      "join",
      "cars_data",
      "as",
      "t4",
      "on",
      "t3",
      ".",
      "makeid",
      "=",
      "t4",
      ".",
      "id",
      "where",
      "t4",
      ".",
      "year",
      "=",
      "value"
    ],
    "question": "Find the name of the makers that produced some cars in the year of 1970?",
    "question_toks": [
      "Find",
      "the",
      "name",
      "of",
      "the",
      "makers",
      "that",
      "produced",
      "some",
      "cars",
      "in",
      "the",
      "year",
      "of",
      "1970",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            2
          ],
          [
            "table_unit",
            3
          ],
          [
            "table_unit",
            4
          ],
          [
            "table_unit",
            5
          ]
        ],
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                6,
                false
              ],
              null
            ],
            [
              0,
              11,
              false
            ],
            null
          ],
          "and",
          [
            false,
            2,
            [
              0,
              [
                0,
                12,
                false
              ],
              null
            ],
            [
              0,
              14,
              false
            ],
            null
          ],
          "and",
          [
            false,
            2,
            [
              0,
              [
                0,
                13,
                false
              ],
              null
            ],
            [
              0,
              16,
              false
            ],
            null
          ]
        ]
      },
      "select": [
        true,
        [
          [
            0,
            [
              0,
              [
                0,
                7,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              23,
              false
            ],
            null
          ],
          "\"1970\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  }
]